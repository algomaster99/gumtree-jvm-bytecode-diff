{"diffoscope-json-version": 1, "source1": "first/UTF8StreamJsonParser.class", "source2": "second/UTF8StreamJsonParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,355 +1,355 @@\n-  SHA-256 checksum ce06ea6ea6938a99d3a8d72dd9e544b5d6d4b316132d0a8261fe7d16d45cb68a\n+  SHA-256 checksum ad5228a821d2b0f04d4f78f353cabd5af1547641a14099616117f469eeceb61d\n   Compiled from \"UTF8StreamJsonParser.java\"\n public class com.fasterxml.jackson.core.json.UTF8StreamJsonParser extends com.fasterxml.jackson.core.base.ParserBase\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #309                        // com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n   super_class: #342                       // com/fasterxml/jackson/core/base/ParserBase\n   interfaces: 0, fields: 22, methods: 113, attributes: 2\n Constant pool:\n-     #1 = Class              #657         // com/fasterxml/jackson/core/JsonTokenId\n-     #2 = Methodref          #309.#658    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILjava/io/InputStream;Lcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;[BIIIZ)V\n-     #3 = Methodref          #342.#659    // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-     #4 = Fieldref           #309.#660    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._quadBuffer:[I\n-     #5 = Fieldref           #309.#661    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputStream:Ljava/io/InputStream;\n-     #6 = Fieldref           #309.#662    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n-     #7 = Fieldref           #309.#663    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-     #8 = Fieldref           #309.#664    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputBuffer:[B\n-     #9 = Fieldref           #309.#665    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputPtr:I\n-    #10 = Fieldref           #309.#666    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputEnd:I\n-    #11 = Fieldref           #309.#667    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputRowStart:I\n-    #12 = Fieldref           #309.#668    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputProcessed:J\n-    #13 = Fieldref           #309.#669    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._bufferRecyclable:Z\n-    #14 = Fieldref           #309.#670    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-    #15 = Methodref          #671.#672    // java/io/OutputStream.write:([BII)V\n-    #16 = Methodref          #673.#674    // java/io/InputStream.read:([BII)I\n-    #17 = Fieldref           #309.#675    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartOffset:I\n-    #18 = Methodref          #309.#676    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeInput:()V\n-    #19 = Class              #677         // java/io/IOException\n-    #20 = Class              #678         // java/lang/StringBuilder\n-    #21 = Methodref          #20.#679     // java/lang/StringBuilder.\"<init>\":()V\n-    #22 = String             #680         // InputStream.read() returned 0 characters when trying to read\n-    #23 = Methodref          #20.#681     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #24 = Methodref          #20.#682     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #25 = String             #683         //  bytes\n-    #26 = Methodref          #20.#684     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-    #27 = Methodref          #19.#685     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-    #28 = Fieldref           #309.#686    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-    #29 = Methodref          #687.#688    // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n-    #30 = Fieldref           #689.#690    // com/fasterxml/jackson/core/JsonParser$Feature.AUTO_CLOSE_SOURCE:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-    #31 = Methodref          #309.#691    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-    #32 = Methodref          #673.#692    // java/io/InputStream.close:()V\n-    #33 = Methodref          #342.#693    // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n-    #34 = Methodref          #694.#695    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n-    #35 = Fieldref           #309.#696    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.NO_BYTES:[B\n-    #36 = Methodref          #687.#697    // com/fasterxml/jackson/core/io/IOContext.releaseReadIOBuffer:([B)V\n-    #37 = Fieldref           #309.#698    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-    #38 = Fieldref           #699.#700    // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-    #39 = Fieldref           #309.#701    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenIncomplete:Z\n-    #40 = Methodref          #309.#702    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishAndReturnString:()Ljava/lang/String;\n-    #41 = Fieldref           #309.#703    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-    #42 = Methodref          #704.#705    // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n-    #43 = Methodref          #309.#706    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-    #44 = Methodref          #309.#707    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishString:()V\n-    #45 = Methodref          #704.#708    // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n-    #46 = Fieldref           #699.#709    // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-    #47 = Fieldref           #309.#710    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-    #48 = Methodref          #711.#712    // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n-    #49 = Methodref          #713.#714    // java/io/Writer.write:(Ljava/lang/String;)V\n-    #50 = Methodref          #227.#715    // java/lang/String.length:()I\n-    #51 = Methodref          #699.#716    // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n-    #52 = Methodref          #699.#717    // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n-    #53 = Methodref          #713.#718    // java/io/Writer.write:([C)V\n-    #54 = Methodref          #309.#712    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getCurrentName:()Ljava/lang/String;\n-    #55 = Methodref          #342.#719    // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-    #56 = Fieldref           #699.#720    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #57 = Fieldref           #699.#721    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #58 = Fieldref           #309.#722    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._numTypesValid:I\n-    #59 = Class              #723         // com/fasterxml/jackson/core/base/ParserMinimalBase\n-    #60 = Methodref          #309.#724    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseIntValue:()I\n-    #61 = Methodref          #309.#725    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.convertNumberToInt:()V\n-    #62 = Fieldref           #309.#726    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._numberInt:I\n-    #63 = Methodref          #342.#727    // com/fasterxml/jackson/core/base/ParserBase.getValueAsInt:(I)I\n-    #64 = Methodref          #699.#728    // com/fasterxml/jackson/core/JsonToken.id:()I\n-    #65 = Methodref          #699.#729    // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n-    #66 = Fieldref           #309.#730    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameCopied:Z\n-    #67 = Fieldref           #309.#731    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameCopyBuffer:[C\n-    #68 = Methodref          #687.#732    // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n-    #69 = Methodref          #227.#733    // java/lang/String.getChars:(II[CI)V\n-    #70 = Methodref          #704.#734    // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n-    #71 = Methodref          #704.#735    // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n-    #72 = Methodref          #704.#736    // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n-    #73 = Fieldref           #699.#737    // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-    #74 = Fieldref           #309.#738    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._binaryValue:[B\n-    #75 = String             #739         // Current token (\n-    #76 = Methodref          #20.#740     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-    #77 = String             #741         // ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-    #78 = Methodref          #309.#742    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;)V\n-    #79 = Methodref          #309.#743    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-    #80 = Class              #744         // java/lang/IllegalArgumentException\n-    #81 = String             #745         // Failed to decode VALUE_STRING as base64 (\n-    #82 = String             #746         // ):\n-    #83 = Methodref          #80.#747     // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n-    #84 = Methodref          #309.#748    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-    #85 = Methodref          #309.#749    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-    #86 = Methodref          #309.#750    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getText:()Ljava/lang/String;\n-    #87 = Methodref          #309.#751    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-    #88 = Methodref          #752.#753    // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n-    #89 = Methodref          #309.#754    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-    #90 = Methodref          #671.#755    // java/io/OutputStream.write:([B)V\n-    #91 = Methodref          #687.#756    // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n-    #92 = Methodref          #309.#757    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-    #93 = Methodref          #687.#758    // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n-    #94 = Methodref          #309.#759    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._loadMoreGuaranteed:()V\n-    #95 = Methodref          #97.#760     // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(I)I\n-    #96 = Methodref          #309.#761    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-    #97 = Class              #762         // com/fasterxml/jackson/core/Base64Variant\n-    #98 = Methodref          #97.#763     // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n-    #99 = Methodref          #309.#764    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #100 = Methodref          #97.#765     // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(I)Z\n-   #101 = String             #766         // expected padding character \\'\n-   #102 = Methodref          #97.#767     // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n-   #103 = Methodref          #20.#768     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #104 = String             #769         // \\'\n-   #105 = Methodref          #309.#770    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-   #106 = Methodref          #309.#771    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #107 = Methodref          #309.#772    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipString:()V\n-   #108 = Methodref          #309.#773    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd:()I\n-   #109 = Methodref          #309.#692    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.close:()V\n-   #110 = Methodref          #309.#774    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeArrayScope:()V\n-   #111 = Fieldref           #699.#775    // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #112 = Methodref          #309.#776    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope:()V\n-   #113 = Fieldref           #699.#777    // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #114 = Methodref          #711.#778    // com/fasterxml/jackson/core/json/JsonReadContext.expectComma:()Z\n-   #115 = String             #779         // was expecting comma to separate\n-   #116 = Methodref          #711.#780    // com/fasterxml/jackson/core/json/JsonReadContext.typeDesc:()Ljava/lang/String;\n-   #117 = String             #781         //  entries\n-   #118 = Methodref          #309.#782    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportUnexpectedChar:(ILjava/lang/String;)V\n-   #119 = Methodref          #309.#783    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS:()I\n-   #120 = Fieldref           #309.#784    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._features:I\n-   #121 = Fieldref           #309.#785    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_TRAILING_COMMA:I\n-   #122 = Methodref          #309.#786    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeScope:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #123 = Methodref          #711.#787    // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n-   #124 = Methodref          #309.#788    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._updateLocation:()V\n-   #125 = Methodref          #309.#789    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #126 = Methodref          #309.#790    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._updateNameLocation:()V\n-   #127 = Methodref          #309.#791    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName:(I)Ljava/lang/String;\n-   #128 = Methodref          #711.#792    // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n-   #129 = Methodref          #309.#793    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon:()I\n-   #130 = Fieldref           #309.#794    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #131 = Methodref          #309.#795    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #132 = Fieldref           #796.#797    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #133 = Methodref          #796.#798    // com/fasterxml/jackson/core/json/JsonReadFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #134 = Methodref          #309.#799    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #135 = Methodref          #309.#800    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #136 = Methodref          #309.#801    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #137 = Methodref          #309.#802    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchFalse:()V\n-   #138 = Fieldref           #699.#803    // com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #139 = Methodref          #309.#804    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchNull:()V\n-   #140 = Fieldref           #699.#805    // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #141 = Methodref          #309.#806    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchTrue:()V\n-   #142 = Fieldref           #699.#807    // com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #143 = Fieldref           #699.#808    // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #144 = Fieldref           #699.#809    // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #145 = Fieldref           #309.#810    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputRow:I\n-   #146 = Fieldref           #309.#811    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputCol:I\n-   #147 = Methodref          #309.#812    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.createChildArrayContext:(II)V\n-   #148 = Methodref          #309.#813    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.createChildObjectContext:(II)V\n-   #149 = InterfaceMethodref #814.#815    // com/fasterxml/jackson/core/SerializableString.asQuotedUTF8:()[B\n-   #150 = InterfaceMethodref #814.#816    // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #151 = Methodref          #309.#817    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColonFast:(I)I\n-   #152 = Methodref          #309.#818    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._isNextTokenNameYes:(I)V\n-   #153 = Methodref          #309.#819    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._isNextTokenNameMaybe:(ILcom/fasterxml/jackson/core/SerializableString;)Z\n-   #154 = Methodref          #309.#820    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon2:(Z)I\n-   #155 = Methodref          #227.#821    // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #156 = Methodref          #309.#822    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #157 = Methodref          #309.#823    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getIntValue:()I\n-   #158 = Methodref          #309.#824    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getLongValue:()J\n-   #159 = Fieldref           #825.#826    // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #160 = Fieldref           #825.#827    // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-   #161 = Fieldref           #796.#828    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #162 = Methodref          #704.#829    // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n-   #163 = Methodref          #309.#830    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #164 = Methodref          #309.#831    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyNoLeadingZeroes:()I\n-   #165 = Methodref          #832.#833    // java/lang/Math.min:(II)I\n-   #166 = Methodref          #309.#834    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseNumber2:([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #167 = Methodref          #704.#835    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentLength:(I)V\n-   #168 = Methodref          #711.#836    // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n-   #169 = Methodref          #309.#837    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyRootSpace:(I)V\n-   #170 = Methodref          #309.#838    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #171 = Methodref          #309.#839    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #172 = Methodref          #309.#840    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._loadMore:()Z\n-   #173 = Methodref          #704.#841    // com/fasterxml/jackson/core/util/TextBuffer.finishCurrentSegment:()[C\n-   #174 = Fieldref           #309.#842    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_LEADING_ZEROS:I\n-   #175 = String             #843         // Leading zeroes not allowed\n-   #176 = Methodref          #309.#844    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.reportInvalidNumber:(Ljava/lang/String;)V\n-   #177 = Fieldref           #796.#845    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #178 = String             #846         // Decimal point not followed by a digit\n-   #179 = Methodref          #309.#847    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #180 = String             #848         // Exponent indicator not followed by a digit\n-   #181 = Methodref          #309.#849    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-   #182 = Fieldref           #309.#850    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputRow:I\n-   #183 = Methodref          #309.#851    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportMissingRootWS:(I)V\n-   #184 = Methodref          #309.#852    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleOddName:(I)Ljava/lang/String;\n-   #185 = Methodref          #309.#853    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.slowParseName:()Ljava/lang/String;\n-   #186 = Fieldref           #309.#854    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._icLatin1:[I\n-   #187 = Fieldref           #309.#855    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._quad1:I\n-   #188 = Methodref          #309.#856    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName:(I)Ljava/lang/String;\n-   #189 = Methodref          #309.#857    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(II)Ljava/lang/String;\n-   #190 = Methodref          #309.#858    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(III)Ljava/lang/String;\n-   #191 = String             #859         //\n-   #192 = Methodref          #309.#860    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(III)Ljava/lang/String;\n-   #193 = Methodref          #309.#861    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(IIII)Ljava/lang/String;\n-   #194 = Methodref          #309.#862    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2:(II)Ljava/lang/String;\n-   #195 = Methodref          #309.#863    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(IIII)Ljava/lang/String;\n-   #196 = Methodref          #309.#864    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(IIIII)Ljava/lang/String;\n-   #197 = Methodref          #309.#865    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName:(III)Ljava/lang/String;\n-   #198 = Methodref          #309.#866    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:([IIII)Ljava/lang/String;\n-   #199 = Methodref          #309.#867    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseEscapedName:([IIIII)Ljava/lang/String;\n-   #200 = Methodref          #309.#868    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.growArrayBy:([II)[I\n-   #201 = String             #869         // : was expecting closing \\'\\\"\\' for name\n-   #202 = Methodref          #309.#870    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+     #1 = Class              #652         // com/fasterxml/jackson/core/JsonTokenId\n+     #2 = Methodref          #309.#653    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILjava/io/InputStream;Lcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;[BIIIZ)V\n+     #3 = Methodref          #342.#654    // com/fasterxml/jackson/core/base/ParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+     #4 = Fieldref           #309.#655    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._quadBuffer:[I\n+     #5 = Fieldref           #309.#656    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputStream:Ljava/io/InputStream;\n+     #6 = Fieldref           #309.#657    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n+     #7 = Fieldref           #309.#658    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+     #8 = Fieldref           #309.#659    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputBuffer:[B\n+     #9 = Fieldref           #309.#660    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputPtr:I\n+    #10 = Fieldref           #309.#661    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._inputEnd:I\n+    #11 = Fieldref           #309.#662    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputRowStart:I\n+    #12 = Fieldref           #309.#663    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputProcessed:J\n+    #13 = Fieldref           #309.#664    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._bufferRecyclable:Z\n+    #14 = Fieldref           #309.#665    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+    #15 = Methodref          #461.#666    // java/io/OutputStream.write:([BII)V\n+    #16 = Methodref          #667.#668    // java/io/InputStream.read:([BII)I\n+    #17 = Fieldref           #309.#669    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartOffset:I\n+    #18 = Methodref          #309.#670    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeInput:()V\n+    #19 = Class              #671         // java/io/IOException\n+    #20 = Class              #672         // java/lang/StringBuilder\n+    #21 = Methodref          #20.#673     // java/lang/StringBuilder.\"<init>\":()V\n+    #22 = String             #674         // InputStream.read() returned 0 characters when trying to read\n+    #23 = Methodref          #20.#675     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #24 = Methodref          #20.#676     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+    #25 = String             #677         //  bytes\n+    #26 = Methodref          #20.#678     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+    #27 = Methodref          #19.#679     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+    #28 = Fieldref           #309.#680    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+    #29 = Methodref          #681.#682    // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n+    #30 = Fieldref           #683.#684    // com/fasterxml/jackson/core/JsonParser$Feature.AUTO_CLOSE_SOURCE:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+    #31 = Methodref          #309.#685    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+    #32 = Methodref          #667.#686    // java/io/InputStream.close:()V\n+    #33 = Methodref          #342.#687    // com/fasterxml/jackson/core/base/ParserBase._releaseBuffers:()V\n+    #34 = Methodref          #688.#689    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release:()V\n+    #35 = Fieldref           #309.#690    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.NO_BYTES:[B\n+    #36 = Methodref          #681.#691    // com/fasterxml/jackson/core/io/IOContext.releaseReadIOBuffer:([B)V\n+    #37 = Fieldref           #309.#692    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+    #38 = Fieldref           #435.#693    // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+    #39 = Fieldref           #309.#694    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenIncomplete:Z\n+    #40 = Methodref          #309.#695    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishAndReturnString:()Ljava/lang/String;\n+    #41 = Fieldref           #309.#696    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+    #42 = Methodref          #697.#698    // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n+    #43 = Methodref          #309.#699    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+    #44 = Methodref          #309.#700    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishString:()V\n+    #45 = Methodref          #697.#701    // com/fasterxml/jackson/core/util/TextBuffer.contentsToWriter:(Ljava/io/Writer;)I\n+    #46 = Fieldref           #435.#702    // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+    #47 = Fieldref           #309.#703    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+    #48 = Methodref          #704.#705    // com/fasterxml/jackson/core/json/JsonReadContext.getCurrentName:()Ljava/lang/String;\n+    #49 = Methodref          #706.#707    // java/io/Writer.write:(Ljava/lang/String;)V\n+    #50 = Methodref          #227.#708    // java/lang/String.length:()I\n+    #51 = Methodref          #435.#709    // com/fasterxml/jackson/core/JsonToken.isNumeric:()Z\n+    #52 = Methodref          #435.#710    // com/fasterxml/jackson/core/JsonToken.asCharArray:()[C\n+    #53 = Methodref          #706.#711    // java/io/Writer.write:([C)V\n+    #54 = Methodref          #309.#705    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getCurrentName:()Ljava/lang/String;\n+    #55 = Methodref          #342.#712    // com/fasterxml/jackson/core/base/ParserBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+    #56 = Fieldref           #435.#713    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #57 = Fieldref           #435.#714    // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #58 = Fieldref           #309.#715    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._numTypesValid:I\n+    #59 = Class              #716         // com/fasterxml/jackson/core/base/ParserMinimalBase\n+    #60 = Methodref          #309.#717    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseIntValue:()I\n+    #61 = Methodref          #309.#718    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.convertNumberToInt:()V\n+    #62 = Fieldref           #309.#719    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._numberInt:I\n+    #63 = Methodref          #342.#720    // com/fasterxml/jackson/core/base/ParserBase.getValueAsInt:(I)I\n+    #64 = Methodref          #435.#721    // com/fasterxml/jackson/core/JsonToken.id:()I\n+    #65 = Methodref          #435.#722    // com/fasterxml/jackson/core/JsonToken.asString:()Ljava/lang/String;\n+    #66 = Fieldref           #309.#723    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameCopied:Z\n+    #67 = Fieldref           #309.#724    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameCopyBuffer:[C\n+    #68 = Methodref          #681.#725    // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n+    #69 = Methodref          #227.#726    // java/lang/String.getChars:(II[CI)V\n+    #70 = Methodref          #697.#727    // com/fasterxml/jackson/core/util/TextBuffer.getTextBuffer:()[C\n+    #71 = Methodref          #697.#728    // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n+    #72 = Methodref          #697.#729    // com/fasterxml/jackson/core/util/TextBuffer.getTextOffset:()I\n+    #73 = Fieldref           #435.#730    // com/fasterxml/jackson/core/JsonToken.VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+    #74 = Fieldref           #309.#731    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._binaryValue:[B\n+    #75 = String             #732         // Current token (\n+    #76 = Methodref          #20.#733     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+    #77 = String             #734         // ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+    #78 = Methodref          #309.#735    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;)V\n+    #79 = Methodref          #309.#736    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+    #80 = Class              #737         // java/lang/IllegalArgumentException\n+    #81 = String             #738         // Failed to decode VALUE_STRING as base64 (\n+    #82 = String             #739         // ):\n+    #83 = Methodref          #80.#740     // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n+    #84 = Methodref          #309.#741    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+    #85 = Methodref          #309.#742    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+    #86 = Methodref          #309.#743    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getText:()Ljava/lang/String;\n+    #87 = Methodref          #309.#744    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+    #88 = Methodref          #638.#745    // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+    #89 = Methodref          #309.#746    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+    #90 = Methodref          #461.#747    // java/io/OutputStream.write:([B)V\n+    #91 = Methodref          #681.#748    // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n+    #92 = Methodref          #309.#749    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+    #93 = Methodref          #681.#750    // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n+    #94 = Methodref          #309.#751    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._loadMoreGuaranteed:()V\n+    #95 = Methodref          #97.#752     // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(I)I\n+    #96 = Methodref          #309.#753    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+    #97 = Class              #754         // com/fasterxml/jackson/core/Base64Variant\n+    #98 = Methodref          #97.#755     // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n+    #99 = Methodref          #309.#756    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #100 = Methodref          #97.#757     // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(I)Z\n+   #101 = String             #758         // expected padding character \\'\n+   #102 = Methodref          #97.#759     // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n+   #103 = Methodref          #20.#760     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #104 = String             #761         // \\'\n+   #105 = Methodref          #309.#762    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+   #106 = Methodref          #309.#763    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #107 = Methodref          #309.#764    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipString:()V\n+   #108 = Methodref          #309.#765    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd:()I\n+   #109 = Methodref          #309.#686    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.close:()V\n+   #110 = Methodref          #309.#766    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeArrayScope:()V\n+   #111 = Fieldref           #435.#767    // com/fasterxml/jackson/core/JsonToken.END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #112 = Methodref          #309.#768    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeObjectScope:()V\n+   #113 = Fieldref           #435.#769    // com/fasterxml/jackson/core/JsonToken.END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #114 = Methodref          #704.#770    // com/fasterxml/jackson/core/json/JsonReadContext.expectComma:()Z\n+   #115 = String             #771         // was expecting comma to separate\n+   #116 = Methodref          #704.#772    // com/fasterxml/jackson/core/json/JsonReadContext.typeDesc:()Ljava/lang/String;\n+   #117 = String             #773         //  entries\n+   #118 = Methodref          #309.#774    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportUnexpectedChar:(ILjava/lang/String;)V\n+   #119 = Methodref          #309.#775    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS:()I\n+   #120 = Fieldref           #309.#776    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._features:I\n+   #121 = Fieldref           #309.#777    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_TRAILING_COMMA:I\n+   #122 = Methodref          #309.#778    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._closeScope:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #123 = Methodref          #704.#779    // com/fasterxml/jackson/core/json/JsonReadContext.inObject:()Z\n+   #124 = Methodref          #309.#780    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._updateLocation:()V\n+   #125 = Methodref          #309.#781    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #126 = Methodref          #309.#782    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._updateNameLocation:()V\n+   #127 = Methodref          #309.#783    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName:(I)Ljava/lang/String;\n+   #128 = Methodref          #704.#784    // com/fasterxml/jackson/core/json/JsonReadContext.setCurrentName:(Ljava/lang/String;)V\n+   #129 = Methodref          #309.#785    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon:()I\n+   #130 = Fieldref           #309.#786    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #131 = Methodref          #309.#787    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #132 = Fieldref           #788.#789    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #133 = Methodref          #788.#790    // com/fasterxml/jackson/core/json/JsonReadFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #134 = Methodref          #309.#791    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #135 = Methodref          #309.#792    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #136 = Methodref          #309.#793    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #137 = Methodref          #309.#794    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchFalse:()V\n+   #138 = Fieldref           #435.#795    // com/fasterxml/jackson/core/JsonToken.VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #139 = Methodref          #309.#796    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchNull:()V\n+   #140 = Fieldref           #435.#797    // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #141 = Methodref          #309.#798    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchTrue:()V\n+   #142 = Fieldref           #435.#799    // com/fasterxml/jackson/core/JsonToken.VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #143 = Fieldref           #435.#800    // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #144 = Fieldref           #435.#801    // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #145 = Fieldref           #309.#802    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputRow:I\n+   #146 = Fieldref           #309.#803    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputCol:I\n+   #147 = Methodref          #309.#804    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.createChildArrayContext:(II)V\n+   #148 = Methodref          #309.#805    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.createChildObjectContext:(II)V\n+   #149 = InterfaceMethodref #487.#806    // com/fasterxml/jackson/core/SerializableString.asQuotedUTF8:()[B\n+   #150 = InterfaceMethodref #487.#807    // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+   #151 = Methodref          #309.#808    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColonFast:(I)I\n+   #152 = Methodref          #309.#809    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._isNextTokenNameYes:(I)V\n+   #153 = Methodref          #309.#810    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._isNextTokenNameMaybe:(ILcom/fasterxml/jackson/core/SerializableString;)Z\n+   #154 = Methodref          #309.#811    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipColon2:(Z)I\n+   #155 = Methodref          #227.#812    // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #156 = Methodref          #309.#813    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #157 = Methodref          #309.#814    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getIntValue:()I\n+   #158 = Methodref          #309.#815    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.getLongValue:()J\n+   #159 = Fieldref           #816.#817    // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #160 = Fieldref           #816.#818    // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+   #161 = Fieldref           #788.#819    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #162 = Methodref          #697.#820    // com/fasterxml/jackson/core/util/TextBuffer.emptyAndGetCurrentSegment:()[C\n+   #163 = Methodref          #309.#821    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #164 = Methodref          #309.#822    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyNoLeadingZeroes:()I\n+   #165 = Methodref          #823.#824    // java/lang/Math.min:(II)I\n+   #166 = Methodref          #309.#825    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseNumber2:([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #167 = Methodref          #697.#826    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentLength:(I)V\n+   #168 = Methodref          #704.#827    // com/fasterxml/jackson/core/json/JsonReadContext.inRoot:()Z\n+   #169 = Methodref          #309.#828    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._verifyRootSpace:(I)V\n+   #170 = Methodref          #309.#829    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #171 = Methodref          #309.#830    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #172 = Methodref          #309.#831    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._loadMore:()Z\n+   #173 = Methodref          #697.#832    // com/fasterxml/jackson/core/util/TextBuffer.finishCurrentSegment:()[C\n+   #174 = Fieldref           #309.#833    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_LEADING_ZEROS:I\n+   #175 = String             #834         // Leading zeroes not allowed\n+   #176 = Methodref          #309.#835    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.reportInvalidNumber:(Ljava/lang/String;)V\n+   #177 = Fieldref           #788.#836    // com/fasterxml/jackson/core/json/JsonReadFeature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #178 = String             #837         // Decimal point not followed by a digit\n+   #179 = Methodref          #309.#838    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #180 = String             #839         // Exponent indicator not followed by a digit\n+   #181 = Methodref          #309.#840    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+   #182 = Fieldref           #309.#841    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._currInputRow:I\n+   #183 = Methodref          #309.#842    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportMissingRootWS:(I)V\n+   #184 = Methodref          #309.#843    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleOddName:(I)Ljava/lang/String;\n+   #185 = Methodref          #309.#844    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.slowParseName:()Ljava/lang/String;\n+   #186 = Fieldref           #309.#845    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._icLatin1:[I\n+   #187 = Fieldref           #309.#846    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._quad1:I\n+   #188 = Methodref          #309.#847    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName:(I)Ljava/lang/String;\n+   #189 = Methodref          #309.#848    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(II)Ljava/lang/String;\n+   #190 = Methodref          #309.#849    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(III)Ljava/lang/String;\n+   #191 = String             #850         //\n+   #192 = Methodref          #309.#851    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(III)Ljava/lang/String;\n+   #193 = Methodref          #309.#852    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(IIII)Ljava/lang/String;\n+   #194 = Methodref          #309.#853    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2:(II)Ljava/lang/String;\n+   #195 = Methodref          #309.#854    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:(IIII)Ljava/lang/String;\n+   #196 = Methodref          #309.#855    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseName:(IIIII)Ljava/lang/String;\n+   #197 = Methodref          #309.#856    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName:(III)Ljava/lang/String;\n+   #198 = Methodref          #309.#857    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.findName:([IIII)Ljava/lang/String;\n+   #199 = Methodref          #309.#858    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseEscapedName:([IIIII)Ljava/lang/String;\n+   #200 = Methodref          #309.#859    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.growArrayBy:([II)[I\n+   #201 = String             #860         // : was expecting closing \\'\\\"\\' for name\n+   #202 = Methodref          #309.#861    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n    #203 = String             #446         // name\n-   #204 = Methodref          #309.#871    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._throwUnquotedSpace:(ILjava/lang/String;)V\n-   #205 = Methodref          #309.#872    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeEscaped:()C\n-   #206 = String             #873         //  in field name\n-   #207 = Methodref          #309.#874    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._padLastQuad:(II)I\n-   #208 = Methodref          #694.#875    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:([II)Ljava/lang/String;\n-   #209 = Methodref          #309.#876    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.addName:([III)Ljava/lang/String;\n-   #210 = Fieldref           #309.#877    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n-   #211 = Methodref          #309.#878    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseAposName:()Ljava/lang/String;\n-   #212 = Fieldref           #309.#879    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n-   #213 = Methodref          #309.#880    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeCharForError:(I)I\n-   #214 = String             #881         // was expecting double-quote to start field name\n-   #215 = Methodref          #882.#883    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8JsNames:()[I\n-   #216 = String             #884         // was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n-   #217 = String             #885         // : was expecting closing \\'\\'\\' for field name\n-   #218 = Methodref          #694.#886    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n-   #219 = Methodref          #694.#857    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n-   #220 = Methodref          #694.#860    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n-   #221 = Methodref          #309.#887    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidInitial:(I)V\n-   #222 = Methodref          #309.#888    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidOther:(I)V\n+   #204 = Methodref          #309.#862    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._throwUnquotedSpace:(ILjava/lang/String;)V\n+   #205 = Methodref          #309.#863    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeEscaped:()C\n+   #206 = String             #864         //  in field name\n+   #207 = Methodref          #309.#865    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._padLastQuad:(II)I\n+   #208 = Methodref          #688.#866    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:([II)Ljava/lang/String;\n+   #209 = Methodref          #309.#867    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.addName:([III)Ljava/lang/String;\n+   #210 = Fieldref           #309.#868    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n+   #211 = Methodref          #309.#869    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseAposName:()Ljava/lang/String;\n+   #212 = Fieldref           #309.#870    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n+   #213 = Methodref          #309.#871    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeCharForError:(I)I\n+   #214 = String             #872         // was expecting double-quote to start field name\n+   #215 = Methodref          #873.#874    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8JsNames:()[I\n+   #216 = String             #875         // was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n+   #217 = String             #876         // : was expecting closing \\'\\'\\' for field name\n+   #218 = Methodref          #688.#877    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n+   #219 = Methodref          #688.#848    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n+   #220 = Methodref          #688.#851    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n+   #221 = Methodref          #309.#878    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidInitial:(I)V\n+   #222 = Methodref          #309.#879    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidOther:(I)V\n    #223 = Integer            65536\n-   #224 = Methodref          #704.#889    // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n+   #224 = Methodref          #697.#880    // com/fasterxml/jackson/core/util/TextBuffer.expandCurrentSegment:()[C\n    #225 = Integer            55296\n    #226 = Integer            56320\n-   #227 = Class              #890         // java/lang/String\n-   #228 = Methodref          #227.#891    // java/lang/String.\"<init>\":([CII)V\n-   #229 = Methodref          #694.#892    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #230 = Methodref          #309.#893    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOF:()V\n-   #231 = Fieldref           #309.#894    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._icUTF8:[I\n-   #232 = Methodref          #309.#895    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishString2:([CI)V\n-   #233 = Methodref          #704.#896    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentAndReturn:(I)Ljava/lang/String;\n-   #234 = Methodref          #309.#897    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_2:(I)I\n-   #235 = Methodref          #309.#898    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_3fast:(I)I\n-   #236 = Methodref          #309.#899    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_3:(I)I\n-   #237 = Methodref          #309.#900    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_4:(I)I\n-   #238 = String             #901         // string value\n-   #239 = Methodref          #309.#902    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidChar:(I)V\n-   #240 = Methodref          #309.#903    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_2:()V\n-   #241 = Methodref          #309.#904    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_3:()V\n-   #242 = Methodref          #309.#905    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_4:(I)V\n-   #243 = Methodref          #711.#906    // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n-   #244 = Fieldref           #309.#907    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_MISSING:I\n-   #245 = String             #908         // expected a value\n-   #246 = Methodref          #309.#909    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #247 = String             #910         // NaN\n-   #248 = Methodref          #309.#911    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchToken:(Ljava/lang/String;I)V\n-   #249 = Fieldref           #309.#912    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_NON_NUM_NUMBERS:I\n-   #250 = Class              #913         // java/lang/Double\n+   #227 = Class              #881         // java/lang/String\n+   #228 = Methodref          #227.#882    // java/lang/String.\"<init>\":([CII)V\n+   #229 = Methodref          #688.#883    // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #230 = Methodref          #309.#884    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOF:()V\n+   #231 = Fieldref           #309.#885    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._icUTF8:[I\n+   #232 = Methodref          #309.#886    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._finishString2:([CI)V\n+   #233 = Methodref          #697.#887    // com/fasterxml/jackson/core/util/TextBuffer.setCurrentAndReturn:(I)Ljava/lang/String;\n+   #234 = Methodref          #309.#888    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_2:(I)I\n+   #235 = Methodref          #309.#889    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_3fast:(I)I\n+   #236 = Methodref          #309.#890    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_3:(I)I\n+   #237 = Methodref          #309.#891    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._decodeUtf8_4:(I)I\n+   #238 = String             #892         // string value\n+   #239 = Methodref          #309.#893    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidChar:(I)V\n+   #240 = Methodref          #309.#894    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_2:()V\n+   #241 = Methodref          #309.#895    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_3:()V\n+   #242 = Methodref          #309.#896    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipUtf8_4:(I)V\n+   #243 = Methodref          #704.#897    // com/fasterxml/jackson/core/json/JsonReadContext.inArray:()Z\n+   #244 = Fieldref           #309.#898    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_MISSING:I\n+   #245 = String             #899         // expected a value\n+   #246 = Methodref          #309.#900    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #247 = String             #901         // NaN\n+   #248 = Methodref          #309.#902    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchToken:(Ljava/lang/String;I)V\n+   #249 = Fieldref           #309.#903    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_NON_NUM_NUMBERS:I\n+   #250 = Class              #904         // java/lang/Double\n    #251 = Double             NaNd\n-   #253 = Methodref          #309.#914    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-   #254 = String             #915         // Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #255 = String             #916         // Infinity\n+   #253 = Methodref          #309.#905    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+   #254 = String             #906         // Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #255 = String             #907         // Infinity\n    #256 = Double             Infinityd\n-   #258 = String             #917         // Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #259 = Methodref          #309.#918    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOFInValue:(Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #260 = Methodref          #919.#920    // java/lang/Character.isJavaIdentifierStart:(I)Z\n-   #261 = Methodref          #309.#921    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._validJsonTokenList:()Ljava/lang/String;\n-   #262 = Methodref          #309.#922    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidToken:(Ljava/lang/String;Ljava/lang/String;)V\n-   #263 = String             #923         // expected a valid value\n-   #264 = Methodref          #309.#924    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._validJsonValueList:()Ljava/lang/String;\n-   #265 = String             #925         // -INF\n-   #266 = String             #926         // +INF\n-   #267 = String             #927         // -Infinity\n-   #268 = String             #928         // +Infinity\n+   #258 = String             #908         // Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #259 = Methodref          #309.#909    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidEOFInValue:(Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #260 = Methodref          #910.#911    // java/lang/Character.isJavaIdentifierStart:(I)Z\n+   #261 = Methodref          #309.#912    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._validJsonTokenList:()Ljava/lang/String;\n+   #262 = Methodref          #309.#913    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidToken:(Ljava/lang/String;Ljava/lang/String;)V\n+   #263 = String             #914         // expected a valid value\n+   #264 = Methodref          #309.#915    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._validJsonValueList:()Ljava/lang/String;\n+   #265 = String             #916         // -INF\n+   #266 = String             #917         // +INF\n+   #267 = String             #918         // -Infinity\n+   #268 = String             #919         // +Infinity\n    #269 = Double             -Infinityd\n-   #271 = String             #929         // Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #272 = Methodref          #309.#930    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #273 = String             #931         // JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n-   #274 = String             #932         // expected digit (0-9) to follow minus sign, for valid numeric value\n-   #275 = String             #933         // expected digit (0-9) for valid numeric value\n-   #276 = String             #934         // true\n-   #277 = Methodref          #309.#935    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchToken2:(Ljava/lang/String;I)V\n-   #278 = String             #936         // false\n-   #279 = String             #937         // null\n-   #280 = Methodref          #227.#938    // java/lang/String.charAt:(I)C\n-   #281 = Methodref          #227.#939    // java/lang/String.substring:(II)Ljava/lang/String;\n-   #282 = Methodref          #309.#940    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidToken:(Ljava/lang/String;)V\n-   #283 = Methodref          #309.#941    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._checkMatchEnd:(Ljava/lang/String;II)V\n-   #284 = Methodref          #919.#942    // java/lang/Character.isJavaIdentifierPart:(C)Z\n-   #285 = Methodref          #309.#943    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS2:()I\n-   #286 = Methodref          #309.#944    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipCR:()V\n-   #287 = Methodref          #309.#945    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._throwInvalidSpace:(I)V\n-   #288 = Methodref          #309.#946    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipComment:()V\n-   #289 = Methodref          #309.#947    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipYAMLComment:()Z\n-   #290 = String             #948         // Unexpected end-of-input within/between\n-   #291 = Methodref          #309.#949    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._eofAsNextChar:()I\n-   #292 = Methodref          #309.#950    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd2:()I\n-   #293 = String             #951         // was expecting a colon to separate field name and value\n-   #294 = String             #952         //  within/between\n-   #295 = Fieldref           #309.#953    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n-   #296 = String             #954         // maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n-   #297 = String             #955         //  in a comment\n-   #298 = Methodref          #309.#956    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipLine:()V\n-   #299 = Methodref          #309.#957    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipCComment:()V\n-   #300 = String             #958         // was expecting either \\'*\\' or \\'/\\' for a comment\n-   #301 = Methodref          #882.#959    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeComment:()[I\n-   #302 = Fieldref           #309.#960    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_YAML_COMMENTS:I\n-   #303 = String             #961         //  in character escape sequence\n-   #304 = Methodref          #309.#962    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleUnrecognizedCharacterEscape:(C)C\n-   #305 = Methodref          #882.#963    // com/fasterxml/jackson/core/io/CharTypes.charToHex:(I)I\n-   #306 = String             #964         // expected a hex-digit for character escape sequence\n-   #307 = Methodref          #309.#965    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextByte:()I\n-   #308 = Methodref          #309.#966    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidOther:(II)V\n-   #309 = Class              #967         // com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n-   #310 = Methodref          #20.#685     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-   #311 = Methodref          #20.#715     // java/lang/StringBuilder.length:()I\n-   #312 = String             #968         // ...\n-   #313 = String             #969         // Unrecognized token \\'%s\\': was expecting %s\n-   #314 = Methodref          #309.#970    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #315 = String             #971         // Invalid UTF-8 start byte 0x\n-   #316 = Methodref          #972.#973    // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #317 = String             #974         // Invalid UTF-8 middle byte 0x\n-   #318 = Methodref          #752.#975    // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n-   #319 = Methodref          #752.#976    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n-   #320 = Methodref          #752.#977    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n-   #321 = Class              #978         // com/fasterxml/jackson/core/JsonLocation\n-   #322 = Methodref          #309.#979    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+   #271 = String             #920         // Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #272 = Methodref          #309.#921    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #273 = String             #922         // JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n+   #274 = String             #923         // expected digit (0-9) to follow minus sign, for valid numeric value\n+   #275 = String             #924         // expected digit (0-9) for valid numeric value\n+   #276 = String             #925         // true\n+   #277 = Methodref          #309.#926    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._matchToken2:(Ljava/lang/String;I)V\n+   #278 = String             #927         // false\n+   #279 = String             #928         // null\n+   #280 = Methodref          #227.#929    // java/lang/String.charAt:(I)C\n+   #281 = Methodref          #227.#930    // java/lang/String.substring:(II)Ljava/lang/String;\n+   #282 = Methodref          #309.#931    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidToken:(Ljava/lang/String;)V\n+   #283 = Methodref          #309.#932    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._checkMatchEnd:(Ljava/lang/String;II)V\n+   #284 = Methodref          #910.#933    // java/lang/Character.isJavaIdentifierPart:(C)Z\n+   #285 = Methodref          #309.#934    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWS2:()I\n+   #286 = Methodref          #309.#935    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipCR:()V\n+   #287 = Methodref          #309.#936    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._throwInvalidSpace:(I)V\n+   #288 = Methodref          #309.#937    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipComment:()V\n+   #289 = Methodref          #309.#938    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipYAMLComment:()Z\n+   #290 = String             #939         // Unexpected end-of-input within/between\n+   #291 = Methodref          #309.#940    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._eofAsNextChar:()I\n+   #292 = Methodref          #309.#941    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd2:()I\n+   #293 = String             #942         // was expecting a colon to separate field name and value\n+   #294 = String             #943         //  within/between\n+   #295 = Fieldref           #309.#944    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n+   #296 = String             #945         // maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n+   #297 = String             #946         //  in a comment\n+   #298 = Methodref          #309.#947    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipLine:()V\n+   #299 = Methodref          #309.#948    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipCComment:()V\n+   #300 = String             #949         // was expecting either \\'*\\' or \\'/\\' for a comment\n+   #301 = Methodref          #873.#950    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeComment:()[I\n+   #302 = Fieldref           #309.#951    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.FEAT_MASK_ALLOW_YAML_COMMENTS:I\n+   #303 = String             #952         //  in character escape sequence\n+   #304 = Methodref          #309.#953    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._handleUnrecognizedCharacterEscape:(C)C\n+   #305 = Methodref          #873.#954    // com/fasterxml/jackson/core/io/CharTypes.charToHex:(I)I\n+   #306 = String             #955         // expected a hex-digit for character escape sequence\n+   #307 = Methodref          #309.#956    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextByte:()I\n+   #308 = Methodref          #309.#957    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportInvalidOther:(II)V\n+   #309 = Class              #958         // com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n+   #310 = Methodref          #20.#679     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #311 = Methodref          #20.#708     // java/lang/StringBuilder.length:()I\n+   #312 = String             #959         // ...\n+   #313 = String             #960         // Unrecognized token \\'%s\\': was expecting %s\n+   #314 = Methodref          #309.#961    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #315 = String             #962         // Invalid UTF-8 start byte 0x\n+   #316 = Methodref          #963.#964    // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #317 = String             #965         // Invalid UTF-8 middle byte 0x\n+   #318 = Methodref          #638.#966    // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+   #319 = Methodref          #638.#967    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+   #320 = Methodref          #638.#968    // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n+   #321 = Class              #969         // com/fasterxml/jackson/core/JsonLocation\n+   #322 = Methodref          #309.#970    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n    #323 = Long               -1l\n-   #325 = Fieldref           #309.#980    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartRow:I\n-   #326 = Fieldref           #309.#981    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartCol:I\n-   #327 = Methodref          #321.#982    // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-   #328 = Fieldref           #309.#983    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputTotal:J\n-   #329 = Methodref          #309.#984    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportMismatchedEndMarker:(IC)V\n-   #330 = Methodref          #711.#985    // com/fasterxml/jackson/core/json/JsonReadContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #331 = Fieldref           #689.#986    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #332 = Methodref          #689.#987    // com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I\n-   #333 = Fieldref           #689.#988    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #334 = Fieldref           #689.#989    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #335 = Fieldref           #689.#990    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #336 = Fieldref           #689.#991    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #337 = Fieldref           #689.#992    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #338 = Fieldref           #689.#993    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #339 = Fieldref           #689.#994    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #340 = Methodref          #882.#995    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8:()[I\n-   #341 = Methodref          #882.#996    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeLatin1:()[I\n-   #342 = Class              #997         // com/fasterxml/jackson/core/base/ParserBase\n+   #325 = Fieldref           #309.#971    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartRow:I\n+   #326 = Fieldref           #309.#972    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nameStartCol:I\n+   #327 = Methodref          #321.#973    // com/fasterxml/jackson/core/JsonLocation.\"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+   #328 = Fieldref           #309.#974    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._tokenInputTotal:J\n+   #329 = Methodref          #309.#975    // com/fasterxml/jackson/core/json/UTF8StreamJsonParser._reportMismatchedEndMarker:(IC)V\n+   #330 = Methodref          #704.#976    // com/fasterxml/jackson/core/json/JsonReadContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #331 = Fieldref           #683.#977    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #332 = Methodref          #683.#978    // com/fasterxml/jackson/core/JsonParser$Feature.getMask:()I\n+   #333 = Fieldref           #683.#979    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #334 = Fieldref           #683.#980    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #335 = Fieldref           #683.#981    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #336 = Fieldref           #683.#982    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #337 = Fieldref           #683.#983    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #338 = Fieldref           #683.#984    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #339 = Fieldref           #683.#985    // com/fasterxml/jackson/core/JsonParser$Feature.ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #340 = Methodref          #873.#986    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeUtf8:()[I\n+   #341 = Methodref          #873.#987    // com/fasterxml/jackson/core/io/CharTypes.getInputCodeLatin1:()[I\n+   #342 = Class              #988         // com/fasterxml/jackson/core/base/ParserBase\n    #343 = Utf8               BYTE_LF\n    #344 = Utf8               B\n    #345 = Utf8               ConstantValue\n    #346 = Integer            10\n    #347 = Utf8               FEAT_MASK_TRAILING_COMMA\n    #348 = Utf8               I\n    #349 = Utf8               FEAT_MASK_LEADING_ZEROS\n@@ -434,787 +434,778 @@\n    #428 = Utf8               Ljava/lang/String;\n    #429 = Utf8               ch\n    #430 = Utf8               [C\n    #431 = Utf8               writer\n    #432 = Utf8               Ljava/io/Writer;\n    #433 = Utf8               t\n    #434 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n-   #435 = Class              #998         // com/fasterxml/jackson/core/JsonToken\n+   #435 = Class              #989         // com/fasterxml/jackson/core/JsonToken\n    #436 = Utf8               getValueAsString\n    #437 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n    #438 = Utf8               defValue\n    #439 = Utf8               getValueAsInt\n    #440 = Utf8               ()I\n    #441 = Utf8               (I)I\n    #442 = Utf8               _getText2\n    #443 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n    #444 = Utf8               getTextCharacters\n    #445 = Utf8               ()[C\n    #446 = Utf8               name\n    #447 = Utf8               nameLen\n-   #448 = Class              #890         // java/lang/String\n-   #449 = Utf8               getTextLength\n-   #450 = Utf8               getTextOffset\n-   #451 = Utf8               getBinaryValue\n-   #452 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #453 = Utf8               iae\n-   #454 = Utf8               Ljava/lang/IllegalArgumentException;\n-   #455 = Utf8               builder\n-   #456 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #457 = Utf8               b64variant\n-   #458 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-   #459 = Class              #744         // java/lang/IllegalArgumentException\n-   #460 = Utf8               readBinaryValue\n-   #461 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n-   #462 = Utf8               b\n-   #463 = Class              #967         // com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n-   #464 = Class              #762         // com/fasterxml/jackson/core/Base64Variant\n-   #465 = Class              #999         // java/io/OutputStream\n-   #466 = Class              #373         // \"[B\"\n-   #467 = Class              #1000        // java/lang/Throwable\n-   #468 = Utf8               _readBinary\n-   #469 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-   #470 = Utf8               bits\n-   #471 = Utf8               decodedData\n-   #472 = Utf8               buffer\n-   #473 = Utf8               outputPtr\n-   #474 = Utf8               outputEnd\n-   #475 = Utf8               outputCount\n-   #476 = Utf8               nextToken\n-   #477 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-   #478 = Utf8               i\n-   #479 = Utf8               _nextTokenNotInObject\n-   #480 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #481 = Utf8               _nextAfterName\n-   #482 = Utf8               finishToken\n-   #483 = Utf8               nextFieldName\n-   #484 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Z\n-   #485 = Utf8               offset\n-   #486 = Utf8               ptr\n-   #487 = Utf8               nameBytes\n-   #488 = Utf8               len\n-   #489 = Utf8               str\n-   #490 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n-   #491 = Class              #1001        // com/fasterxml/jackson/core/SerializableString\n-   #492 = Utf8               nameStr\n-   #493 = Utf8               _skipColonFast\n-   #494 = Utf8               _isNextTokenNameYes\n-   #495 = Utf8               (I)V\n-   #496 = Utf8               _isNextTokenNameMaybe\n-   #497 = Utf8               (ILcom/fasterxml/jackson/core/SerializableString;)Z\n-   #498 = Utf8               match\n-   #499 = Utf8               nextTextValue\n-   #500 = Utf8               nextIntValue\n-   #501 = Utf8               defaultValue\n-   #502 = Utf8               nextLongValue\n-   #503 = Utf8               (J)J\n-   #504 = Utf8               J\n-   #505 = Utf8               nextBooleanValue\n-   #506 = Utf8               ()Ljava/lang/Boolean;\n-   #507 = Utf8               _parseFloatThatStartsWithPeriod\n-   #508 = Utf8               (ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #509 = Utf8               neg\n-   #510 = Utf8               hasSign\n-   #511 = Utf8               outBuf\n-   #512 = Utf8               outPtr\n-   #513 = Class              #430         // \"[C\"\n-   #514 = Utf8               _parseUnsignedNumber\n-   #515 = Utf8               intLen\n-   #516 = Utf8               _parseSignedNumber\n-   #517 = Utf8               (Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #518 = Utf8               negative\n-   #519 = Utf8               _parseNumber2\n-   #520 = Utf8               ([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #521 = Utf8               intPartLength\n-   #522 = Utf8               _verifyNoLeadingZeroes\n-   #523 = Utf8               _parseFloat\n-   #524 = Utf8               ([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #525 = Utf8               integerPartLength\n-   #526 = Utf8               fractLen\n-   #527 = Utf8               eof\n-   #528 = Utf8               expLen\n-   #529 = Utf8               _verifyRootSpace\n-   #530 = Utf8               _parseName\n-   #531 = Utf8               (I)Ljava/lang/String;\n-   #532 = Utf8               input\n-   #533 = Utf8               codes\n-   #534 = Utf8               q\n-   #535 = Class              #357         // \"[I\"\n-   #536 = Utf8               parseMediumName\n-   #537 = Utf8               q2\n-   #538 = Utf8               parseMediumName2\n-   #539 = Utf8               (II)Ljava/lang/String;\n-   #540 = Utf8               q3\n-   #541 = Utf8               parseLongName\n-   #542 = Utf8               (III)Ljava/lang/String;\n-   #543 = Utf8               qlen\n-   #544 = Utf8               slowParseName\n-   #545 = Utf8               parseName\n-   #546 = Utf8               q1\n-   #547 = Utf8               lastQuadBytes\n-   #548 = Utf8               (IIII)Ljava/lang/String;\n-   #549 = Utf8               (IIIII)Ljava/lang/String;\n-   #550 = Utf8               parseEscapedName\n-   #551 = Utf8               ([IIIII)Ljava/lang/String;\n-   #552 = Utf8               quads\n-   #553 = Utf8               currQuad\n-   #554 = Utf8               currQuadBytes\n-   #555 = Utf8               _handleOddName\n-   #556 = Utf8               C\n-   #557 = Utf8               _parseAposName\n-   #558 = Utf8               findName\n-   #559 = Class              #1002        // com/fasterxml/jackson/core/JsonParseException\n-   #560 = Class              #1003        // com/fasterxml/jackson/core/exc/StreamConstraintsException\n-   #561 = Utf8               ([IIII)Ljava/lang/String;\n-   #562 = Utf8               lastQuad\n-   #563 = Utf8               addName\n-   #564 = Utf8               ([III)Ljava/lang/String;\n-   #565 = Utf8               needed\n-   #566 = Utf8               ch2\n-   #567 = Utf8               byteIx\n-   #568 = Utf8               ix\n-   #569 = Utf8               byteLen\n-   #570 = Utf8               cbuf\n-   #571 = Utf8               cix\n-   #572 = Utf8               baseName\n-   #573 = Utf8               _padLastQuad\n-   #574 = Utf8               (II)I\n-   #575 = Utf8               bytes\n-   #576 = Utf8               _loadMoreGuaranteed\n-   #577 = Utf8               _finishString\n-   #578 = Utf8               max\n-   #579 = Utf8               _finishAndReturnString\n-   #580 = Utf8               _finishString2\n-   #581 = Utf8               ([CI)V\n-   #582 = Utf8               _skipString\n-   #583 = Utf8               _handleUnexpectedValue\n-   #584 = Utf8               _handleApos\n-   #585 = Utf8               max2\n-   #586 = Utf8               _handleInvalidNumberStart\n-   #587 = Utf8               (IZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #588 = Utf8               (IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #589 = Utf8               message\n-   #590 = Utf8               _matchTrue\n-   #591 = Utf8               _matchFalse\n-   #592 = Utf8               _matchNull\n-   #593 = Utf8               _matchToken\n-   #594 = Utf8               (Ljava/lang/String;I)V\n-   #595 = Utf8               matchStr\n-   #596 = Utf8               _matchToken2\n-   #597 = Utf8               _checkMatchEnd\n-   #598 = Utf8               (Ljava/lang/String;II)V\n-   #599 = Utf8               _skipWS\n-   #600 = Utf8               _skipWS2\n-   #601 = Utf8               _skipWSOrEnd\n-   #602 = Utf8               _skipWSOrEnd2\n-   #603 = Utf8               _skipColon\n-   #604 = Utf8               _skipColon2\n-   #605 = Utf8               (Z)I\n-   #606 = Utf8               gotColon\n-   #607 = Utf8               _skipComment\n-   #608 = Utf8               _skipCComment\n-   #609 = Utf8               code\n-   #610 = Utf8               _skipYAMLComment\n-   #611 = Utf8               _skipLine\n-   #612 = Utf8               _decodeEscaped\n-   #613 = Utf8               ()C\n-   #614 = Utf8               digit\n-   #615 = Utf8               value\n-   #616 = Utf8               _decodeCharForError\n-   #617 = Utf8               d\n-   #618 = Utf8               firstByte\n-   #619 = Utf8               _decodeUtf8_2\n-   #620 = Utf8               _decodeUtf8_3\n-   #621 = Utf8               c1\n-   #622 = Utf8               _decodeUtf8_3fast\n-   #623 = Utf8               _decodeUtf8_4\n-   #624 = Utf8               _skipUtf8_2\n-   #625 = Utf8               _skipUtf8_3\n-   #626 = Utf8               _skipUtf8_4\n-   #627 = Utf8               _skipCR\n-   #628 = Utf8               nextByte\n-   #629 = Utf8               _reportInvalidToken\n-   #630 = Utf8               matchedPart\n-   #631 = Utf8               (Ljava/lang/String;)V\n-   #632 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #633 = Utf8               msg\n-   #634 = Utf8               sb\n-   #635 = Utf8               Ljava/lang/StringBuilder;\n-   #636 = Class              #678         // java/lang/StringBuilder\n-   #637 = Utf8               _reportInvalidChar\n-   #638 = Utf8               _reportInvalidInitial\n-   #639 = Utf8               mask\n-   #640 = Utf8               _reportInvalidOther\n-   #641 = Utf8               (II)V\n-   #642 = Utf8               _decodeBase64\n-   #643 = Class              #1004        // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #644 = Utf8               getTokenLocation\n-   #645 = Utf8               ()Lcom/fasterxml/jackson/core/JsonLocation;\n-   #646 = Utf8               total\n-   #647 = Utf8               getCurrentLocation\n-   #648 = Utf8               col\n-   #649 = Utf8               _updateLocation\n-   #650 = Utf8               _updateNameLocation\n-   #651 = Utf8               _closeScope\n-   #652 = Utf8               _closeArrayScope\n-   #653 = Utf8               _closeObjectScope\n-   #654 = Utf8               <clinit>\n-   #655 = Utf8               SourceFile\n-   #656 = Utf8               UTF8StreamJsonParser.java\n-   #657 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-   #658 = NameAndType        #375:#395    // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILjava/io/InputStream;Lcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;[BIIIZ)V\n-   #659 = NameAndType        #375:#1005   // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-   #660 = NameAndType        #363:#357    // _quadBuffer:[I\n-   #661 = NameAndType        #370:#371    // _inputStream:Ljava/io/InputStream;\n-   #662 = NameAndType        #359:#360    // _objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n-   #663 = NameAndType        #361:#362    // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #664 = NameAndType        #372:#373    // _inputBuffer:[B\n-   #665 = NameAndType        #1006:#348   // _inputPtr:I\n-   #666 = NameAndType        #1007:#348   // _inputEnd:I\n-   #667 = NameAndType        #1008:#348   // _currInputRowStart:I\n-   #668 = NameAndType        #1009:#504   // _currInputProcessed:J\n-   #669 = NameAndType        #374:#365    // _bufferRecyclable:Z\n-   #670 = NameAndType        #1010:#1011  // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #671 = Class              #999         // java/io/OutputStream\n-   #672 = NameAndType        #1012:#1013  // write:([BII)V\n-   #673 = Class              #1014        // java/io/InputStream\n-   #674 = NameAndType        #1015:#1016  // read:([BII)I\n-   #675 = NameAndType        #367:#348    // _nameStartOffset:I\n-   #676 = NameAndType        #420:#421    // _closeInput:()V\n-   #677 = Utf8               java/io/IOException\n-   #678 = Utf8               java/lang/StringBuilder\n-   #679 = NameAndType        #375:#421    // \"<init>\":()V\n-   #680 = Utf8               InputStream.read() returned 0 characters when trying to read\n-   #681 = NameAndType        #1017:#1018  // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #682 = NameAndType        #1017:#1019  // append:(I)Ljava/lang/StringBuilder;\n-   #683 = Utf8                bytes\n-   #684 = NameAndType        #1020:#425   // toString:()Ljava/lang/String;\n-   #685 = NameAndType        #375:#631    // \"<init>\":(Ljava/lang/String;)V\n-   #686 = NameAndType        #1021:#383   // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-   #687 = Class              #1022        // com/fasterxml/jackson/core/io/IOContext\n-   #688 = NameAndType        #1023:#417   // isResourceManaged:()Z\n-   #689 = Class              #1025        // com/fasterxml/jackson/core/JsonParser$Feature\n-   #690 = NameAndType        #1028:#1029  // AUTO_CLOSE_SOURCE:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #691 = NameAndType        #1030:#1031  // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-   #692 = NameAndType        #1032:#421   // close:()V\n-   #693 = NameAndType        #422:#421    // _releaseBuffers:()V\n-   #694 = Class              #1033        // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-   #695 = NameAndType        #1034:#421   // release:()V\n-   #696 = NameAndType        #1035:#373   // NO_BYTES:[B\n-   #697 = NameAndType        #1036:#1037  // releaseReadIOBuffer:([B)V\n-   #698 = NameAndType        #1038:#434   // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #699 = Class              #998         // com/fasterxml/jackson/core/JsonToken\n-   #700 = NameAndType        #1039:#434   // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-   #701 = NameAndType        #364:#365    // _tokenIncomplete:Z\n-   #702 = NameAndType        #579:#425    // _finishAndReturnString:()Ljava/lang/String;\n-   #703 = NameAndType        #1040:#1041  // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n-   #704 = Class              #1042        // com/fasterxml/jackson/core/util/TextBuffer\n-   #705 = NameAndType        #1043:#425   // contentsAsString:()Ljava/lang/String;\n-   #706 = NameAndType        #442:#443    // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n-   #707 = NameAndType        #577:#421    // _finishString:()V\n-   #708 = NameAndType        #1044:#426   // contentsToWriter:(Ljava/io/Writer;)I\n-   #709 = NameAndType        #1045:#434   // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-   #710 = NameAndType        #1046:#1047  // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #711 = Class              #1048        // com/fasterxml/jackson/core/json/JsonReadContext\n-   #712 = NameAndType        #1049:#425   // getCurrentName:()Ljava/lang/String;\n-   #713 = Class              #1050        // java/io/Writer\n-   #714 = NameAndType        #1012:#631   // write:(Ljava/lang/String;)V\n-   #715 = NameAndType        #1051:#440   // length:()I\n-   #716 = NameAndType        #1052:#417   // isNumeric:()Z\n-   #717 = NameAndType        #1053:#445   // asCharArray:()[C\n-   #718 = NameAndType        #1012:#1054  // write:([C)V\n-   #719 = NameAndType        #436:#437    // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-   #720 = NameAndType        #1055:#434   // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #721 = NameAndType        #1056:#434   // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #722 = NameAndType        #1057:#348   // _numTypesValid:I\n-   #723 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n-   #724 = NameAndType        #1058:#440   // _parseIntValue:()I\n-   #725 = NameAndType        #1059:#421   // convertNumberToInt:()V\n-   #726 = NameAndType        #1060:#348   // _numberInt:I\n-   #727 = NameAndType        #439:#441    // getValueAsInt:(I)I\n-   #728 = NameAndType        #1061:#440   // id:()I\n-   #729 = NameAndType        #1062:#425   // asString:()Ljava/lang/String;\n-   #730 = NameAndType        #1063:#365   // _nameCopied:Z\n-   #731 = NameAndType        #1064:#430   // _nameCopyBuffer:[C\n-   #732 = NameAndType        #1065:#1066  // allocNameCopyBuffer:(I)[C\n-   #733 = NameAndType        #1067:#1068  // getChars:(II[CI)V\n-   #734 = NameAndType        #1069:#445   // getTextBuffer:()[C\n-   #735 = NameAndType        #1070:#440   // size:()I\n-   #736 = NameAndType        #450:#440    // getTextOffset:()I\n-   #737 = NameAndType        #1071:#434   // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #738 = NameAndType        #1072:#373   // _binaryValue:[B\n-   #739 = Utf8               Current token (\n-   #740 = NameAndType        #1017:#1073  // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #741 = Utf8               ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n-   #742 = NameAndType        #1074:#631   // _reportError:(Ljava/lang/String;)V\n-   #743 = NameAndType        #642:#452    // _decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #744 = Utf8               java/lang/IllegalArgumentException\n-   #745 = Utf8               Failed to decode VALUE_STRING as base64 (\n-   #746 = Utf8               ):\n-   #747 = NameAndType        #1075:#425   // getMessage:()Ljava/lang/String;\n-   #748 = NameAndType        #1076:#1077  // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-   #749 = NameAndType        #1078:#1079  // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-   #750 = NameAndType        #424:#425    // getText:()Ljava/lang/String;\n-   #751 = NameAndType        #642:#1080   // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #752 = Class              #1004        // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #753 = NameAndType        #1081:#1082  // toByteArray:()[B\n-   #754 = NameAndType        #451:#452    // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n-   #755 = NameAndType        #1012:#1037  // write:([B)V\n-   #756 = NameAndType        #1083:#1082  // allocBase64Buffer:()[B\n-   #757 = NameAndType        #468:#469    // _readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n-   #758 = NameAndType        #1084:#1037  // releaseBase64Buffer:([B)V\n-   #759 = NameAndType        #576:#421    // _loadMoreGuaranteed:()V\n-   #760 = NameAndType        #1085:#441   // decodeBase64Char:(I)I\n-   #761 = NameAndType        #1086:#1087  // _decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-   #762 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-   #763 = NameAndType        #1088:#417   // requiresPaddingOnRead:()Z\n-   #764 = NameAndType        #1089:#1090  // _handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n-   #765 = NameAndType        #1091:#1092  // usesPaddingChar:(I)Z\n-   #766 = Utf8               expected padding character \\'\n-   #767 = NameAndType        #1093:#613   // getPaddingChar:()C\n-   #768 = NameAndType        #1017:#1094  // append:(C)Ljava/lang/StringBuilder;\n-   #769 = Utf8               \\'\n-   #770 = NameAndType        #1095:#1096  // reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-   #771 = NameAndType        #481:#477    // _nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #772 = NameAndType        #582:#421    // _skipString:()V\n-   #773 = NameAndType        #601:#440    // _skipWSOrEnd:()I\n-   #774 = NameAndType        #652:#421    // _closeArrayScope:()V\n-   #775 = NameAndType        #1097:#434   // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #776 = NameAndType        #653:#421    // _closeObjectScope:()V\n-   #777 = NameAndType        #1098:#434   // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #778 = NameAndType        #1099:#417   // expectComma:()Z\n-   #779 = Utf8               was expecting comma to separate\n-   #780 = NameAndType        #1100:#425   // typeDesc:()Ljava/lang/String;\n-   #781 = Utf8                entries\n-   #782 = NameAndType        #1101:#1102  // _reportUnexpectedChar:(ILjava/lang/String;)V\n-   #783 = NameAndType        #599:#440    // _skipWS:()I\n-   #784 = NameAndType        #1103:#348   // _features:I\n-   #785 = NameAndType        #347:#348    // FEAT_MASK_TRAILING_COMMA:I\n-   #786 = NameAndType        #651:#480    // _closeScope:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #787 = NameAndType        #1104:#417   // inObject:()Z\n-   #788 = NameAndType        #649:#421    // _updateLocation:()V\n-   #789 = NameAndType        #479:#480    // _nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #790 = NameAndType        #650:#421    // _updateNameLocation:()V\n-   #791 = NameAndType        #530:#531    // _parseName:(I)Ljava/lang/String;\n-   #792 = NameAndType        #1105:#631   // setCurrentName:(Ljava/lang/String;)V\n-   #793 = NameAndType        #603:#440    // _skipColon:()I\n-   #794 = NameAndType        #1106:#434   // _nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #795 = NameAndType        #516:#517    // _parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n-   #796 = Class              #1107        // com/fasterxml/jackson/core/json/JsonReadFeature\n-   #797 = NameAndType        #1108:#1109  // ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #798 = NameAndType        #1110:#1111  // mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #799 = NameAndType        #583:#480    // _handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #800 = NameAndType        #507:#508    // _parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #801 = NameAndType        #514:#480    // _parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n-   #802 = NameAndType        #591:#421    // _matchFalse:()V\n-   #803 = NameAndType        #1112:#434   // VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #804 = NameAndType        #592:#421    // _matchNull:()V\n-   #805 = NameAndType        #1113:#434   // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #806 = NameAndType        #590:#421    // _matchTrue:()V\n-   #807 = NameAndType        #1114:#434   // VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #808 = NameAndType        #1115:#434   // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #809 = NameAndType        #1116:#434   // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #810 = NameAndType        #1117:#348   // _tokenInputRow:I\n-   #811 = NameAndType        #1118:#348   // _tokenInputCol:I\n-   #812 = NameAndType        #1119:#641   // createChildArrayContext:(II)V\n-   #813 = NameAndType        #1120:#641   // createChildObjectContext:(II)V\n-   #814 = Class              #1001        // com/fasterxml/jackson/core/SerializableString\n-   #815 = NameAndType        #1121:#1082  // asQuotedUTF8:()[B\n-   #816 = NameAndType        #1122:#425   // getValue:()Ljava/lang/String;\n-   #817 = NameAndType        #493:#441    // _skipColonFast:(I)I\n-   #818 = NameAndType        #494:#495    // _isNextTokenNameYes:(I)V\n-   #819 = NameAndType        #496:#497    // _isNextTokenNameMaybe:(ILcom/fasterxml/jackson/core/SerializableString;)Z\n-   #820 = NameAndType        #604:#605    // _skipColon2:(Z)I\n-   #821 = NameAndType        #1123:#1124  // equals:(Ljava/lang/Object;)Z\n-   #822 = NameAndType        #476:#477    // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #823 = NameAndType        #1125:#440   // getIntValue:()I\n-   #824 = NameAndType        #1126:#1127  // getLongValue:()J\n-   #825 = Class              #1128        // java/lang/Boolean\n-   #826 = NameAndType        #1129:#1130  // TRUE:Ljava/lang/Boolean;\n-   #827 = NameAndType        #1131:#1130  // FALSE:Ljava/lang/Boolean;\n-   #828 = NameAndType        #1132:#1109  // ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #829 = NameAndType        #1133:#445   // emptyAndGetCurrentSegment:()[C\n-   #830 = NameAndType        #523:#524    // _parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #831 = NameAndType        #522:#440    // _verifyNoLeadingZeroes:()I\n-   #832 = Class              #1134        // java/lang/Math\n-   #833 = NameAndType        #1135:#574   // min:(II)I\n-   #834 = NameAndType        #519:#520    // _parseNumber2:([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #835 = NameAndType        #1136:#495   // setCurrentLength:(I)V\n-   #836 = NameAndType        #1137:#417   // inRoot:()Z\n-   #837 = NameAndType        #529:#495    // _verifyRootSpace:(I)V\n-   #838 = NameAndType        #1138:#1139  // resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-   #839 = NameAndType        #586:#588    // _handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n-   #840 = NameAndType        #416:#417    // _loadMore:()Z\n-   #841 = NameAndType        #1140:#445   // finishCurrentSegment:()[C\n-   #842 = NameAndType        #349:#348    // FEAT_MASK_LEADING_ZEROS:I\n-   #843 = Utf8               Leading zeroes not allowed\n-   #844 = NameAndType        #1141:#631   // reportInvalidNumber:(Ljava/lang/String;)V\n-   #845 = NameAndType        #1142:#1109  // ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-   #846 = Utf8               Decimal point not followed by a digit\n-   #847 = NameAndType        #1143:#1144  // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #848 = Utf8               Exponent indicator not followed by a digit\n-   #849 = NameAndType        #1145:#1146  // resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-   #850 = NameAndType        #1147:#348   // _currInputRow:I\n-   #851 = NameAndType        #1148:#495   // _reportMissingRootWS:(I)V\n-   #852 = NameAndType        #555:#531    // _handleOddName:(I)Ljava/lang/String;\n-   #853 = NameAndType        #544:#425    // slowParseName:()Ljava/lang/String;\n-   #854 = NameAndType        #358:#357    // _icLatin1:[I\n-   #855 = NameAndType        #366:#348    // _quad1:I\n-   #856 = NameAndType        #536:#531    // parseMediumName:(I)Ljava/lang/String;\n-   #857 = NameAndType        #558:#539    // findName:(II)Ljava/lang/String;\n-   #858 = NameAndType        #545:#542    // parseName:(III)Ljava/lang/String;\n-   #859 = Utf8\n-   #860 = NameAndType        #558:#542    // findName:(III)Ljava/lang/String;\n-   #861 = NameAndType        #545:#548    // parseName:(IIII)Ljava/lang/String;\n-   #862 = NameAndType        #538:#539    // parseMediumName2:(II)Ljava/lang/String;\n-   #863 = NameAndType        #558:#548    // findName:(IIII)Ljava/lang/String;\n-   #864 = NameAndType        #545:#549    // parseName:(IIIII)Ljava/lang/String;\n-   #865 = NameAndType        #541:#542    // parseLongName:(III)Ljava/lang/String;\n-   #866 = NameAndType        #558:#561    // findName:([IIII)Ljava/lang/String;\n-   #867 = NameAndType        #550:#551    // parseEscapedName:([IIIII)Ljava/lang/String;\n-   #868 = NameAndType        #1149:#1150  // growArrayBy:([II)[I\n-   #869 = Utf8               : was expecting closing \\'\\\"\\' for name\n-   #870 = NameAndType        #1151:#1152  // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #871 = NameAndType        #1153:#1102  // _throwUnquotedSpace:(ILjava/lang/String;)V\n-   #872 = NameAndType        #612:#613    // _decodeEscaped:()C\n-   #873 = Utf8                in field name\n-   #874 = NameAndType        #573:#574    // _padLastQuad:(II)I\n-   #875 = NameAndType        #558:#1154   // findName:([II)Ljava/lang/String;\n-   #876 = NameAndType        #563:#564    // addName:([III)Ljava/lang/String;\n-   #877 = NameAndType        #352:#348    // FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n-   #878 = NameAndType        #557:#425    // _parseAposName:()Ljava/lang/String;\n-   #879 = NameAndType        #353:#348    // FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n-   #880 = NameAndType        #616:#441    // _decodeCharForError:(I)I\n-   #881 = Utf8               was expecting double-quote to start field name\n-   #882 = Class              #1155        // com/fasterxml/jackson/core/io/CharTypes\n-   #883 = NameAndType        #1156:#1157  // getInputCodeUtf8JsNames:()[I\n-   #884 = Utf8               was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n-   #885 = Utf8               : was expecting closing \\'\\'\\' for field name\n-   #886 = NameAndType        #558:#531    // findName:(I)Ljava/lang/String;\n-   #887 = NameAndType        #638:#495    // _reportInvalidInitial:(I)V\n-   #888 = NameAndType        #640:#495    // _reportInvalidOther:(I)V\n-   #889 = NameAndType        #1158:#445   // expandCurrentSegment:()[C\n-   #890 = Utf8               java/lang/String\n-   #891 = NameAndType        #375:#1159   // \"<init>\":([CII)V\n-   #892 = NameAndType        #563:#1160   // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-   #893 = NameAndType        #1151:#421   // _reportInvalidEOF:()V\n-   #894 = NameAndType        #356:#357    // _icUTF8:[I\n-   #895 = NameAndType        #580:#581    // _finishString2:([CI)V\n-   #896 = NameAndType        #1161:#531   // setCurrentAndReturn:(I)Ljava/lang/String;\n-   #897 = NameAndType        #619:#441    // _decodeUtf8_2:(I)I\n-   #898 = NameAndType        #622:#441    // _decodeUtf8_3fast:(I)I\n-   #899 = NameAndType        #620:#441    // _decodeUtf8_3:(I)I\n-   #900 = NameAndType        #623:#441    // _decodeUtf8_4:(I)I\n-   #901 = Utf8               string value\n-   #902 = NameAndType        #637:#495    // _reportInvalidChar:(I)V\n-   #903 = NameAndType        #624:#421    // _skipUtf8_2:()V\n-   #904 = NameAndType        #625:#421    // _skipUtf8_3:()V\n-   #905 = NameAndType        #626:#495    // _skipUtf8_4:(I)V\n-   #906 = NameAndType        #1162:#417   // inArray:()Z\n-   #907 = NameAndType        #351:#348    // FEAT_MASK_ALLOW_MISSING:I\n-   #908 = Utf8               expected a value\n-   #909 = NameAndType        #584:#477    // _handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #910 = Utf8               NaN\n-   #911 = NameAndType        #593:#594    // _matchToken:(Ljava/lang/String;I)V\n-   #912 = NameAndType        #350:#348    // FEAT_MASK_NON_NUM_NUMBERS:I\n-   #913 = Utf8               java/lang/Double\n-   #914 = NameAndType        #1163:#1164  // resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-   #915 = Utf8               Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #916 = Utf8               Infinity\n-   #917 = Utf8               Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #918 = NameAndType        #1165:#1166  // _reportInvalidEOFInValue:(Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #919 = Class              #1167        // java/lang/Character\n-   #920 = NameAndType        #1168:#1092  // isJavaIdentifierStart:(I)Z\n-   #921 = NameAndType        #1169:#425   // _validJsonTokenList:()Ljava/lang/String;\n-   #922 = NameAndType        #629:#632    // _reportInvalidToken:(Ljava/lang/String;Ljava/lang/String;)V\n-   #923 = Utf8               expected a valid value\n-   #924 = NameAndType        #1170:#425   // _validJsonValueList:()Ljava/lang/String;\n-   #925 = Utf8               -INF\n-   #926 = Utf8               +INF\n-   #927 = Utf8               -Infinity\n-   #928 = Utf8               +Infinity\n-   #929 = Utf8               Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n-   #930 = NameAndType        #1074:#1171  // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #931 = Utf8               JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n-   #932 = Utf8               expected digit (0-9) to follow minus sign, for valid numeric value\n-   #933 = Utf8               expected digit (0-9) for valid numeric value\n-   #934 = Utf8               true\n-   #935 = NameAndType        #596:#594    // _matchToken2:(Ljava/lang/String;I)V\n-   #936 = Utf8               false\n-   #937 = Utf8               null\n-   #938 = NameAndType        #1172:#1173  // charAt:(I)C\n-   #939 = NameAndType        #1174:#539   // substring:(II)Ljava/lang/String;\n-   #940 = NameAndType        #629:#631    // _reportInvalidToken:(Ljava/lang/String;)V\n-   #941 = NameAndType        #597:#598    // _checkMatchEnd:(Ljava/lang/String;II)V\n-   #942 = NameAndType        #1175:#1176  // isJavaIdentifierPart:(C)Z\n-   #943 = NameAndType        #600:#440    // _skipWS2:()I\n-   #944 = NameAndType        #627:#421    // _skipCR:()V\n-   #945 = NameAndType        #1177:#495   // _throwInvalidSpace:(I)V\n-   #946 = NameAndType        #607:#421    // _skipComment:()V\n-   #947 = NameAndType        #610:#417    // _skipYAMLComment:()Z\n-   #948 = Utf8               Unexpected end-of-input within/between\n-   #949 = NameAndType        #1178:#440   // _eofAsNextChar:()I\n-   #950 = NameAndType        #602:#440    // _skipWSOrEnd2:()I\n-   #951 = Utf8               was expecting a colon to separate field name and value\n-   #952 = Utf8                within/between\n-   #953 = NameAndType        #354:#348    // FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n-   #954 = Utf8               maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n-   #955 = Utf8                in a comment\n-   #956 = NameAndType        #611:#421    // _skipLine:()V\n-   #957 = NameAndType        #608:#421    // _skipCComment:()V\n-   #958 = Utf8               was expecting either \\'*\\' or \\'/\\' for a comment\n-   #959 = NameAndType        #1179:#1157  // getInputCodeComment:()[I\n-   #960 = NameAndType        #355:#348    // FEAT_MASK_ALLOW_YAML_COMMENTS:I\n-   #961 = Utf8                in character escape sequence\n-   #962 = NameAndType        #1180:#1181  // _handleUnrecognizedCharacterEscape:(C)C\n-   #963 = NameAndType        #1182:#441   // charToHex:(I)I\n-   #964 = Utf8               expected a hex-digit for character escape sequence\n-   #965 = NameAndType        #628:#440    // nextByte:()I\n-   #966 = NameAndType        #640:#641    // _reportInvalidOther:(II)V\n-   #967 = Utf8               com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n-   #968 = Utf8               ...\n-   #969 = Utf8               Unrecognized token \\'%s\\': was expecting %s\n-   #970 = NameAndType        #1074:#1183  // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #971 = Utf8               Invalid UTF-8 start byte 0x\n-   #972 = Class              #1184        // java/lang/Integer\n-   #973 = NameAndType        #1185:#531   // toHexString:(I)Ljava/lang/String;\n-   #974 = Utf8               Invalid UTF-8 middle byte 0x\n-   #975 = NameAndType        #1017:#495   // append:(I)V\n-   #976 = NameAndType        #1186:#495   // appendTwoBytes:(I)V\n-   #977 = NameAndType        #1187:#495   // appendThreeBytes:(I)V\n-   #978 = Utf8               com/fasterxml/jackson/core/JsonLocation\n-   #979 = NameAndType        #1188:#1189  // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n-   #980 = NameAndType        #368:#348    // _nameStartRow:I\n-   #981 = NameAndType        #369:#348    // _nameStartCol:I\n-   #982 = NameAndType        #375:#1190   // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-   #983 = NameAndType        #1191:#504   // _tokenInputTotal:J\n-   #984 = NameAndType        #1192:#1193  // _reportMismatchedEndMarker:(IC)V\n-   #985 = NameAndType        #1194:#1195  // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-   #986 = NameAndType        #1196:#1029  // ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #987 = NameAndType        #1197:#440   // getMask:()I\n-   #988 = NameAndType        #1198:#1029  // ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #989 = NameAndType        #1199:#1029  // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #990 = NameAndType        #1200:#1029  // ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #991 = NameAndType        #1201:#1029  // ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #992 = NameAndType        #1202:#1029  // ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #993 = NameAndType        #1203:#1029  // ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #994 = NameAndType        #1204:#1029  // ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-   #995 = NameAndType        #1205:#1157  // getInputCodeUtf8:()[I\n-   #996 = NameAndType        #1206:#1157  // getInputCodeLatin1:()[I\n-   #997 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n-   #998 = Utf8               com/fasterxml/jackson/core/JsonToken\n-   #999 = Utf8               java/io/OutputStream\n-  #1000 = Utf8               java/lang/Throwable\n-  #1001 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #1002 = Utf8               com/fasterxml/jackson/core/JsonParseException\n-  #1003 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n-  #1004 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n-  #1005 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n-  #1006 = Utf8               _inputPtr\n-  #1007 = Utf8               _inputEnd\n-  #1008 = Utf8               _currInputRowStart\n-  #1009 = Utf8               _currInputProcessed\n-  #1010 = Utf8               JSON_READ_CAPABILITIES\n-  #1011 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #1012 = Utf8               write\n-  #1013 = Utf8               ([BII)V\n-  #1014 = Utf8               java/io/InputStream\n-  #1015 = Utf8               read\n-  #1016 = Utf8               ([BII)I\n-  #1017 = Utf8               append\n-  #1018 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #1019 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #1020 = Utf8               toString\n-  #1021 = Utf8               _ioContext\n-  #1022 = Utf8               com/fasterxml/jackson/core/io/IOContext\n-  #1023 = Utf8               isResourceManaged\n-  #1024 = Class              #1207        // com/fasterxml/jackson/core/JsonParser\n-  #1025 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n-  #1026 = Utf8               Feature\n-  #1027 = Utf8               InnerClasses\n-  #1028 = Utf8               AUTO_CLOSE_SOURCE\n-  #1029 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #1030 = Utf8               isEnabled\n-  #1031 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-  #1032 = Utf8               close\n-  #1033 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #1034 = Utf8               release\n-  #1035 = Utf8               NO_BYTES\n-  #1036 = Utf8               releaseReadIOBuffer\n-  #1037 = Utf8               ([B)V\n-  #1038 = Utf8               _currToken\n-  #1039 = Utf8               VALUE_STRING\n-  #1040 = Utf8               _textBuffer\n-  #1041 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n-  #1042 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n-  #1043 = Utf8               contentsAsString\n-  #1044 = Utf8               contentsToWriter\n-  #1045 = Utf8               FIELD_NAME\n-  #1046 = Utf8               _parsingContext\n-  #1047 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #1048 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n-  #1049 = Utf8               getCurrentName\n-  #1050 = Utf8               java/io/Writer\n-  #1051 = Utf8               length\n-  #1052 = Utf8               isNumeric\n-  #1053 = Utf8               asCharArray\n-  #1054 = Utf8               ([C)V\n-  #1055 = Utf8               VALUE_NUMBER_INT\n-  #1056 = Utf8               VALUE_NUMBER_FLOAT\n-  #1057 = Utf8               _numTypesValid\n-  #1058 = Utf8               _parseIntValue\n-  #1059 = Utf8               convertNumberToInt\n-  #1060 = Utf8               _numberInt\n-  #1061 = Utf8               id\n-  #1062 = Utf8               asString\n-  #1063 = Utf8               _nameCopied\n-  #1064 = Utf8               _nameCopyBuffer\n-  #1065 = Utf8               allocNameCopyBuffer\n-  #1066 = Utf8               (I)[C\n-  #1067 = Utf8               getChars\n-  #1068 = Utf8               (II[CI)V\n-  #1069 = Utf8               getTextBuffer\n-  #1070 = Utf8               size\n-  #1071 = Utf8               VALUE_EMBEDDED_OBJECT\n-  #1072 = Utf8               _binaryValue\n-  #1073 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #1074 = Utf8               _reportError\n-  #1075 = Utf8               getMessage\n-  #1076 = Utf8               _constructError\n-  #1077 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #1078 = Utf8               _getByteArrayBuilder\n-  #1079 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #1080 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #1081 = Utf8               toByteArray\n-  #1082 = Utf8               ()[B\n-  #1083 = Utf8               allocBase64Buffer\n-  #1084 = Utf8               releaseBase64Buffer\n-  #1085 = Utf8               decodeBase64Char\n-  #1086 = Utf8               _decodeBase64Escape\n-  #1087 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;II)I\n-  #1088 = Utf8               requiresPaddingOnRead\n-  #1089 = Utf8               _handleBase64MissingPadding\n-  #1090 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #1091 = Utf8               usesPaddingChar\n-  #1092 = Utf8               (I)Z\n-  #1093 = Utf8               getPaddingChar\n-  #1094 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #1095 = Utf8               reportInvalidBase64Char\n-  #1096 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n-  #1097 = Utf8               END_ARRAY\n-  #1098 = Utf8               END_OBJECT\n-  #1099 = Utf8               expectComma\n-  #1100 = Utf8               typeDesc\n-  #1101 = Utf8               _reportUnexpectedChar\n-  #1102 = Utf8               (ILjava/lang/String;)V\n-  #1103 = Utf8               _features\n-  #1104 = Utf8               inObject\n-  #1105 = Utf8               setCurrentName\n-  #1106 = Utf8               _nextToken\n-  #1107 = Utf8               com/fasterxml/jackson/core/json/JsonReadFeature\n-  #1108 = Utf8               ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\n-  #1109 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n-  #1110 = Utf8               mappedFeature\n-  #1111 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n-  #1112 = Utf8               VALUE_FALSE\n-  #1113 = Utf8               VALUE_NULL\n-  #1114 = Utf8               VALUE_TRUE\n-  #1115 = Utf8               START_ARRAY\n-  #1116 = Utf8               START_OBJECT\n-  #1117 = Utf8               _tokenInputRow\n-  #1118 = Utf8               _tokenInputCol\n-  #1119 = Utf8               createChildArrayContext\n-  #1120 = Utf8               createChildObjectContext\n-  #1121 = Utf8               asQuotedUTF8\n-  #1122 = Utf8               getValue\n-  #1123 = Utf8               equals\n-  #1124 = Utf8               (Ljava/lang/Object;)Z\n-  #1125 = Utf8               getIntValue\n-  #1126 = Utf8               getLongValue\n-  #1127 = Utf8               ()J\n-  #1128 = Utf8               java/lang/Boolean\n-  #1129 = Utf8               TRUE\n-  #1130 = Utf8               Ljava/lang/Boolean;\n-  #1131 = Utf8               FALSE\n-  #1132 = Utf8               ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\n-  #1133 = Utf8               emptyAndGetCurrentSegment\n-  #1134 = Utf8               java/lang/Math\n-  #1135 = Utf8               min\n-  #1136 = Utf8               setCurrentLength\n-  #1137 = Utf8               inRoot\n-  #1138 = Utf8               resetInt\n-  #1139 = Utf8               (ZI)Lcom/fasterxml/jackson/core/JsonToken;\n-  #1140 = Utf8               finishCurrentSegment\n-  #1141 = Utf8               reportInvalidNumber\n-  #1142 = Utf8               ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\n-  #1143 = Utf8               _reportUnexpectedNumberChar\n-  #1144 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n-  #1145 = Utf8               resetFloat\n-  #1146 = Utf8               (ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n-  #1147 = Utf8               _currInputRow\n-  #1148 = Utf8               _reportMissingRootWS\n-  #1149 = Utf8               growArrayBy\n-  #1150 = Utf8               ([II)[I\n-  #1151 = Utf8               _reportInvalidEOF\n-  #1152 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #1153 = Utf8               _throwUnquotedSpace\n-  #1154 = Utf8               ([II)Ljava/lang/String;\n-  #1155 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n-  #1156 = Utf8               getInputCodeUtf8JsNames\n-  #1157 = Utf8               ()[I\n-  #1158 = Utf8               expandCurrentSegment\n-  #1159 = Utf8               ([CII)V\n-  #1160 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n-  #1161 = Utf8               setCurrentAndReturn\n-  #1162 = Utf8               inArray\n-  #1163 = Utf8               resetAsNaN\n-  #1164 = Utf8               (Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n-  #1165 = Utf8               _reportInvalidEOFInValue\n-  #1166 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #1167 = Utf8               java/lang/Character\n-  #1168 = Utf8               isJavaIdentifierStart\n-  #1169 = Utf8               _validJsonTokenList\n-  #1170 = Utf8               _validJsonValueList\n-  #1171 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #1172 = Utf8               charAt\n-  #1173 = Utf8               (I)C\n-  #1174 = Utf8               substring\n-  #1175 = Utf8               isJavaIdentifierPart\n-  #1176 = Utf8               (C)Z\n-  #1177 = Utf8               _throwInvalidSpace\n-  #1178 = Utf8               _eofAsNextChar\n-  #1179 = Utf8               getInputCodeComment\n-  #1180 = Utf8               _handleUnrecognizedCharacterEscape\n-  #1181 = Utf8               (C)C\n-  #1182 = Utf8               charToHex\n-  #1183 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #1184 = Utf8               java/lang/Integer\n-  #1185 = Utf8               toHexString\n-  #1186 = Utf8               appendTwoBytes\n-  #1187 = Utf8               appendThreeBytes\n-  #1188 = Utf8               _contentReference\n-  #1189 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n-  #1190 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n-  #1191 = Utf8               _tokenInputTotal\n-  #1192 = Utf8               _reportMismatchedEndMarker\n-  #1193 = Utf8               (IC)V\n-  #1194 = Utf8               clearAndGetParent\n-  #1195 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n-  #1196 = Utf8               ALLOW_TRAILING_COMMA\n-  #1197 = Utf8               getMask\n-  #1198 = Utf8               ALLOW_NUMERIC_LEADING_ZEROS\n-  #1199 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n-  #1200 = Utf8               ALLOW_MISSING_VALUES\n-  #1201 = Utf8               ALLOW_SINGLE_QUOTES\n-  #1202 = Utf8               ALLOW_UNQUOTED_FIELD_NAMES\n-  #1203 = Utf8               ALLOW_COMMENTS\n-  #1204 = Utf8               ALLOW_YAML_COMMENTS\n-  #1205 = Utf8               getInputCodeUtf8\n-  #1206 = Utf8               getInputCodeLatin1\n-  #1207 = Utf8               com/fasterxml/jackson/core/JsonParser\n+   #448 = Utf8               getTextLength\n+   #449 = Utf8               getTextOffset\n+   #450 = Utf8               getBinaryValue\n+   #451 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #452 = Utf8               iae\n+   #453 = Utf8               Ljava/lang/IllegalArgumentException;\n+   #454 = Utf8               builder\n+   #455 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #456 = Utf8               b64variant\n+   #457 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+   #458 = Utf8               readBinaryValue\n+   #459 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;)I\n+   #460 = Utf8               b\n+   #461 = Class              #990         // java/io/OutputStream\n+   #462 = Class              #373         // \"[B\"\n+   #463 = Class              #991         // java/lang/Throwable\n+   #464 = Utf8               _readBinary\n+   #465 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+   #466 = Utf8               bits\n+   #467 = Utf8               decodedData\n+   #468 = Utf8               buffer\n+   #469 = Utf8               outputPtr\n+   #470 = Utf8               outputEnd\n+   #471 = Utf8               outputCount\n+   #472 = Utf8               nextToken\n+   #473 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+   #474 = Utf8               i\n+   #475 = Utf8               _nextTokenNotInObject\n+   #476 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #477 = Utf8               _nextAfterName\n+   #478 = Utf8               finishToken\n+   #479 = Utf8               nextFieldName\n+   #480 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Z\n+   #481 = Utf8               offset\n+   #482 = Utf8               ptr\n+   #483 = Utf8               nameBytes\n+   #484 = Utf8               len\n+   #485 = Utf8               str\n+   #486 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n+   #487 = Class              #992         // com/fasterxml/jackson/core/SerializableString\n+   #488 = Utf8               nameStr\n+   #489 = Utf8               _skipColonFast\n+   #490 = Utf8               _isNextTokenNameYes\n+   #491 = Utf8               (I)V\n+   #492 = Utf8               _isNextTokenNameMaybe\n+   #493 = Utf8               (ILcom/fasterxml/jackson/core/SerializableString;)Z\n+   #494 = Utf8               match\n+   #495 = Utf8               nextTextValue\n+   #496 = Utf8               nextIntValue\n+   #497 = Utf8               defaultValue\n+   #498 = Utf8               nextLongValue\n+   #499 = Utf8               (J)J\n+   #500 = Utf8               J\n+   #501 = Utf8               nextBooleanValue\n+   #502 = Utf8               ()Ljava/lang/Boolean;\n+   #503 = Utf8               _parseFloatThatStartsWithPeriod\n+   #504 = Utf8               (ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #505 = Utf8               neg\n+   #506 = Utf8               hasSign\n+   #507 = Utf8               outBuf\n+   #508 = Utf8               outPtr\n+   #509 = Class              #430         // \"[C\"\n+   #510 = Utf8               _parseUnsignedNumber\n+   #511 = Utf8               intLen\n+   #512 = Utf8               _parseSignedNumber\n+   #513 = Utf8               (Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #514 = Utf8               negative\n+   #515 = Utf8               _parseNumber2\n+   #516 = Utf8               ([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #517 = Utf8               intPartLength\n+   #518 = Utf8               _verifyNoLeadingZeroes\n+   #519 = Utf8               _parseFloat\n+   #520 = Utf8               ([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #521 = Utf8               integerPartLength\n+   #522 = Utf8               fractLen\n+   #523 = Utf8               eof\n+   #524 = Utf8               expLen\n+   #525 = Utf8               _verifyRootSpace\n+   #526 = Utf8               _parseName\n+   #527 = Utf8               (I)Ljava/lang/String;\n+   #528 = Utf8               input\n+   #529 = Utf8               codes\n+   #530 = Utf8               q\n+   #531 = Class              #357         // \"[I\"\n+   #532 = Utf8               parseMediumName\n+   #533 = Utf8               q2\n+   #534 = Utf8               parseMediumName2\n+   #535 = Utf8               (II)Ljava/lang/String;\n+   #536 = Utf8               q3\n+   #537 = Utf8               parseLongName\n+   #538 = Utf8               (III)Ljava/lang/String;\n+   #539 = Utf8               qlen\n+   #540 = Utf8               slowParseName\n+   #541 = Utf8               parseName\n+   #542 = Utf8               q1\n+   #543 = Utf8               lastQuadBytes\n+   #544 = Utf8               (IIII)Ljava/lang/String;\n+   #545 = Utf8               (IIIII)Ljava/lang/String;\n+   #546 = Utf8               parseEscapedName\n+   #547 = Utf8               ([IIIII)Ljava/lang/String;\n+   #548 = Utf8               quads\n+   #549 = Utf8               currQuad\n+   #550 = Utf8               currQuadBytes\n+   #551 = Utf8               _handleOddName\n+   #552 = Utf8               C\n+   #553 = Utf8               _parseAposName\n+   #554 = Utf8               findName\n+   #555 = Class              #993         // com/fasterxml/jackson/core/JsonParseException\n+   #556 = Class              #994         // com/fasterxml/jackson/core/exc/StreamConstraintsException\n+   #557 = Utf8               ([IIII)Ljava/lang/String;\n+   #558 = Utf8               lastQuad\n+   #559 = Utf8               addName\n+   #560 = Utf8               ([III)Ljava/lang/String;\n+   #561 = Utf8               needed\n+   #562 = Utf8               ch2\n+   #563 = Utf8               byteIx\n+   #564 = Utf8               ix\n+   #565 = Utf8               byteLen\n+   #566 = Utf8               cbuf\n+   #567 = Utf8               cix\n+   #568 = Utf8               baseName\n+   #569 = Utf8               _padLastQuad\n+   #570 = Utf8               (II)I\n+   #571 = Utf8               bytes\n+   #572 = Utf8               _loadMoreGuaranteed\n+   #573 = Utf8               _finishString\n+   #574 = Utf8               max\n+   #575 = Utf8               _finishAndReturnString\n+   #576 = Utf8               _finishString2\n+   #577 = Utf8               ([CI)V\n+   #578 = Utf8               _skipString\n+   #579 = Utf8               _handleUnexpectedValue\n+   #580 = Utf8               _handleApos\n+   #581 = Utf8               max2\n+   #582 = Utf8               _handleInvalidNumberStart\n+   #583 = Utf8               (IZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #584 = Utf8               (IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #585 = Utf8               message\n+   #586 = Utf8               _matchTrue\n+   #587 = Utf8               _matchFalse\n+   #588 = Utf8               _matchNull\n+   #589 = Utf8               _matchToken\n+   #590 = Utf8               (Ljava/lang/String;I)V\n+   #591 = Utf8               matchStr\n+   #592 = Utf8               _matchToken2\n+   #593 = Utf8               _checkMatchEnd\n+   #594 = Utf8               (Ljava/lang/String;II)V\n+   #595 = Utf8               _skipWS\n+   #596 = Utf8               _skipWS2\n+   #597 = Utf8               _skipWSOrEnd\n+   #598 = Utf8               _skipWSOrEnd2\n+   #599 = Utf8               _skipColon\n+   #600 = Utf8               _skipColon2\n+   #601 = Utf8               (Z)I\n+   #602 = Utf8               gotColon\n+   #603 = Utf8               _skipComment\n+   #604 = Utf8               _skipCComment\n+   #605 = Utf8               code\n+   #606 = Utf8               _skipYAMLComment\n+   #607 = Utf8               _skipLine\n+   #608 = Utf8               _decodeEscaped\n+   #609 = Utf8               ()C\n+   #610 = Utf8               digit\n+   #611 = Utf8               value\n+   #612 = Utf8               _decodeCharForError\n+   #613 = Utf8               d\n+   #614 = Utf8               firstByte\n+   #615 = Utf8               _decodeUtf8_2\n+   #616 = Utf8               _decodeUtf8_3\n+   #617 = Utf8               c1\n+   #618 = Utf8               _decodeUtf8_3fast\n+   #619 = Utf8               _decodeUtf8_4\n+   #620 = Utf8               _skipUtf8_2\n+   #621 = Utf8               _skipUtf8_3\n+   #622 = Utf8               _skipUtf8_4\n+   #623 = Utf8               _skipCR\n+   #624 = Utf8               nextByte\n+   #625 = Utf8               _reportInvalidToken\n+   #626 = Utf8               matchedPart\n+   #627 = Utf8               (Ljava/lang/String;)V\n+   #628 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+   #629 = Utf8               msg\n+   #630 = Utf8               sb\n+   #631 = Utf8               Ljava/lang/StringBuilder;\n+   #632 = Utf8               _reportInvalidChar\n+   #633 = Utf8               _reportInvalidInitial\n+   #634 = Utf8               mask\n+   #635 = Utf8               _reportInvalidOther\n+   #636 = Utf8               (II)V\n+   #637 = Utf8               _decodeBase64\n+   #638 = Class              #995         // com/fasterxml/jackson/core/util/ByteArrayBuilder\n+   #639 = Utf8               getTokenLocation\n+   #640 = Utf8               ()Lcom/fasterxml/jackson/core/JsonLocation;\n+   #641 = Utf8               total\n+   #642 = Utf8               getCurrentLocation\n+   #643 = Utf8               col\n+   #644 = Utf8               _updateLocation\n+   #645 = Utf8               _updateNameLocation\n+   #646 = Utf8               _closeScope\n+   #647 = Utf8               _closeArrayScope\n+   #648 = Utf8               _closeObjectScope\n+   #649 = Utf8               <clinit>\n+   #650 = Utf8               SourceFile\n+   #651 = Utf8               UTF8StreamJsonParser.java\n+   #652 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+   #653 = NameAndType        #375:#395    // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILjava/io/InputStream;Lcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;[BIIIZ)V\n+   #654 = NameAndType        #375:#996    // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+   #655 = NameAndType        #363:#357    // _quadBuffer:[I\n+   #656 = NameAndType        #370:#371    // _inputStream:Ljava/io/InputStream;\n+   #657 = NameAndType        #359:#360    // _objectCodec:Lcom/fasterxml/jackson/core/ObjectCodec;\n+   #658 = NameAndType        #361:#362    // _symbols:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #659 = NameAndType        #372:#373    // _inputBuffer:[B\n+   #660 = NameAndType        #997:#348    // _inputPtr:I\n+   #661 = NameAndType        #998:#348    // _inputEnd:I\n+   #662 = NameAndType        #999:#348    // _currInputRowStart:I\n+   #663 = NameAndType        #1000:#500   // _currInputProcessed:J\n+   #664 = NameAndType        #374:#365    // _bufferRecyclable:Z\n+   #665 = NameAndType        #1001:#1002  // JSON_READ_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #666 = NameAndType        #1003:#1004  // write:([BII)V\n+   #667 = Class              #1005        // java/io/InputStream\n+   #668 = NameAndType        #1006:#1007  // read:([BII)I\n+   #669 = NameAndType        #367:#348    // _nameStartOffset:I\n+   #670 = NameAndType        #420:#421    // _closeInput:()V\n+   #671 = Utf8               java/io/IOException\n+   #672 = Utf8               java/lang/StringBuilder\n+   #673 = NameAndType        #375:#421    // \"<init>\":()V\n+   #674 = Utf8               InputStream.read() returned 0 characters when trying to read\n+   #675 = NameAndType        #1008:#1009  // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #676 = NameAndType        #1008:#1010  // append:(I)Ljava/lang/StringBuilder;\n+   #677 = Utf8                bytes\n+   #678 = NameAndType        #1011:#425   // toString:()Ljava/lang/String;\n+   #679 = NameAndType        #375:#627    // \"<init>\":(Ljava/lang/String;)V\n+   #680 = NameAndType        #1012:#383   // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+   #681 = Class              #1013        // com/fasterxml/jackson/core/io/IOContext\n+   #682 = NameAndType        #1014:#417   // isResourceManaged:()Z\n+   #683 = Class              #1016        // com/fasterxml/jackson/core/JsonParser$Feature\n+   #684 = NameAndType        #1019:#1020  // AUTO_CLOSE_SOURCE:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #685 = NameAndType        #1021:#1022  // isEnabled:(Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+   #686 = NameAndType        #1023:#421   // close:()V\n+   #687 = NameAndType        #422:#421    // _releaseBuffers:()V\n+   #688 = Class              #1024        // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+   #689 = NameAndType        #1025:#421   // release:()V\n+   #690 = NameAndType        #1026:#373   // NO_BYTES:[B\n+   #691 = NameAndType        #1027:#1028  // releaseReadIOBuffer:([B)V\n+   #692 = NameAndType        #1029:#434   // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #693 = NameAndType        #1030:#434   // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+   #694 = NameAndType        #364:#365    // _tokenIncomplete:Z\n+   #695 = NameAndType        #575:#425    // _finishAndReturnString:()Ljava/lang/String;\n+   #696 = NameAndType        #1031:#1032  // _textBuffer:Lcom/fasterxml/jackson/core/util/TextBuffer;\n+   #697 = Class              #1033        // com/fasterxml/jackson/core/util/TextBuffer\n+   #698 = NameAndType        #1034:#425   // contentsAsString:()Ljava/lang/String;\n+   #699 = NameAndType        #442:#443    // _getText2:(Lcom/fasterxml/jackson/core/JsonToken;)Ljava/lang/String;\n+   #700 = NameAndType        #573:#421    // _finishString:()V\n+   #701 = NameAndType        #1035:#426   // contentsToWriter:(Ljava/io/Writer;)I\n+   #702 = NameAndType        #1036:#434   // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+   #703 = NameAndType        #1037:#1038  // _parsingContext:Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #704 = Class              #1039        // com/fasterxml/jackson/core/json/JsonReadContext\n+   #705 = NameAndType        #1040:#425   // getCurrentName:()Ljava/lang/String;\n+   #706 = Class              #1041        // java/io/Writer\n+   #707 = NameAndType        #1003:#627   // write:(Ljava/lang/String;)V\n+   #708 = NameAndType        #1042:#440   // length:()I\n+   #709 = NameAndType        #1043:#417   // isNumeric:()Z\n+   #710 = NameAndType        #1044:#445   // asCharArray:()[C\n+   #711 = NameAndType        #1003:#1045  // write:([C)V\n+   #712 = NameAndType        #436:#437    // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+   #713 = NameAndType        #1046:#434   // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #714 = NameAndType        #1047:#434   // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #715 = NameAndType        #1048:#348   // _numTypesValid:I\n+   #716 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n+   #717 = NameAndType        #1049:#440   // _parseIntValue:()I\n+   #718 = NameAndType        #1050:#421   // convertNumberToInt:()V\n+   #719 = NameAndType        #1051:#348   // _numberInt:I\n+   #720 = NameAndType        #439:#441    // getValueAsInt:(I)I\n+   #721 = NameAndType        #1052:#440   // id:()I\n+   #722 = NameAndType        #1053:#425   // asString:()Ljava/lang/String;\n+   #723 = NameAndType        #1054:#365   // _nameCopied:Z\n+   #724 = NameAndType        #1055:#430   // _nameCopyBuffer:[C\n+   #725 = NameAndType        #1056:#1057  // allocNameCopyBuffer:(I)[C\n+   #726 = NameAndType        #1058:#1059  // getChars:(II[CI)V\n+   #727 = NameAndType        #1060:#445   // getTextBuffer:()[C\n+   #728 = NameAndType        #1061:#440   // size:()I\n+   #729 = NameAndType        #449:#440    // getTextOffset:()I\n+   #730 = NameAndType        #1062:#434   // VALUE_EMBEDDED_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #731 = NameAndType        #1063:#373   // _binaryValue:[B\n+   #732 = Utf8               Current token (\n+   #733 = NameAndType        #1008:#1064  // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #734 = Utf8               ) not VALUE_STRING or VALUE_EMBEDDED_OBJECT, can not access as binary\n+   #735 = NameAndType        #1065:#627   // _reportError:(Ljava/lang/String;)V\n+   #736 = NameAndType        #637:#451    // _decodeBase64:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #737 = Utf8               java/lang/IllegalArgumentException\n+   #738 = Utf8               Failed to decode VALUE_STRING as base64 (\n+   #739 = Utf8               ):\n+   #740 = NameAndType        #1066:#425   // getMessage:()Ljava/lang/String;\n+   #741 = NameAndType        #1067:#1068  // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+   #742 = NameAndType        #1069:#1070  // _getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+   #743 = NameAndType        #424:#425    // getText:()Ljava/lang/String;\n+   #744 = NameAndType        #637:#1071   // _decodeBase64:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #745 = NameAndType        #1072:#1073  // toByteArray:()[B\n+   #746 = NameAndType        #450:#451    // getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B\n+   #747 = NameAndType        #1003:#1028  // write:([B)V\n+   #748 = NameAndType        #1074:#1073  // allocBase64Buffer:()[B\n+   #749 = NameAndType        #464:#465    // _readBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/OutputStream;[B)I\n+   #750 = NameAndType        #1075:#1028  // releaseBase64Buffer:([B)V\n+   #751 = NameAndType        #572:#421    // _loadMoreGuaranteed:()V\n+   #752 = NameAndType        #1076:#441   // decodeBase64Char:(I)I\n+   #753 = NameAndType        #1077:#1078  // _decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+   #754 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+   #755 = NameAndType        #1079:#417   // requiresPaddingOnRead:()Z\n+   #756 = NameAndType        #1080:#1081  // _handleBase64MissingPadding:(Lcom/fasterxml/jackson/core/Base64Variant;)V\n+   #757 = NameAndType        #1082:#1083  // usesPaddingChar:(I)Z\n+   #758 = Utf8               expected padding character \\'\n+   #759 = NameAndType        #1084:#609   // getPaddingChar:()C\n+   #760 = NameAndType        #1008:#1085  // append:(C)Ljava/lang/StringBuilder;\n+   #761 = Utf8               \\'\n+   #762 = NameAndType        #1086:#1087  // reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+   #763 = NameAndType        #477:#473    // _nextAfterName:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #764 = NameAndType        #578:#421    // _skipString:()V\n+   #765 = NameAndType        #597:#440    // _skipWSOrEnd:()I\n+   #766 = NameAndType        #647:#421    // _closeArrayScope:()V\n+   #767 = NameAndType        #1088:#434   // END_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #768 = NameAndType        #648:#421    // _closeObjectScope:()V\n+   #769 = NameAndType        #1089:#434   // END_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #770 = NameAndType        #1090:#417   // expectComma:()Z\n+   #771 = Utf8               was expecting comma to separate\n+   #772 = NameAndType        #1091:#425   // typeDesc:()Ljava/lang/String;\n+   #773 = Utf8                entries\n+   #774 = NameAndType        #1092:#1093  // _reportUnexpectedChar:(ILjava/lang/String;)V\n+   #775 = NameAndType        #595:#440    // _skipWS:()I\n+   #776 = NameAndType        #1094:#348   // _features:I\n+   #777 = NameAndType        #347:#348    // FEAT_MASK_TRAILING_COMMA:I\n+   #778 = NameAndType        #646:#476    // _closeScope:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #779 = NameAndType        #1095:#417   // inObject:()Z\n+   #780 = NameAndType        #644:#421    // _updateLocation:()V\n+   #781 = NameAndType        #475:#476    // _nextTokenNotInObject:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #782 = NameAndType        #645:#421    // _updateNameLocation:()V\n+   #783 = NameAndType        #526:#527    // _parseName:(I)Ljava/lang/String;\n+   #784 = NameAndType        #1096:#627   // setCurrentName:(Ljava/lang/String;)V\n+   #785 = NameAndType        #599:#440    // _skipColon:()I\n+   #786 = NameAndType        #1097:#434   // _nextToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #787 = NameAndType        #512:#513    // _parseSignedNumber:(Z)Lcom/fasterxml/jackson/core/JsonToken;\n+   #788 = Class              #1098        // com/fasterxml/jackson/core/json/JsonReadFeature\n+   #789 = NameAndType        #1099:#1100  // ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #790 = NameAndType        #1101:#1102  // mappedFeature:()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #791 = NameAndType        #579:#476    // _handleUnexpectedValue:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #792 = NameAndType        #503:#504    // _parseFloatThatStartsWithPeriod:(ZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #793 = NameAndType        #510:#476    // _parseUnsignedNumber:(I)Lcom/fasterxml/jackson/core/JsonToken;\n+   #794 = NameAndType        #587:#421    // _matchFalse:()V\n+   #795 = NameAndType        #1103:#434   // VALUE_FALSE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #796 = NameAndType        #588:#421    // _matchNull:()V\n+   #797 = NameAndType        #1104:#434   // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #798 = NameAndType        #586:#421    // _matchTrue:()V\n+   #799 = NameAndType        #1105:#434   // VALUE_TRUE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #800 = NameAndType        #1106:#434   // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #801 = NameAndType        #1107:#434   // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #802 = NameAndType        #1108:#348   // _tokenInputRow:I\n+   #803 = NameAndType        #1109:#348   // _tokenInputCol:I\n+   #804 = NameAndType        #1110:#636   // createChildArrayContext:(II)V\n+   #805 = NameAndType        #1111:#636   // createChildObjectContext:(II)V\n+   #806 = NameAndType        #1112:#1073  // asQuotedUTF8:()[B\n+   #807 = NameAndType        #1113:#425   // getValue:()Ljava/lang/String;\n+   #808 = NameAndType        #489:#441    // _skipColonFast:(I)I\n+   #809 = NameAndType        #490:#491    // _isNextTokenNameYes:(I)V\n+   #810 = NameAndType        #492:#493    // _isNextTokenNameMaybe:(ILcom/fasterxml/jackson/core/SerializableString;)Z\n+   #811 = NameAndType        #600:#601    // _skipColon2:(Z)I\n+   #812 = NameAndType        #1114:#1115  // equals:(Ljava/lang/Object;)Z\n+   #813 = NameAndType        #472:#473    // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #814 = NameAndType        #1116:#440   // getIntValue:()I\n+   #815 = NameAndType        #1117:#1118  // getLongValue:()J\n+   #816 = Class              #1119        // java/lang/Boolean\n+   #817 = NameAndType        #1120:#1121  // TRUE:Ljava/lang/Boolean;\n+   #818 = NameAndType        #1122:#1121  // FALSE:Ljava/lang/Boolean;\n+   #819 = NameAndType        #1123:#1100  // ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #820 = NameAndType        #1124:#445   // emptyAndGetCurrentSegment:()[C\n+   #821 = NameAndType        #519:#520    // _parseFloat:([CIIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #822 = NameAndType        #518:#440    // _verifyNoLeadingZeroes:()I\n+   #823 = Class              #1125        // java/lang/Math\n+   #824 = NameAndType        #1126:#570   // min:(II)I\n+   #825 = NameAndType        #515:#516    // _parseNumber2:([CIZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #826 = NameAndType        #1127:#491   // setCurrentLength:(I)V\n+   #827 = NameAndType        #1128:#417   // inRoot:()Z\n+   #828 = NameAndType        #525:#491    // _verifyRootSpace:(I)V\n+   #829 = NameAndType        #1129:#1130  // resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+   #830 = NameAndType        #582:#584    // _handleInvalidNumberStart:(IZZ)Lcom/fasterxml/jackson/core/JsonToken;\n+   #831 = NameAndType        #416:#417    // _loadMore:()Z\n+   #832 = NameAndType        #1131:#445   // finishCurrentSegment:()[C\n+   #833 = NameAndType        #349:#348    // FEAT_MASK_LEADING_ZEROS:I\n+   #834 = Utf8               Leading zeroes not allowed\n+   #835 = NameAndType        #1132:#627   // reportInvalidNumber:(Ljava/lang/String;)V\n+   #836 = NameAndType        #1133:#1100  // ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS:Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+   #837 = Utf8               Decimal point not followed by a digit\n+   #838 = NameAndType        #1134:#1135  // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #839 = Utf8               Exponent indicator not followed by a digit\n+   #840 = NameAndType        #1136:#1137  // resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+   #841 = NameAndType        #1138:#348   // _currInputRow:I\n+   #842 = NameAndType        #1139:#491   // _reportMissingRootWS:(I)V\n+   #843 = NameAndType        #551:#527    // _handleOddName:(I)Ljava/lang/String;\n+   #844 = NameAndType        #540:#425    // slowParseName:()Ljava/lang/String;\n+   #845 = NameAndType        #358:#357    // _icLatin1:[I\n+   #846 = NameAndType        #366:#348    // _quad1:I\n+   #847 = NameAndType        #532:#527    // parseMediumName:(I)Ljava/lang/String;\n+   #848 = NameAndType        #554:#535    // findName:(II)Ljava/lang/String;\n+   #849 = NameAndType        #541:#538    // parseName:(III)Ljava/lang/String;\n+   #850 = Utf8\n+   #851 = NameAndType        #554:#538    // findName:(III)Ljava/lang/String;\n+   #852 = NameAndType        #541:#544    // parseName:(IIII)Ljava/lang/String;\n+   #853 = NameAndType        #534:#535    // parseMediumName2:(II)Ljava/lang/String;\n+   #854 = NameAndType        #554:#544    // findName:(IIII)Ljava/lang/String;\n+   #855 = NameAndType        #541:#545    // parseName:(IIIII)Ljava/lang/String;\n+   #856 = NameAndType        #537:#538    // parseLongName:(III)Ljava/lang/String;\n+   #857 = NameAndType        #554:#557    // findName:([IIII)Ljava/lang/String;\n+   #858 = NameAndType        #546:#547    // parseEscapedName:([IIIII)Ljava/lang/String;\n+   #859 = NameAndType        #1140:#1141  // growArrayBy:([II)[I\n+   #860 = Utf8               : was expecting closing \\'\\\"\\' for name\n+   #861 = NameAndType        #1142:#1143  // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #862 = NameAndType        #1144:#1093  // _throwUnquotedSpace:(ILjava/lang/String;)V\n+   #863 = NameAndType        #608:#609    // _decodeEscaped:()C\n+   #864 = Utf8                in field name\n+   #865 = NameAndType        #569:#570    // _padLastQuad:(II)I\n+   #866 = NameAndType        #554:#1145   // findName:([II)Ljava/lang/String;\n+   #867 = NameAndType        #559:#560    // addName:([III)Ljava/lang/String;\n+   #868 = NameAndType        #352:#348    // FEAT_MASK_ALLOW_SINGLE_QUOTES:I\n+   #869 = NameAndType        #553:#425    // _parseAposName:()Ljava/lang/String;\n+   #870 = NameAndType        #353:#348    // FEAT_MASK_ALLOW_UNQUOTED_NAMES:I\n+   #871 = NameAndType        #612:#441    // _decodeCharForError:(I)I\n+   #872 = Utf8               was expecting double-quote to start field name\n+   #873 = Class              #1146        // com/fasterxml/jackson/core/io/CharTypes\n+   #874 = NameAndType        #1147:#1148  // getInputCodeUtf8JsNames:()[I\n+   #875 = Utf8               was expecting either valid name character (for unquoted name) or double-quote (for quoted) to start field name\n+   #876 = Utf8               : was expecting closing \\'\\'\\' for field name\n+   #877 = NameAndType        #554:#527    // findName:(I)Ljava/lang/String;\n+   #878 = NameAndType        #633:#491    // _reportInvalidInitial:(I)V\n+   #879 = NameAndType        #635:#491    // _reportInvalidOther:(I)V\n+   #880 = NameAndType        #1149:#445   // expandCurrentSegment:()[C\n+   #881 = Utf8               java/lang/String\n+   #882 = NameAndType        #375:#1150   // \"<init>\":([CII)V\n+   #883 = NameAndType        #559:#1151   // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+   #884 = NameAndType        #1142:#421   // _reportInvalidEOF:()V\n+   #885 = NameAndType        #356:#357    // _icUTF8:[I\n+   #886 = NameAndType        #576:#577    // _finishString2:([CI)V\n+   #887 = NameAndType        #1152:#527   // setCurrentAndReturn:(I)Ljava/lang/String;\n+   #888 = NameAndType        #615:#441    // _decodeUtf8_2:(I)I\n+   #889 = NameAndType        #618:#441    // _decodeUtf8_3fast:(I)I\n+   #890 = NameAndType        #616:#441    // _decodeUtf8_3:(I)I\n+   #891 = NameAndType        #619:#441    // _decodeUtf8_4:(I)I\n+   #892 = Utf8               string value\n+   #893 = NameAndType        #632:#491    // _reportInvalidChar:(I)V\n+   #894 = NameAndType        #620:#421    // _skipUtf8_2:()V\n+   #895 = NameAndType        #621:#421    // _skipUtf8_3:()V\n+   #896 = NameAndType        #622:#491    // _skipUtf8_4:(I)V\n+   #897 = NameAndType        #1153:#417   // inArray:()Z\n+   #898 = NameAndType        #351:#348    // FEAT_MASK_ALLOW_MISSING:I\n+   #899 = Utf8               expected a value\n+   #900 = NameAndType        #580:#473    // _handleApos:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #901 = Utf8               NaN\n+   #902 = NameAndType        #589:#590    // _matchToken:(Ljava/lang/String;I)V\n+   #903 = NameAndType        #350:#348    // FEAT_MASK_NON_NUM_NUMBERS:I\n+   #904 = Utf8               java/lang/Double\n+   #905 = NameAndType        #1154:#1155  // resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+   #906 = Utf8               Non-standard token \\'NaN\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #907 = Utf8               Infinity\n+   #908 = Utf8               Non-standard token \\'Infinity\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #909 = NameAndType        #1156:#1157  // _reportInvalidEOFInValue:(Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #910 = Class              #1158        // java/lang/Character\n+   #911 = NameAndType        #1159:#1083  // isJavaIdentifierStart:(I)Z\n+   #912 = NameAndType        #1160:#425   // _validJsonTokenList:()Ljava/lang/String;\n+   #913 = NameAndType        #625:#628    // _reportInvalidToken:(Ljava/lang/String;Ljava/lang/String;)V\n+   #914 = Utf8               expected a valid value\n+   #915 = NameAndType        #1161:#425   // _validJsonValueList:()Ljava/lang/String;\n+   #916 = Utf8               -INF\n+   #917 = Utf8               +INF\n+   #918 = Utf8               -Infinity\n+   #919 = Utf8               +Infinity\n+   #920 = Utf8               Non-standard token \\'%s\\': enable `JsonReadFeature.ALLOW_NON_NUMERIC_NUMBERS` to allow\n+   #921 = NameAndType        #1065:#1162  // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #922 = Utf8               JSON spec does not allow numbers to have plus signs: enable `JsonReadFeature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS` to allow\n+   #923 = Utf8               expected digit (0-9) to follow minus sign, for valid numeric value\n+   #924 = Utf8               expected digit (0-9) for valid numeric value\n+   #925 = Utf8               true\n+   #926 = NameAndType        #592:#590    // _matchToken2:(Ljava/lang/String;I)V\n+   #927 = Utf8               false\n+   #928 = Utf8               null\n+   #929 = NameAndType        #1163:#1164  // charAt:(I)C\n+   #930 = NameAndType        #1165:#535   // substring:(II)Ljava/lang/String;\n+   #931 = NameAndType        #625:#627    // _reportInvalidToken:(Ljava/lang/String;)V\n+   #932 = NameAndType        #593:#594    // _checkMatchEnd:(Ljava/lang/String;II)V\n+   #933 = NameAndType        #1166:#1167  // isJavaIdentifierPart:(C)Z\n+   #934 = NameAndType        #596:#440    // _skipWS2:()I\n+   #935 = NameAndType        #623:#421    // _skipCR:()V\n+   #936 = NameAndType        #1168:#491   // _throwInvalidSpace:(I)V\n+   #937 = NameAndType        #603:#421    // _skipComment:()V\n+   #938 = NameAndType        #606:#417    // _skipYAMLComment:()Z\n+   #939 = Utf8               Unexpected end-of-input within/between\n+   #940 = NameAndType        #1169:#440   // _eofAsNextChar:()I\n+   #941 = NameAndType        #598:#440    // _skipWSOrEnd2:()I\n+   #942 = Utf8               was expecting a colon to separate field name and value\n+   #943 = Utf8                within/between\n+   #944 = NameAndType        #354:#348    // FEAT_MASK_ALLOW_JAVA_COMMENTS:I\n+   #945 = Utf8               maybe a (non-standard) comment? (not recognized as one since Feature \\'ALLOW_COMMENTS\\' not enabled for parser)\n+   #946 = Utf8                in a comment\n+   #947 = NameAndType        #607:#421    // _skipLine:()V\n+   #948 = NameAndType        #604:#421    // _skipCComment:()V\n+   #949 = Utf8               was expecting either \\'*\\' or \\'/\\' for a comment\n+   #950 = NameAndType        #1170:#1148  // getInputCodeComment:()[I\n+   #951 = NameAndType        #355:#348    // FEAT_MASK_ALLOW_YAML_COMMENTS:I\n+   #952 = Utf8                in character escape sequence\n+   #953 = NameAndType        #1171:#1172  // _handleUnrecognizedCharacterEscape:(C)C\n+   #954 = NameAndType        #1173:#441   // charToHex:(I)I\n+   #955 = Utf8               expected a hex-digit for character escape sequence\n+   #956 = NameAndType        #624:#440    // nextByte:()I\n+   #957 = NameAndType        #635:#636    // _reportInvalidOther:(II)V\n+   #958 = Utf8               com/fasterxml/jackson/core/json/UTF8StreamJsonParser\n+   #959 = Utf8               ...\n+   #960 = Utf8               Unrecognized token \\'%s\\': was expecting %s\n+   #961 = NameAndType        #1065:#1174  // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #962 = Utf8               Invalid UTF-8 start byte 0x\n+   #963 = Class              #1175        // java/lang/Integer\n+   #964 = NameAndType        #1176:#527   // toHexString:(I)Ljava/lang/String;\n+   #965 = Utf8               Invalid UTF-8 middle byte 0x\n+   #966 = NameAndType        #1008:#491   // append:(I)V\n+   #967 = NameAndType        #1177:#491   // appendTwoBytes:(I)V\n+   #968 = NameAndType        #1178:#491   // appendThreeBytes:(I)V\n+   #969 = Utf8               com/fasterxml/jackson/core/JsonLocation\n+   #970 = NameAndType        #1179:#1180  // _contentReference:()Lcom/fasterxml/jackson/core/io/ContentReference;\n+   #971 = NameAndType        #368:#348    // _nameStartRow:I\n+   #972 = NameAndType        #369:#348    // _nameStartCol:I\n+   #973 = NameAndType        #375:#1181   // \"<init>\":(Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+   #974 = NameAndType        #1182:#500   // _tokenInputTotal:J\n+   #975 = NameAndType        #1183:#1184  // _reportMismatchedEndMarker:(IC)V\n+   #976 = NameAndType        #1185:#1186  // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+   #977 = NameAndType        #1187:#1020  // ALLOW_TRAILING_COMMA:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #978 = NameAndType        #1188:#440   // getMask:()I\n+   #979 = NameAndType        #1189:#1020  // ALLOW_NUMERIC_LEADING_ZEROS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #980 = NameAndType        #1190:#1020  // ALLOW_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #981 = NameAndType        #1191:#1020  // ALLOW_MISSING_VALUES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #982 = NameAndType        #1192:#1020  // ALLOW_SINGLE_QUOTES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #983 = NameAndType        #1193:#1020  // ALLOW_UNQUOTED_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #984 = NameAndType        #1194:#1020  // ALLOW_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #985 = NameAndType        #1195:#1020  // ALLOW_YAML_COMMENTS:Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+   #986 = NameAndType        #1196:#1148  // getInputCodeUtf8:()[I\n+   #987 = NameAndType        #1197:#1148  // getInputCodeLatin1:()[I\n+   #988 = Utf8               com/fasterxml/jackson/core/base/ParserBase\n+   #989 = Utf8               com/fasterxml/jackson/core/JsonToken\n+   #990 = Utf8               java/io/OutputStream\n+   #991 = Utf8               java/lang/Throwable\n+   #992 = Utf8               com/fasterxml/jackson/core/SerializableString\n+   #993 = Utf8               com/fasterxml/jackson/core/JsonParseException\n+   #994 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n+   #995 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n+   #996 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;I)V\n+   #997 = Utf8               _inputPtr\n+   #998 = Utf8               _inputEnd\n+   #999 = Utf8               _currInputRowStart\n+  #1000 = Utf8               _currInputProcessed\n+  #1001 = Utf8               JSON_READ_CAPABILITIES\n+  #1002 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #1003 = Utf8               write\n+  #1004 = Utf8               ([BII)V\n+  #1005 = Utf8               java/io/InputStream\n+  #1006 = Utf8               read\n+  #1007 = Utf8               ([BII)I\n+  #1008 = Utf8               append\n+  #1009 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #1010 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #1011 = Utf8               toString\n+  #1012 = Utf8               _ioContext\n+  #1013 = Utf8               com/fasterxml/jackson/core/io/IOContext\n+  #1014 = Utf8               isResourceManaged\n+  #1015 = Class              #1198        // com/fasterxml/jackson/core/JsonParser\n+  #1016 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n+  #1017 = Utf8               Feature\n+  #1018 = Utf8               InnerClasses\n+  #1019 = Utf8               AUTO_CLOSE_SOURCE\n+  #1020 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #1021 = Utf8               isEnabled\n+  #1022 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+  #1023 = Utf8               close\n+  #1024 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+  #1025 = Utf8               release\n+  #1026 = Utf8               NO_BYTES\n+  #1027 = Utf8               releaseReadIOBuffer\n+  #1028 = Utf8               ([B)V\n+  #1029 = Utf8               _currToken\n+  #1030 = Utf8               VALUE_STRING\n+  #1031 = Utf8               _textBuffer\n+  #1032 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n+  #1033 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n+  #1034 = Utf8               contentsAsString\n+  #1035 = Utf8               contentsToWriter\n+  #1036 = Utf8               FIELD_NAME\n+  #1037 = Utf8               _parsingContext\n+  #1038 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #1039 = Utf8               com/fasterxml/jackson/core/json/JsonReadContext\n+  #1040 = Utf8               getCurrentName\n+  #1041 = Utf8               java/io/Writer\n+  #1042 = Utf8               length\n+  #1043 = Utf8               isNumeric\n+  #1044 = Utf8               asCharArray\n+  #1045 = Utf8               ([C)V\n+  #1046 = Utf8               VALUE_NUMBER_INT\n+  #1047 = Utf8               VALUE_NUMBER_FLOAT\n+  #1048 = Utf8               _numTypesValid\n+  #1049 = Utf8               _parseIntValue\n+  #1050 = Utf8               convertNumberToInt\n+  #1051 = Utf8               _numberInt\n+  #1052 = Utf8               id\n+  #1053 = Utf8               asString\n+  #1054 = Utf8               _nameCopied\n+  #1055 = Utf8               _nameCopyBuffer\n+  #1056 = Utf8               allocNameCopyBuffer\n+  #1057 = Utf8               (I)[C\n+  #1058 = Utf8               getChars\n+  #1059 = Utf8               (II[CI)V\n+  #1060 = Utf8               getTextBuffer\n+  #1061 = Utf8               size\n+  #1062 = Utf8               VALUE_EMBEDDED_OBJECT\n+  #1063 = Utf8               _binaryValue\n+  #1064 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #1065 = Utf8               _reportError\n+  #1066 = Utf8               getMessage\n+  #1067 = Utf8               _constructError\n+  #1068 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #1069 = Utf8               _getByteArrayBuilder\n+  #1070 = Utf8               ()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #1071 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #1072 = Utf8               toByteArray\n+  #1073 = Utf8               ()[B\n+  #1074 = Utf8               allocBase64Buffer\n+  #1075 = Utf8               releaseBase64Buffer\n+  #1076 = Utf8               decodeBase64Char\n+  #1077 = Utf8               _decodeBase64Escape\n+  #1078 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;II)I\n+  #1079 = Utf8               requiresPaddingOnRead\n+  #1080 = Utf8               _handleBase64MissingPadding\n+  #1081 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #1082 = Utf8               usesPaddingChar\n+  #1083 = Utf8               (I)Z\n+  #1084 = Utf8               getPaddingChar\n+  #1085 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #1086 = Utf8               reportInvalidBase64Char\n+  #1087 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;\n+  #1088 = Utf8               END_ARRAY\n+  #1089 = Utf8               END_OBJECT\n+  #1090 = Utf8               expectComma\n+  #1091 = Utf8               typeDesc\n+  #1092 = Utf8               _reportUnexpectedChar\n+  #1093 = Utf8               (ILjava/lang/String;)V\n+  #1094 = Utf8               _features\n+  #1095 = Utf8               inObject\n+  #1096 = Utf8               setCurrentName\n+  #1097 = Utf8               _nextToken\n+  #1098 = Utf8               com/fasterxml/jackson/core/json/JsonReadFeature\n+  #1099 = Utf8               ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\n+  #1100 = Utf8               Lcom/fasterxml/jackson/core/json/JsonReadFeature;\n+  #1101 = Utf8               mappedFeature\n+  #1102 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$Feature;\n+  #1103 = Utf8               VALUE_FALSE\n+  #1104 = Utf8               VALUE_NULL\n+  #1105 = Utf8               VALUE_TRUE\n+  #1106 = Utf8               START_ARRAY\n+  #1107 = Utf8               START_OBJECT\n+  #1108 = Utf8               _tokenInputRow\n+  #1109 = Utf8               _tokenInputCol\n+  #1110 = Utf8               createChildArrayContext\n+  #1111 = Utf8               createChildObjectContext\n+  #1112 = Utf8               asQuotedUTF8\n+  #1113 = Utf8               getValue\n+  #1114 = Utf8               equals\n+  #1115 = Utf8               (Ljava/lang/Object;)Z\n+  #1116 = Utf8               getIntValue\n+  #1117 = Utf8               getLongValue\n+  #1118 = Utf8               ()J\n+  #1119 = Utf8               java/lang/Boolean\n+  #1120 = Utf8               TRUE\n+  #1121 = Utf8               Ljava/lang/Boolean;\n+  #1122 = Utf8               FALSE\n+  #1123 = Utf8               ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\n+  #1124 = Utf8               emptyAndGetCurrentSegment\n+  #1125 = Utf8               java/lang/Math\n+  #1126 = Utf8               min\n+  #1127 = Utf8               setCurrentLength\n+  #1128 = Utf8               inRoot\n+  #1129 = Utf8               resetInt\n+  #1130 = Utf8               (ZI)Lcom/fasterxml/jackson/core/JsonToken;\n+  #1131 = Utf8               finishCurrentSegment\n+  #1132 = Utf8               reportInvalidNumber\n+  #1133 = Utf8               ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\n+  #1134 = Utf8               _reportUnexpectedNumberChar\n+  #1135 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n+  #1136 = Utf8               resetFloat\n+  #1137 = Utf8               (ZIII)Lcom/fasterxml/jackson/core/JsonToken;\n+  #1138 = Utf8               _currInputRow\n+  #1139 = Utf8               _reportMissingRootWS\n+  #1140 = Utf8               growArrayBy\n+  #1141 = Utf8               ([II)[I\n+  #1142 = Utf8               _reportInvalidEOF\n+  #1143 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #1144 = Utf8               _throwUnquotedSpace\n+  #1145 = Utf8               ([II)Ljava/lang/String;\n+  #1146 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n+  #1147 = Utf8               getInputCodeUtf8JsNames\n+  #1148 = Utf8               ()[I\n+  #1149 = Utf8               expandCurrentSegment\n+  #1150 = Utf8               ([CII)V\n+  #1151 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n+  #1152 = Utf8               setCurrentAndReturn\n+  #1153 = Utf8               inArray\n+  #1154 = Utf8               resetAsNaN\n+  #1155 = Utf8               (Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;\n+  #1156 = Utf8               _reportInvalidEOFInValue\n+  #1157 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #1158 = Utf8               java/lang/Character\n+  #1159 = Utf8               isJavaIdentifierStart\n+  #1160 = Utf8               _validJsonTokenList\n+  #1161 = Utf8               _validJsonValueList\n+  #1162 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #1163 = Utf8               charAt\n+  #1164 = Utf8               (I)C\n+  #1165 = Utf8               substring\n+  #1166 = Utf8               isJavaIdentifierPart\n+  #1167 = Utf8               (C)Z\n+  #1168 = Utf8               _throwInvalidSpace\n+  #1169 = Utf8               _eofAsNextChar\n+  #1170 = Utf8               getInputCodeComment\n+  #1171 = Utf8               _handleUnrecognizedCharacterEscape\n+  #1172 = Utf8               (C)C\n+  #1173 = Utf8               charToHex\n+  #1174 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #1175 = Utf8               java/lang/Integer\n+  #1176 = Utf8               toHexString\n+  #1177 = Utf8               appendTwoBytes\n+  #1178 = Utf8               appendThreeBytes\n+  #1179 = Utf8               _contentReference\n+  #1180 = Utf8               ()Lcom/fasterxml/jackson/core/io/ContentReference;\n+  #1181 = Utf8               (Lcom/fasterxml/jackson/core/io/ContentReference;JJII)V\n+  #1182 = Utf8               _tokenInputTotal\n+  #1183 = Utf8               _reportMismatchedEndMarker\n+  #1184 = Utf8               (IC)V\n+  #1185 = Utf8               clearAndGetParent\n+  #1186 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonReadContext;\n+  #1187 = Utf8               ALLOW_TRAILING_COMMA\n+  #1188 = Utf8               getMask\n+  #1189 = Utf8               ALLOW_NUMERIC_LEADING_ZEROS\n+  #1190 = Utf8               ALLOW_NON_NUMERIC_NUMBERS\n+  #1191 = Utf8               ALLOW_MISSING_VALUES\n+  #1192 = Utf8               ALLOW_SINGLE_QUOTES\n+  #1193 = Utf8               ALLOW_UNQUOTED_FIELD_NAMES\n+  #1194 = Utf8               ALLOW_COMMENTS\n+  #1195 = Utf8               ALLOW_YAML_COMMENTS\n+  #1196 = Utf8               getInputCodeUtf8\n+  #1197 = Utf8               getInputCodeLatin1\n+  #1198 = Utf8               com/fasterxml/jackson/core/JsonParser\n {\n   static final byte BYTE_LF = 10;\n     descriptor: B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 10\n \n   private static final int FEAT_MASK_TRAILING_COMMA;\n@@ -10429,14 +10420,16 @@\n         line 2915: 100\n         line 2916: 111\n         line 2918: 131\n         line 2920: 140\n         line 2921: 143\n         line 2922: 164\n         line 2924: 174\n+        line 2925: 178\n+        line 2926: 184\n         line 2927: 189\n         line 2928: 197\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            69       3     4 match   Ljava/lang/String;\n            93      47     4 match   Ljava/lang/String;\n             0     199     0  this   Lcom/fasterxml/jackson/core/json/UTF8StreamJsonParser;\n@@ -14489,8 +14482,8 @@\n         line 34: 54\n         line 35: 63\n         line 38: 72\n         line 42: 78\n }\n SourceFile: \"UTF8StreamJsonParser.java\"\n InnerClasses:\n-  public static final #1026= #689 of #1024; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n+  public static final #1017= #683 of #1015; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n"}]}
