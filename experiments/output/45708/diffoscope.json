{"diffoscope-json-version": 1, "source1": "first/AppendableWriter.class", "source2": "second/AppendableWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,217 +1,219 @@\n-  SHA-256 checksum ed585f8028438e3e0571c4ea7540cc8aa4637ae6c948b8221196d1d2ffaa999f\n+  SHA-256 checksum 8508052172faf0270fed1b9ce7474a1ac9698151a55183699e4ebe29a17bc19a\n   Compiled from \"AppendableWriter.java\"\n public class org.apache.commons.io.output.AppendableWriter<T extends java.lang.Appendable> extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/io/output/AppendableWriter\n-  super_class: #23                        // java/io/Writer\n+  this_class: #1                          // org/apache/commons/io/output/AppendableWriter\n+  super_class: #3                         // java/io/Writer\n   interfaces: 0, fields: 1, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Methodref          #23.#75       // java/io/Writer.\"<init>\":()V\n-    #2 = Fieldref           #22.#76       // org/apache/commons/io/output/AppendableWriter.appendable:Ljava/lang/Appendable;\n-    #3 = InterfaceMethodref #77.#78       // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-    #4 = InterfaceMethodref #77.#79       // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-    #5 = InterfaceMethodref #77.#80       // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-    #6 = String             #81           // Character array is missing\n-    #7 = Methodref          #82.#83       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #8 = Class              #84           // java/lang/IndexOutOfBoundsException\n-    #9 = Class              #85           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#75        // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = String             #86           // Array Size=\n-   #12 = Methodref          #9.#87        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #9.#88        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #14 = String             #89           // , offset=\n-   #15 = String             #90           // , length=\n-   #16 = Methodref          #9.#91        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #17 = Methodref          #8.#92        // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #18 = String             #93           // String is missing\n-   #19 = Methodref          #22.#94       // org/apache/commons/io/output/AppendableWriter.append:(C)Ljava/io/Writer;\n-   #20 = Methodref          #22.#95       // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #21 = Methodref          #22.#96       // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #22 = Class              #97           // org/apache/commons/io/output/AppendableWriter\n-   #23 = Class              #98           // java/io/Writer\n-   #24 = Utf8               appendable\n-   #25 = Utf8               Ljava/lang/Appendable;\n-   #26 = Utf8               Signature\n-   #27 = Utf8               TT;\n-   #28 = Utf8               <init>\n-   #29 = Utf8               (Ljava/lang/Appendable;)V\n-   #30 = Utf8               Code\n-   #31 = Utf8               LineNumberTable\n-   #32 = Utf8               LocalVariableTable\n-   #33 = Utf8               this\n-   #34 = Utf8               Lorg/apache/commons/io/output/AppendableWriter;\n-   #35 = Utf8               LocalVariableTypeTable\n-   #36 = Utf8               Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-   #37 = Utf8               (TT;)V\n-   #38 = Utf8               append\n-   #39 = Utf8               (C)Ljava/io/Writer;\n-   #40 = Utf8               c\n-   #41 = Utf8               C\n-   #42 = Utf8               Exceptions\n-   #43 = Class              #99           // java/io/IOException\n-   #44 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #45 = Utf8               csq\n-   #46 = Utf8               Ljava/lang/CharSequence;\n-   #47 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #48 = Utf8               start\n-   #49 = Utf8               I\n-   #50 = Utf8               end\n-   #51 = Utf8               close\n-   #52 = Utf8               ()V\n-   #53 = Utf8               flush\n-   #54 = Utf8               getAppendable\n-   #55 = Utf8               ()Ljava/lang/Appendable;\n-   #56 = Utf8               ()TT;\n-   #57 = Utf8               write\n-   #58 = Utf8               ([CII)V\n-   #59 = Utf8               i\n-   #60 = Utf8               cbuf\n-   #61 = Utf8               [C\n-   #62 = Utf8               off\n-   #63 = Utf8               len\n-   #64 = Utf8               StackMapTable\n-   #65 = Utf8               (I)V\n-   #66 = Utf8               (Ljava/lang/String;II)V\n-   #67 = Utf8               str\n-   #68 = Utf8               Ljava/lang/String;\n-   #69 = Utf8               (C)Ljava/lang/Appendable;\n-   #70 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #71 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #72 = Utf8               <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n-   #73 = Utf8               SourceFile\n-   #74 = Utf8               AppendableWriter.java\n-   #75 = NameAndType        #28:#52       // \"<init>\":()V\n-   #76 = NameAndType        #24:#25       // appendable:Ljava/lang/Appendable;\n-   #77 = Class              #100          // java/lang/Appendable\n-   #78 = NameAndType        #38:#69       // append:(C)Ljava/lang/Appendable;\n-   #79 = NameAndType        #38:#71       // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #80 = NameAndType        #38:#70       // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #81 = Utf8               Character array is missing\n-   #82 = Class              #101          // java/util/Objects\n-   #83 = NameAndType        #102:#103     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #84 = Utf8               java/lang/IndexOutOfBoundsException\n-   #85 = Utf8               java/lang/StringBuilder\n-   #86 = Utf8               Array Size=\n-   #87 = NameAndType        #38:#104      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #88 = NameAndType        #38:#105      // append:(I)Ljava/lang/StringBuilder;\n-   #89 = Utf8               , offset=\n-   #90 = Utf8               , length=\n-   #91 = NameAndType        #106:#107     // toString:()Ljava/lang/String;\n-   #92 = NameAndType        #28:#108      // \"<init>\":(Ljava/lang/String;)V\n-   #93 = Utf8               String is missing\n-   #94 = NameAndType        #38:#39       // append:(C)Ljava/io/Writer;\n-   #95 = NameAndType        #38:#47       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #96 = NameAndType        #38:#44       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #97 = Utf8               org/apache/commons/io/output/AppendableWriter\n-   #98 = Utf8               java/io/Writer\n-   #99 = Utf8               java/io/IOException\n-  #100 = Utf8               java/lang/Appendable\n-  #101 = Utf8               java/util/Objects\n-  #102 = Utf8               requireNonNull\n-  #103 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #104 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #105 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #106 = Utf8               toString\n-  #107 = Utf8               ()Ljava/lang/String;\n-  #108 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #2            // org/apache/commons/io/output/AppendableWriter\n+    #2 = Utf8               org/apache/commons/io/output/AppendableWriter\n+    #3 = Class              #4            // java/io/Writer\n+    #4 = Utf8               java/io/Writer\n+    #5 = Utf8               appendable\n+    #6 = Utf8               Ljava/lang/Appendable;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               TT;\n+    #9 = Utf8               <init>\n+   #10 = Utf8               (Ljava/lang/Appendable;)V\n+   #11 = Utf8               (TT;)V\n+   #12 = Utf8               Code\n+   #13 = Methodref          #3.#14        // java/io/Writer.\"<init>\":()V\n+   #14 = NameAndType        #9:#15        // \"<init>\":()V\n+   #15 = Utf8               ()V\n+   #16 = Fieldref           #1.#17        // org/apache/commons/io/output/AppendableWriter.appendable:Ljava/lang/Appendable;\n+   #17 = NameAndType        #5:#6         // appendable:Ljava/lang/Appendable;\n+   #18 = Utf8               LineNumberTable\n+   #19 = Utf8               LocalVariableTable\n+   #20 = Utf8               this\n+   #21 = Utf8               Lorg/apache/commons/io/output/AppendableWriter;\n+   #22 = Utf8               LocalVariableTypeTable\n+   #23 = Utf8               Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n+   #24 = Utf8               append\n+   #25 = Utf8               (C)Ljava/io/Writer;\n+   #26 = Utf8               Exceptions\n+   #27 = Class              #28           // java/io/IOException\n+   #28 = Utf8               java/io/IOException\n+   #29 = InterfaceMethodref #30.#32       // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+   #30 = Class              #31           // java/lang/Appendable\n+   #31 = Utf8               java/lang/Appendable\n+   #32 = NameAndType        #24:#33       // append:(C)Ljava/lang/Appendable;\n+   #33 = Utf8               (C)Ljava/lang/Appendable;\n+   #34 = Utf8               c\n+   #35 = Utf8               C\n+   #36 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #37 = InterfaceMethodref #30.#38       // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #38 = NameAndType        #24:#39       // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #39 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #40 = Utf8               csq\n+   #41 = Utf8               Ljava/lang/CharSequence;\n+   #42 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #43 = InterfaceMethodref #30.#44       // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #44 = NameAndType        #24:#45       // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #45 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #46 = Utf8               start\n+   #47 = Utf8               I\n+   #48 = Utf8               end\n+   #49 = Utf8               close\n+   #50 = Utf8               flush\n+   #51 = Utf8               getAppendable\n+   #52 = Utf8               ()Ljava/lang/Appendable;\n+   #53 = Utf8               ()TT;\n+   #54 = Utf8               write\n+   #55 = Utf8               ([CII)V\n+   #56 = String             #57           // Character array is missing\n+   #57 = Utf8               Character array is missing\n+   #58 = Methodref          #59.#61       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #59 = Class              #60           // java/util/Objects\n+   #60 = Utf8               java/util/Objects\n+   #61 = NameAndType        #62:#63       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #62 = Utf8               requireNonNull\n+   #63 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #64 = Class              #65           // java/lang/IndexOutOfBoundsException\n+   #65 = Utf8               java/lang/IndexOutOfBoundsException\n+   #66 = Class              #67           // java/lang/StringBuilder\n+   #67 = Utf8               java/lang/StringBuilder\n+   #68 = String             #69           // Array Size=\n+   #69 = Utf8               Array Size=\n+   #70 = Methodref          #66.#71       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #71 = NameAndType        #9:#72        // \"<init>\":(Ljava/lang/String;)V\n+   #72 = Utf8               (Ljava/lang/String;)V\n+   #73 = Methodref          #66.#74       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #74 = NameAndType        #24:#75       // append:(I)Ljava/lang/StringBuilder;\n+   #75 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #76 = String             #77           // , offset=\n+   #77 = Utf8               , offset=\n+   #78 = Methodref          #66.#79       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #79 = NameAndType        #24:#80       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #81 = String             #82           // , length=\n+   #82 = Utf8               , length=\n+   #83 = Methodref          #66.#84       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #84 = NameAndType        #85:#86       // toString:()Ljava/lang/String;\n+   #85 = Utf8               toString\n+   #86 = Utf8               ()Ljava/lang/String;\n+   #87 = Methodref          #64.#71       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #88 = Utf8               cbuf\n+   #89 = Utf8               [C\n+   #90 = Utf8               off\n+   #91 = Utf8               len\n+   #92 = Utf8               i\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               (I)V\n+   #95 = Utf8               (Ljava/lang/String;II)V\n+   #96 = String             #97           // String is missing\n+   #97 = Utf8               String is missing\n+   #98 = Utf8               str\n+   #99 = Utf8               Ljava/lang/String;\n+  #100 = Methodref          #1.#101       // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #101 = NameAndType        #24:#42       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #102 = Methodref          #1.#103       // org/apache/commons/io/output/AppendableWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #103 = NameAndType        #24:#36       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #104 = Methodref          #1.#105       // org/apache/commons/io/output/AppendableWriter.append:(C)Ljava/io/Writer;\n+  #105 = NameAndType        #24:#25       // append:(C)Ljava/io/Writer;\n+  #106 = Utf8               SourceFile\n+  #107 = Utf8               AppendableWriter.java\n+  #108 = Utf8               <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n {\n   private final T appendable;\n     descriptor: Ljava/lang/Appendable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #27                          // TT;\n+    Signature: #8                           // TT;\n \n   public org.apache.commons.io.output.AppendableWriter(T);\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #11                          // (TT;)V\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #13                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         6: putfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          9: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      10     1 appendable   Ljava/lang/Appendable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n             0      10     1 appendable   TT;\n-    Signature: #37                          // (TT;)V\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          4: iload_1\n-         5: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         5: invokeinterface #29,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         10: pop\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 58: 0\n         line 59: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      13     1     c   C\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          4: aload_1\n-         5: invokeinterface #4,  2            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+         5: invokeinterface #37,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         10: pop\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 71: 0\n         line 72: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      13     1   csq   Ljava/lang/CharSequence;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokeinterface #5,  4            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+         7: invokeinterface #43,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         12: pop\n         13: aload_0\n         14: areturn\n       LineNumberTable:\n         line 86: 0\n         line 87: 13\n       LocalVariableTable:\n@@ -219,195 +221,195 @@\n             0      15     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      15     1   csq   Ljava/lang/CharSequence;\n             0      15     2 start   I\n             0      15     3   end   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public T getAppendable();\n     descriptor: ()Ljava/lang/Appendable;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #53                          // ()TT;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          4: areturn\n       LineNumberTable:\n         line 116: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Signature: #56                          // ()TT;\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=5, args_size=4\n+      stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ldc           #6                  // String Character array is missing\n-         3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #56                 // String Character array is missing\n+         3: invokestatic  #58                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          19\n         11: iload_2\n         12: iload_3\n         13: iadd\n         14: aload_1\n         15: arraylength\n-        16: if_icmple     65\n-        19: new           #8                  // class java/lang/IndexOutOfBoundsException\n+        16: if_icmple     62\n+        19: new           #64                 // class java/lang/IndexOutOfBoundsException\n         22: dup\n-        23: new           #9                  // class java/lang/StringBuilder\n+        23: new           #66                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #11                 // String Array Size=\n-        32: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        35: aload_1\n-        36: arraylength\n-        37: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        40: ldc           #14                 // String , offset=\n-        42: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        45: iload_2\n-        46: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        49: ldc           #15                 // String , length=\n-        51: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: iload_3\n-        55: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        58: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        61: invokespecial #17                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        64: athrow\n-        65: iconst_0\n-        66: istore        4\n-        68: iload         4\n-        70: iload_3\n-        71: if_icmpge     96\n-        74: aload_0\n-        75: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n-        78: aload_1\n-        79: iload_2\n-        80: iload         4\n-        82: iadd\n-        83: caload\n-        84: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-        89: pop\n-        90: iinc          4, 1\n-        93: goto          68\n-        96: return\n+        27: ldc           #68                 // String Array Size=\n+        29: invokespecial #70                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        32: aload_1\n+        33: arraylength\n+        34: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: ldc           #76                 // String , offset=\n+        39: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: iload_2\n+        43: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        46: ldc           #81                 // String , length=\n+        48: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: iload_3\n+        52: invokevirtual #73                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        55: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        58: invokespecial #87                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        61: athrow\n+        62: iconst_0\n+        63: istore        4\n+        65: goto          87\n+        68: aload_0\n+        69: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n+        72: aload_1\n+        73: iload_2\n+        74: iload         4\n+        76: iadd\n+        77: caload\n+        78: invokeinterface #29,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+        83: pop\n+        84: iinc          4, 1\n+        87: iload         4\n+        89: iload_3\n+        90: if_icmplt     68\n+        93: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 7\n         line 131: 19\n-        line 134: 65\n-        line 135: 74\n-        line 134: 90\n-        line 137: 96\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           68      28     4     i   I\n-            0      97     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n-            0      97     1  cbuf   [C\n-            0      97     2   off   I\n-            0      97     3   len   I\n+        line 132: 37\n+        line 131: 58\n+        line 134: 62\n+        line 135: 68\n+        line 134: 84\n+        line 137: 93\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0      94     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n+            0      94     1  cbuf   [C\n+            0      94     2   off   I\n+            0      94     3   len   I\n+           65      28     4     i   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      97     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n+            0      94     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n       StackMapTable: number_of_entries = 4\n         frame_type = 19 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 42 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 27\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 18 /* same */\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         1: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n          4: iload_1\n          5: i2c\n-         6: invokeinterface #3,  2            // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         6: invokeinterface #29,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         11: pop\n         12: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      13     1     c   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_1\n-         1: ldc           #18                 // String String is missing\n-         3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #96                 // String String is missing\n+         3: invokestatic  #58                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: getfield      #2                  // Field appendable:Ljava/lang/Appendable;\n+         8: getfield      #16                 // Field appendable:Ljava/lang/Appendable;\n         11: aload_1\n         12: iload_2\n         13: iload_2\n         14: iload_3\n         15: iadd\n-        16: invokeinterface #5,  4            // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        16: invokeinterface #43,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         21: pop\n         22: return\n       LineNumberTable:\n         line 161: 0\n         line 162: 7\n         line 163: 22\n       LocalVariableTable:\n@@ -415,74 +417,60 @@\n             0      23     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n             0      23     1   str   Ljava/lang/String;\n             0      23     2   off   I\n             0      23     3   len   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n-\n-  public java.lang.Appendable append(char) throws java.io.IOException;\n-    descriptor: (C)Ljava/lang/Appendable;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=2, args_size=2\n-         0: aload_0\n-         1: iload_1\n-         2: invokevirtual #19                 // Method append:(C)Ljava/io/Writer;\n-         5: areturn\n-      LineNumberTable:\n-        line 36: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n-      LocalVariableTypeTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #20                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #100                // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n-        line 36: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n-      LocalVariableTypeTable:\n-        Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #21                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #102                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n-        line 36: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/AppendableWriter;\n-      LocalVariableTypeTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/AppendableWriter<TT;>;\n+\n+  public java.lang.Appendable append(char) throws java.io.IOException;\n+    descriptor: (C)Ljava/lang/Appendable;\n+    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n+    Code:\n+      stack=2, locals=2, args_size=2\n+         0: aload_0\n+         1: iload_1\n+         2: invokevirtual #104                // Method append:(C)Ljava/io/Writer;\n+         5: areturn\n+      LineNumberTable:\n+        line 1: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n }\n-Signature: #72                          // <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n SourceFile: \"AppendableWriter.java\"\n+Signature: #108                         // <T::Ljava/lang/Appendable;>Ljava/io/Writer;\n"}]}
