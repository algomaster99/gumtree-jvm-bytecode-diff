{"diffoscope-json-version": 1, "source1": "first/ZipFile$BoundedFileChannelInputStream.class", "source2": "second/ZipFile$BoundedFileChannelInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum 18e9b37e1d926b65a05b67d5380e4ca90a1ade4205297449f713e39cd3c3e43b\n+  SHA-256 checksum be5f44bac941a951139992aea18b4f37266b87cff0412cb3223df4e7d5d35d65\n   Compiled from \"ZipFile.java\"\n class org.apache.commons.compress.archivers.zip.ZipFile$BoundedFileChannelInputStream extends org.apache.commons.compress.archivers.zip.ZipFile$BoundedInputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n-  super_class: #9                         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n+  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n+  super_class: #8                         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n   interfaces: 0, fields: 2, methods: 2, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #8.#24         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream.this$0:Lorg/apache/commons/compress/archivers/zip/ZipFile;\n-   #2 = Methodref          #9.#25         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n-   #3 = Methodref          #26.#27        // org/apache/commons/compress/archivers/zip/ZipFile.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n-   #4 = Class              #28            // java/nio/channels/FileChannel\n-   #5 = Fieldref           #8.#29         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream.archive:Ljava/nio/channels/FileChannel;\n-   #6 = Methodref          #4.#30         // java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I\n-   #7 = Methodref          #31.#32        // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n-   #8 = Class              #33            // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n-   #9 = Class              #36            // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n-  #10 = Utf8               archive\n-  #11 = Utf8               Ljava/nio/channels/FileChannel;\n-  #12 = Utf8               this$0\n-  #13 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipFile;\n-  #14 = Utf8               <init>\n-  #15 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n-  #16 = Utf8               Code\n-  #17 = Utf8               LineNumberTable\n-  #18 = Utf8               read\n-  #19 = Utf8               (JLjava/nio/ByteBuffer;)I\n-  #20 = Utf8               Exceptions\n-  #21 = Class              #38            // java/io/IOException\n-  #22 = Utf8               SourceFile\n-  #23 = Utf8               ZipFile.java\n-  #24 = NameAndType        #12:#13        // this$0:Lorg/apache/commons/compress/archivers/zip/ZipFile;\n-  #25 = NameAndType        #14:#15        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n-  #26 = Class              #39            // org/apache/commons/compress/archivers/zip/ZipFile\n-  #27 = NameAndType        #40:#41        // access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n-  #28 = Utf8               java/nio/channels/FileChannel\n-  #29 = NameAndType        #10:#11        // archive:Ljava/nio/channels/FileChannel;\n-  #30 = NameAndType        #18:#42        // read:(Ljava/nio/ByteBuffer;J)I\n-  #31 = Class              #43            // java/nio/ByteBuffer\n-  #32 = NameAndType        #44:#45        // flip:()Ljava/nio/ByteBuffer;\n-  #33 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n-  #34 = Utf8               BoundedFileChannelInputStream\n-  #35 = Utf8               InnerClasses\n-  #36 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n-  #37 = Utf8               BoundedInputStream\n-  #38 = Utf8               java/io/IOException\n-  #39 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n-  #40 = Utf8               access$300\n-  #41 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n-  #42 = Utf8               (Ljava/nio/ByteBuffer;J)I\n-  #43 = Utf8               java/nio/ByteBuffer\n-  #44 = Utf8               flip\n-  #45 = Utf8               ()Ljava/nio/ByteBuffer;\n+   #1 = Fieldref           #2.#3          // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream.this$0:Lorg/apache/commons/compress/archivers/zip/ZipFile;\n+   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n+   #3 = NameAndType        #5:#6          // this$0:Lorg/apache/commons/compress/archivers/zip/ZipFile;\n+   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream\n+   #5 = Utf8               this$0\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipFile;\n+   #7 = Methodref          #8.#9          // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n+   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n+   #9 = NameAndType        #11:#12        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n+  #10 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n+  #13 = Methodref          #14.#15        // org/apache/commons/compress/archivers/zip/ZipFile.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n+  #14 = Class              #16            // org/apache/commons/compress/archivers/zip/ZipFile\n+  #15 = NameAndType        #17:#18        // access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n+  #16 = Utf8               org/apache/commons/compress/archivers/zip/ZipFile\n+  #17 = Utf8               access$300\n+  #18 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n+  #19 = Class              #20            // java/nio/channels/FileChannel\n+  #20 = Utf8               java/nio/channels/FileChannel\n+  #21 = Fieldref           #2.#22         // org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream.archive:Ljava/nio/channels/FileChannel;\n+  #22 = NameAndType        #23:#24        // archive:Ljava/nio/channels/FileChannel;\n+  #23 = Utf8               archive\n+  #24 = Utf8               Ljava/nio/channels/FileChannel;\n+  #25 = Methodref          #19.#26        // java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I\n+  #26 = NameAndType        #27:#28        // read:(Ljava/nio/ByteBuffer;J)I\n+  #27 = Utf8               read\n+  #28 = Utf8               (Ljava/nio/ByteBuffer;J)I\n+  #29 = Methodref          #30.#31        // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+  #30 = Class              #32            // java/nio/ByteBuffer\n+  #31 = NameAndType        #33:#34        // flip:()Ljava/nio/ByteBuffer;\n+  #32 = Utf8               java/nio/ByteBuffer\n+  #33 = Utf8               flip\n+  #34 = Utf8               ()Ljava/nio/ByteBuffer;\n+  #35 = Utf8               Code\n+  #36 = Utf8               LineNumberTable\n+  #37 = Utf8               (JLjava/nio/ByteBuffer;)I\n+  #38 = Utf8               Exceptions\n+  #39 = Class              #40            // java/io/IOException\n+  #40 = Utf8               java/io/IOException\n+  #41 = Utf8               SourceFile\n+  #42 = Utf8               ZipFile.java\n+  #43 = Utf8               InnerClasses\n+  #44 = Utf8               BoundedFileChannelInputStream\n+  #45 = Utf8               BoundedInputStream\n {\n   private final java.nio.channels.FileChannel archive;\n     descriptor: Ljava/nio/channels/FileChannel;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   final org.apache.commons.compress.archivers.zip.ZipFile this$0;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipFile;\n@@ -70,47 +70,47 @@\n          0: aload_0\n          1: aload_1\n          2: putfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipFile;\n          5: aload_0\n          6: aload_1\n          7: lload_2\n          8: lload         4\n-        10: invokespecial #2                  // Method org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n+        10: invokespecial #7                  // Method org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipFile;JJ)V\n         13: aload_0\n         14: aload_1\n-        15: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipFile.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n-        18: checkcast     #4                  // class java/nio/channels/FileChannel\n-        21: putfield      #5                  // Field archive:Ljava/nio/channels/FileChannel;\n+        15: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipFile.access$300:(Lorg/apache/commons/compress/archivers/zip/ZipFile;)Ljava/nio/channels/SeekableByteChannel;\n+        18: checkcast     #19                 // class java/nio/channels/FileChannel\n+        21: putfield      #21                 // Field archive:Ljava/nio/channels/FileChannel;\n         24: return\n       LineNumberTable:\n         line 1394: 0\n         line 1395: 5\n         line 1396: 13\n         line 1397: 24\n \n   protected int read(long, java.nio.ByteBuffer) throws java.io.IOException;\n     descriptor: (JLjava/nio/ByteBuffer;)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_0\n-         1: getfield      #5                  // Field archive:Ljava/nio/channels/FileChannel;\n+         1: getfield      #21                 // Field archive:Ljava/nio/channels/FileChannel;\n          4: aload_3\n          5: lload_1\n-         6: invokevirtual #6                  // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I\n+         6: invokevirtual #25                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;J)I\n          9: istore        4\n         11: aload_3\n-        12: invokevirtual #7                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+        12: invokevirtual #29                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n         15: pop\n         16: iload         4\n         18: ireturn\n       LineNumberTable:\n         line 1401: 0\n         line 1402: 11\n         line 1403: 16\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ZipFile.java\"\n InnerClasses:\n-  private #34= #8 of #26;                 // BoundedFileChannelInputStream=class org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream of class org/apache/commons/compress/archivers/zip/ZipFile\n-  private #37= #9 of #26;                 // BoundedInputStream=class org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream of class org/apache/commons/compress/archivers/zip/ZipFile\n+  private #44= #2 of #14;                 // BoundedFileChannelInputStream=class org/apache/commons/compress/archivers/zip/ZipFile$BoundedFileChannelInputStream of class org/apache/commons/compress/archivers/zip/ZipFile\n+  private #45= #8 of #14;                 // BoundedInputStream=class org/apache/commons/compress/archivers/zip/ZipFile$BoundedInputStream of class org/apache/commons/compress/archivers/zip/ZipFile\n"}]}
