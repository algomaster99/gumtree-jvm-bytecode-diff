{"diffoscope-json-version": 1, "source1": "first/ServiceLoaderIterator.class", "source2": "second/ServiceLoaderIterator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,39 +8,38 @@\n \n public class ServiceLoaderIterator<E> implements Iterator<E>\n {\n     private E nextServiceLoader;\n     private final Class<E> service;\n     private final Iterator<E> serviceLoaderIterator;\n     \n-    public ServiceLoaderIterator(final Class<E> service) {\n-        this(service, ClassLoader.getSystemClassLoader());\n+    public ServiceLoaderIterator(final Class<E> clazz) {\n+        this(clazz, ClassLoader.getSystemClassLoader());\n     }\n     \n-    public ServiceLoaderIterator(final Class<E> service, final ClassLoader classLoader) {\n-        this.service = service;\n-        final ServiceLoader<E> serviceLoader = ServiceLoader.load(service, classLoader);\n-        this.serviceLoaderIterator = serviceLoader.iterator();\n+    public ServiceLoaderIterator(final Class<E> clazz, final ClassLoader loader) {\n+        this.service = clazz;\n+        this.serviceLoaderIterator = ServiceLoader.load(clazz, loader).iterator();\n         this.nextServiceLoader = null;\n     }\n     \n     private boolean getNextServiceLoader() {\n         while (this.nextServiceLoader == null) {\n             try {\n                 if (!this.serviceLoaderIterator.hasNext()) {\n                     return false;\n                 }\n                 this.nextServiceLoader = this.serviceLoaderIterator.next();\n                 continue;\n             }\n-            catch (final ServiceConfigurationError e) {\n-                if (e.getCause() instanceof SecurityException) {\n+            catch (final ServiceConfigurationError serviceConfigurationError) {\n+                if (serviceConfigurationError.getCause() instanceof SecurityException) {\n                     continue;\n                 }\n-                throw e;\n+                throw serviceConfigurationError;\n             }\n             break;\n         }\n         return true;\n     }\n     \n     @Override\n@@ -49,17 +48,17 @@\n     }\n     \n     @Override\n     public E next() {\n         if (!this.getNextServiceLoader()) {\n             throw new NoSuchElementException(\"No more elements for service \" + this.service.getName());\n         }\n-        final E tempNext = this.nextServiceLoader;\n+        final E nextServiceLoader = this.nextServiceLoader;\n         this.nextServiceLoader = null;\n-        return tempNext;\n+        return nextServiceLoader;\n     }\n     \n     @Override\n     public void remove() {\n         throw new UnsupportedOperationException(\"service=\" + this.service.getName());\n     }\n }\n"}]}
