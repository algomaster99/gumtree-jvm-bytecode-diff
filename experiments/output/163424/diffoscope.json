{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic.class", "source2": "second/ColognePhonetic.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,65 +1,65 @@\n-  SHA-256 checksum a5fe70fa0b23509c9ab1ea1b2de57ab5ad89dbf9cb014139229a454e4701495c\n+  SHA-256 checksum 65ace724ba3095834a72fc2ccbbd86223a15085e15a4be49a23251e315945a9f\n   Compiled from \"ColognePhonetic.java\"\n public class org.apache.commons.codec.language.ColognePhonetic implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/codec/language/ColognePhonetic\n   super_class: #43                        // java/lang/Object\n   interfaces: 1, fields: 10, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Methodref          #43.#110      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #111          // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-    #3 = Methodref          #8.#112       // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n-    #4 = Methodref          #2.#113       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-    #5 = Class              #114          // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-    #6 = Methodref          #2.#115       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n-    #7 = Methodref          #5.#116       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-    #8 = Class              #117          // org/apache/commons/codec/language/ColognePhonetic\n-    #9 = Methodref          #2.#118       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n-   #10 = Methodref          #2.#119       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n-   #11 = Methodref          #2.#120       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n-   #12 = Fieldref           #8.#121       // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n-   #13 = Methodref          #8.#122       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n-   #14 = Methodref          #5.#123       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n-   #15 = Fieldref           #8.#124       // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n-   #16 = Fieldref           #8.#125       // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n-   #17 = Fieldref           #8.#126       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n-   #18 = Fieldref           #8.#127       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n-   #19 = Methodref          #5.#118       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n-   #20 = Fieldref           #8.#128       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n-   #21 = Fieldref           #8.#129       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n-   #22 = Fieldref           #8.#130       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n-   #23 = Fieldref           #8.#131       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n-   #24 = Methodref          #5.#132       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n-   #25 = Class              #133          // java/lang/String\n-   #26 = Class              #134          // org/apache/commons/codec/EncoderException\n-   #27 = Class              #135          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#110      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #136          // This method\\'s parameter was expected to be of the type\n-   #30 = Methodref          #27.#137      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #138.#139     // java/lang/Class.getName:()Ljava/lang/String;\n-   #32 = String             #140          // . But actually it was of the type\n-   #33 = Methodref          #43.#141      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #34 = String             #142          // .\n-   #35 = Methodref          #27.#132      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #36 = Methodref          #26.#143      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #8.#144       // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #38 = Methodref          #8.#145       // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-   #39 = Methodref          #25.#146      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #40 = Fieldref           #147.#148     // java/util/Locale.GERMAN:Ljava/util/Locale;\n-   #41 = Methodref          #25.#149      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #42 = Methodref          #25.#150      // java/lang/String.toCharArray:()[C\n-   #43 = Class              #151          // java/lang/Object\n-   #44 = Class              #152          // org/apache/commons/codec/StringEncoder\n+    #1 = Methodref          #43.#106      // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #107          // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #3 = Methodref          #8.#108       // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n+    #4 = Methodref          #2.#109       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+    #5 = Class              #110          // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+    #6 = Methodref          #2.#111       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+    #7 = Methodref          #5.#112       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+    #8 = Class              #113          // org/apache/commons/codec/language/ColognePhonetic\n+    #9 = Methodref          #2.#114       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n+   #10 = Methodref          #2.#115       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+   #11 = Methodref          #2.#116       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+   #12 = Fieldref           #8.#117       // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n+   #13 = Methodref          #8.#118       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n+   #14 = Methodref          #5.#119       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+   #15 = Fieldref           #8.#120       // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n+   #16 = Fieldref           #8.#121       // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n+   #17 = Fieldref           #8.#122       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n+   #18 = Fieldref           #8.#123       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n+   #19 = Methodref          #5.#114       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n+   #20 = Fieldref           #8.#124       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n+   #21 = Fieldref           #8.#125       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n+   #22 = Fieldref           #8.#126       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n+   #23 = Fieldref           #8.#127       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n+   #24 = Methodref          #5.#128       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+   #25 = Class              #129          // java/lang/String\n+   #26 = Class              #130          // org/apache/commons/codec/EncoderException\n+   #27 = Class              #131          // java/lang/StringBuilder\n+   #28 = Methodref          #27.#106      // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = String             #132          // This method\\'s parameter was expected to be of the type\n+   #30 = Methodref          #27.#133      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = Methodref          #134.#135     // java/lang/Class.getName:()Ljava/lang/String;\n+   #32 = String             #136          // . But actually it was of the type\n+   #33 = Methodref          #43.#137      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #34 = String             #138          // .\n+   #35 = Methodref          #27.#128      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #36 = Methodref          #26.#139      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = Methodref          #8.#140       // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #38 = Methodref          #8.#141       // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+   #39 = Methodref          #25.#142      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #40 = Fieldref           #143.#144     // java/util/Locale.GERMAN:Ljava/util/Locale;\n+   #41 = Methodref          #25.#145      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #42 = Methodref          #25.#146      // java/lang/String.toCharArray:()[C\n+   #43 = Class              #147          // java/lang/Object\n+   #44 = Class              #148          // org/apache/commons/codec/StringEncoder\n    #45 = Utf8               CologneInputBuffer\n    #46 = Utf8               InnerClasses\n    #47 = Utf8               CologneOutputBuffer\n-   #48 = Class              #153          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+   #48 = Class              #149          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n    #49 = Utf8               CologneBuffer\n    #50 = Utf8               AEIJOUY\n    #51 = Utf8               [C\n    #52 = Utf8               CSZ\n    #53 = Utf8               FPVW\n    #54 = Utf8               GKQ\n    #55 = Utf8               CKQ\n@@ -92,108 +92,104 @@\n    #82 = Utf8               text\n    #83 = Utf8               Ljava/lang/String;\n    #84 = Utf8               input\n    #85 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer;\n    #86 = Utf8               output\n    #87 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer;\n    #88 = Utf8               lastChar\n-   #89 = Class              #117          // org/apache/commons/codec/language/ColognePhonetic\n-   #90 = Class              #133          // java/lang/String\n-   #91 = Class              #111          // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-   #92 = Class              #114          // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-   #93 = Utf8               encode\n-   #94 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = Utf8               object\n-   #96 = Utf8               Ljava/lang/Object;\n-   #97 = Utf8               Exceptions\n-   #98 = Utf8               isEncodeEqual\n-   #99 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #100 = Utf8               text1\n-  #101 = Utf8               text2\n-  #102 = Utf8               preprocess\n-  #103 = Utf8               (Ljava/lang/String;)[C\n-  #104 = Utf8               index\n-  #105 = Utf8               I\n-  #106 = Utf8               chrs\n-  #107 = Utf8               <clinit>\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               ColognePhonetic.java\n-  #110 = NameAndType        #64:#65       // \"<init>\":()V\n-  #111 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-  #112 = NameAndType        #102:#103     // preprocess:(Ljava/lang/String;)[C\n-  #113 = NameAndType        #64:#154      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #114 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-  #115 = NameAndType        #155:#156     // length:()I\n-  #116 = NameAndType        #64:#157      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #117 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n-  #118 = NameAndType        #158:#159     // isEmpty:()Z\n-  #119 = NameAndType        #160:#161     // removeNext:()C\n-  #120 = NameAndType        #162:#161     // getNextChar:()C\n-  #121 = NameAndType        #50:#51       // AEIJOUY:[C\n-  #122 = NameAndType        #71:#72       // arrayContains:([CC)Z\n-  #123 = NameAndType        #163:#164     // put:(C)V\n-  #124 = NameAndType        #52:#51       // CSZ:[C\n-  #125 = NameAndType        #53:#51       // FPVW:[C\n-  #126 = NameAndType        #54:#51       // GKQ:[C\n-  #127 = NameAndType        #55:#51       // CKQ:[C\n-  #128 = NameAndType        #56:#51       // AHKLOQRUX:[C\n-  #129 = NameAndType        #57:#51       // SZ:[C\n-  #130 = NameAndType        #58:#51       // AHKOQUX:[C\n-  #131 = NameAndType        #59:#51       // DTX:[C\n-  #132 = NameAndType        #165:#166     // toString:()Ljava/lang/String;\n-  #133 = Utf8               java/lang/String\n-  #134 = Utf8               org/apache/commons/codec/EncoderException\n-  #135 = Utf8               java/lang/StringBuilder\n-  #136 = Utf8               This method\\'s parameter was expected to be of the type\n-  #137 = NameAndType        #167:#168     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #138 = Class              #169          // java/lang/Class\n-  #139 = NameAndType        #170:#166     // getName:()Ljava/lang/String;\n-  #140 = Utf8               . But actually it was of the type\n-  #141 = NameAndType        #171:#172     // getClass:()Ljava/lang/Class;\n-  #142 = Utf8               .\n-  #143 = NameAndType        #64:#173      // \"<init>\":(Ljava/lang/String;)V\n-  #144 = NameAndType        #93:#79       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #145 = NameAndType        #78:#79       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-  #146 = NameAndType        #174:#175     // equals:(Ljava/lang/Object;)Z\n-  #147 = Class              #176          // java/util/Locale\n-  #148 = NameAndType        #177:#178     // GERMAN:Ljava/util/Locale;\n-  #149 = NameAndType        #179:#180     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #150 = NameAndType        #181:#182     // toCharArray:()[C\n-  #151 = Utf8               java/lang/Object\n-  #152 = Utf8               org/apache/commons/codec/StringEncoder\n-  #153 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-  #154 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #155 = Utf8               length\n-  #156 = Utf8               ()I\n-  #157 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #158 = Utf8               isEmpty\n-  #159 = Utf8               ()Z\n-  #160 = Utf8               removeNext\n-  #161 = Utf8               ()C\n-  #162 = Utf8               getNextChar\n-  #163 = Utf8               put\n-  #164 = Utf8               (C)V\n-  #165 = Utf8               toString\n-  #166 = Utf8               ()Ljava/lang/String;\n-  #167 = Utf8               append\n-  #168 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #169 = Utf8               java/lang/Class\n-  #170 = Utf8               getName\n-  #171 = Utf8               getClass\n-  #172 = Utf8               ()Ljava/lang/Class;\n-  #173 = Utf8               (Ljava/lang/String;)V\n-  #174 = Utf8               equals\n-  #175 = Utf8               (Ljava/lang/Object;)Z\n-  #176 = Utf8               java/util/Locale\n-  #177 = Utf8               GERMAN\n-  #178 = Utf8               Ljava/util/Locale;\n-  #179 = Utf8               toUpperCase\n-  #180 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #181 = Utf8               toCharArray\n-  #182 = Utf8               ()[C\n+   #89 = Utf8               encode\n+   #90 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #91 = Utf8               object\n+   #92 = Utf8               Ljava/lang/Object;\n+   #93 = Utf8               Exceptions\n+   #94 = Utf8               isEncodeEqual\n+   #95 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #96 = Utf8               text1\n+   #97 = Utf8               text2\n+   #98 = Utf8               preprocess\n+   #99 = Utf8               (Ljava/lang/String;)[C\n+  #100 = Utf8               index\n+  #101 = Utf8               I\n+  #102 = Utf8               chrs\n+  #103 = Utf8               <clinit>\n+  #104 = Utf8               SourceFile\n+  #105 = Utf8               ColognePhonetic.java\n+  #106 = NameAndType        #64:#65       // \"<init>\":()V\n+  #107 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+  #108 = NameAndType        #98:#99       // preprocess:(Ljava/lang/String;)[C\n+  #109 = NameAndType        #64:#150      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+  #110 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+  #111 = NameAndType        #151:#152     // length:()I\n+  #112 = NameAndType        #64:#153      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+  #113 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n+  #114 = NameAndType        #154:#155     // isEmpty:()Z\n+  #115 = NameAndType        #156:#157     // removeNext:()C\n+  #116 = NameAndType        #158:#157     // getNextChar:()C\n+  #117 = NameAndType        #50:#51       // AEIJOUY:[C\n+  #118 = NameAndType        #71:#72       // arrayContains:([CC)Z\n+  #119 = NameAndType        #159:#160     // put:(C)V\n+  #120 = NameAndType        #52:#51       // CSZ:[C\n+  #121 = NameAndType        #53:#51       // FPVW:[C\n+  #122 = NameAndType        #54:#51       // GKQ:[C\n+  #123 = NameAndType        #55:#51       // CKQ:[C\n+  #124 = NameAndType        #56:#51       // AHKLOQRUX:[C\n+  #125 = NameAndType        #57:#51       // SZ:[C\n+  #126 = NameAndType        #58:#51       // AHKOQUX:[C\n+  #127 = NameAndType        #59:#51       // DTX:[C\n+  #128 = NameAndType        #161:#162     // toString:()Ljava/lang/String;\n+  #129 = Utf8               java/lang/String\n+  #130 = Utf8               org/apache/commons/codec/EncoderException\n+  #131 = Utf8               java/lang/StringBuilder\n+  #132 = Utf8               This method\\'s parameter was expected to be of the type\n+  #133 = NameAndType        #163:#164     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #134 = Class              #165          // java/lang/Class\n+  #135 = NameAndType        #166:#162     // getName:()Ljava/lang/String;\n+  #136 = Utf8               . But actually it was of the type\n+  #137 = NameAndType        #167:#168     // getClass:()Ljava/lang/Class;\n+  #138 = Utf8               .\n+  #139 = NameAndType        #64:#169      // \"<init>\":(Ljava/lang/String;)V\n+  #140 = NameAndType        #89:#79       // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #141 = NameAndType        #78:#79       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #142 = NameAndType        #170:#171     // equals:(Ljava/lang/Object;)Z\n+  #143 = Class              #172          // java/util/Locale\n+  #144 = NameAndType        #173:#174     // GERMAN:Ljava/util/Locale;\n+  #145 = NameAndType        #175:#176     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #146 = NameAndType        #177:#178     // toCharArray:()[C\n+  #147 = Utf8               java/lang/Object\n+  #148 = Utf8               org/apache/commons/codec/StringEncoder\n+  #149 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #150 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+  #151 = Utf8               length\n+  #152 = Utf8               ()I\n+  #153 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+  #154 = Utf8               isEmpty\n+  #155 = Utf8               ()Z\n+  #156 = Utf8               removeNext\n+  #157 = Utf8               ()C\n+  #158 = Utf8               getNextChar\n+  #159 = Utf8               put\n+  #160 = Utf8               (C)V\n+  #161 = Utf8               toString\n+  #162 = Utf8               ()Ljava/lang/String;\n+  #163 = Utf8               append\n+  #164 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #165 = Utf8               java/lang/Class\n+  #166 = Utf8               getName\n+  #167 = Utf8               getClass\n+  #168 = Utf8               ()Ljava/lang/Class;\n+  #169 = Utf8               (Ljava/lang/String;)V\n+  #170 = Utf8               equals\n+  #171 = Utf8               (Ljava/lang/Object;)Z\n+  #172 = Utf8               java/util/Locale\n+  #173 = Utf8               GERMAN\n+  #174 = Utf8               Ljava/util/Locale;\n+  #175 = Utf8               toUpperCase\n+  #176 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #177 = Utf8               toCharArray\n+  #178 = Utf8               ()[C\n {\n   private static final char[] AEIJOUY;\n     descriptor: [C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final char[] CSZ;\n     descriptor: [C\n"}]}
