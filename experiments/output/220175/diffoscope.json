{"diffoscope-json-version": 1, "source1": "first/SynchronizedHandler.class", "source2": "second/SynchronizedHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,34 +3,32 @@\n \n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n \n public class SynchronizedHandler extends BlockParentHandler\n {\n     private final boolean methodModifier;\n     \n-    public SynchronizedHandler(final IndentationCheck indentCheck, final DetailAST ast, final AbstractExpressionHandler parent) {\n-        super(indentCheck, \"synchronized\", ast, parent);\n-        this.methodModifier = isMethodModifier(ast);\n+    public SynchronizedHandler(final IndentationCheck indentationCheck, final DetailAST detailAST, final AbstractExpressionHandler abstractExpressionHandler) {\n+        super(indentationCheck, \"synchronized\", detailAST, abstractExpressionHandler);\n+        this.methodModifier = isMethodModifier(detailAST);\n     }\n     \n     public void checkIndentation() {\n         if (!this.methodModifier) {\n             super.checkIndentation();\n             this.checkSynchronizedExpr();\n             this.checkWrappingIndentation(this.getMainAst(), getSynchronizedStatementRightParen(this.getMainAst()));\n         }\n     }\n     \n     private void checkSynchronizedExpr() {\n-        final DetailAST syncAst = this.getMainAst().findFirstToken(76).getNextSibling();\n-        final IndentLevel expected = new IndentLevel(this.getIndent(), new int[] { this.getBasicOffset() });\n-        this.checkExpressionSubtree(syncAst, expected, false, false);\n+        this.checkExpressionSubtree(this.getMainAst().findFirstToken(76).getNextSibling(), new IndentLevel(this.getIndent(), new int[] { this.getBasicOffset() }), false, false);\n     }\n     \n-    private static boolean isMethodModifier(final DetailAST ast) {\n-        return ast.getParent().getType() == 5;\n+    private static boolean isMethodModifier(final DetailAST detailAST) {\n+        return detailAST.getParent().getType() == 5;\n     }\n     \n-    private static DetailAST getSynchronizedStatementRightParen(final DetailAST syncStatementAST) {\n-        return syncStatementAST.findFirstToken(77);\n+    private static DetailAST getSynchronizedStatementRightParen(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(77);\n     }\n }\n"}]}
