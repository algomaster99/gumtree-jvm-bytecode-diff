{"diffoscope-json-version": 1, "source1": "first/CpioArchiveOutputStream.class", "source2": "second/CpioArchiveOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,439 +1,424 @@\n-  SHA-256 checksum 28a7d80cca099ea7682ffae8e02a079d7ddd86534f15b3294b65253f72401e65\n+  SHA-256 checksum 0244bdbf9762912fd3aafa2d0e3140502e7c01fa88eb96ee854763991ff9b0b4\n   Compiled from \"CpioArchiveOutputStream.java\"\n public class org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream extends org.apache.commons.compress.archivers.ArchiveOutputStream implements org.apache.commons.compress.archivers.cpio.CpioConstants\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #127                        // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  super_class: #128                       // org/apache/commons/compress/archivers/ArchiveOutputStream\n-  interfaces: 1, fields: 12, methods: 20, attributes: 3\n+  this_class: #132                        // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  super_class: #133                       // org/apache/commons/compress/archivers/ArchiveOutputStream\n+  interfaces: 1, fields: 12, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Class              #222          // org/apache/commons/compress/archivers/cpio/CpioConstants\n-    #2 = Class              #223          // org/apache/commons/compress/utils/CharsetNames\n-    #3 = String             #224          // US-ASCII\n-    #4 = Methodref          #127.#225     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n-    #5 = Methodref          #128.#226     // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n-    #6 = Fieldref           #127.#227     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closed:Z\n-    #7 = Class              #228          // java/util/HashMap\n-    #8 = Methodref          #7.#226       // java/util/HashMap.\"<init>\":()V\n-    #9 = Fieldref           #127.#229     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.names:Ljava/util/HashMap;\n-   #10 = Fieldref           #127.#230     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.crc:J\n-   #11 = Fieldref           #127.#231     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.nextArtificalDeviceAndInode:J\n-   #12 = Fieldref           #127.#232     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.out:Ljava/io/OutputStream;\n-   #13 = Class              #233          // java/lang/IllegalArgumentException\n-   #14 = InvokeDynamic      #0:#237       // #0:makeConcatWithConstants:(S)Ljava/lang/String;\n-   #15 = Methodref          #13.#238      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Fieldref           #127.#239     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entryFormat:S\n-   #17 = Fieldref           #127.#240     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.blockSize:I\n-   #18 = Fieldref           #127.#241     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.encoding:Ljava/lang/String;\n-   #19 = Methodref          #242.#243     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #20 = Fieldref           #127.#244     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #21 = Methodref          #127.#245     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;S)V\n-   #22 = Class              #246          // java/io/IOException\n-   #23 = String             #247          // Stream closed\n-   #24 = Methodref          #22.#238      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = Fieldref           #127.#248     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finished:Z\n-   #26 = String             #249          // Stream has already been finished\n-   #27 = Class              #250          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-   #28 = Methodref          #127.#251     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.ensureOpen:()V\n-   #29 = Fieldref           #127.#252     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #30 = Methodref          #127.#253     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closeArchiveEntry:()V\n-   #31 = Methodref          #27.#254      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n-   #32 = Long               -1l\n-   #34 = Methodref          #255.#256     // java/lang/System.currentTimeMillis:()J\n-   #35 = Long               1000l\n-   #37 = Methodref          #27.#257      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n-   #38 = Methodref          #27.#258      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n-   #39 = InvokeDynamic      #1:#260       // #1:makeConcatWithConstants:(SS)Ljava/lang/String;\n-   #40 = Methodref          #27.#261      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-   #41 = Methodref          #7.#262       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #42 = InvokeDynamic      #2:#264       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #43 = Methodref          #127.#265     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-   #44 = Fieldref           #127.#266     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.written:J\n-   #45 = String             #267          // 070701\n-   #46 = Methodref          #268.#269     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-   #47 = Methodref          #163.#270     // java/io/OutputStream.write:([B)V\n-   #48 = Methodref          #127.#271     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.count:(I)V\n-   #49 = Methodref          #127.#272     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-   #50 = String             #273          // 070702\n-   #51 = String             #274          // 070707\n-   #52 = Methodref          #127.#275     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-   #53 = Long               29127l\n-   #55 = Methodref          #127.#276     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeBinaryLong:(JIZ)V\n-   #56 = Methodref          #127.#277     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-   #57 = InvokeDynamic      #3:#237       // #3:makeConcatWithConstants:(S)Ljava/lang/String;\n-   #58 = Methodref          #27.#279      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n-   #59 = Methodref          #27.#280      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n-   #60 = String             #281          // TRAILER!!!\n-   #61 = Methodref          #164.#282     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #62 = Long               4294967296l\n-   #64 = Methodref          #283.#284     // java/lang/Math.max:(JJ)J\n-   #65 = Methodref          #127.#285     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeAsciiLong:(JII)V\n-   #66 = Methodref          #27.#286      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n-   #67 = Methodref          #27.#287      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n-   #68 = Methodref          #27.#288      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n-   #69 = Methodref          #27.#289      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n-   #70 = Methodref          #27.#290      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n-   #71 = Methodref          #27.#291      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n-   #72 = Methodref          #27.#292      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n-   #73 = Methodref          #27.#293      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n-   #74 = Methodref          #164.#294     // java/lang/String.length:()I\n-   #75 = Methodref          #27.#295      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n-   #76 = Methodref          #127.#296     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeCString:(Ljava/lang/String;)V\n-   #77 = Methodref          #27.#297      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n-   #78 = Methodref          #127.#298     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.pad:(I)V\n-   #79 = Methodref          #27.#299      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n-   #80 = Long               262143l\n-   #82 = Long               262144l\n-   #84 = Methodref          #27.#300      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n-   #85 = Long               65535l\n-   #87 = Long               65536l\n-   #89 = String             #301          // Trying to close non-existent entry\n-   #90 = InvokeDynamic      #4:#303       // #4:makeConcatWithConstants:(JJ)Ljava/lang/String;\n-   #91 = Methodref          #27.#304      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n-   #92 = String             #305          // CRC Error\n-   #93 = Class              #306          // java/lang/IndexOutOfBoundsException\n-   #94 = Methodref          #93.#226      // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #95 = String             #307          // no current CPIO entry\n-   #96 = String             #308          // attempt to write past end of STORED entry\n-   #97 = Methodref          #163.#309     // java/io/OutputStream.write:([BII)V\n-   #98 = Long               4294967295l\n-  #100 = String             #310          // This archive has already been finished\n-  #101 = String             #311          // This archive contains unclosed entries.\n-  #102 = Methodref          #27.#312      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n-  #103 = Methodref          #27.#313      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n-  #104 = Methodref          #27.#314      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n-  #105 = Methodref          #127.#315     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.getBytesWritten:()J\n-  #106 = Methodref          #127.#316     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finish:()V\n-  #107 = Methodref          #163.#317     // java/io/OutputStream.close:()V\n-  #108 = Methodref          #318.#319     // org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n-  #109 = Class              #320          // java/lang/StringBuilder\n-  #110 = Methodref          #109.#226     // java/lang/StringBuilder.\"<init>\":()V\n-  #111 = Methodref          #321.#322     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-  #112 = Methodref          #109.#323     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = Methodref          #321.#324     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n-  #114 = Methodref          #321.#325     // java/lang/Long.toString:(J)Ljava/lang/String;\n-  #115 = Methodref          #109.#294     // java/lang/StringBuilder.length:()I\n-  #116 = String             #326          // 0\n-  #117 = Methodref          #109.#327     // java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #118 = Methodref          #109.#328     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #119 = Methodref          #109.#329     // java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n-  #120 = InterfaceMethodref #330.#331     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #121 = Methodref          #332.#333     // java/nio/ByteBuffer.limit:()I\n-  #122 = Methodref          #332.#334     // java/nio/ByteBuffer.position:()I\n-  #123 = Methodref          #332.#335     // java/nio/ByteBuffer.array:()[B\n-  #124 = Methodref          #332.#336     // java/nio/ByteBuffer.arrayOffset:()I\n-  #125 = Methodref          #163.#337     // java/io/OutputStream.write:(I)V\n-  #126 = Methodref          #27.#338      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #127 = Class              #339          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #128 = Class              #340          // org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #129 = Utf8               entry\n-  #130 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #131 = Utf8               closed\n-  #132 = Utf8               Z\n-  #133 = Utf8               finished\n-  #134 = Utf8               entryFormat\n-  #135 = Utf8               S\n-  #136 = Utf8               names\n-  #137 = Utf8               Ljava/util/HashMap;\n-  #138 = Utf8               Signature\n-  #139 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;>;\n-  #140 = Utf8               crc\n-  #141 = Utf8               J\n-  #142 = Utf8               written\n-  #143 = Utf8               out\n-  #144 = Utf8               Ljava/io/OutputStream;\n-  #145 = Utf8               blockSize\n-  #146 = Utf8               I\n-  #147 = Utf8               nextArtificalDeviceAndInode\n-  #148 = Utf8               zipEncoding\n-  #149 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #150 = Utf8               encoding\n-  #151 = Utf8               Ljava/lang/String;\n-  #152 = Utf8               <init>\n-  #153 = Utf8               (Ljava/io/OutputStream;S)V\n-  #154 = Utf8               Code\n-  #155 = Utf8               LineNumberTable\n-  #156 = Utf8               LocalVariableTable\n-  #157 = Utf8               this\n-  #158 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n-  #159 = Utf8               format\n-  #160 = Utf8               (Ljava/io/OutputStream;SI)V\n-  #161 = Utf8               (Ljava/io/OutputStream;SILjava/lang/String;)V\n-  #162 = Utf8               StackMapTable\n-  #163 = Class              #341          // java/io/OutputStream\n-  #164 = Class              #342          // java/lang/String\n-  #165 = Utf8               (Ljava/io/OutputStream;)V\n-  #166 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #167 = Utf8               ensureOpen\n-  #168 = Utf8               ()V\n-  #169 = Utf8               Exceptions\n-  #170 = Utf8               putArchiveEntry\n-  #171 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n-  #172 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #173 = Utf8               e\n-  #174 = Utf8               writeHeader\n-  #175 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #176 = Utf8               swapHalfWord\n-  #177 = Utf8               writeNewEntry\n-  #178 = Utf8               inode\n-  #179 = Utf8               devMin\n-  #180 = Utf8               writeOldAsciiEntry\n-  #181 = Utf8               device\n-  #182 = Utf8               writeOldBinaryEntry\n-  #183 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-  #184 = Utf8               closeArchiveEntry\n-  #185 = Utf8               write\n-  #186 = Utf8               ([BII)V\n-  #187 = Utf8               pos\n-  #188 = Utf8               b\n-  #189 = Utf8               [B\n-  #190 = Utf8               off\n-  #191 = Utf8               len\n-  #192 = Utf8               finish\n-  #193 = Utf8               lengthOfLastBlock\n-  #194 = Utf8               close\n-  #195 = Utf8               pad\n-  #196 = Utf8               (I)V\n-  #197 = Utf8               buff\n-  #198 = Utf8               count\n-  #199 = Utf8               writeBinaryLong\n-  #200 = Utf8               (JIZ)V\n-  #201 = Utf8               number\n-  #202 = Utf8               length\n-  #203 = Utf8               tmp\n-  #204 = Utf8               writeAsciiLong\n-  #205 = Utf8               (JII)V\n-  #206 = Utf8               insertLength\n-  #207 = Utf8               tmpStr\n-  #208 = Utf8               radix\n-  #209 = Utf8               Ljava/lang/StringBuilder;\n-  #210 = Utf8               writeCString\n-  #211 = Utf8               (Ljava/lang/String;)V\n-  #212 = Utf8               str\n-  #213 = Utf8               buf\n-  #214 = Utf8               Ljava/nio/ByteBuffer;\n-  #215 = Utf8               createArchiveEntry\n-  #216 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #217 = Utf8               inputFile\n-  #218 = Utf8               Ljava/io/File;\n-  #219 = Utf8               entryName\n-  #220 = Utf8               SourceFile\n-  #221 = Utf8               CpioArchiveOutputStream.java\n-  #222 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n-  #223 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-  #224 = Utf8               US-ASCII\n-  #225 = NameAndType        #152:#161     // \"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n-  #226 = NameAndType        #152:#168     // \"<init>\":()V\n-  #227 = NameAndType        #131:#132     // closed:Z\n-  #228 = Utf8               java/util/HashMap\n-  #229 = NameAndType        #136:#137     // names:Ljava/util/HashMap;\n-  #230 = NameAndType        #140:#141     // crc:J\n-  #231 = NameAndType        #147:#141     // nextArtificalDeviceAndInode:J\n-  #232 = NameAndType        #143:#144     // out:Ljava/io/OutputStream;\n-  #233 = Utf8               java/lang/IllegalArgumentException\n-  #234 = Utf8               BootstrapMethods\n-  #235 = MethodHandle       6:#343        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #236 = String             #344          // Unknown format: \\u0001\n-  #237 = NameAndType        #345:#346     // makeConcatWithConstants:(S)Ljava/lang/String;\n-  #238 = NameAndType        #152:#211     // \"<init>\":(Ljava/lang/String;)V\n-  #239 = NameAndType        #134:#135     // entryFormat:S\n-  #240 = NameAndType        #145:#146     // blockSize:I\n-  #241 = NameAndType        #150:#151     // encoding:Ljava/lang/String;\n-  #242 = Class              #347          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #243 = NameAndType        #348:#349     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #244 = NameAndType        #148:#149     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #245 = NameAndType        #152:#153     // \"<init>\":(Ljava/io/OutputStream;S)V\n-  #246 = Utf8               java/io/IOException\n-  #247 = Utf8               Stream closed\n-  #248 = NameAndType        #133:#132     // finished:Z\n-  #249 = Utf8               Stream has already been finished\n-  #250 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #251 = NameAndType        #167:#168     // ensureOpen:()V\n-  #252 = NameAndType        #129:#130     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #253 = NameAndType        #184:#168     // closeArchiveEntry:()V\n-  #254 = NameAndType        #350:#351     // getTime:()J\n-  #255 = Class              #352          // java/lang/System\n-  #256 = NameAndType        #353:#351     // currentTimeMillis:()J\n-  #257 = NameAndType        #354:#355     // setTime:(J)V\n-  #258 = NameAndType        #356:#357     // getFormat:()S\n-  #259 = String             #358          // Header format: \\u0001 does not match existing format: \\u0001\n-  #260 = NameAndType        #345:#359     // makeConcatWithConstants:(SS)Ljava/lang/String;\n-  #261 = NameAndType        #360:#361     // getName:()Ljava/lang/String;\n-  #262 = NameAndType        #362:#363     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #263 = String             #364          // duplicate entry: \\u0001\n-  #264 = NameAndType        #345:#365     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #265 = NameAndType        #174:#175     // writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #266 = NameAndType        #142:#141     // written:J\n-  #267 = Utf8               070701\n-  #268 = Class              #366          // org/apache/commons/compress/utils/ArchiveUtils\n-  #269 = NameAndType        #367:#368     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #270 = NameAndType        #185:#369     // write:([B)V\n-  #271 = NameAndType        #198:#196     // count:(I)V\n-  #272 = NameAndType        #177:#175     // writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #273 = Utf8               070702\n-  #274 = Utf8               070707\n-  #275 = NameAndType        #180:#175     // writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-  #276 = NameAndType        #199:#200     // writeBinaryLong:(JIZ)V\n-  #277 = NameAndType        #182:#183     // writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-  #278 = String             #370          // unknown format \\u0001\n-  #279 = NameAndType        #371:#351     // getInode:()J\n-  #280 = NameAndType        #372:#351     // getDeviceMin:()J\n-  #281 = Utf8               TRAILER!!!\n-  #282 = NameAndType        #373:#374     // equals:(Ljava/lang/Object;)Z\n-  #283 = Class              #375          // java/lang/Math\n-  #284 = NameAndType        #376:#377     // max:(JJ)J\n-  #285 = NameAndType        #204:#205     // writeAsciiLong:(JII)V\n-  #286 = NameAndType        #378:#351     // getMode:()J\n-  #287 = NameAndType        #379:#351     // getUID:()J\n-  #288 = NameAndType        #380:#351     // getGID:()J\n-  #289 = NameAndType        #381:#351     // getNumberOfLinks:()J\n-  #290 = NameAndType        #382:#351     // getSize:()J\n-  #291 = NameAndType        #383:#351     // getDeviceMaj:()J\n-  #292 = NameAndType        #384:#351     // getRemoteDeviceMaj:()J\n-  #293 = NameAndType        #385:#351     // getRemoteDeviceMin:()J\n-  #294 = NameAndType        #202:#386     // length:()I\n-  #295 = NameAndType        #387:#351     // getChksum:()J\n-  #296 = NameAndType        #210:#211     // writeCString:(Ljava/lang/String;)V\n-  #297 = NameAndType        #388:#386     // getHeaderPadCount:()I\n-  #298 = NameAndType        #195:#196     // pad:(I)V\n-  #299 = NameAndType        #389:#351     // getDevice:()J\n-  #300 = NameAndType        #390:#351     // getRemoteDevice:()J\n-  #301 = Utf8               Trying to close non-existent entry\n-  #302 = String             #391          // invalid entry size (expected \\u0001 but got \\u0001 bytes)\n-  #303 = NameAndType        #345:#392     // makeConcatWithConstants:(JJ)Ljava/lang/String;\n-  #304 = NameAndType        #393:#386     // getDataPadCount:()I\n-  #305 = Utf8               CRC Error\n-  #306 = Utf8               java/lang/IndexOutOfBoundsException\n-  #307 = Utf8               no current CPIO entry\n-  #308 = Utf8               attempt to write past end of STORED entry\n-  #309 = NameAndType        #185:#186     // write:([BII)V\n-  #310 = Utf8               This archive has already been finished\n-  #311 = Utf8               This archive contains unclosed entries.\n-  #312 = NameAndType        #152:#394     // \"<init>\":(S)V\n-  #313 = NameAndType        #395:#211     // setName:(Ljava/lang/String;)V\n-  #314 = NameAndType        #396:#355     // setNumberOfLinks:(J)V\n-  #315 = NameAndType        #397:#351     // getBytesWritten:()J\n-  #316 = NameAndType        #192:#168     // finish:()V\n-  #317 = NameAndType        #194:#168     // close:()V\n-  #318 = Class              #398          // org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #319 = NameAndType        #399:#400     // long2byteArray:(JIZ)[B\n-  #320 = Utf8               java/lang/StringBuilder\n-  #321 = Class              #401          // java/lang/Long\n-  #322 = NameAndType        #402:#403     // toHexString:(J)Ljava/lang/String;\n-  #323 = NameAndType        #404:#405     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #324 = NameAndType        #406:#403     // toOctalString:(J)Ljava/lang/String;\n-  #325 = NameAndType        #407:#403     // toString:(J)Ljava/lang/String;\n-  #326 = Utf8               0\n-  #327 = NameAndType        #408:#409     // insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #328 = NameAndType        #407:#361     // toString:()Ljava/lang/String;\n-  #329 = NameAndType        #410:#411     // substring:(I)Ljava/lang/String;\n-  #330 = Class              #412          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #331 = NameAndType        #413:#414     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #332 = Class              #415          // java/nio/ByteBuffer\n-  #333 = NameAndType        #416:#386     // limit:()I\n-  #334 = NameAndType        #417:#386     // position:()I\n-  #335 = NameAndType        #418:#419     // array:()[B\n-  #336 = NameAndType        #420:#386     // arrayOffset:()I\n-  #337 = NameAndType        #185:#196     // write:(I)V\n-  #338 = NameAndType        #152:#421     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #339 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #340 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n-  #341 = Utf8               java/io/OutputStream\n-  #342 = Utf8               java/lang/String\n-  #343 = Methodref          #422.#423     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #344 = Utf8               Unknown format: \\u0001\n-  #345 = Utf8               makeConcatWithConstants\n-  #346 = Utf8               (S)Ljava/lang/String;\n-  #347 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #348 = Utf8               getZipEncoding\n-  #349 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #350 = Utf8               getTime\n-  #351 = Utf8               ()J\n-  #352 = Utf8               java/lang/System\n-  #353 = Utf8               currentTimeMillis\n-  #354 = Utf8               setTime\n-  #355 = Utf8               (J)V\n-  #356 = Utf8               getFormat\n-  #357 = Utf8               ()S\n-  #358 = Utf8               Header format: \\u0001 does not match existing format: \\u0001\n-  #359 = Utf8               (SS)Ljava/lang/String;\n-  #360 = Utf8               getName\n-  #361 = Utf8               ()Ljava/lang/String;\n-  #362 = Utf8               put\n-  #363 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #364 = Utf8               duplicate entry: \\u0001\n-  #365 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+    #1 = Class              #227          // org/apache/commons/compress/archivers/cpio/CpioConstants\n+    #2 = Class              #228          // org/apache/commons/compress/utils/CharsetNames\n+    #3 = String             #229          // US-ASCII\n+    #4 = Methodref          #132.#230     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n+    #5 = Methodref          #133.#231     // org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n+    #6 = Fieldref           #132.#232     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closed:Z\n+    #7 = Class              #233          // java/util/HashMap\n+    #8 = Methodref          #7.#231       // java/util/HashMap.\"<init>\":()V\n+    #9 = Fieldref           #132.#234     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.names:Ljava/util/HashMap;\n+   #10 = Fieldref           #132.#235     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.crc:J\n+   #11 = Fieldref           #132.#236     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.nextArtificalDeviceAndInode:J\n+   #12 = Fieldref           #132.#237     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.out:Ljava/io/OutputStream;\n+   #13 = Class              #238          // java/lang/IllegalArgumentException\n+   #14 = Class              #239          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#231      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = String             #240          // Unknown format:\n+   #17 = Methodref          #14.#241      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #14.#242      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #19 = Methodref          #14.#243      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #20 = Methodref          #13.#244      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = Fieldref           #132.#245     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entryFormat:S\n+   #22 = Fieldref           #132.#246     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.blockSize:I\n+   #23 = Fieldref           #132.#247     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.encoding:Ljava/lang/String;\n+   #24 = Methodref          #248.#249     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #25 = Fieldref           #132.#250     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #26 = Methodref          #132.#251     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;S)V\n+   #27 = Class              #252          // java/io/IOException\n+   #28 = String             #253          // Stream closed\n+   #29 = Methodref          #27.#244      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Fieldref           #132.#254     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finished:Z\n+   #31 = String             #255          // Stream has already been finished\n+   #32 = Class              #256          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+   #33 = Methodref          #132.#257     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.ensureOpen:()V\n+   #34 = Fieldref           #132.#258     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #35 = Methodref          #132.#259     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.closeArchiveEntry:()V\n+   #36 = Methodref          #32.#260      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+   #37 = Long               -1l\n+   #39 = Methodref          #261.#262     // java/lang/System.currentTimeMillis:()J\n+   #40 = Long               1000l\n+   #42 = Methodref          #32.#263      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n+   #43 = Methodref          #32.#264      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+   #44 = String             #265          // Header format:\n+   #45 = String             #266          //  does not match existing format:\n+   #46 = Methodref          #32.#267      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+   #47 = Methodref          #7.#268       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = String             #269          // duplicate entry:\n+   #49 = Methodref          #132.#270     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #50 = Fieldref           #132.#271     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.written:J\n+   #51 = String             #272          // 070701\n+   #52 = Methodref          #273.#274     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+   #53 = Methodref          #168.#275     // java/io/OutputStream.write:([B)V\n+   #54 = Methodref          #132.#276     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.count:(I)V\n+   #55 = Methodref          #132.#277     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #56 = String             #278          // 070702\n+   #57 = String             #279          // 070707\n+   #58 = Methodref          #132.#280     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+   #59 = Long               29127l\n+   #61 = Methodref          #132.#281     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeBinaryLong:(JIZ)V\n+   #62 = Methodref          #132.#282     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+   #63 = String             #283          // unknown format\n+   #64 = Methodref          #32.#284      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n+   #65 = Methodref          #32.#285      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n+   #66 = String             #286          // TRAILER!!!\n+   #67 = Methodref          #169.#287     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #68 = Long               4294967296l\n+   #70 = Methodref          #288.#289     // java/lang/Math.max:(JJ)J\n+   #71 = Methodref          #132.#290     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeAsciiLong:(JII)V\n+   #72 = Methodref          #32.#291      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n+   #73 = Methodref          #32.#292      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n+   #74 = Methodref          #32.#293      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n+   #75 = Methodref          #32.#294      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n+   #76 = Methodref          #32.#295      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+   #77 = Methodref          #32.#296      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n+   #78 = Methodref          #32.#297      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n+   #79 = Methodref          #32.#298      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n+   #80 = Methodref          #169.#299     // java/lang/String.length:()I\n+   #81 = Methodref          #32.#300      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n+   #82 = Methodref          #132.#301     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.writeCString:(Ljava/lang/String;)V\n+   #83 = Methodref          #32.#302      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n+   #84 = Methodref          #132.#303     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.pad:(I)V\n+   #85 = Methodref          #32.#304      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n+   #86 = Long               262143l\n+   #88 = Long               262144l\n+   #90 = Methodref          #32.#305      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n+   #91 = Long               65535l\n+   #93 = Long               65536l\n+   #95 = String             #306          // Trying to close non-existent entry\n+   #96 = String             #307          // invalid entry size (expected\n+   #97 = Methodref          #14.#308      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #98 = String             #309          //  but got\n+   #99 = String             #310          //  bytes)\n+  #100 = Methodref          #32.#311      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n+  #101 = String             #312          // CRC Error\n+  #102 = Class              #313          // java/lang/IndexOutOfBoundsException\n+  #103 = Methodref          #102.#231     // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+  #104 = String             #314          // no current CPIO entry\n+  #105 = String             #315          // attempt to write past end of STORED entry\n+  #106 = Methodref          #168.#316     // java/io/OutputStream.write:([BII)V\n+  #107 = Long               4294967295l\n+  #109 = String             #317          // This archive has already been finished\n+  #110 = String             #318          // This archive contains unclosed entries.\n+  #111 = Methodref          #32.#319      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n+  #112 = Methodref          #32.#320      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n+  #113 = Methodref          #32.#321      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n+  #114 = Methodref          #132.#322     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.getBytesWritten:()J\n+  #115 = Methodref          #132.#323     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.finish:()V\n+  #116 = Methodref          #168.#324     // java/io/OutputStream.close:()V\n+  #117 = Methodref          #325.#326     // org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n+  #118 = Methodref          #327.#328     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+  #119 = Methodref          #327.#329     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n+  #120 = Methodref          #327.#330     // java/lang/Long.toString:(J)Ljava/lang/String;\n+  #121 = Methodref          #14.#299      // java/lang/StringBuilder.length:()I\n+  #122 = String             #331          // 0\n+  #123 = Methodref          #14.#332      // java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Methodref          #14.#333      // java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n+  #125 = InterfaceMethodref #334.#335     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #126 = Methodref          #336.#337     // java/nio/ByteBuffer.limit:()I\n+  #127 = Methodref          #336.#338     // java/nio/ByteBuffer.position:()I\n+  #128 = Methodref          #336.#339     // java/nio/ByteBuffer.array:()[B\n+  #129 = Methodref          #336.#340     // java/nio/ByteBuffer.arrayOffset:()I\n+  #130 = Methodref          #168.#341     // java/io/OutputStream.write:(I)V\n+  #131 = Methodref          #32.#342      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #132 = Class              #343          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #133 = Class              #344          // org/apache/commons/compress/archivers/ArchiveOutputStream\n+  #134 = Utf8               entry\n+  #135 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #136 = Utf8               closed\n+  #137 = Utf8               Z\n+  #138 = Utf8               finished\n+  #139 = Utf8               entryFormat\n+  #140 = Utf8               S\n+  #141 = Utf8               names\n+  #142 = Utf8               Ljava/util/HashMap;\n+  #143 = Utf8               Signature\n+  #144 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;>;\n+  #145 = Utf8               crc\n+  #146 = Utf8               J\n+  #147 = Utf8               written\n+  #148 = Utf8               out\n+  #149 = Utf8               Ljava/io/OutputStream;\n+  #150 = Utf8               blockSize\n+  #151 = Utf8               I\n+  #152 = Utf8               nextArtificalDeviceAndInode\n+  #153 = Utf8               zipEncoding\n+  #154 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #155 = Utf8               encoding\n+  #156 = Utf8               Ljava/lang/String;\n+  #157 = Utf8               <init>\n+  #158 = Utf8               (Ljava/io/OutputStream;S)V\n+  #159 = Utf8               Code\n+  #160 = Utf8               LineNumberTable\n+  #161 = Utf8               LocalVariableTable\n+  #162 = Utf8               this\n+  #163 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n+  #164 = Utf8               format\n+  #165 = Utf8               (Ljava/io/OutputStream;SI)V\n+  #166 = Utf8               (Ljava/io/OutputStream;SILjava/lang/String;)V\n+  #167 = Utf8               StackMapTable\n+  #168 = Class              #345          // java/io/OutputStream\n+  #169 = Class              #346          // java/lang/String\n+  #170 = Utf8               (Ljava/io/OutputStream;)V\n+  #171 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #172 = Utf8               ensureOpen\n+  #173 = Utf8               ()V\n+  #174 = Utf8               Exceptions\n+  #175 = Utf8               putArchiveEntry\n+  #176 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n+  #177 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #178 = Utf8               e\n+  #179 = Utf8               writeHeader\n+  #180 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #181 = Utf8               swapHalfWord\n+  #182 = Utf8               writeNewEntry\n+  #183 = Utf8               inode\n+  #184 = Utf8               devMin\n+  #185 = Utf8               writeOldAsciiEntry\n+  #186 = Utf8               device\n+  #187 = Utf8               writeOldBinaryEntry\n+  #188 = Utf8               (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+  #189 = Utf8               closeArchiveEntry\n+  #190 = Utf8               write\n+  #191 = Utf8               ([BII)V\n+  #192 = Utf8               pos\n+  #193 = Utf8               b\n+  #194 = Utf8               [B\n+  #195 = Utf8               off\n+  #196 = Utf8               len\n+  #197 = Utf8               finish\n+  #198 = Utf8               lengthOfLastBlock\n+  #199 = Utf8               close\n+  #200 = Utf8               pad\n+  #201 = Utf8               (I)V\n+  #202 = Utf8               buff\n+  #203 = Utf8               count\n+  #204 = Utf8               writeBinaryLong\n+  #205 = Utf8               (JIZ)V\n+  #206 = Utf8               number\n+  #207 = Utf8               length\n+  #208 = Utf8               tmp\n+  #209 = Utf8               writeAsciiLong\n+  #210 = Utf8               (JII)V\n+  #211 = Utf8               insertLength\n+  #212 = Utf8               tmpStr\n+  #213 = Utf8               radix\n+  #214 = Utf8               Ljava/lang/StringBuilder;\n+  #215 = Utf8               writeCString\n+  #216 = Utf8               (Ljava/lang/String;)V\n+  #217 = Utf8               str\n+  #218 = Utf8               buf\n+  #219 = Utf8               Ljava/nio/ByteBuffer;\n+  #220 = Utf8               createArchiveEntry\n+  #221 = Utf8               (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #222 = Utf8               inputFile\n+  #223 = Utf8               Ljava/io/File;\n+  #224 = Utf8               entryName\n+  #225 = Utf8               SourceFile\n+  #226 = Utf8               CpioArchiveOutputStream.java\n+  #227 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n+  #228 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+  #229 = Utf8               US-ASCII\n+  #230 = NameAndType        #157:#166     // \"<init>\":(Ljava/io/OutputStream;SILjava/lang/String;)V\n+  #231 = NameAndType        #157:#173     // \"<init>\":()V\n+  #232 = NameAndType        #136:#137     // closed:Z\n+  #233 = Utf8               java/util/HashMap\n+  #234 = NameAndType        #141:#142     // names:Ljava/util/HashMap;\n+  #235 = NameAndType        #145:#146     // crc:J\n+  #236 = NameAndType        #152:#146     // nextArtificalDeviceAndInode:J\n+  #237 = NameAndType        #148:#149     // out:Ljava/io/OutputStream;\n+  #238 = Utf8               java/lang/IllegalArgumentException\n+  #239 = Utf8               java/lang/StringBuilder\n+  #240 = Utf8               Unknown format:\n+  #241 = NameAndType        #347:#348     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #242 = NameAndType        #347:#349     // append:(I)Ljava/lang/StringBuilder;\n+  #243 = NameAndType        #350:#351     // toString:()Ljava/lang/String;\n+  #244 = NameAndType        #157:#216     // \"<init>\":(Ljava/lang/String;)V\n+  #245 = NameAndType        #139:#140     // entryFormat:S\n+  #246 = NameAndType        #150:#151     // blockSize:I\n+  #247 = NameAndType        #155:#156     // encoding:Ljava/lang/String;\n+  #248 = Class              #352          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #249 = NameAndType        #353:#354     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #250 = NameAndType        #153:#154     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #251 = NameAndType        #157:#158     // \"<init>\":(Ljava/io/OutputStream;S)V\n+  #252 = Utf8               java/io/IOException\n+  #253 = Utf8               Stream closed\n+  #254 = NameAndType        #138:#137     // finished:Z\n+  #255 = Utf8               Stream has already been finished\n+  #256 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+  #257 = NameAndType        #172:#173     // ensureOpen:()V\n+  #258 = NameAndType        #134:#135     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #259 = NameAndType        #189:#173     // closeArchiveEntry:()V\n+  #260 = NameAndType        #355:#356     // getTime:()J\n+  #261 = Class              #357          // java/lang/System\n+  #262 = NameAndType        #358:#356     // currentTimeMillis:()J\n+  #263 = NameAndType        #359:#360     // setTime:(J)V\n+  #264 = NameAndType        #361:#362     // getFormat:()S\n+  #265 = Utf8               Header format:\n+  #266 = Utf8                does not match existing format:\n+  #267 = NameAndType        #363:#351     // getName:()Ljava/lang/String;\n+  #268 = NameAndType        #364:#365     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #269 = Utf8               duplicate entry:\n+  #270 = NameAndType        #179:#180     // writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #271 = NameAndType        #147:#146     // written:J\n+  #272 = Utf8               070701\n+  #273 = Class              #366          // org/apache/commons/compress/utils/ArchiveUtils\n+  #274 = NameAndType        #367:#368     // toAsciiBytes:(Ljava/lang/String;)[B\n+  #275 = NameAndType        #190:#369     // write:([B)V\n+  #276 = NameAndType        #203:#201     // count:(I)V\n+  #277 = NameAndType        #182:#180     // writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #278 = Utf8               070702\n+  #279 = Utf8               070707\n+  #280 = NameAndType        #185:#180     // writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+  #281 = NameAndType        #204:#205     // writeBinaryLong:(JIZ)V\n+  #282 = NameAndType        #187:#188     // writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+  #283 = Utf8               unknown format\n+  #284 = NameAndType        #370:#356     // getInode:()J\n+  #285 = NameAndType        #371:#356     // getDeviceMin:()J\n+  #286 = Utf8               TRAILER!!!\n+  #287 = NameAndType        #372:#373     // equals:(Ljava/lang/Object;)Z\n+  #288 = Class              #374          // java/lang/Math\n+  #289 = NameAndType        #375:#376     // max:(JJ)J\n+  #290 = NameAndType        #209:#210     // writeAsciiLong:(JII)V\n+  #291 = NameAndType        #377:#356     // getMode:()J\n+  #292 = NameAndType        #378:#356     // getUID:()J\n+  #293 = NameAndType        #379:#356     // getGID:()J\n+  #294 = NameAndType        #380:#356     // getNumberOfLinks:()J\n+  #295 = NameAndType        #381:#356     // getSize:()J\n+  #296 = NameAndType        #382:#356     // getDeviceMaj:()J\n+  #297 = NameAndType        #383:#356     // getRemoteDeviceMaj:()J\n+  #298 = NameAndType        #384:#356     // getRemoteDeviceMin:()J\n+  #299 = NameAndType        #207:#385     // length:()I\n+  #300 = NameAndType        #386:#356     // getChksum:()J\n+  #301 = NameAndType        #215:#216     // writeCString:(Ljava/lang/String;)V\n+  #302 = NameAndType        #387:#385     // getHeaderPadCount:()I\n+  #303 = NameAndType        #200:#201     // pad:(I)V\n+  #304 = NameAndType        #388:#356     // getDevice:()J\n+  #305 = NameAndType        #389:#356     // getRemoteDevice:()J\n+  #306 = Utf8               Trying to close non-existent entry\n+  #307 = Utf8               invalid entry size (expected\n+  #308 = NameAndType        #347:#390     // append:(J)Ljava/lang/StringBuilder;\n+  #309 = Utf8                but got\n+  #310 = Utf8                bytes)\n+  #311 = NameAndType        #391:#385     // getDataPadCount:()I\n+  #312 = Utf8               CRC Error\n+  #313 = Utf8               java/lang/IndexOutOfBoundsException\n+  #314 = Utf8               no current CPIO entry\n+  #315 = Utf8               attempt to write past end of STORED entry\n+  #316 = NameAndType        #190:#191     // write:([BII)V\n+  #317 = Utf8               This archive has already been finished\n+  #318 = Utf8               This archive contains unclosed entries.\n+  #319 = NameAndType        #157:#392     // \"<init>\":(S)V\n+  #320 = NameAndType        #393:#216     // setName:(Ljava/lang/String;)V\n+  #321 = NameAndType        #394:#360     // setNumberOfLinks:(J)V\n+  #322 = NameAndType        #395:#356     // getBytesWritten:()J\n+  #323 = NameAndType        #197:#173     // finish:()V\n+  #324 = NameAndType        #199:#173     // close:()V\n+  #325 = Class              #396          // org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #326 = NameAndType        #397:#398     // long2byteArray:(JIZ)[B\n+  #327 = Class              #399          // java/lang/Long\n+  #328 = NameAndType        #400:#401     // toHexString:(J)Ljava/lang/String;\n+  #329 = NameAndType        #402:#401     // toOctalString:(J)Ljava/lang/String;\n+  #330 = NameAndType        #350:#401     // toString:(J)Ljava/lang/String;\n+  #331 = Utf8               0\n+  #332 = NameAndType        #403:#404     // insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #333 = NameAndType        #405:#406     // substring:(I)Ljava/lang/String;\n+  #334 = Class              #407          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #335 = NameAndType        #408:#409     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #336 = Class              #410          // java/nio/ByteBuffer\n+  #337 = NameAndType        #411:#385     // limit:()I\n+  #338 = NameAndType        #412:#385     // position:()I\n+  #339 = NameAndType        #413:#414     // array:()[B\n+  #340 = NameAndType        #415:#385     // arrayOffset:()I\n+  #341 = NameAndType        #190:#201     // write:(I)V\n+  #342 = NameAndType        #157:#416     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #343 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #344 = Utf8               org/apache/commons/compress/archivers/ArchiveOutputStream\n+  #345 = Utf8               java/io/OutputStream\n+  #346 = Utf8               java/lang/String\n+  #347 = Utf8               append\n+  #348 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #349 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #350 = Utf8               toString\n+  #351 = Utf8               ()Ljava/lang/String;\n+  #352 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #353 = Utf8               getZipEncoding\n+  #354 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #355 = Utf8               getTime\n+  #356 = Utf8               ()J\n+  #357 = Utf8               java/lang/System\n+  #358 = Utf8               currentTimeMillis\n+  #359 = Utf8               setTime\n+  #360 = Utf8               (J)V\n+  #361 = Utf8               getFormat\n+  #362 = Utf8               ()S\n+  #363 = Utf8               getName\n+  #364 = Utf8               put\n+  #365 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n   #366 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n   #367 = Utf8               toAsciiBytes\n   #368 = Utf8               (Ljava/lang/String;)[B\n   #369 = Utf8               ([B)V\n-  #370 = Utf8               unknown format \\u0001\n-  #371 = Utf8               getInode\n-  #372 = Utf8               getDeviceMin\n-  #373 = Utf8               equals\n-  #374 = Utf8               (Ljava/lang/Object;)Z\n-  #375 = Utf8               java/lang/Math\n-  #376 = Utf8               max\n-  #377 = Utf8               (JJ)J\n-  #378 = Utf8               getMode\n-  #379 = Utf8               getUID\n-  #380 = Utf8               getGID\n-  #381 = Utf8               getNumberOfLinks\n-  #382 = Utf8               getSize\n-  #383 = Utf8               getDeviceMaj\n-  #384 = Utf8               getRemoteDeviceMaj\n-  #385 = Utf8               getRemoteDeviceMin\n-  #386 = Utf8               ()I\n-  #387 = Utf8               getChksum\n-  #388 = Utf8               getHeaderPadCount\n-  #389 = Utf8               getDevice\n-  #390 = Utf8               getRemoteDevice\n-  #391 = Utf8               invalid entry size (expected \\u0001 but got \\u0001 bytes)\n-  #392 = Utf8               (JJ)Ljava/lang/String;\n-  #393 = Utf8               getDataPadCount\n-  #394 = Utf8               (S)V\n-  #395 = Utf8               setName\n-  #396 = Utf8               setNumberOfLinks\n-  #397 = Utf8               getBytesWritten\n-  #398 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #399 = Utf8               long2byteArray\n-  #400 = Utf8               (JIZ)[B\n-  #401 = Utf8               java/lang/Long\n-  #402 = Utf8               toHexString\n-  #403 = Utf8               (J)Ljava/lang/String;\n-  #404 = Utf8               append\n-  #405 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #406 = Utf8               toOctalString\n-  #407 = Utf8               toString\n-  #408 = Utf8               insert\n-  #409 = Utf8               (ILjava/lang/String;)Ljava/lang/StringBuilder;\n-  #410 = Utf8               substring\n-  #411 = Utf8               (I)Ljava/lang/String;\n-  #412 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #413 = Utf8               encode\n-  #414 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #415 = Utf8               java/nio/ByteBuffer\n-  #416 = Utf8               limit\n-  #417 = Utf8               position\n-  #418 = Utf8               array\n-  #419 = Utf8               ()[B\n-  #420 = Utf8               arrayOffset\n-  #421 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #422 = Class              #424          // java/lang/invoke/StringConcatFactory\n-  #423 = NameAndType        #345:#428     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #424 = Utf8               java/lang/invoke/StringConcatFactory\n-  #425 = Class              #430          // java/lang/invoke/MethodHandles$Lookup\n-  #426 = Utf8               Lookup\n-  #427 = Utf8               InnerClasses\n-  #428 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #429 = Class              #431          // java/lang/invoke/MethodHandles\n-  #430 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #431 = Utf8               java/lang/invoke/MethodHandles\n+  #370 = Utf8               getInode\n+  #371 = Utf8               getDeviceMin\n+  #372 = Utf8               equals\n+  #373 = Utf8               (Ljava/lang/Object;)Z\n+  #374 = Utf8               java/lang/Math\n+  #375 = Utf8               max\n+  #376 = Utf8               (JJ)J\n+  #377 = Utf8               getMode\n+  #378 = Utf8               getUID\n+  #379 = Utf8               getGID\n+  #380 = Utf8               getNumberOfLinks\n+  #381 = Utf8               getSize\n+  #382 = Utf8               getDeviceMaj\n+  #383 = Utf8               getRemoteDeviceMaj\n+  #384 = Utf8               getRemoteDeviceMin\n+  #385 = Utf8               ()I\n+  #386 = Utf8               getChksum\n+  #387 = Utf8               getHeaderPadCount\n+  #388 = Utf8               getDevice\n+  #389 = Utf8               getRemoteDevice\n+  #390 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #391 = Utf8               getDataPadCount\n+  #392 = Utf8               (S)V\n+  #393 = Utf8               setName\n+  #394 = Utf8               setNumberOfLinks\n+  #395 = Utf8               getBytesWritten\n+  #396 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #397 = Utf8               long2byteArray\n+  #398 = Utf8               (JIZ)[B\n+  #399 = Utf8               java/lang/Long\n+  #400 = Utf8               toHexString\n+  #401 = Utf8               (J)Ljava/lang/String;\n+  #402 = Utf8               toOctalString\n+  #403 = Utf8               insert\n+  #404 = Utf8               (ILjava/lang/String;)Ljava/lang/StringBuilder;\n+  #405 = Utf8               substring\n+  #406 = Utf8               (I)Ljava/lang/String;\n+  #407 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #408 = Utf8               encode\n+  #409 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #410 = Utf8               java/nio/ByteBuffer\n+  #411 = Utf8               limit\n+  #412 = Utf8               position\n+  #413 = Utf8               array\n+  #414 = Utf8               ()[B\n+  #415 = Utf8               arrayOffset\n+  #416 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n {\n   private org.apache.commons.compress.archivers.cpio.CpioArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean closed;\n     descriptor: Z\n@@ -446,15 +431,15 @@\n   private final short entryFormat;\n     descriptor: S\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.HashMap<java.lang.String, org.apache.commons.compress.archivers.cpio.CpioArchiveEntry> names;\n     descriptor: Ljava/util/HashMap;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #139                         // Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;>;\n+    Signature: #144                         // Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;>;\n \n   private long crc;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private long written;\n     descriptor: J\n@@ -523,15 +508,15 @@\n             0      10     2 format   S\n             0      10     3 blockSize   I\n \n   public org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream(java.io.OutputStream, short, int, java.lang.String);\n     descriptor: (Ljava/io/OutputStream;SILjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=5, args_size=5\n+      stack=4, locals=5, args_size=5\n          0: aload_0\n          1: invokespecial #5                  // Method org/apache/commons/compress/archivers/ArchiveOutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n          6: putfield      #6                  // Field closed:Z\n          9: aload_0\n         10: new           #7                  // class java/util/HashMap\n@@ -555,74 +540,80 @@\n                        4: 84\n                        5: 87\n                        6: 87\n                        7: 87\n                        8: 84\n                  default: 87\n             }\n-        84: goto          101\n+        84: goto          114\n         87: new           #13                 // class java/lang/IllegalArgumentException\n         90: dup\n-        91: iload_2\n-        92: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(S)Ljava/lang/String;\n-        97: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: aload_0\n-       102: iload_2\n-       103: putfield      #16                 // Field entryFormat:S\n-       106: aload_0\n-       107: iload_3\n-       108: putfield      #17                 // Field blockSize:I\n-       111: aload_0\n-       112: aload         4\n-       114: putfield      #18                 // Field encoding:Ljava/lang/String;\n-       117: aload_0\n-       118: aload         4\n-       120: invokestatic  #19                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-       123: putfield      #20                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-       126: return\n+        91: new           #14                 // class java/lang/StringBuilder\n+        94: dup\n+        95: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        98: ldc           #16                 // String Unknown format:\n+       100: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       103: iload_2\n+       104: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       107: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       110: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       113: athrow\n+       114: aload_0\n+       115: iload_2\n+       116: putfield      #21                 // Field entryFormat:S\n+       119: aload_0\n+       120: iload_3\n+       121: putfield      #22                 // Field blockSize:I\n+       124: aload_0\n+       125: aload         4\n+       127: putfield      #23                 // Field encoding:Ljava/lang/String;\n+       130: aload_0\n+       131: aload         4\n+       133: invokestatic  #24                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+       136: putfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+       139: return\n       LineNumberTable:\n         line 149: 0\n         line 69: 4\n         line 79: 9\n         line 82: 20\n         line 90: 25\n         line 150: 30\n         line 151: 35\n         line 156: 84\n         line 158: 87\n-        line 161: 101\n-        line 162: 106\n-        line 163: 111\n-        line 164: 117\n-        line 165: 126\n+        line 161: 114\n+        line 162: 119\n+        line 163: 124\n+        line 164: 130\n+        line 165: 139\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     127     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n-            0     127     1   out   Ljava/io/OutputStream;\n-            0     127     2 format   S\n-            0     127     3 blockSize   I\n-            0     127     4 encoding   Ljava/lang/String;\n+            0     140     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n+            0     140     1   out   Ljava/io/OutputStream;\n+            0     140     2 format   S\n+            0     140     3 blockSize   I\n+            0     140     4 encoding   Ljava/lang/String;\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 84\n           locals = [ class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream, class java/io/OutputStream, int, int, class java/lang/String ]\n           stack = []\n         frame_type = 2 /* same */\n-        frame_type = 13 /* same */\n+        frame_type = 26 /* same */\n \n   public org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #21                 // Method \"<init>\":(Ljava/io/OutputStream;S)V\n+         3: invokespecial #26                 // Method \"<init>\":(Ljava/io/OutputStream;S)V\n          6: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n@@ -653,18 +644,18 @@\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #6                  // Field closed:Z\n          4: ifeq          17\n-         7: new           #22                 // class java/io/IOException\n+         7: new           #27                 // class java/io/IOException\n         10: dup\n-        11: ldc           #23                 // String Stream closed\n-        13: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #28                 // String Stream closed\n+        13: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 7\n         line 203: 17\n       LocalVariableTable:\n@@ -677,191 +668,212 @@\n \n   public void putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #25                 // Field finished:Z\n+         1: getfield      #30                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #22                 // class java/io/IOException\n+         7: new           #27                 // class java/io/IOException\n         10: dup\n-        11: ldc           #26                 // String Stream has already been finished\n-        13: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #31                 // String Stream has already been finished\n+        13: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_1\n-        18: checkcast     #27                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+        18: checkcast     #32                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n         21: astore_2\n         22: aload_0\n-        23: invokespecial #28                 // Method ensureOpen:()V\n+        23: invokespecial #33                 // Method ensureOpen:()V\n         26: aload_0\n-        27: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        27: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         30: ifnull        37\n         33: aload_0\n-        34: invokevirtual #30                 // Method closeArchiveEntry:()V\n+        34: invokevirtual #35                 // Method closeArchiveEntry:()V\n         37: aload_2\n-        38: invokevirtual #31                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n-        41: ldc2_w        #32                 // long -1l\n+        38: invokevirtual #36                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+        41: ldc2_w        #37                 // long -1l\n         44: lcmp\n         45: ifne          59\n         48: aload_2\n-        49: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J\n-        52: ldc2_w        #35                 // long 1000l\n+        49: invokestatic  #39                 // Method java/lang/System.currentTimeMillis:()J\n+        52: ldc2_w        #40                 // long 1000l\n         55: ldiv\n-        56: invokevirtual #37                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n+        56: invokevirtual #42                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n         59: aload_2\n-        60: invokevirtual #38                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+        60: invokevirtual #43                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n         63: istore_3\n         64: iload_3\n         65: aload_0\n-        66: getfield      #16                 // Field entryFormat:S\n-        69: if_icmpeq     90\n-        72: new           #22                 // class java/io/IOException\n+        66: getfield      #21                 // Field entryFormat:S\n+        69: if_icmpeq     111\n+        72: new           #27                 // class java/io/IOException\n         75: dup\n-        76: iload_3\n-        77: aload_0\n-        78: getfield      #16                 // Field entryFormat:S\n-        81: invokedynamic #39,  0             // InvokeDynamic #1:makeConcatWithConstants:(SS)Ljava/lang/String;\n-        86: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        89: athrow\n-        90: aload_0\n-        91: getfield      #9                  // Field names:Ljava/util/HashMap;\n-        94: aload_2\n-        95: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-        98: aload_2\n-        99: invokevirtual #41                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-       102: ifnull        122\n-       105: new           #22                 // class java/io/IOException\n-       108: dup\n-       109: aload_2\n-       110: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       113: invokedynamic #42,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       118: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       121: athrow\n-       122: aload_0\n-       123: aload_2\n-       124: invokespecial #43                 // Method writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-       127: aload_0\n-       128: aload_2\n-       129: putfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-       132: aload_0\n-       133: lconst_0\n-       134: putfield      #44                 // Field written:J\n-       137: return\n+        76: new           #14                 // class java/lang/StringBuilder\n+        79: dup\n+        80: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        83: ldc           #44                 // String Header format:\n+        85: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        88: iload_3\n+        89: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        92: ldc           #45                 // String  does not match existing format:\n+        94: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        97: aload_0\n+        98: getfield      #21                 // Field entryFormat:S\n+       101: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       104: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       107: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       110: athrow\n+       111: aload_0\n+       112: getfield      #9                  // Field names:Ljava/util/HashMap;\n+       115: aload_2\n+       116: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       119: aload_2\n+       120: invokevirtual #47                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       123: ifnull        156\n+       126: new           #27                 // class java/io/IOException\n+       129: dup\n+       130: new           #14                 // class java/lang/StringBuilder\n+       133: dup\n+       134: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       137: ldc           #48                 // String duplicate entry:\n+       139: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       142: aload_2\n+       143: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       146: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       149: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       152: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       155: athrow\n+       156: aload_0\n+       157: aload_2\n+       158: invokespecial #49                 // Method writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+       161: aload_0\n+       162: aload_2\n+       163: putfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       166: aload_0\n+       167: lconst_0\n+       168: putfield      #50                 // Field written:J\n+       171: return\n       LineNumberTable:\n         line 221: 0\n         line 222: 7\n         line 225: 17\n         line 226: 22\n         line 227: 26\n         line 228: 33\n         line 230: 37\n         line 231: 48\n         line 234: 59\n         line 235: 64\n         line 236: 72\n-        line 239: 90\n-        line 240: 105\n-        line 243: 122\n-        line 244: 127\n-        line 245: 132\n-        line 246: 137\n+        line 239: 111\n+        line 240: 126\n+        line 243: 156\n+        line 244: 161\n+        line 245: 166\n+        line 246: 171\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     138     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n-            0     138     1 entry   Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-           22     116     2     e   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-           64      74     3 format   S\n+            0     172     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n+            0     172     1 entry   Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+           22     150     2     e   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+           64     108     3 format   S\n       StackMapTable: number_of_entries = 5\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry ]\n         frame_type = 21 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 30\n+          offset_delta = 51\n           locals = [ int ]\n-        frame_type = 31 /* same */\n+        frame_type = 44 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   private void writeHeader(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #38                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+         1: invokevirtual #43                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n          4: tableswitch   { // 1 to 8\n                        1: 52\n                        2: 78\n                        3: 150\n                        4: 104\n                        5: 150\n                        6: 150\n                        7: 150\n                        8: 130\n                  default: 150\n             }\n         52: aload_0\n         53: getfield      #12                 // Field out:Ljava/io/OutputStream;\n-        56: ldc           #45                 // String 070701\n-        58: invokestatic  #46                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-        61: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+        56: ldc           #51                 // String 070701\n+        58: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+        61: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n         64: aload_0\n         65: bipush        6\n-        67: invokevirtual #48                 // Method count:(I)V\n+        67: invokevirtual #54                 // Method count:(I)V\n         70: aload_0\n         71: aload_1\n-        72: invokespecial #49                 // Method writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-        75: goto          167\n+        72: invokespecial #55                 // Method writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+        75: goto          180\n         78: aload_0\n         79: getfield      #12                 // Field out:Ljava/io/OutputStream;\n-        82: ldc           #50                 // String 070702\n-        84: invokestatic  #46                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-        87: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+        82: ldc           #56                 // String 070702\n+        84: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+        87: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n         90: aload_0\n         91: bipush        6\n-        93: invokevirtual #48                 // Method count:(I)V\n+        93: invokevirtual #54                 // Method count:(I)V\n         96: aload_0\n         97: aload_1\n-        98: invokespecial #49                 // Method writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-       101: goto          167\n+        98: invokespecial #55                 // Method writeNewEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+       101: goto          180\n        104: aload_0\n        105: getfield      #12                 // Field out:Ljava/io/OutputStream;\n-       108: ldc           #51                 // String 070707\n-       110: invokestatic  #46                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-       113: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+       108: ldc           #57                 // String 070707\n+       110: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+       113: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n        116: aload_0\n        117: bipush        6\n-       119: invokevirtual #48                 // Method count:(I)V\n+       119: invokevirtual #54                 // Method count:(I)V\n        122: aload_0\n        123: aload_1\n-       124: invokespecial #52                 // Method writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n-       127: goto          167\n+       124: invokespecial #58                 // Method writeOldAsciiEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+       127: goto          180\n        130: iconst_1\n        131: istore_2\n        132: aload_0\n-       133: ldc2_w        #53                 // long 29127l\n+       133: ldc2_w        #59                 // long 29127l\n        136: iconst_2\n        137: iconst_1\n-       138: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       138: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        141: aload_0\n        142: aload_1\n        143: iconst_1\n-       144: invokespecial #56                 // Method writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n-       147: goto          167\n-       150: new           #22                 // class java/io/IOException\n+       144: invokespecial #62                 // Method writeOldBinaryEntry:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n+       147: goto          180\n+       150: new           #27                 // class java/io/IOException\n        153: dup\n-       154: aload_1\n-       155: invokevirtual #38                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n-       158: invokedynamic #57,  0             // InvokeDynamic #3:makeConcatWithConstants:(S)Ljava/lang/String;\n-       163: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       166: athrow\n-       167: return\n+       154: new           #14                 // class java/lang/StringBuilder\n+       157: dup\n+       158: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       161: ldc           #63                 // String unknown format\n+       163: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       166: aload_1\n+       167: invokevirtual #43                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+       170: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       173: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       176: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       179: athrow\n+       180: return\n       LineNumberTable:\n         line 249: 0\n         line 251: 52\n         line 252: 64\n         line 253: 70\n         line 254: 75\n         line 256: 78\n@@ -873,45 +885,45 @@\n         line 263: 122\n         line 264: 127\n         line 266: 130\n         line 267: 132\n         line 268: 141\n         line 269: 147\n         line 271: 150\n-        line 273: 167\n+        line 273: 180\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           132      18     2 swapHalfWord   Z\n-            0     168     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n-            0     168     1     e   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+            0     181     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n+            0     181     1     e   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n       StackMapTable: number_of_entries = 6\n         frame_type = 52 /* same */\n         frame_type = 25 /* same */\n         frame_type = 25 /* same */\n         frame_type = 25 /* same */\n         frame_type = 19 /* same */\n-        frame_type = 16 /* same */\n+        frame_type = 29 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   private void writeNewEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=9, locals=6, args_size=2\n          0: aload_1\n-         1: invokevirtual #58                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n+         1: invokevirtual #64                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n          4: lstore_2\n          5: aload_1\n-         6: invokevirtual #59                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n+         6: invokevirtual #65                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMin:()J\n          9: lstore        4\n-        11: ldc           #60                 // String TRAILER!!!\n+        11: ldc           #66                 // String TRAILER!!!\n         13: aload_1\n-        14: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-        17: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        14: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+        17: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         20: ifeq          31\n         23: lconst_0\n         24: dup2\n         25: lstore        4\n         27: lstore_2\n         28: goto          97\n         31: lload_2\n@@ -920,130 +932,130 @@\n         34: ifne          76\n         37: lload         4\n         39: lconst_0\n         40: lcmp\n         41: ifne          76\n         44: aload_0\n         45: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n-        48: ldc2_w        #32                 // long -1l\n+        48: ldc2_w        #37                 // long -1l\n         51: land\n         52: lstore_2\n         53: aload_0\n         54: dup\n         55: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         58: dup2_x1\n         59: lconst_1\n         60: ladd\n         61: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         64: bipush        32\n         66: lshr\n-        67: ldc2_w        #32                 // long -1l\n+        67: ldc2_w        #37                 // long -1l\n         70: land\n         71: lstore        4\n         73: goto          97\n         76: aload_0\n         77: aload_0\n         78: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         81: lload_2\n-        82: ldc2_w        #62                 // long 4294967296l\n+        82: ldc2_w        #68                 // long 4294967296l\n         85: lload         4\n         87: lmul\n         88: ladd\n-        89: invokestatic  #64                 // Method java/lang/Math.max:(JJ)J\n+        89: invokestatic  #70                 // Method java/lang/Math.max:(JJ)J\n         92: lconst_1\n         93: ladd\n         94: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         97: aload_0\n         98: lload_2\n         99: bipush        8\n        101: bipush        16\n-       103: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       103: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        106: aload_0\n        107: aload_1\n-       108: invokevirtual #66                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n+       108: invokevirtual #72                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n        111: bipush        8\n        113: bipush        16\n-       115: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       115: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        118: aload_0\n        119: aload_1\n-       120: invokevirtual #67                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n+       120: invokevirtual #73                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n        123: bipush        8\n        125: bipush        16\n-       127: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       127: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        130: aload_0\n        131: aload_1\n-       132: invokevirtual #68                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n+       132: invokevirtual #74                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n        135: bipush        8\n        137: bipush        16\n-       139: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       139: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        142: aload_0\n        143: aload_1\n-       144: invokevirtual #69                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n+       144: invokevirtual #75                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n        147: bipush        8\n        149: bipush        16\n-       151: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       151: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        154: aload_0\n        155: aload_1\n-       156: invokevirtual #31                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+       156: invokevirtual #36                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n        159: bipush        8\n        161: bipush        16\n-       163: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       163: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        166: aload_0\n        167: aload_1\n-       168: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+       168: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n        171: bipush        8\n        173: bipush        16\n-       175: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       175: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        178: aload_0\n        179: aload_1\n-       180: invokevirtual #71                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n+       180: invokevirtual #77                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDeviceMaj:()J\n        183: bipush        8\n        185: bipush        16\n-       187: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       187: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        190: aload_0\n        191: lload         4\n        193: bipush        8\n        195: bipush        16\n-       197: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       197: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        200: aload_0\n        201: aload_1\n-       202: invokevirtual #72                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n+       202: invokevirtual #78                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMaj:()J\n        205: bipush        8\n        207: bipush        16\n-       209: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       209: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        212: aload_0\n        213: aload_1\n-       214: invokevirtual #73                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n+       214: invokevirtual #79                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDeviceMin:()J\n        217: bipush        8\n        219: bipush        16\n-       221: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       221: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        224: aload_0\n        225: aload_1\n-       226: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       229: invokevirtual #74                 // Method java/lang/String.length:()I\n+       226: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       229: invokevirtual #80                 // Method java/lang/String.length:()I\n        232: i2l\n        233: lconst_1\n        234: ladd\n        235: bipush        8\n        237: bipush        16\n-       239: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       239: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        242: aload_0\n        243: aload_1\n-       244: invokevirtual #75                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n+       244: invokevirtual #81                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n        247: bipush        8\n        249: bipush        16\n-       251: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       251: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        254: aload_0\n        255: aload_1\n-       256: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       259: invokespecial #76                 // Method writeCString:(Ljava/lang/String;)V\n+       256: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       259: invokespecial #82                 // Method writeCString:(Ljava/lang/String;)V\n        262: aload_0\n        263: aload_1\n-       264: invokevirtual #77                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n-       267: invokespecial #78                 // Method pad:(I)V\n+       264: invokevirtual #83                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n+       267: invokespecial #84                 // Method pad:(I)V\n        270: return\n       LineNumberTable:\n         line 276: 0\n         line 277: 5\n         line 278: 11\n         line 279: 23\n         line 281: 31\n@@ -1084,23 +1096,23 @@\n \n   private void writeOldAsciiEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=9, locals=6, args_size=2\n          0: aload_1\n-         1: invokevirtual #58                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n+         1: invokevirtual #64                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n          4: lstore_2\n          5: aload_1\n-         6: invokevirtual #79                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n+         6: invokevirtual #85                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n          9: lstore        4\n-        11: ldc           #60                 // String TRAILER!!!\n+        11: ldc           #66                 // String TRAILER!!!\n         13: aload_1\n-        14: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-        17: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        14: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+        17: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         20: ifeq          31\n         23: lconst_0\n         24: dup2\n         25: lstore        4\n         27: lstore_2\n         28: goto          97\n         31: lload_2\n@@ -1109,108 +1121,108 @@\n         34: ifne          76\n         37: lload         4\n         39: lconst_0\n         40: lcmp\n         41: ifne          76\n         44: aload_0\n         45: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n-        48: ldc2_w        #80                 // long 262143l\n+        48: ldc2_w        #86                 // long 262143l\n         51: land\n         52: lstore_2\n         53: aload_0\n         54: dup\n         55: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         58: dup2_x1\n         59: lconst_1\n         60: ladd\n         61: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         64: bipush        18\n         66: lshr\n-        67: ldc2_w        #80                 // long 262143l\n+        67: ldc2_w        #86                 // long 262143l\n         70: land\n         71: lstore        4\n         73: goto          97\n         76: aload_0\n         77: aload_0\n         78: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         81: lload_2\n-        82: ldc2_w        #82                 // long 262144l\n+        82: ldc2_w        #88                 // long 262144l\n         85: lload         4\n         87: lmul\n         88: ladd\n-        89: invokestatic  #64                 // Method java/lang/Math.max:(JJ)J\n+        89: invokestatic  #70                 // Method java/lang/Math.max:(JJ)J\n         92: lconst_1\n         93: ladd\n         94: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         97: aload_0\n         98: lload         4\n        100: bipush        6\n        102: bipush        8\n-       104: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       104: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        107: aload_0\n        108: lload_2\n        109: bipush        6\n        111: bipush        8\n-       113: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       113: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        116: aload_0\n        117: aload_1\n-       118: invokevirtual #66                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n+       118: invokevirtual #72                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n        121: bipush        6\n        123: bipush        8\n-       125: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       125: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        128: aload_0\n        129: aload_1\n-       130: invokevirtual #67                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n+       130: invokevirtual #73                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n        133: bipush        6\n        135: bipush        8\n-       137: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       137: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        140: aload_0\n        141: aload_1\n-       142: invokevirtual #68                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n+       142: invokevirtual #74                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n        145: bipush        6\n        147: bipush        8\n-       149: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       149: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        152: aload_0\n        153: aload_1\n-       154: invokevirtual #69                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n+       154: invokevirtual #75                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n        157: bipush        6\n        159: bipush        8\n-       161: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       161: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        164: aload_0\n        165: aload_1\n-       166: invokevirtual #84                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n+       166: invokevirtual #90                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n        169: bipush        6\n        171: bipush        8\n-       173: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       173: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        176: aload_0\n        177: aload_1\n-       178: invokevirtual #31                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+       178: invokevirtual #36                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n        181: bipush        11\n        183: bipush        8\n-       185: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       185: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        188: aload_0\n        189: aload_1\n-       190: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       193: invokevirtual #74                 // Method java/lang/String.length:()I\n+       190: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       193: invokevirtual #80                 // Method java/lang/String.length:()I\n        196: i2l\n        197: lconst_1\n        198: ladd\n        199: bipush        6\n        201: bipush        8\n-       203: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       203: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        206: aload_0\n        207: aload_1\n-       208: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+       208: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n        211: bipush        11\n        213: bipush        8\n-       215: invokespecial #65                 // Method writeAsciiLong:(JII)V\n+       215: invokespecial #71                 // Method writeAsciiLong:(JII)V\n        218: aload_0\n        219: aload_1\n-       220: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       223: invokespecial #76                 // Method writeCString:(Ljava/lang/String;)V\n+       220: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       223: invokespecial #82                 // Method writeCString:(Ljava/lang/String;)V\n        226: return\n       LineNumberTable:\n         line 310: 0\n         line 311: 5\n         line 312: 11\n         line 313: 23\n         line 315: 31\n@@ -1247,23 +1259,23 @@\n \n   private void writeOldBinaryEntry(org.apache.commons.compress.archivers.cpio.CpioArchiveEntry, boolean) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=9, locals=7, args_size=3\n          0: aload_1\n-         1: invokevirtual #58                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n+         1: invokevirtual #64                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getInode:()J\n          4: lstore_3\n          5: aload_1\n-         6: invokevirtual #79                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n+         6: invokevirtual #85                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDevice:()J\n          9: lstore        5\n-        11: ldc           #60                 // String TRAILER!!!\n+        11: ldc           #66                 // String TRAILER!!!\n         13: aload_1\n-        14: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-        17: invokevirtual #61                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        14: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+        17: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         20: ifeq          31\n         23: lconst_0\n         24: dup2\n         25: lstore        5\n         27: lstore_3\n         28: goto          97\n         31: lload_3\n@@ -1272,112 +1284,112 @@\n         34: ifne          76\n         37: lload         5\n         39: lconst_0\n         40: lcmp\n         41: ifne          76\n         44: aload_0\n         45: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n-        48: ldc2_w        #85                 // long 65535l\n+        48: ldc2_w        #91                 // long 65535l\n         51: land\n         52: lstore_3\n         53: aload_0\n         54: dup\n         55: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         58: dup2_x1\n         59: lconst_1\n         60: ladd\n         61: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         64: bipush        16\n         66: lshr\n-        67: ldc2_w        #85                 // long 65535l\n+        67: ldc2_w        #91                 // long 65535l\n         70: land\n         71: lstore        5\n         73: goto          97\n         76: aload_0\n         77: aload_0\n         78: getfield      #11                 // Field nextArtificalDeviceAndInode:J\n         81: lload_3\n-        82: ldc2_w        #87                 // long 65536l\n+        82: ldc2_w        #93                 // long 65536l\n         85: lload         5\n         87: lmul\n         88: ladd\n-        89: invokestatic  #64                 // Method java/lang/Math.max:(JJ)J\n+        89: invokestatic  #70                 // Method java/lang/Math.max:(JJ)J\n         92: lconst_1\n         93: ladd\n         94: putfield      #11                 // Field nextArtificalDeviceAndInode:J\n         97: aload_0\n         98: lload         5\n        100: iconst_2\n        101: iload_2\n-       102: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       102: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        105: aload_0\n        106: lload_3\n        107: iconst_2\n        108: iload_2\n-       109: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       109: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        112: aload_0\n        113: aload_1\n-       114: invokevirtual #66                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n+       114: invokevirtual #72                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getMode:()J\n        117: iconst_2\n        118: iload_2\n-       119: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       119: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        122: aload_0\n        123: aload_1\n-       124: invokevirtual #67                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n+       124: invokevirtual #73                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getUID:()J\n        127: iconst_2\n        128: iload_2\n-       129: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       129: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        132: aload_0\n        133: aload_1\n-       134: invokevirtual #68                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n+       134: invokevirtual #74                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getGID:()J\n        137: iconst_2\n        138: iload_2\n-       139: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       139: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        142: aload_0\n        143: aload_1\n-       144: invokevirtual #69                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n+       144: invokevirtual #75                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getNumberOfLinks:()J\n        147: iconst_2\n        148: iload_2\n-       149: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       149: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        152: aload_0\n        153: aload_1\n-       154: invokevirtual #84                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n+       154: invokevirtual #90                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getRemoteDevice:()J\n        157: iconst_2\n        158: iload_2\n-       159: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       159: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        162: aload_0\n        163: aload_1\n-       164: invokevirtual #31                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+       164: invokevirtual #36                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n        167: iconst_4\n        168: iload_2\n-       169: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       169: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        172: aload_0\n        173: aload_1\n-       174: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       177: invokevirtual #74                 // Method java/lang/String.length:()I\n+       174: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       177: invokevirtual #80                 // Method java/lang/String.length:()I\n        180: i2l\n        181: lconst_1\n        182: ladd\n        183: iconst_2\n        184: iload_2\n-       185: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       185: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        188: aload_0\n        189: aload_1\n-       190: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+       190: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n        193: iconst_4\n        194: iload_2\n-       195: invokespecial #55                 // Method writeBinaryLong:(JIZ)V\n+       195: invokespecial #61                 // Method writeBinaryLong:(JIZ)V\n        198: aload_0\n        199: aload_1\n-       200: invokevirtual #40                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-       203: invokespecial #76                 // Method writeCString:(Ljava/lang/String;)V\n+       200: invokevirtual #46                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+       203: invokespecial #82                 // Method writeCString:(Ljava/lang/String;)V\n        206: aload_0\n        207: aload_1\n-       208: invokevirtual #77                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n-       211: invokespecial #78                 // Method pad:(I)V\n+       208: invokevirtual #83                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n+       211: invokespecial #84                 // Method pad:(I)V\n        214: return\n       LineNumberTable:\n         line 340: 0\n         line 341: 5\n         line 342: 11\n         line 343: 23\n         line 345: 31\n@@ -1414,173 +1426,185 @@\n     Exceptions:\n       throws java.io.IOException\n \n   public void closeArchiveEntry() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=6, locals=1, args_size=1\n+      stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field finished:Z\n+         1: getfield      #30                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #22                 // class java/io/IOException\n+         7: new           #27                 // class java/io/IOException\n         10: dup\n-        11: ldc           #26                 // String Stream has already been finished\n-        13: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #31                 // String Stream has already been finished\n+        13: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokespecial #28                 // Method ensureOpen:()V\n+        18: invokespecial #33                 // Method ensureOpen:()V\n         21: aload_0\n-        22: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        22: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         25: ifnonnull     38\n-        28: new           #22                 // class java/io/IOException\n+        28: new           #27                 // class java/io/IOException\n         31: dup\n-        32: ldc           #89                 // String Trying to close non-existent entry\n-        34: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #95                 // String Trying to close non-existent entry\n+        34: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n-        39: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        42: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+        39: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        42: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n         45: aload_0\n-        46: getfield      #44                 // Field written:J\n+        46: getfield      #50                 // Field written:J\n         49: lcmp\n-        50: ifeq          77\n-        53: new           #22                 // class java/io/IOException\n+        50: ifeq          103\n+        53: new           #27                 // class java/io/IOException\n         56: dup\n-        57: aload_0\n-        58: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        61: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n-        64: aload_0\n-        65: getfield      #44                 // Field written:J\n-        68: invokedynamic #90,  0             // InvokeDynamic #4:makeConcatWithConstants:(JJ)Ljava/lang/String;\n-        73: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        76: athrow\n-        77: aload_0\n-        78: aload_0\n-        79: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        82: invokevirtual #91                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n-        85: invokespecial #78                 // Method pad:(I)V\n-        88: aload_0\n-        89: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        92: invokevirtual #38                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n-        95: iconst_2\n-        96: if_icmpne     124\n-        99: aload_0\n-       100: getfield      #10                 // Field crc:J\n+        57: new           #14                 // class java/lang/StringBuilder\n+        60: dup\n+        61: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        64: ldc           #96                 // String invalid entry size (expected\n+        66: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        69: aload_0\n+        70: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        73: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+        76: invokevirtual #97                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        79: ldc           #98                 // String  but got\n+        81: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: aload_0\n+        85: getfield      #50                 // Field written:J\n+        88: invokevirtual #97                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        91: ldc           #99                 // String  bytes)\n+        93: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        96: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        99: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       102: athrow\n        103: aload_0\n-       104: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-       107: invokevirtual #75                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n-       110: lcmp\n-       111: ifeq          124\n-       114: new           #22                 // class java/io/IOException\n-       117: dup\n-       118: ldc           #92                 // String CRC Error\n-       120: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       123: athrow\n-       124: aload_0\n-       125: aconst_null\n-       126: putfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       104: aload_0\n+       105: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       108: invokevirtual #100                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n+       111: invokespecial #84                 // Method pad:(I)V\n+       114: aload_0\n+       115: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       118: invokevirtual #43                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+       121: iconst_2\n+       122: if_icmpne     150\n+       125: aload_0\n+       126: getfield      #10                 // Field crc:J\n        129: aload_0\n-       130: lconst_0\n-       131: putfield      #10                 // Field crc:J\n-       134: aload_0\n-       135: lconst_0\n-       136: putfield      #44                 // Field written:J\n-       139: return\n+       130: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       133: invokevirtual #81                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n+       136: lcmp\n+       137: ifeq          150\n+       140: new           #27                 // class java/io/IOException\n+       143: dup\n+       144: ldc           #101                // String CRC Error\n+       146: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       149: athrow\n+       150: aload_0\n+       151: aconst_null\n+       152: putfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       155: aload_0\n+       156: lconst_0\n+       157: putfield      #10                 // Field crc:J\n+       160: aload_0\n+       161: lconst_0\n+       162: putfield      #50                 // Field written:J\n+       165: return\n       LineNumberTable:\n         line 377: 0\n         line 378: 7\n         line 381: 17\n         line 383: 21\n         line 384: 28\n         line 387: 38\n         line 388: 53\n-        line 389: 61\n-        line 392: 77\n-        line 393: 88\n-        line 394: 107\n-        line 395: 114\n-        line 397: 124\n-        line 398: 129\n-        line 399: 134\n-        line 400: 139\n+        line 389: 73\n+        line 392: 103\n+        line 393: 114\n+        line 394: 133\n+        line 395: 140\n+        line 397: 150\n+        line 398: 155\n+        line 399: 160\n+        line 400: 165\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     140     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n+            0     166     0  this   Lorg/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream;\n       StackMapTable: number_of_entries = 4\n         frame_type = 17 /* same */\n         frame_type = 20 /* same */\n-        frame_type = 38 /* same */\n+        frame_type = 251 /* same_frame_extended */\n+          offset_delta = 64\n         frame_type = 46 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #28                 // Method ensureOpen:()V\n+         1: invokespecial #33                 // Method ensureOpen:()V\n          4: iload_2\n          5: iflt          20\n          8: iload_3\n          9: iflt          20\n         12: iload_2\n         13: aload_1\n         14: arraylength\n         15: iload_3\n         16: isub\n         17: if_icmple     28\n-        20: new           #93                 // class java/lang/IndexOutOfBoundsException\n+        20: new           #102                // class java/lang/IndexOutOfBoundsException\n         23: dup\n-        24: invokespecial #94                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        24: invokespecial #103                // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         27: athrow\n         28: iload_3\n         29: ifne          33\n         32: return\n         33: aload_0\n-        34: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        34: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         37: ifnonnull     50\n-        40: new           #22                 // class java/io/IOException\n+        40: new           #27                 // class java/io/IOException\n         43: dup\n-        44: ldc           #95                 // String no current CPIO entry\n-        46: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        44: ldc           #104                // String no current CPIO entry\n+        46: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         49: athrow\n         50: aload_0\n-        51: getfield      #44                 // Field written:J\n+        51: getfield      #50                 // Field written:J\n         54: iload_3\n         55: i2l\n         56: ladd\n         57: aload_0\n-        58: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        61: invokevirtual #70                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+        58: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        61: invokevirtual #76                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n         64: lcmp\n         65: ifle          78\n-        68: new           #22                 // class java/io/IOException\n+        68: new           #27                 // class java/io/IOException\n         71: dup\n-        72: ldc           #96                 // String attempt to write past end of STORED entry\n-        74: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        72: ldc           #105                // String attempt to write past end of STORED entry\n+        74: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         77: athrow\n         78: aload_0\n         79: getfield      #12                 // Field out:Ljava/io/OutputStream;\n         82: aload_1\n         83: iload_2\n         84: iload_3\n-        85: invokevirtual #97                 // Method java/io/OutputStream.write:([BII)V\n+        85: invokevirtual #106                // Method java/io/OutputStream.write:([BII)V\n         88: aload_0\n         89: dup\n-        90: getfield      #44                 // Field written:J\n+        90: getfield      #50                 // Field written:J\n         93: iload_3\n         94: i2l\n         95: ladd\n-        96: putfield      #44                 // Field written:J\n+        96: putfield      #50                 // Field written:J\n         99: aload_0\n-       100: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-       103: invokevirtual #38                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+       100: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+       103: invokevirtual #43                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n        106: iconst_2\n        107: if_icmpne     155\n        110: iconst_0\n        111: istore        4\n        113: iload         4\n        115: iload_3\n        116: if_icmpge     155\n@@ -1594,22 +1618,22 @@\n        131: iand\n        132: i2l\n        133: ladd\n        134: putfield      #10                 // Field crc:J\n        137: aload_0\n        138: dup\n        139: getfield      #10                 // Field crc:J\n-       142: ldc2_w        #98                 // long 4294967295l\n+       142: ldc2_w        #107                // long 4294967295l\n        145: land\n        146: putfield      #10                 // Field crc:J\n        149: iinc          4, 1\n        152: goto          113\n        155: aload_0\n        156: iload_3\n-       157: invokevirtual #48                 // Method count:(I)V\n+       157: invokevirtual #54                 // Method count:(I)V\n        160: return\n       LineNumberTable:\n         line 419: 0\n         line 420: 4\n         line 421: 20\n         line 422: 28\n         line 423: 32\n@@ -1649,71 +1673,71 @@\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #28                 // Method ensureOpen:()V\n+         1: invokespecial #33                 // Method ensureOpen:()V\n          4: aload_0\n-         5: getfield      #25                 // Field finished:Z\n+         5: getfield      #30                 // Field finished:Z\n          8: ifeq          21\n-        11: new           #22                 // class java/io/IOException\n+        11: new           #27                 // class java/io/IOException\n         14: dup\n-        15: ldc           #100                // String This archive has already been finished\n-        17: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        15: ldc           #109                // String This archive has already been finished\n+        17: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: aload_0\n-        22: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        22: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         25: ifnull        38\n-        28: new           #22                 // class java/io/IOException\n+        28: new           #27                 // class java/io/IOException\n         31: dup\n-        32: ldc           #101                // String This archive contains unclosed entries.\n-        34: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #110                // String This archive contains unclosed entries.\n+        34: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n-        39: new           #27                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+        39: new           #32                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n         42: dup\n         43: aload_0\n-        44: getfield      #16                 // Field entryFormat:S\n-        47: invokespecial #102                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n-        50: putfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        44: getfield      #21                 // Field entryFormat:S\n+        47: invokespecial #111                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n+        50: putfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         53: aload_0\n-        54: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        57: ldc           #60                 // String TRAILER!!!\n-        59: invokevirtual #103                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n+        54: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        57: ldc           #66                 // String TRAILER!!!\n+        59: invokevirtual #112                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n         62: aload_0\n-        63: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        63: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n         66: lconst_1\n-        67: invokevirtual #104                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n+        67: invokevirtual #113                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n         70: aload_0\n         71: aload_0\n-        72: getfield      #29                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-        75: invokespecial #43                 // Method writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n+        72: getfield      #34                 // Field entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+        75: invokespecial #49                 // Method writeHeader:(Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;)V\n         78: aload_0\n-        79: invokevirtual #30                 // Method closeArchiveEntry:()V\n+        79: invokevirtual #35                 // Method closeArchiveEntry:()V\n         82: aload_0\n-        83: invokevirtual #105                // Method getBytesWritten:()J\n+        83: invokevirtual #114                // Method getBytesWritten:()J\n         86: aload_0\n-        87: getfield      #17                 // Field blockSize:I\n+        87: getfield      #22                 // Field blockSize:I\n         90: i2l\n         91: lrem\n         92: l2i\n         93: istore_1\n         94: iload_1\n         95: ifeq          108\n         98: aload_0\n         99: aload_0\n-       100: getfield      #17                 // Field blockSize:I\n+       100: getfield      #22                 // Field blockSize:I\n        103: iload_1\n        104: isub\n-       105: invokespecial #78                 // Method pad:(I)V\n+       105: invokespecial #84                 // Method pad:(I)V\n        108: aload_0\n        109: iconst_1\n-       110: putfield      #25                 // Field finished:Z\n+       110: putfield      #30                 // Field finished:Z\n        113: return\n       LineNumberTable:\n         line 454: 0\n         line 455: 4\n         line 456: 11\n         line 459: 21\n         line 460: 28\n@@ -1742,24 +1766,24 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field finished:Z\n+         1: getfield      #30                 // Field finished:Z\n          4: ifne          11\n          7: aload_0\n-         8: invokevirtual #106                // Method finish:()V\n+         8: invokevirtual #115                // Method finish:()V\n         11: aload_0\n         12: getfield      #6                  // Field closed:Z\n         15: ifne          30\n         18: aload_0\n         19: getfield      #12                 // Field out:Ljava/io/OutputStream;\n-        22: invokevirtual #107                // Method java/io/OutputStream.close:()V\n+        22: invokevirtual #116                // Method java/io/OutputStream.close:()V\n         25: aload_0\n         26: iconst_1\n         27: putfield      #6                  // Field closed:Z\n         30: return\n       LineNumberTable:\n         line 485: 0\n         line 486: 7\n@@ -1785,18 +1809,18 @@\n          1: ifle          21\n          4: iload_1\n          5: newarray       byte\n          7: astore_2\n          8: aload_0\n          9: getfield      #12                 // Field out:Ljava/io/OutputStream;\n         12: aload_2\n-        13: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+        13: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n         16: aload_0\n         17: iload_1\n-        18: invokevirtual #48                 // Method count:(I)V\n+        18: invokevirtual #54                 // Method count:(I)V\n         21: return\n       LineNumberTable:\n         line 496: 0\n         line 497: 4\n         line 498: 8\n         line 499: 16\n         line 501: 21\n@@ -1814,24 +1838,24 @@\n     descriptor: (JIZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=4\n          0: lload_1\n          1: iload_3\n          2: iload         4\n-         4: invokestatic  #108                // Method org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n+         4: invokestatic  #117                // Method org/apache/commons/compress/archivers/cpio/CpioUtil.long2byteArray:(JIZ)[B\n          7: astore        5\n          9: aload_0\n         10: getfield      #12                 // Field out:Ljava/io/OutputStream;\n         13: aload         5\n-        15: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+        15: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n         18: aload_0\n         19: aload         5\n         21: arraylength\n-        22: invokevirtual #48                 // Method count:(I)V\n+        22: invokevirtual #54                 // Method count:(I)V\n         25: return\n       LineNumberTable:\n         line 505: 0\n         line 506: 9\n         line 507: 18\n         line 508: 25\n       LocalVariableTable:\n@@ -1845,84 +1869,84 @@\n       throws java.io.IOException\n \n   private void writeAsciiLong(long, int, int) throws java.io.IOException;\n     descriptor: (JII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=9, args_size=4\n-         0: new           #109                // class java/lang/StringBuilder\n+         0: new           #14                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore        5\n          9: iload         4\n         11: bipush        16\n         13: if_icmpne     29\n         16: aload         5\n         18: lload_1\n-        19: invokestatic  #111                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n-        22: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokestatic  #118                // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n+        22: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         25: pop\n         26: goto          59\n         29: iload         4\n         31: bipush        8\n         33: if_icmpne     49\n         36: aload         5\n         38: lload_1\n-        39: invokestatic  #113                // Method java/lang/Long.toOctalString:(J)Ljava/lang/String;\n-        42: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        39: invokestatic  #119                // Method java/lang/Long.toOctalString:(J)Ljava/lang/String;\n+        42: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: pop\n         46: goto          59\n         49: aload         5\n         51: lload_1\n-        52: invokestatic  #114                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-        55: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        52: invokestatic  #120                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+        55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: pop\n         59: aload         5\n-        61: invokevirtual #115                // Method java/lang/StringBuilder.length:()I\n+        61: invokevirtual #121                // Method java/lang/StringBuilder.length:()I\n         64: iload_3\n         65: if_icmpgt     112\n         68: iload_3\n         69: aload         5\n-        71: invokevirtual #115                // Method java/lang/StringBuilder.length:()I\n+        71: invokevirtual #121                // Method java/lang/StringBuilder.length:()I\n         74: isub\n         75: istore        7\n         77: iconst_0\n         78: istore        8\n         80: iload         8\n         82: iload         7\n         84: if_icmpge     102\n         87: aload         5\n         89: iconst_0\n-        90: ldc           #116                // String 0\n-        92: invokevirtual #117                // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n+        90: ldc           #122                // String 0\n+        92: invokevirtual #123                // Method java/lang/StringBuilder.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;\n         95: pop\n         96: iinc          8, 1\n         99: goto          80\n        102: aload         5\n-       104: invokevirtual #118                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        107: astore        6\n        109: goto          126\n        112: aload         5\n        114: aload         5\n-       116: invokevirtual #115                // Method java/lang/StringBuilder.length:()I\n+       116: invokevirtual #121                // Method java/lang/StringBuilder.length:()I\n        119: iload_3\n        120: isub\n-       121: invokevirtual #119                // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n+       121: invokevirtual #124                // Method java/lang/StringBuilder.substring:(I)Ljava/lang/String;\n        124: astore        6\n        126: aload         6\n-       128: invokestatic  #46                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+       128: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n        131: astore        7\n        133: aload_0\n        134: getfield      #12                 // Field out:Ljava/io/OutputStream;\n        137: aload         7\n-       139: invokevirtual #47                 // Method java/io/OutputStream.write:([B)V\n+       139: invokevirtual #53                 // Method java/io/OutputStream.write:([B)V\n        142: aload_0\n        143: aload         7\n        145: arraylength\n-       146: invokevirtual #48                 // Method count:(I)V\n+       146: invokevirtual #54                 // Method count:(I)V\n        149: return\n       LineNumberTable:\n         line 512: 0\n         line 514: 9\n         line 515: 16\n         line 516: 29\n         line 517: 36\n@@ -1972,41 +1996,41 @@\n \n   private void writeCString(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #20                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         1: getfield      #25                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n          4: aload_1\n-         5: invokeinterface #120,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+         5: invokeinterface #125,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n         10: astore_2\n         11: aload_2\n-        12: invokevirtual #121                // Method java/nio/ByteBuffer.limit:()I\n+        12: invokevirtual #126                // Method java/nio/ByteBuffer.limit:()I\n         15: aload_2\n-        16: invokevirtual #122                // Method java/nio/ByteBuffer.position:()I\n+        16: invokevirtual #127                // Method java/nio/ByteBuffer.position:()I\n         19: isub\n         20: istore_3\n         21: aload_0\n         22: getfield      #12                 // Field out:Ljava/io/OutputStream;\n         25: aload_2\n-        26: invokevirtual #123                // Method java/nio/ByteBuffer.array:()[B\n+        26: invokevirtual #128                // Method java/nio/ByteBuffer.array:()[B\n         29: aload_2\n-        30: invokevirtual #124                // Method java/nio/ByteBuffer.arrayOffset:()I\n+        30: invokevirtual #129                // Method java/nio/ByteBuffer.arrayOffset:()I\n         33: iload_3\n-        34: invokevirtual #97                 // Method java/io/OutputStream.write:([BII)V\n+        34: invokevirtual #106                // Method java/io/OutputStream.write:([BII)V\n         37: aload_0\n         38: getfield      #12                 // Field out:Ljava/io/OutputStream;\n         41: iconst_0\n-        42: invokevirtual #125                // Method java/io/OutputStream.write:(I)V\n+        42: invokevirtual #130                // Method java/io/OutputStream.write:(I)V\n         45: aload_0\n         46: iload_3\n         47: iconst_1\n         48: iadd\n-        49: invokevirtual #48                 // Method count:(I)V\n+        49: invokevirtual #54                 // Method count:(I)V\n         52: return\n       LineNumberTable:\n         line 542: 0\n         line 543: 11\n         line 544: 21\n         line 545: 37\n         line 546: 45\n@@ -2022,26 +2046,26 @@\n \n   public org.apache.commons.compress.archivers.ArchiveEntry createArchiveEntry(java.io.File, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #25                 // Field finished:Z\n+         1: getfield      #30                 // Field finished:Z\n          4: ifeq          17\n-         7: new           #22                 // class java/io/IOException\n+         7: new           #27                 // class java/io/IOException\n         10: dup\n-        11: ldc           #26                 // String Stream has already been finished\n-        13: invokespecial #24                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #31                 // String Stream has already been finished\n+        13: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n-        17: new           #27                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+        17: new           #32                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n         20: dup\n         21: aload_1\n         22: aload_2\n-        23: invokespecial #126                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        23: invokespecial #131                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n         26: areturn\n       LineNumberTable:\n         line 557: 0\n         line 558: 7\n         line 560: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2050,25 +2074,7 @@\n             0      27     2 entryName   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"CpioArchiveOutputStream.java\"\n-InnerClasses:\n-  public static final #426= #425 of #429; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #235 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #236 Unknown format: \\u0001\n-  1: #235 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #259 Header format: \\u0001 does not match existing format: \\u0001\n-  2: #235 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #263 duplicate entry: \\u0001\n-  3: #235 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #278 unknown format \\u0001\n-  4: #235 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #302 invalid entry size (expected \\u0001 but got \\u0001 bytes)\n"}]}
