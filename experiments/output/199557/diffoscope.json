{"diffoscope-json-version": 1, "source1": "first/ANEWARRAY.class", "source2": "second/ANEWARRAY.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,33 +4,33 @@\n import org.apache.bcel.ExceptionConst;\n \n public class ANEWARRAY extends CPInstruction implements LoadClass, AllocationInstruction, ExceptionThrower, StackConsumer, StackProducer\n {\n     ANEWARRAY() {\n     }\n     \n-    public ANEWARRAY(final int index) {\n-        super((short)189, index);\n+    public ANEWARRAY(final int n) {\n+        super((short)189, n);\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitLoadClass((LoadClass)this);\n-        v.visitAllocationInstruction((AllocationInstruction)this);\n-        v.visitExceptionThrower((ExceptionThrower)this);\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitCPInstruction((CPInstruction)this);\n-        v.visitANEWARRAY(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitLoadClass((LoadClass)this);\n+        visitor.visitAllocationInstruction((AllocationInstruction)this);\n+        visitor.visitExceptionThrower((ExceptionThrower)this);\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitCPInstruction((CPInstruction)this);\n+        visitor.visitANEWARRAY(this);\n     }\n     \n     public Class<?>[] getExceptions() {\n         return ExceptionConst.createExceptions(ExceptionConst.EXCS.EXCS_CLASS_AND_INTERFACE_RESOLUTION, new Class[] { ExceptionConst.NEGATIVE_ARRAY_SIZE_EXCEPTION });\n     }\n     \n-    public ObjectType getLoadClassType(final ConstantPoolGen cpg) {\n-        Type t = this.getType(cpg);\n-        if (t instanceof ArrayType) {\n-            t = ((ArrayType)t).getBasicType();\n+    public ObjectType getLoadClassType(final ConstantPoolGen constantPoolGen) {\n+        Type type = this.getType(constantPoolGen);\n+        if (type instanceof ArrayType) {\n+            type = ((ArrayType)type).getBasicType();\n         }\n-        return (t instanceof ObjectType) ? ((ObjectType)t) : null;\n+        return (type instanceof ObjectType) ? ((ObjectType)type) : null;\n     }\n }\n"}]}
