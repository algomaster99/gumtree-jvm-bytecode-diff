{"diffoscope-json-version": 1, "source1": "first/CharRange.class", "source2": "second/CharRange.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,118 +1,118 @@\n-  SHA-256 checksum 4bc31f2a898eae15b6220fe6447abfde99d5b68af6125015620c85b6f8d3e9bf\n+  SHA-256 checksum 8c75dc8f95ab00694be06dd046ead32a440a7d4e3e3ecf881f182433d4317c5b\n   Compiled from \"CharRange.java\"\n final class org.apache.commons.lang3.CharRange extends java.lang.Object implements java.lang.Iterable<java.lang.Character>, java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #5                          // org/apache/commons/lang3/CharRange\n-  super_class: #8                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/CharRange\n+  super_class: #15                        // java/lang/Object\n   interfaces: 2, fields: 5, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #5.#73        // org/apache/commons/lang3/CharRange.end:C\n-    #2 = Fieldref           #5.#74        // org/apache/commons/lang3/CharRange.start:C\n-    #3 = Fieldref           #5.#75        // org/apache/commons/lang3/CharRange.negated:Z\n-    #4 = Methodref          #8.#76        // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #77           // org/apache/commons/lang3/CharRange\n-    #6 = Methodref          #5.#78        // org/apache/commons/lang3/CharRange.\"<init>\":(CCZ)V\n-    #7 = String             #79           // The Range must not be null\n-    #8 = Class              #80           // java/lang/Object\n-    #9 = Methodref          #81.#82       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #10 = Class              #83           // java/lang/Character\n-   #11 = Integer            65535\n-   #12 = Fieldref           #5.#84        // org/apache/commons/lang3/CharRange.iToString:Ljava/lang/String;\n-   #13 = Class              #85           // java/lang/StringBuilder\n-   #14 = Methodref          #13.#86       // java/lang/StringBuilder.\"<init>\":(I)V\n-   #15 = Methodref          #5.#87        // org/apache/commons/lang3/CharRange.isNegated:()Z\n-   #16 = Methodref          #13.#88       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#89       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Class              #90           // org/apache/commons/lang3/CharRange$CharacterIterator\n-   #19 = Methodref          #18.#91       // org/apache/commons/lang3/CharRange$CharacterIterator.\"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n-   #20 = Class              #92           // java/lang/Iterable\n-   #21 = Class              #93           // java/io/Serializable\n-   #22 = Class              #94           // org/apache/commons/lang3/CharRange$1\n-   #23 = Utf8               InnerClasses\n-   #24 = Utf8               CharacterIterator\n-   #25 = Utf8               serialVersionUID\n-   #26 = Utf8               J\n-   #27 = Utf8               ConstantValue\n-   #28 = Long               8270183163158333422l\n-   #30 = Utf8               start\n-   #31 = Utf8               C\n-   #32 = Utf8               end\n-   #33 = Utf8               negated\n-   #34 = Utf8               Z\n-   #35 = Utf8               iToString\n-   #36 = Utf8               Ljava/lang/String;\n-   #37 = Utf8               <init>\n-   #38 = Utf8               (CCZ)V\n-   #39 = Utf8               Code\n-   #40 = Utf8               LineNumberTable\n-   #41 = Utf8               StackMapTable\n-   #42 = Utf8               is\n-   #43 = Utf8               (C)Lorg/apache/commons/lang3/CharRange;\n-   #44 = Utf8               isNot\n-   #45 = Utf8               isIn\n-   #46 = Utf8               (CC)Lorg/apache/commons/lang3/CharRange;\n-   #47 = Utf8               isNotIn\n-   #48 = Utf8               getStart\n-   #49 = Utf8               ()C\n-   #50 = Utf8               getEnd\n-   #51 = Utf8               isNegated\n-   #52 = Utf8               ()Z\n-   #53 = Utf8               contains\n-   #54 = Utf8               (C)Z\n-   #55 = Utf8               (Lorg/apache/commons/lang3/CharRange;)Z\n-   #56 = Utf8               equals\n-   #57 = Utf8               (Ljava/lang/Object;)Z\n-   #58 = Utf8               hashCode\n-   #59 = Utf8               ()I\n-   #60 = Utf8               toString\n-   #61 = Utf8               ()Ljava/lang/String;\n-   #62 = Utf8               iterator\n-   #63 = Utf8               ()Ljava/util/Iterator;\n-   #64 = Utf8               Signature\n-   #65 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Character;>;\n-   #66 = Utf8               access$100\n-   #67 = Utf8               access$200\n-   #68 = Utf8               (Lorg/apache/commons/lang3/CharRange;)C\n-   #69 = Utf8               access$300\n-   #70 = Utf8               Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               CharRange.java\n-   #73 = NameAndType        #32:#31       // end:C\n-   #74 = NameAndType        #30:#31       // start:C\n-   #75 = NameAndType        #33:#34       // negated:Z\n-   #76 = NameAndType        #37:#95       // \"<init>\":()V\n-   #77 = Utf8               org/apache/commons/lang3/CharRange\n-   #78 = NameAndType        #37:#38       // \"<init>\":(CCZ)V\n-   #79 = Utf8               The Range must not be null\n-   #80 = Utf8               java/lang/Object\n-   #81 = Class              #96           // org/apache/commons/lang3/Validate\n-   #82 = NameAndType        #97:#98       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #83 = Utf8               java/lang/Character\n-   #84 = NameAndType        #35:#36       // iToString:Ljava/lang/String;\n-   #85 = Utf8               java/lang/StringBuilder\n-   #86 = NameAndType        #37:#99       // \"<init>\":(I)V\n-   #87 = NameAndType        #51:#52       // isNegated:()Z\n-   #88 = NameAndType        #100:#101     // append:(C)Ljava/lang/StringBuilder;\n-   #89 = NameAndType        #60:#61       // toString:()Ljava/lang/String;\n-   #90 = Utf8               org/apache/commons/lang3/CharRange$CharacterIterator\n-   #91 = NameAndType        #37:#102      // \"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n-   #92 = Utf8               java/lang/Iterable\n-   #93 = Utf8               java/io/Serializable\n-   #94 = Utf8               org/apache/commons/lang3/CharRange$1\n-   #95 = Utf8               ()V\n-   #96 = Utf8               org/apache/commons/lang3/Validate\n-   #97 = Utf8               isTrue\n-   #98 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #99 = Utf8               (I)V\n-  #100 = Utf8               append\n-  #101 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #102 = Utf8               (Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n+    #1 = Fieldref           #2.#3         // org/apache/commons/lang3/CharRange.end:C\n+    #2 = Class              #4            // org/apache/commons/lang3/CharRange\n+    #3 = NameAndType        #5:#6         // end:C\n+    #4 = Utf8               org/apache/commons/lang3/CharRange\n+    #5 = Utf8               end\n+    #6 = Utf8               C\n+    #7 = Fieldref           #2.#8         // org/apache/commons/lang3/CharRange.start:C\n+    #8 = NameAndType        #9:#6         // start:C\n+    #9 = Utf8               start\n+   #10 = Fieldref           #2.#11        // org/apache/commons/lang3/CharRange.negated:Z\n+   #11 = NameAndType        #12:#13       // negated:Z\n+   #12 = Utf8               negated\n+   #13 = Utf8               Z\n+   #14 = Methodref          #15.#16       // java/lang/Object.\"<init>\":()V\n+   #15 = Class              #17           // java/lang/Object\n+   #16 = NameAndType        #18:#19       // \"<init>\":()V\n+   #17 = Utf8               java/lang/Object\n+   #18 = Utf8               <init>\n+   #19 = Utf8               ()V\n+   #20 = Methodref          #2.#21        // org/apache/commons/lang3/CharRange.\"<init>\":(CCZ)V\n+   #21 = NameAndType        #18:#22       // \"<init>\":(CCZ)V\n+   #22 = Utf8               (CCZ)V\n+   #23 = String             #24           // The Range must not be null\n+   #24 = Utf8               The Range must not be null\n+   #25 = Methodref          #26.#27       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #26 = Class              #28           // org/apache/commons/lang3/Validate\n+   #27 = NameAndType        #29:#30       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #28 = Utf8               org/apache/commons/lang3/Validate\n+   #29 = Utf8               isTrue\n+   #30 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #31 = Class              #32           // java/lang/Character\n+   #32 = Utf8               java/lang/Character\n+   #33 = Integer            65535\n+   #34 = Fieldref           #2.#35        // org/apache/commons/lang3/CharRange.iToString:Ljava/lang/String;\n+   #35 = NameAndType        #36:#37       // iToString:Ljava/lang/String;\n+   #36 = Utf8               iToString\n+   #37 = Utf8               Ljava/lang/String;\n+   #38 = Class              #39           // java/lang/StringBuilder\n+   #39 = Utf8               java/lang/StringBuilder\n+   #40 = Methodref          #38.#41       // java/lang/StringBuilder.\"<init>\":(I)V\n+   #41 = NameAndType        #18:#42       // \"<init>\":(I)V\n+   #42 = Utf8               (I)V\n+   #43 = Methodref          #2.#44        // org/apache/commons/lang3/CharRange.isNegated:()Z\n+   #44 = NameAndType        #45:#46       // isNegated:()Z\n+   #45 = Utf8               isNegated\n+   #46 = Utf8               ()Z\n+   #47 = Methodref          #38.#48       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #48 = NameAndType        #49:#50       // append:(C)Ljava/lang/StringBuilder;\n+   #49 = Utf8               append\n+   #50 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #38.#52       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = NameAndType        #53:#54       // toString:()Ljava/lang/String;\n+   #53 = Utf8               toString\n+   #54 = Utf8               ()Ljava/lang/String;\n+   #55 = Class              #56           // org/apache/commons/lang3/CharRange$CharacterIterator\n+   #56 = Utf8               org/apache/commons/lang3/CharRange$CharacterIterator\n+   #57 = Methodref          #55.#58       // org/apache/commons/lang3/CharRange$CharacterIterator.\"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n+   #58 = NameAndType        #18:#59       // \"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n+   #59 = Utf8               (Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n+   #60 = Class              #61           // java/lang/Iterable\n+   #61 = Utf8               java/lang/Iterable\n+   #62 = Class              #63           // java/io/Serializable\n+   #63 = Utf8               java/io/Serializable\n+   #64 = Utf8               serialVersionUID\n+   #65 = Utf8               J\n+   #66 = Utf8               ConstantValue\n+   #67 = Long               8270183163158333422l\n+   #69 = Utf8               Code\n+   #70 = Utf8               LineNumberTable\n+   #71 = Utf8               StackMapTable\n+   #72 = Utf8               is\n+   #73 = Utf8               (C)Lorg/apache/commons/lang3/CharRange;\n+   #74 = Utf8               isNot\n+   #75 = Utf8               isIn\n+   #76 = Utf8               (CC)Lorg/apache/commons/lang3/CharRange;\n+   #77 = Utf8               isNotIn\n+   #78 = Utf8               getStart\n+   #79 = Utf8               ()C\n+   #80 = Utf8               getEnd\n+   #81 = Utf8               contains\n+   #82 = Utf8               (C)Z\n+   #83 = Utf8               (Lorg/apache/commons/lang3/CharRange;)Z\n+   #84 = Utf8               equals\n+   #85 = Utf8               (Ljava/lang/Object;)Z\n+   #86 = Utf8               hashCode\n+   #87 = Utf8               ()I\n+   #88 = Utf8               iterator\n+   #89 = Utf8               ()Ljava/util/Iterator;\n+   #90 = Utf8               Signature\n+   #91 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Character;>;\n+   #92 = Utf8               access$100\n+   #93 = Utf8               access$200\n+   #94 = Utf8               (Lorg/apache/commons/lang3/CharRange;)C\n+   #95 = Utf8               access$300\n+   #96 = Utf8               Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;\n+   #97 = Utf8               SourceFile\n+   #98 = Utf8               CharRange.java\n+   #99 = Utf8               InnerClasses\n+  #100 = Utf8               CharacterIterator\n+  #101 = Class              #102          // org/apache/commons/lang3/CharRange$1\n+  #102 = Utf8               org/apache/commons/lang3/CharRange$1\n {\n   private static final long serialVersionUID = 8270183163158333422l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 8270183163158333422l\n \n   private final char start;\n@@ -133,33 +133,33 @@\n \n   private org.apache.commons.lang3.CharRange(char, char, boolean);\n     descriptor: (CCZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: iload_1\n          5: iload_2\n          6: if_icmple     17\n          9: iload_1\n         10: istore        4\n         12: iload_2\n         13: istore_1\n         14: iload         4\n         16: istore_2\n         17: aload_0\n         18: iload_1\n-        19: putfield      #2                  // Field start:C\n+        19: putfield      #7                  // Field start:C\n         22: aload_0\n         23: iload_2\n         24: putfield      #1                  // Field end:C\n         27: aload_0\n         28: iload_3\n-        29: putfield      #3                  // Field negated:Z\n+        29: putfield      #10                 // Field negated:Z\n         32: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 9\n         line 70: 12\n         line 71: 14\n@@ -174,76 +174,76 @@\n           stack = []\n \n   public static org.apache.commons.lang3.CharRange is(char);\n     descriptor: (C)Lorg/apache/commons/lang3/CharRange;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #5                  // class org/apache/commons/lang3/CharRange\n+         0: new           #2                  // class org/apache/commons/lang3/CharRange\n          3: dup\n          4: iload_0\n          5: iload_0\n          6: iconst_0\n-         7: invokespecial #6                  // Method \"<init>\":(CCZ)V\n+         7: invokespecial #20                 // Method \"<init>\":(CCZ)V\n         10: areturn\n       LineNumberTable:\n         line 88: 0\n \n   public static org.apache.commons.lang3.CharRange isNot(char);\n     descriptor: (C)Lorg/apache/commons/lang3/CharRange;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #5                  // class org/apache/commons/lang3/CharRange\n+         0: new           #2                  // class org/apache/commons/lang3/CharRange\n          3: dup\n          4: iload_0\n          5: iload_0\n          6: iconst_1\n-         7: invokespecial #6                  // Method \"<init>\":(CCZ)V\n+         7: invokespecial #20                 // Method \"<init>\":(CCZ)V\n         10: areturn\n       LineNumberTable:\n         line 100: 0\n \n   public static org.apache.commons.lang3.CharRange isIn(char, char);\n     descriptor: (CC)Lorg/apache/commons/lang3/CharRange;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n-         0: new           #5                  // class org/apache/commons/lang3/CharRange\n+         0: new           #2                  // class org/apache/commons/lang3/CharRange\n          3: dup\n          4: iload_0\n          5: iload_1\n          6: iconst_0\n-         7: invokespecial #6                  // Method \"<init>\":(CCZ)V\n+         7: invokespecial #20                 // Method \"<init>\":(CCZ)V\n         10: areturn\n       LineNumberTable:\n         line 113: 0\n \n   public static org.apache.commons.lang3.CharRange isNotIn(char, char);\n     descriptor: (CC)Lorg/apache/commons/lang3/CharRange;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n-         0: new           #5                  // class org/apache/commons/lang3/CharRange\n+         0: new           #2                  // class org/apache/commons/lang3/CharRange\n          3: dup\n          4: iload_0\n          5: iload_1\n          6: iconst_1\n-         7: invokespecial #6                  // Method \"<init>\":(CCZ)V\n+         7: invokespecial #20                 // Method \"<init>\":(CCZ)V\n         10: areturn\n       LineNumberTable:\n         line 126: 0\n \n   public char getStart();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field start:C\n+         1: getfield      #7                  // Field start:C\n          4: ireturn\n       LineNumberTable:\n         line 137: 0\n \n   public char getEnd();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n@@ -257,37 +257,37 @@\n \n   public boolean isNegated();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field negated:Z\n+         1: getfield      #10                 // Field negated:Z\n          4: ireturn\n       LineNumberTable:\n         line 158: 0\n \n   public boolean contains(char);\n     descriptor: (C)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field start:C\n+         2: getfield      #7                  // Field start:C\n          5: if_icmplt     20\n          8: iload_1\n          9: aload_0\n         10: getfield      #1                  // Field end:C\n         13: if_icmpgt     20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: aload_0\n-        22: getfield      #3                  // Field negated:Z\n+        22: getfield      #10                 // Field negated:Z\n         25: if_icmpeq     32\n         28: iconst_1\n         29: goto          33\n         32: iconst_0\n         33: ireturn\n       LineNumberTable:\n         line 170: 0\n@@ -305,70 +305,70 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #7                  // String The Range must not be null\n+         9: ldc           #23                 // String The Range must not be null\n         11: iconst_0\n-        12: anewarray     #8                  // class java/lang/Object\n-        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #15                 // class java/lang/Object\n+        15: invokestatic  #25                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n-        19: getfield      #3                  // Field negated:Z\n+        19: getfield      #10                 // Field negated:Z\n         22: ifeq          88\n         25: aload_1\n-        26: getfield      #3                  // Field negated:Z\n+        26: getfield      #10                 // Field negated:Z\n         29: ifeq          60\n         32: aload_0\n-        33: getfield      #2                  // Field start:C\n+        33: getfield      #7                  // Field start:C\n         36: aload_1\n-        37: getfield      #2                  // Field start:C\n+        37: getfield      #7                  // Field start:C\n         40: if_icmplt     58\n         43: aload_0\n         44: getfield      #1                  // Field end:C\n         47: aload_1\n         48: getfield      #1                  // Field end:C\n         51: if_icmpgt     58\n         54: iconst_1\n         55: goto          59\n         58: iconst_0\n         59: ireturn\n         60: aload_1\n         61: getfield      #1                  // Field end:C\n         64: aload_0\n-        65: getfield      #2                  // Field start:C\n+        65: getfield      #7                  // Field start:C\n         68: if_icmplt     82\n         71: aload_1\n-        72: getfield      #2                  // Field start:C\n+        72: getfield      #7                  // Field start:C\n         75: aload_0\n         76: getfield      #1                  // Field end:C\n         79: if_icmple     86\n         82: iconst_1\n         83: goto          87\n         86: iconst_0\n         87: ireturn\n         88: aload_1\n-        89: getfield      #3                  // Field negated:Z\n+        89: getfield      #10                 // Field negated:Z\n         92: ifeq          117\n         95: aload_0\n-        96: getfield      #2                  // Field start:C\n+        96: getfield      #7                  // Field start:C\n         99: ifne          115\n        102: aload_0\n        103: getfield      #1                  // Field end:C\n-       106: ldc           #11                 // int 65535\n+       106: ldc           #33                 // int 65535\n        108: if_icmpne     115\n        111: iconst_1\n        112: goto          116\n        115: iconst_0\n        116: ireturn\n        117: aload_0\n-       118: getfield      #2                  // Field start:C\n+       118: getfield      #7                  // Field start:C\n        121: aload_1\n-       122: getfield      #2                  // Field start:C\n+       122: getfield      #7                  // Field start:C\n        125: if_icmpgt     143\n        128: aload_0\n        129: getfield      #1                  // Field end:C\n        132: aload_1\n        133: getfield      #1                  // Field end:C\n        136: if_icmplt     143\n        139: iconst_1\n@@ -412,35 +412,35 @@\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n-         8: instanceof    #5                  // class org/apache/commons/lang3/CharRange\n+         8: instanceof    #2                  // class org/apache/commons/lang3/CharRange\n         11: ifne          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n-        17: checkcast     #5                  // class org/apache/commons/lang3/CharRange\n+        17: checkcast     #2                  // class org/apache/commons/lang3/CharRange\n         20: astore_2\n         21: aload_0\n-        22: getfield      #2                  // Field start:C\n+        22: getfield      #7                  // Field start:C\n         25: aload_2\n-        26: getfield      #2                  // Field start:C\n+        26: getfield      #7                  // Field start:C\n         29: if_icmpne     58\n         32: aload_0\n         33: getfield      #1                  // Field end:C\n         36: aload_2\n         37: getfield      #1                  // Field end:C\n         40: if_icmpne     58\n         43: aload_0\n-        44: getfield      #3                  // Field negated:Z\n+        44: getfield      #10                 // Field negated:Z\n         47: aload_2\n-        48: getfield      #3                  // Field negated:Z\n+        48: getfield      #10                 // Field negated:Z\n         51: if_icmpne     58\n         54: iconst_1\n         55: goto          59\n         58: iconst_0\n         59: ireturn\n       LineNumberTable:\n         line 206: 0\n@@ -461,23 +461,23 @@\n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: bipush        83\n          2: aload_0\n-         3: getfield      #2                  // Field start:C\n+         3: getfield      #7                  // Field start:C\n          6: iadd\n          7: bipush        7\n          9: aload_0\n         10: getfield      #1                  // Field end:C\n         13: imul\n         14: iadd\n         15: aload_0\n-        16: getfield      #3                  // Field negated:Z\n+        16: getfield      #10                 // Field negated:Z\n         19: ifeq          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: iadd\n         28: ireturn\n       LineNumberTable:\n@@ -492,53 +492,53 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field iToString:Ljava/lang/String;\n+         1: getfield      #34                 // Field iToString:Ljava/lang/String;\n          4: ifnonnull     74\n-         7: new           #13                 // class java/lang/StringBuilder\n+         7: new           #38                 // class java/lang/StringBuilder\n         10: dup\n         11: iconst_4\n-        12: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        12: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n         15: astore_1\n         16: aload_0\n-        17: invokevirtual #15                 // Method isNegated:()Z\n+        17: invokevirtual #43                 // Method isNegated:()Z\n         20: ifeq          30\n         23: aload_1\n         24: bipush        94\n-        26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        26: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         29: pop\n         30: aload_1\n         31: aload_0\n-        32: getfield      #2                  // Field start:C\n-        35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        32: getfield      #7                  // Field start:C\n+        35: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         38: pop\n         39: aload_0\n-        40: getfield      #2                  // Field start:C\n+        40: getfield      #7                  // Field start:C\n         43: aload_0\n         44: getfield      #1                  // Field end:C\n         47: if_icmpeq     66\n         50: aload_1\n         51: bipush        45\n-        53: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        53: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         56: pop\n         57: aload_1\n         58: aload_0\n         59: getfield      #1                  // Field end:C\n-        62: invokevirtual #16                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        62: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         65: pop\n         66: aload_0\n         67: aload_1\n-        68: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        71: putfield      #12                 // Field iToString:Ljava/lang/String;\n+        68: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        71: putfield      #34                 // Field iToString:Ljava/lang/String;\n         74: aload_0\n-        75: getfield      #12                 // Field iToString:Ljava/lang/String;\n+        75: getfield      #34                 // Field iToString:Ljava/lang/String;\n         78: areturn\n       LineNumberTable:\n         line 233: 0\n         line 234: 7\n         line 235: 16\n         line 236: 23\n         line 238: 30\n@@ -556,42 +556,42 @@\n           offset_delta = 7\n \n   public java.util.Iterator<java.lang.Character> iterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #18                 // class org/apache/commons/lang3/CharRange$CharacterIterator\n+         0: new           #55                 // class org/apache/commons/lang3/CharRange$CharacterIterator\n          3: dup\n          4: aload_0\n          5: aconst_null\n-         6: invokespecial #19                 // Method org/apache/commons/lang3/CharRange$CharacterIterator.\"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n+         6: invokespecial #57                 // Method org/apache/commons/lang3/CharRange$CharacterIterator.\"<init>\":(Lorg/apache/commons/lang3/CharRange;Lorg/apache/commons/lang3/CharRange$1;)V\n          9: areturn\n       LineNumberTable:\n         line 259: 0\n-    Signature: #65                          // ()Ljava/util/Iterator<Ljava/lang/Character;>;\n+    Signature: #91                          // ()Ljava/util/Iterator<Ljava/lang/Character;>;\n \n   static boolean access$100(org.apache.commons.lang3.CharRange);\n     descriptor: (Lorg/apache/commons/lang3/CharRange;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field negated:Z\n+         1: getfield      #10                 // Field negated:Z\n          4: ireturn\n       LineNumberTable:\n         line 33: 0\n \n   static char access$200(org.apache.commons.lang3.CharRange);\n     descriptor: (Lorg/apache/commons/lang3/CharRange;)C\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field start:C\n+         1: getfield      #7                  // Field start:C\n          4: ireturn\n       LineNumberTable:\n         line 33: 0\n \n   static char access$300(org.apache.commons.lang3.CharRange);\n     descriptor: (Lorg/apache/commons/lang3/CharRange;)C\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n@@ -599,12 +599,12 @@\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field end:C\n          4: ireturn\n       LineNumberTable:\n         line 33: 0\n }\n-Signature: #70                          // Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;\n+Signature: #96                          // Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Character;>;Ljava/io/Serializable;\n SourceFile: \"CharRange.java\"\n InnerClasses:\n-  static #22;                             // class org/apache/commons/lang3/CharRange$1\n-  private static #24= #18 of #5;          // CharacterIterator=class org/apache/commons/lang3/CharRange$CharacterIterator of class org/apache/commons/lang3/CharRange\n+  private static #100= #55 of #2;         // CharacterIterator=class org/apache/commons/lang3/CharRange$CharacterIterator of class org/apache/commons/lang3/CharRange\n+  static #101;                            // class org/apache/commons/lang3/CharRange$1\n"}]}
