{"diffoscope-json-version": 1, "source1": "first/ExceptionHandlers.class", "source2": "second/ExceptionHandlers.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,43 @@\n-  SHA-256 checksum e8f84527a1499320f3757789d100aea5d9906e11ef2bef1b5596e4973fd17097\n+  SHA-256 checksum b27ed66abd3f34726ea3192e35b14366eb9413006a8c116f0723d693abbc9747\n   Compiled from \"ExceptionHandlers.java\"\n public class org.apache.bcel.verifier.structurals.ExceptionHandlers\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #25                         // org/apache/bcel/verifier/structurals/ExceptionHandlers\n   super_class: #26                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 5, attributes: 3\n Constant pool:\n-    #1 = Methodref          #26.#72       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #73           // java/util/HashMap\n-    #3 = Methodref          #2.#72        // java/util/HashMap.\"<init>\":()V\n-    #4 = Fieldref           #25.#74       // org/apache/bcel/verifier/structurals/ExceptionHandlers.exceptionHandlers:Ljava/util/Map;\n-    #5 = Methodref          #75.#76       // org/apache/bcel/generic/MethodGen.getExceptionHandlers:()[Lorg/apache/bcel/generic/CodeExceptionGen;\n-    #6 = Class              #77           // org/apache/bcel/verifier/structurals/ExceptionHandler\n-    #7 = Methodref          #78.#79       // org/apache/bcel/generic/CodeExceptionGen.getCatchType:()Lorg/apache/bcel/generic/ObjectType;\n-    #8 = Methodref          #78.#80       // org/apache/bcel/generic/CodeExceptionGen.getHandlerPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-    #9 = Methodref          #6.#81        // org/apache/bcel/verifier/structurals/ExceptionHandler.\"<init>\":(Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n-   #10 = Methodref          #78.#82       // org/apache/bcel/generic/CodeExceptionGen.getStartPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #11 = Methodref          #78.#83       // org/apache/bcel/generic/CodeExceptionGen.getEndPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #12 = Methodref          #84.#85       // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #13 = InvokeDynamic      #0:#91        // #0:apply:()Ljava/util/function/Function;\n-   #14 = InterfaceMethodref #92.#93       // java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-   #15 = Class              #94           // java/util/Set\n-   #16 = InterfaceMethodref #15.#95       // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #17 = InvokeDynamic      #1:#91        // #1:apply:()Ljava/util/function/Function;\n-   #18 = InterfaceMethodref #92.#97       // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = Fieldref           #25.#98       // org/apache/bcel/verifier/structurals/ExceptionHandlers.EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n-   #20 = Fieldref           #6.#98        // org/apache/bcel/verifier/structurals/ExceptionHandler.EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n-   #21 = InterfaceMethodref #15.#99       // java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #26.#69       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #70           // java/util/HashMap\n+    #3 = Methodref          #2.#69        // java/util/HashMap.\"<init>\":()V\n+    #4 = Fieldref           #25.#71       // org/apache/bcel/verifier/structurals/ExceptionHandlers.exceptionHandlers:Ljava/util/Map;\n+    #5 = Methodref          #51.#72       // org/apache/bcel/generic/MethodGen.getExceptionHandlers:()[Lorg/apache/bcel/generic/CodeExceptionGen;\n+    #6 = Class              #73           // org/apache/bcel/verifier/structurals/ExceptionHandler\n+    #7 = Methodref          #53.#74       // org/apache/bcel/generic/CodeExceptionGen.getCatchType:()Lorg/apache/bcel/generic/ObjectType;\n+    #8 = Methodref          #53.#75       // org/apache/bcel/generic/CodeExceptionGen.getHandlerPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+    #9 = Methodref          #6.#76        // org/apache/bcel/verifier/structurals/ExceptionHandler.\"<init>\":(Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n+   #10 = Methodref          #53.#77       // org/apache/bcel/generic/CodeExceptionGen.getStartPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #11 = Methodref          #53.#78       // org/apache/bcel/generic/CodeExceptionGen.getEndPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #12 = Methodref          #54.#79       // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #13 = InvokeDynamic      #0:#85        // #0:apply:()Ljava/util/function/Function;\n+   #14 = InterfaceMethodref #86.#87       // java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+   #15 = Class              #88           // java/util/Set\n+   #16 = InterfaceMethodref #15.#89       // java/util/Set.add:(Ljava/lang/Object;)Z\n+   #17 = InvokeDynamic      #1:#85        // #1:apply:()Ljava/util/function/Function;\n+   #18 = InterfaceMethodref #86.#91       // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #19 = Fieldref           #25.#92       // org/apache/bcel/verifier/structurals/ExceptionHandlers.EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n+   #20 = Fieldref           #6.#92        // org/apache/bcel/verifier/structurals/ExceptionHandler.EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n+   #21 = InterfaceMethodref #15.#93       // java/util/Set.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #22 = Class              #28           // \"[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\"\n-   #23 = Class              #100          // java/util/HashSet\n-   #24 = Methodref          #23.#72       // java/util/HashSet.\"<init>\":()V\n-   #25 = Class              #101          // org/apache/bcel/verifier/structurals/ExceptionHandlers\n-   #26 = Class              #102          // java/lang/Object\n+   #23 = Class              #94           // java/util/HashSet\n+   #24 = Methodref          #23.#69       // java/util/HashSet.\"<init>\":()V\n+   #25 = Class              #95           // org/apache/bcel/verifier/structurals/ExceptionHandlers\n+   #26 = Class              #96           // java/lang/Object\n    #27 = Utf8               EMPTY_ARRAY\n    #28 = Utf8               [Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n    #29 = Utf8               exceptionHandlers\n    #30 = Utf8               Ljava/util/Map;\n    #31 = Utf8               Signature\n    #32 = Utf8               Ljava/util/Map<Lorg/apache/bcel/generic/InstructionHandle;Ljava/util/Set<Lorg/apache/bcel/verifier/structurals/ExceptionHandler;>;>;\n    #33 = Utf8               <init>\n@@ -54,105 +54,99 @@\n    #44 = Utf8               this\n    #45 = Utf8               Lorg/apache/bcel/verifier/structurals/ExceptionHandlers;\n    #46 = Utf8               mg\n    #47 = Utf8               Lorg/apache/bcel/generic/MethodGen;\n    #48 = Utf8               cegs\n    #49 = Utf8               [Lorg/apache/bcel/generic/CodeExceptionGen;\n    #50 = Utf8               StackMapTable\n-   #51 = Class              #101          // org/apache/bcel/verifier/structurals/ExceptionHandlers\n-   #52 = Class              #103          // org/apache/bcel/generic/MethodGen\n-   #53 = Class              #49           // \"[Lorg/apache/bcel/generic/CodeExceptionGen;\"\n-   #54 = Class              #104          // org/apache/bcel/generic/CodeExceptionGen\n-   #55 = Class              #77           // org/apache/bcel/verifier/structurals/ExceptionHandler\n-   #56 = Class              #105          // org/apache/bcel/generic/InstructionHandle\n-   #57 = Utf8               getExceptionHandlers\n-   #58 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n-   #59 = Utf8               hsSet\n-   #60 = Utf8               Ljava/util/Set;\n-   #61 = Utf8               LocalVariableTypeTable\n-   #62 = Utf8               Ljava/util/Set<Lorg/apache/bcel/verifier/structurals/ExceptionHandler;>;\n-   #63 = Class              #94           // java/util/Set\n-   #64 = Utf8               lambda$new$1\n-   #65 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-   #66 = Utf8               k\n-   #67 = Utf8               lambda$new$0\n-   #68 = Utf8               <clinit>\n-   #69 = Utf8               ()V\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               ExceptionHandlers.java\n-   #72 = NameAndType        #33:#69       // \"<init>\":()V\n-   #73 = Utf8               java/util/HashMap\n-   #74 = NameAndType        #29:#30       // exceptionHandlers:Ljava/util/Map;\n-   #75 = Class              #103          // org/apache/bcel/generic/MethodGen\n-   #76 = NameAndType        #57:#106      // getExceptionHandlers:()[Lorg/apache/bcel/generic/CodeExceptionGen;\n-   #77 = Utf8               org/apache/bcel/verifier/structurals/ExceptionHandler\n-   #78 = Class              #104          // org/apache/bcel/generic/CodeExceptionGen\n-   #79 = NameAndType        #107:#108     // getCatchType:()Lorg/apache/bcel/generic/ObjectType;\n-   #80 = NameAndType        #109:#110     // getHandlerPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #81 = NameAndType        #33:#111      // \"<init>\":(Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n-   #82 = NameAndType        #112:#110     // getStartPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #83 = NameAndType        #113:#110     // getEndPC:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #84 = Class              #105          // org/apache/bcel/generic/InstructionHandle\n-   #85 = NameAndType        #114:#110     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #86 = Utf8               BootstrapMethods\n-   #87 = MethodHandle       6:#115        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #88 = MethodType         #116          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = MethodHandle       6:#117        // REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-   #90 = MethodType         #65           //  (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-   #91 = NameAndType        #118:#119     // apply:()Ljava/util/function/Function;\n-   #92 = Class              #120          // java/util/Map\n-   #93 = NameAndType        #121:#122     // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-   #94 = Utf8               java/util/Set\n-   #95 = NameAndType        #123:#124     // add:(Ljava/lang/Object;)Z\n-   #96 = MethodHandle       6:#125        // REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-   #97 = NameAndType        #126:#116     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #98 = NameAndType        #27:#28       // EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n-   #99 = NameAndType        #127:#128     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #100 = Utf8               java/util/HashSet\n-  #101 = Utf8               org/apache/bcel/verifier/structurals/ExceptionHandlers\n-  #102 = Utf8               java/lang/Object\n-  #103 = Utf8               org/apache/bcel/generic/MethodGen\n-  #104 = Utf8               org/apache/bcel/generic/CodeExceptionGen\n-  #105 = Utf8               org/apache/bcel/generic/InstructionHandle\n-  #106 = Utf8               ()[Lorg/apache/bcel/generic/CodeExceptionGen;\n-  #107 = Utf8               getCatchType\n-  #108 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n-  #109 = Utf8               getHandlerPC\n-  #110 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n-  #111 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n-  #112 = Utf8               getStartPC\n-  #113 = Utf8               getEndPC\n-  #114 = Utf8               getNext\n-  #115 = Methodref          #129.#130     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #116 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #117 = Methodref          #25.#131      // org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-  #118 = Utf8               apply\n-  #119 = Utf8               ()Ljava/util/function/Function;\n-  #120 = Utf8               java/util/Map\n-  #121 = Utf8               computeIfAbsent\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-  #123 = Utf8               add\n-  #124 = Utf8               (Ljava/lang/Object;)Z\n-  #125 = Methodref          #25.#132      // org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-  #126 = Utf8               get\n-  #127 = Utf8               toArray\n-  #128 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #129 = Class              #133          // java/lang/invoke/LambdaMetafactory\n-  #130 = NameAndType        #134:#138     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #131 = NameAndType        #67:#65       // lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-  #132 = NameAndType        #64:#65       // lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-  #133 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #134 = Utf8               metafactory\n-  #135 = Class              #140          // java/lang/invoke/MethodHandles$Lookup\n-  #136 = Utf8               Lookup\n-  #137 = Utf8               InnerClasses\n-  #138 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #139 = Class              #141          // java/lang/invoke/MethodHandles\n-  #140 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #141 = Utf8               java/lang/invoke/MethodHandles\n+   #51 = Class              #97           // org/apache/bcel/generic/MethodGen\n+   #52 = Class              #49           // \"[Lorg/apache/bcel/generic/CodeExceptionGen;\"\n+   #53 = Class              #98           // org/apache/bcel/generic/CodeExceptionGen\n+   #54 = Class              #99           // org/apache/bcel/generic/InstructionHandle\n+   #55 = Utf8               getExceptionHandlers\n+   #56 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n+   #57 = Utf8               hsSet\n+   #58 = Utf8               Ljava/util/Set;\n+   #59 = Utf8               LocalVariableTypeTable\n+   #60 = Utf8               Ljava/util/Set<Lorg/apache/bcel/verifier/structurals/ExceptionHandler;>;\n+   #61 = Utf8               lambda$new$1\n+   #62 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+   #63 = Utf8               k\n+   #64 = Utf8               lambda$new$0\n+   #65 = Utf8               <clinit>\n+   #66 = Utf8               ()V\n+   #67 = Utf8               SourceFile\n+   #68 = Utf8               ExceptionHandlers.java\n+   #69 = NameAndType        #33:#66       // \"<init>\":()V\n+   #70 = Utf8               java/util/HashMap\n+   #71 = NameAndType        #29:#30       // exceptionHandlers:Ljava/util/Map;\n+   #72 = NameAndType        #55:#100      // getExceptionHandlers:()[Lorg/apache/bcel/generic/CodeExceptionGen;\n+   #73 = Utf8               org/apache/bcel/verifier/structurals/ExceptionHandler\n+   #74 = NameAndType        #101:#102     // getCatchType:()Lorg/apache/bcel/generic/ObjectType;\n+   #75 = NameAndType        #103:#104     // getHandlerPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #76 = NameAndType        #33:#105      // \"<init>\":(Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n+   #77 = NameAndType        #106:#104     // getStartPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #78 = NameAndType        #107:#104     // getEndPC:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #79 = NameAndType        #108:#104     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #80 = Utf8               BootstrapMethods\n+   #81 = MethodHandle       6:#109        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #82 = MethodType         #110          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+   #83 = MethodHandle       6:#111        // REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+   #84 = MethodType         #62           //  (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+   #85 = NameAndType        #112:#113     // apply:()Ljava/util/function/Function;\n+   #86 = Class              #114          // java/util/Map\n+   #87 = NameAndType        #115:#116     // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+   #88 = Utf8               java/util/Set\n+   #89 = NameAndType        #117:#118     // add:(Ljava/lang/Object;)Z\n+   #90 = MethodHandle       6:#119        // REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+   #91 = NameAndType        #120:#110     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #92 = NameAndType        #27:#28       // EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n+   #93 = NameAndType        #121:#122     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #94 = Utf8               java/util/HashSet\n+   #95 = Utf8               org/apache/bcel/verifier/structurals/ExceptionHandlers\n+   #96 = Utf8               java/lang/Object\n+   #97 = Utf8               org/apache/bcel/generic/MethodGen\n+   #98 = Utf8               org/apache/bcel/generic/CodeExceptionGen\n+   #99 = Utf8               org/apache/bcel/generic/InstructionHandle\n+  #100 = Utf8               ()[Lorg/apache/bcel/generic/CodeExceptionGen;\n+  #101 = Utf8               getCatchType\n+  #102 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n+  #103 = Utf8               getHandlerPC\n+  #104 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n+  #105 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Lorg/apache/bcel/generic/InstructionHandle;)V\n+  #106 = Utf8               getStartPC\n+  #107 = Utf8               getEndPC\n+  #108 = Utf8               getNext\n+  #109 = Methodref          #123.#124     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = Methodref          #25.#125      // org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+  #112 = Utf8               apply\n+  #113 = Utf8               ()Ljava/util/function/Function;\n+  #114 = Utf8               java/util/Map\n+  #115 = Utf8               computeIfAbsent\n+  #116 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+  #117 = Utf8               add\n+  #118 = Utf8               (Ljava/lang/Object;)Z\n+  #119 = Methodref          #25.#126      // org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+  #120 = Utf8               get\n+  #121 = Utf8               toArray\n+  #122 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #123 = Class              #127          // java/lang/invoke/LambdaMetafactory\n+  #124 = NameAndType        #128:#132     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #125 = NameAndType        #64:#62       // lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+  #126 = NameAndType        #61:#62       // lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+  #127 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #128 = Utf8               metafactory\n+  #129 = Class              #134          // java/lang/invoke/MethodHandles$Lookup\n+  #130 = Utf8               Lookup\n+  #131 = Utf8               InnerClasses\n+  #132 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #133 = Class              #135          // java/lang/invoke/MethodHandles\n+  #134 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #135 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final org.apache.bcel.verifier.structurals.ExceptionHandler[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private final java.util.Map<org.apache.bcel.generic.InstructionHandle, java.util.Set<org.apache.bcel.verifier.structurals.ExceptionHandler>> exceptionHandlers;\n     descriptor: Ljava/util/Map;\n@@ -340,19 +334,19 @@\n          4: putstatic     #19                 // Field EMPTY_ARRAY:[Lorg/apache/bcel/verifier/structurals/ExceptionHandler;\n          7: return\n       LineNumberTable:\n         line 37: 0\n }\n SourceFile: \"ExceptionHandlers.java\"\n InnerClasses:\n-  public static final #136= #135 of #139; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #130= #129 of #133; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #87 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #88 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #89 REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-      #90 (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-  1: #87 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #82 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #83 REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$0:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+      #84 (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+  1: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #88 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #96 REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n-      #90 (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+      #82 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #90 REF_invokeStatic org/apache/bcel/verifier/structurals/ExceptionHandlers.lambda$new$1:(Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n+      #84 (Lorg/apache/bcel/generic/InstructionHandle;)Ljava/util/Set;\n"}]}
