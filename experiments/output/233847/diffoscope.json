{"diffoscope-json-version": 1, "source1": "first/DefaultEntityResolver.class", "source2": "second/DefaultEntityResolver.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,10 @@\n \n package org.apache.commons.configuration2.resolver;\n \n-import java.io.InputStream;\n import java.net.URLConnection;\n import java.io.IOException;\n import org.xml.sax.SAXException;\n import org.xml.sax.InputSource;\n import java.util.HashMap;\n import java.net.URL;\n import java.util.Map;\n@@ -15,35 +14,34 @@\n {\n     private final Map<String, URL> registeredEntities;\n     \n     public DefaultEntityResolver() {\n         this.registeredEntities = new HashMap<String, URL>();\n     }\n     \n-    public void registerEntityId(final String publicId, final URL entityURL) {\n-        if (publicId == null) {\n+    public void registerEntityId(final String s, final URL url) {\n+        if (s == null) {\n             throw new IllegalArgumentException(\"Public ID must not be null!\");\n         }\n-        this.getRegisteredEntities().put(publicId, entityURL);\n+        this.getRegisteredEntities().put(s, url);\n     }\n     \n     @Override\n-    public InputSource resolveEntity(final String publicId, final String systemId) throws SAXException {\n-        URL entityURL = null;\n-        if (publicId != null) {\n-            entityURL = this.getRegisteredEntities().get(publicId);\n+    public InputSource resolveEntity(final String s, final String s2) throws SAXException {\n+        URL url = null;\n+        if (s != null) {\n+            url = this.getRegisteredEntities().get(s);\n         }\n-        if (entityURL != null) {\n+        if (url != null) {\n             try {\n-                final URLConnection connection = entityURL.openConnection();\n-                connection.setUseCaches(false);\n-                final InputStream stream = connection.getInputStream();\n-                final InputSource source = new InputSource(stream);\n-                source.setSystemId(entityURL.toExternalForm());\n-                return source;\n+                final URLConnection openConnection = url.openConnection();\n+                openConnection.setUseCaches(false);\n+                final InputSource inputSource = new InputSource(openConnection.getInputStream());\n+                inputSource.setSystemId(url.toExternalForm());\n+                return inputSource;\n             }\n             catch (final IOException e) {\n                 throw new SAXException(e);\n             }\n         }\n         return null;\n     }\n"}]}
