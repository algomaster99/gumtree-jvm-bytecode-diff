{"diffoscope-json-version": 1, "source1": "first/UTF8JsonGenerator.class", "source2": "second/UTF8JsonGenerator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,209 +1,209 @@\n-  SHA-256 checksum bd1e2a15bd1e479264b21b35c6e13c8aa2c0a53968aa7c2c5a32db43d5e10378\n+  SHA-256 checksum 89759aadd51a888be859d0cc00451ad30ec9df6aac2993c4cc13ff2b60404ebd\n   Compiled from \"UTF8JsonGenerator.java\"\n public class com.fasterxml.jackson.core.json.UTF8JsonGenerator extends com.fasterxml.jackson.core.json.JsonGeneratorImpl\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #29                         // com/fasterxml/jackson/core/json/UTF8JsonGenerator\n   super_class: #192                       // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n   interfaces: 0, fields: 25, methods: 85, attributes: 2\n Constant pool:\n-    #1 = Methodref          #192.#461     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-    #2 = Fieldref           #29.#462      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputStream:Ljava/io/OutputStream;\n-    #3 = Fieldref           #29.#463      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._quoteChar:B\n-    #4 = Methodref          #464.#465     // com/fasterxml/jackson/core/io/CharTypes.get7BitOutputEscapes:(I)[I\n-    #5 = Fieldref           #29.#466      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputEscapes:[I\n-    #6 = Fieldref           #29.#467      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._bufferRecyclable:Z\n-    #7 = Methodref          #468.#469     // com/fasterxml/jackson/core/io/IOContext.allocWriteEncodingBuffer:()[B\n-    #8 = Fieldref           #29.#470      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputBuffer:[B\n-    #9 = Fieldref           #29.#471      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputEnd:I\n-   #10 = Fieldref           #29.#472      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputMaxContiguous:I\n-   #11 = Methodref          #468.#473     // com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer:()[C\n-   #12 = Fieldref           #29.#474      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._charBuffer:[C\n-   #13 = Fieldref           #29.#475      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._charBufferLength:I\n-   #14 = Fieldref           #476.#477     // com/fasterxml/jackson/core/JsonGenerator$Feature.ESCAPE_NON_ASCII:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-   #15 = Methodref          #29.#478      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-   #16 = Methodref          #29.#479      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.setHighestNonEscapedChar:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #17 = Fieldref           #29.#480      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputTail:I\n-   #18 = Class              #481          // com/fasterxml/jackson/core/JsonFactory\n-   #19 = Methodref          #29.#482      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C)V\n-   #20 = Methodref          #29.#483      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n-   #21 = Fieldref           #29.#484      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-   #22 = Methodref          #29.#485      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writePPFieldName:(Ljava/lang/String;)V\n-   #23 = Fieldref           #29.#486      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #24 = Methodref          #25.#487      // com/fasterxml/jackson/core/json/JsonWriteContext.writeFieldName:(Ljava/lang/String;)I\n-   #25 = Class              #488          // com/fasterxml/jackson/core/json/JsonWriteContext\n-   #26 = String             #489          // Can not write a field name, expecting a value\n-   #27 = Methodref          #29.#490      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._reportError:(Ljava/lang/String;)V\n-   #28 = Methodref          #29.#491      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._flushBuffer:()V\n-   #29 = Class              #492          // com/fasterxml/jackson/core/json/UTF8JsonGenerator\n-   #30 = Fieldref           #29.#493      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgUnqNames:Z\n-   #31 = Methodref          #29.#494      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:(Ljava/lang/String;Z)V\n-   #32 = Methodref          #495.#496     // java/lang/String.length:()I\n-   #33 = Methodref          #29.#497      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment:(Ljava/lang/String;II)V\n-   #34 = Methodref          #29.#498      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:(Ljava/lang/String;II)V\n-   #35 = Methodref          #29.#499      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-   #36 = InterfaceMethodref #500.#501     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #37 = Methodref          #29.#502      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUnq:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-   #38 = InterfaceMethodref #500.#503     // com/fasterxml/jackson/core/SerializableString.appendQuotedUTF8:([BI)I\n-   #39 = InterfaceMethodref #500.#504     // com/fasterxml/jackson/core/SerializableString.asQuotedUTF8:()[B\n-   #40 = Methodref          #29.#505      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBytes:([B)V\n-   #41 = String             #506          // start an array\n-   #42 = Methodref          #29.#507      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._verifyValueWrite:(Ljava/lang/String;)V\n-   #43 = Methodref          #25.#508      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #44 = InterfaceMethodref #509.#510     // com/fasterxml/jackson/core/PrettyPrinter.writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #45 = Methodref          #25.#511      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #46 = Methodref          #25.#512      // com/fasterxml/jackson/core/json/JsonWriteContext.inArray:()Z\n-   #47 = Class              #513          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#514      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = String             #515          // Current context not Array but\n-   #50 = Methodref          #47.#516      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #51 = Methodref          #25.#517      // com/fasterxml/jackson/core/json/JsonWriteContext.typeDesc:()Ljava/lang/String;\n-   #52 = Methodref          #47.#518      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #53 = Methodref          #25.#519      // com/fasterxml/jackson/core/json/JsonWriteContext.getEntryCount:()I\n-   #54 = InterfaceMethodref #509.#520     // com/fasterxml/jackson/core/PrettyPrinter.writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-   #55 = Methodref          #25.#521      // com/fasterxml/jackson/core/json/JsonWriteContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #56 = String             #522          // start an object\n-   #57 = Methodref          #25.#523      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #58 = InterfaceMethodref #509.#524     // com/fasterxml/jackson/core/PrettyPrinter.writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #59 = Methodref          #25.#525      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #60 = Methodref          #29.#526      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n-   #61 = Methodref          #25.#527      // com/fasterxml/jackson/core/json/JsonWriteContext.inObject:()Z\n-   #62 = String             #528          // Current context not Object but\n-   #63 = InterfaceMethodref #509.#529     // com/fasterxml/jackson/core/PrettyPrinter.writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-   #64 = InterfaceMethodref #509.#530     // com/fasterxml/jackson/core/PrettyPrinter.writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #65 = InterfaceMethodref #509.#531     // com/fasterxml/jackson/core/PrettyPrinter.beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #66 = Methodref          #495.#532     // java/lang/String.getChars:(II[CI)V\n-   #67 = Methodref          #29.#533      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment:([CII)V\n-   #68 = Methodref          #29.#534      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:([CII)V\n-   #69 = Class              #535          // com/fasterxml/jackson/core/base/GeneratorBase\n-   #70 = String             #536          // write a string\n-   #71 = Methodref          #29.#537      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeNull:()V\n-   #72 = String             #538          // null reader\n-   #73 = Class              #539          // java/lang/Integer\n+    #1 = Methodref          #192.#457     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+    #2 = Fieldref           #29.#458      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputStream:Ljava/io/OutputStream;\n+    #3 = Fieldref           #29.#459      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._quoteChar:B\n+    #4 = Methodref          #460.#461     // com/fasterxml/jackson/core/io/CharTypes.get7BitOutputEscapes:(I)[I\n+    #5 = Fieldref           #29.#462      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputEscapes:[I\n+    #6 = Fieldref           #29.#463      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._bufferRecyclable:Z\n+    #7 = Methodref          #251.#464     // com/fasterxml/jackson/core/io/IOContext.allocWriteEncodingBuffer:()[B\n+    #8 = Fieldref           #29.#465      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputBuffer:[B\n+    #9 = Fieldref           #29.#466      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputEnd:I\n+   #10 = Fieldref           #29.#467      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputMaxContiguous:I\n+   #11 = Methodref          #251.#468     // com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer:()[C\n+   #12 = Fieldref           #29.#469      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._charBuffer:[C\n+   #13 = Fieldref           #29.#470      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._charBufferLength:I\n+   #14 = Fieldref           #471.#472     // com/fasterxml/jackson/core/JsonGenerator$Feature.ESCAPE_NON_ASCII:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #15 = Methodref          #29.#473      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #16 = Methodref          #29.#474      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.setHighestNonEscapedChar:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #17 = Fieldref           #29.#475      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputTail:I\n+   #18 = Class              #476          // com/fasterxml/jackson/core/JsonFactory\n+   #19 = Methodref          #29.#477      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C)V\n+   #20 = Methodref          #29.#478      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n+   #21 = Fieldref           #29.#479      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #22 = Methodref          #29.#480      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writePPFieldName:(Ljava/lang/String;)V\n+   #23 = Fieldref           #29.#481      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #24 = Methodref          #25.#482      // com/fasterxml/jackson/core/json/JsonWriteContext.writeFieldName:(Ljava/lang/String;)I\n+   #25 = Class              #483          // com/fasterxml/jackson/core/json/JsonWriteContext\n+   #26 = String             #484          // Can not write a field name, expecting a value\n+   #27 = Methodref          #29.#485      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._reportError:(Ljava/lang/String;)V\n+   #28 = Methodref          #29.#486      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._flushBuffer:()V\n+   #29 = Class              #487          // com/fasterxml/jackson/core/json/UTF8JsonGenerator\n+   #30 = Fieldref           #29.#488      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgUnqNames:Z\n+   #31 = Methodref          #29.#489      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:(Ljava/lang/String;Z)V\n+   #32 = Methodref          #399.#490     // java/lang/String.length:()I\n+   #33 = Methodref          #29.#491      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment:(Ljava/lang/String;II)V\n+   #34 = Methodref          #29.#492      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:(Ljava/lang/String;II)V\n+   #35 = Methodref          #29.#493      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+   #36 = InterfaceMethodref #404.#494     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+   #37 = Methodref          #29.#495      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUnq:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+   #38 = InterfaceMethodref #404.#496     // com/fasterxml/jackson/core/SerializableString.appendQuotedUTF8:([BI)I\n+   #39 = InterfaceMethodref #404.#497     // com/fasterxml/jackson/core/SerializableString.asQuotedUTF8:()[B\n+   #40 = Methodref          #29.#498      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBytes:([B)V\n+   #41 = String             #499          // start an array\n+   #42 = Methodref          #29.#500      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._verifyValueWrite:(Ljava/lang/String;)V\n+   #43 = Methodref          #25.#501      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #44 = InterfaceMethodref #502.#503     // com/fasterxml/jackson/core/PrettyPrinter.writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #45 = Methodref          #25.#504      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #46 = Methodref          #25.#505      // com/fasterxml/jackson/core/json/JsonWriteContext.inArray:()Z\n+   #47 = Class              #506          // java/lang/StringBuilder\n+   #48 = Methodref          #47.#507      // java/lang/StringBuilder.\"<init>\":()V\n+   #49 = String             #508          // Current context not Array but\n+   #50 = Methodref          #47.#509      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #25.#510      // com/fasterxml/jackson/core/json/JsonWriteContext.typeDesc:()Ljava/lang/String;\n+   #52 = Methodref          #47.#511      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #53 = Methodref          #25.#512      // com/fasterxml/jackson/core/json/JsonWriteContext.getEntryCount:()I\n+   #54 = InterfaceMethodref #502.#513     // com/fasterxml/jackson/core/PrettyPrinter.writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+   #55 = Methodref          #25.#514      // com/fasterxml/jackson/core/json/JsonWriteContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #56 = String             #515          // start an object\n+   #57 = Methodref          #25.#516      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #58 = InterfaceMethodref #502.#517     // com/fasterxml/jackson/core/PrettyPrinter.writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #59 = Methodref          #25.#518      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #60 = Methodref          #29.#519      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n+   #61 = Methodref          #25.#520      // com/fasterxml/jackson/core/json/JsonWriteContext.inObject:()Z\n+   #62 = String             #521          // Current context not Object but\n+   #63 = InterfaceMethodref #502.#522     // com/fasterxml/jackson/core/PrettyPrinter.writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+   #64 = InterfaceMethodref #502.#523     // com/fasterxml/jackson/core/PrettyPrinter.writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #65 = InterfaceMethodref #502.#524     // com/fasterxml/jackson/core/PrettyPrinter.beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #66 = Methodref          #399.#525     // java/lang/String.getChars:(II[CI)V\n+   #67 = Methodref          #29.#526      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment:([CII)V\n+   #68 = Methodref          #29.#527      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegments:([CII)V\n+   #69 = Class              #528          // com/fasterxml/jackson/core/base/GeneratorBase\n+   #70 = String             #529          // write a string\n+   #71 = Methodref          #29.#530      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeNull:()V\n+   #72 = String             #531          // null reader\n+   #73 = Class              #532          // java/lang/Integer\n    #74 = Integer            2147483647\n-   #75 = Methodref          #540.#541     // java/lang/Math.min:(II)I\n-   #76 = Methodref          #542.#543     // java/io/Reader.read:([CII)I\n-   #77 = String             #544          // Didn\\'t read enough from reader\n-   #78 = Methodref          #29.#545      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForByteArray:([BII)V\n-   #79 = Methodref          #29.#546      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBytes:([BII)V\n-   #80 = Methodref          #29.#547      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segment:([BII)V\n-   #81 = Methodref          #29.#548      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segments:([BII)V\n-   #82 = Methodref          #29.#549      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:([CII)V\n-   #83 = Methodref          #29.#550      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:(Ljava/lang/String;II)V\n-   #84 = Methodref          #29.#551      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForString:(Ljava/lang/String;II)V\n+   #75 = Methodref          #533.#534     // java/lang/Math.min:(II)I\n+   #76 = Methodref          #535.#536     // java/io/Reader.read:([CII)I\n+   #77 = String             #537          // Didn\\'t read enough from reader\n+   #78 = Methodref          #29.#538      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForByteArray:([BII)V\n+   #79 = Methodref          #29.#539      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBytes:([BII)V\n+   #80 = Methodref          #29.#540      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segment:([BII)V\n+   #81 = Methodref          #29.#541      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segments:([BII)V\n+   #82 = Methodref          #29.#542      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:([CII)V\n+   #83 = Methodref          #29.#543      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:(Ljava/lang/String;II)V\n+   #84 = Methodref          #29.#544      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForString:(Ljava/lang/String;II)V\n    #85 = Integer            55296\n    #86 = Integer            56319\n-   #87 = Methodref          #29.#552      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeRawSegment:([CII)V\n-   #88 = InterfaceMethodref #500.#553     // com/fasterxml/jackson/core/SerializableString.appendUnquotedUTF8:([BI)I\n-   #89 = InterfaceMethodref #500.#554     // com/fasterxml/jackson/core/SerializableString.asUnquotedUTF8:()[B\n-   #90 = String             #555          // write a raw (unencoded) value\n-   #91 = Methodref          #29.#556      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForCharArray:([CII)V\n-   #92 = Methodref          #29.#557      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeSegmentedRaw:([CII)V\n-   #93 = Methodref          #29.#558      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputRawMultiByteChar:(I[CII)I\n-   #94 = String             #559          // write a binary value\n-   #95 = Methodref          #29.#560      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-   #96 = Fieldref           #29.#561      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-   #97 = Methodref          #468.#562     // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n-   #98 = Methodref          #29.#563      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-   #99 = Methodref          #29.#564      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-  #100 = String             #565          // Too few bytes available: missing\n-  #101 = Methodref          #47.#566      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #102 = String             #567          //  bytes (out of\n-  #103 = String             #568          // )\n-  #104 = Methodref          #468.#569     // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n-  #105 = String             #570          // write a number\n-  #106 = Fieldref           #29.#571      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgNumbersAsStrings:Z\n-  #107 = Methodref          #29.#572      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedShort:(S)V\n-  #108 = Methodref          #573.#574     // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[BI)I\n-  #109 = Methodref          #29.#575      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedInt:(I)V\n-  #110 = Methodref          #29.#576      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedLong:(J)V\n-  #111 = Methodref          #573.#577     // com/fasterxml/jackson/core/io/NumberOutput.outputLong:(J[BI)I\n-  #112 = Methodref          #578.#518     // java/math/BigInteger.toString:()Ljava/lang/String;\n-  #113 = Methodref          #29.#579      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedRaw:(Ljava/lang/String;)V\n-  #114 = Methodref          #29.#580      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:(Ljava/lang/String;)V\n-  #115 = Methodref          #573.#581     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(D)Z\n-  #116 = Fieldref           #476.#582     // com/fasterxml/jackson/core/JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #117 = Fieldref           #29.#583      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._features:I\n-  #118 = Methodref          #476.#584     // com/fasterxml/jackson/core/JsonGenerator$Feature.enabledIn:(I)Z\n-  #119 = Fieldref           #476.#585     // com/fasterxml/jackson/core/JsonGenerator$Feature.USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #120 = Methodref          #573.#586     // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n-  #121 = Methodref          #29.#587      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeString:(Ljava/lang/String;)V\n-  #122 = Methodref          #573.#588     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(F)Z\n-  #123 = Methodref          #573.#589     // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n-  #124 = Methodref          #29.#590      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #125 = Methodref          #29.#591      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedRaw:([CII)V\n-  #126 = String             #592          // write a boolean value\n-  #127 = Fieldref           #29.#593      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.TRUE_BYTES:[B\n-  #128 = Fieldref           #29.#594      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.FALSE_BYTES:[B\n-  #129 = Methodref          #595.#596     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #130 = String             #597          // write a null\n-  #131 = Methodref          #25.#598      // com/fasterxml/jackson/core/json/JsonWriteContext.writeValue:()I\n-  #132 = Methodref          #29.#599      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._verifyPrettyValueWrite:(Ljava/lang/String;I)V\n-  #133 = Fieldref           #29.#600      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n-  #134 = Methodref          #29.#601      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._reportCantWriteValueExpectName:(Ljava/lang/String;)V\n-  #135 = Fieldref           #476.#602     // com/fasterxml/jackson/core/JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #136 = Methodref          #603.#604     // java/io/OutputStream.flush:()V\n-  #137 = Methodref          #192.#605     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.close:()V\n-  #138 = Fieldref           #476.#606     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #139 = Methodref          #29.#607      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #140 = Methodref          #608.#512     // com/fasterxml/jackson/core/JsonStreamContext.inArray:()Z\n-  #141 = Methodref          #29.#609      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeEndArray:()V\n-  #142 = Methodref          #608.#527     // com/fasterxml/jackson/core/JsonStreamContext.inObject:()Z\n-  #143 = Methodref          #29.#610      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeEndObject:()V\n-  #144 = Class              #611          // java/io/IOException\n-  #145 = Methodref          #468.#612     // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n-  #146 = Fieldref           #476.#613     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #147 = Methodref          #603.#605     // java/io/OutputStream.close:()V\n-  #148 = Class              #614          // java/lang/RuntimeException\n-  #149 = Methodref          #615.#616     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n-  #150 = Methodref          #29.#617      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._releaseBuffers:()V\n-  #151 = Methodref          #468.#618     // com/fasterxml/jackson/core/io/IOContext.releaseWriteEncodingBuffer:([B)V\n-  #152 = Methodref          #468.#619     // com/fasterxml/jackson/core/io/IOContext.releaseConcatBuffer:([C)V\n-  #153 = Methodref          #603.#620     // java/io/OutputStream.write:([BII)V\n-  #154 = Fieldref           #29.#621      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #155 = Methodref          #29.#622      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomStringSegment2:([CII)V\n-  #156 = Fieldref           #29.#623      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._maximumNonEscapedChar:I\n-  #157 = Methodref          #29.#624      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment2:([CII)V\n-  #158 = Methodref          #29.#625      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegmentASCII2:([CII)V\n-  #159 = Methodref          #495.#626     // java/lang/String.charAt:(I)C\n-  #160 = Methodref          #29.#627      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomStringSegment2:(Ljava/lang/String;II)V\n-  #161 = Methodref          #29.#628      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment2:(Ljava/lang/String;II)V\n-  #162 = Methodref          #29.#629      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegmentASCII2:(Ljava/lang/String;II)V\n-  #163 = Methodref          #29.#630      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeGenericEscape:(II)I\n-  #164 = Methodref          #29.#631      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputMultiByteChar:(II)I\n+   #87 = Methodref          #29.#545      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeRawSegment:([CII)V\n+   #88 = InterfaceMethodref #404.#546     // com/fasterxml/jackson/core/SerializableString.appendUnquotedUTF8:([BI)I\n+   #89 = InterfaceMethodref #404.#547     // com/fasterxml/jackson/core/SerializableString.asUnquotedUTF8:()[B\n+   #90 = String             #548          // write a raw (unencoded) value\n+   #91 = Methodref          #29.#549      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._checkRangeBoundsForCharArray:([CII)V\n+   #92 = Methodref          #29.#550      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeSegmentedRaw:([CII)V\n+   #93 = Methodref          #29.#551      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputRawMultiByteChar:(I[CII)I\n+   #94 = String             #552          // write a binary value\n+   #95 = Methodref          #29.#553      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+   #96 = Fieldref           #29.#554      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+   #97 = Methodref          #251.#555     // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n+   #98 = Methodref          #29.#556      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+   #99 = Methodref          #29.#557      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+  #100 = String             #558          // Too few bytes available: missing\n+  #101 = Methodref          #47.#559      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #102 = String             #560          //  bytes (out of\n+  #103 = String             #561          // )\n+  #104 = Methodref          #251.#562     // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n+  #105 = String             #563          // write a number\n+  #106 = Fieldref           #29.#564      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgNumbersAsStrings:Z\n+  #107 = Methodref          #29.#565      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedShort:(S)V\n+  #108 = Methodref          #566.#567     // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[BI)I\n+  #109 = Methodref          #29.#568      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedInt:(I)V\n+  #110 = Methodref          #29.#569      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedLong:(J)V\n+  #111 = Methodref          #566.#570     // com/fasterxml/jackson/core/io/NumberOutput.outputLong:(J[BI)I\n+  #112 = Methodref          #571.#511     // java/math/BigInteger.toString:()Ljava/lang/String;\n+  #113 = Methodref          #29.#572      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedRaw:(Ljava/lang/String;)V\n+  #114 = Methodref          #29.#573      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeRaw:(Ljava/lang/String;)V\n+  #115 = Methodref          #566.#574     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(D)Z\n+  #116 = Fieldref           #471.#575     // com/fasterxml/jackson/core/JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #117 = Fieldref           #29.#576      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._features:I\n+  #118 = Methodref          #471.#577     // com/fasterxml/jackson/core/JsonGenerator$Feature.enabledIn:(I)Z\n+  #119 = Fieldref           #471.#578     // com/fasterxml/jackson/core/JsonGenerator$Feature.USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #120 = Methodref          #566.#579     // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n+  #121 = Methodref          #29.#580      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeString:(Ljava/lang/String;)V\n+  #122 = Methodref          #566.#581     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(F)Z\n+  #123 = Methodref          #566.#582     // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n+  #124 = Methodref          #29.#583      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #125 = Methodref          #29.#584      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeQuotedRaw:([CII)V\n+  #126 = String             #585          // write a boolean value\n+  #127 = Fieldref           #29.#586      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.TRUE_BYTES:[B\n+  #128 = Fieldref           #29.#587      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.FALSE_BYTES:[B\n+  #129 = Methodref          #588.#589     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #130 = String             #590          // write a null\n+  #131 = Methodref          #25.#591      // com/fasterxml/jackson/core/json/JsonWriteContext.writeValue:()I\n+  #132 = Methodref          #29.#592      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._verifyPrettyValueWrite:(Ljava/lang/String;I)V\n+  #133 = Fieldref           #29.#593      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n+  #134 = Methodref          #29.#594      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._reportCantWriteValueExpectName:(Ljava/lang/String;)V\n+  #135 = Fieldref           #471.#595     // com/fasterxml/jackson/core/JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #136 = Methodref          #253.#596     // java/io/OutputStream.flush:()V\n+  #137 = Methodref          #192.#597     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.close:()V\n+  #138 = Fieldref           #471.#598     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #139 = Methodref          #29.#599      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #140 = Methodref          #381.#505     // com/fasterxml/jackson/core/JsonStreamContext.inArray:()Z\n+  #141 = Methodref          #29.#600      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeEndArray:()V\n+  #142 = Methodref          #381.#520     // com/fasterxml/jackson/core/JsonStreamContext.inObject:()Z\n+  #143 = Methodref          #29.#601      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.writeEndObject:()V\n+  #144 = Class              #602          // java/io/IOException\n+  #145 = Methodref          #251.#603     // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n+  #146 = Fieldref           #471.#604     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #147 = Methodref          #253.#597     // java/io/OutputStream.close:()V\n+  #148 = Class              #605          // java/lang/RuntimeException\n+  #149 = Methodref          #382.#606     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+  #150 = Methodref          #29.#607      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._releaseBuffers:()V\n+  #151 = Methodref          #251.#608     // com/fasterxml/jackson/core/io/IOContext.releaseWriteEncodingBuffer:([B)V\n+  #152 = Methodref          #251.#609     // com/fasterxml/jackson/core/io/IOContext.releaseConcatBuffer:([C)V\n+  #153 = Methodref          #253.#610     // java/io/OutputStream.write:([BII)V\n+  #154 = Fieldref           #29.#611      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #155 = Methodref          #29.#612      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomStringSegment2:([CII)V\n+  #156 = Fieldref           #29.#613      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._maximumNonEscapedChar:I\n+  #157 = Methodref          #29.#614      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment2:([CII)V\n+  #158 = Methodref          #29.#615      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegmentASCII2:([CII)V\n+  #159 = Methodref          #399.#616     // java/lang/String.charAt:(I)C\n+  #160 = Methodref          #29.#617      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomStringSegment2:(Ljava/lang/String;II)V\n+  #161 = Methodref          #29.#618      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegment2:(Ljava/lang/String;II)V\n+  #162 = Methodref          #29.#619      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeStringSegmentASCII2:(Ljava/lang/String;II)V\n+  #163 = Methodref          #29.#620      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeGenericEscape:(II)I\n+  #164 = Methodref          #29.#621      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputMultiByteChar:(II)I\n   #165 = Integer            65535\n-  #166 = Class              #632          // com/fasterxml/jackson/core/io/CharacterEscapes\n-  #167 = Methodref          #166.#633     // com/fasterxml/jackson/core/io/CharacterEscapes.getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #168 = String             #634          // Invalid custom escape definitions; custom escape not found for character code 0x\n-  #169 = Methodref          #73.#635      // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-  #170 = String             #636          // , although was supposed to have one\n-  #171 = Methodref          #29.#637      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomEscape:([BILcom/fasterxml/jackson/core/SerializableString;I)I\n-  #172 = Methodref          #29.#638      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._handleLongCustomEscape:([BII[BI)I\n-  #173 = Methodref          #29.#639      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segment2:([BII)V\n-  #174 = Methodref          #640.#641     // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n-  #175 = Methodref          #640.#642     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(I[BI)I\n-  #176 = Methodref          #640.#643     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(II[BI)I\n-  #177 = Methodref          #29.#644      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._readMore:(Ljava/io/InputStream;[BIII)I\n-  #178 = Methodref          #645.#646     // java/io/InputStream.read:([BII)I\n+  #166 = Class              #622          // com/fasterxml/jackson/core/io/CharacterEscapes\n+  #167 = Methodref          #166.#623     // com/fasterxml/jackson/core/io/CharacterEscapes.getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #168 = String             #624          // Invalid custom escape definitions; custom escape not found for character code 0x\n+  #169 = Methodref          #73.#625      // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #170 = String             #626          // , although was supposed to have one\n+  #171 = Methodref          #29.#627      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeCustomEscape:([BILcom/fasterxml/jackson/core/SerializableString;I)I\n+  #172 = Methodref          #29.#628      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._handleLongCustomEscape:([BII[BI)I\n+  #173 = Methodref          #29.#629      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._writeUTF8Segment2:([BII)V\n+  #174 = Methodref          #335.#630     // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n+  #175 = Methodref          #335.#631     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(I[BI)I\n+  #176 = Methodref          #335.#632     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(II[BI)I\n+  #177 = Methodref          #29.#633      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._readMore:(Ljava/io/InputStream;[BIII)I\n+  #178 = Methodref          #336.#634     // java/io/InputStream.read:([BII)I\n   #179 = Integer            57343\n-  #180 = String             #647          // Split surrogate on writeRaw() input (last character): first character 0x%4x\n-  #181 = Class              #648          // java/lang/Object\n-  #182 = Methodref          #73.#649      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #183 = Methodref          #495.#650     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #184 = Methodref          #29.#651      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputSurrogates:(II)V\n-  #185 = Methodref          #29.#652      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._decodeSurrogate:(II)I\n-  #186 = Methodref          #29.#653      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.getHexBytes:()[B\n-  #187 = Fieldref           #29.#654      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.NULL_BYTES:[B\n-  #188 = Fieldref           #29.#655      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgWriteHexUppercase:Z\n-  #189 = Fieldref           #29.#656      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.HEX_BYTES_UPPER:[B\n-  #190 = Fieldref           #29.#657      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.HEX_BYTES_LOWER:[B\n-  #191 = Methodref          #464.#658     // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n-  #192 = Class              #659          // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n+  #180 = String             #635          // Split surrogate on writeRaw() input (last character): first character 0x%4x\n+  #181 = Class              #636          // java/lang/Object\n+  #182 = Methodref          #73.#637      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #183 = Methodref          #399.#638     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #184 = Methodref          #29.#639      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._outputSurrogates:(II)V\n+  #185 = Methodref          #29.#640      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._decodeSurrogate:(II)I\n+  #186 = Methodref          #29.#641      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.getHexBytes:()[B\n+  #187 = Fieldref           #29.#642      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.NULL_BYTES:[B\n+  #188 = Fieldref           #29.#643      // com/fasterxml/jackson/core/json/UTF8JsonGenerator._cfgWriteHexUppercase:Z\n+  #189 = Fieldref           #29.#644      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.HEX_BYTES_UPPER:[B\n+  #190 = Fieldref           #29.#645      // com/fasterxml/jackson/core/json/UTF8JsonGenerator.HEX_BYTES_LOWER:[B\n+  #191 = Methodref          #460.#646     // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n+  #192 = Class              #647          // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n   #193 = Utf8               BYTE_u\n   #194 = Utf8               B\n   #195 = Utf8               ConstantValue\n   #196 = Integer            117\n   #197 = Utf8               BYTE_0\n   #198 = Integer            48\n   #199 = Utf8               BYTE_LBRACKET\n@@ -254,558 +254,546 @@\n   #244 = Utf8               features\n   #245 = Utf8               codec\n   #246 = Utf8               Lcom/fasterxml/jackson/core/ObjectCodec;\n   #247 = Utf8               out\n   #248 = Utf8               quoteChar\n   #249 = Utf8               C\n   #250 = Utf8               StackMapTable\n-  #251 = Class              #492          // com/fasterxml/jackson/core/json/UTF8JsonGenerator\n-  #252 = Class              #660          // com/fasterxml/jackson/core/io/IOContext\n-  #253 = Class              #661          // com/fasterxml/jackson/core/ObjectCodec\n-  #254 = Class              #662          // java/io/OutputStream\n-  #255 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n-  #256 = Utf8               outputBuffer\n-  #257 = Utf8               outputOffset\n-  #258 = Utf8               bufferRecyclable\n-  #259 = Class              #217          // \"[B\"\n-  #260 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;)V\n-  #261 = Utf8               Deprecated\n-  #262 = Utf8               RuntimeVisibleAnnotations\n-  #263 = Utf8               Ljava/lang/Deprecated;\n-  #264 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;[BIZ)V\n-  #265 = Utf8               getOutputTarget\n-  #266 = Utf8               ()Ljava/lang/Object;\n-  #267 = Utf8               getOutputBuffered\n-  #268 = Utf8               ()I\n-  #269 = Utf8               writeFieldName\n-  #270 = Utf8               (Ljava/lang/String;)V\n-  #271 = Utf8               name\n-  #272 = Utf8               Ljava/lang/String;\n-  #273 = Utf8               status\n-  #274 = Utf8               len\n-  #275 = Utf8               Exceptions\n-  #276 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #277 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n-  #278 = Utf8               _writeUnq\n-  #279 = Utf8               writeStartArray\n-  #280 = Utf8               ()V\n-  #281 = Utf8               (Ljava/lang/Object;)V\n-  #282 = Utf8               currentValue\n-  #283 = Utf8               Ljava/lang/Object;\n-  #284 = Utf8               (Ljava/lang/Object;I)V\n-  #285 = Utf8               size\n-  #286 = Utf8               writeEndArray\n-  #287 = Utf8               writeStartObject\n-  #288 = Utf8               forValue\n-  #289 = Utf8               Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #290 = Class              #488          // com/fasterxml/jackson/core/json/JsonWriteContext\n-  #291 = Utf8               writeEndObject\n-  #292 = Utf8               _writePPFieldName\n-  #293 = Utf8               addQuotes\n-  #294 = Utf8               writeString\n-  #295 = Utf8               text\n-  #296 = Utf8               (Ljava/io/Reader;I)V\n-  #297 = Utf8               toReadNow\n-  #298 = Utf8               numRead\n-  #299 = Utf8               reader\n-  #300 = Utf8               Ljava/io/Reader;\n-  #301 = Utf8               toRead\n-  #302 = Utf8               buf\n-  #303 = Class              #230          // \"[C\"\n-  #304 = Utf8               ([CII)V\n-  #305 = Utf8               offset\n-  #306 = Utf8               writeRawUTF8String\n-  #307 = Utf8               ([BII)V\n-  #308 = Utf8               writeUTF8String\n-  #309 = Utf8               writeRaw\n-  #310 = Utf8               (Ljava/lang/String;II)V\n-  #311 = Utf8               ch\n-  #312 = Utf8               len2\n-  #313 = Utf8               cbufLen\n-  #314 = Utf8               maxChunk\n-  #315 = Utf8               maxBytes\n-  #316 = Utf8               writeRawValue\n-  #317 = Utf8               len3\n-  #318 = Utf8               cbuf\n-  #319 = Utf8               (C)V\n-  #320 = Utf8               bbuf\n-  #321 = Utf8               _writeSegmentedRaw\n-  #322 = Utf8               end\n-  #323 = Utf8               inputEnd\n-  #324 = Utf8               _writeRawSegment\n-  #325 = Utf8               writeBinary\n-  #326 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #327 = Utf8               b64variant\n-  #328 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #329 = Utf8               data\n-  #330 = Class              #663          // com/fasterxml/jackson/core/JsonGenerationException\n-  #331 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #332 = Utf8               bytes\n-  #333 = Utf8               missing\n-  #334 = Utf8               Ljava/io/InputStream;\n-  #335 = Utf8               dataLength\n-  #336 = Utf8               encodingBuffer\n-  #337 = Class              #664          // com/fasterxml/jackson/core/Base64Variant\n-  #338 = Class              #665          // java/io/InputStream\n-  #339 = Class              #666          // java/lang/Throwable\n-  #340 = Utf8               writeNumber\n-  #341 = Utf8               (S)V\n-  #342 = Utf8               s\n-  #343 = Utf8               S\n-  #344 = Utf8               _writeQuotedShort\n-  #345 = Utf8               (I)V\n-  #346 = Utf8               i\n-  #347 = Utf8               _writeQuotedInt\n-  #348 = Utf8               (J)V\n-  #349 = Utf8               l\n-  #350 = Utf8               J\n-  #351 = Utf8               _writeQuotedLong\n-  #352 = Utf8               (Ljava/math/BigInteger;)V\n-  #353 = Utf8               value\n-  #354 = Utf8               Ljava/math/BigInteger;\n-  #355 = Utf8               (D)V\n-  #356 = Utf8               d\n-  #357 = Utf8               D\n-  #358 = Utf8               (F)V\n-  #359 = Utf8               f\n-  #360 = Utf8               F\n-  #361 = Utf8               (Ljava/math/BigDecimal;)V\n-  #362 = Utf8               Ljava/math/BigDecimal;\n-  #363 = Utf8               encodedValue\n-  #364 = Utf8               encodedValueBuffer\n-  #365 = Utf8               length\n-  #366 = Utf8               _writeQuotedRaw\n-  #367 = Utf8               writeBoolean\n-  #368 = Utf8               (Z)V\n-  #369 = Utf8               state\n-  #370 = Utf8               keyword\n-  #371 = Utf8               writeNull\n-  #372 = Utf8               _verifyValueWrite\n-  #373 = Utf8               b\n-  #374 = Utf8               raw\n-  #375 = Utf8               typeMsg\n-  #376 = Utf8               flush\n-  #377 = Utf8               close\n-  #378 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #379 = Utf8               e\n-  #380 = Utf8               Ljava/io/IOException;\n-  #381 = Utf8               Ljava/lang/Exception;\n-  #382 = Utf8               flushFail\n-  #383 = Class              #611          // java/io/IOException\n-  #384 = Class              #667          // com/fasterxml/jackson/core/JsonStreamContext\n-  #385 = Class              #668          // java/lang/Exception\n-  #386 = Utf8               _releaseBuffers\n-  #387 = Utf8               _writeBytes\n-  #388 = Utf8               ([B)V\n-  #389 = Utf8               _writeStringSegments\n-  #390 = Utf8               (Ljava/lang/String;Z)V\n-  #391 = Utf8               left\n-  #392 = Utf8               totalLen\n-  #393 = Utf8               _writeStringSegment\n-  #394 = Utf8               outputPtr\n-  #395 = Utf8               escCodes\n-  #396 = Utf8               [I\n-  #397 = Class              #396          // \"[I\"\n-  #398 = Utf8               _writeStringSegment2\n-  #399 = Utf8               escape\n-  #400 = Utf8               _writeStringSegmentASCII2\n-  #401 = Utf8               maxUnescaped\n-  #402 = Class              #669          // java/lang/String\n-  #403 = Utf8               _writeCustomStringSegment2\n-  #404 = Utf8               esc\n-  #405 = Utf8               customEscapes\n-  #406 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #407 = Class              #632          // com/fasterxml/jackson/core/io/CharacterEscapes\n-  #408 = Class              #670          // com/fasterxml/jackson/core/SerializableString\n-  #409 = Utf8               _writeCustomEscape\n-  #410 = Utf8               ([BILcom/fasterxml/jackson/core/SerializableString;I)I\n-  #411 = Utf8               remainingChars\n-  #412 = Utf8               _handleLongCustomEscape\n-  #413 = Utf8               ([BII[BI)I\n-  #414 = Utf8               outputEnd\n-  #415 = Utf8               _writeUTF8Segments\n-  #416 = Utf8               utf8\n-  #417 = Utf8               _writeUTF8Segment\n-  #418 = Utf8               ptr\n-  #419 = Utf8               _writeUTF8Segment2\n-  #420 = Utf8               _writeBinary\n-  #421 = Utf8               b24\n-  #422 = Utf8               input\n-  #423 = Utf8               inputPtr\n-  #424 = Utf8               safeInputEnd\n-  #425 = Utf8               safeOutputEnd\n-  #426 = Utf8               chunksBeforeLF\n-  #427 = Utf8               inputLeft\n-  #428 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-  #429 = Utf8               amount\n-  #430 = Utf8               readBuffer\n-  #431 = Utf8               bytesLeft\n-  #432 = Utf8               lastFullOffset\n-  #433 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-  #434 = Utf8               bytesDone\n-  #435 = Utf8               _readMore\n-  #436 = Utf8               (Ljava/io/InputStream;[BIII)I\n-  #437 = Utf8               count\n-  #438 = Utf8               in\n-  #439 = Utf8               maxRead\n-  #440 = Utf8               _outputRawMultiByteChar\n-  #441 = Utf8               (I[CII)I\n-  #442 = Utf8               inputOffset\n-  #443 = Utf8               _outputSurrogates\n-  #444 = Utf8               (II)V\n-  #445 = Utf8               surr1\n-  #446 = Utf8               surr2\n-  #447 = Utf8               c\n-  #448 = Utf8               _outputMultiByteChar\n-  #449 = Utf8               (II)I\n-  #450 = Utf8               HEX_CHARS\n-  #451 = Utf8               _writeNull\n-  #452 = Utf8               _writeGenericEscape\n-  #453 = Utf8               hi\n-  #454 = Utf8               charToEscape\n-  #455 = Utf8               _flushBuffer\n-  #456 = Utf8               getHexBytes\n-  #457 = Utf8               ()[B\n-  #458 = Utf8               <clinit>\n-  #459 = Utf8               SourceFile\n-  #460 = Utf8               UTF8JsonGenerator.java\n-  #461 = NameAndType        #235:#671     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-  #462 = NameAndType        #222:#223     // _outputStream:Ljava/io/OutputStream;\n-  #463 = NameAndType        #224:#194     // _quoteChar:B\n-  #464 = Class              #672          // com/fasterxml/jackson/core/io/CharTypes\n-  #465 = NameAndType        #673:#674     // get7BitOutputEscapes:(I)[I\n-  #466 = NameAndType        #675:#396     // _outputEscapes:[I\n-  #467 = NameAndType        #233:#234     // _bufferRecyclable:Z\n-  #468 = Class              #660          // com/fasterxml/jackson/core/io/IOContext\n-  #469 = NameAndType        #676:#457     // allocWriteEncodingBuffer:()[B\n-  #470 = NameAndType        #225:#217     // _outputBuffer:[B\n-  #471 = NameAndType        #227:#214     // _outputEnd:I\n-  #472 = NameAndType        #228:#214     // _outputMaxContiguous:I\n-  #473 = NameAndType        #677:#678     // allocConcatBuffer:()[C\n-  #474 = NameAndType        #229:#230     // _charBuffer:[C\n-  #475 = NameAndType        #231:#214     // _charBufferLength:I\n-  #476 = Class              #680          // com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #477 = NameAndType        #683:#684     // ESCAPE_NON_ASCII:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #478 = NameAndType        #685:#686     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #479 = NameAndType        #687:#688     // setHighestNonEscapedChar:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #480 = NameAndType        #226:#214     // _outputTail:I\n-  #481 = Utf8               com/fasterxml/jackson/core/JsonFactory\n-  #482 = NameAndType        #235:#236     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C)V\n-  #483 = NameAndType        #235:#255     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n-  #484 = NameAndType        #689:#690     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #485 = NameAndType        #292:#270     // _writePPFieldName:(Ljava/lang/String;)V\n-  #486 = NameAndType        #691:#289     // _writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #487 = NameAndType        #269:#692     // writeFieldName:(Ljava/lang/String;)I\n-  #488 = Utf8               com/fasterxml/jackson/core/json/JsonWriteContext\n-  #489 = Utf8               Can not write a field name, expecting a value\n-  #490 = NameAndType        #693:#270     // _reportError:(Ljava/lang/String;)V\n-  #491 = NameAndType        #455:#280     // _flushBuffer:()V\n-  #492 = Utf8               com/fasterxml/jackson/core/json/UTF8JsonGenerator\n-  #493 = NameAndType        #694:#234     // _cfgUnqNames:Z\n-  #494 = NameAndType        #389:#390     // _writeStringSegments:(Ljava/lang/String;Z)V\n-  #495 = Class              #669          // java/lang/String\n-  #496 = NameAndType        #365:#268     // length:()I\n-  #497 = NameAndType        #393:#310     // _writeStringSegment:(Ljava/lang/String;II)V\n-  #498 = NameAndType        #389:#310     // _writeStringSegments:(Ljava/lang/String;II)V\n-  #499 = NameAndType        #292:#276     // _writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #500 = Class              #670          // com/fasterxml/jackson/core/SerializableString\n-  #501 = NameAndType        #695:#696     // getValue:()Ljava/lang/String;\n-  #502 = NameAndType        #278:#276     // _writeUnq:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #503 = NameAndType        #697:#698     // appendQuotedUTF8:([BI)I\n-  #504 = NameAndType        #699:#457     // asQuotedUTF8:()[B\n-  #505 = NameAndType        #387:#388     // _writeBytes:([B)V\n-  #506 = Utf8               start an array\n-  #507 = NameAndType        #372:#270     // _verifyValueWrite:(Ljava/lang/String;)V\n-  #508 = NameAndType        #700:#701     // createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #509 = Class              #702          // com/fasterxml/jackson/core/PrettyPrinter\n-  #510 = NameAndType        #279:#703     // writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #511 = NameAndType        #700:#704     // createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #512 = NameAndType        #705:#706     // inArray:()Z\n-  #513 = Utf8               java/lang/StringBuilder\n-  #514 = NameAndType        #235:#280     // \"<init>\":()V\n-  #515 = Utf8               Current context not Array but\n-  #516 = NameAndType        #707:#708     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #517 = NameAndType        #709:#696     // typeDesc:()Ljava/lang/String;\n-  #518 = NameAndType        #710:#696     // toString:()Ljava/lang/String;\n-  #519 = NameAndType        #711:#268     // getEntryCount:()I\n-  #520 = NameAndType        #286:#712     // writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #521 = NameAndType        #713:#701     // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #522 = Utf8               start an object\n-  #523 = NameAndType        #714:#701     // createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #524 = NameAndType        #287:#703     // writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #525 = NameAndType        #714:#704     // createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #526 = NameAndType        #287:#281     // writeStartObject:(Ljava/lang/Object;)V\n-  #527 = NameAndType        #715:#706     // inObject:()Z\n-  #528 = Utf8               Current context not Object but\n-  #529 = NameAndType        #291:#712     // writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #530 = NameAndType        #716:#703     // writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #531 = NameAndType        #717:#703     // beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #532 = NameAndType        #718:#719     // getChars:(II[CI)V\n-  #533 = NameAndType        #393:#304     // _writeStringSegment:([CII)V\n-  #534 = NameAndType        #389:#304     // _writeStringSegments:([CII)V\n-  #535 = Utf8               com/fasterxml/jackson/core/base/GeneratorBase\n-  #536 = Utf8               write a string\n-  #537 = NameAndType        #451:#280     // _writeNull:()V\n-  #538 = Utf8               null reader\n-  #539 = Utf8               java/lang/Integer\n-  #540 = Class              #720          // java/lang/Math\n-  #541 = NameAndType        #721:#449     // min:(II)I\n-  #542 = Class              #722          // java/io/Reader\n-  #543 = NameAndType        #723:#724     // read:([CII)I\n-  #544 = Utf8               Didn\\'t read enough from reader\n-  #545 = NameAndType        #725:#307     // _checkRangeBoundsForByteArray:([BII)V\n-  #546 = NameAndType        #387:#307     // _writeBytes:([BII)V\n-  #547 = NameAndType        #417:#307     // _writeUTF8Segment:([BII)V\n-  #548 = NameAndType        #415:#307     // _writeUTF8Segments:([BII)V\n-  #549 = NameAndType        #309:#304     // writeRaw:([CII)V\n-  #550 = NameAndType        #309:#310     // writeRaw:(Ljava/lang/String;II)V\n-  #551 = NameAndType        #726:#310     // _checkRangeBoundsForString:(Ljava/lang/String;II)V\n-  #552 = NameAndType        #324:#304     // _writeRawSegment:([CII)V\n-  #553 = NameAndType        #727:#698     // appendUnquotedUTF8:([BI)I\n-  #554 = NameAndType        #728:#457     // asUnquotedUTF8:()[B\n-  #555 = Utf8               write a raw (unencoded) value\n-  #556 = NameAndType        #729:#304     // _checkRangeBoundsForCharArray:([CII)V\n-  #557 = NameAndType        #321:#304     // _writeSegmentedRaw:([CII)V\n-  #558 = NameAndType        #440:#441     // _outputRawMultiByteChar:(I[CII)I\n-  #559 = Utf8               write a binary value\n-  #560 = NameAndType        #420:#326     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #561 = NameAndType        #730:#243     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-  #562 = NameAndType        #731:#457     // allocBase64Buffer:()[B\n-  #563 = NameAndType        #420:#433     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-  #564 = NameAndType        #420:#428     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-  #565 = Utf8               Too few bytes available: missing\n-  #566 = NameAndType        #707:#732     // append:(I)Ljava/lang/StringBuilder;\n-  #567 = Utf8                bytes (out of\n-  #568 = Utf8               )\n-  #569 = NameAndType        #733:#388     // releaseBase64Buffer:([B)V\n-  #570 = Utf8               write a number\n-  #571 = NameAndType        #734:#234     // _cfgNumbersAsStrings:Z\n-  #572 = NameAndType        #344:#341     // _writeQuotedShort:(S)V\n-  #573 = Class              #735          // com/fasterxml/jackson/core/io/NumberOutput\n-  #574 = NameAndType        #736:#737     // outputInt:(I[BI)I\n-  #575 = NameAndType        #347:#345     // _writeQuotedInt:(I)V\n-  #576 = NameAndType        #351:#348     // _writeQuotedLong:(J)V\n-  #577 = NameAndType        #738:#739     // outputLong:(J[BI)I\n-  #578 = Class              #740          // java/math/BigInteger\n-  #579 = NameAndType        #366:#270     // _writeQuotedRaw:(Ljava/lang/String;)V\n-  #580 = NameAndType        #309:#270     // writeRaw:(Ljava/lang/String;)V\n-  #581 = NameAndType        #741:#742     // notFinite:(D)Z\n-  #582 = NameAndType        #743:#684     // QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #583 = NameAndType        #744:#214     // _features:I\n-  #584 = NameAndType        #745:#746     // enabledIn:(I)Z\n-  #585 = NameAndType        #747:#684     // USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #586 = NameAndType        #710:#748     // toString:(DZ)Ljava/lang/String;\n-  #587 = NameAndType        #294:#270     // writeString:(Ljava/lang/String;)V\n-  #588 = NameAndType        #741:#749     // notFinite:(F)Z\n-  #589 = NameAndType        #710:#750     // toString:(FZ)Ljava/lang/String;\n-  #590 = NameAndType        #751:#752     // _asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #591 = NameAndType        #366:#304     // _writeQuotedRaw:([CII)V\n-  #592 = Utf8               write a boolean value\n-  #593 = NameAndType        #220:#217     // TRUE_BYTES:[B\n-  #594 = NameAndType        #221:#217     // FALSE_BYTES:[B\n-  #595 = Class              #753          // java/lang/System\n-  #596 = NameAndType        #754:#755     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #597 = Utf8               write a null\n-  #598 = NameAndType        #756:#268     // writeValue:()I\n-  #599 = NameAndType        #757:#758     // _verifyPrettyValueWrite:(Ljava/lang/String;I)V\n-  #600 = NameAndType        #759:#277     // _rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n-  #601 = NameAndType        #760:#270     // _reportCantWriteValueExpectName:(Ljava/lang/String;)V\n-  #602 = NameAndType        #761:#684     // FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #603 = Class              #662          // java/io/OutputStream\n-  #604 = NameAndType        #376:#280     // flush:()V\n-  #605 = NameAndType        #377:#280     // close:()V\n-  #606 = NameAndType        #762:#684     // AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #607 = NameAndType        #763:#764     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #608 = Class              #667          // com/fasterxml/jackson/core/JsonStreamContext\n-  #609 = NameAndType        #286:#280     // writeEndArray:()V\n-  #610 = NameAndType        #291:#280     // writeEndObject:()V\n-  #611 = Utf8               java/io/IOException\n-  #612 = NameAndType        #765:#706     // isResourceManaged:()Z\n-  #613 = NameAndType        #766:#684     // AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #614 = Utf8               java/lang/RuntimeException\n-  #615 = Class              #668          // java/lang/Exception\n-  #616 = NameAndType        #767:#768     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #617 = NameAndType        #386:#280     // _releaseBuffers:()V\n-  #618 = NameAndType        #769:#388     // releaseWriteEncodingBuffer:([B)V\n-  #619 = NameAndType        #770:#771     // releaseConcatBuffer:([C)V\n-  #620 = NameAndType        #772:#307     // write:([BII)V\n-  #621 = NameAndType        #773:#406     // _characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #622 = NameAndType        #403:#304     // _writeCustomStringSegment2:([CII)V\n-  #623 = NameAndType        #774:#214     // _maximumNonEscapedChar:I\n-  #624 = NameAndType        #398:#304     // _writeStringSegment2:([CII)V\n-  #625 = NameAndType        #400:#304     // _writeStringSegmentASCII2:([CII)V\n-  #626 = NameAndType        #775:#776     // charAt:(I)C\n-  #627 = NameAndType        #403:#310     // _writeCustomStringSegment2:(Ljava/lang/String;II)V\n-  #628 = NameAndType        #398:#310     // _writeStringSegment2:(Ljava/lang/String;II)V\n-  #629 = NameAndType        #400:#310     // _writeStringSegmentASCII2:(Ljava/lang/String;II)V\n-  #630 = NameAndType        #452:#449     // _writeGenericEscape:(II)I\n-  #631 = NameAndType        #448:#449     // _outputMultiByteChar:(II)I\n-  #632 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n-  #633 = NameAndType        #777:#778     // getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #634 = Utf8               Invalid custom escape definitions; custom escape not found for character code 0x\n-  #635 = NameAndType        #779:#780     // toHexString:(I)Ljava/lang/String;\n-  #636 = Utf8               , although was supposed to have one\n-  #637 = NameAndType        #409:#410     // _writeCustomEscape:([BILcom/fasterxml/jackson/core/SerializableString;I)I\n-  #638 = NameAndType        #412:#413     // _handleLongCustomEscape:([BII[BI)I\n-  #639 = NameAndType        #419:#307     // _writeUTF8Segment2:([BII)V\n-  #640 = Class              #664          // com/fasterxml/jackson/core/Base64Variant\n-  #641 = NameAndType        #781:#268     // getMaxLineLength:()I\n-  #642 = NameAndType        #782:#737     // encodeBase64Chunk:(I[BI)I\n-  #643 = NameAndType        #783:#784     // encodeBase64Partial:(II[BI)I\n-  #644 = NameAndType        #435:#436     // _readMore:(Ljava/io/InputStream;[BIII)I\n-  #645 = Class              #665          // java/io/InputStream\n-  #646 = NameAndType        #723:#785     // read:([BII)I\n-  #647 = Utf8               Split surrogate on writeRaw() input (last character): first character 0x%4x\n-  #648 = Utf8               java/lang/Object\n-  #649 = NameAndType        #786:#787     // valueOf:(I)Ljava/lang/Integer;\n-  #650 = NameAndType        #788:#789     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #651 = NameAndType        #443:#444     // _outputSurrogates:(II)V\n-  #652 = NameAndType        #790:#449     // _decodeSurrogate:(II)I\n-  #653 = NameAndType        #456:#457     // getHexBytes:()[B\n-  #654 = NameAndType        #219:#217     // NULL_BYTES:[B\n-  #655 = NameAndType        #791:#234     // _cfgWriteHexUppercase:Z\n-  #656 = NameAndType        #216:#217     // HEX_BYTES_UPPER:[B\n-  #657 = NameAndType        #218:#217     // HEX_BYTES_LOWER:[B\n-  #658 = NameAndType        #792:#793     // copyHexBytes:(Z)[B\n-  #659 = Utf8               com/fasterxml/jackson/core/json/JsonGeneratorImpl\n-  #660 = Utf8               com/fasterxml/jackson/core/io/IOContext\n-  #661 = Utf8               com/fasterxml/jackson/core/ObjectCodec\n-  #662 = Utf8               java/io/OutputStream\n-  #663 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n-  #664 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #665 = Utf8               java/io/InputStream\n-  #666 = Utf8               java/lang/Throwable\n-  #667 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n-  #668 = Utf8               java/lang/Exception\n-  #669 = Utf8               java/lang/String\n-  #670 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #671 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-  #672 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n-  #673 = Utf8               get7BitOutputEscapes\n-  #674 = Utf8               (I)[I\n-  #675 = Utf8               _outputEscapes\n-  #676 = Utf8               allocWriteEncodingBuffer\n-  #677 = Utf8               allocConcatBuffer\n-  #678 = Utf8               ()[C\n-  #679 = Class              #794          // com/fasterxml/jackson/core/JsonGenerator\n-  #680 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #681 = Utf8               Feature\n-  #682 = Utf8               InnerClasses\n-  #683 = Utf8               ESCAPE_NON_ASCII\n-  #684 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #685 = Utf8               isEnabled\n-  #686 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #687 = Utf8               setHighestNonEscapedChar\n-  #688 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #689 = Utf8               _cfgPrettyPrinter\n-  #690 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #691 = Utf8               _writeContext\n-  #692 = Utf8               (Ljava/lang/String;)I\n-  #693 = Utf8               _reportError\n-  #694 = Utf8               _cfgUnqNames\n-  #695 = Utf8               getValue\n-  #696 = Utf8               ()Ljava/lang/String;\n-  #697 = Utf8               appendQuotedUTF8\n-  #698 = Utf8               ([BI)I\n-  #699 = Utf8               asQuotedUTF8\n-  #700 = Utf8               createChildArrayContext\n-  #701 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #702 = Utf8               com/fasterxml/jackson/core/PrettyPrinter\n-  #703 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #704 = Utf8               (Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #705 = Utf8               inArray\n-  #706 = Utf8               ()Z\n-  #707 = Utf8               append\n-  #708 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #709 = Utf8               typeDesc\n-  #710 = Utf8               toString\n-  #711 = Utf8               getEntryCount\n-  #712 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #713 = Utf8               clearAndGetParent\n-  #714 = Utf8               createChildObjectContext\n-  #715 = Utf8               inObject\n-  #716 = Utf8               writeObjectEntrySeparator\n-  #717 = Utf8               beforeObjectEntries\n-  #718 = Utf8               getChars\n-  #719 = Utf8               (II[CI)V\n-  #720 = Utf8               java/lang/Math\n-  #721 = Utf8               min\n-  #722 = Utf8               java/io/Reader\n-  #723 = Utf8               read\n-  #724 = Utf8               ([CII)I\n-  #725 = Utf8               _checkRangeBoundsForByteArray\n-  #726 = Utf8               _checkRangeBoundsForString\n-  #727 = Utf8               appendUnquotedUTF8\n-  #728 = Utf8               asUnquotedUTF8\n-  #729 = Utf8               _checkRangeBoundsForCharArray\n-  #730 = Utf8               _ioContext\n-  #731 = Utf8               allocBase64Buffer\n-  #732 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #733 = Utf8               releaseBase64Buffer\n-  #734 = Utf8               _cfgNumbersAsStrings\n-  #735 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n-  #736 = Utf8               outputInt\n-  #737 = Utf8               (I[BI)I\n-  #738 = Utf8               outputLong\n-  #739 = Utf8               (J[BI)I\n-  #740 = Utf8               java/math/BigInteger\n-  #741 = Utf8               notFinite\n-  #742 = Utf8               (D)Z\n-  #743 = Utf8               QUOTE_NON_NUMERIC_NUMBERS\n-  #744 = Utf8               _features\n-  #745 = Utf8               enabledIn\n-  #746 = Utf8               (I)Z\n-  #747 = Utf8               USE_FAST_DOUBLE_WRITER\n-  #748 = Utf8               (DZ)Ljava/lang/String;\n-  #749 = Utf8               (F)Z\n-  #750 = Utf8               (FZ)Ljava/lang/String;\n-  #751 = Utf8               _asString\n-  #752 = Utf8               (Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #753 = Utf8               java/lang/System\n-  #754 = Utf8               arraycopy\n-  #755 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #756 = Utf8               writeValue\n-  #757 = Utf8               _verifyPrettyValueWrite\n-  #758 = Utf8               (Ljava/lang/String;I)V\n-  #759 = Utf8               _rootValueSeparator\n-  #760 = Utf8               _reportCantWriteValueExpectName\n-  #761 = Utf8               FLUSH_PASSED_TO_STREAM\n-  #762 = Utf8               AUTO_CLOSE_JSON_CONTENT\n-  #763 = Utf8               getOutputContext\n-  #764 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #765 = Utf8               isResourceManaged\n-  #766 = Utf8               AUTO_CLOSE_TARGET\n-  #767 = Utf8               addSuppressed\n-  #768 = Utf8               (Ljava/lang/Throwable;)V\n-  #769 = Utf8               releaseWriteEncodingBuffer\n-  #770 = Utf8               releaseConcatBuffer\n-  #771 = Utf8               ([C)V\n-  #772 = Utf8               write\n-  #773 = Utf8               _characterEscapes\n-  #774 = Utf8               _maximumNonEscapedChar\n-  #775 = Utf8               charAt\n-  #776 = Utf8               (I)C\n-  #777 = Utf8               getEscapeSequence\n-  #778 = Utf8               (I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #779 = Utf8               toHexString\n-  #780 = Utf8               (I)Ljava/lang/String;\n-  #781 = Utf8               getMaxLineLength\n-  #782 = Utf8               encodeBase64Chunk\n-  #783 = Utf8               encodeBase64Partial\n-  #784 = Utf8               (II[BI)I\n-  #785 = Utf8               ([BII)I\n-  #786 = Utf8               valueOf\n-  #787 = Utf8               (I)Ljava/lang/Integer;\n-  #788 = Utf8               format\n-  #789 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #790 = Utf8               _decodeSurrogate\n-  #791 = Utf8               _cfgWriteHexUppercase\n-  #792 = Utf8               copyHexBytes\n-  #793 = Utf8               (Z)[B\n-  #794 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #251 = Class              #648          // com/fasterxml/jackson/core/io/IOContext\n+  #252 = Class              #649          // com/fasterxml/jackson/core/ObjectCodec\n+  #253 = Class              #650          // java/io/OutputStream\n+  #254 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n+  #255 = Utf8               outputBuffer\n+  #256 = Utf8               outputOffset\n+  #257 = Utf8               bufferRecyclable\n+  #258 = Class              #217          // \"[B\"\n+  #259 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;)V\n+  #260 = Utf8               Deprecated\n+  #261 = Utf8               RuntimeVisibleAnnotations\n+  #262 = Utf8               Ljava/lang/Deprecated;\n+  #263 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;[BIZ)V\n+  #264 = Utf8               getOutputTarget\n+  #265 = Utf8               ()Ljava/lang/Object;\n+  #266 = Utf8               getOutputBuffered\n+  #267 = Utf8               ()I\n+  #268 = Utf8               writeFieldName\n+  #269 = Utf8               (Ljava/lang/String;)V\n+  #270 = Utf8               name\n+  #271 = Utf8               Ljava/lang/String;\n+  #272 = Utf8               status\n+  #273 = Utf8               len\n+  #274 = Utf8               Exceptions\n+  #275 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #276 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n+  #277 = Utf8               _writeUnq\n+  #278 = Utf8               writeStartArray\n+  #279 = Utf8               ()V\n+  #280 = Utf8               (Ljava/lang/Object;)V\n+  #281 = Utf8               currentValue\n+  #282 = Utf8               Ljava/lang/Object;\n+  #283 = Utf8               (Ljava/lang/Object;I)V\n+  #284 = Utf8               size\n+  #285 = Utf8               writeEndArray\n+  #286 = Utf8               writeStartObject\n+  #287 = Utf8               forValue\n+  #288 = Utf8               Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #289 = Utf8               writeEndObject\n+  #290 = Utf8               _writePPFieldName\n+  #291 = Utf8               addQuotes\n+  #292 = Utf8               writeString\n+  #293 = Utf8               text\n+  #294 = Utf8               (Ljava/io/Reader;I)V\n+  #295 = Utf8               toReadNow\n+  #296 = Utf8               numRead\n+  #297 = Utf8               reader\n+  #298 = Utf8               Ljava/io/Reader;\n+  #299 = Utf8               toRead\n+  #300 = Utf8               buf\n+  #301 = Class              #230          // \"[C\"\n+  #302 = Utf8               ([CII)V\n+  #303 = Utf8               offset\n+  #304 = Utf8               writeRawUTF8String\n+  #305 = Utf8               ([BII)V\n+  #306 = Utf8               writeUTF8String\n+  #307 = Utf8               writeRaw\n+  #308 = Utf8               (Ljava/lang/String;II)V\n+  #309 = Utf8               ch\n+  #310 = Utf8               len2\n+  #311 = Utf8               cbufLen\n+  #312 = Utf8               maxChunk\n+  #313 = Utf8               maxBytes\n+  #314 = Utf8               writeRawValue\n+  #315 = Utf8               len3\n+  #316 = Utf8               cbuf\n+  #317 = Utf8               (C)V\n+  #318 = Utf8               bbuf\n+  #319 = Utf8               _writeSegmentedRaw\n+  #320 = Utf8               end\n+  #321 = Utf8               inputEnd\n+  #322 = Utf8               _writeRawSegment\n+  #323 = Utf8               writeBinary\n+  #324 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #325 = Utf8               b64variant\n+  #326 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #327 = Utf8               data\n+  #328 = Class              #651          // com/fasterxml/jackson/core/JsonGenerationException\n+  #329 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #330 = Utf8               bytes\n+  #331 = Utf8               missing\n+  #332 = Utf8               Ljava/io/InputStream;\n+  #333 = Utf8               dataLength\n+  #334 = Utf8               encodingBuffer\n+  #335 = Class              #652          // com/fasterxml/jackson/core/Base64Variant\n+  #336 = Class              #653          // java/io/InputStream\n+  #337 = Class              #654          // java/lang/Throwable\n+  #338 = Utf8               writeNumber\n+  #339 = Utf8               (S)V\n+  #340 = Utf8               s\n+  #341 = Utf8               S\n+  #342 = Utf8               _writeQuotedShort\n+  #343 = Utf8               (I)V\n+  #344 = Utf8               i\n+  #345 = Utf8               _writeQuotedInt\n+  #346 = Utf8               (J)V\n+  #347 = Utf8               l\n+  #348 = Utf8               J\n+  #349 = Utf8               _writeQuotedLong\n+  #350 = Utf8               (Ljava/math/BigInteger;)V\n+  #351 = Utf8               value\n+  #352 = Utf8               Ljava/math/BigInteger;\n+  #353 = Utf8               (D)V\n+  #354 = Utf8               d\n+  #355 = Utf8               D\n+  #356 = Utf8               (F)V\n+  #357 = Utf8               f\n+  #358 = Utf8               F\n+  #359 = Utf8               (Ljava/math/BigDecimal;)V\n+  #360 = Utf8               Ljava/math/BigDecimal;\n+  #361 = Utf8               encodedValue\n+  #362 = Utf8               encodedValueBuffer\n+  #363 = Utf8               length\n+  #364 = Utf8               _writeQuotedRaw\n+  #365 = Utf8               writeBoolean\n+  #366 = Utf8               (Z)V\n+  #367 = Utf8               state\n+  #368 = Utf8               keyword\n+  #369 = Utf8               writeNull\n+  #370 = Utf8               _verifyValueWrite\n+  #371 = Utf8               b\n+  #372 = Utf8               raw\n+  #373 = Utf8               typeMsg\n+  #374 = Utf8               flush\n+  #375 = Utf8               close\n+  #376 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #377 = Utf8               e\n+  #378 = Utf8               Ljava/io/IOException;\n+  #379 = Utf8               Ljava/lang/Exception;\n+  #380 = Utf8               flushFail\n+  #381 = Class              #655          // com/fasterxml/jackson/core/JsonStreamContext\n+  #382 = Class              #656          // java/lang/Exception\n+  #383 = Utf8               _releaseBuffers\n+  #384 = Utf8               _writeBytes\n+  #385 = Utf8               ([B)V\n+  #386 = Utf8               _writeStringSegments\n+  #387 = Utf8               (Ljava/lang/String;Z)V\n+  #388 = Utf8               left\n+  #389 = Utf8               totalLen\n+  #390 = Utf8               _writeStringSegment\n+  #391 = Utf8               outputPtr\n+  #392 = Utf8               escCodes\n+  #393 = Utf8               [I\n+  #394 = Class              #393          // \"[I\"\n+  #395 = Utf8               _writeStringSegment2\n+  #396 = Utf8               escape\n+  #397 = Utf8               _writeStringSegmentASCII2\n+  #398 = Utf8               maxUnescaped\n+  #399 = Class              #657          // java/lang/String\n+  #400 = Utf8               _writeCustomStringSegment2\n+  #401 = Utf8               esc\n+  #402 = Utf8               customEscapes\n+  #403 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #404 = Class              #658          // com/fasterxml/jackson/core/SerializableString\n+  #405 = Utf8               _writeCustomEscape\n+  #406 = Utf8               ([BILcom/fasterxml/jackson/core/SerializableString;I)I\n+  #407 = Utf8               remainingChars\n+  #408 = Utf8               _handleLongCustomEscape\n+  #409 = Utf8               ([BII[BI)I\n+  #410 = Utf8               outputEnd\n+  #411 = Utf8               _writeUTF8Segments\n+  #412 = Utf8               utf8\n+  #413 = Utf8               _writeUTF8Segment\n+  #414 = Utf8               ptr\n+  #415 = Utf8               _writeUTF8Segment2\n+  #416 = Utf8               _writeBinary\n+  #417 = Utf8               b24\n+  #418 = Utf8               input\n+  #419 = Utf8               inputPtr\n+  #420 = Utf8               safeInputEnd\n+  #421 = Utf8               safeOutputEnd\n+  #422 = Utf8               chunksBeforeLF\n+  #423 = Utf8               inputLeft\n+  #424 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+  #425 = Utf8               amount\n+  #426 = Utf8               readBuffer\n+  #427 = Utf8               bytesLeft\n+  #428 = Utf8               lastFullOffset\n+  #429 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+  #430 = Utf8               bytesDone\n+  #431 = Utf8               _readMore\n+  #432 = Utf8               (Ljava/io/InputStream;[BIII)I\n+  #433 = Utf8               count\n+  #434 = Utf8               in\n+  #435 = Utf8               maxRead\n+  #436 = Utf8               _outputRawMultiByteChar\n+  #437 = Utf8               (I[CII)I\n+  #438 = Utf8               inputOffset\n+  #439 = Utf8               _outputSurrogates\n+  #440 = Utf8               (II)V\n+  #441 = Utf8               surr1\n+  #442 = Utf8               surr2\n+  #443 = Utf8               c\n+  #444 = Utf8               _outputMultiByteChar\n+  #445 = Utf8               (II)I\n+  #446 = Utf8               HEX_CHARS\n+  #447 = Utf8               _writeNull\n+  #448 = Utf8               _writeGenericEscape\n+  #449 = Utf8               hi\n+  #450 = Utf8               charToEscape\n+  #451 = Utf8               _flushBuffer\n+  #452 = Utf8               getHexBytes\n+  #453 = Utf8               ()[B\n+  #454 = Utf8               <clinit>\n+  #455 = Utf8               SourceFile\n+  #456 = Utf8               UTF8JsonGenerator.java\n+  #457 = NameAndType        #235:#659     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+  #458 = NameAndType        #222:#223     // _outputStream:Ljava/io/OutputStream;\n+  #459 = NameAndType        #224:#194     // _quoteChar:B\n+  #460 = Class              #660          // com/fasterxml/jackson/core/io/CharTypes\n+  #461 = NameAndType        #661:#662     // get7BitOutputEscapes:(I)[I\n+  #462 = NameAndType        #663:#393     // _outputEscapes:[I\n+  #463 = NameAndType        #233:#234     // _bufferRecyclable:Z\n+  #464 = NameAndType        #664:#453     // allocWriteEncodingBuffer:()[B\n+  #465 = NameAndType        #225:#217     // _outputBuffer:[B\n+  #466 = NameAndType        #227:#214     // _outputEnd:I\n+  #467 = NameAndType        #228:#214     // _outputMaxContiguous:I\n+  #468 = NameAndType        #665:#666     // allocConcatBuffer:()[C\n+  #469 = NameAndType        #229:#230     // _charBuffer:[C\n+  #470 = NameAndType        #231:#214     // _charBufferLength:I\n+  #471 = Class              #668          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #472 = NameAndType        #671:#672     // ESCAPE_NON_ASCII:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #473 = NameAndType        #673:#674     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #474 = NameAndType        #675:#676     // setHighestNonEscapedChar:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #475 = NameAndType        #226:#214     // _outputTail:I\n+  #476 = Utf8               com/fasterxml/jackson/core/JsonFactory\n+  #477 = NameAndType        #235:#236     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C)V\n+  #478 = NameAndType        #235:#254     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;C[BIZ)V\n+  #479 = NameAndType        #677:#678     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #480 = NameAndType        #290:#269     // _writePPFieldName:(Ljava/lang/String;)V\n+  #481 = NameAndType        #679:#288     // _writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #482 = NameAndType        #268:#680     // writeFieldName:(Ljava/lang/String;)I\n+  #483 = Utf8               com/fasterxml/jackson/core/json/JsonWriteContext\n+  #484 = Utf8               Can not write a field name, expecting a value\n+  #485 = NameAndType        #681:#269     // _reportError:(Ljava/lang/String;)V\n+  #486 = NameAndType        #451:#279     // _flushBuffer:()V\n+  #487 = Utf8               com/fasterxml/jackson/core/json/UTF8JsonGenerator\n+  #488 = NameAndType        #682:#234     // _cfgUnqNames:Z\n+  #489 = NameAndType        #386:#387     // _writeStringSegments:(Ljava/lang/String;Z)V\n+  #490 = NameAndType        #363:#267     // length:()I\n+  #491 = NameAndType        #390:#308     // _writeStringSegment:(Ljava/lang/String;II)V\n+  #492 = NameAndType        #386:#308     // _writeStringSegments:(Ljava/lang/String;II)V\n+  #493 = NameAndType        #290:#275     // _writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #494 = NameAndType        #683:#684     // getValue:()Ljava/lang/String;\n+  #495 = NameAndType        #277:#275     // _writeUnq:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #496 = NameAndType        #685:#686     // appendQuotedUTF8:([BI)I\n+  #497 = NameAndType        #687:#453     // asQuotedUTF8:()[B\n+  #498 = NameAndType        #384:#385     // _writeBytes:([B)V\n+  #499 = Utf8               start an array\n+  #500 = NameAndType        #370:#269     // _verifyValueWrite:(Ljava/lang/String;)V\n+  #501 = NameAndType        #688:#689     // createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #502 = Class              #690          // com/fasterxml/jackson/core/PrettyPrinter\n+  #503 = NameAndType        #278:#691     // writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #504 = NameAndType        #688:#692     // createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #505 = NameAndType        #693:#694     // inArray:()Z\n+  #506 = Utf8               java/lang/StringBuilder\n+  #507 = NameAndType        #235:#279     // \"<init>\":()V\n+  #508 = Utf8               Current context not Array but\n+  #509 = NameAndType        #695:#696     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #510 = NameAndType        #697:#684     // typeDesc:()Ljava/lang/String;\n+  #511 = NameAndType        #698:#684     // toString:()Ljava/lang/String;\n+  #512 = NameAndType        #699:#267     // getEntryCount:()I\n+  #513 = NameAndType        #285:#700     // writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #514 = NameAndType        #701:#689     // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #515 = Utf8               start an object\n+  #516 = NameAndType        #702:#689     // createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #517 = NameAndType        #286:#691     // writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #518 = NameAndType        #702:#692     // createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #519 = NameAndType        #286:#280     // writeStartObject:(Ljava/lang/Object;)V\n+  #520 = NameAndType        #703:#694     // inObject:()Z\n+  #521 = Utf8               Current context not Object but\n+  #522 = NameAndType        #289:#700     // writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #523 = NameAndType        #704:#691     // writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #524 = NameAndType        #705:#691     // beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #525 = NameAndType        #706:#707     // getChars:(II[CI)V\n+  #526 = NameAndType        #390:#302     // _writeStringSegment:([CII)V\n+  #527 = NameAndType        #386:#302     // _writeStringSegments:([CII)V\n+  #528 = Utf8               com/fasterxml/jackson/core/base/GeneratorBase\n+  #529 = Utf8               write a string\n+  #530 = NameAndType        #447:#279     // _writeNull:()V\n+  #531 = Utf8               null reader\n+  #532 = Utf8               java/lang/Integer\n+  #533 = Class              #708          // java/lang/Math\n+  #534 = NameAndType        #709:#445     // min:(II)I\n+  #535 = Class              #710          // java/io/Reader\n+  #536 = NameAndType        #711:#712     // read:([CII)I\n+  #537 = Utf8               Didn\\'t read enough from reader\n+  #538 = NameAndType        #713:#305     // _checkRangeBoundsForByteArray:([BII)V\n+  #539 = NameAndType        #384:#305     // _writeBytes:([BII)V\n+  #540 = NameAndType        #413:#305     // _writeUTF8Segment:([BII)V\n+  #541 = NameAndType        #411:#305     // _writeUTF8Segments:([BII)V\n+  #542 = NameAndType        #307:#302     // writeRaw:([CII)V\n+  #543 = NameAndType        #307:#308     // writeRaw:(Ljava/lang/String;II)V\n+  #544 = NameAndType        #714:#308     // _checkRangeBoundsForString:(Ljava/lang/String;II)V\n+  #545 = NameAndType        #322:#302     // _writeRawSegment:([CII)V\n+  #546 = NameAndType        #715:#686     // appendUnquotedUTF8:([BI)I\n+  #547 = NameAndType        #716:#453     // asUnquotedUTF8:()[B\n+  #548 = Utf8               write a raw (unencoded) value\n+  #549 = NameAndType        #717:#302     // _checkRangeBoundsForCharArray:([CII)V\n+  #550 = NameAndType        #319:#302     // _writeSegmentedRaw:([CII)V\n+  #551 = NameAndType        #436:#437     // _outputRawMultiByteChar:(I[CII)I\n+  #552 = Utf8               write a binary value\n+  #553 = NameAndType        #416:#324     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #554 = NameAndType        #718:#243     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+  #555 = NameAndType        #719:#453     // allocBase64Buffer:()[B\n+  #556 = NameAndType        #416:#429     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+  #557 = NameAndType        #416:#424     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+  #558 = Utf8               Too few bytes available: missing\n+  #559 = NameAndType        #695:#720     // append:(I)Ljava/lang/StringBuilder;\n+  #560 = Utf8                bytes (out of\n+  #561 = Utf8               )\n+  #562 = NameAndType        #721:#385     // releaseBase64Buffer:([B)V\n+  #563 = Utf8               write a number\n+  #564 = NameAndType        #722:#234     // _cfgNumbersAsStrings:Z\n+  #565 = NameAndType        #342:#339     // _writeQuotedShort:(S)V\n+  #566 = Class              #723          // com/fasterxml/jackson/core/io/NumberOutput\n+  #567 = NameAndType        #724:#725     // outputInt:(I[BI)I\n+  #568 = NameAndType        #345:#343     // _writeQuotedInt:(I)V\n+  #569 = NameAndType        #349:#346     // _writeQuotedLong:(J)V\n+  #570 = NameAndType        #726:#727     // outputLong:(J[BI)I\n+  #571 = Class              #728          // java/math/BigInteger\n+  #572 = NameAndType        #364:#269     // _writeQuotedRaw:(Ljava/lang/String;)V\n+  #573 = NameAndType        #307:#269     // writeRaw:(Ljava/lang/String;)V\n+  #574 = NameAndType        #729:#730     // notFinite:(D)Z\n+  #575 = NameAndType        #731:#672     // QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #576 = NameAndType        #732:#214     // _features:I\n+  #577 = NameAndType        #733:#734     // enabledIn:(I)Z\n+  #578 = NameAndType        #735:#672     // USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #579 = NameAndType        #698:#736     // toString:(DZ)Ljava/lang/String;\n+  #580 = NameAndType        #292:#269     // writeString:(Ljava/lang/String;)V\n+  #581 = NameAndType        #729:#737     // notFinite:(F)Z\n+  #582 = NameAndType        #698:#738     // toString:(FZ)Ljava/lang/String;\n+  #583 = NameAndType        #739:#740     // _asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #584 = NameAndType        #364:#302     // _writeQuotedRaw:([CII)V\n+  #585 = Utf8               write a boolean value\n+  #586 = NameAndType        #220:#217     // TRUE_BYTES:[B\n+  #587 = NameAndType        #221:#217     // FALSE_BYTES:[B\n+  #588 = Class              #741          // java/lang/System\n+  #589 = NameAndType        #742:#743     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #590 = Utf8               write a null\n+  #591 = NameAndType        #744:#267     // writeValue:()I\n+  #592 = NameAndType        #745:#746     // _verifyPrettyValueWrite:(Ljava/lang/String;I)V\n+  #593 = NameAndType        #747:#276     // _rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n+  #594 = NameAndType        #748:#269     // _reportCantWriteValueExpectName:(Ljava/lang/String;)V\n+  #595 = NameAndType        #749:#672     // FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #596 = NameAndType        #374:#279     // flush:()V\n+  #597 = NameAndType        #375:#279     // close:()V\n+  #598 = NameAndType        #750:#672     // AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #599 = NameAndType        #751:#752     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #600 = NameAndType        #285:#279     // writeEndArray:()V\n+  #601 = NameAndType        #289:#279     // writeEndObject:()V\n+  #602 = Utf8               java/io/IOException\n+  #603 = NameAndType        #753:#694     // isResourceManaged:()Z\n+  #604 = NameAndType        #754:#672     // AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #605 = Utf8               java/lang/RuntimeException\n+  #606 = NameAndType        #755:#756     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #607 = NameAndType        #383:#279     // _releaseBuffers:()V\n+  #608 = NameAndType        #757:#385     // releaseWriteEncodingBuffer:([B)V\n+  #609 = NameAndType        #758:#759     // releaseConcatBuffer:([C)V\n+  #610 = NameAndType        #760:#305     // write:([BII)V\n+  #611 = NameAndType        #761:#403     // _characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #612 = NameAndType        #400:#302     // _writeCustomStringSegment2:([CII)V\n+  #613 = NameAndType        #762:#214     // _maximumNonEscapedChar:I\n+  #614 = NameAndType        #395:#302     // _writeStringSegment2:([CII)V\n+  #615 = NameAndType        #397:#302     // _writeStringSegmentASCII2:([CII)V\n+  #616 = NameAndType        #763:#764     // charAt:(I)C\n+  #617 = NameAndType        #400:#308     // _writeCustomStringSegment2:(Ljava/lang/String;II)V\n+  #618 = NameAndType        #395:#308     // _writeStringSegment2:(Ljava/lang/String;II)V\n+  #619 = NameAndType        #397:#308     // _writeStringSegmentASCII2:(Ljava/lang/String;II)V\n+  #620 = NameAndType        #448:#445     // _writeGenericEscape:(II)I\n+  #621 = NameAndType        #444:#445     // _outputMultiByteChar:(II)I\n+  #622 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n+  #623 = NameAndType        #765:#766     // getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #624 = Utf8               Invalid custom escape definitions; custom escape not found for character code 0x\n+  #625 = NameAndType        #767:#768     // toHexString:(I)Ljava/lang/String;\n+  #626 = Utf8               , although was supposed to have one\n+  #627 = NameAndType        #405:#406     // _writeCustomEscape:([BILcom/fasterxml/jackson/core/SerializableString;I)I\n+  #628 = NameAndType        #408:#409     // _handleLongCustomEscape:([BII[BI)I\n+  #629 = NameAndType        #415:#305     // _writeUTF8Segment2:([BII)V\n+  #630 = NameAndType        #769:#267     // getMaxLineLength:()I\n+  #631 = NameAndType        #770:#725     // encodeBase64Chunk:(I[BI)I\n+  #632 = NameAndType        #771:#772     // encodeBase64Partial:(II[BI)I\n+  #633 = NameAndType        #431:#432     // _readMore:(Ljava/io/InputStream;[BIII)I\n+  #634 = NameAndType        #711:#773     // read:([BII)I\n+  #635 = Utf8               Split surrogate on writeRaw() input (last character): first character 0x%4x\n+  #636 = Utf8               java/lang/Object\n+  #637 = NameAndType        #774:#775     // valueOf:(I)Ljava/lang/Integer;\n+  #638 = NameAndType        #776:#777     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #639 = NameAndType        #439:#440     // _outputSurrogates:(II)V\n+  #640 = NameAndType        #778:#445     // _decodeSurrogate:(II)I\n+  #641 = NameAndType        #452:#453     // getHexBytes:()[B\n+  #642 = NameAndType        #219:#217     // NULL_BYTES:[B\n+  #643 = NameAndType        #779:#234     // _cfgWriteHexUppercase:Z\n+  #644 = NameAndType        #216:#217     // HEX_BYTES_UPPER:[B\n+  #645 = NameAndType        #218:#217     // HEX_BYTES_LOWER:[B\n+  #646 = NameAndType        #780:#781     // copyHexBytes:(Z)[B\n+  #647 = Utf8               com/fasterxml/jackson/core/json/JsonGeneratorImpl\n+  #648 = Utf8               com/fasterxml/jackson/core/io/IOContext\n+  #649 = Utf8               com/fasterxml/jackson/core/ObjectCodec\n+  #650 = Utf8               java/io/OutputStream\n+  #651 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n+  #652 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+  #653 = Utf8               java/io/InputStream\n+  #654 = Utf8               java/lang/Throwable\n+  #655 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n+  #656 = Utf8               java/lang/Exception\n+  #657 = Utf8               java/lang/String\n+  #658 = Utf8               com/fasterxml/jackson/core/SerializableString\n+  #659 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+  #660 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n+  #661 = Utf8               get7BitOutputEscapes\n+  #662 = Utf8               (I)[I\n+  #663 = Utf8               _outputEscapes\n+  #664 = Utf8               allocWriteEncodingBuffer\n+  #665 = Utf8               allocConcatBuffer\n+  #666 = Utf8               ()[C\n+  #667 = Class              #782          // com/fasterxml/jackson/core/JsonGenerator\n+  #668 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #669 = Utf8               Feature\n+  #670 = Utf8               InnerClasses\n+  #671 = Utf8               ESCAPE_NON_ASCII\n+  #672 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #673 = Utf8               isEnabled\n+  #674 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #675 = Utf8               setHighestNonEscapedChar\n+  #676 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #677 = Utf8               _cfgPrettyPrinter\n+  #678 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #679 = Utf8               _writeContext\n+  #680 = Utf8               (Ljava/lang/String;)I\n+  #681 = Utf8               _reportError\n+  #682 = Utf8               _cfgUnqNames\n+  #683 = Utf8               getValue\n+  #684 = Utf8               ()Ljava/lang/String;\n+  #685 = Utf8               appendQuotedUTF8\n+  #686 = Utf8               ([BI)I\n+  #687 = Utf8               asQuotedUTF8\n+  #688 = Utf8               createChildArrayContext\n+  #689 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #690 = Utf8               com/fasterxml/jackson/core/PrettyPrinter\n+  #691 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #692 = Utf8               (Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #693 = Utf8               inArray\n+  #694 = Utf8               ()Z\n+  #695 = Utf8               append\n+  #696 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #697 = Utf8               typeDesc\n+  #698 = Utf8               toString\n+  #699 = Utf8               getEntryCount\n+  #700 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #701 = Utf8               clearAndGetParent\n+  #702 = Utf8               createChildObjectContext\n+  #703 = Utf8               inObject\n+  #704 = Utf8               writeObjectEntrySeparator\n+  #705 = Utf8               beforeObjectEntries\n+  #706 = Utf8               getChars\n+  #707 = Utf8               (II[CI)V\n+  #708 = Utf8               java/lang/Math\n+  #709 = Utf8               min\n+  #710 = Utf8               java/io/Reader\n+  #711 = Utf8               read\n+  #712 = Utf8               ([CII)I\n+  #713 = Utf8               _checkRangeBoundsForByteArray\n+  #714 = Utf8               _checkRangeBoundsForString\n+  #715 = Utf8               appendUnquotedUTF8\n+  #716 = Utf8               asUnquotedUTF8\n+  #717 = Utf8               _checkRangeBoundsForCharArray\n+  #718 = Utf8               _ioContext\n+  #719 = Utf8               allocBase64Buffer\n+  #720 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #721 = Utf8               releaseBase64Buffer\n+  #722 = Utf8               _cfgNumbersAsStrings\n+  #723 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n+  #724 = Utf8               outputInt\n+  #725 = Utf8               (I[BI)I\n+  #726 = Utf8               outputLong\n+  #727 = Utf8               (J[BI)I\n+  #728 = Utf8               java/math/BigInteger\n+  #729 = Utf8               notFinite\n+  #730 = Utf8               (D)Z\n+  #731 = Utf8               QUOTE_NON_NUMERIC_NUMBERS\n+  #732 = Utf8               _features\n+  #733 = Utf8               enabledIn\n+  #734 = Utf8               (I)Z\n+  #735 = Utf8               USE_FAST_DOUBLE_WRITER\n+  #736 = Utf8               (DZ)Ljava/lang/String;\n+  #737 = Utf8               (F)Z\n+  #738 = Utf8               (FZ)Ljava/lang/String;\n+  #739 = Utf8               _asString\n+  #740 = Utf8               (Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #741 = Utf8               java/lang/System\n+  #742 = Utf8               arraycopy\n+  #743 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #744 = Utf8               writeValue\n+  #745 = Utf8               _verifyPrettyValueWrite\n+  #746 = Utf8               (Ljava/lang/String;I)V\n+  #747 = Utf8               _rootValueSeparator\n+  #748 = Utf8               _reportCantWriteValueExpectName\n+  #749 = Utf8               FLUSH_PASSED_TO_STREAM\n+  #750 = Utf8               AUTO_CLOSE_JSON_CONTENT\n+  #751 = Utf8               getOutputContext\n+  #752 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #753 = Utf8               isResourceManaged\n+  #754 = Utf8               AUTO_CLOSE_TARGET\n+  #755 = Utf8               addSuppressed\n+  #756 = Utf8               (Ljava/lang/Throwable;)V\n+  #757 = Utf8               releaseWriteEncodingBuffer\n+  #758 = Utf8               releaseConcatBuffer\n+  #759 = Utf8               ([C)V\n+  #760 = Utf8               write\n+  #761 = Utf8               _characterEscapes\n+  #762 = Utf8               _maximumNonEscapedChar\n+  #763 = Utf8               charAt\n+  #764 = Utf8               (I)C\n+  #765 = Utf8               getEscapeSequence\n+  #766 = Utf8               (I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #767 = Utf8               toHexString\n+  #768 = Utf8               (I)Ljava/lang/String;\n+  #769 = Utf8               getMaxLineLength\n+  #770 = Utf8               encodeBase64Chunk\n+  #771 = Utf8               encodeBase64Partial\n+  #772 = Utf8               (II[BI)I\n+  #773 = Utf8               ([BII)I\n+  #774 = Utf8               valueOf\n+  #775 = Utf8               (I)Ljava/lang/Integer;\n+  #776 = Utf8               format\n+  #777 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #778 = Utf8               _decodeSurrogate\n+  #779 = Utf8               _cfgWriteHexUppercase\n+  #780 = Utf8               copyHexBytes\n+  #781 = Utf8               (Z)[B\n+  #782 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n {\n   private static final byte BYTE_u = 117;\n     descriptor: B\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 117\n \n   private static final byte BYTE_0 = 48;\n@@ -1110,15 +1098,15 @@\n             0      12     0  this   Lcom/fasterxml/jackson/core/json/UTF8JsonGenerator;\n             0      12     1  ctxt   Lcom/fasterxml/jackson/core/io/IOContext;\n             0      12     2 features   I\n             0      12     3 codec   Lcom/fasterxml/jackson/core/ObjectCodec;\n             0      12     4   out   Ljava/io/OutputStream;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #263()\n+      0: #262()\n         java.lang.Deprecated\n \n   public com.fasterxml.jackson.core.json.UTF8JsonGenerator(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.OutputStream, byte[], int, boolean);\n     descriptor: (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;[BIZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=9, locals=8, args_size=8\n@@ -1144,15 +1132,15 @@\n             0      18     3 codec   Lcom/fasterxml/jackson/core/ObjectCodec;\n             0      18     4   out   Ljava/io/OutputStream;\n             0      18     5 outputBuffer   [B\n             0      18     6 outputOffset   I\n             0      18     7 bufferRecyclable   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #263()\n+      0: #262()\n         java.lang.Deprecated\n \n   public java.lang.Object getOutputTarget();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n@@ -9005,8 +8993,8 @@\n         line 33: 7\n         line 35: 14\n         line 36: 40\n         line 37: 66\n }\n SourceFile: \"UTF8JsonGenerator.java\"\n InnerClasses:\n-  public static final #681= #476 of #679; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #669= #471 of #667; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n"}]}
