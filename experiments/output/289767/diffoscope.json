{"diffoscope-json-version": 1, "source1": "first/DeferredFileOutputStream.class", "source2": "second/DeferredFileOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,58 +1,58 @@\n-  SHA-256 checksum 66bed3adb1b3c5ab1e9e0fc5836551913030cd58d97f6be40c88accfa86b3952\n+  SHA-256 checksum 2bdffb2222130650a1733098184769603386161f429f39132c80d1525cb82751\n   Compiled from \"DeferredFileOutputStream.java\"\n public class org.apache.commons.io.output.DeferredFileOutputStream extends org.apache.commons.io.output.ThresholdingOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #40                         // org/apache/commons/io/output/DeferredFileOutputStream\n   super_class: #41                        // org/apache/commons/io/output/ThresholdingOutputStream\n   interfaces: 0, fields: 7, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Class              #90           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-    #2 = Methodref          #40.#91       // org/apache/commons/io/output/DeferredFileOutputStream.\"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n-    #3 = Methodref          #41.#92       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n-    #4 = Fieldref           #40.#93       // org/apache/commons/io/output/DeferredFileOutputStream.outputFile:Ljava/io/File;\n-    #5 = Fieldref           #40.#94       // org/apache/commons/io/output/DeferredFileOutputStream.prefix:Ljava/lang/String;\n-    #6 = Fieldref           #40.#95       // org/apache/commons/io/output/DeferredFileOutputStream.suffix:Ljava/lang/String;\n-    #7 = Fieldref           #40.#96       // org/apache/commons/io/output/DeferredFileOutputStream.directory:Ljava/io/File;\n-    #8 = Class              #97           // org/apache/commons/io/output/ByteArrayOutputStream\n-    #9 = Methodref          #8.#92        // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n-   #10 = Fieldref           #40.#98       // org/apache/commons/io/output/DeferredFileOutputStream.memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-   #11 = Fieldref           #40.#99       // org/apache/commons/io/output/DeferredFileOutputStream.currentOutputStream:Ljava/io/OutputStream;\n-   #12 = Class              #100          // java/lang/IllegalArgumentException\n-   #13 = String             #101          // Initial buffer size must be atleast 0.\n-   #14 = Methodref          #12.#102      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = String             #103          // Temporary file prefix is missing\n-   #16 = Methodref          #41.#104      // org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n-   #17 = Fieldref           #40.#105      // org/apache/commons/io/output/DeferredFileOutputStream.closed:Z\n-   #18 = Methodref          #8.#106       // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n-   #19 = Methodref          #40.#107      // org/apache/commons/io/output/DeferredFileOutputStream.isThresholdExceeded:()Z\n-   #20 = Methodref          #108.#109     // java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n-   #21 = Methodref          #110.#111     // org/apache/commons/io/FileUtils.forceMkdirParent:(Ljava/io/File;)V\n-   #22 = Class              #112          // java/io/FileOutputStream\n-   #23 = Methodref          #22.#113      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #24 = Methodref          #8.#114       // org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n-   #25 = Class              #115          // java/io/IOException\n-   #26 = Methodref          #22.#104      // java/io/FileOutputStream.close:()V\n-   #27 = String             #116          // Stream not closed\n-   #28 = Methodref          #25.#102      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Methodref          #40.#117      // org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z\n-   #30 = Methodref          #8.#118       // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n-   #31 = Methodref          #108.#119     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #32 = Class              #120          // java/nio/file/OpenOption\n-   #33 = Methodref          #121.#122     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #34 = Class              #123          // java/io/FileInputStream\n-   #35 = Methodref          #34.#113      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #36 = Methodref          #124.#125     // org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-   #37 = Methodref          #34.#104      // java/io/FileInputStream.close:()V\n-   #38 = Class              #126          // java/lang/Throwable\n-   #39 = Methodref          #38.#127      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #40 = Class              #128          // org/apache/commons/io/output/DeferredFileOutputStream\n-   #41 = Class              #129          // org/apache/commons/io/output/ThresholdingOutputStream\n+    #1 = Class              #85           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+    #2 = Methodref          #40.#86       // org/apache/commons/io/output/DeferredFileOutputStream.\"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n+    #3 = Methodref          #41.#87       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n+    #4 = Fieldref           #40.#88       // org/apache/commons/io/output/DeferredFileOutputStream.outputFile:Ljava/io/File;\n+    #5 = Fieldref           #40.#89       // org/apache/commons/io/output/DeferredFileOutputStream.prefix:Ljava/lang/String;\n+    #6 = Fieldref           #40.#90       // org/apache/commons/io/output/DeferredFileOutputStream.suffix:Ljava/lang/String;\n+    #7 = Fieldref           #40.#91       // org/apache/commons/io/output/DeferredFileOutputStream.directory:Ljava/io/File;\n+    #8 = Class              #92           // org/apache/commons/io/output/ByteArrayOutputStream\n+    #9 = Methodref          #8.#87        // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n+   #10 = Fieldref           #40.#93       // org/apache/commons/io/output/DeferredFileOutputStream.memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #11 = Fieldref           #40.#94       // org/apache/commons/io/output/DeferredFileOutputStream.currentOutputStream:Ljava/io/OutputStream;\n+   #12 = Class              #95           // java/lang/IllegalArgumentException\n+   #13 = String             #96           // Initial buffer size must be atleast 0.\n+   #14 = Methodref          #12.#97       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #15 = String             #98           // Temporary file prefix is missing\n+   #16 = Methodref          #41.#99       // org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n+   #17 = Fieldref           #40.#100      // org/apache/commons/io/output/DeferredFileOutputStream.closed:Z\n+   #18 = Methodref          #8.#101       // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n+   #19 = Methodref          #40.#102      // org/apache/commons/io/output/DeferredFileOutputStream.isThresholdExceeded:()Z\n+   #20 = Methodref          #61.#103      // java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n+   #21 = Methodref          #104.#105     // org/apache/commons/io/FileUtils.forceMkdirParent:(Ljava/io/File;)V\n+   #22 = Class              #106          // java/io/FileOutputStream\n+   #23 = Methodref          #22.#107      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #24 = Methodref          #8.#108       // org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n+   #25 = Class              #109          // java/io/IOException\n+   #26 = Methodref          #22.#99       // java/io/FileOutputStream.close:()V\n+   #27 = String             #110          // Stream not closed\n+   #28 = Methodref          #25.#97       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #29 = Methodref          #40.#111      // org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z\n+   #30 = Methodref          #8.#112       // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n+   #31 = Methodref          #61.#113      // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #32 = Class              #114          // java/nio/file/OpenOption\n+   #33 = Methodref          #115.#116     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #34 = Class              #117          // java/io/FileInputStream\n+   #35 = Methodref          #34.#107      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #36 = Methodref          #118.#119     // org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+   #37 = Methodref          #34.#99       // java/io/FileInputStream.close:()V\n+   #38 = Class              #120          // java/lang/Throwable\n+   #39 = Methodref          #38.#121      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #40 = Class              #122          // org/apache/commons/io/output/DeferredFileOutputStream\n+   #41 = Class              #123          // org/apache/commons/io/output/ThresholdingOutputStream\n    #42 = Utf8               memoryOutputStream\n    #43 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n    #44 = Utf8               currentOutputStream\n    #45 = Utf8               Ljava/io/OutputStream;\n    #46 = Utf8               outputFile\n    #47 = Utf8               Ljava/io/File;\n    #48 = Utf8               prefix\n@@ -64,106 +64,100 @@\n    #54 = Utf8               <init>\n    #55 = Utf8               (ILjava/io/File;)V\n    #56 = Utf8               Code\n    #57 = Utf8               LineNumberTable\n    #58 = Utf8               (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n    #59 = Utf8               (IILjava/io/File;)V\n    #60 = Utf8               StackMapTable\n-   #61 = Class              #128          // org/apache/commons/io/output/DeferredFileOutputStream\n-   #62 = Class              #130          // java/io/File\n-   #63 = Utf8               (IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n-   #64 = Class              #131          // java/lang/String\n-   #65 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n-   #66 = Utf8               close\n-   #67 = Utf8               ()V\n-   #68 = Utf8               Exceptions\n-   #69 = Utf8               getData\n-   #70 = Utf8               ()[B\n-   #71 = Class              #132          // \"[B\"\n-   #72 = Utf8               getFile\n-   #73 = Utf8               ()Ljava/io/File;\n-   #74 = Utf8               getStream\n-   #75 = Utf8               ()Ljava/io/OutputStream;\n-   #76 = Utf8               isInMemory\n-   #77 = Utf8               ()Z\n-   #78 = Utf8               thresholdReached\n-   #79 = Class              #112          // java/io/FileOutputStream\n-   #80 = Class              #115          // java/io/IOException\n-   #81 = Utf8               toInputStream\n-   #82 = Utf8               ()Ljava/io/InputStream;\n-   #83 = Utf8               writeTo\n-   #84 = Utf8               (Ljava/io/OutputStream;)V\n-   #85 = Class              #133          // java/io/OutputStream\n-   #86 = Class              #123          // java/io/FileInputStream\n-   #87 = Class              #126          // java/lang/Throwable\n-   #88 = Utf8               SourceFile\n-   #89 = Utf8               DeferredFileOutputStream.java\n-   #90 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #91 = NameAndType        #54:#58       // \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n-   #92 = NameAndType        #54:#134      // \"<init>\":(I)V\n-   #93 = NameAndType        #46:#47       // outputFile:Ljava/io/File;\n-   #94 = NameAndType        #48:#49       // prefix:Ljava/lang/String;\n-   #95 = NameAndType        #50:#49       // suffix:Ljava/lang/String;\n-   #96 = NameAndType        #51:#47       // directory:Ljava/io/File;\n-   #97 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n-   #98 = NameAndType        #42:#43       // memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-   #99 = NameAndType        #44:#45       // currentOutputStream:Ljava/io/OutputStream;\n-  #100 = Utf8               java/lang/IllegalArgumentException\n-  #101 = Utf8               Initial buffer size must be atleast 0.\n-  #102 = NameAndType        #54:#135      // \"<init>\":(Ljava/lang/String;)V\n-  #103 = Utf8               Temporary file prefix is missing\n-  #104 = NameAndType        #66:#67       // close:()V\n-  #105 = NameAndType        #52:#53       // closed:Z\n-  #106 = NameAndType        #136:#70      // toByteArray:()[B\n-  #107 = NameAndType        #137:#77      // isThresholdExceeded:()Z\n-  #108 = Class              #130          // java/io/File\n-  #109 = NameAndType        #138:#139     // createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n-  #110 = Class              #140          // org/apache/commons/io/FileUtils\n-  #111 = NameAndType        #141:#142     // forceMkdirParent:(Ljava/io/File;)V\n-  #112 = Utf8               java/io/FileOutputStream\n-  #113 = NameAndType        #54:#142      // \"<init>\":(Ljava/io/File;)V\n-  #114 = NameAndType        #83:#84       // writeTo:(Ljava/io/OutputStream;)V\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               Stream not closed\n-  #117 = NameAndType        #76:#77       // isInMemory:()Z\n-  #118 = NameAndType        #81:#82       // toInputStream:()Ljava/io/InputStream;\n-  #119 = NameAndType        #143:#144     // toPath:()Ljava/nio/file/Path;\n-  #120 = Utf8               java/nio/file/OpenOption\n-  #121 = Class              #145          // java/nio/file/Files\n-  #122 = NameAndType        #146:#147     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #123 = Utf8               java/io/FileInputStream\n-  #124 = Class              #148          // org/apache/commons/io/IOUtils\n-  #125 = NameAndType        #149:#150     // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-  #126 = Utf8               java/lang/Throwable\n-  #127 = NameAndType        #151:#152     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #128 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream\n-  #129 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #130 = Utf8               java/io/File\n-  #131 = Utf8               java/lang/String\n-  #132 = Utf8               [B\n-  #133 = Utf8               java/io/OutputStream\n-  #134 = Utf8               (I)V\n-  #135 = Utf8               (Ljava/lang/String;)V\n-  #136 = Utf8               toByteArray\n-  #137 = Utf8               isThresholdExceeded\n-  #138 = Utf8               createTempFile\n-  #139 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n-  #140 = Utf8               org/apache/commons/io/FileUtils\n-  #141 = Utf8               forceMkdirParent\n-  #142 = Utf8               (Ljava/io/File;)V\n-  #143 = Utf8               toPath\n-  #144 = Utf8               ()Ljava/nio/file/Path;\n-  #145 = Utf8               java/nio/file/Files\n-  #146 = Utf8               newInputStream\n-  #147 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #148 = Utf8               org/apache/commons/io/IOUtils\n-  #149 = Utf8               copy\n-  #150 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-  #151 = Utf8               addSuppressed\n-  #152 = Utf8               (Ljava/lang/Throwable;)V\n+   #61 = Class              #124          // java/io/File\n+   #62 = Utf8               (IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n+   #63 = Class              #125          // java/lang/String\n+   #64 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n+   #65 = Utf8               close\n+   #66 = Utf8               ()V\n+   #67 = Utf8               Exceptions\n+   #68 = Utf8               getData\n+   #69 = Utf8               ()[B\n+   #70 = Class              #126          // \"[B\"\n+   #71 = Utf8               getFile\n+   #72 = Utf8               ()Ljava/io/File;\n+   #73 = Utf8               getStream\n+   #74 = Utf8               ()Ljava/io/OutputStream;\n+   #75 = Utf8               isInMemory\n+   #76 = Utf8               ()Z\n+   #77 = Utf8               thresholdReached\n+   #78 = Utf8               toInputStream\n+   #79 = Utf8               ()Ljava/io/InputStream;\n+   #80 = Utf8               writeTo\n+   #81 = Utf8               (Ljava/io/OutputStream;)V\n+   #82 = Class              #127          // java/io/OutputStream\n+   #83 = Utf8               SourceFile\n+   #84 = Utf8               DeferredFileOutputStream.java\n+   #85 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #86 = NameAndType        #54:#58       // \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n+   #87 = NameAndType        #54:#128      // \"<init>\":(I)V\n+   #88 = NameAndType        #46:#47       // outputFile:Ljava/io/File;\n+   #89 = NameAndType        #48:#49       // prefix:Ljava/lang/String;\n+   #90 = NameAndType        #50:#49       // suffix:Ljava/lang/String;\n+   #91 = NameAndType        #51:#47       // directory:Ljava/io/File;\n+   #92 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n+   #93 = NameAndType        #42:#43       // memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #94 = NameAndType        #44:#45       // currentOutputStream:Ljava/io/OutputStream;\n+   #95 = Utf8               java/lang/IllegalArgumentException\n+   #96 = Utf8               Initial buffer size must be atleast 0.\n+   #97 = NameAndType        #54:#129      // \"<init>\":(Ljava/lang/String;)V\n+   #98 = Utf8               Temporary file prefix is missing\n+   #99 = NameAndType        #65:#66       // close:()V\n+  #100 = NameAndType        #52:#53       // closed:Z\n+  #101 = NameAndType        #130:#69      // toByteArray:()[B\n+  #102 = NameAndType        #131:#76      // isThresholdExceeded:()Z\n+  #103 = NameAndType        #132:#133     // createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n+  #104 = Class              #134          // org/apache/commons/io/FileUtils\n+  #105 = NameAndType        #135:#136     // forceMkdirParent:(Ljava/io/File;)V\n+  #106 = Utf8               java/io/FileOutputStream\n+  #107 = NameAndType        #54:#136      // \"<init>\":(Ljava/io/File;)V\n+  #108 = NameAndType        #80:#81       // writeTo:(Ljava/io/OutputStream;)V\n+  #109 = Utf8               java/io/IOException\n+  #110 = Utf8               Stream not closed\n+  #111 = NameAndType        #75:#76       // isInMemory:()Z\n+  #112 = NameAndType        #78:#79       // toInputStream:()Ljava/io/InputStream;\n+  #113 = NameAndType        #137:#138     // toPath:()Ljava/nio/file/Path;\n+  #114 = Utf8               java/nio/file/OpenOption\n+  #115 = Class              #139          // java/nio/file/Files\n+  #116 = NameAndType        #140:#141     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #117 = Utf8               java/io/FileInputStream\n+  #118 = Class              #142          // org/apache/commons/io/IOUtils\n+  #119 = NameAndType        #143:#144     // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+  #120 = Utf8               java/lang/Throwable\n+  #121 = NameAndType        #145:#146     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #122 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream\n+  #123 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+  #124 = Utf8               java/io/File\n+  #125 = Utf8               java/lang/String\n+  #126 = Utf8               [B\n+  #127 = Utf8               java/io/OutputStream\n+  #128 = Utf8               (I)V\n+  #129 = Utf8               (Ljava/lang/String;)V\n+  #130 = Utf8               toByteArray\n+  #131 = Utf8               isThresholdExceeded\n+  #132 = Utf8               createTempFile\n+  #133 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;\n+  #134 = Utf8               org/apache/commons/io/FileUtils\n+  #135 = Utf8               forceMkdirParent\n+  #136 = Utf8               (Ljava/io/File;)V\n+  #137 = Utf8               toPath\n+  #138 = Utf8               ()Ljava/nio/file/Path;\n+  #139 = Utf8               java/nio/file/Files\n+  #140 = Utf8               newInputStream\n+  #141 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #142 = Utf8               org/apache/commons/io/IOUtils\n+  #143 = Utf8               copy\n+  #144 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+  #145 = Utf8               addSuppressed\n+  #146 = Utf8               (Ljava/lang/Throwable;)V\n {\n   private org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream;\n     descriptor: Lorg/apache/commons/io/output/ByteArrayOutputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.io.OutputStream currentOutputStream;\n     descriptor: Ljava/io/OutputStream;\n@@ -544,15 +538,15 @@\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeTo(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=7, args_size=2\n+      stack=3, locals=5, args_size=2\n          0: aload_0\n          1: getfield      #17                 // Field closed:Z\n          4: ifne          17\n          7: new           #25                 // class java/io/IOException\n         10: dup\n         11: ldc           #27                 // String Stream not closed\n         13: invokespecial #28                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n@@ -560,102 +554,64 @@\n         17: aload_0\n         18: invokevirtual #29                 // Method isInMemory:()Z\n         21: ifeq          35\n         24: aload_0\n         25: getfield      #10                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n         28: aload_1\n         29: invokevirtual #24                 // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n-        32: goto          131\n+        32: goto          78\n         35: new           #34                 // class java/io/FileInputStream\n         38: dup\n         39: aload_0\n         40: getfield      #4                  // Field outputFile:Ljava/io/File;\n         43: invokespecial #35                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n         46: astore_2\n-        47: aconst_null\n-        48: astore_3\n-        49: aload_2\n-        50: aload_1\n-        51: invokestatic  #36                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n-        54: pop\n-        55: aload_2\n-        56: ifnull        131\n-        59: aload_3\n-        60: ifnull        81\n-        63: aload_2\n-        64: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n-        67: goto          131\n-        70: astore        4\n-        72: aload_3\n-        73: aload         4\n-        75: invokevirtual #39                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        78: goto          131\n-        81: aload_2\n-        82: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n-        85: goto          131\n-        88: astore        4\n-        90: aload         4\n-        92: astore_3\n-        93: aload         4\n-        95: athrow\n-        96: astore        5\n-        98: aload_2\n-        99: ifnull        128\n-       102: aload_3\n-       103: ifnull        124\n-       106: aload_2\n-       107: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n-       110: goto          128\n-       113: astore        6\n-       115: aload_3\n-       116: aload         6\n-       118: invokevirtual #39                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       121: goto          128\n-       124: aload_2\n-       125: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n-       128: aload         5\n-       130: athrow\n-       131: return\n+        47: aload_2\n+        48: aload_1\n+        49: invokestatic  #36                 // Method org/apache/commons/io/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I\n+        52: pop\n+        53: aload_2\n+        54: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n+        57: goto          78\n+        60: astore_3\n+        61: aload_2\n+        62: invokevirtual #37                 // Method java/io/FileInputStream.close:()V\n+        65: goto          76\n+        68: astore        4\n+        70: aload_3\n+        71: aload         4\n+        73: invokevirtual #39                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        76: aload_3\n+        77: athrow\n+        78: return\n       Exception table:\n          from    to  target type\n-            63    67    70   Class java/lang/Throwable\n-            49    55    88   Class java/lang/Throwable\n-            49    55    96   any\n-           106   110   113   Class java/lang/Throwable\n-            88    98    96   any\n+            47    53    60   Class java/lang/Throwable\n+            61    65    68   Class java/lang/Throwable\n       LineNumberTable:\n         line 293: 0\n         line 294: 7\n         line 297: 17\n         line 298: 24\n         line 300: 35\n-        line 301: 49\n-        line 302: 55\n-        line 300: 88\n-        line 302: 96\n-        line 304: 131\n-      StackMapTable: number_of_entries = 10\n+        line 301: 47\n+        line 302: 53\n+        line 300: 60\n+        line 304: 78\n+      StackMapTable: number_of_entries = 6\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 34\n-          locals = [ class org/apache/commons/io/output/DeferredFileOutputStream, class java/io/OutputStream, class java/io/FileInputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n+          offset_delta = 24\n+          locals = [ class org/apache/commons/io/output/DeferredFileOutputStream, class java/io/OutputStream, class java/io/FileInputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/io/output/DeferredFileOutputStream, class java/io/OutputStream, class java/io/FileInputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class org/apache/commons/io/output/DeferredFileOutputStream, class java/io/OutputStream, class java/io/FileInputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class org/apache/commons/io/output/DeferredFileOutputStream, class java/io/OutputStream ]\n-          stack = []\n+        frame_type = 7 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"DeferredFileOutputStream.java\"\n"}]}
