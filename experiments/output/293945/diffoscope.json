{"diffoscope-json-version": 1, "source1": "first/ExceptionTable.class", "source2": "second/ExceptionTable.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,230 +1,230 @@\n-  SHA-256 checksum 9c73bfcaf226df9aabcad21cb1fe49efb0e522c107c21934c04ddff4a789b0e9\n+  SHA-256 checksum b6961b65941f4baa0830f14e140f3fbabb0b2529a94bab2f1d127cf0b7ad8633\n   Compiled from \"ExceptionTable.java\"\n public final class org.apache.bcel.classfile.ExceptionTable extends org.apache.bcel.classfile.Attribute\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #14                         // org/apache/bcel/classfile/ExceptionTable\n-  super_class: #32                        // org/apache/bcel/classfile/Attribute\n+  this_class: #2                          // org/apache/bcel/classfile/ExceptionTable\n+  super_class: #35                        // org/apache/bcel/classfile/Attribute\n   interfaces: 0, fields: 1, methods: 12, attributes: 3\n Constant pool:\n-    #1 = Methodref          #14.#66       // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n-    #2 = Methodref          #14.#67       // org/apache/bcel/classfile/ExceptionTable.getLength:()I\n-    #3 = Methodref          #14.#68       // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n-    #4 = Methodref          #14.#69       // org/apache/bcel/classfile/ExceptionTable.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-    #5 = Methodref          #14.#70       // org/apache/bcel/classfile/ExceptionTable.\"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n-    #6 = Class              #34           // \"[I\"\n-    #7 = InterfaceMethodref #41.#71       // java/io/DataInput.readUnsignedShort:()I\n-    #8 = Fieldref           #14.#72       // org/apache/bcel/classfile/ExceptionTable.exceptionIndexTable:[I\n-    #9 = Class              #73           // org/apache/bcel/Const\n-   #10 = Methodref          #32.#74       // org/apache/bcel/classfile/Attribute.\"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #11 = Fieldref           #75.#76       // org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n-   #12 = InterfaceMethodref #77.#78       // org/apache/bcel/classfile/Visitor.visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n-   #13 = Methodref          #14.#79       // org/apache/bcel/classfile/ExceptionTable.clone:()Ljava/lang/Object;\n-   #14 = Class              #80           // org/apache/bcel/classfile/ExceptionTable\n-   #15 = Methodref          #81.#82       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #16 = Methodref          #14.#83       // org/apache/bcel/classfile/ExceptionTable.setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #17 = Methodref          #32.#84       // org/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V\n-   #18 = Methodref          #85.#86       // java/io/DataOutputStream.writeShort:(I)V\n-   #19 = Class              #87           // java/lang/String\n-   #20 = InvokeDynamic      #0:#93        // #0:apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n-   #21 = Methodref          #94.#95       // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #22 = Class              #96           // java/lang/StringBuilder\n-   #23 = Methodref          #22.#97       // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #98           // Exceptions:\n-   #25 = Methodref          #22.#99       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #32.#69       // org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #27 = Methodref          #42.#100      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #28 = Methodref          #101.#102     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #29 = String             #103          // ,\n-   #30 = Methodref          #22.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #101.#105     // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = Class              #106          // org/apache/bcel/classfile/Attribute\n-   #33 = Utf8               exceptionIndexTable\n-   #34 = Utf8               [I\n-   #35 = Utf8               <init>\n-   #36 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n-   #37 = Utf8               Code\n-   #38 = Utf8               LineNumberTable\n-   #39 = Utf8               (IILjava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #40 = Utf8               StackMapTable\n-   #41 = Class              #107          // java/io/DataInput\n-   #42 = Class              #108          // org/apache/bcel/classfile/ConstantPool\n-   #43 = Utf8               Exceptions\n-   #44 = Class              #109          // java/io/IOException\n-   #45 = Utf8               (II[ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #46 = Utf8               accept\n-   #47 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-   #48 = Utf8               copy\n-   #49 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Lorg/apache/bcel/classfile/Attribute;\n-   #50 = Utf8               dump\n-   #51 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #52 = Utf8               getExceptionIndexTable\n-   #53 = Utf8               ()[I\n-   #54 = Utf8               getExceptionNames\n-   #55 = Utf8               ()[Ljava/lang/String;\n-   #56 = Utf8               getNumberOfExceptions\n-   #57 = Utf8               ()I\n-   #58 = Utf8               setExceptionIndexTable\n-   #59 = Utf8               ([I)V\n-   #60 = Utf8               toString\n-   #61 = Utf8               ()Ljava/lang/String;\n-   #62 = Utf8               lambda$getExceptionNames$0\n-   #63 = Utf8               (I)Ljava/lang/String;\n-   #64 = Utf8               SourceFile\n-   #65 = Utf8               ExceptionTable.java\n-   #66 = NameAndType        #110:#57      // getNameIndex:()I\n-   #67 = NameAndType        #111:#57      // getLength:()I\n-   #68 = NameAndType        #52:#53       // getExceptionIndexTable:()[I\n-   #69 = NameAndType        #112:#113     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #70 = NameAndType        #35:#45       // \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #71 = NameAndType        #114:#57      // readUnsignedShort:()I\n-   #72 = NameAndType        #33:#34       // exceptionIndexTable:[I\n-   #73 = Utf8               org/apache/bcel/Const\n-   #74 = NameAndType        #35:#115      // \"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #75 = Class              #116          // org/apache/commons/lang3/ArrayUtils\n-   #76 = NameAndType        #117:#34      // EMPTY_INT_ARRAY:[I\n-   #77 = Class              #118          // org/apache/bcel/classfile/Visitor\n-   #78 = NameAndType        #119:#36      // visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n-   #79 = NameAndType        #120:#121     // clone:()Ljava/lang/Object;\n-   #80 = Utf8               org/apache/bcel/classfile/ExceptionTable\n-   #81 = Class              #122          // java/lang/System\n-   #82 = NameAndType        #123:#124     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #83 = NameAndType        #125:#126     // setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #84 = NameAndType        #50:#51       // dump:(Ljava/io/DataOutputStream;)V\n-   #85 = Class              #127          // java/io/DataOutputStream\n-   #86 = NameAndType        #128:#129     // writeShort:(I)V\n-   #87 = Utf8               java/lang/String\n-   #88 = Utf8               BootstrapMethods\n-   #89 = MethodHandle       6:#130        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #90 = MethodType         #131          //  (I)Ljava/lang/Object;\n-   #91 = MethodHandle       7:#132        // REF_invokeSpecial org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n-   #92 = MethodType         #63           //  (I)Ljava/lang/String;\n-   #93 = NameAndType        #133:#134     // apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n-   #94 = Class              #135          // java/util/Arrays\n-   #95 = NameAndType        #136:#137     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #96 = Utf8               java/lang/StringBuilder\n-   #97 = NameAndType        #35:#138      // \"<init>\":()V\n-   #98 = Utf8               Exceptions:\n-   #99 = NameAndType        #139:#140     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #100 = NameAndType        #141:#142     // getConstantString:(IB)Ljava/lang/String;\n-  #101 = Class              #143          // org/apache/bcel/classfile/Utility\n-  #102 = NameAndType        #144:#145     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #103 = Utf8               ,\n-  #104 = NameAndType        #60:#61       // toString:()Ljava/lang/String;\n-  #105 = NameAndType        #146:#147     // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-  #106 = Utf8               org/apache/bcel/classfile/Attribute\n-  #107 = Utf8               java/io/DataInput\n-  #108 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #109 = Utf8               java/io/IOException\n-  #110 = Utf8               getNameIndex\n-  #111 = Utf8               getLength\n-  #112 = Utf8               getConstantPool\n-  #113 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #114 = Utf8               readUnsignedShort\n-  #115 = Utf8               (BIILorg/apache/bcel/classfile/ConstantPool;)V\n-  #116 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #117 = Utf8               EMPTY_INT_ARRAY\n-  #118 = Utf8               org/apache/bcel/classfile/Visitor\n-  #119 = Utf8               visitExceptionTable\n-  #120 = Utf8               clone\n-  #121 = Utf8               ()Ljava/lang/Object;\n-  #122 = Utf8               java/lang/System\n-  #123 = Utf8               arraycopy\n-  #124 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #125 = Utf8               setConstantPool\n-  #126 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #127 = Utf8               java/io/DataOutputStream\n-  #128 = Utf8               writeShort\n-  #129 = Utf8               (I)V\n-  #130 = Methodref          #148.#149     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #131 = Utf8               (I)Ljava/lang/Object;\n-  #132 = Methodref          #14.#150      // org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n-  #133 = Utf8               apply\n-  #134 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n-  #135 = Utf8               java/util/Arrays\n-  #136 = Utf8               setAll\n-  #137 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #138 = Utf8               ()V\n-  #139 = Utf8               append\n-  #140 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #141 = Utf8               getConstantString\n-  #142 = Utf8               (IB)Ljava/lang/String;\n-  #143 = Utf8               org/apache/bcel/classfile/Utility\n-  #144 = Utf8               compactClassName\n-  #145 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #146 = Utf8               pathToPackage\n-  #147 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #148 = Class              #151          // java/lang/invoke/LambdaMetafactory\n-  #149 = NameAndType        #152:#156     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #150 = NameAndType        #62:#63       // lambda$getExceptionNames$0:(I)Ljava/lang/String;\n-  #151 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #152 = Utf8               metafactory\n-  #153 = Class              #158          // java/lang/invoke/MethodHandles$Lookup\n-  #154 = Utf8               Lookup\n-  #155 = Utf8               InnerClasses\n-  #156 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #157 = Class              #159          // java/lang/invoke/MethodHandles\n-  #158 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #159 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n+    #2 = Class              #4            // org/apache/bcel/classfile/ExceptionTable\n+    #3 = NameAndType        #5:#6         // getNameIndex:()I\n+    #4 = Utf8               org/apache/bcel/classfile/ExceptionTable\n+    #5 = Utf8               getNameIndex\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #2.#8         // org/apache/bcel/classfile/ExceptionTable.getLength:()I\n+    #8 = NameAndType        #9:#6         // getLength:()I\n+    #9 = Utf8               getLength\n+   #10 = Methodref          #2.#11        // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n+   #11 = NameAndType        #12:#13       // getExceptionIndexTable:()[I\n+   #12 = Utf8               getExceptionIndexTable\n+   #13 = Utf8               ()[I\n+   #14 = Methodref          #2.#15        // org/apache/bcel/classfile/ExceptionTable.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #15 = NameAndType        #16:#17       // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #16 = Utf8               getConstantPool\n+   #17 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+   #18 = Methodref          #2.#19        // org/apache/bcel/classfile/ExceptionTable.\"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #19 = NameAndType        #20:#21       // \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #20 = Utf8               <init>\n+   #21 = Utf8               (II[ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #22 = Class              #23           // \"[I\"\n+   #23 = Utf8               [I\n+   #24 = InterfaceMethodref #25.#26       // java/io/DataInput.readUnsignedShort:()I\n+   #25 = Class              #27           // java/io/DataInput\n+   #26 = NameAndType        #28:#6        // readUnsignedShort:()I\n+   #27 = Utf8               java/io/DataInput\n+   #28 = Utf8               readUnsignedShort\n+   #29 = Fieldref           #2.#30        // org/apache/bcel/classfile/ExceptionTable.exceptionIndexTable:[I\n+   #30 = NameAndType        #31:#23       // exceptionIndexTable:[I\n+   #31 = Utf8               exceptionIndexTable\n+   #32 = Class              #33           // org/apache/bcel/Const\n+   #33 = Utf8               org/apache/bcel/Const\n+   #34 = Methodref          #35.#36       // org/apache/bcel/classfile/Attribute.\"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #35 = Class              #37           // org/apache/bcel/classfile/Attribute\n+   #36 = NameAndType        #20:#38       // \"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #37 = Utf8               org/apache/bcel/classfile/Attribute\n+   #38 = Utf8               (BIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #39 = Fieldref           #40.#41       // org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n+   #40 = Class              #42           // org/apache/commons/lang3/ArrayUtils\n+   #41 = NameAndType        #43:#23       // EMPTY_INT_ARRAY:[I\n+   #42 = Utf8               org/apache/commons/lang3/ArrayUtils\n+   #43 = Utf8               EMPTY_INT_ARRAY\n+   #44 = InterfaceMethodref #45.#46       // org/apache/bcel/classfile/Visitor.visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n+   #45 = Class              #47           // org/apache/bcel/classfile/Visitor\n+   #46 = NameAndType        #48:#49       // visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n+   #47 = Utf8               org/apache/bcel/classfile/Visitor\n+   #48 = Utf8               visitExceptionTable\n+   #49 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n+   #50 = Methodref          #2.#51        // org/apache/bcel/classfile/ExceptionTable.clone:()Ljava/lang/Object;\n+   #51 = NameAndType        #52:#53       // clone:()Ljava/lang/Object;\n+   #52 = Utf8               clone\n+   #53 = Utf8               ()Ljava/lang/Object;\n+   #54 = Methodref          #55.#56       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #55 = Class              #57           // java/lang/System\n+   #56 = NameAndType        #58:#59       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #57 = Utf8               java/lang/System\n+   #58 = Utf8               arraycopy\n+   #59 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #60 = Methodref          #2.#61        // org/apache/bcel/classfile/ExceptionTable.setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #61 = NameAndType        #62:#63       // setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #62 = Utf8               setConstantPool\n+   #63 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #64 = Methodref          #35.#65       // org/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V\n+   #65 = NameAndType        #66:#67       // dump:(Ljava/io/DataOutputStream;)V\n+   #66 = Utf8               dump\n+   #67 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #68 = Methodref          #69.#70       // java/io/DataOutputStream.writeShort:(I)V\n+   #69 = Class              #71           // java/io/DataOutputStream\n+   #70 = NameAndType        #72:#73       // writeShort:(I)V\n+   #71 = Utf8               java/io/DataOutputStream\n+   #72 = Utf8               writeShort\n+   #73 = Utf8               (I)V\n+   #74 = Class              #75           // java/lang/String\n+   #75 = Utf8               java/lang/String\n+   #76 = InvokeDynamic      #0:#77        // #0:apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n+   #77 = NameAndType        #78:#79       // apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n+   #78 = Utf8               apply\n+   #79 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n+   #80 = Methodref          #81.#82       // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+   #81 = Class              #83           // java/util/Arrays\n+   #82 = NameAndType        #84:#85       // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+   #83 = Utf8               java/util/Arrays\n+   #84 = Utf8               setAll\n+   #85 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+   #86 = Class              #87           // java/lang/StringBuilder\n+   #87 = Utf8               java/lang/StringBuilder\n+   #88 = Methodref          #86.#89       // java/lang/StringBuilder.\"<init>\":()V\n+   #89 = NameAndType        #20:#90       // \"<init>\":()V\n+   #90 = Utf8               ()V\n+   #91 = String             #92           // Exceptions:\n+   #92 = Utf8               Exceptions:\n+   #93 = Methodref          #86.#94       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #94 = NameAndType        #95:#96       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #95 = Utf8               append\n+   #96 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = Methodref          #35.#15       // org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #98 = Methodref          #99.#100      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+   #99 = Class              #101          // org/apache/bcel/classfile/ConstantPool\n+  #100 = NameAndType        #102:#103     // getConstantString:(IB)Ljava/lang/String;\n+  #101 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #102 = Utf8               getConstantString\n+  #103 = Utf8               (IB)Ljava/lang/String;\n+  #104 = Methodref          #105.#106     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #105 = Class              #107          // org/apache/bcel/classfile/Utility\n+  #106 = NameAndType        #108:#109     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #107 = Utf8               org/apache/bcel/classfile/Utility\n+  #108 = Utf8               compactClassName\n+  #109 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #110 = String             #111          // ,\n+  #111 = Utf8               ,\n+  #112 = Methodref          #86.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #113 = NameAndType        #114:#115     // toString:()Ljava/lang/String;\n+  #114 = Utf8               toString\n+  #115 = Utf8               ()Ljava/lang/String;\n+  #116 = Methodref          #105.#117     // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+  #117 = NameAndType        #118:#119     // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+  #118 = Utf8               pathToPackage\n+  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #120 = Utf8               Code\n+  #121 = Utf8               LineNumberTable\n+  #122 = Utf8               (IILjava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #123 = Utf8               StackMapTable\n+  #124 = Utf8               Exceptions\n+  #125 = Class              #126          // java/io/IOException\n+  #126 = Utf8               java/io/IOException\n+  #127 = Utf8               accept\n+  #128 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #129 = Utf8               copy\n+  #130 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Lorg/apache/bcel/classfile/Attribute;\n+  #131 = Utf8               getExceptionNames\n+  #132 = Utf8               ()[Ljava/lang/String;\n+  #133 = Utf8               getNumberOfExceptions\n+  #134 = Utf8               setExceptionIndexTable\n+  #135 = Utf8               ([I)V\n+  #136 = Utf8               lambda$getExceptionNames$0\n+  #137 = Utf8               (I)Ljava/lang/String;\n+  #138 = Utf8               SourceFile\n+  #139 = Utf8               ExceptionTable.java\n+  #140 = Utf8               BootstrapMethods\n+  #141 = MethodHandle       6:#142        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #142 = Methodref          #143.#144     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #143 = Class              #145          // java/lang/invoke/LambdaMetafactory\n+  #144 = NameAndType        #146:#147     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #145 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #146 = Utf8               metafactory\n+  #147 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #148 = MethodType         #149          //  (I)Ljava/lang/Object;\n+  #149 = Utf8               (I)Ljava/lang/Object;\n+  #150 = MethodHandle       7:#151        // REF_invokeSpecial org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n+  #151 = Methodref          #2.#152       // org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n+  #152 = NameAndType        #136:#137     // lambda$getExceptionNames$0:(I)Ljava/lang/String;\n+  #153 = MethodType         #137          //  (I)Ljava/lang/String;\n+  #154 = Utf8               InnerClasses\n+  #155 = Class              #156          // java/lang/invoke/MethodHandles$Lookup\n+  #156 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #157 = Class              #158          // java/lang/invoke/MethodHandles\n+  #158 = Utf8               java/lang/invoke/MethodHandles\n+  #159 = Utf8               Lookup\n {\n   private int[] exceptionIndexTable;\n     descriptor: [I\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.bcel.classfile.ExceptionTable(org.apache.bcel.classfile.ExceptionTable);\n     descriptor: (Lorg/apache/bcel/classfile/ExceptionTable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokevirtual #1                  // Method getNameIndex:()I\n          5: aload_1\n-         6: invokevirtual #2                  // Method getLength:()I\n+         6: invokevirtual #7                  // Method getLength:()I\n          9: aload_1\n-        10: invokevirtual #3                  // Method getExceptionIndexTable:()[I\n+        10: invokevirtual #10                 // Method getExceptionIndexTable:()[I\n         13: aload_1\n-        14: invokevirtual #4                  // Method getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-        17: invokespecial #5                  // Method \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n+        14: invokevirtual #14                 // Method getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+        17: invokespecial #18                 // Method \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n         20: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 20\n \n   org.apache.bcel.classfile.ExceptionTable(int, int, java.io.DataInput, org.apache.bcel.classfile.ConstantPool) throws java.io.IOException;\n     descriptor: (IILjava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=7, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: aconst_null\n-         4: checkcast     #6                  // class \"[I\"\n+         4: checkcast     #22                 // class \"[I\"\n          7: aload         4\n-         9: invokespecial #5                  // Method \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n+         9: invokespecial #18                 // Method \"<init>\":(II[ILorg/apache/bcel/classfile/ConstantPool;)V\n         12: aload_3\n-        13: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        13: invokeinterface #24,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         18: istore        5\n         20: aload_0\n         21: iload         5\n         23: newarray       int\n-        25: putfield      #8                  // Field exceptionIndexTable:[I\n+        25: putfield      #29                 // Field exceptionIndexTable:[I\n         28: iconst_0\n         29: istore        6\n         31: iload         6\n         33: iload         5\n         35: if_icmpge     57\n         38: aload_0\n-        39: getfield      #8                  // Field exceptionIndexTable:[I\n+        39: getfield      #29                 // Field exceptionIndexTable:[I\n         42: iload         6\n         44: aload_3\n-        45: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        45: invokeinterface #24,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         50: iastore\n         51: iinc          6, 1\n         54: goto          31\n         57: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 12\n@@ -249,22 +249,22 @@\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: iconst_3\n          2: iload_1\n          3: iload_2\n          4: aload         4\n-         6: invokespecial #10                 // Method org/apache/bcel/classfile/Attribute.\"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n+         6: invokespecial #34                 // Method org/apache/bcel/classfile/Attribute.\"<init>\":(BIILorg/apache/bcel/classfile/ConstantPool;)V\n          9: aload_0\n         10: aload_3\n         11: ifnull        18\n         14: aload_3\n         15: goto          21\n-        18: getstatic     #11                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n-        21: putfield      #8                  // Field exceptionIndexTable:[I\n+        18: getstatic     #39                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n+        21: putfield      #29                 // Field exceptionIndexTable:[I\n         24: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 9\n         line 75: 24\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n@@ -279,51 +279,51 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #12,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n+         2: invokeinterface #44,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitExceptionTable:(Lorg/apache/bcel/classfile/ExceptionTable;)V\n          7: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 7\n \n   public org.apache.bcel.classfile.Attribute copy(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Lorg/apache/bcel/classfile/Attribute;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #13                 // Method clone:()Ljava/lang/Object;\n-         4: checkcast     #14                 // class org/apache/bcel/classfile/ExceptionTable\n+         1: invokevirtual #50                 // Method clone:()Ljava/lang/Object;\n+         4: checkcast     #2                  // class org/apache/bcel/classfile/ExceptionTable\n          7: astore_2\n          8: aload_0\n-         9: getfield      #8                  // Field exceptionIndexTable:[I\n+         9: getfield      #29                 // Field exceptionIndexTable:[I\n         12: ifnull        44\n         15: aload_2\n         16: aload_0\n-        17: getfield      #8                  // Field exceptionIndexTable:[I\n+        17: getfield      #29                 // Field exceptionIndexTable:[I\n         20: arraylength\n         21: newarray       int\n-        23: putfield      #8                  // Field exceptionIndexTable:[I\n+        23: putfield      #29                 // Field exceptionIndexTable:[I\n         26: aload_0\n-        27: getfield      #8                  // Field exceptionIndexTable:[I\n+        27: getfield      #29                 // Field exceptionIndexTable:[I\n         30: iconst_0\n         31: aload_2\n-        32: getfield      #8                  // Field exceptionIndexTable:[I\n+        32: getfield      #29                 // Field exceptionIndexTable:[I\n         35: iconst_0\n         36: aload_0\n-        37: getfield      #8                  // Field exceptionIndexTable:[I\n+        37: getfield      #29                 // Field exceptionIndexTable:[I\n         40: arraylength\n-        41: invokestatic  #15                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        41: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         44: aload_2\n         45: aload_1\n-        46: invokevirtual #16                 // Method setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n+        46: invokevirtual #60                 // Method setConstantPool:(Lorg/apache/bcel/classfile/ConstantPool;)V\n         49: aload_2\n         50: areturn\n       LineNumberTable:\n         line 93: 0\n         line 94: 8\n         line 95: 15\n         line 96: 26\n@@ -337,22 +337,22 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #17                 // Method org/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V\n+         2: invokespecial #64                 // Method org/apache/bcel/classfile/Attribute.dump:(Ljava/io/DataOutputStream;)V\n          5: aload_1\n          6: aload_0\n-         7: getfield      #8                  // Field exceptionIndexTable:[I\n+         7: getfield      #29                 // Field exceptionIndexTable:[I\n         10: arraylength\n-        11: invokevirtual #18                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        11: invokevirtual #68                 // Method java/io/DataOutputStream.writeShort:(I)V\n         14: aload_0\n-        15: getfield      #8                  // Field exceptionIndexTable:[I\n+        15: getfield      #29                 // Field exceptionIndexTable:[I\n         18: astore_2\n         19: aload_2\n         20: arraylength\n         21: istore_3\n         22: iconst_0\n         23: istore        4\n         25: iload         4\n@@ -360,15 +360,15 @@\n         28: if_icmpge     49\n         31: aload_2\n         32: iload         4\n         34: iaload\n         35: istore        5\n         37: aload_1\n         38: iload         5\n-        40: invokevirtual #18                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        40: invokevirtual #68                 // Method java/io/DataOutputStream.writeShort:(I)V\n         43: iinc          4, 1\n         46: goto          25\n         49: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 5\n         line 112: 14\n@@ -386,52 +386,52 @@\n \n   public int[] getExceptionIndexTable();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field exceptionIndexTable:[I\n+         1: getfield      #29                 // Field exceptionIndexTable:[I\n          4: areturn\n       LineNumberTable:\n         line 121: 0\n \n   public java.lang.String[] getExceptionNames();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field exceptionIndexTable:[I\n+         1: getfield      #29                 // Field exceptionIndexTable:[I\n          4: arraylength\n-         5: anewarray     #19                 // class java/lang/String\n+         5: anewarray     #74                 // class java/lang/String\n          8: astore_1\n          9: aload_1\n         10: aload_0\n-        11: invokedynamic #20,  0             // InvokeDynamic #0:apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n-        16: invokestatic  #21                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+        11: invokedynamic #76,  0             // InvokeDynamic #0:apply:(Lorg/apache/bcel/classfile/ExceptionTable;)Ljava/util/function/IntFunction;\n+        16: invokestatic  #80                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n         19: aload_1\n         20: areturn\n       LineNumberTable:\n         line 128: 0\n         line 129: 9\n         line 130: 19\n \n   public int getNumberOfExceptions();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field exceptionIndexTable:[I\n+         1: getfield      #29                 // Field exceptionIndexTable:[I\n          4: ifnonnull     11\n          7: iconst_0\n          8: goto          16\n         11: aload_0\n-        12: getfield      #8                  // Field exceptionIndexTable:[I\n+        12: getfield      #29                 // Field exceptionIndexTable:[I\n         15: arraylength\n         16: ireturn\n       LineNumberTable:\n         line 137: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 68 /* same_locals_1_stack_item */\n@@ -443,16 +443,16 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          12\n-         9: getstatic     #11                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n-        12: putfield      #8                  // Field exceptionIndexTable:[I\n+         9: getstatic     #39                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_INT_ARRAY:[I\n+        12: putfield      #29                 // Field exceptionIndexTable:[I\n         15: return\n       LineNumberTable:\n         line 145: 0\n         line 146: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class org/apache/bcel/classfile/ExceptionTable ]\n@@ -462,59 +462,59 @@\n           stack = [ class org/apache/bcel/classfile/ExceptionTable, class \"[I\" ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n-         0: new           #22                 // class java/lang/StringBuilder\n+         0: new           #86                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #88                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #24                 // String Exceptions:\n-        11: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #91                 // String Exceptions:\n+        11: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: iconst_0\n         16: istore_3\n         17: iload_3\n         18: aload_0\n-        19: getfield      #8                  // Field exceptionIndexTable:[I\n+        19: getfield      #29                 // Field exceptionIndexTable:[I\n         22: arraylength\n         23: if_icmpge     76\n         26: aload_0\n-        27: invokespecial #26                 // Method org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+        27: invokespecial #97                 // Method org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n         30: aload_0\n-        31: getfield      #8                  // Field exceptionIndexTable:[I\n+        31: getfield      #29                 // Field exceptionIndexTable:[I\n         34: iload_3\n         35: iaload\n         36: bipush        7\n-        38: invokevirtual #27                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+        38: invokevirtual #98                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n         41: astore_2\n         42: aload_1\n         43: aload_2\n         44: iconst_0\n-        45: invokestatic  #28                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-        48: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: invokestatic  #104                // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        48: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         51: pop\n         52: iload_3\n         53: aload_0\n-        54: getfield      #8                  // Field exceptionIndexTable:[I\n+        54: getfield      #29                 // Field exceptionIndexTable:[I\n         57: arraylength\n         58: iconst_1\n         59: isub\n         60: if_icmpge     70\n         63: aload_1\n-        64: ldc           #29                 // String ,\n-        66: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: ldc           #110                // String ,\n+        66: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         69: pop\n         70: iinc          3, 1\n         73: goto          17\n         76: aload_1\n-        77: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        77: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         80: areturn\n       LineNumberTable:\n         line 153: 0\n         line 155: 8\n         line 156: 15\n         line 157: 26\n         line 158: 42\n@@ -535,28 +535,28 @@\n \n   private java.lang.String lambda$getExceptionNames$0(int);\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #26                 // Method org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+         1: invokespecial #97                 // Method org/apache/bcel/classfile/Attribute.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n          4: aload_0\n-         5: getfield      #8                  // Field exceptionIndexTable:[I\n+         5: getfield      #29                 // Field exceptionIndexTable:[I\n          8: iload_1\n          9: iaload\n         10: bipush        7\n-        12: invokevirtual #27                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-        15: invokestatic  #31                 // Method org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+        12: invokevirtual #98                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+        15: invokestatic  #116                // Method org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 129: 0\n }\n SourceFile: \"ExceptionTable.java\"\n-InnerClasses:\n-  public static final #154= #153 of #157; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #89 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #141 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #90 (I)Ljava/lang/Object;\n-      #91 REF_invokeSpecial org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n-      #92 (I)Ljava/lang/String;\n+      #148 (I)Ljava/lang/Object;\n+      #150 REF_invokeSpecial org/apache/bcel/classfile/ExceptionTable.lambda$getExceptionNames$0:(I)Ljava/lang/String;\n+      #153 (I)Ljava/lang/String;\n+InnerClasses:\n+  public static final #159= #155 of #157; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
