{"diffoscope-json-version": 1, "source1": "first/AbstractAutomaticBean$RelaxedAccessModifierArrayConverter.class", "source2": "second/AbstractAutomaticBean$RelaxedAccessModifierArrayConverter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,27 +1,25 @@\n \n package com.puppycrawl.tools.checkstyle;\n \n-import java.util.List;\n import java.util.ArrayList;\n import java.util.StringTokenizer;\n import com.puppycrawl.tools.checkstyle.checks.naming.AccessModifierOption;\n import org.apache.commons.beanutils.Converter;\n \n private static final class RelaxedAccessModifierArrayConverter implements Converter\n {\n     private static final AccessModifierOption[] EMPTY_MODIFIER_ARRAY;\n     \n-    public Object convert(final Class type, final Object value) {\n-        final StringTokenizer tokenizer = new StringTokenizer(value.toString().trim(), \",\");\n-        final List<AccessModifierOption> result = new ArrayList<AccessModifierOption>();\n-        while (tokenizer.hasMoreTokens()) {\n-            final String token = tokenizer.nextToken();\n-            result.add(AccessModifierOption.getInstance(token));\n+    public Object convert(final Class clazz, final Object o) {\n+        final StringTokenizer stringTokenizer = new StringTokenizer(o.toString().trim(), \",\");\n+        final ArrayList list = new ArrayList();\n+        while (stringTokenizer.hasMoreTokens()) {\n+            list.add(AccessModifierOption.getInstance(stringTokenizer.nextToken()));\n         }\n-        return result.toArray(RelaxedAccessModifierArrayConverter.EMPTY_MODIFIER_ARRAY);\n+        return list.toArray(RelaxedAccessModifierArrayConverter.EMPTY_MODIFIER_ARRAY);\n     }\n     \n     static {\n         RelaxedAccessModifierArrayConverter.EMPTY_MODIFIER_ARRAY = new AccessModifierOption[0];\n     }\n }\n"}]}
