{"diffoscope-json-version": 1, "source1": "first/Base32InputStream.class", "source2": "second/Base32InputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum 151588b1ead11a0cc7381756e7cd537b5478997144066f8763af3709f1c9a062\n+  SHA-256 checksum dbc9df8d7e7166642d48cd0a8e254cc982806cce96c82f781255d6288798c318\n   Compiled from \"Base32InputStream.java\"\n public class org.apache.commons.codec.binary.Base32InputStream extends org.apache.commons.codec.binary.BaseNCodecInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/codec/binary/Base32InputStream\n-  super_class: #7                         // org/apache/commons/codec/binary/BaseNCodecInputStream\n+  this_class: #2                          // org/apache/commons/codec/binary/Base32InputStream\n+  super_class: #13                        // org/apache/commons/codec/binary/BaseNCodecInputStream\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #6.#27         // org/apache/commons/codec/binary/Base32InputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-   #2 = Class              #28            // org/apache/commons/codec/binary/Base32\n-   #3 = Methodref          #2.#29         // org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n-   #4 = Methodref          #7.#30         // org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #5 = Methodref          #2.#31         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n-   #6 = Class              #32            // org/apache/commons/codec/binary/Base32InputStream\n-   #7 = Class              #33            // org/apache/commons/codec/binary/BaseNCodecInputStream\n-   #8 = Utf8               <init>\n-   #9 = Utf8               (Ljava/io/InputStream;)V\n-  #10 = Utf8               Code\n-  #11 = Utf8               LineNumberTable\n-  #12 = Utf8               LocalVariableTable\n-  #13 = Utf8               this\n-  #14 = Utf8               Lorg/apache/commons/codec/binary/Base32InputStream;\n-  #15 = Utf8               in\n-  #16 = Utf8               Ljava/io/InputStream;\n-  #17 = Utf8               (Ljava/io/InputStream;Z)V\n-  #18 = Utf8               doEncode\n-  #19 = Utf8               Z\n-  #20 = Utf8               (Ljava/io/InputStream;ZI[B)V\n-  #21 = Utf8               lineLength\n-  #22 = Utf8               I\n-  #23 = Utf8               lineSeparator\n-  #24 = Utf8               [B\n-  #25 = Utf8               SourceFile\n-  #26 = Utf8               Base32InputStream.java\n-  #27 = NameAndType        #8:#17         // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #28 = Utf8               org/apache/commons/codec/binary/Base32\n-  #29 = NameAndType        #8:#34         // \"<init>\":(Z)V\n-  #30 = NameAndType        #8:#35         // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #31 = NameAndType        #8:#36         // \"<init>\":(I[B)V\n-  #32 = Utf8               org/apache/commons/codec/binary/Base32InputStream\n-  #33 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n-  #34 = Utf8               (Z)V\n-  #35 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #36 = Utf8               (I[B)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/codec/binary/Base32InputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #2 = Class              #4             // org/apache/commons/codec/binary/Base32InputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/InputStream;Z)V\n+   #4 = Utf8               org/apache/commons/codec/binary/Base32InputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;Z)V\n+   #7 = Class              #8             // org/apache/commons/codec/binary/Base32\n+   #8 = Utf8               org/apache/commons/codec/binary/Base32\n+   #9 = Methodref          #7.#10         // org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n+  #10 = NameAndType        #5:#11         // \"<init>\":(Z)V\n+  #11 = Utf8               (Z)V\n+  #12 = Methodref          #13.#14        // org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #13 = Class              #15            // org/apache/commons/codec/binary/BaseNCodecInputStream\n+  #14 = NameAndType        #5:#16         // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #15 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n+  #16 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #17 = Methodref          #7.#18         // org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(I[B)V\n+  #19 = Utf8               (I[B)V\n+  #20 = Utf8               (Ljava/io/InputStream;)V\n+  #21 = Utf8               Code\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/codec/binary/Base32InputStream;\n+  #26 = Utf8               in\n+  #27 = Utf8               Ljava/io/InputStream;\n+  #28 = Utf8               doEncode\n+  #29 = Utf8               Z\n+  #30 = Utf8               (Ljava/io/InputStream;ZI[B)V\n+  #31 = Utf8               lineLength\n+  #32 = Utf8               I\n+  #33 = Utf8               lineSeparator\n+  #34 = Utf8               [B\n+  #35 = Utf8               SourceFile\n+  #36 = Utf8               Base32InputStream.java\n {\n   public org.apache.commons.codec.binary.Base32InputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -66,20 +66,20 @@\n   public org.apache.commons.codec.binary.Base32InputStream(java.io.InputStream, boolean);\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: new           #2                  // class org/apache/commons/codec/binary/Base32\n+         2: new           #7                  // class org/apache/commons/codec/binary/Base32\n          5: dup\n          6: iconst_0\n-         7: invokespecial #3                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n+         7: invokespecial #9                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(Z)V\n         10: iload_2\n-        11: invokespecial #4                  // Method org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        11: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         14: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/codec/binary/Base32InputStream;\n@@ -89,21 +89,21 @@\n   public org.apache.commons.codec.binary.Base32InputStream(java.io.InputStream, boolean, int, byte[]);\n     descriptor: (Ljava/io/InputStream;ZI[B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n-         2: new           #2                  // class org/apache/commons/codec/binary/Base32\n+         2: new           #7                  // class org/apache/commons/codec/binary/Base32\n          5: dup\n          6: iload_3\n          7: aload         4\n-         9: invokespecial #5                  // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n+         9: invokespecial #17                 // Method org/apache/commons/codec/binary/Base32.\"<init>\":(I[B)V\n         12: iload_2\n-        13: invokespecial #4                  // Method org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        13: invokespecial #12                 // Method org/apache/commons/codec/binary/BaseNCodecInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         16: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/codec/binary/Base32InputStream;\n"}]}
