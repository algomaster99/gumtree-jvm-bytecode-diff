{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,377 +1,377 @@\n-  SHA-256 checksum 208ac82a917a839a0c18ab7872f1ffc097ff1eabeb05bb23e5f73574d98f6846\n+  SHA-256 checksum 5942b5e8b0b9a405c05b526b3b44497a36b833fb7fd2b6333b53f9ca9253a8db\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #95                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  super_class: #25                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Class              #218          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-    #2 = Fieldref           #1.#219       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-    #3 = Fieldref           #1.#220       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-    #4 = Methodref          #221.#222     // java/util/Arrays.copyOf:([BI)[B\n-    #5 = Methodref          #221.#223     // java/util/Arrays.equals:([B[B)Z\n-    #6 = Methodref          #1.#224       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #7 = Methodref          #95.#225      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #8 = Fieldref           #1.#226       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #9 = InvokeDynamic      #0:#231       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #10 = Fieldref           #1.#232       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #11 = Class              #233          // org/apache/commons/compress/compressors/lz4/XXHash32\n-   #12 = Methodref          #11.#225      // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-   #13 = Fieldref           #1.#234       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #14 = Fieldref           #1.#235       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #15 = Class              #236          // org/apache/commons/compress/utils/CountingInputStream\n-   #16 = Methodref          #15.#237      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #17 = Fieldref           #1.#238       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #18 = Fieldref           #1.#239       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #19 = Methodref          #1.#240       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #20 = Fieldref           #1.#241       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #21 = Methodref          #242.#243     // java/lang/Math.min:(II)I\n-   #22 = Methodref          #244.#245     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #23 = Fieldref           #1.#246       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #24 = Methodref          #185.#247     // java/io/InputStream.close:()V\n-   #25 = Methodref          #15.#247      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #26 = Methodref          #15.#248      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #27 = Methodref          #1.#249       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #28 = Methodref          #1.#250       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #29 = Methodref          #1.#251       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #30 = Fieldref           #1.#252       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #31 = String             #253          // block\n-   #32 = Methodref          #1.#254       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #33 = Methodref          #11.#255      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #34 = Methodref          #1.#256       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #35 = Methodref          #257.#258     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #36 = Long               -2147483648l\n-   #38 = Long               2147483647l\n-   #40 = Methodref          #1.#259       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #41 = Fieldref           #1.#260       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #42 = Class              #261          // org/apache/commons/compress/utils/BoundedInputStream\n-   #43 = Methodref          #42.#262      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #44 = Class              #263          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #45 = Methodref          #44.#264      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #46 = Fieldref           #1.#265       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #47 = Class              #266          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #48 = Methodref          #47.#237      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #49 = Fieldref           #1.#267       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #50 = Methodref          #47.#268      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #51 = Methodref          #1.#269       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #52 = Methodref          #1.#270       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #53 = Methodref          #1.#271       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #54 = Fieldref           #1.#272       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #55 = Methodref          #11.#273      // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #56 = Methodref          #1.#274       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-   #57 = Class              #275          // java/io/IOException\n-   #58 = String             #276          // Premature end of stream while reading frame flags\n-   #59 = Methodref          #57.#277      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #60 = Methodref          #11.#278      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #61 = Class              #279          // java/lang/StringBuilder\n-   #62 = Methodref          #61.#225      // java/lang/StringBuilder.\"<init>\":()V\n-   #63 = String             #280          // Unsupported version\n-   #64 = Methodref          #61.#281      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #65 = Methodref          #61.#282      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #66 = Methodref          #61.#283      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #67 = Integer            65536\n-   #68 = Fieldref           #1.#284       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #69 = String             #285          // Premature end of stream while reading frame BD byte\n-   #70 = Methodref          #286.#287     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #71 = Methodref          #1.#288       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #72 = String             #289          // Premature end of stream while reading content size\n-   #73 = String             #290          // Premature end of stream while reading frame header checksum\n-   #74 = Methodref          #11.#291      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #75 = Long               255l\n-   #77 = String             #292          // Frame header checksum mismatch\n-   #78 = Methodref          #185.#269     // java/io/InputStream.read:([BII)I\n-   #79 = Methodref          #47.#248      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #80 = Methodref          #1.#293       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #81 = Methodref          #15.#294      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #82 = String             #295          // Not a LZ4 frame stream\n-   #83 = String             #296          // LZ4 frame stream followed by garbage\n-   #84 = Methodref          #1.#297       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #85 = Methodref          #1.#298       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #86 = Methodref          #1.#299       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #87 = String             #300          // Found illegal skippable frame with negative size\n-   #88 = Methodref          #286.#301     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #89 = String             #302          // Premature end of stream while skipping frame\n-   #90 = String             #303          // Premature end of stream while reading\n-   #91 = String             #304          //  checksum\n-   #92 = Methodref          #257.#305     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #93 = String             #306          //  checksum mismatch.\n-   #94 = String             #307          // content\n-   #95 = Class              #308          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #96 = Class              #309          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #97 = Utf8               LZ4_SIGNATURE\n-   #98 = Utf8               [B\n-   #99 = Utf8               SKIPPABLE_FRAME_TRAILER\n-  #100 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-  #101 = Utf8               B\n-  #102 = Utf8               ConstantValue\n-  #103 = Integer            80\n-  #104 = Utf8               VERSION_MASK\n-  #105 = Utf8               I\n-  #106 = Integer            192\n-  #107 = Utf8               SUPPORTED_VERSION\n-  #108 = Integer            64\n-  #109 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #110 = Integer            32\n-  #111 = Utf8               BLOCK_CHECKSUM_MASK\n-  #112 = Integer            16\n-  #113 = Utf8               CONTENT_SIZE_MASK\n-  #114 = Integer            8\n-  #115 = Utf8               CONTENT_CHECKSUM_MASK\n-  #116 = Integer            4\n-  #117 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #118 = Integer            112\n-  #119 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #120 = Integer            -2147483648\n-  #121 = Utf8               oneByte\n-  #122 = Utf8               supplier\n-  #123 = Class              #310          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #124 = Utf8               ByteSupplier\n-  #125 = Utf8               InnerClasses\n-  #126 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #127 = Utf8               inputStream\n-  #128 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #129 = Utf8               decompressConcatenated\n-  #130 = Utf8               Z\n-  #131 = Utf8               expectBlockChecksum\n-  #132 = Utf8               expectBlockDependency\n-  #133 = Utf8               expectContentSize\n-  #134 = Utf8               expectContentChecksum\n-  #135 = Utf8               currentBlock\n-  #136 = Utf8               Ljava/io/InputStream;\n-  #137 = Utf8               endReached\n-  #138 = Utf8               inUncompressed\n-  #139 = Utf8               contentHash\n-  #140 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #141 = Utf8               blockHash\n-  #142 = Utf8               blockDependencyBuffer\n-  #143 = Utf8               isSkippableFrameSignature\n-  #144 = Utf8               ([B)Z\n-  #145 = Utf8               Code\n-  #146 = Utf8               LineNumberTable\n-  #147 = Utf8               LocalVariableTable\n-  #148 = Utf8               i\n-  #149 = Utf8               b\n-  #150 = Utf8               StackMapTable\n-  #151 = Utf8               matches\n-  #152 = Utf8               ([BI)Z\n-  #153 = Utf8               signature\n-  #154 = Utf8               length\n-  #155 = Utf8               shortenedSig\n-  #156 = Class              #98           // \"[B\"\n-  #157 = Utf8               <init>\n-  #158 = Utf8               (Ljava/io/InputStream;)V\n-  #159 = Utf8               this\n-  #160 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-  #161 = Utf8               in\n-  #162 = Utf8               Exceptions\n-  #163 = Utf8               (Ljava/io/InputStream;Z)V\n-  #164 = Utf8               appendToBlockDependencyBuffer\n-  #165 = Utf8               ([BII)V\n-  #166 = Utf8               keep\n-  #167 = Utf8               off\n-  #168 = Utf8               len\n-  #169 = Utf8               close\n-  #170 = Utf8               ()V\n-  #171 = Class              #311          // java/lang/Throwable\n-  #172 = Utf8               getCompressedCount\n-  #173 = Utf8               ()J\n-  #174 = Utf8               init\n-  #175 = Utf8               (Z)V\n-  #176 = Utf8               firstFrame\n-  #177 = Utf8               maybeFinishCurrentBlock\n-  #178 = Utf8               nextBlock\n-  #179 = Utf8               s\n-  #180 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n-  #181 = Utf8               J\n-  #182 = Utf8               uncompressed\n-  #183 = Utf8               realLen\n-  #184 = Utf8               capped\n-  #185 = Class              #312          // java/io/InputStream\n-  #186 = Utf8               read\n-  #187 = Utf8               ()I\n-  #188 = Utf8               ([BII)I\n-  #189 = Utf8               r\n-  #190 = Utf8               readFrameDescriptor\n-  #191 = Utf8               contentSize\n-  #192 = Utf8               skipped\n-  #193 = Utf8               flags\n-  #194 = Utf8               bdByte\n-  #195 = Utf8               headerHash\n-  #196 = Utf8               expectedHash\n-  #197 = Utf8               readOnce\n-  #198 = Utf8               cnt\n-  #199 = Utf8               l\n-  #200 = Utf8               before\n-  #201 = Utf8               readOneByte\n-  #202 = Utf8               readSignature\n-  #203 = Utf8               (Z)Z\n-  #204 = Utf8               garbageMessage\n-  #205 = Utf8               Ljava/lang/String;\n-  #206 = Class              #313          // java/lang/String\n-  #207 = Utf8               skipSkippableFrame\n-  #208 = Utf8               ([B)I\n-  #209 = Utf8               verifyChecksum\n-  #210 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #211 = Utf8               hash\n-  #212 = Utf8               kind\n-  #213 = Utf8               checksum\n-  #214 = Utf8               verifyContentChecksum\n-  #215 = Utf8               <clinit>\n-  #216 = Utf8               SourceFile\n-  #217 = Utf8               FramedLZ4CompressorInputStream.java\n-  #218 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #219 = NameAndType        #99:#98       // SKIPPABLE_FRAME_TRAILER:[B\n-  #220 = NameAndType        #97:#98       // LZ4_SIGNATURE:[B\n-  #221 = Class              #314          // java/util/Arrays\n-  #222 = NameAndType        #315:#316     // copyOf:([BI)[B\n-  #223 = NameAndType        #317:#318     // equals:([B[B)Z\n-  #224 = NameAndType        #157:#163     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #225 = NameAndType        #157:#170     // \"<init>\":()V\n-  #226 = NameAndType        #121:#98      // oneByte:[B\n-  #227 = Utf8               BootstrapMethods\n-  #228 = MethodHandle       6:#319        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #229 = MethodType         #187          //  ()I\n-  #230 = MethodHandle       7:#56         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-  #231 = NameAndType        #320:#321     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #232 = NameAndType        #122:#126     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #233 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #234 = NameAndType        #139:#140     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #235 = NameAndType        #141:#140     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #236 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #237 = NameAndType        #157:#158     // \"<init>\":(Ljava/io/InputStream;)V\n-  #238 = NameAndType        #127:#128     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #239 = NameAndType        #129:#130     // decompressConcatenated:Z\n-  #240 = NameAndType        #174:#175     // init:(Z)V\n-  #241 = NameAndType        #142:#98      // blockDependencyBuffer:[B\n-  #242 = Class              #322          // java/lang/Math\n-  #243 = NameAndType        #323:#324     // min:(II)I\n-  #244 = Class              #325          // java/lang/System\n-  #245 = NameAndType        #326:#327     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #246 = NameAndType        #135:#136     // currentBlock:Ljava/io/InputStream;\n-  #247 = NameAndType        #169:#170     // close:()V\n-  #248 = NameAndType        #328:#173     // getBytesRead:()J\n-  #249 = NameAndType        #202:#203     // readSignature:(Z)Z\n-  #250 = NameAndType        #190:#170     // readFrameDescriptor:()V\n-  #251 = NameAndType        #178:#170     // nextBlock:()V\n-  #252 = NameAndType        #131:#130     // expectBlockChecksum:Z\n-  #253 = Utf8               block\n-  #254 = NameAndType        #209:#210     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #255 = NameAndType        #329:#170     // reset:()V\n-  #256 = NameAndType        #177:#170     // maybeFinishCurrentBlock:()V\n-  #257 = Class              #330          // org/apache/commons/compress/utils/ByteUtils\n-  #258 = NameAndType        #331:#332     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #259 = NameAndType        #214:#170     // verifyContentChecksum:()V\n-  #260 = NameAndType        #137:#130     // endReached:Z\n-  #261 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #262 = NameAndType        #157:#333     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #263 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #264 = NameAndType        #157:#334     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #265 = NameAndType        #138:#130     // inUncompressed:Z\n-  #266 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #267 = NameAndType        #132:#130     // expectBlockDependency:Z\n-  #268 = NameAndType        #335:#336     // prefill:([B)V\n-  #269 = NameAndType        #186:#188     // read:([BII)I\n-  #270 = NameAndType        #197:#188     // readOnce:([BII)I\n-  #271 = NameAndType        #164:#165     // appendToBlockDependencyBuffer:([BII)V\n-  #272 = NameAndType        #134:#130     // expectContentChecksum:Z\n-  #273 = NameAndType        #337:#165     // update:([BII)V\n-  #274 = NameAndType        #201:#187     // readOneByte:()I\n-  #275 = Utf8               java/io/IOException\n-  #276 = Utf8               Premature end of stream while reading frame flags\n-  #277 = NameAndType        #157:#338     // \"<init>\":(Ljava/lang/String;)V\n-  #278 = NameAndType        #337:#339     // update:(I)V\n-  #279 = Utf8               java/lang/StringBuilder\n-  #280 = Utf8               Unsupported version\n-  #281 = NameAndType        #340:#341     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #282 = NameAndType        #340:#342     // append:(I)Ljava/lang/StringBuilder;\n-  #283 = NameAndType        #343:#344     // toString:()Ljava/lang/String;\n-  #284 = NameAndType        #133:#130     // expectContentSize:Z\n-  #285 = Utf8               Premature end of stream while reading frame BD byte\n-  #286 = Class              #345          // org/apache/commons/compress/utils/IOUtils\n-  #287 = NameAndType        #346:#347     // readFully:(Ljava/io/InputStream;[B)I\n-  #288 = NameAndType        #348:#339     // count:(I)V\n-  #289 = Utf8               Premature end of stream while reading content size\n-  #290 = Utf8               Premature end of stream while reading frame header checksum\n-  #291 = NameAndType        #349:#173     // getValue:()J\n-  #292 = Utf8               Frame header checksum mismatch\n-  #293 = NameAndType        #348:#350     // count:(J)V\n-  #294 = NameAndType        #186:#187     // read:()I\n-  #295 = Utf8               Not a LZ4 frame stream\n-  #296 = Utf8               LZ4 frame stream followed by garbage\n-  #297 = NameAndType        #207:#208     // skipSkippableFrame:([B)I\n-  #298 = NameAndType        #151:#152     // matches:([BI)Z\n-  #299 = NameAndType        #143:#144     // isSkippableFrameSignature:([B)Z\n-  #300 = Utf8               Found illegal skippable frame with negative size\n-  #301 = NameAndType        #351:#352     // skip:(Ljava/io/InputStream;J)J\n-  #302 = Utf8               Premature end of stream while skipping frame\n-  #303 = Utf8               Premature end of stream while reading\n-  #304 = Utf8                checksum\n-  #305 = NameAndType        #331:#353     // fromLittleEndian:([B)J\n-  #306 = Utf8                checksum mismatch.\n-  #307 = Utf8               content\n-  #308 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #309 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #310 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #311 = Utf8               java/lang/Throwable\n-  #312 = Utf8               java/io/InputStream\n-  #313 = Utf8               java/lang/String\n-  #314 = Utf8               java/util/Arrays\n-  #315 = Utf8               copyOf\n-  #316 = Utf8               ([BI)[B\n-  #317 = Utf8               equals\n-  #318 = Utf8               ([B[B)Z\n-  #319 = Methodref          #354.#355     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #320 = Utf8               getAsByte\n-  #321 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #322 = Utf8               java/lang/Math\n-  #323 = Utf8               min\n-  #324 = Utf8               (II)I\n-  #325 = Utf8               java/lang/System\n-  #326 = Utf8               arraycopy\n-  #327 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #328 = Utf8               getBytesRead\n-  #329 = Utf8               reset\n-  #330 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #331 = Utf8               fromLittleEndian\n-  #332 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #333 = Utf8               (Ljava/io/InputStream;J)V\n-  #334 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #335 = Utf8               prefill\n-  #336 = Utf8               ([B)V\n-  #337 = Utf8               update\n-  #338 = Utf8               (Ljava/lang/String;)V\n-  #339 = Utf8               (I)V\n-  #340 = Utf8               append\n-  #341 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #342 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #343 = Utf8               toString\n-  #344 = Utf8               ()Ljava/lang/String;\n-  #345 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #346 = Utf8               readFully\n-  #347 = Utf8               (Ljava/io/InputStream;[B)I\n-  #348 = Utf8               count\n-  #349 = Utf8               getValue\n-  #350 = Utf8               (J)V\n-  #351 = Utf8               skip\n-  #352 = Utf8               (Ljava/io/InputStream;J)J\n-  #353 = Utf8               ([B)J\n-  #354 = Class              #356          // java/lang/invoke/LambdaMetafactory\n-  #355 = NameAndType        #357:#360     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #356 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #357 = Utf8               metafactory\n-  #358 = Class              #362          // java/lang/invoke/MethodHandles$Lookup\n-  #359 = Utf8               Lookup\n-  #360 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #361 = Class              #363          // java/lang/invoke/MethodHandles\n-  #362 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #363 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #3 = Fieldref           #1.#4         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+    #4 = NameAndType        #5:#6         // SKIPPABLE_FRAME_TRAILER:[B\n+    #5 = Utf8               SKIPPABLE_FRAME_TRAILER\n+    #6 = Utf8               [B\n+    #7 = Fieldref           #1.#8         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+    #8 = NameAndType        #9:#6         // LZ4_SIGNATURE:[B\n+    #9 = Utf8               LZ4_SIGNATURE\n+   #10 = Methodref          #11.#12       // java/util/Arrays.copyOf:([BI)[B\n+   #11 = Class              #13           // java/util/Arrays\n+   #12 = NameAndType        #14:#15       // copyOf:([BI)[B\n+   #13 = Utf8               java/util/Arrays\n+   #14 = Utf8               copyOf\n+   #15 = Utf8               ([BI)[B\n+   #16 = Methodref          #11.#17       // java/util/Arrays.equals:([B[B)Z\n+   #17 = NameAndType        #18:#19       // equals:([B[B)Z\n+   #18 = Utf8               equals\n+   #19 = Utf8               ([B[B)Z\n+   #20 = Methodref          #1.#21        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+   #21 = NameAndType        #22:#23       // \"<init>\":(Ljava/io/InputStream;Z)V\n+   #22 = Utf8               <init>\n+   #23 = Utf8               (Ljava/io/InputStream;Z)V\n+   #24 = Methodref          #25.#26       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #25 = Class              #27           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #26 = NameAndType        #22:#28       // \"<init>\":()V\n+   #27 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #28 = Utf8               ()V\n+   #29 = Fieldref           #1.#30        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+   #30 = NameAndType        #31:#6        // oneByte:[B\n+   #31 = Utf8               oneByte\n+   #32 = InvokeDynamic      #0:#33        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #33 = NameAndType        #34:#35       // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #34 = Utf8               getAsByte\n+   #35 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #36 = Fieldref           #1.#37        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #37 = NameAndType        #38:#39       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #38 = Utf8               supplier\n+   #39 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #40 = Class              #41           // org/apache/commons/compress/compressors/lz4/XXHash32\n+   #41 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+   #42 = Methodref          #40.#26       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #43 = Fieldref           #1.#44        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #44 = NameAndType        #45:#46       // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #45 = Utf8               contentHash\n+   #46 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #47 = Fieldref           #1.#48        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #48 = NameAndType        #49:#46       // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #49 = Utf8               blockHash\n+   #50 = Class              #51           // org/apache/commons/compress/utils/CountingInputStream\n+   #51 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #52 = Methodref          #50.#53       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #53 = NameAndType        #22:#54       // \"<init>\":(Ljava/io/InputStream;)V\n+   #54 = Utf8               (Ljava/io/InputStream;)V\n+   #55 = Fieldref           #1.#56        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #56 = NameAndType        #57:#58       // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #57 = Utf8               inputStream\n+   #58 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #59 = Fieldref           #1.#60        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #60 = NameAndType        #61:#62       // decompressConcatenated:Z\n+   #61 = Utf8               decompressConcatenated\n+   #62 = Utf8               Z\n+   #63 = Methodref          #1.#64        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #64 = NameAndType        #65:#66       // init:(Z)V\n+   #65 = Utf8               init\n+   #66 = Utf8               (Z)V\n+   #67 = Fieldref           #1.#68        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+   #68 = NameAndType        #69:#6        // blockDependencyBuffer:[B\n+   #69 = Utf8               blockDependencyBuffer\n+   #70 = Methodref          #71.#72       // java/lang/Math.min:(II)I\n+   #71 = Class              #73           // java/lang/Math\n+   #72 = NameAndType        #74:#75       // min:(II)I\n+   #73 = Utf8               java/lang/Math\n+   #74 = Utf8               min\n+   #75 = Utf8               (II)I\n+   #76 = Methodref          #77.#78       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #77 = Class              #79           // java/lang/System\n+   #78 = NameAndType        #80:#81       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #79 = Utf8               java/lang/System\n+   #80 = Utf8               arraycopy\n+   #81 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #82 = Fieldref           #1.#83        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #83 = NameAndType        #84:#85       // currentBlock:Ljava/io/InputStream;\n+   #84 = Utf8               currentBlock\n+   #85 = Utf8               Ljava/io/InputStream;\n+   #86 = Methodref          #87.#88       // java/io/InputStream.close:()V\n+   #87 = Class              #89           // java/io/InputStream\n+   #88 = NameAndType        #90:#28       // close:()V\n+   #89 = Utf8               java/io/InputStream\n+   #90 = Utf8               close\n+   #91 = Methodref          #50.#88       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #92 = Methodref          #50.#93       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #93 = NameAndType        #94:#95       // getBytesRead:()J\n+   #94 = Utf8               getBytesRead\n+   #95 = Utf8               ()J\n+   #96 = Methodref          #1.#97        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #97 = NameAndType        #98:#99       // readSignature:(Z)Z\n+   #98 = Utf8               readSignature\n+   #99 = Utf8               (Z)Z\n+  #100 = Methodref          #1.#101       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+  #101 = NameAndType        #102:#28      // readFrameDescriptor:()V\n+  #102 = Utf8               readFrameDescriptor\n+  #103 = Methodref          #1.#104       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+  #104 = NameAndType        #105:#28      // nextBlock:()V\n+  #105 = Utf8               nextBlock\n+  #106 = Fieldref           #1.#107       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+  #107 = NameAndType        #108:#62      // expectBlockChecksum:Z\n+  #108 = Utf8               expectBlockChecksum\n+  #109 = String             #110          // block\n+  #110 = Utf8               block\n+  #111 = Methodref          #1.#112       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #112 = NameAndType        #113:#114     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #113 = Utf8               verifyChecksum\n+  #114 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #115 = Methodref          #40.#116      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+  #116 = NameAndType        #117:#28      // reset:()V\n+  #117 = Utf8               reset\n+  #118 = Methodref          #1.#119       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+  #119 = NameAndType        #120:#28      // maybeFinishCurrentBlock:()V\n+  #120 = Utf8               maybeFinishCurrentBlock\n+  #121 = Methodref          #122.#123     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #122 = Class              #124          // org/apache/commons/compress/utils/ByteUtils\n+  #123 = NameAndType        #125:#126     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #124 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #125 = Utf8               fromLittleEndian\n+  #126 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #127 = Long               -2147483648l\n+  #129 = Long               2147483647l\n+  #131 = Methodref          #1.#132       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+  #132 = NameAndType        #133:#28      // verifyContentChecksum:()V\n+  #133 = Utf8               verifyContentChecksum\n+  #134 = Fieldref           #1.#135       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+  #135 = NameAndType        #136:#62      // endReached:Z\n+  #136 = Utf8               endReached\n+  #137 = Class              #138          // org/apache/commons/compress/utils/BoundedInputStream\n+  #138 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #139 = Methodref          #137.#140     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #140 = NameAndType        #22:#141      // \"<init>\":(Ljava/io/InputStream;J)V\n+  #141 = Utf8               (Ljava/io/InputStream;J)V\n+  #142 = Class              #143          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #143 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #144 = Methodref          #142.#145     // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #145 = NameAndType        #22:#146      // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #146 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #147 = Fieldref           #1.#148       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+  #148 = NameAndType        #149:#62      // inUncompressed:Z\n+  #149 = Utf8               inUncompressed\n+  #150 = Class              #151          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #151 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #152 = Methodref          #150.#53      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #153 = Fieldref           #1.#154       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+  #154 = NameAndType        #155:#62      // expectBlockDependency:Z\n+  #155 = Utf8               expectBlockDependency\n+  #156 = Methodref          #150.#157     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+  #157 = NameAndType        #158:#159     // prefill:([B)V\n+  #158 = Utf8               prefill\n+  #159 = Utf8               ([B)V\n+  #160 = Methodref          #1.#161       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+  #161 = NameAndType        #162:#163     // read:([BII)I\n+  #162 = Utf8               read\n+  #163 = Utf8               ([BII)I\n+  #164 = Methodref          #1.#165       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+  #165 = NameAndType        #166:#163     // readOnce:([BII)I\n+  #166 = Utf8               readOnce\n+  #167 = Methodref          #1.#168       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+  #168 = NameAndType        #169:#170     // appendToBlockDependencyBuffer:([BII)V\n+  #169 = Utf8               appendToBlockDependencyBuffer\n+  #170 = Utf8               ([BII)V\n+  #171 = Fieldref           #1.#172       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+  #172 = NameAndType        #173:#62      // expectContentChecksum:Z\n+  #173 = Utf8               expectContentChecksum\n+  #174 = Methodref          #40.#175      // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+  #175 = NameAndType        #176:#170     // update:([BII)V\n+  #176 = Utf8               update\n+  #177 = Methodref          #1.#178       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #178 = NameAndType        #179:#180     // readOneByte:()I\n+  #179 = Utf8               readOneByte\n+  #180 = Utf8               ()I\n+  #181 = Class              #182          // java/io/IOException\n+  #182 = Utf8               java/io/IOException\n+  #183 = String             #184          // Premature end of stream while reading frame flags\n+  #184 = Utf8               Premature end of stream while reading frame flags\n+  #185 = Methodref          #181.#186     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #186 = NameAndType        #22:#187      // \"<init>\":(Ljava/lang/String;)V\n+  #187 = Utf8               (Ljava/lang/String;)V\n+  #188 = Methodref          #40.#189      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+  #189 = NameAndType        #176:#190     // update:(I)V\n+  #190 = Utf8               (I)V\n+  #191 = Class              #192          // java/lang/StringBuilder\n+  #192 = Utf8               java/lang/StringBuilder\n+  #193 = Methodref          #191.#26      // java/lang/StringBuilder.\"<init>\":()V\n+  #194 = String             #195          // Unsupported version\n+  #195 = Utf8               Unsupported version\n+  #196 = Methodref          #191.#197     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #197 = NameAndType        #198:#199     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #198 = Utf8               append\n+  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #200 = Methodref          #191.#201     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #201 = NameAndType        #198:#202     // append:(I)Ljava/lang/StringBuilder;\n+  #202 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #203 = Methodref          #191.#204     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #204 = NameAndType        #205:#206     // toString:()Ljava/lang/String;\n+  #205 = Utf8               toString\n+  #206 = Utf8               ()Ljava/lang/String;\n+  #207 = Integer            65536\n+  #208 = Fieldref           #1.#209       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+  #209 = NameAndType        #210:#62      // expectContentSize:Z\n+  #210 = Utf8               expectContentSize\n+  #211 = String             #212          // Premature end of stream while reading frame BD byte\n+  #212 = Utf8               Premature end of stream while reading frame BD byte\n+  #213 = Methodref          #214.#215     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #214 = Class              #216          // org/apache/commons/compress/utils/IOUtils\n+  #215 = NameAndType        #217:#218     // readFully:(Ljava/io/InputStream;[B)I\n+  #216 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #217 = Utf8               readFully\n+  #218 = Utf8               (Ljava/io/InputStream;[B)I\n+  #219 = Methodref          #1.#220       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+  #220 = NameAndType        #221:#190     // count:(I)V\n+  #221 = Utf8               count\n+  #222 = String             #223          // Premature end of stream while reading content size\n+  #223 = Utf8               Premature end of stream while reading content size\n+  #224 = String             #225          // Premature end of stream while reading frame header checksum\n+  #225 = Utf8               Premature end of stream while reading frame header checksum\n+  #226 = Methodref          #40.#227      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+  #227 = NameAndType        #228:#95      // getValue:()J\n+  #228 = Utf8               getValue\n+  #229 = Long               255l\n+  #231 = String             #232          // Frame header checksum mismatch\n+  #232 = Utf8               Frame header checksum mismatch\n+  #233 = Methodref          #87.#161      // java/io/InputStream.read:([BII)I\n+  #234 = Methodref          #150.#93      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+  #235 = Methodref          #1.#236       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+  #236 = NameAndType        #221:#237     // count:(J)V\n+  #237 = Utf8               (J)V\n+  #238 = Methodref          #50.#239      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #239 = NameAndType        #162:#180     // read:()I\n+  #240 = String             #241          // Not a LZ4 frame stream\n+  #241 = Utf8               Not a LZ4 frame stream\n+  #242 = String             #243          // LZ4 frame stream followed by garbage\n+  #243 = Utf8               LZ4 frame stream followed by garbage\n+  #244 = Methodref          #1.#245       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+  #245 = NameAndType        #246:#247     // skipSkippableFrame:([B)I\n+  #246 = Utf8               skipSkippableFrame\n+  #247 = Utf8               ([B)I\n+  #248 = Methodref          #1.#249       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+  #249 = NameAndType        #250:#251     // matches:([BI)Z\n+  #250 = Utf8               matches\n+  #251 = Utf8               ([BI)Z\n+  #252 = Methodref          #1.#253       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+  #253 = NameAndType        #254:#255     // isSkippableFrameSignature:([B)Z\n+  #254 = Utf8               isSkippableFrameSignature\n+  #255 = Utf8               ([B)Z\n+  #256 = String             #257          // Found illegal skippable frame with negative size\n+  #257 = Utf8               Found illegal skippable frame with negative size\n+  #258 = Methodref          #214.#259     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #259 = NameAndType        #260:#261     // skip:(Ljava/io/InputStream;J)J\n+  #260 = Utf8               skip\n+  #261 = Utf8               (Ljava/io/InputStream;J)J\n+  #262 = String             #263          // Premature end of stream while skipping frame\n+  #263 = Utf8               Premature end of stream while skipping frame\n+  #264 = String             #265          // Premature end of stream while reading\n+  #265 = Utf8               Premature end of stream while reading\n+  #266 = String             #267          //  checksum\n+  #267 = Utf8                checksum\n+  #268 = Methodref          #122.#269     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #269 = NameAndType        #125:#270     // fromLittleEndian:([B)J\n+  #270 = Utf8               ([B)J\n+  #271 = String             #272          //  checksum mismatch.\n+  #272 = Utf8                checksum mismatch.\n+  #273 = String             #274          // content\n+  #274 = Utf8               content\n+  #275 = Class              #276          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #276 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #277 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+  #278 = Utf8               B\n+  #279 = Utf8               ConstantValue\n+  #280 = Integer            80\n+  #281 = Utf8               VERSION_MASK\n+  #282 = Utf8               I\n+  #283 = Integer            192\n+  #284 = Utf8               SUPPORTED_VERSION\n+  #285 = Integer            64\n+  #286 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #287 = Integer            32\n+  #288 = Utf8               BLOCK_CHECKSUM_MASK\n+  #289 = Integer            16\n+  #290 = Utf8               CONTENT_SIZE_MASK\n+  #291 = Integer            8\n+  #292 = Utf8               CONTENT_CHECKSUM_MASK\n+  #293 = Integer            4\n+  #294 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #295 = Integer            112\n+  #296 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #297 = Integer            -2147483648\n+  #298 = Utf8               Code\n+  #299 = Utf8               LineNumberTable\n+  #300 = Utf8               LocalVariableTable\n+  #301 = Utf8               i\n+  #302 = Utf8               b\n+  #303 = Utf8               StackMapTable\n+  #304 = Utf8               signature\n+  #305 = Utf8               length\n+  #306 = Utf8               shortenedSig\n+  #307 = Class              #6            // \"[B\"\n+  #308 = Utf8               this\n+  #309 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+  #310 = Utf8               in\n+  #311 = Utf8               Exceptions\n+  #312 = Utf8               keep\n+  #313 = Utf8               off\n+  #314 = Utf8               len\n+  #315 = Class              #316          // java/lang/Throwable\n+  #316 = Utf8               java/lang/Throwable\n+  #317 = Utf8               getCompressedCount\n+  #318 = Utf8               firstFrame\n+  #319 = Utf8               s\n+  #320 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n+  #321 = Utf8               J\n+  #322 = Utf8               uncompressed\n+  #323 = Utf8               realLen\n+  #324 = Utf8               capped\n+  #325 = Utf8               r\n+  #326 = Utf8               contentSize\n+  #327 = Utf8               skipped\n+  #328 = Utf8               flags\n+  #329 = Utf8               bdByte\n+  #330 = Utf8               headerHash\n+  #331 = Utf8               expectedHash\n+  #332 = Utf8               cnt\n+  #333 = Utf8               l\n+  #334 = Utf8               before\n+  #335 = Utf8               garbageMessage\n+  #336 = Utf8               Ljava/lang/String;\n+  #337 = Class              #338          // java/lang/String\n+  #338 = Utf8               java/lang/String\n+  #339 = Utf8               hash\n+  #340 = Utf8               kind\n+  #341 = Utf8               checksum\n+  #342 = Utf8               <clinit>\n+  #343 = Utf8               SourceFile\n+  #344 = Utf8               FramedLZ4CompressorInputStream.java\n+  #345 = Utf8               BootstrapMethods\n+  #346 = MethodHandle       6:#347        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #347 = Methodref          #348.#349     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #348 = Class              #350          // java/lang/invoke/LambdaMetafactory\n+  #349 = NameAndType        #351:#352     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #350 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #351 = Utf8               metafactory\n+  #352 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #353 = MethodType         #180          //  ()I\n+  #354 = MethodHandle       7:#177        // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #355 = Utf8               InnerClasses\n+  #356 = Class              #357          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #357 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #358 = Utf8               ByteSupplier\n+  #359 = Class              #360          // java/lang/invoke/MethodHandles$Lookup\n+  #360 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #361 = Class              #362          // java/lang/invoke/MethodHandles\n+  #362 = Utf8               java/lang/invoke/MethodHandles\n+  #363 = Utf8               Lookup\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -496,15 +496,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #2                  // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #3                  // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -535,34 +535,34 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #3                  // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #7                  // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #3                  // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #7                  // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     30\n         21: aload_0\n-        22: getstatic     #3                  // Field LZ4_SIGNATURE:[B\n+        22: getstatic     #7                  // Field LZ4_SIGNATURE:[B\n         25: arraylength\n-        26: invokestatic  #4                  // Method java/util/Arrays.copyOf:([BI)[B\n+        26: invokestatic  #10                 // Method java/util/Arrays.copyOf:([BI)[B\n         29: astore_2\n         30: aload_2\n-        31: getstatic     #3                  // Field LZ4_SIGNATURE:[B\n-        34: invokestatic  #5                  // Method java/util/Arrays.equals:([B[B)Z\n+        31: getstatic     #7                  // Field LZ4_SIGNATURE:[B\n+        34: invokestatic  #16                 // Method java/util/Arrays.equals:([B[B)Z\n         37: ireturn\n       LineNumberTable:\n         line 86: 0\n         line 87: 8\n         line 90: 10\n         line 91: 12\n         line 92: 21\n@@ -582,15 +582,15 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #6                  // Method \"<init>\":(Ljava/io/InputStream;Z)V\n+         3: invokespecial #20                 // Method \"<init>\":(Ljava/io/InputStream;Z)V\n          6: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n@@ -600,45 +600,45 @@\n \n   public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #7                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #24                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #8                  // Field oneByte:[B\n+         8: putfield      #29                 // Field oneByte:[B\n         11: aload_0\n         12: aload_0\n-        13: invokedynamic #9,  0              // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-        18: putfield      #10                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        13: invokedynamic #32,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        18: putfield      #36                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         21: aload_0\n-        22: new           #11                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        22: new           #40                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         25: dup\n-        26: invokespecial #12                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        29: putfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        26: invokespecial #42                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        29: putfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         32: aload_0\n-        33: new           #11                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        33: new           #40                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         36: dup\n-        37: invokespecial #12                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        40: putfield      #14                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        37: invokespecial #42                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        40: putfield      #47                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         43: aload_0\n-        44: new           #15                 // class org/apache/commons/compress/utils/CountingInputStream\n+        44: new           #50                 // class org/apache/commons/compress/utils/CountingInputStream\n         47: dup\n         48: aload_1\n-        49: invokespecial #16                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        52: putfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        49: invokespecial #52                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        52: putfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         55: aload_0\n         56: iload_2\n-        57: putfield      #18                 // Field decompressConcatenated:Z\n+        57: putfield      #59                 // Field decompressConcatenated:Z\n         60: aload_0\n         61: iconst_1\n-        62: invokespecial #19                 // Method init:(Z)V\n+        62: invokespecial #63                 // Method init:(Z)V\n         65: return\n       LineNumberTable:\n         line 144: 0\n         line 99: 4\n         line 100: 11\n         line 115: 21\n         line 118: 32\n@@ -657,43 +657,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #20                 // Field blockDependencyBuffer:[B\n+         2: getfield      #67                 // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #21                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #70                 // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #20                 // Field blockDependencyBuffer:[B\n+        15: getfield      #67                 // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #20                 // Field blockDependencyBuffer:[B\n+        29: getfield      #67                 // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #20                 // Field blockDependencyBuffer:[B\n+        34: getfield      #67                 // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #76                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #20                 // Field blockDependencyBuffer:[B\n+        46: getfield      #67                 // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #22                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #76                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 151: 0\n         line 152: 10\n         line 153: 14\n         line 154: 23\n         line 156: 28\n@@ -715,30 +715,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #24                 // Method java/io/InputStream.close:()V\n+         8: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #86                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        23: invokevirtual #25                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        20: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        23: invokevirtual #91                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        34: invokevirtual #25                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        31: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        34: invokevirtual #91                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -763,36 +763,36 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #26                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #92                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 181: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n \n   private void init(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #27                 // Method readSignature:(Z)Z\n+         2: invokespecial #96                 // Method readSignature:(Z)Z\n          5: ifeq          16\n          8: aload_0\n-         9: invokespecial #28                 // Method readFrameDescriptor:()V\n+         9: invokespecial #100                // Method readFrameDescriptor:()V\n         12: aload_0\n-        13: invokespecial #29                 // Method nextBlock:()V\n+        13: invokespecial #103                // Method nextBlock:()V\n         16: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 8\n         line 187: 12\n         line 189: 16\n       LocalVariableTable:\n@@ -806,33 +806,33 @@\n \n   private void maybeFinishCurrentBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        43\n          7: aload_0\n-         8: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #24                 // Method java/io/InputStream.close:()V\n+         8: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #86                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #30                 // Field expectBlockChecksum:Z\n+        20: getfield      #106                // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n-        28: getfield      #14                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #31                 // String block\n-        33: invokespecial #32                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        28: getfield      #47                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        31: ldc           #109                // String block\n+        33: invokespecial #111                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n-        37: getfield      #14                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #33                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        37: getfield      #47                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        40: invokevirtual #115                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 192: 0\n         line 193: 7\n         line 194: 14\n         line 195: 19\n         line 196: 26\n@@ -848,95 +848,95 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #34                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #118                // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n-         5: getfield      #10                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         5: getfield      #36                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #35                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #121                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #36                 // long -2147483648l\n+        14: ldc2_w        #127                // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #38                 // long 2147483647l\n+        30: ldc2_w        #129                // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifne          67\n         42: aload_0\n-        43: invokespecial #40                 // Method verifyContentChecksum:()V\n+        43: invokespecial #131                // Method verifyContentChecksum:()V\n         46: aload_0\n-        47: getfield      #18                 // Field decompressConcatenated:Z\n+        47: getfield      #59                 // Field decompressConcatenated:Z\n         50: ifne          61\n         53: aload_0\n         54: iconst_1\n-        55: putfield      #41                 // Field endReached:Z\n+        55: putfield      #134                // Field endReached:Z\n         58: goto          66\n         61: aload_0\n         62: iconst_0\n-        63: invokespecial #19                 // Method init:(Z)V\n+        63: invokespecial #63                 // Method init:(Z)V\n         66: return\n-        67: new           #42                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        67: new           #137                // class org/apache/commons/compress/utils/BoundedInputStream\n         70: dup\n         71: aload_0\n-        72: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        72: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         75: iload         4\n         77: i2l\n-        78: invokespecial #43                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        78: invokespecial #139                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         81: astore        5\n         83: aload_0\n-        84: getfield      #30                 // Field expectBlockChecksum:Z\n+        84: getfield      #106                // Field expectBlockChecksum:Z\n         87: ifeq          105\n-        90: new           #44                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+        90: new           #142                // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n         93: dup\n         94: aload_0\n-        95: getfield      #14                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        95: getfield      #47                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         98: aload         5\n-       100: invokespecial #45                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       100: invokespecial #144                // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        103: astore        5\n        105: iload_3\n        106: ifeq          123\n        109: aload_0\n        110: iconst_1\n-       111: putfield      #46                 // Field inUncompressed:Z\n+       111: putfield      #147                // Field inUncompressed:Z\n        114: aload_0\n        115: aload         5\n-       117: putfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+       117: putfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n        120: goto          161\n        123: aload_0\n        124: iconst_0\n-       125: putfield      #46                 // Field inUncompressed:Z\n-       128: new           #47                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       125: putfield      #147                // Field inUncompressed:Z\n+       128: new           #150                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        131: dup\n        132: aload         5\n-       134: invokespecial #48                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       134: invokespecial #152                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        137: astore        6\n        139: aload_0\n-       140: getfield      #49                 // Field expectBlockDependency:Z\n+       140: getfield      #153                // Field expectBlockDependency:Z\n        143: ifeq          155\n        146: aload         6\n        148: aload_0\n-       149: getfield      #20                 // Field blockDependencyBuffer:[B\n-       152: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       149: getfield      #67                 // Field blockDependencyBuffer:[B\n+       152: invokevirtual #156                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        155: aload_0\n        156: aload         6\n-       158: putfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+       158: putfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n        161: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 4\n         line 205: 13\n         line 206: 29\n         line 207: 37\n@@ -991,24 +991,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field oneByte:[B\n+         2: getfield      #29                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #51                 // Method read:([BII)I\n+         7: invokevirtual #160                // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #8                  // Field oneByte:[B\n+        19: getfield      #29                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 236: 0\n@@ -1028,58 +1028,58 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #41                 // Field endReached:Z\n+         7: getfield      #134                // Field endReached:Z\n         10: ifeq          15\n         13: iconst_m1\n         14: ireturn\n         15: aload_0\n         16: aload_1\n         17: iload_2\n         18: iload_3\n-        19: invokespecial #52                 // Method readOnce:([BII)I\n+        19: invokespecial #164                // Method readOnce:([BII)I\n         22: istore        4\n         24: iload         4\n         26: iconst_m1\n         27: if_icmpne     50\n         30: aload_0\n-        31: invokespecial #29                 // Method nextBlock:()V\n+        31: invokespecial #103                // Method nextBlock:()V\n         34: aload_0\n-        35: getfield      #41                 // Field endReached:Z\n+        35: getfield      #134                // Field endReached:Z\n         38: ifne          50\n         41: aload_0\n         42: aload_1\n         43: iload_2\n         44: iload_3\n-        45: invokespecial #52                 // Method readOnce:([BII)I\n+        45: invokespecial #164                // Method readOnce:([BII)I\n         48: istore        4\n         50: iload         4\n         52: iconst_m1\n         53: if_icmpeq     89\n         56: aload_0\n-        57: getfield      #49                 // Field expectBlockDependency:Z\n+        57: getfield      #153                // Field expectBlockDependency:Z\n         60: ifeq          71\n         63: aload_0\n         64: aload_1\n         65: iload_2\n         66: iload         4\n-        68: invokespecial #53                 // Method appendToBlockDependencyBuffer:([BII)V\n+        68: invokespecial #167                // Method appendToBlockDependencyBuffer:([BII)V\n         71: aload_0\n-        72: getfield      #54                 // Field expectContentChecksum:Z\n+        72: getfield      #171                // Field expectContentChecksum:Z\n         75: ifeq          89\n         78: aload_0\n-        79: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        79: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         82: aload_1\n         83: iload_2\n         84: iload         4\n-        86: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+        86: invokevirtual #174                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n         89: iload         4\n         91: ireturn\n       LineNumberTable:\n         line 242: 0\n         line 243: 4\n         line 245: 6\n         line 246: 13\n@@ -1114,171 +1114,171 @@\n \n   private void readFrameDescriptor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=1\n          0: aload_0\n-         1: invokespecial #56                 // Method readOneByte:()I\n+         1: invokespecial #177                // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n-        10: new           #57                 // class java/io/IOException\n+        10: new           #181                // class java/io/IOException\n         13: dup\n-        14: ldc           #58                 // String Premature end of stream while reading frame flags\n-        16: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #183                // String Premature end of stream while reading frame flags\n+        16: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n-        25: invokevirtual #60                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+        25: invokevirtual #188                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n         35: if_icmpeq     68\n-        38: new           #57                 // class java/io/IOException\n+        38: new           #181                // class java/io/IOException\n         41: dup\n-        42: new           #61                 // class java/lang/StringBuilder\n+        42: new           #191                // class java/lang/StringBuilder\n         45: dup\n-        46: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        49: ldc           #63                 // String Unsupported version\n-        51: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokespecial #193                // Method java/lang/StringBuilder.\"<init>\":()V\n+        49: ldc           #194                // String Unsupported version\n+        51: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         54: iload_1\n         55: bipush        6\n         57: ishr\n-        58: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        61: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        64: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        58: invokevirtual #200                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        61: invokevirtual #203                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        64: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: aload_0\n         69: iload_1\n         70: bipush        32\n         72: iand\n         73: ifne          80\n         76: iconst_1\n         77: goto          81\n         80: iconst_0\n-        81: putfield      #49                 // Field expectBlockDependency:Z\n+        81: putfield      #153                // Field expectBlockDependency:Z\n         84: aload_0\n-        85: getfield      #49                 // Field expectBlockDependency:Z\n+        85: getfield      #153                // Field expectBlockDependency:Z\n         88: ifeq          109\n         91: aload_0\n-        92: getfield      #20                 // Field blockDependencyBuffer:[B\n+        92: getfield      #67                 // Field blockDependencyBuffer:[B\n         95: ifnonnull     114\n         98: aload_0\n-        99: ldc           #67                 // int 65536\n+        99: ldc           #207                // int 65536\n        101: newarray       byte\n-       103: putfield      #20                 // Field blockDependencyBuffer:[B\n+       103: putfield      #67                 // Field blockDependencyBuffer:[B\n        106: goto          114\n        109: aload_0\n        110: aconst_null\n-       111: putfield      #20                 // Field blockDependencyBuffer:[B\n+       111: putfield      #67                 // Field blockDependencyBuffer:[B\n        114: aload_0\n        115: iload_1\n        116: bipush        16\n        118: iand\n        119: ifeq          126\n        122: iconst_1\n        123: goto          127\n        126: iconst_0\n-       127: putfield      #30                 // Field expectBlockChecksum:Z\n+       127: putfield      #106                // Field expectBlockChecksum:Z\n        130: aload_0\n        131: iload_1\n        132: bipush        8\n        134: iand\n        135: ifeq          142\n        138: iconst_1\n        139: goto          143\n        142: iconst_0\n-       143: putfield      #68                 // Field expectContentSize:Z\n+       143: putfield      #208                // Field expectContentSize:Z\n        146: aload_0\n        147: iload_1\n        148: iconst_4\n        149: iand\n        150: ifeq          157\n        153: iconst_1\n        154: goto          158\n        157: iconst_0\n-       158: putfield      #54                 // Field expectContentChecksum:Z\n+       158: putfield      #171                // Field expectContentChecksum:Z\n        161: aload_0\n-       162: invokespecial #56                 // Method readOneByte:()I\n+       162: invokespecial #177                // Method readOneByte:()I\n        165: istore_2\n        166: iload_2\n        167: iconst_m1\n        168: if_icmpne     181\n-       171: new           #57                 // class java/io/IOException\n+       171: new           #181                // class java/io/IOException\n        174: dup\n-       175: ldc           #69                 // String Premature end of stream while reading frame BD byte\n-       177: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       175: ldc           #211                // String Premature end of stream while reading frame BD byte\n+       177: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        180: athrow\n        181: aload_0\n-       182: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       182: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        185: iload_2\n-       186: invokevirtual #60                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       186: invokevirtual #188                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n        189: aload_0\n-       190: getfield      #68                 // Field expectContentSize:Z\n+       190: getfield      #208                // Field expectContentSize:Z\n        193: ifeq          245\n        196: bipush        8\n        198: newarray       byte\n        200: astore_3\n        201: aload_0\n-       202: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       202: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n        205: aload_3\n-       206: invokestatic  #70                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       206: invokestatic  #213                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        209: istore        4\n        211: aload_0\n        212: iload         4\n-       214: invokevirtual #71                 // Method count:(I)V\n+       214: invokevirtual #219                // Method count:(I)V\n        217: bipush        8\n        219: iload         4\n        221: if_icmpeq     234\n-       224: new           #57                 // class java/io/IOException\n+       224: new           #181                // class java/io/IOException\n        227: dup\n-       228: ldc           #72                 // String Premature end of stream while reading content size\n-       230: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       228: ldc           #222                // String Premature end of stream while reading content size\n+       230: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        233: athrow\n        234: aload_0\n-       235: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       235: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        238: aload_3\n        239: iconst_0\n        240: aload_3\n        241: arraylength\n-       242: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       242: invokevirtual #174                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n        245: aload_0\n-       246: invokespecial #56                 // Method readOneByte:()I\n+       246: invokespecial #177                // Method readOneByte:()I\n        249: istore_3\n        250: iload_3\n        251: iconst_m1\n        252: if_icmpne     265\n-       255: new           #57                 // class java/io/IOException\n+       255: new           #181                // class java/io/IOException\n        258: dup\n-       259: ldc           #73                 // String Premature end of stream while reading frame header checksum\n-       261: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       259: ldc           #224                // String Premature end of stream while reading frame header checksum\n+       261: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        264: athrow\n        265: aload_0\n-       266: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       269: invokevirtual #74                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       266: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       269: invokevirtual #226                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n        272: bipush        8\n        274: lshr\n-       275: ldc2_w        #75                 // long 255l\n+       275: ldc2_w        #229                // long 255l\n        278: land\n        279: l2i\n        280: istore        4\n        282: aload_0\n-       283: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       286: invokevirtual #33                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       283: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       286: invokevirtual #115                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n        289: iload_3\n        290: iload         4\n        292: if_icmpeq     305\n-       295: new           #57                 // class java/io/IOException\n+       295: new           #181                // class java/io/IOException\n        298: dup\n-       299: ldc           #77                 // String Frame header checksum mismatch\n-       301: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       299: ldc           #231                // String Frame header checksum mismatch\n+       301: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        304: athrow\n        305: return\n       LineNumberTable:\n         line 267: 0\n         line 268: 5\n         line 269: 10\n         line 271: 20\n@@ -1370,48 +1370,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #46                 // Field inUncompressed:Z\n+         1: getfield      #147                // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+         8: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #233                // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n-        22: invokevirtual #71                 // Method count:(I)V\n+        22: invokevirtual #219                // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n-        29: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #47                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        29: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n+        32: checkcast     #150                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #234                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n-        45: getfield      #23                 // Field currentBlock:Ljava/io/InputStream;\n+        45: getfield      #82                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #233                // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #234                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #80                 // Method count:(J)V\n+        65: invokevirtual #235                // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 312: 0\n         line 313: 7\n         line 314: 19\n         line 315: 25\n@@ -1437,23 +1437,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #81                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         1: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #238                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #71                 // Method count:(I)V\n+        15: invokevirtual #219                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1476,72 +1476,72 @@\n   private boolean readSignature(boolean) throws java.io.IOException;\n     descriptor: (Z)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n          1: ifeq          9\n-         4: ldc           #82                 // String Not a LZ4 frame stream\n+         4: ldc           #240                // String Not a LZ4 frame stream\n          6: goto          11\n-         9: ldc           #83                 // String LZ4 frame stream followed by garbage\n+         9: ldc           #242                // String LZ4 frame stream followed by garbage\n         11: astore_2\n         12: iconst_4\n         13: newarray       byte\n         15: astore_3\n         16: aload_0\n-        17: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        17: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         20: aload_3\n-        21: invokestatic  #70                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        21: invokestatic  #213                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         24: istore        4\n         26: aload_0\n         27: iload         4\n-        29: invokevirtual #71                 // Method count:(I)V\n+        29: invokevirtual #219                // Method count:(I)V\n         32: iconst_0\n         33: iload         4\n         35: if_icmpne     49\n         38: iload_1\n         39: ifne          49\n         42: aload_0\n         43: iconst_1\n-        44: putfield      #41                 // Field endReached:Z\n+        44: putfield      #134                // Field endReached:Z\n         47: iconst_0\n         48: ireturn\n         49: iconst_4\n         50: iload         4\n         52: if_icmpeq     64\n-        55: new           #57                 // class java/io/IOException\n+        55: new           #181                // class java/io/IOException\n         58: dup\n         59: aload_2\n-        60: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         63: athrow\n         64: aload_0\n         65: aload_3\n-        66: invokespecial #84                 // Method skipSkippableFrame:([B)I\n+        66: invokespecial #244                // Method skipSkippableFrame:([B)I\n         69: istore        4\n         71: iconst_0\n         72: iload         4\n         74: if_icmpne     88\n         77: iload_1\n         78: ifne          88\n         81: aload_0\n         82: iconst_1\n-        83: putfield      #41                 // Field endReached:Z\n+        83: putfield      #134                // Field endReached:Z\n         86: iconst_0\n         87: ireturn\n         88: iconst_4\n         89: iload         4\n         91: if_icmpne     102\n         94: aload_3\n         95: iconst_4\n-        96: invokestatic  #85                 // Method matches:([BI)Z\n+        96: invokestatic  #248                // Method matches:([BI)Z\n         99: ifne          111\n-       102: new           #57                 // class java/io/IOException\n+       102: new           #181                // class java/io/IOException\n        105: dup\n        106: aload_2\n-       107: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       107: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        110: athrow\n        111: iconst_1\n        112: ireturn\n       LineNumberTable:\n         line 334: 0\n         line 335: 12\n         line 336: 16\n@@ -1584,90 +1584,90 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n-         4: if_icmpne     89\n+         4: if_icmpne     91\n          7: aload_1\n-         8: invokestatic  #86                 // Method isSkippableFrameSignature:([B)Z\n-        11: ifeq          89\n+         8: invokestatic  #252                // Method isSkippableFrameSignature:([B)Z\n+        11: ifeq          91\n         14: aload_0\n-        15: getfield      #10                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        15: getfield      #36                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #35                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #121                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n-        26: ifge          39\n-        29: new           #57                 // class java/io/IOException\n+        26: ifge          40\n+        29: new           #181                // class java/io/IOException\n         32: dup\n-        33: ldc           #87                 // String Found illegal skippable frame with negative size\n-        35: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        38: athrow\n-        39: aload_0\n-        40: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        43: lload_3\n-        44: invokestatic  #88                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-        47: lstore        5\n-        49: aload_0\n-        50: lload         5\n-        52: invokevirtual #80                 // Method count:(J)V\n-        55: lload_3\n-        56: lload         5\n-        58: lcmp\n-        59: ifeq          72\n-        62: new           #57                 // class java/io/IOException\n-        65: dup\n-        66: ldc           #89                 // String Premature end of stream while skipping frame\n-        68: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        71: athrow\n-        72: aload_0\n-        73: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        76: aload_1\n-        77: invokestatic  #70                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-        80: istore_2\n-        81: aload_0\n-        82: iload_2\n-        83: invokevirtual #71                 // Method count:(I)V\n-        86: goto          2\n-        89: iload_2\n-        90: ireturn\n+        33: ldc_w         #256                // String Found illegal skippable frame with negative size\n+        36: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        39: athrow\n+        40: aload_0\n+        41: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        44: lload_3\n+        45: invokestatic  #258                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        48: lstore        5\n+        50: aload_0\n+        51: lload         5\n+        53: invokevirtual #235                // Method count:(J)V\n+        56: lload_3\n+        57: lload         5\n+        59: lcmp\n+        60: ifeq          74\n+        63: new           #181                // class java/io/IOException\n+        66: dup\n+        67: ldc_w         #262                // String Premature end of stream while skipping frame\n+        70: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        73: athrow\n+        74: aload_0\n+        75: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        78: aload_1\n+        79: invokestatic  #213                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        82: istore_2\n+        83: aload_0\n+        84: iload_2\n+        85: invokevirtual #219                // Method count:(I)V\n+        88: goto          2\n+        91: iload_2\n+        92: ireturn\n       LineNumberTable:\n         line 368: 0\n         line 369: 2\n         line 370: 14\n         line 371: 23\n         line 372: 29\n-        line 374: 39\n-        line 375: 49\n-        line 376: 55\n-        line 377: 62\n-        line 379: 72\n-        line 380: 81\n-        line 381: 86\n-        line 382: 89\n+        line 374: 40\n+        line 375: 50\n+        line 376: 56\n+        line 377: 63\n+        line 379: 74\n+        line 380: 83\n+        line 381: 88\n+        line 382: 91\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           23      63     3   len   J\n-           49      37     5 skipped   J\n-            0      91     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-            0      91     1     b   [B\n-            2      89     2  read   I\n+           23      65     3   len   J\n+           50      38     5 skipped   J\n+            0      93     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+            0      93     1     b   [B\n+            2      91     2  read   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 36\n+          offset_delta = 37\n           locals = [ long ]\n         frame_type = 252 /* append */\n-          offset_delta = 32\n+          offset_delta = 33\n           locals = [ long ]\n         frame_type = 249 /* chop */\n           offset_delta = 16\n     Exceptions:\n       throws java.io.IOException\n \n   private void verifyChecksum(org.apache.commons.compress.compressors.lz4.XXHash32, java.lang.String) throws java.io.IOException;\n@@ -1675,114 +1675,114 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: iconst_4\n          1: newarray       byte\n          3: astore_3\n          4: aload_0\n-         5: getfield      #17                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         5: getfield      #55                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n          8: aload_3\n-         9: invokestatic  #70                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #213                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n-        17: invokevirtual #71                 // Method count:(I)V\n+        17: invokevirtual #219                // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n-        23: if_icmpeq     58\n-        26: new           #57                 // class java/io/IOException\n+        23: if_icmpeq     60\n+        26: new           #181                // class java/io/IOException\n         29: dup\n-        30: new           #61                 // class java/lang/StringBuilder\n+        30: new           #191                // class java/lang/StringBuilder\n         33: dup\n-        34: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #90                 // String Premature end of stream while reading\n-        39: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: aload_2\n-        43: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #91                 // String  checksum\n-        48: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        57: athrow\n-        58: aload_1\n-        59: invokevirtual #74                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-        62: lstore        5\n-        64: lload         5\n-        66: aload_3\n-        67: invokestatic  #92                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-        70: lcmp\n-        71: ifeq          101\n-        74: new           #57                 // class java/io/IOException\n-        77: dup\n-        78: new           #61                 // class java/lang/StringBuilder\n-        81: dup\n-        82: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        85: aload_2\n-        86: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: ldc           #93                 // String  checksum mismatch.\n-        91: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: return\n+        34: invokespecial #193                // Method java/lang/StringBuilder.\"<init>\":()V\n+        37: ldc_w         #264                // String Premature end of stream while reading\n+        40: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: aload_2\n+        44: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: ldc_w         #266                // String  checksum\n+        50: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #203                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        59: athrow\n+        60: aload_1\n+        61: invokevirtual #226                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        64: lstore        5\n+        66: lload         5\n+        68: aload_3\n+        69: invokestatic  #268                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        72: lcmp\n+        73: ifeq          104\n+        76: new           #181                // class java/io/IOException\n+        79: dup\n+        80: new           #191                // class java/lang/StringBuilder\n+        83: dup\n+        84: invokespecial #193                // Method java/lang/StringBuilder.\"<init>\":()V\n+        87: aload_2\n+        88: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        91: ldc_w         #271                // String  checksum mismatch.\n+        94: invokevirtual #196                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        97: invokevirtual #203                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       100: invokespecial #185                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       103: athrow\n+       104: return\n       LineNumberTable:\n         line 386: 0\n         line 387: 4\n         line 388: 14\n         line 389: 20\n         line 390: 26\n-        line 392: 58\n-        line 393: 64\n-        line 394: 74\n-        line 396: 101\n+        line 392: 60\n+        line 393: 66\n+        line 394: 76\n+        line 396: 104\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     102     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-            0     102     1  hash   Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-            0     102     2  kind   Ljava/lang/String;\n-            4      98     3 checksum   [B\n-           14      88     4  read   I\n-           64      38     5 expectedHash   J\n+            0     105     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+            0     105     1  hash   Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+            0     105     2  kind   Ljava/lang/String;\n+            4     101     3 checksum   [B\n+           14      91     4  read   I\n+           66      39     5 expectedHash   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 58\n+          offset_delta = 60\n           locals = [ class \"[B\", int ]\n         frame_type = 252 /* append */\n-          offset_delta = 42\n+          offset_delta = 43\n           locals = [ long ]\n     Exceptions:\n       throws java.io.IOException\n \n   private void verifyContentChecksum() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #54                 // Field expectContentChecksum:Z\n-         4: ifeq          17\n+         1: getfield      #171                // Field expectContentChecksum:Z\n+         4: ifeq          18\n          7: aload_0\n          8: aload_0\n-         9: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #94                 // String content\n-        14: invokespecial #32                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-        17: aload_0\n-        18: getfield      #13                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #33                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-        24: return\n+         9: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        12: ldc_w         #273                // String content\n+        15: invokespecial #111                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        18: aload_0\n+        19: getfield      #43                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        22: invokevirtual #115                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        25: return\n       LineNumberTable:\n         line 399: 0\n         line 400: 7\n-        line 402: 17\n-        line 403: 24\n+        line 402: 18\n+        line 403: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      25     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+            0      26     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n@@ -1801,38 +1801,38 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #3                  // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #7                  // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #2                  // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #3                  // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n-InnerClasses:\n-  public static #124= #123 of #257;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #359= #358 of #361; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #228 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #346 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #229 ()I\n-      #230 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-      #229 ()I\n+      #353 ()I\n+      #354 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+      #353 ()I\n+InnerClasses:\n+  public static #358= #356 of #122;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #363= #359 of #361; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
