{"diffoscope-json-version": 1, "source1": "first/BZip2CompressorInputStream.class", "source2": "second/BZip2CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -142,15 +142,15 @@\n     \n     private int readNextByte(final BitInputStream in) throws IOException {\n         final long b = in.readBits(8);\n         return (int)b;\n     }\n     \n     private boolean init(final boolean isFirstStream) throws IOException {\n-        if (null == this.bin) {\n+        if (this.bin == null) {\n             throw new IOException(\"No InputStream\");\n         }\n         if (!isFirstStream) {\n             this.bin.clearBitCache();\n         }\n         final int magic0 = this.readNextByte(this.bin);\n         if (magic0 == -1 && !isFirstStream) {\n@@ -224,14 +224,16 @@\n             try {\n                 inShadow.close();\n             }\n             finally {\n                 this.data = null;\n                 this.bin = null;\n             }\n+            this.data = null;\n+            this.bin = null;\n         }\n     }\n     \n     private static int bsR(final BitInputStream bin, final int n) throws IOException {\n         final long thech = bin.readBits(n);\n         if (thech < 0L) {\n             throw new IOException(\"Unexpected end of stream\");\n"}]}
