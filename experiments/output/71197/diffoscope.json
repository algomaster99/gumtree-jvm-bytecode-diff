{"diffoscope-json-version": 1, "source1": "first/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "source2": "second/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,165 +1,161 @@\n-  SHA-256 checksum f3598132c0f7cf07764d4a77736c9bb3a845d8effe7f57c275cb04b57024bc73\n+  SHA-256 checksum 3e42735908a3768d4b49ac9472f2b10874b44df52b9a4b07a5e35805f7fb4cb4\n   Compiled from \"ZipSplitReadOnlySeekableByteChannel.java\"\n class org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator extends java.lang.Object implements java.util.Comparator<java.io.File>, java.io.Serializable\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 1, methods: 4, attributes: 3\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n-   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n-   #8 = Class              #9             // java/lang/Object\n-   #9 = Utf8               java/lang/Object\n-  #10 = Methodref          #11.#12        // java/io/File.getPath:()Ljava/lang/String;\n-  #11 = Class              #13            // java/io/File\n-  #12 = NameAndType        #14:#15        // getPath:()Ljava/lang/String;\n-  #13 = Utf8               java/io/File\n-  #14 = Utf8               getPath\n-  #15 = Utf8               ()Ljava/lang/String;\n-  #16 = Methodref          #17.#18        // org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #17 = Class              #19            // org/apache/commons/compress/utils/FileNameUtils\n-  #18 = NameAndType        #20:#21        // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #19 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n-  #20 = Utf8               getExtension\n-  #21 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #22 = String             #23            // z\n-  #23 = Utf8               z\n-  #24 = Methodref          #25.#26        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-  #25 = Class              #27            // java/lang/String\n-  #26 = NameAndType        #28:#29        // startsWith:(Ljava/lang/String;)Z\n-  #27 = Utf8               java/lang/String\n-  #28 = Utf8               startsWith\n-  #29 = Utf8               (Ljava/lang/String;)Z\n-  #30 = Methodref          #25.#31        // java/lang/String.substring:(I)Ljava/lang/String;\n-  #31 = NameAndType        #32:#33        // substring:(I)Ljava/lang/String;\n-  #32 = Utf8               substring\n-  #33 = Utf8               (I)Ljava/lang/String;\n-  #34 = Methodref          #35.#36        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-  #35 = Class              #37            // java/lang/Integer\n-  #36 = NameAndType        #38:#39        // parseInt:(Ljava/lang/String;)I\n-  #37 = Utf8               java/lang/Integer\n-  #38 = Utf8               parseInt\n-  #39 = Utf8               (Ljava/lang/String;)I\n-  #40 = Methodref          #35.#41        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #41 = NameAndType        #42:#43        // valueOf:(I)Ljava/lang/Integer;\n-  #42 = Utf8               valueOf\n-  #43 = Utf8               (I)Ljava/lang/Integer;\n-  #44 = Methodref          #35.#45        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n-  #45 = NameAndType        #46:#47        // compareTo:(Ljava/lang/Integer;)I\n-  #46 = Utf8               compareTo\n-  #47 = Utf8               (Ljava/lang/Integer;)I\n-  #48 = Methodref          #2.#49         // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/io/File;Ljava/io/File;)I\n-  #49 = NameAndType        #50:#51        // compare:(Ljava/io/File;Ljava/io/File;)I\n-  #50 = Utf8               compare\n-  #51 = Utf8               (Ljava/io/File;Ljava/io/File;)I\n-  #52 = Class              #53            // java/util/Comparator\n-  #53 = Utf8               java/util/Comparator\n-  #54 = Class              #55            // java/io/Serializable\n-  #55 = Utf8               java/io/Serializable\n-  #56 = Utf8               serialVersionUID\n-  #57 = Utf8               J\n-  #58 = Utf8               ConstantValue\n-  #59 = Long               20200123l\n-  #61 = Utf8               Code\n-  #62 = Utf8               LineNumberTable\n-  #63 = Utf8               LocalVariableTable\n-  #64 = Utf8               this\n-  #65 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n-  #66 = Utf8               file1\n-  #67 = Utf8               Ljava/io/File;\n-  #68 = Utf8               file2\n-  #69 = Utf8               extension1\n-  #70 = Utf8               Ljava/lang/String;\n-  #71 = Utf8               extension2\n-  #72 = Utf8               splitSegmentNumber1\n-  #73 = Utf8               Ljava/lang/Integer;\n-  #74 = Utf8               splitSegmentNumber2\n-  #75 = Utf8               StackMapTable\n-  #76 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #77 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;)V\n-  #78 = Utf8               x0\n-  #79 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // java/util/Comparator\n+   #6 = Utf8               java/util/Comparator\n+   #7 = Class              #8             // java/io/Serializable\n+   #8 = Utf8               java/io/Serializable\n+   #9 = Utf8               serialVersionUID\n+  #10 = Utf8               J\n+  #11 = Utf8               ConstantValue\n+  #12 = Long               20200123l\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ()V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/lang/Object.\"<init>\":()V\n+  #18 = NameAndType        #14:#15        // \"<init>\":()V\n+  #19 = Utf8               LineNumberTable\n+  #20 = Utf8               LocalVariableTable\n+  #21 = Utf8               this\n+  #22 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n+  #23 = Utf8               compare\n+  #24 = Utf8               (Ljava/io/File;Ljava/io/File;)I\n+  #25 = Methodref          #26.#28        // java/io/File.getPath:()Ljava/lang/String;\n+  #26 = Class              #27            // java/io/File\n+  #27 = Utf8               java/io/File\n+  #28 = NameAndType        #29:#30        // getPath:()Ljava/lang/String;\n+  #29 = Utf8               getPath\n+  #30 = Utf8               ()Ljava/lang/String;\n+  #31 = Methodref          #32.#34        // org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #32 = Class              #33            // org/apache/commons/compress/utils/FileNameUtils\n+  #33 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n+  #34 = NameAndType        #35:#36        // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #35 = Utf8               getExtension\n+  #36 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #37 = String             #38            // z\n+  #38 = Utf8               z\n+  #39 = Methodref          #40.#42        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #40 = Class              #41            // java/lang/String\n+  #41 = Utf8               java/lang/String\n+  #42 = NameAndType        #43:#44        // startsWith:(Ljava/lang/String;)Z\n+  #43 = Utf8               startsWith\n+  #44 = Utf8               (Ljava/lang/String;)Z\n+  #45 = Methodref          #40.#46        // java/lang/String.substring:(I)Ljava/lang/String;\n+  #46 = NameAndType        #47:#48        // substring:(I)Ljava/lang/String;\n+  #47 = Utf8               substring\n+  #48 = Utf8               (I)Ljava/lang/String;\n+  #49 = Methodref          #50.#52        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #50 = Class              #51            // java/lang/Integer\n+  #51 = Utf8               java/lang/Integer\n+  #52 = NameAndType        #53:#54        // parseInt:(Ljava/lang/String;)I\n+  #53 = Utf8               parseInt\n+  #54 = Utf8               (Ljava/lang/String;)I\n+  #55 = Methodref          #50.#56        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #56 = NameAndType        #57:#58        // valueOf:(I)Ljava/lang/Integer;\n+  #57 = Utf8               valueOf\n+  #58 = Utf8               (I)Ljava/lang/Integer;\n+  #59 = Methodref          #50.#60        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n+  #60 = NameAndType        #61:#62        // compareTo:(Ljava/lang/Integer;)I\n+  #61 = Utf8               compareTo\n+  #62 = Utf8               (Ljava/lang/Integer;)I\n+  #63 = Utf8               file1\n+  #64 = Utf8               Ljava/io/File;\n+  #65 = Utf8               file2\n+  #66 = Utf8               extension1\n+  #67 = Utf8               Ljava/lang/String;\n+  #68 = Utf8               extension2\n+  #69 = Utf8               splitSegmentNumber1\n+  #70 = Utf8               Ljava/lang/Integer;\n+  #71 = Utf8               splitSegmentNumber2\n+  #72 = Utf8               StackMapTable\n+  #73 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n+  #74 = Methodref          #1.#75         // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/io/File;Ljava/io/File;)I\n+  #75 = NameAndType        #23:#24        // compare:(Ljava/io/File;Ljava/io/File;)I\n+  #76 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;)V\n+  #77 = Methodref          #1.#18         // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.\"<init>\":()V\n+  #78 = Utf8               SourceFile\n+  #79 = Utf8               ZipSplitReadOnlySeekableByteChannel.java\n   #80 = Utf8               Signature\n   #81 = Utf8               Ljava/lang/Object;Ljava/util/Comparator<Ljava/io/File;>;Ljava/io/Serializable;\n-  #82 = Utf8               SourceFile\n-  #83 = Utf8               ZipSplitReadOnlySeekableByteChannel.java\n-  #84 = Utf8               InnerClasses\n-  #85 = Class              #86            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  #86 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  #87 = Utf8               ZipSplitSegmentComparator\n-  #88 = Class              #89            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n-  #89 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  #82 = Utf8               InnerClasses\n+  #83 = Class              #84            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #84 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #85 = Utf8               ZipSplitSegmentComparator\n {\n   private static final long serialVersionUID = 20200123l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 20200123l\n \n   private org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 233: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n \n   public int compare(java.io.File, java.io.File);\n     descriptor: (Ljava/io/File;Ljava/io/File;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=3\n          0: aload_1\n-         1: invokevirtual #10                 // Method java/io/File.getPath:()Ljava/lang/String;\n-         4: invokestatic  #16                 // Method org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+         1: invokevirtual #25                 // Method java/io/File.getPath:()Ljava/lang/String;\n+         4: invokestatic  #31                 // Method org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n          7: astore_3\n          8: aload_2\n-         9: invokevirtual #10                 // Method java/io/File.getPath:()Ljava/lang/String;\n-        12: invokestatic  #16                 // Method org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+         9: invokevirtual #25                 // Method java/io/File.getPath:()Ljava/lang/String;\n+        12: invokestatic  #31                 // Method org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         15: astore        4\n         17: aload_3\n-        18: ldc           #22                 // String z\n-        20: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        18: ldc           #37                 // String z\n+        20: invokevirtual #39                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         23: ifne          28\n         26: iconst_m1\n         27: ireturn\n         28: aload         4\n-        30: ldc           #22                 // String z\n-        32: invokevirtual #24                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        30: ldc           #37                 // String z\n+        32: invokevirtual #39                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         35: ifne          40\n         38: iconst_1\n         39: ireturn\n         40: aload_3\n         41: iconst_1\n-        42: invokevirtual #30                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        45: invokestatic  #34                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-        48: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        42: invokevirtual #45                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        45: invokestatic  #49                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        48: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         51: astore        5\n         53: aload         4\n         55: iconst_1\n-        56: invokevirtual #30                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        59: invokestatic  #34                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-        62: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        56: invokevirtual #45                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        59: invokestatic  #49                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        62: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         65: astore        6\n         67: aload         5\n         69: aload         6\n-        71: invokevirtual #44                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n+        71: invokevirtual #59                 // Method java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n         74: ireturn\n       LineNumberTable:\n         line 237: 0\n         line 238: 8\n         line 240: 17\n         line 241: 26\n         line 244: 28\n@@ -185,38 +181,34 @@\n   public int compare(java.lang.Object, java.lang.Object);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #11                 // class java/io/File\n+         2: checkcast     #26                 // class java/io/File\n          5: aload_2\n-         6: checkcast     #11                 // class java/io/File\n-         9: invokevirtual #48                 // Method compare:(Ljava/io/File;Ljava/io/File;)I\n+         6: checkcast     #26                 // class java/io/File\n+         9: invokevirtual #74                 // Method compare:(Ljava/io/File;Ljava/io/File;)I\n         12: ireturn\n       LineNumberTable:\n-        line 233: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n \n-  org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator(org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$1);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;)V\n+  org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator(org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #77                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 233: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n-            0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;\n }\n-Signature: #81                          // Ljava/lang/Object;Ljava/util/Comparator<Ljava/io/File;>;Ljava/io/Serializable;\n SourceFile: \"ZipSplitReadOnlySeekableByteChannel.java\"\n+Signature: #81                          // Ljava/lang/Object;Ljava/util/Comparator<Ljava/io/File;>;Ljava/io/Serializable;\n InnerClasses:\n-  private static #87= #2 of #85;          // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  static #88;                             // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  private static #85= #1 of #83;          // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n"}]}
