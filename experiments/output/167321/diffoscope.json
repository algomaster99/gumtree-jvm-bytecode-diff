{"diffoscope-json-version": 1, "source1": "first/ProxyReader.class", "source2": "second/ProxyReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,38 +1,38 @@\n-  SHA-256 checksum 52eced1f3b6f4d0388125fde7d3cc09c657340e5ce6ebca1e13bea7cb973e6cf\n+  SHA-256 checksum 771141cb92388ce2899e9a0129bf51dc178f1585ab61b81ed2bdda4142c3101f\n   Compiled from \"ProxyReader.java\"\n public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #20                         // org/apache/commons/io/input/ProxyReader\n   super_class: #21                        // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Class              #70            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #21.#71        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #3 = Methodref          #20.#72        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n-   #4 = Fieldref           #20.#73        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n-   #5 = Methodref          #74.#75        // java/io/Reader.read:()I\n-   #6 = Methodref          #20.#76        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n-   #7 = Class              #77            // java/io/IOException\n-   #8 = Methodref          #20.#78        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n-   #9 = Methodref          #1.#79         // org/apache/commons/io/IOUtils.length:([C)I\n-  #10 = Methodref          #74.#80        // java/io/Reader.read:([C)I\n-  #11 = Methodref          #74.#81        // java/io/Reader.read:([CII)I\n-  #12 = Methodref          #1.#82         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-  #13 = Methodref          #74.#83        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n-  #14 = Methodref          #74.#84        // java/io/Reader.skip:(J)J\n-  #15 = Methodref          #74.#85        // java/io/Reader.ready:()Z\n-  #16 = Methodref          #74.#86        // java/io/Reader.close:()V\n-  #17 = Methodref          #74.#87        // java/io/Reader.mark:(I)V\n-  #18 = Methodref          #74.#88        // java/io/Reader.reset:()V\n-  #19 = Methodref          #74.#89        // java/io/Reader.markSupported:()Z\n-  #20 = Class              #90            // org/apache/commons/io/input/ProxyReader\n-  #21 = Class              #91            // java/io/FilterReader\n+   #1 = Class              #68            // org/apache/commons/io/IOUtils\n+   #2 = Methodref          #21.#69        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #3 = Methodref          #20.#70        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n+   #4 = Fieldref           #20.#71        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n+   #5 = Methodref          #72.#73        // java/io/Reader.read:()I\n+   #6 = Methodref          #20.#74        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n+   #7 = Class              #75            // java/io/IOException\n+   #8 = Methodref          #20.#76        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n+   #9 = Methodref          #1.#77         // org/apache/commons/io/IOUtils.length:([C)I\n+  #10 = Methodref          #72.#78        // java/io/Reader.read:([C)I\n+  #11 = Methodref          #72.#79        // java/io/Reader.read:([CII)I\n+  #12 = Methodref          #1.#80         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+  #13 = Methodref          #72.#81        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+  #14 = Methodref          #72.#82        // java/io/Reader.skip:(J)J\n+  #15 = Methodref          #72.#83        // java/io/Reader.ready:()Z\n+  #16 = Methodref          #72.#84        // java/io/Reader.close:()V\n+  #17 = Methodref          #72.#85        // java/io/Reader.mark:(I)V\n+  #18 = Methodref          #72.#86        // java/io/Reader.reset:()V\n+  #19 = Methodref          #72.#87        // java/io/Reader.markSupported:()Z\n+  #20 = Class              #88            // org/apache/commons/io/input/ProxyReader\n+  #21 = Class              #89            // java/io/FilterReader\n   #22 = Utf8               <init>\n   #23 = Utf8               (Ljava/io/Reader;)V\n   #24 = Utf8               Code\n   #25 = Utf8               LineNumberTable\n   #26 = Utf8               LocalVariableTable\n   #27 = Utf8               this\n   #28 = Utf8               Lorg/apache/commons/io/input/ProxyReader;\n@@ -41,72 +41,70 @@\n   #31 = Utf8               read\n   #32 = Utf8               ()I\n   #33 = Utf8               c\n   #34 = Utf8               I\n   #35 = Utf8               e\n   #36 = Utf8               Ljava/io/IOException;\n   #37 = Utf8               StackMapTable\n-  #38 = Class              #90            // org/apache/commons/io/input/ProxyReader\n-  #39 = Class              #77            // java/io/IOException\n-  #40 = Utf8               Exceptions\n-  #41 = Utf8               ([C)I\n-  #42 = Utf8               n\n-  #43 = Utf8               chr\n-  #44 = Utf8               [C\n-  #45 = Utf8               ([CII)I\n-  #46 = Utf8               st\n-  #47 = Utf8               len\n-  #48 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #49 = Utf8               target\n-  #50 = Utf8               Ljava/nio/CharBuffer;\n-  #51 = Utf8               skip\n-  #52 = Utf8               (J)J\n-  #53 = Utf8               ln\n-  #54 = Utf8               J\n-  #55 = Utf8               ready\n-  #56 = Utf8               ()Z\n-  #57 = Utf8               close\n-  #58 = Utf8               ()V\n-  #59 = Utf8               mark\n-  #60 = Utf8               (I)V\n-  #61 = Utf8               idx\n-  #62 = Utf8               reset\n-  #63 = Utf8               markSupported\n-  #64 = Utf8               beforeRead\n-  #65 = Utf8               afterRead\n-  #66 = Utf8               handleIOException\n-  #67 = Utf8               (Ljava/io/IOException;)V\n-  #68 = Utf8               SourceFile\n-  #69 = Utf8               ProxyReader.java\n-  #70 = Utf8               org/apache/commons/io/IOUtils\n-  #71 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n-  #72 = NameAndType        #64:#60        // beforeRead:(I)V\n-  #73 = NameAndType        #92:#30        // in:Ljava/io/Reader;\n-  #74 = Class              #93            // java/io/Reader\n-  #75 = NameAndType        #31:#32        // read:()I\n-  #76 = NameAndType        #65:#60        // afterRead:(I)V\n-  #77 = Utf8               java/io/IOException\n-  #78 = NameAndType        #66:#67        // handleIOException:(Ljava/io/IOException;)V\n-  #79 = NameAndType        #94:#41        // length:([C)I\n-  #80 = NameAndType        #31:#41        // read:([C)I\n-  #81 = NameAndType        #31:#45        // read:([CII)I\n-  #82 = NameAndType        #94:#95        // length:(Ljava/lang/CharSequence;)I\n-  #83 = NameAndType        #31:#48        // read:(Ljava/nio/CharBuffer;)I\n-  #84 = NameAndType        #51:#52        // skip:(J)J\n-  #85 = NameAndType        #55:#56        // ready:()Z\n-  #86 = NameAndType        #57:#58        // close:()V\n-  #87 = NameAndType        #59:#60        // mark:(I)V\n-  #88 = NameAndType        #62:#58        // reset:()V\n-  #89 = NameAndType        #63:#56        // markSupported:()Z\n-  #90 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #91 = Utf8               java/io/FilterReader\n-  #92 = Utf8               in\n-  #93 = Utf8               java/io/Reader\n-  #94 = Utf8               length\n-  #95 = Utf8               (Ljava/lang/CharSequence;)I\n+  #38 = Utf8               Exceptions\n+  #39 = Utf8               ([C)I\n+  #40 = Utf8               n\n+  #41 = Utf8               chr\n+  #42 = Utf8               [C\n+  #43 = Utf8               ([CII)I\n+  #44 = Utf8               st\n+  #45 = Utf8               len\n+  #46 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #47 = Utf8               target\n+  #48 = Utf8               Ljava/nio/CharBuffer;\n+  #49 = Utf8               skip\n+  #50 = Utf8               (J)J\n+  #51 = Utf8               ln\n+  #52 = Utf8               J\n+  #53 = Utf8               ready\n+  #54 = Utf8               ()Z\n+  #55 = Utf8               close\n+  #56 = Utf8               ()V\n+  #57 = Utf8               mark\n+  #58 = Utf8               (I)V\n+  #59 = Utf8               idx\n+  #60 = Utf8               reset\n+  #61 = Utf8               markSupported\n+  #62 = Utf8               beforeRead\n+  #63 = Utf8               afterRead\n+  #64 = Utf8               handleIOException\n+  #65 = Utf8               (Ljava/io/IOException;)V\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               ProxyReader.java\n+  #68 = Utf8               org/apache/commons/io/IOUtils\n+  #69 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n+  #70 = NameAndType        #62:#58        // beforeRead:(I)V\n+  #71 = NameAndType        #90:#30        // in:Ljava/io/Reader;\n+  #72 = Class              #91            // java/io/Reader\n+  #73 = NameAndType        #31:#32        // read:()I\n+  #74 = NameAndType        #63:#58        // afterRead:(I)V\n+  #75 = Utf8               java/io/IOException\n+  #76 = NameAndType        #64:#65        // handleIOException:(Ljava/io/IOException;)V\n+  #77 = NameAndType        #92:#39        // length:([C)I\n+  #78 = NameAndType        #31:#39        // read:([C)I\n+  #79 = NameAndType        #31:#43        // read:([CII)I\n+  #80 = NameAndType        #92:#93        // length:(Ljava/lang/CharSequence;)I\n+  #81 = NameAndType        #31:#46        // read:(Ljava/nio/CharBuffer;)I\n+  #82 = NameAndType        #49:#50        // skip:(J)J\n+  #83 = NameAndType        #53:#54        // ready:()Z\n+  #84 = NameAndType        #55:#56        // close:()V\n+  #85 = NameAndType        #57:#58        // mark:(I)V\n+  #86 = NameAndType        #60:#56        // reset:()V\n+  #87 = NameAndType        #61:#54        // markSupported:()Z\n+  #88 = Utf8               org/apache/commons/io/input/ProxyReader\n+  #89 = Utf8               java/io/FilterReader\n+  #90 = Utf8               in\n+  #91 = Utf8               java/io/Reader\n+  #92 = Utf8               length\n+  #93 = Utf8               (Ljava/lang/CharSequence;)I\n {\n   public org.apache.commons.io.input.ProxyReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
