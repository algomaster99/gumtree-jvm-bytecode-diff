{"diffoscope-json-version": 1, "source1": "first/LocaleUtils.class", "source2": "second/LocaleUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,76 +1,76 @@\n-  SHA-256 checksum c114772a00f4441a141534467139ca4c3f725fa7607f4b94f4c905d92b1b63ef\n+  SHA-256 checksum 5ca8585ec5f3c45bb828f5ea48a0cbb6f17be8e3289808687c67f764d7bf615c\n   Compiled from \"LocaleUtils.java\"\n public class org.apache.commons.lang3.LocaleUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #57                         // org/apache/commons/lang3/LocaleUtils\n   super_class: #58                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 14, attributes: 2\n Constant pool:\n-    #1 = Methodref          #58.#103      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #104.#105     // java/lang/String.isEmpty:()Z\n-    #3 = Class              #106          // java/util/Locale\n-    #4 = Class              #107          // org/apache/commons/lang3/StringUtils\n-    #5 = String             #108          //\n-    #6 = Methodref          #3.#109       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-    #7 = String             #110          // #\n-    #8 = Methodref          #104.#111     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-    #9 = Class              #112          // java/lang/IllegalArgumentException\n-   #10 = Class              #113          // java/lang/StringBuilder\n-   #11 = Methodref          #10.#103      // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #114          // Invalid locale format:\n-   #13 = Methodref          #10.#115      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#116      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #15 = Methodref          #9.#117       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #104.#118     // java/lang/String.length:()I\n-   #17 = Methodref          #104.#119     // java/lang/String.charAt:(I)C\n-   #18 = Methodref          #120.#121     // java/lang/Character.isUpperCase:(C)Z\n-   #19 = Methodref          #104.#122     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #20 = Methodref          #104.#123     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #21 = Methodref          #3.#124       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #22 = Methodref          #57.#125      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-   #23 = Methodref          #57.#126      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n-   #24 = Methodref          #3.#117       // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n-   #25 = String             #127          // _\n-   #26 = Methodref          #104.#128     // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-   #27 = Methodref          #57.#129      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n-   #28 = Methodref          #57.#130      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n-   #29 = Methodref          #4.#131       // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-   #30 = Methodref          #4.#132       // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-   #31 = Methodref          #4.#133       // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-   #32 = Methodref          #57.#134      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-   #33 = Class              #135          // java/util/ArrayList\n-   #34 = Methodref          #33.#136      // java/util/ArrayList.\"<init>\":(I)V\n-   #35 = InterfaceMethodref #47.#137      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #36 = Methodref          #3.#138       // java/util/Locale.getVariant:()Ljava/lang/String;\n-   #37 = Methodref          #3.#139       // java/util/Locale.getLanguage:()Ljava/lang/String;\n-   #38 = Methodref          #3.#140       // java/util/Locale.getCountry:()Ljava/lang/String;\n-   #39 = InterfaceMethodref #47.#141      // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #40 = Methodref          #142.#143     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #41 = Methodref          #59.#144      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n-   #42 = Methodref          #59.#145      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n-   #43 = Methodref          #57.#146      // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n-   #44 = Methodref          #142.#147     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #45 = Fieldref           #57.#148      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-   #46 = InterfaceMethodref #149.#150     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #47 = Class              #151          // java/util/List\n-   #48 = Methodref          #33.#103      // java/util/ArrayList.\"<init>\":()V\n-   #49 = InterfaceMethodref #47.#152      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #50 = InterfaceMethodref #153.#154     // java/util/Iterator.hasNext:()Z\n-   #51 = InterfaceMethodref #153.#155     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #52 = Methodref          #104.#156     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #53 = InterfaceMethodref #149.#157     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #54 = Fieldref           #57.#158      // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-   #55 = Class              #159          // java/util/concurrent/ConcurrentHashMap\n-   #56 = Methodref          #55.#103      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-   #57 = Class              #160          // org/apache/commons/lang3/LocaleUtils\n-   #58 = Class              #161          // java/lang/Object\n-   #59 = Class              #162          // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+    #1 = Methodref          #58.#102      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #76.#103      // java/lang/String.isEmpty:()Z\n+    #3 = Class              #104          // java/util/Locale\n+    #4 = Class              #105          // org/apache/commons/lang3/StringUtils\n+    #5 = String             #106          //\n+    #6 = Methodref          #3.#107       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+    #7 = String             #108          // #\n+    #8 = Methodref          #76.#109      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+    #9 = Class              #110          // java/lang/IllegalArgumentException\n+   #10 = Class              #111          // java/lang/StringBuilder\n+   #11 = Methodref          #10.#102      // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #112          // Invalid locale format:\n+   #13 = Methodref          #10.#113      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #15 = Methodref          #9.#115       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Methodref          #76.#116      // java/lang/String.length:()I\n+   #17 = Methodref          #76.#117      // java/lang/String.charAt:(I)C\n+   #18 = Methodref          #118.#119     // java/lang/Character.isUpperCase:(C)Z\n+   #19 = Methodref          #76.#120      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #20 = Methodref          #76.#121      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #21 = Methodref          #3.#122       // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #22 = Methodref          #57.#123      // org/apache/commons/lang3/LocaleUtils.parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+   #23 = Methodref          #57.#124      // org/apache/commons/lang3/LocaleUtils.isISO639LanguageCode:(Ljava/lang/String;)Z\n+   #24 = Methodref          #3.#115       // java/util/Locale.\"<init>\":(Ljava/lang/String;)V\n+   #25 = String             #125          // _\n+   #26 = Methodref          #76.#126      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+   #27 = Methodref          #57.#127      // org/apache/commons/lang3/LocaleUtils.isISO3166CountryCode:(Ljava/lang/String;)Z\n+   #28 = Methodref          #57.#128      // org/apache/commons/lang3/LocaleUtils.isNumericAreaCode:(Ljava/lang/String;)Z\n+   #29 = Methodref          #4.#129       // org/apache/commons/lang3/StringUtils.isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+   #30 = Methodref          #4.#130       // org/apache/commons/lang3/StringUtils.isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+   #31 = Methodref          #4.#131       // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+   #32 = Methodref          #57.#132      // org/apache/commons/lang3/LocaleUtils.localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+   #33 = Class              #133          // java/util/ArrayList\n+   #34 = Methodref          #33.#134      // java/util/ArrayList.\"<init>\":(I)V\n+   #35 = InterfaceMethodref #47.#135      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #36 = Methodref          #3.#136       // java/util/Locale.getVariant:()Ljava/lang/String;\n+   #37 = Methodref          #3.#137       // java/util/Locale.getLanguage:()Ljava/lang/String;\n+   #38 = Methodref          #3.#138       // java/util/Locale.getCountry:()Ljava/lang/String;\n+   #39 = InterfaceMethodref #47.#139      // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #40 = Methodref          #140.#141     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #41 = Methodref          #59.#142      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n+   #42 = Methodref          #59.#143      // org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n+   #43 = Methodref          #57.#144      // org/apache/commons/lang3/LocaleUtils.availableLocaleList:()Ljava/util/List;\n+   #44 = Methodref          #140.#145     // java/util/Collections.emptyList:()Ljava/util/List;\n+   #45 = Fieldref           #57.#146      // org/apache/commons/lang3/LocaleUtils.cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+   #46 = InterfaceMethodref #147.#148     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #47 = Class              #149          // java/util/List\n+   #48 = Methodref          #33.#102      // java/util/ArrayList.\"<init>\":()V\n+   #49 = InterfaceMethodref #47.#150      // java/util/List.iterator:()Ljava/util/Iterator;\n+   #50 = InterfaceMethodref #96.#151      // java/util/Iterator.hasNext:()Z\n+   #51 = InterfaceMethodref #96.#152      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #52 = Methodref          #76.#153      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #53 = InterfaceMethodref #147.#154     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #54 = Fieldref           #57.#155      // org/apache/commons/lang3/LocaleUtils.cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+   #55 = Class              #156          // java/util/concurrent/ConcurrentHashMap\n+   #56 = Methodref          #55.#102      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+   #57 = Class              #157          // org/apache/commons/lang3/LocaleUtils\n+   #58 = Class              #158          // java/lang/Object\n+   #59 = Class              #159          // org/apache/commons/lang3/LocaleUtils$SyncAvoid\n    #60 = Utf8               SyncAvoid\n    #61 = Utf8               InnerClasses\n    #62 = Utf8               cLanguagesByCountry\n    #63 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n    #64 = Utf8               Signature\n    #65 = Utf8               Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n    #66 = Utf8               cCountriesByLanguage\n@@ -78,154 +78,151 @@\n    #68 = Utf8               ()V\n    #69 = Utf8               Code\n    #70 = Utf8               LineNumberTable\n    #71 = Utf8               toLocale\n    #72 = Utf8               (Ljava/lang/String;)Ljava/util/Locale;\n    #73 = Utf8               StackMapTable\n    #74 = Utf8               parseLocale\n-   #75 = Class              #163          // \"[Ljava/lang/String;\"\n-   #76 = Class              #164          // java/lang/String\n+   #75 = Class              #160          // \"[Ljava/lang/String;\"\n+   #76 = Class              #161          // java/lang/String\n    #77 = Utf8               isISO639LanguageCode\n    #78 = Utf8               (Ljava/lang/String;)Z\n    #79 = Utf8               isISO3166CountryCode\n    #80 = Utf8               isNumericAreaCode\n    #81 = Utf8               localeLookupList\n    #82 = Utf8               (Ljava/util/Locale;)Ljava/util/List;\n    #83 = Utf8               (Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n    #84 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-   #85 = Class              #151          // java/util/List\n-   #86 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n-   #87 = Utf8               availableLocaleList\n-   #88 = Utf8               ()Ljava/util/List;\n-   #89 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n-   #90 = Utf8               availableLocaleSet\n-   #91 = Utf8               ()Ljava/util/Set;\n-   #92 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n-   #93 = Utf8               isAvailableLocale\n-   #94 = Utf8               (Ljava/util/Locale;)Z\n-   #95 = Utf8               languagesByCountry\n-   #96 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n-   #97 = Class              #165          // java/util/Iterator\n-   #98 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n-   #99 = Utf8               countriesByLanguage\n-  #100 = Utf8               <clinit>\n-  #101 = Utf8               SourceFile\n-  #102 = Utf8               LocaleUtils.java\n-  #103 = NameAndType        #67:#68       // \"<init>\":()V\n-  #104 = Class              #164          // java/lang/String\n-  #105 = NameAndType        #166:#167     // isEmpty:()Z\n-  #106 = Utf8               java/util/Locale\n-  #107 = Utf8               org/apache/commons/lang3/StringUtils\n-  #108 = Utf8\n-  #109 = NameAndType        #67:#168      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #110 = Utf8               #\n-  #111 = NameAndType        #169:#170     // contains:(Ljava/lang/CharSequence;)Z\n-  #112 = Utf8               java/lang/IllegalArgumentException\n-  #113 = Utf8               java/lang/StringBuilder\n-  #114 = Utf8               Invalid locale format:\n-  #115 = NameAndType        #171:#172     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #116 = NameAndType        #173:#174     // toString:()Ljava/lang/String;\n-  #117 = NameAndType        #67:#175      // \"<init>\":(Ljava/lang/String;)V\n-  #118 = NameAndType        #176:#177     // length:()I\n-  #119 = NameAndType        #178:#179     // charAt:(I)C\n-  #120 = Class              #180          // java/lang/Character\n-  #121 = NameAndType        #181:#182     // isUpperCase:(C)Z\n-  #122 = NameAndType        #183:#184     // substring:(II)Ljava/lang/String;\n-  #123 = NameAndType        #183:#185     // substring:(I)Ljava/lang/String;\n-  #124 = NameAndType        #67:#186      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #125 = NameAndType        #74:#72       // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n-  #126 = NameAndType        #77:#78       // isISO639LanguageCode:(Ljava/lang/String;)Z\n-  #127 = Utf8               _\n-  #128 = NameAndType        #187:#188     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #129 = NameAndType        #79:#78       // isISO3166CountryCode:(Ljava/lang/String;)Z\n-  #130 = NameAndType        #80:#78       // isNumericAreaCode:(Ljava/lang/String;)Z\n-  #131 = NameAndType        #189:#170     // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n-  #132 = NameAndType        #190:#170     // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n-  #133 = NameAndType        #191:#170     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #134 = NameAndType        #81:#84       // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n-  #135 = Utf8               java/util/ArrayList\n-  #136 = NameAndType        #67:#192      // \"<init>\":(I)V\n-  #137 = NameAndType        #193:#194     // add:(Ljava/lang/Object;)Z\n-  #138 = NameAndType        #195:#174     // getVariant:()Ljava/lang/String;\n-  #139 = NameAndType        #196:#174     // getLanguage:()Ljava/lang/String;\n-  #140 = NameAndType        #197:#174     // getCountry:()Ljava/lang/String;\n-  #141 = NameAndType        #169:#194     // contains:(Ljava/lang/Object;)Z\n-  #142 = Class              #198          // java/util/Collections\n-  #143 = NameAndType        #199:#200     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #144 = NameAndType        #201:#88      // access$000:()Ljava/util/List;\n-  #145 = NameAndType        #202:#91      // access$100:()Ljava/util/Set;\n-  #146 = NameAndType        #87:#88       // availableLocaleList:()Ljava/util/List;\n-  #147 = NameAndType        #203:#88      // emptyList:()Ljava/util/List;\n-  #148 = NameAndType        #62:#63       // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n-  #149 = Class              #204          // java/util/concurrent/ConcurrentMap\n-  #150 = NameAndType        #205:#206     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #151 = Utf8               java/util/List\n-  #152 = NameAndType        #207:#208     // iterator:()Ljava/util/Iterator;\n-  #153 = Class              #165          // java/util/Iterator\n-  #154 = NameAndType        #209:#167     // hasNext:()Z\n-  #155 = NameAndType        #210:#211     // next:()Ljava/lang/Object;\n-  #156 = NameAndType        #212:#194     // equals:(Ljava/lang/Object;)Z\n-  #157 = NameAndType        #213:#214     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #158 = NameAndType        #66:#63       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n-  #159 = Utf8               java/util/concurrent/ConcurrentHashMap\n-  #160 = Utf8               org/apache/commons/lang3/LocaleUtils\n-  #161 = Utf8               java/lang/Object\n-  #162 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n-  #163 = Utf8               [Ljava/lang/String;\n-  #164 = Utf8               java/lang/String\n-  #165 = Utf8               java/util/Iterator\n-  #166 = Utf8               isEmpty\n-  #167 = Utf8               ()Z\n-  #168 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #169 = Utf8               contains\n-  #170 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #171 = Utf8               append\n-  #172 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #173 = Utf8               toString\n-  #174 = Utf8               ()Ljava/lang/String;\n-  #175 = Utf8               (Ljava/lang/String;)V\n-  #176 = Utf8               length\n-  #177 = Utf8               ()I\n-  #178 = Utf8               charAt\n-  #179 = Utf8               (I)C\n-  #180 = Utf8               java/lang/Character\n-  #181 = Utf8               isUpperCase\n-  #182 = Utf8               (C)Z\n-  #183 = Utf8               substring\n-  #184 = Utf8               (II)Ljava/lang/String;\n-  #185 = Utf8               (I)Ljava/lang/String;\n-  #186 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #187 = Utf8               split\n-  #188 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n-  #189 = Utf8               isAllLowerCase\n-  #190 = Utf8               isAllUpperCase\n-  #191 = Utf8               isNumeric\n-  #192 = Utf8               (I)V\n-  #193 = Utf8               add\n-  #194 = Utf8               (Ljava/lang/Object;)Z\n-  #195 = Utf8               getVariant\n-  #196 = Utf8               getLanguage\n-  #197 = Utf8               getCountry\n-  #198 = Utf8               java/util/Collections\n-  #199 = Utf8               unmodifiableList\n-  #200 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #201 = Utf8               access$000\n-  #202 = Utf8               access$100\n-  #203 = Utf8               emptyList\n-  #204 = Utf8               java/util/concurrent/ConcurrentMap\n-  #205 = Utf8               get\n-  #206 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #207 = Utf8               iterator\n-  #208 = Utf8               ()Ljava/util/Iterator;\n-  #209 = Utf8               hasNext\n-  #210 = Utf8               next\n-  #211 = Utf8               ()Ljava/lang/Object;\n-  #212 = Utf8               equals\n-  #213 = Utf8               putIfAbsent\n-  #214 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #85 = Utf8               (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+   #86 = Utf8               availableLocaleList\n+   #87 = Utf8               ()Ljava/util/List;\n+   #88 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;\n+   #89 = Utf8               availableLocaleSet\n+   #90 = Utf8               ()Ljava/util/Set;\n+   #91 = Utf8               ()Ljava/util/Set<Ljava/util/Locale;>;\n+   #92 = Utf8               isAvailableLocale\n+   #93 = Utf8               (Ljava/util/Locale;)Z\n+   #94 = Utf8               languagesByCountry\n+   #95 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n+   #96 = Class              #162          // java/util/Iterator\n+   #97 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+   #98 = Utf8               countriesByLanguage\n+   #99 = Utf8               <clinit>\n+  #100 = Utf8               SourceFile\n+  #101 = Utf8               LocaleUtils.java\n+  #102 = NameAndType        #67:#68       // \"<init>\":()V\n+  #103 = NameAndType        #163:#164     // isEmpty:()Z\n+  #104 = Utf8               java/util/Locale\n+  #105 = Utf8               org/apache/commons/lang3/StringUtils\n+  #106 = Utf8\n+  #107 = NameAndType        #67:#165      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #108 = Utf8               #\n+  #109 = NameAndType        #166:#167     // contains:(Ljava/lang/CharSequence;)Z\n+  #110 = Utf8               java/lang/IllegalArgumentException\n+  #111 = Utf8               java/lang/StringBuilder\n+  #112 = Utf8               Invalid locale format:\n+  #113 = NameAndType        #168:#169     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = NameAndType        #170:#171     // toString:()Ljava/lang/String;\n+  #115 = NameAndType        #67:#172      // \"<init>\":(Ljava/lang/String;)V\n+  #116 = NameAndType        #173:#174     // length:()I\n+  #117 = NameAndType        #175:#176     // charAt:(I)C\n+  #118 = Class              #177          // java/lang/Character\n+  #119 = NameAndType        #178:#179     // isUpperCase:(C)Z\n+  #120 = NameAndType        #180:#181     // substring:(II)Ljava/lang/String;\n+  #121 = NameAndType        #180:#182     // substring:(I)Ljava/lang/String;\n+  #122 = NameAndType        #67:#183      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #123 = NameAndType        #74:#72       // parseLocale:(Ljava/lang/String;)Ljava/util/Locale;\n+  #124 = NameAndType        #77:#78       // isISO639LanguageCode:(Ljava/lang/String;)Z\n+  #125 = Utf8               _\n+  #126 = NameAndType        #184:#185     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #127 = NameAndType        #79:#78       // isISO3166CountryCode:(Ljava/lang/String;)Z\n+  #128 = NameAndType        #80:#78       // isNumericAreaCode:(Ljava/lang/String;)Z\n+  #129 = NameAndType        #186:#167     // isAllLowerCase:(Ljava/lang/CharSequence;)Z\n+  #130 = NameAndType        #187:#167     // isAllUpperCase:(Ljava/lang/CharSequence;)Z\n+  #131 = NameAndType        #188:#167     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #132 = NameAndType        #81:#84       // localeLookupList:(Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List;\n+  #133 = Utf8               java/util/ArrayList\n+  #134 = NameAndType        #67:#189      // \"<init>\":(I)V\n+  #135 = NameAndType        #190:#191     // add:(Ljava/lang/Object;)Z\n+  #136 = NameAndType        #192:#171     // getVariant:()Ljava/lang/String;\n+  #137 = NameAndType        #193:#171     // getLanguage:()Ljava/lang/String;\n+  #138 = NameAndType        #194:#171     // getCountry:()Ljava/lang/String;\n+  #139 = NameAndType        #166:#191     // contains:(Ljava/lang/Object;)Z\n+  #140 = Class              #195          // java/util/Collections\n+  #141 = NameAndType        #196:#197     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+  #142 = NameAndType        #198:#87      // access$000:()Ljava/util/List;\n+  #143 = NameAndType        #199:#90      // access$100:()Ljava/util/Set;\n+  #144 = NameAndType        #86:#87       // availableLocaleList:()Ljava/util/List;\n+  #145 = NameAndType        #200:#87      // emptyList:()Ljava/util/List;\n+  #146 = NameAndType        #62:#63       // cLanguagesByCountry:Ljava/util/concurrent/ConcurrentMap;\n+  #147 = Class              #201          // java/util/concurrent/ConcurrentMap\n+  #148 = NameAndType        #202:#203     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #149 = Utf8               java/util/List\n+  #150 = NameAndType        #204:#205     // iterator:()Ljava/util/Iterator;\n+  #151 = NameAndType        #206:#164     // hasNext:()Z\n+  #152 = NameAndType        #207:#208     // next:()Ljava/lang/Object;\n+  #153 = NameAndType        #209:#191     // equals:(Ljava/lang/Object;)Z\n+  #154 = NameAndType        #210:#211     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #155 = NameAndType        #66:#63       // cCountriesByLanguage:Ljava/util/concurrent/ConcurrentMap;\n+  #156 = Utf8               java/util/concurrent/ConcurrentHashMap\n+  #157 = Utf8               org/apache/commons/lang3/LocaleUtils\n+  #158 = Utf8               java/lang/Object\n+  #159 = Utf8               org/apache/commons/lang3/LocaleUtils$SyncAvoid\n+  #160 = Utf8               [Ljava/lang/String;\n+  #161 = Utf8               java/lang/String\n+  #162 = Utf8               java/util/Iterator\n+  #163 = Utf8               isEmpty\n+  #164 = Utf8               ()Z\n+  #165 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #166 = Utf8               contains\n+  #167 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #168 = Utf8               append\n+  #169 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #170 = Utf8               toString\n+  #171 = Utf8               ()Ljava/lang/String;\n+  #172 = Utf8               (Ljava/lang/String;)V\n+  #173 = Utf8               length\n+  #174 = Utf8               ()I\n+  #175 = Utf8               charAt\n+  #176 = Utf8               (I)C\n+  #177 = Utf8               java/lang/Character\n+  #178 = Utf8               isUpperCase\n+  #179 = Utf8               (C)Z\n+  #180 = Utf8               substring\n+  #181 = Utf8               (II)Ljava/lang/String;\n+  #182 = Utf8               (I)Ljava/lang/String;\n+  #183 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #184 = Utf8               split\n+  #185 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n+  #186 = Utf8               isAllLowerCase\n+  #187 = Utf8               isAllUpperCase\n+  #188 = Utf8               isNumeric\n+  #189 = Utf8               (I)V\n+  #190 = Utf8               add\n+  #191 = Utf8               (Ljava/lang/Object;)Z\n+  #192 = Utf8               getVariant\n+  #193 = Utf8               getLanguage\n+  #194 = Utf8               getCountry\n+  #195 = Utf8               java/util/Collections\n+  #196 = Utf8               unmodifiableList\n+  #197 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #198 = Utf8               access$000\n+  #199 = Utf8               access$100\n+  #200 = Utf8               emptyList\n+  #201 = Utf8               java/util/concurrent/ConcurrentMap\n+  #202 = Utf8               get\n+  #203 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #204 = Utf8               iterator\n+  #205 = Utf8               ()Ljava/util/Iterator;\n+  #206 = Utf8               hasNext\n+  #207 = Utf8               next\n+  #208 = Utf8               ()Ljava/lang/Object;\n+  #209 = Utf8               equals\n+  #210 = Utf8               putIfAbsent\n+  #211 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n {\n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cLanguagesByCountry;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Signature: #65                          // Ljava/util/concurrent/ConcurrentMap<Ljava/lang/String;Ljava/util/List<Ljava/util/Locale;>;>;\n \n   private static final java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>> cCountriesByLanguage;\n@@ -729,37 +726,37 @@\n         line 240: 101\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n         frame_type = 17 /* same */\n-    Signature: #86                          // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #85                          // (Ljava/util/Locale;Ljava/util/Locale;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> availableLocaleList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #41                 // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$000:()Ljava/util/List;\n          3: areturn\n       LineNumberTable:\n         line 254: 0\n-    Signature: #89                          // ()Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #88                          // ()Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.Set<java.util.Locale> availableLocaleSet();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokestatic  #42                 // Method org/apache/commons/lang3/LocaleUtils$SyncAvoid.access$100:()Ljava/util/Set;\n          3: areturn\n       LineNumberTable:\n         line 268: 0\n-    Signature: #92                          // ()Ljava/util/Set<Ljava/util/Locale;>;\n+    Signature: #91                          // ()Ljava/util/Set<Ljava/util/Locale;>;\n \n   public static boolean isAvailableLocale(java.util.Locale);\n     descriptor: (Ljava/util/Locale;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: invokestatic  #43                 // Method availableLocaleList:()Ljava/util/List;\n@@ -852,15 +849,15 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 51 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #98                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #97                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   public static java.util.List<java.util.Locale> countriesByLanguage(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n@@ -946,15 +943,15 @@\n           offset_delta = 35\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 62 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 28\n-    Signature: #98                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n+    Signature: #97                          // (Ljava/lang/String;)Ljava/util/List<Ljava/util/Locale;>;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #55                 // class java/util/concurrent/ConcurrentHashMap\n"}]}
