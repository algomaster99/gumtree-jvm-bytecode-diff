{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry.class", "source2": "second/ZipArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,674 +1,674 @@\n-  SHA-256 checksum 2266fe3ce4c60856951f2bf575cd43f900aa5fc03429629171213ad01962d03c\n+  SHA-256 checksum 986e51d5e131154ac295867da8ce639e3bde111b4df59bc0e2dacec4384d481d\n   Compiled from \"ZipArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry extends java.util.zip.ZipEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.EntryStreamOffsets\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  super_class: #161                       // java/util/zip/ZipEntry\n+  this_class: #10                         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  super_class: #2                         // java/util/zip/ZipEntry\n   interfaces: 2, fields: 26, methods: 77, attributes: 3\n Constant pool:\n-    #1 = Methodref          #161.#403     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n-    #2 = Class              #404          // org/apache/commons/compress/archivers/zip/ZipMethod\n-    #3 = Fieldref           #8.#405       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n-    #4 = Class              #406          // org/apache/commons/compress/archivers/ArchiveEntry\n-    #5 = Long               -1l\n-    #7 = Fieldref           #8.#407       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n-    #8 = Class              #408          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-    #9 = Fieldref           #8.#409       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n-   #10 = Class              #410          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #11 = Methodref          #10.#411      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #12 = Fieldref           #8.#412       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #13 = Class              #413          // org/apache/commons/compress/archivers/EntryStreamOffsets\n-   #14 = Fieldref           #8.#414       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n-   #15 = Fieldref           #8.#415       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n-   #16 = Fieldref           #168.#416     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #17 = Fieldref           #8.#417       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #18 = Fieldref           #166.#418     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #19 = Fieldref           #8.#419       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #20 = Methodref          #8.#420       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n-   #21 = Methodref          #161.#421     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #22 = Methodref          #161.#422     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-   #23 = Methodref          #161.#423     // java/util/zip/ZipEntry.getExtra:()[B\n-   #24 = Fieldref           #164.#424     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-   #25 = Methodref          #425.#426     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #26 = Methodref          #8.#427       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-   #27 = Methodref          #8.#428       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n-   #28 = Methodref          #161.#429     // java/util/zip/ZipEntry.getMethod:()I\n-   #29 = Methodref          #8.#430       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n-   #30 = Methodref          #161.#431     // java/util/zip/ZipEntry.getSize:()J\n-   #31 = Methodref          #8.#421       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #32 = Methodref          #8.#432       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n-   #33 = Methodref          #8.#433       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n-   #34 = Methodref          #8.#434       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n-   #35 = Methodref          #8.#435       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n-   #36 = Methodref          #8.#436       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #37 = Methodref          #8.#437       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n-   #38 = Methodref          #8.#438       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n-   #39 = Methodref          #8.#439       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #40 = Methodref          #10.#440      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-   #41 = Methodref          #8.#441       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-   #42 = String             #442          //\n-   #43 = Methodref          #8.#403       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n-   #44 = Methodref          #233.#443     // java/io/File.isDirectory:()Z\n-   #45 = String             #444          // /\n-   #46 = Methodref          #234.#445     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #47 = InvokeDynamic      #0:#449       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #48 = Methodref          #233.#450     // java/io/File.isFile:()Z\n-   #49 = Methodref          #233.#451     // java/io/File.length:()J\n-   #50 = Methodref          #8.#452       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n-   #51 = Methodref          #233.#453     // java/io/File.lastModified:()J\n-   #52 = Methodref          #8.#454       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n-   #53 = Methodref          #455.#456     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #54 = Methodref          #455.#457     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #55 = Methodref          #455.#458     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #56 = Methodref          #455.#459     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #57 = Methodref          #8.#460       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n-   #58 = Methodref          #461.#462     // java/nio/file/attribute/FileTime.toMillis:()J\n-   #59 = Methodref          #161.#440     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-   #60 = Class              #463          // java/lang/IllegalArgumentException\n-   #61 = InvokeDynamic      #1:#465       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #62 = Methodref          #60.#403      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #63 = Fieldref           #8.#466       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n-   #64 = Fieldref           #8.#467       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n-   #65 = Methodref          #8.#443       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n-   #66 = Long               65535l\n-   #68 = Methodref          #8.#468       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n-   #69 = Class              #469          // org/apache/commons/compress/archivers/zip/UnixStat\n-   #70 = Integer            61440\n-   #71 = Integer            40960\n-   #72 = Fieldref           #8.#470       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n-   #73 = Integer            65535\n-   #74 = InvokeDynamic      #2:#465       // #2:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #75 = Fieldref           #8.#472       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-   #76 = Class              #473          // java/util/ArrayList\n-   #77 = Methodref          #76.#411      // java/util/ArrayList.\"<init>\":()V\n-   #78 = Class              #474          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-   #79 = InterfaceMethodref #279.#475     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #80 = Fieldref           #425.#476     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #81 = InterfaceMethodref #279.#477     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #82 = Class              #192          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-   #83 = Fieldref           #8.#478       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #84 = Methodref          #8.#479       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #85 = Methodref          #8.#480       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #86 = Methodref          #8.#481       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #87 = Fieldref           #164.#482     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-   #88 = Methodref          #8.#423       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n-   #89 = Methodref          #483.#484     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #90 = Methodref          #76.#485      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #91 = Methodref          #8.#486       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n-   #92 = InterfaceMethodref #279.#487     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #93 = InterfaceMethodref #296.#488     // java/util/Iterator.hasNext:()Z\n-   #94 = InterfaceMethodref #296.#489     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #95 = Class              #490          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #96 = Methodref          #8.#491       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #97 = InterfaceMethodref #95.#492      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #98 = Methodref          #8.#493       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #99 = InterfaceMethodref #95.#494      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-  #100 = InterfaceMethodref #95.#495      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n-  #101 = InterfaceMethodref #279.#496     // java/util/List.remove:(Ljava/lang/Object;)Z\n-  #102 = InterfaceMethodref #279.#497     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-  #103 = Methodref          #8.#498       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #104 = Methodref          #8.#499       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #105 = Methodref          #8.#500       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #106 = Methodref          #8.#501       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #107 = Methodref          #328.#502     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-  #108 = Methodref          #8.#503       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #109 = Methodref          #8.#504       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #110 = Methodref          #505.#506     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #111 = Class              #507          // java/util/NoSuchElementException\n-  #112 = Methodref          #111.#411     // java/util/NoSuchElementException.\"<init>\":()V\n-  #113 = InterfaceMethodref #279.#508     // java/util/List.size:()I\n-  #114 = Methodref          #8.#509       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #115 = Class              #510          // java/util/zip/ZipException\n-  #116 = Class              #511          // java/lang/RuntimeException\n-  #117 = Methodref          #8.#422       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-  #118 = Methodref          #115.#512     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-  #119 = InvokeDynamic      #3:#514       // #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Methodref          #116.#515     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #121 = Methodref          #425.#516     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #122 = Methodref          #161.#517     // java/util/zip/ZipEntry.setExtra:([B)V\n-  #123 = Fieldref           #518.#519     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-  #124 = Methodref          #425.#520     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #125 = Fieldref           #8.#521       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n-  #126 = Methodref          #234.#522     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #127 = Methodref          #234.#523     // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #128 = String             #524          // Invalid entry size\n-  #129 = Fieldref           #8.#525       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n-  #130 = Methodref          #483.#526     // java/util/Arrays.copyOf:([BI)[B\n-  #131 = Fieldref           #8.#527       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n-  #132 = Methodref          #234.#528     // java/lang/String.hashCode:()I\n-  #133 = Methodref          #8.#529       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #134 = InterfaceMethodref #95.#530      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-  #135 = InterfaceMethodref #95.#531      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n-  #136 = Class              #532          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #137 = Methodref          #136.#411     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n-  #138 = Methodref          #136.#533     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #139 = Methodref          #136.#534     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n-  #140 = Methodref          #136.#535     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n-  #141 = Class              #536          // java/util/Date\n-  #142 = Methodref          #8.#537       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n-  #143 = Methodref          #141.#538     // java/util/Date.\"<init>\":(J)V\n-  #144 = Methodref          #539.#540     // java/lang/Object.getClass:()Ljava/lang/Class;\n-  #145 = Methodref          #541.#542     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #146 = Methodref          #8.#543       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n-  #147 = Methodref          #234.#502     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #148 = Methodref          #8.#429       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #149 = Methodref          #8.#431       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n-  #150 = Methodref          #8.#544       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n-  #151 = Methodref          #8.#545       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n-  #152 = Methodref          #483.#546     // java/util/Arrays.equals:([B[B)Z\n-  #153 = Methodref          #8.#547       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n-  #154 = Methodref          #10.#502      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n-  #155 = Fieldref           #8.#548       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n-  #156 = Fieldref           #8.#549       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n-  #157 = Fieldref           #8.#550       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n-  #158 = Fieldref           #8.#551       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.diskNumberStart:J\n-  #159 = Methodref          #552.#553     // java/lang/Math.min:(II)I\n-  #160 = Fieldref           #8.#554       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #161 = Class              #555          // java/util/zip/ZipEntry\n-  #162 = Class              #556          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  #163 = Utf8               InnerClasses\n-  #164 = Class              #557          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n-  #165 = Utf8               ExtraFieldParsingMode\n-  #166 = Class              #558          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #167 = Utf8               CommentSource\n-  #168 = Class              #559          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #169 = Utf8               NameSource\n-  #170 = Utf8               PLATFORM_UNIX\n-  #171 = Utf8               I\n-  #172 = Utf8               ConstantValue\n-  #173 = Integer            3\n-  #174 = Utf8               PLATFORM_FAT\n-  #175 = Integer            0\n-  #176 = Utf8               CRC_UNKNOWN\n-  #177 = Integer            -1\n-  #178 = Utf8               SHORT_MASK\n-  #179 = Utf8               SHORT_SHIFT\n-  #180 = Integer            16\n-  #181 = Utf8               method\n-  #182 = Utf8               size\n-  #183 = Utf8               J\n-  #184 = Utf8               internalAttributes\n-  #185 = Utf8               versionRequired\n-  #186 = Utf8               versionMadeBy\n-  #187 = Utf8               platform\n-  #188 = Utf8               rawFlag\n-  #189 = Utf8               externalAttributes\n-  #190 = Utf8               alignment\n-  #191 = Utf8               extraFields\n-  #192 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #193 = Utf8               unparseableExtra\n-  #194 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #195 = Utf8               name\n-  #196 = Utf8               Ljava/lang/String;\n-  #197 = Utf8               rawName\n-  #198 = Utf8               [B\n-  #199 = Utf8               gpb\n-  #200 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #201 = Utf8               localHeaderOffset\n-  #202 = Utf8               dataOffset\n-  #203 = Utf8               isStreamContiguous\n-  #204 = Utf8               Z\n-  #205 = Utf8               nameSource\n-  #206 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #207 = Utf8               commentSource\n-  #208 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #209 = Utf8               diskNumberStart\n-  #210 = Utf8               EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY\n-  #211 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #212 = Utf8               <init>\n-  #213 = Utf8               (Ljava/lang/String;)V\n-  #214 = Utf8               Code\n-  #215 = Utf8               LineNumberTable\n-  #216 = Utf8               LocalVariableTable\n-  #217 = Utf8               this\n-  #218 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #219 = Utf8               (Ljava/util/zip/ZipEntry;)V\n-  #220 = Utf8               entry\n-  #221 = Utf8               Ljava/util/zip/ZipEntry;\n-  #222 = Utf8               extra\n-  #223 = Utf8               StackMapTable\n-  #224 = Class              #198          // \"[B\"\n-  #225 = Utf8               Exceptions\n-  #226 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #227 = Utf8               other\n-  #228 = Utf8               ()V\n-  #229 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #230 = Utf8               inputFile\n-  #231 = Utf8               Ljava/io/File;\n-  #232 = Utf8               entryName\n-  #233 = Class              #560          // java/io/File\n-  #234 = Class              #561          // java/lang/String\n-  #235 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #236 = Utf8               inputPath\n-  #237 = Utf8               Ljava/nio/file/Path;\n-  #238 = Utf8               options\n-  #239 = Utf8               [Ljava/nio/file/LinkOption;\n-  #240 = Class              #562          // java/nio/file/Path\n-  #241 = Class              #239          // \"[Ljava/nio/file/LinkOption;\"\n-  #242 = Class              #563          // java/io/IOException\n-  #243 = Utf8               setTime\n-  #244 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n-  #245 = Utf8               fileTime\n-  #246 = Utf8               Ljava/nio/file/attribute/FileTime;\n-  #247 = Utf8               clone\n-  #248 = Utf8               ()Ljava/lang/Object;\n-  #249 = Utf8               e\n-  #250 = Utf8               getMethod\n-  #251 = Utf8               ()I\n-  #252 = Utf8               setMethod\n-  #253 = Utf8               (I)V\n-  #254 = Utf8               getInternalAttributes\n-  #255 = Utf8               setInternalAttributes\n-  #256 = Utf8               value\n-  #257 = Utf8               getExternalAttributes\n-  #258 = Utf8               ()J\n-  #259 = Utf8               setExternalAttributes\n-  #260 = Utf8               (J)V\n-  #261 = Utf8               setUnixMode\n-  #262 = Utf8               mode\n-  #263 = Utf8               getUnixMode\n-  #264 = Utf8               isUnixSymlink\n-  #265 = Utf8               ()Z\n-  #266 = Utf8               getPlatform\n-  #267 = Utf8               setPlatform\n-  #268 = Utf8               getAlignment\n-  #269 = Utf8               setAlignment\n-  #270 = Utf8               setExtraFields\n-  #271 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #272 = Utf8               field\n-  #273 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #274 = Utf8               fields\n-  #275 = Utf8               newFields\n-  #276 = Utf8               Ljava/util/List;\n-  #277 = Utf8               LocalVariableTypeTable\n-  #278 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-  #279 = Class              #564          // java/util/List\n-  #280 = Utf8               getExtraFields\n-  #281 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #282 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #283 = Utf8               includeUnparseable\n-  #284 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #285 = Utf8               cd\n-  #286 = Utf8               c\n-  #287 = Utf8               l\n-  #288 = Utf8               parsingBehavior\n-  #289 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n-  #290 = Utf8               local\n-  #291 = Utf8               localFields\n-  #292 = Utf8               central\n-  #293 = Utf8               centralFields\n-  #294 = Utf8               merged\n-  #295 = Class              #565          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #296 = Class              #566          // java/util/Iterator\n-  #297 = Utf8               getParseableExtraFieldsNoCopy\n-  #298 = Utf8               getParseableExtraFields\n-  #299 = Utf8               parseableExtraFields\n-  #300 = Utf8               getAllExtraFieldsNoCopy\n-  #301 = Utf8               getMergedFields\n-  #302 = Utf8               zipExtraFields\n-  #303 = Utf8               getUnparseableOnly\n-  #304 = Utf8               getAllExtraFields\n-  #305 = Utf8               allExtraFieldsNoCopy\n-  #306 = Utf8               findUnparseable\n-  #307 = Utf8               (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #308 = Utf8               f\n-  #309 = Utf8               fs\n-  #310 = Utf8               Signature\n-  #311 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #312 = Utf8               findMatching\n-  #313 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #314 = Utf8               headerId\n-  #315 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #316 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #317 = Utf8               addExtraField\n-  #318 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #319 = Utf8               ze\n-  #320 = Utf8               addAsFirstExtraField\n-  #321 = Utf8               copy\n-  #322 = Utf8               newLen\n-  #323 = Utf8               removeExtraField\n-  #324 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #325 = Utf8               extraField\n-  #326 = Utf8               type\n-  #327 = Utf8               newResult\n-  #328 = Class              #567          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #329 = Utf8               removeUnparseableExtraFieldData\n-  #330 = Utf8               getExtraField\n-  #331 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #332 = Utf8               getUnparseableExtraFieldData\n-  #333 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #334 = Utf8               setExtra\n-  #335 = Utf8               ([B)V\n-  #336 = Utf8               Ljava/util/zip/ZipException;\n-  #337 = Utf8               setCentralDirectoryExtra\n-  #338 = Utf8               b\n-  #339 = Utf8               getLocalFileDataExtra\n-  #340 = Utf8               ()[B\n-  #341 = Utf8               getCentralDirectoryExtra\n-  #342 = Utf8               getName\n-  #343 = Utf8               ()Ljava/lang/String;\n-  #344 = Utf8               isDirectory\n-  #345 = Utf8               n\n-  #346 = Utf8               setName\n-  #347 = Utf8               getSize\n-  #348 = Utf8               setSize\n-  #349 = Utf8               (Ljava/lang/String;[B)V\n-  #350 = Utf8               getRawName\n-  #351 = Utf8               getLocalHeaderOffset\n-  #352 = Utf8               setLocalHeaderOffset\n-  #353 = Utf8               getDataOffset\n-  #354 = Utf8               setDataOffset\n-  #355 = Utf8               setStreamContiguous\n-  #356 = Utf8               (Z)V\n-  #357 = Utf8               hashCode\n-  #358 = Utf8               getGeneralPurposeBit\n-  #359 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #360 = Utf8               setGeneralPurposeBit\n-  #361 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #362 = Utf8               mergeExtraFields\n-  #363 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #364 = Utf8               existing\n-  #365 = Utf8               u\n-  #366 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n-  #367 = Utf8               ex\n-  #368 = Utf8               element\n-  #369 = Utf8               getLastModifiedDate\n-  #370 = Utf8               ()Ljava/util/Date;\n-  #371 = Utf8               equals\n-  #372 = Utf8               (Ljava/lang/Object;)Z\n-  #373 = Utf8               obj\n-  #374 = Utf8               Ljava/lang/Object;\n-  #375 = Utf8               myName\n-  #376 = Utf8               otherName\n-  #377 = Utf8               myComment\n-  #378 = Utf8               otherComment\n-  #379 = Utf8               setVersionMadeBy\n-  #380 = Utf8               setVersionRequired\n-  #381 = Utf8               getVersionRequired\n-  #382 = Utf8               getVersionMadeBy\n-  #383 = Utf8               getRawFlag\n-  #384 = Utf8               setRawFlag\n-  #385 = Utf8               getNameSource\n-  #386 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #387 = Utf8               setNameSource\n-  #388 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n-  #389 = Utf8               getCommentSource\n-  #390 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #391 = Utf8               setCommentSource\n-  #392 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n-  #393 = Utf8               getDiskNumberStart\n-  #394 = Utf8               setDiskNumberStart\n-  #395 = Utf8               copyOf\n-  #396 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #397 = Utf8               src\n-  #398 = Utf8               length\n-  #399 = Utf8               cpy\n-  #400 = Utf8               <clinit>\n-  #401 = Utf8               SourceFile\n-  #402 = Utf8               ZipArchiveEntry.java\n-  #403 = NameAndType        #212:#213     // \"<init>\":(Ljava/lang/String;)V\n-  #404 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #405 = NameAndType        #181:#171     // method:I\n-  #406 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #407 = NameAndType        #182:#183     // size:J\n-  #408 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #409 = NameAndType        #187:#171     // platform:I\n-  #410 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #411 = NameAndType        #212:#228     // \"<init>\":()V\n-  #412 = NameAndType        #199:#200     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #413 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n-  #414 = NameAndType        #201:#183     // localHeaderOffset:J\n-  #415 = NameAndType        #202:#183     // dataOffset:J\n-  #416 = NameAndType        #568:#206     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #417 = NameAndType        #205:#206     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #418 = NameAndType        #569:#208     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #419 = NameAndType        #207:#208     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #420 = NameAndType        #346:#213     // setName:(Ljava/lang/String;)V\n-  #421 = NameAndType        #212:#219     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n-  #422 = NameAndType        #342:#343     // getName:()Ljava/lang/String;\n-  #423 = NameAndType        #570:#340     // getExtra:()[B\n-  #424 = NameAndType        #571:#572     // BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #425 = Class              #573          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #426 = NameAndType        #574:#575     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #427 = NameAndType        #270:#271     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #428 = NameAndType        #334:#228     // setExtra:()V\n-  #429 = NameAndType        #250:#251     // getMethod:()I\n-  #430 = NameAndType        #252:#253     // setMethod:(I)V\n-  #431 = NameAndType        #347:#258     // getSize:()J\n-  #432 = NameAndType        #254:#251     // getInternalAttributes:()I\n-  #433 = NameAndType        #255:#253     // setInternalAttributes:(I)V\n-  #434 = NameAndType        #257:#258     // getExternalAttributes:()J\n-  #435 = NameAndType        #259:#260     // setExternalAttributes:(J)V\n-  #436 = NameAndType        #300:#281     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #437 = NameAndType        #266:#251     // getPlatform:()I\n-  #438 = NameAndType        #267:#253     // setPlatform:(I)V\n-  #439 = NameAndType        #358:#359     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #440 = NameAndType        #247:#248     // clone:()Ljava/lang/Object;\n-  #441 = NameAndType        #360:#361     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #442 = Utf8\n-  #443 = NameAndType        #344:#265     // isDirectory:()Z\n-  #444 = Utf8               /\n-  #445 = NameAndType        #576:#577     // endsWith:(Ljava/lang/String;)Z\n-  #446 = Utf8               BootstrapMethods\n-  #447 = MethodHandle       6:#578        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #448 = String             #579          // \\u0001/\n-  #449 = NameAndType        #580:#581     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #450 = NameAndType        #582:#265     // isFile:()Z\n-  #451 = NameAndType        #398:#258     // length:()J\n-  #452 = NameAndType        #348:#260     // setSize:(J)V\n-  #453 = NameAndType        #583:#258     // lastModified:()J\n-  #454 = NameAndType        #243:#260     // setTime:(J)V\n-  #455 = Class              #584          // java/nio/file/Files\n-  #456 = NameAndType        #344:#585     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #457 = NameAndType        #586:#585     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #458 = NameAndType        #182:#587     // size:(Ljava/nio/file/Path;)J\n-  #459 = NameAndType        #588:#589     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #460 = NameAndType        #243:#244     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n-  #461 = Class              #590          // java/nio/file/attribute/FileTime\n-  #462 = NameAndType        #591:#258     // toMillis:()J\n-  #463 = Utf8               java/lang/IllegalArgumentException\n-  #464 = String             #592          // ZIP compression method can not be negative: \\u0001\n-  #465 = NameAndType        #580:#593     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #466 = NameAndType        #184:#171     // internalAttributes:I\n-  #467 = NameAndType        #189:#183     // externalAttributes:J\n-  #468 = NameAndType        #263:#251     // getUnixMode:()I\n-  #469 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #470 = NameAndType        #190:#171     // alignment:I\n-  #471 = String             #594          // Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n-  #472 = NameAndType        #193:#194     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #473 = Utf8               java/util/ArrayList\n-  #474 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-  #475 = NameAndType        #595:#372     // add:(Ljava/lang/Object;)Z\n-  #476 = NameAndType        #596:#192     // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #477 = NameAndType        #597:#598     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #478 = NameAndType        #191:#192     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #479 = NameAndType        #298:#281     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #480 = NameAndType        #304:#281     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #481 = NameAndType        #280:#282     // getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #482 = NameAndType        #599:#572     // ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #483 = Class              #600          // java/util/Arrays\n-  #484 = NameAndType        #601:#602     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #485 = NameAndType        #212:#603     // \"<init>\":(Ljava/util/Collection;)V\n-  #486 = NameAndType        #341:#340     // getCentralDirectoryExtra:()[B\n-  #487 = NameAndType        #604:#605     // iterator:()Ljava/util/Iterator;\n-  #488 = NameAndType        #606:#265     // hasNext:()Z\n-  #489 = NameAndType        #607:#248     // next:()Ljava/lang/Object;\n-  #490 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #491 = NameAndType        #306:#307     // findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #492 = NameAndType        #608:#609     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #493 = NameAndType        #312:#313     // findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #494 = NameAndType        #610:#340     // getCentralDirectoryData:()[B\n-  #495 = NameAndType        #611:#612     // parseFromCentralDirectoryData:([BII)V\n-  #496 = NameAndType        #613:#372     // remove:(Ljava/lang/Object;)Z\n-  #497 = NameAndType        #614:#615     // addAll:(Ljava/util/Collection;)Z\n-  #498 = NameAndType        #297:#281     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #499 = NameAndType        #395:#396     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #500 = NameAndType        #303:#281     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #501 = NameAndType        #301:#281     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #502 = NameAndType        #371:#372     // equals:(Ljava/lang/Object;)Z\n-  #503 = NameAndType        #330:#331     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #504 = NameAndType        #323:#324     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #505 = Class              #616          // java/lang/System\n-  #506 = NameAndType        #617:#618     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #507 = Utf8               java/util/NoSuchElementException\n-  #508 = NameAndType        #182:#251     // size:()I\n-  #509 = NameAndType        #362:#363     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #510 = Utf8               java/util/zip/ZipException\n-  #511 = Utf8               java/lang/RuntimeException\n-  #512 = NameAndType        #619:#343     // getMessage:()Ljava/lang/String;\n-  #513 = String             #620          // Error parsing extra fields for entry: \\u0001 - \\u0001\n-  #514 = NameAndType        #580:#621     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #515 = NameAndType        #212:#622     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #516 = NameAndType        #623:#624     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #517 = NameAndType        #334:#335     // setExtra:([B)V\n-  #518 = Class              #625          // org/apache/commons/compress/utils/ByteUtils\n-  #519 = NameAndType        #626:#198     // EMPTY_BYTE_ARRAY:[B\n-  #520 = NameAndType        #627:#624     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #521 = NameAndType        #195:#196     // name:Ljava/lang/String;\n-  #522 = NameAndType        #628:#629     // contains:(Ljava/lang/CharSequence;)Z\n-  #523 = NameAndType        #630:#631     // replace:(CC)Ljava/lang/String;\n-  #524 = Utf8               Invalid entry size\n-  #525 = NameAndType        #197:#198     // rawName:[B\n-  #526 = NameAndType        #395:#632     // copyOf:([BI)[B\n-  #527 = NameAndType        #203:#204     // isStreamContiguous:Z\n-  #528 = NameAndType        #357:#251     // hashCode:()I\n-  #529 = NameAndType        #317:#318     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #530 = NameAndType        #633:#340     // getLocalFileDataData:()[B\n-  #531 = NameAndType        #634:#612     // parseFromLocalFileData:([BII)V\n-  #532 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #533 = NameAndType        #635:#324     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #534 = NameAndType        #636:#335     // setLocalFileDataData:([B)V\n-  #535 = NameAndType        #637:#335     // setCentralDirectoryData:([B)V\n-  #536 = Utf8               java/util/Date\n-  #537 = NameAndType        #638:#258     // getTime:()J\n-  #538 = NameAndType        #212:#260     // \"<init>\":(J)V\n-  #539 = Class              #639          // java/lang/Object\n-  #540 = NameAndType        #640:#641     // getClass:()Ljava/lang/Class;\n-  #541 = Class              #642          // java/util/Objects\n-  #542 = NameAndType        #371:#643     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #543 = NameAndType        #644:#343     // getComment:()Ljava/lang/String;\n-  #544 = NameAndType        #645:#258     // getCrc:()J\n-  #545 = NameAndType        #646:#258     // getCompressedSize:()J\n-  #546 = NameAndType        #371:#647     // equals:([B[B)Z\n-  #547 = NameAndType        #339:#340     // getLocalFileDataExtra:()[B\n-  #548 = NameAndType        #186:#171     // versionMadeBy:I\n-  #549 = NameAndType        #185:#171     // versionRequired:I\n-  #550 = NameAndType        #188:#171     // rawFlag:I\n-  #551 = NameAndType        #209:#183     // diskNumberStart:J\n-  #552 = Class              #648          // java/lang/Math\n-  #553 = NameAndType        #649:#650     // min:(II)I\n-  #554 = NameAndType        #210:#211     // EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #555 = Utf8               java/util/zip/ZipEntry\n-  #556 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  #557 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n-  #558 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #559 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #560 = Utf8               java/io/File\n-  #561 = Utf8               java/lang/String\n-  #562 = Utf8               java/nio/file/Path\n-  #563 = Utf8               java/io/IOException\n-  #564 = Utf8               java/util/List\n-  #565 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #566 = Utf8               java/util/Iterator\n-  #567 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #568 = Utf8               NAME\n-  #569 = Utf8               COMMENT\n-  #570 = Utf8               getExtra\n-  #571 = Utf8               BEST_EFFORT\n-  #572 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #573 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #574 = Utf8               parse\n-  #575 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #576 = Utf8               endsWith\n-  #577 = Utf8               (Ljava/lang/String;)Z\n-  #578 = Methodref          #651.#652     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #579 = Utf8               \\u0001/\n-  #580 = Utf8               makeConcatWithConstants\n-  #581 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #582 = Utf8               isFile\n-  #583 = Utf8               lastModified\n-  #584 = Utf8               java/nio/file/Files\n-  #585 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #586 = Utf8               isRegularFile\n-  #587 = Utf8               (Ljava/nio/file/Path;)J\n-  #588 = Utf8               getLastModifiedTime\n-  #589 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #590 = Utf8               java/nio/file/attribute/FileTime\n-  #591 = Utf8               toMillis\n-  #592 = Utf8               ZIP compression method can not be negative: \\u0001\n-  #593 = Utf8               (I)Ljava/lang/String;\n-  #594 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n-  #595 = Utf8               add\n-  #596 = Utf8               EMPTY_ZIP_EXTRA_FIELD_ARRAY\n-  #597 = Utf8               toArray\n-  #598 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #599 = Utf8               ONLY_PARSEABLE_LENIENT\n-  #600 = Utf8               java/util/Arrays\n-  #601 = Utf8               asList\n-  #602 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #603 = Utf8               (Ljava/util/Collection;)V\n-  #604 = Utf8               iterator\n-  #605 = Utf8               ()Ljava/util/Iterator;\n-  #606 = Utf8               hasNext\n-  #607 = Utf8               next\n-  #608 = Utf8               getHeaderId\n-  #609 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #610 = Utf8               getCentralDirectoryData\n-  #611 = Utf8               parseFromCentralDirectoryData\n-  #612 = Utf8               ([BII)V\n-  #613 = Utf8               remove\n-  #614 = Utf8               addAll\n-  #615 = Utf8               (Ljava/util/Collection;)Z\n-  #616 = Utf8               java/lang/System\n-  #617 = Utf8               arraycopy\n-  #618 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #619 = Utf8               getMessage\n-  #620 = Utf8               Error parsing extra fields for entry: \\u0001 - \\u0001\n-  #621 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #622 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #623 = Utf8               mergeLocalFileDataData\n-  #624 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #625 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #626 = Utf8               EMPTY_BYTE_ARRAY\n-  #627 = Utf8               mergeCentralDirectoryData\n-  #628 = Utf8               contains\n-  #629 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #630 = Utf8               replace\n-  #631 = Utf8               (CC)Ljava/lang/String;\n-  #632 = Utf8               ([BI)[B\n-  #633 = Utf8               getLocalFileDataData\n-  #634 = Utf8               parseFromLocalFileData\n-  #635 = Utf8               setHeaderId\n-  #636 = Utf8               setLocalFileDataData\n-  #637 = Utf8               setCentralDirectoryData\n-  #638 = Utf8               getTime\n-  #639 = Utf8               java/lang/Object\n-  #640 = Utf8               getClass\n-  #641 = Utf8               ()Ljava/lang/Class;\n-  #642 = Utf8               java/util/Objects\n-  #643 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #644 = Utf8               getComment\n-  #645 = Utf8               getCrc\n-  #646 = Utf8               getCompressedSize\n-  #647 = Utf8               ([B[B)Z\n-  #648 = Utf8               java/lang/Math\n-  #649 = Utf8               min\n-  #650 = Utf8               (II)I\n-  #651 = Class              #653          // java/lang/invoke/StringConcatFactory\n-  #652 = NameAndType        #580:#656     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #653 = Utf8               java/lang/invoke/StringConcatFactory\n-  #654 = Class              #658          // java/lang/invoke/MethodHandles$Lookup\n-  #655 = Utf8               Lookup\n-  #656 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #657 = Class              #659          // java/lang/invoke/MethodHandles\n-  #658 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #659 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n+    #2 = Class              #4            // java/util/zip/ZipEntry\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;)V\n+    #4 = Utf8               java/util/zip/ZipEntry\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/lang/String;)V\n+    #7 = Class              #8            // org/apache/commons/compress/archivers/zip/ZipMethod\n+    #8 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+    #9 = Fieldref           #10.#11       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n+   #10 = Class              #12           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #11 = NameAndType        #13:#14       // method:I\n+   #12 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #13 = Utf8               method\n+   #14 = Utf8               I\n+   #15 = Class              #16           // org/apache/commons/compress/archivers/ArchiveEntry\n+   #16 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+   #17 = Long               -1l\n+   #19 = Fieldref           #10.#20       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n+   #20 = NameAndType        #21:#22       // size:J\n+   #21 = Utf8               size\n+   #22 = Utf8               J\n+   #23 = Fieldref           #10.#24       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n+   #24 = NameAndType        #25:#14       // platform:I\n+   #25 = Utf8               platform\n+   #26 = Class              #27           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #27 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #28 = Methodref          #26.#29       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #29 = NameAndType        #5:#30        // \"<init>\":()V\n+   #30 = Utf8               ()V\n+   #31 = Fieldref           #10.#32       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #32 = NameAndType        #33:#34       // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #33 = Utf8               gpb\n+   #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #35 = Class              #36           // org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #36 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #37 = Fieldref           #10.#38       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n+   #38 = NameAndType        #39:#22       // localHeaderOffset:J\n+   #39 = Utf8               localHeaderOffset\n+   #40 = Fieldref           #10.#41       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n+   #41 = NameAndType        #42:#22       // dataOffset:J\n+   #42 = Utf8               dataOffset\n+   #43 = Fieldref           #44.#45       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #44 = Class              #46           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+   #45 = NameAndType        #47:#48       // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #46 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+   #47 = Utf8               NAME\n+   #48 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #49 = Fieldref           #10.#50       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #50 = NameAndType        #51:#48       // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #51 = Utf8               nameSource\n+   #52 = Fieldref           #53.#54       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #53 = Class              #55           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #54 = NameAndType        #56:#57       // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #55 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #56 = Utf8               COMMENT\n+   #57 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #58 = Fieldref           #10.#59       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #59 = NameAndType        #60:#57       // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #60 = Utf8               commentSource\n+   #61 = Methodref          #10.#62       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n+   #62 = NameAndType        #63:#6        // setName:(Ljava/lang/String;)V\n+   #63 = Utf8               setName\n+   #64 = Methodref          #2.#65        // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #65 = NameAndType        #5:#66        // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #66 = Utf8               (Ljava/util/zip/ZipEntry;)V\n+   #67 = Methodref          #2.#68        // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+   #68 = NameAndType        #69:#70       // getName:()Ljava/lang/String;\n+   #69 = Utf8               getName\n+   #70 = Utf8               ()Ljava/lang/String;\n+   #71 = Methodref          #2.#72        // java/util/zip/ZipEntry.getExtra:()[B\n+   #72 = NameAndType        #73:#74       // getExtra:()[B\n+   #73 = Utf8               getExtra\n+   #74 = Utf8               ()[B\n+   #75 = Fieldref           #76.#77       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #76 = Class              #78           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n+   #77 = NameAndType        #79:#80       // BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n+   #79 = Utf8               BEST_EFFORT\n+   #80 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #81 = Methodref          #82.#83       // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #82 = Class              #84           // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+   #83 = NameAndType        #85:#86       // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #84 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+   #85 = Utf8               parse\n+   #86 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #87 = Methodref          #10.#88       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #88 = NameAndType        #89:#90       // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #89 = Utf8               setExtraFields\n+   #90 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #91 = Methodref          #10.#92       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n+   #92 = NameAndType        #93:#30       // setExtra:()V\n+   #93 = Utf8               setExtra\n+   #94 = Methodref          #2.#95        // java/util/zip/ZipEntry.getMethod:()I\n+   #95 = NameAndType        #96:#97       // getMethod:()I\n+   #96 = Utf8               getMethod\n+   #97 = Utf8               ()I\n+   #98 = Methodref          #10.#99       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+   #99 = NameAndType        #100:#101     // setMethod:(I)V\n+  #100 = Utf8               setMethod\n+  #101 = Utf8               (I)V\n+  #102 = Methodref          #2.#103       // java/util/zip/ZipEntry.getSize:()J\n+  #103 = NameAndType        #104:#105     // getSize:()J\n+  #104 = Utf8               getSize\n+  #105 = Utf8               ()J\n+  #106 = Methodref          #10.#65       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+  #107 = Methodref          #10.#108      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n+  #108 = NameAndType        #109:#97      // getInternalAttributes:()I\n+  #109 = Utf8               getInternalAttributes\n+  #110 = Methodref          #10.#111      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n+  #111 = NameAndType        #112:#101     // setInternalAttributes:(I)V\n+  #112 = Utf8               setInternalAttributes\n+  #113 = Methodref          #10.#114      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n+  #114 = NameAndType        #115:#105     // getExternalAttributes:()J\n+  #115 = Utf8               getExternalAttributes\n+  #116 = Methodref          #10.#117      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n+  #117 = NameAndType        #118:#119     // setExternalAttributes:(J)V\n+  #118 = Utf8               setExternalAttributes\n+  #119 = Utf8               (J)V\n+  #120 = Methodref          #10.#121      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #121 = NameAndType        #122:#123     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #122 = Utf8               getAllExtraFieldsNoCopy\n+  #123 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #124 = Methodref          #10.#125      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n+  #125 = NameAndType        #126:#97      // getPlatform:()I\n+  #126 = Utf8               getPlatform\n+  #127 = Methodref          #10.#128      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n+  #128 = NameAndType        #129:#101     // setPlatform:(I)V\n+  #129 = Utf8               setPlatform\n+  #130 = Methodref          #10.#131      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #131 = NameAndType        #132:#133     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #132 = Utf8               getGeneralPurposeBit\n+  #133 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #134 = Methodref          #26.#135      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+  #135 = NameAndType        #136:#137     // clone:()Ljava/lang/Object;\n+  #136 = Utf8               clone\n+  #137 = Utf8               ()Ljava/lang/Object;\n+  #138 = Methodref          #10.#139      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #139 = NameAndType        #140:#141     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #140 = Utf8               setGeneralPurposeBit\n+  #141 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #142 = String             #143          //\n+  #143 = Utf8\n+  #144 = Methodref          #10.#3        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n+  #145 = Methodref          #146.#147     // java/io/File.isDirectory:()Z\n+  #146 = Class              #148          // java/io/File\n+  #147 = NameAndType        #149:#150     // isDirectory:()Z\n+  #148 = Utf8               java/io/File\n+  #149 = Utf8               isDirectory\n+  #150 = Utf8               ()Z\n+  #151 = String             #152          // /\n+  #152 = Utf8               /\n+  #153 = Methodref          #154.#155     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #154 = Class              #156          // java/lang/String\n+  #155 = NameAndType        #157:#158     // endsWith:(Ljava/lang/String;)Z\n+  #156 = Utf8               java/lang/String\n+  #157 = Utf8               endsWith\n+  #158 = Utf8               (Ljava/lang/String;)Z\n+  #159 = InvokeDynamic      #0:#160       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #160 = NameAndType        #161:#162     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #161 = Utf8               makeConcatWithConstants\n+  #162 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #163 = Methodref          #146.#164     // java/io/File.isFile:()Z\n+  #164 = NameAndType        #165:#150     // isFile:()Z\n+  #165 = Utf8               isFile\n+  #166 = Methodref          #146.#167     // java/io/File.length:()J\n+  #167 = NameAndType        #168:#105     // length:()J\n+  #168 = Utf8               length\n+  #169 = Methodref          #10.#170      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+  #170 = NameAndType        #171:#119     // setSize:(J)V\n+  #171 = Utf8               setSize\n+  #172 = Methodref          #146.#173     // java/io/File.lastModified:()J\n+  #173 = NameAndType        #174:#105     // lastModified:()J\n+  #174 = Utf8               lastModified\n+  #175 = Methodref          #10.#176      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n+  #176 = NameAndType        #177:#119     // setTime:(J)V\n+  #177 = Utf8               setTime\n+  #178 = Methodref          #179.#180     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #179 = Class              #181          // java/nio/file/Files\n+  #180 = NameAndType        #149:#182     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #181 = Utf8               java/nio/file/Files\n+  #182 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #183 = Methodref          #179.#184     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #184 = NameAndType        #185:#182     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #185 = Utf8               isRegularFile\n+  #186 = Methodref          #179.#187     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+  #187 = NameAndType        #21:#188      // size:(Ljava/nio/file/Path;)J\n+  #188 = Utf8               (Ljava/nio/file/Path;)J\n+  #189 = Methodref          #179.#190     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #190 = NameAndType        #191:#192     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #191 = Utf8               getLastModifiedTime\n+  #192 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #193 = Methodref          #10.#194      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #194 = NameAndType        #177:#195     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #195 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n+  #196 = Methodref          #197.#198     // java/nio/file/attribute/FileTime.toMillis:()J\n+  #197 = Class              #199          // java/nio/file/attribute/FileTime\n+  #198 = NameAndType        #200:#105     // toMillis:()J\n+  #199 = Utf8               java/nio/file/attribute/FileTime\n+  #200 = Utf8               toMillis\n+  #201 = Methodref          #2.#135       // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+  #202 = Class              #203          // java/lang/IllegalArgumentException\n+  #203 = Utf8               java/lang/IllegalArgumentException\n+  #204 = InvokeDynamic      #1:#205       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #205 = NameAndType        #161:#206     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #206 = Utf8               (I)Ljava/lang/String;\n+  #207 = Methodref          #202.#3       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #208 = Fieldref           #10.#209      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n+  #209 = NameAndType        #210:#14      // internalAttributes:I\n+  #210 = Utf8               internalAttributes\n+  #211 = Fieldref           #10.#212      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n+  #212 = NameAndType        #213:#22      // externalAttributes:J\n+  #213 = Utf8               externalAttributes\n+  #214 = Methodref          #10.#147      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n+  #215 = Long               65535l\n+  #217 = Methodref          #10.#218      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n+  #218 = NameAndType        #219:#97      // getUnixMode:()I\n+  #219 = Utf8               getUnixMode\n+  #220 = Class              #221          // org/apache/commons/compress/archivers/zip/UnixStat\n+  #221 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #222 = Integer            61440\n+  #223 = Integer            40960\n+  #224 = Fieldref           #10.#225      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n+  #225 = NameAndType        #226:#14      // alignment:I\n+  #226 = Utf8               alignment\n+  #227 = Integer            65535\n+  #228 = InvokeDynamic      #2:#205       // #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #229 = Fieldref           #10.#230      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #230 = NameAndType        #231:#232     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #231 = Utf8               unparseableExtra\n+  #232 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #233 = Class              #234          // java/util/ArrayList\n+  #234 = Utf8               java/util/ArrayList\n+  #235 = Methodref          #233.#29      // java/util/ArrayList.\"<init>\":()V\n+  #236 = Class              #237          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #237 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #238 = InterfaceMethodref #239.#240     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #239 = Class              #241          // java/util/List\n+  #240 = NameAndType        #242:#243     // add:(Ljava/lang/Object;)Z\n+  #241 = Utf8               java/util/List\n+  #242 = Utf8               add\n+  #243 = Utf8               (Ljava/lang/Object;)Z\n+  #244 = Fieldref           #82.#245      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #245 = NameAndType        #246:#247     // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #246 = Utf8               EMPTY_ZIP_EXTRA_FIELD_ARRAY\n+  #247 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #248 = InterfaceMethodref #239.#249     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #249 = NameAndType        #250:#251     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #250 = Utf8               toArray\n+  #251 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #252 = Class              #247          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+  #253 = Fieldref           #10.#254      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #254 = NameAndType        #255:#247     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #255 = Utf8               extraFields\n+  #256 = Methodref          #10.#257      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #257 = NameAndType        #258:#123     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #258 = Utf8               getParseableExtraFields\n+  #259 = Methodref          #10.#260      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #260 = NameAndType        #261:#123     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #261 = Utf8               getAllExtraFields\n+  #262 = Methodref          #10.#263      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #263 = NameAndType        #264:#265     // getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #264 = Utf8               getExtraFields\n+  #265 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #266 = Fieldref           #76.#267      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #267 = NameAndType        #268:#80      // ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #268 = Utf8               ONLY_PARSEABLE_LENIENT\n+  #269 = Methodref          #10.#72       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n+  #270 = Methodref          #271.#272     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #271 = Class              #273          // java/util/Arrays\n+  #272 = NameAndType        #274:#275     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #273 = Utf8               java/util/Arrays\n+  #274 = Utf8               asList\n+  #275 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #276 = Methodref          #233.#277     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #277 = NameAndType        #5:#278       // \"<init>\":(Ljava/util/Collection;)V\n+  #278 = Utf8               (Ljava/util/Collection;)V\n+  #279 = Methodref          #10.#280      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n+  #280 = NameAndType        #281:#74      // getCentralDirectoryExtra:()[B\n+  #281 = Utf8               getCentralDirectoryExtra\n+  #282 = InterfaceMethodref #239.#283     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #283 = NameAndType        #284:#285     // iterator:()Ljava/util/Iterator;\n+  #284 = Utf8               iterator\n+  #285 = Utf8               ()Ljava/util/Iterator;\n+  #286 = InterfaceMethodref #287.#288     // java/util/Iterator.hasNext:()Z\n+  #287 = Class              #289          // java/util/Iterator\n+  #288 = NameAndType        #290:#150     // hasNext:()Z\n+  #289 = Utf8               java/util/Iterator\n+  #290 = Utf8               hasNext\n+  #291 = InterfaceMethodref #287.#292     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #292 = NameAndType        #293:#137     // next:()Ljava/lang/Object;\n+  #293 = Utf8               next\n+  #294 = Class              #295          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #295 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #296 = Methodref          #10.#297      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #297 = NameAndType        #298:#299     // findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #298 = Utf8               findUnparseable\n+  #299 = Utf8               (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #300 = InterfaceMethodref #294.#301     // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #301 = NameAndType        #302:#303     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #302 = Utf8               getHeaderId\n+  #303 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #304 = Methodref          #10.#305      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #305 = NameAndType        #306:#307     // findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #306 = Utf8               findMatching\n+  #307 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #308 = InterfaceMethodref #294.#309     // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+  #309 = NameAndType        #310:#74      // getCentralDirectoryData:()[B\n+  #310 = Utf8               getCentralDirectoryData\n+  #311 = InterfaceMethodref #294.#312     // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+  #312 = NameAndType        #313:#314     // parseFromCentralDirectoryData:([BII)V\n+  #313 = Utf8               parseFromCentralDirectoryData\n+  #314 = Utf8               ([BII)V\n+  #315 = InterfaceMethodref #239.#316     // java/util/List.remove:(Ljava/lang/Object;)Z\n+  #316 = NameAndType        #317:#243     // remove:(Ljava/lang/Object;)Z\n+  #317 = Utf8               remove\n+  #318 = InterfaceMethodref #239.#319     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #319 = NameAndType        #320:#321     // addAll:(Ljava/util/Collection;)Z\n+  #320 = Utf8               addAll\n+  #321 = Utf8               (Ljava/util/Collection;)Z\n+  #322 = Methodref          #10.#323      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #323 = NameAndType        #324:#123     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #324 = Utf8               getParseableExtraFieldsNoCopy\n+  #325 = Methodref          #10.#326      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #326 = NameAndType        #327:#328     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #327 = Utf8               copyOf\n+  #328 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #329 = Methodref          #10.#330      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #330 = NameAndType        #331:#123     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #331 = Utf8               getUnparseableOnly\n+  #332 = Methodref          #10.#333      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #333 = NameAndType        #334:#123     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #334 = Utf8               getMergedFields\n+  #335 = Methodref          #336.#337     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+  #336 = Class              #338          // org/apache/commons/compress/archivers/zip/ZipShort\n+  #337 = NameAndType        #339:#243     // equals:(Ljava/lang/Object;)Z\n+  #338 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #339 = Utf8               equals\n+  #340 = Methodref          #10.#341      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #341 = NameAndType        #342:#343     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #342 = Utf8               getExtraField\n+  #343 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #344 = Methodref          #10.#345      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #345 = NameAndType        #346:#347     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #346 = Utf8               removeExtraField\n+  #347 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #348 = Methodref          #349.#350     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #349 = Class              #351          // java/lang/System\n+  #350 = NameAndType        #352:#353     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #351 = Utf8               java/lang/System\n+  #352 = Utf8               arraycopy\n+  #353 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #354 = Class              #355          // java/util/NoSuchElementException\n+  #355 = Utf8               java/util/NoSuchElementException\n+  #356 = Methodref          #354.#29      // java/util/NoSuchElementException.\"<init>\":()V\n+  #357 = InterfaceMethodref #239.#358     // java/util/List.size:()I\n+  #358 = NameAndType        #21:#97       // size:()I\n+  #359 = Methodref          #10.#360      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #360 = NameAndType        #361:#362     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #361 = Utf8               mergeExtraFields\n+  #362 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #363 = Class              #364          // java/util/zip/ZipException\n+  #364 = Utf8               java/util/zip/ZipException\n+  #365 = Class              #366          // java/lang/RuntimeException\n+  #366 = Utf8               java/lang/RuntimeException\n+  #367 = Methodref          #10.#68       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+  #368 = Methodref          #363.#369     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+  #369 = NameAndType        #370:#70      // getMessage:()Ljava/lang/String;\n+  #370 = Utf8               getMessage\n+  #371 = InvokeDynamic      #3:#372       // #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #372 = NameAndType        #161:#373     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #373 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #374 = Methodref          #365.#375     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #375 = NameAndType        #5:#376       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #376 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #377 = Methodref          #82.#378      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #378 = NameAndType        #379:#380     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #379 = Utf8               mergeLocalFileDataData\n+  #380 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #381 = Methodref          #2.#382       // java/util/zip/ZipEntry.setExtra:([B)V\n+  #382 = NameAndType        #93:#383      // setExtra:([B)V\n+  #383 = Utf8               ([B)V\n+  #384 = Fieldref           #385.#386     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+  #385 = Class              #387          // org/apache/commons/compress/utils/ByteUtils\n+  #386 = NameAndType        #388:#389     // EMPTY_BYTE_ARRAY:[B\n+  #387 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #388 = Utf8               EMPTY_BYTE_ARRAY\n+  #389 = Utf8               [B\n+  #390 = Methodref          #82.#391      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #391 = NameAndType        #392:#380     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #392 = Utf8               mergeCentralDirectoryData\n+  #393 = Fieldref           #10.#394      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n+  #394 = NameAndType        #395:#396     // name:Ljava/lang/String;\n+  #395 = Utf8               name\n+  #396 = Utf8               Ljava/lang/String;\n+  #397 = Methodref          #154.#398     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #398 = NameAndType        #399:#400     // contains:(Ljava/lang/CharSequence;)Z\n+  #399 = Utf8               contains\n+  #400 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #401 = Methodref          #154.#402     // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #402 = NameAndType        #403:#404     // replace:(CC)Ljava/lang/String;\n+  #403 = Utf8               replace\n+  #404 = Utf8               (CC)Ljava/lang/String;\n+  #405 = String             #406          // Invalid entry size\n+  #406 = Utf8               Invalid entry size\n+  #407 = Fieldref           #10.#408      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n+  #408 = NameAndType        #409:#389     // rawName:[B\n+  #409 = Utf8               rawName\n+  #410 = Methodref          #271.#411     // java/util/Arrays.copyOf:([BI)[B\n+  #411 = NameAndType        #327:#412     // copyOf:([BI)[B\n+  #412 = Utf8               ([BI)[B\n+  #413 = Fieldref           #10.#414      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n+  #414 = NameAndType        #415:#416     // isStreamContiguous:Z\n+  #415 = Utf8               isStreamContiguous\n+  #416 = Utf8               Z\n+  #417 = Methodref          #154.#418     // java/lang/String.hashCode:()I\n+  #418 = NameAndType        #419:#97      // hashCode:()I\n+  #419 = Utf8               hashCode\n+  #420 = Methodref          #10.#421      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #421 = NameAndType        #422:#423     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #422 = Utf8               addExtraField\n+  #423 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #424 = InterfaceMethodref #294.#425     // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+  #425 = NameAndType        #426:#74      // getLocalFileDataData:()[B\n+  #426 = Utf8               getLocalFileDataData\n+  #427 = InterfaceMethodref #294.#428     // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+  #428 = NameAndType        #429:#314     // parseFromLocalFileData:([BII)V\n+  #429 = Utf8               parseFromLocalFileData\n+  #430 = Class              #431          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #431 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #432 = Methodref          #430.#29      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+  #433 = Methodref          #430.#434     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #434 = NameAndType        #435:#347     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #435 = Utf8               setHeaderId\n+  #436 = Methodref          #430.#437     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+  #437 = NameAndType        #438:#383     // setLocalFileDataData:([B)V\n+  #438 = Utf8               setLocalFileDataData\n+  #439 = Methodref          #430.#440     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+  #440 = NameAndType        #441:#383     // setCentralDirectoryData:([B)V\n+  #441 = Utf8               setCentralDirectoryData\n+  #442 = Class              #443          // java/util/Date\n+  #443 = Utf8               java/util/Date\n+  #444 = Methodref          #10.#445      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n+  #445 = NameAndType        #446:#105     // getTime:()J\n+  #446 = Utf8               getTime\n+  #447 = Methodref          #442.#448     // java/util/Date.\"<init>\":(J)V\n+  #448 = NameAndType        #5:#119       // \"<init>\":(J)V\n+  #449 = Methodref          #450.#451     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #450 = Class              #452          // java/lang/Object\n+  #451 = NameAndType        #453:#454     // getClass:()Ljava/lang/Class;\n+  #452 = Utf8               java/lang/Object\n+  #453 = Utf8               getClass\n+  #454 = Utf8               ()Ljava/lang/Class;\n+  #455 = Methodref          #456.#457     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #456 = Class              #458          // java/util/Objects\n+  #457 = NameAndType        #339:#459     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #458 = Utf8               java/util/Objects\n+  #459 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #460 = Methodref          #10.#461      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n+  #461 = NameAndType        #462:#70      // getComment:()Ljava/lang/String;\n+  #462 = Utf8               getComment\n+  #463 = Methodref          #154.#337     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #464 = Methodref          #10.#95       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #465 = Methodref          #10.#103      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n+  #466 = Methodref          #10.#467      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n+  #467 = NameAndType        #468:#105     // getCrc:()J\n+  #468 = Utf8               getCrc\n+  #469 = Methodref          #10.#470      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n+  #470 = NameAndType        #471:#105     // getCompressedSize:()J\n+  #471 = Utf8               getCompressedSize\n+  #472 = Methodref          #271.#473     // java/util/Arrays.equals:([B[B)Z\n+  #473 = NameAndType        #339:#474     // equals:([B[B)Z\n+  #474 = Utf8               ([B[B)Z\n+  #475 = Methodref          #10.#476      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n+  #476 = NameAndType        #477:#74      // getLocalFileDataExtra:()[B\n+  #477 = Utf8               getLocalFileDataExtra\n+  #478 = Methodref          #26.#337      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+  #479 = Fieldref           #10.#480      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n+  #480 = NameAndType        #481:#14      // versionMadeBy:I\n+  #481 = Utf8               versionMadeBy\n+  #482 = Fieldref           #10.#483      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n+  #483 = NameAndType        #484:#14      // versionRequired:I\n+  #484 = Utf8               versionRequired\n+  #485 = Fieldref           #10.#486      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n+  #486 = NameAndType        #487:#14      // rawFlag:I\n+  #487 = Utf8               rawFlag\n+  #488 = Fieldref           #10.#489      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.diskNumberStart:J\n+  #489 = NameAndType        #490:#22      // diskNumberStart:J\n+  #490 = Utf8               diskNumberStart\n+  #491 = Methodref          #492.#493     // java/lang/Math.min:(II)I\n+  #492 = Class              #494          // java/lang/Math\n+  #493 = NameAndType        #495:#496     // min:(II)I\n+  #494 = Utf8               java/lang/Math\n+  #495 = Utf8               min\n+  #496 = Utf8               (II)I\n+  #497 = Fieldref           #10.#498      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #498 = NameAndType        #499:#500     // EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #499 = Utf8               EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY\n+  #500 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #501 = Utf8               PLATFORM_UNIX\n+  #502 = Utf8               ConstantValue\n+  #503 = Integer            3\n+  #504 = Utf8               PLATFORM_FAT\n+  #505 = Integer            0\n+  #506 = Utf8               CRC_UNKNOWN\n+  #507 = Integer            -1\n+  #508 = Utf8               SHORT_MASK\n+  #509 = Utf8               SHORT_SHIFT\n+  #510 = Integer            16\n+  #511 = Utf8               Code\n+  #512 = Utf8               LineNumberTable\n+  #513 = Utf8               LocalVariableTable\n+  #514 = Utf8               this\n+  #515 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #516 = Utf8               entry\n+  #517 = Utf8               Ljava/util/zip/ZipEntry;\n+  #518 = Utf8               extra\n+  #519 = Utf8               StackMapTable\n+  #520 = Class              #389          // \"[B\"\n+  #521 = Utf8               Exceptions\n+  #522 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #523 = Utf8               other\n+  #524 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #525 = Utf8               inputFile\n+  #526 = Utf8               Ljava/io/File;\n+  #527 = Utf8               entryName\n+  #528 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #529 = Utf8               inputPath\n+  #530 = Utf8               Ljava/nio/file/Path;\n+  #531 = Utf8               options\n+  #532 = Utf8               [Ljava/nio/file/LinkOption;\n+  #533 = Class              #534          // java/nio/file/Path\n+  #534 = Utf8               java/nio/file/Path\n+  #535 = Class              #532          // \"[Ljava/nio/file/LinkOption;\"\n+  #536 = Class              #537          // java/io/IOException\n+  #537 = Utf8               java/io/IOException\n+  #538 = Utf8               fileTime\n+  #539 = Utf8               Ljava/nio/file/attribute/FileTime;\n+  #540 = Utf8               e\n+  #541 = Utf8               value\n+  #542 = Utf8               setUnixMode\n+  #543 = Utf8               mode\n+  #544 = Utf8               isUnixSymlink\n+  #545 = Utf8               getAlignment\n+  #546 = Utf8               setAlignment\n+  #547 = Utf8               field\n+  #548 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #549 = Utf8               fields\n+  #550 = Utf8               newFields\n+  #551 = Utf8               Ljava/util/List;\n+  #552 = Utf8               LocalVariableTypeTable\n+  #553 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n+  #554 = Utf8               includeUnparseable\n+  #555 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #556 = Utf8               cd\n+  #557 = Utf8               c\n+  #558 = Utf8               l\n+  #559 = Utf8               parsingBehavior\n+  #560 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+  #561 = Utf8               local\n+  #562 = Utf8               localFields\n+  #563 = Utf8               central\n+  #564 = Utf8               centralFields\n+  #565 = Utf8               merged\n+  #566 = Class              #567          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #567 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #568 = Utf8               parseableExtraFields\n+  #569 = Utf8               zipExtraFields\n+  #570 = Utf8               allExtraFieldsNoCopy\n+  #571 = Utf8               f\n+  #572 = Utf8               fs\n+  #573 = Utf8               Signature\n+  #574 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #575 = Utf8               headerId\n+  #576 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #577 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #578 = Utf8               ze\n+  #579 = Utf8               addAsFirstExtraField\n+  #580 = Utf8               copy\n+  #581 = Utf8               newLen\n+  #582 = Utf8               extraField\n+  #583 = Utf8               type\n+  #584 = Utf8               newResult\n+  #585 = Utf8               removeUnparseableExtraFieldData\n+  #586 = Utf8               getUnparseableExtraFieldData\n+  #587 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #588 = Utf8               Ljava/util/zip/ZipException;\n+  #589 = Utf8               setCentralDirectoryExtra\n+  #590 = Utf8               b\n+  #591 = Utf8               n\n+  #592 = Utf8               (Ljava/lang/String;[B)V\n+  #593 = Utf8               getRawName\n+  #594 = Utf8               getLocalHeaderOffset\n+  #595 = Utf8               setLocalHeaderOffset\n+  #596 = Utf8               getDataOffset\n+  #597 = Utf8               setDataOffset\n+  #598 = Utf8               setStreamContiguous\n+  #599 = Utf8               (Z)V\n+  #600 = Utf8               existing\n+  #601 = Utf8               u\n+  #602 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n+  #603 = Utf8               ex\n+  #604 = Utf8               element\n+  #605 = Utf8               getLastModifiedDate\n+  #606 = Utf8               ()Ljava/util/Date;\n+  #607 = Utf8               obj\n+  #608 = Utf8               Ljava/lang/Object;\n+  #609 = Utf8               myName\n+  #610 = Utf8               otherName\n+  #611 = Utf8               myComment\n+  #612 = Utf8               otherComment\n+  #613 = Utf8               setVersionMadeBy\n+  #614 = Utf8               setVersionRequired\n+  #615 = Utf8               getVersionRequired\n+  #616 = Utf8               getVersionMadeBy\n+  #617 = Utf8               getRawFlag\n+  #618 = Utf8               setRawFlag\n+  #619 = Utf8               getNameSource\n+  #620 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #621 = Utf8               setNameSource\n+  #622 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n+  #623 = Utf8               getCommentSource\n+  #624 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #625 = Utf8               setCommentSource\n+  #626 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n+  #627 = Utf8               getDiskNumberStart\n+  #628 = Utf8               setDiskNumberStart\n+  #629 = Utf8               src\n+  #630 = Utf8               cpy\n+  #631 = Utf8               <clinit>\n+  #632 = Utf8               SourceFile\n+  #633 = Utf8               ZipArchiveEntry.java\n+  #634 = Utf8               BootstrapMethods\n+  #635 = MethodHandle       6:#636        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #636 = Methodref          #637.#638     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #637 = Class              #639          // java/lang/invoke/StringConcatFactory\n+  #638 = NameAndType        #161:#640     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #639 = Utf8               java/lang/invoke/StringConcatFactory\n+  #640 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #641 = String             #642          // \\u0001/\n+  #642 = Utf8               \\u0001/\n+  #643 = String             #644          // ZIP compression method can not be negative: \\u0001\n+  #644 = Utf8               ZIP compression method can not be negative: \\u0001\n+  #645 = String             #646          // Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n+  #646 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n+  #647 = String             #648          // Error parsing extra fields for entry: \\u0001 - \\u0001\n+  #648 = Utf8               Error parsing extra fields for entry: \\u0001 - \\u0001\n+  #649 = Utf8               InnerClasses\n+  #650 = Utf8               NameSource\n+  #651 = Utf8               CommentSource\n+  #652 = Utf8               ExtraFieldParsingMode\n+  #653 = Class              #654          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  #654 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  #655 = Class              #656          // java/lang/invoke/MethodHandles$Lookup\n+  #656 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #657 = Class              #658          // java/lang/invoke/MethodHandles\n+  #658 = Utf8               java/lang/invoke/MethodHandles\n+  #659 = Utf8               Lookup\n {\n   public static final int PLATFORM_UNIX = 3;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 3\n \n   public static final int PLATFORM_FAT = 0;\n@@ -781,41 +781,41 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #3                  // Field method:I\n+         7: putfield      #9                  // Field method:I\n         10: aload_0\n-        11: ldc2_w        #5                  // long -1l\n-        14: putfield      #7                  // Field size:J\n+        11: ldc2_w        #17                 // long -1l\n+        14: putfield      #19                 // Field size:J\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #9                  // Field platform:I\n+        19: putfield      #23                 // Field platform:I\n         22: aload_0\n-        23: new           #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        23: new           #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         26: dup\n-        27: invokespecial #11                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-        30: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        27: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+        30: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         33: aload_0\n-        34: ldc2_w        #5                  // long -1l\n-        37: putfield      #14                 // Field localHeaderOffset:J\n+        34: ldc2_w        #17                 // long -1l\n+        37: putfield      #37                 // Field localHeaderOffset:J\n         40: aload_0\n-        41: ldc2_w        #5                  // long -1l\n-        44: putfield      #15                 // Field dataOffset:J\n+        41: ldc2_w        #17                 // long -1l\n+        44: putfield      #40                 // Field dataOffset:J\n         47: aload_0\n-        48: getstatic     #16                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-        51: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        48: getstatic     #43                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        51: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-        58: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        55: getstatic     #52                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        58: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n         61: aload_0\n         62: aload_1\n-        63: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+        63: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n         66: return\n       LineNumberTable:\n         line 163: 0\n         line 121: 5\n         line 132: 10\n         line 137: 17\n         line 145: 22\n@@ -833,67 +833,67 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(java.util.zip.ZipEntry) throws java.util.zip.ZipException;\n     descriptor: (Ljava/util/zip/ZipEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #21                 // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+         2: invokespecial #64                 // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #3                  // Field method:I\n+         7: putfield      #9                  // Field method:I\n         10: aload_0\n-        11: ldc2_w        #5                  // long -1l\n-        14: putfield      #7                  // Field size:J\n+        11: ldc2_w        #17                 // long -1l\n+        14: putfield      #19                 // Field size:J\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #9                  // Field platform:I\n+        19: putfield      #23                 // Field platform:I\n         22: aload_0\n-        23: new           #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        23: new           #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         26: dup\n-        27: invokespecial #11                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-        30: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        27: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+        30: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         33: aload_0\n-        34: ldc2_w        #5                  // long -1l\n-        37: putfield      #14                 // Field localHeaderOffset:J\n+        34: ldc2_w        #17                 // long -1l\n+        37: putfield      #37                 // Field localHeaderOffset:J\n         40: aload_0\n-        41: ldc2_w        #5                  // long -1l\n-        44: putfield      #15                 // Field dataOffset:J\n+        41: ldc2_w        #17                 // long -1l\n+        44: putfield      #40                 // Field dataOffset:J\n         47: aload_0\n-        48: getstatic     #16                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-        51: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        48: getstatic     #43                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        51: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-        58: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        55: getstatic     #52                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        58: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n         61: aload_0\n         62: aload_1\n-        63: invokevirtual #22                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-        66: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+        63: invokevirtual #67                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+        66: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n         69: aload_1\n-        70: invokevirtual #23                 // Method java/util/zip/ZipEntry.getExtra:()[B\n+        70: invokevirtual #71                 // Method java/util/zip/ZipEntry.getExtra:()[B\n         73: astore_2\n         74: aload_2\n         75: ifnull        93\n         78: aload_0\n         79: aload_2\n         80: iconst_1\n-        81: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-        84: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        87: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        81: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+        84: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        87: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         90: goto          97\n         93: aload_0\n-        94: invokevirtual #27                 // Method setExtra:()V\n+        94: invokevirtual #91                 // Method setExtra:()V\n         97: aload_0\n         98: aload_1\n-        99: invokevirtual #28                 // Method java/util/zip/ZipEntry.getMethod:()I\n-       102: invokevirtual #29                 // Method setMethod:(I)V\n+        99: invokevirtual #94                 // Method java/util/zip/ZipEntry.getMethod:()I\n+       102: invokevirtual #98                 // Method setMethod:(I)V\n        105: aload_0\n        106: aload_1\n-       107: invokevirtual #30                 // Method java/util/zip/ZipEntry.getSize:()J\n-       110: putfield      #7                  // Field size:J\n+       107: invokevirtual #102                // Method java/util/zip/ZipEntry.getSize:()J\n+       110: putfield      #19                 // Field size:J\n        113: return\n       LineNumberTable:\n         line 177: 0\n         line 121: 5\n         line 132: 10\n         line 137: 17\n         line 145: 22\n@@ -926,43 +926,43 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.util.zip.ZipException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #31                 // Method \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+         2: invokespecial #106                // Method \"<init>\":(Ljava/util/zip/ZipEntry;)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #32                 // Method getInternalAttributes:()I\n-        10: invokevirtual #33                 // Method setInternalAttributes:(I)V\n+         7: invokevirtual #107                // Method getInternalAttributes:()I\n+        10: invokevirtual #110                // Method setInternalAttributes:(I)V\n         13: aload_0\n         14: aload_1\n-        15: invokevirtual #34                 // Method getExternalAttributes:()J\n-        18: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        15: invokevirtual #113                // Method getExternalAttributes:()J\n+        18: invokevirtual #116                // Method setExternalAttributes:(J)V\n         21: aload_0\n         22: aload_0\n-        23: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        26: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        23: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        26: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         29: aload_0\n         30: aload_1\n-        31: invokevirtual #37                 // Method getPlatform:()I\n-        34: invokevirtual #38                 // Method setPlatform:(I)V\n+        31: invokevirtual #124                // Method getPlatform:()I\n+        34: invokevirtual #127                // Method setPlatform:(I)V\n         37: aload_1\n-        38: invokevirtual #39                 // Method getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        38: invokevirtual #130                // Method getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         41: astore_2\n         42: aload_0\n         43: aload_2\n         44: ifnonnull     51\n         47: aconst_null\n         48: goto          58\n         51: aload_2\n-        52: invokevirtual #40                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-        55: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-        58: invokevirtual #41                 // Method setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+        52: invokevirtual #134                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+        55: checkcast     #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        58: invokevirtual #138                // Method setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n         61: return\n       LineNumberTable:\n         line 199: 0\n         line 200: 5\n         line 201: 13\n         line 202: 21\n         line 203: 29\n@@ -990,16 +990,16 @@\n \n   protected org.apache.commons.compress.archivers.zip.ZipArchiveEntry();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #42                 // String\n-         3: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+         1: ldc           #142                // String\n+         3: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 212: 0\n         line 213: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1007,36 +1007,36 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #44                 // Method java/io/File.isDirectory:()Z\n+         2: invokevirtual #145                // Method java/io/File.isDirectory:()Z\n          5: ifeq          26\n          8: aload_2\n-         9: ldc           #45                 // String /\n-        11: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+         9: ldc           #151                // String /\n+        11: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         14: ifne          26\n         17: aload_2\n-        18: invokedynamic #47,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        18: invokedynamic #159,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n         23: goto          27\n         26: aload_2\n-        27: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+        27: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n         30: aload_1\n-        31: invokevirtual #48                 // Method java/io/File.isFile:()Z\n+        31: invokevirtual #163                // Method java/io/File.isFile:()Z\n         34: ifeq          45\n         37: aload_0\n         38: aload_1\n-        39: invokevirtual #49                 // Method java/io/File.length:()J\n-        42: invokevirtual #50                 // Method setSize:(J)V\n+        39: invokevirtual #166                // Method java/io/File.length:()J\n+        42: invokevirtual #169                // Method setSize:(J)V\n         45: aload_0\n         46: aload_1\n-        47: invokevirtual #51                 // Method java/io/File.lastModified:()J\n-        50: invokevirtual #52                 // Method setTime:(J)V\n+        47: invokevirtual #172                // Method java/io/File.lastModified:()J\n+        50: invokevirtual #175                // Method setTime:(J)V\n         53: return\n       LineNumberTable:\n         line 227: 0\n         line 228: 17\n         line 227: 27\n         line 229: 30\n         line 230: 37\n@@ -1063,38 +1063,38 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_3\n-         3: invokestatic  #53                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         3: invokestatic  #178                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          6: ifeq          27\n          9: aload_2\n-        10: ldc           #45                 // String /\n-        12: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        10: ldc           #151                // String /\n+        12: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         15: ifne          27\n         18: aload_2\n-        19: invokedynamic #47,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        19: invokedynamic #159,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n         24: goto          28\n         27: aload_2\n-        28: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+        28: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n         31: aload_1\n         32: aload_3\n-        33: invokestatic  #54                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        33: invokestatic  #183                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         36: ifeq          47\n         39: aload_0\n         40: aload_1\n-        41: invokestatic  #55                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-        44: invokevirtual #50                 // Method setSize:(J)V\n+        41: invokestatic  #186                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        44: invokevirtual #169                // Method setSize:(J)V\n         47: aload_0\n         48: aload_1\n         49: aload_3\n-        50: invokestatic  #56                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        53: invokevirtual #57                 // Method setTime:(Ljava/nio/file/attribute/FileTime;)V\n+        50: invokestatic  #189                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        53: invokevirtual #193                // Method setTime:(Ljava/nio/file/attribute/FileTime;)V\n         56: return\n       LineNumberTable:\n         line 251: 0\n         line 252: 18\n         line 251: 28\n         line 253: 31\n         line 254: 39\n@@ -1123,16 +1123,16 @@\n   public void setTime(java.nio.file.attribute.FileTime);\n     descriptor: (Ljava/nio/file/attribute/FileTime;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #58                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n-         5: invokevirtual #52                 // Method setTime:(J)V\n+         2: invokevirtual #196                // Method java/nio/file/attribute/FileTime.toMillis:()J\n+         5: invokevirtual #175                // Method setTime:(J)V\n          8: return\n       LineNumberTable:\n         line 266: 0\n         line 267: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1140,29 +1140,29 @@\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #59                 // Method java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         1: invokespecial #201                // Method java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+         4: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokevirtual #32                 // Method getInternalAttributes:()I\n-        13: invokevirtual #33                 // Method setInternalAttributes:(I)V\n+        10: invokevirtual #107                // Method getInternalAttributes:()I\n+        13: invokevirtual #110                // Method setInternalAttributes:(I)V\n         16: aload_1\n         17: aload_0\n-        18: invokevirtual #34                 // Method getExternalAttributes:()J\n-        21: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        18: invokevirtual #113                // Method getExternalAttributes:()J\n+        21: invokevirtual #116                // Method setExternalAttributes:(J)V\n         24: aload_1\n         25: aload_0\n-        26: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        29: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        26: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        29: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         32: aload_1\n         33: areturn\n       LineNumberTable:\n         line 275: 0\n         line 277: 8\n         line 278: 16\n         line 279: 24\n@@ -1174,38 +1174,38 @@\n \n   public int getMethod();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field method:I\n+         1: getfield      #9                  // Field method:I\n          4: ireturn\n       LineNumberTable:\n         line 293: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setMethod(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifge          18\n-         4: new           #60                 // class java/lang/IllegalArgumentException\n+         4: new           #202                // class java/lang/IllegalArgumentException\n          7: dup\n          8: iload_1\n-         9: invokedynamic #61,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         9: invokedynamic #204,  0            // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+        14: invokespecial #207                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iload_1\n-        20: putfield      #3                  // Field method:I\n+        20: putfield      #9                  // Field method:I\n         23: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 4\n         line 309: 18\n         line 310: 23\n       LocalVariableTable:\n@@ -1217,30 +1217,30 @@\n \n   public int getInternalAttributes();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #63                 // Field internalAttributes:I\n+         1: getfield      #208                // Field internalAttributes:I\n          4: ireturn\n       LineNumberTable:\n         line 322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setInternalAttributes(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #63                 // Field internalAttributes:I\n+         2: putfield      #208                // Field internalAttributes:I\n          5: return\n       LineNumberTable:\n         line 330: 0\n         line 331: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1248,30 +1248,30 @@\n \n   public long getExternalAttributes();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #64                 // Field externalAttributes:J\n+         1: getfield      #211                // Field externalAttributes:J\n          4: lreturn\n       LineNumberTable:\n         line 343: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setExternalAttributes(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #64                 // Field externalAttributes:J\n+         2: putfield      #211                // Field externalAttributes:J\n          5: return\n       LineNumberTable:\n         line 351: 0\n         line 352: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1291,25 +1291,25 @@\n          9: iand\n         10: ifne          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ior\n         19: aload_0\n-        20: invokevirtual #65                 // Method isDirectory:()Z\n+        20: invokevirtual #214                // Method isDirectory:()Z\n         23: ifeq          31\n         26: bipush        16\n         28: goto          32\n         31: iconst_0\n         32: ior\n         33: i2l\n-        34: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        34: invokevirtual #116                // Method setExternalAttributes:(J)V\n         37: aload_0\n         38: iconst_3\n-        39: putfield      #9                  // Field platform:I\n+        39: putfield      #23                 // Field platform:I\n         42: return\n       LineNumberTable:\n         line 361: 0\n         line 363: 5\n         line 365: 19\n         line 361: 34\n         line 367: 37\n@@ -1338,24 +1338,24 @@\n \n   public int getUnixMode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field platform:I\n+         1: getfield      #23                 // Field platform:I\n          4: iconst_3\n          5: if_icmpeq     12\n          8: iconst_0\n          9: goto          24\n         12: aload_0\n-        13: invokevirtual #34                 // Method getExternalAttributes:()J\n+        13: invokevirtual #113                // Method getExternalAttributes:()J\n         16: bipush        16\n         18: lshr\n-        19: ldc2_w        #66                 // long 65535l\n+        19: ldc2_w        #215                // long 65535l\n         22: land\n         23: l2i\n         24: ireturn\n       LineNumberTable:\n         line 375: 0\n         line 376: 12\n         line 375: 24\n@@ -1369,18 +1369,18 @@\n \n   public boolean isUnixSymlink();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #68                 // Method getUnixMode:()I\n-         4: ldc           #70                 // int 61440\n+         1: invokevirtual #217                // Method getUnixMode:()I\n+         4: ldc           #222                // int 61440\n          6: iand\n-         7: ldc           #71                 // int 40960\n+         7: ldc           #223                // int 40960\n          9: if_icmpne     16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 388: 0\n@@ -1394,30 +1394,30 @@\n \n   public int getPlatform();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field platform:I\n+         1: getfield      #23                 // Field platform:I\n          4: ireturn\n       LineNumberTable:\n         line 399: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setPlatform(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #9                  // Field platform:I\n+         2: putfield      #23                 // Field platform:I\n          5: return\n       LineNumberTable:\n         line 407: 0\n         line 408: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1425,15 +1425,15 @@\n \n   protected int getAlignment();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #72                 // Field alignment:I\n+         1: getfield      #224                // Field alignment:I\n          4: ireturn\n       LineNumberTable:\n         line 418: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -1445,25 +1445,25 @@\n          0: iload_1\n          1: iload_1\n          2: iconst_1\n          3: isub\n          4: iand\n          5: ifne          14\n          8: iload_1\n-         9: ldc           #73                 // int 65535\n+         9: ldc           #227                // int 65535\n         11: if_icmple     28\n-        14: new           #60                 // class java/lang/IllegalArgumentException\n+        14: new           #202                // class java/lang/IllegalArgumentException\n         17: dup\n         18: iload_1\n-        19: invokedynamic #74,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;\n-        24: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        19: invokedynamic #228,  0            // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+        24: invokespecial #207                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n         29: iload_1\n-        30: putfield      #72                 // Field alignment:I\n+        30: putfield      #224                // Field alignment:I\n         33: return\n       LineNumberTable:\n         line 429: 0\n         line 430: 14\n         line 433: 28\n         line 434: 33\n       LocalVariableTable:\n@@ -1477,18 +1477,18 @@\n   public void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[]);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-         5: new           #76                 // class java/util/ArrayList\n+         2: putfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         5: new           #233                // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #77                 // Method java/util/ArrayList.\"<init>\":()V\n+         9: invokespecial #235                // Method java/util/ArrayList.\"<init>\":()V\n         12: astore_2\n         13: aload_1\n         14: ifnull        74\n         17: aload_1\n         18: astore_3\n         19: aload_3\n         20: arraylength\n@@ -1499,35 +1499,35 @@\n         28: iload         4\n         30: if_icmpge     74\n         33: aload_3\n         34: iload         5\n         36: aaload\n         37: astore        6\n         39: aload         6\n-        41: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        41: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n         44: ifeq          59\n         47: aload_0\n         48: aload         6\n-        50: checkcast     #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        53: putfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        50: checkcast     #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        53: putfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         56: goto          68\n         59: aload_2\n         60: aload         6\n-        62: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        62: invokeinterface #238,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         67: pop\n         68: iinc          5, 1\n         71: goto          26\n         74: aload_0\n         75: aload_2\n-        76: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        79: invokeinterface #81,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        84: checkcast     #82                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-        87: putfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        76: getstatic     #244                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        79: invokeinterface #248,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        84: checkcast     #252                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+        87: putfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         90: aload_0\n-        91: invokevirtual #27                 // Method setExtra:()V\n+        91: invokevirtual #91                 // Method setExtra:()V\n         94: return\n       LineNumberTable:\n         line 441: 0\n         line 442: 5\n         line 443: 13\n         line 444: 17\n         line 445: 39\n@@ -1561,15 +1561,15 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #84                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #256                // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: areturn\n       LineNumberTable:\n         line 467: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -1577,18 +1577,18 @@\n     descriptor: (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: invokespecial #85                 // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         5: invokespecial #259                // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: goto          15\n         11: aload_0\n-        12: invokespecial #84                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: invokespecial #256                // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 480: 0\n         line 481: 4\n         line 482: 11\n         line 480: 15\n       LocalVariableTable:\n@@ -1602,114 +1602,114 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(org.apache.commons.compress.archivers.zip.ExtraFieldParsingBehavior) throws java.util.zip.ZipException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=11, args_size=2\n          0: aload_1\n-         1: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         1: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n          4: if_acmpne     13\n          7: aload_0\n          8: iconst_1\n-         9: invokevirtual #86                 // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         9: invokevirtual #262                // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         12: areturn\n         13: aload_1\n-        14: getstatic     #87                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+        14: getstatic     #266                // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n         17: if_acmpne     26\n         20: aload_0\n         21: iconst_0\n-        22: invokevirtual #86                 // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        22: invokevirtual #262                // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         25: areturn\n         26: aload_0\n-        27: invokevirtual #88                 // Method getExtra:()[B\n+        27: invokevirtual #269                // Method getExtra:()[B\n         30: astore_2\n-        31: new           #76                 // class java/util/ArrayList\n+        31: new           #233                // class java/util/ArrayList\n         34: dup\n         35: aload_2\n         36: iconst_1\n         37: aload_1\n-        38: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        41: invokestatic  #89                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        44: invokespecial #90                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        38: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        41: invokestatic  #270                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        44: invokespecial #276                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         47: astore_3\n         48: aload_0\n-        49: invokevirtual #91                 // Method getCentralDirectoryExtra:()[B\n+        49: invokevirtual #279                // Method getCentralDirectoryExtra:()[B\n         52: astore        4\n-        54: new           #76                 // class java/util/ArrayList\n+        54: new           #233                // class java/util/ArrayList\n         57: dup\n         58: aload         4\n         60: iconst_0\n         61: aload_1\n-        62: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        65: invokestatic  #89                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        68: invokespecial #90                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        62: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        65: invokestatic  #270                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        68: invokespecial #276                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         71: astore        5\n-        73: new           #76                 // class java/util/ArrayList\n+        73: new           #233                // class java/util/ArrayList\n         76: dup\n-        77: invokespecial #77                 // Method java/util/ArrayList.\"<init>\":()V\n+        77: invokespecial #235                // Method java/util/ArrayList.\"<init>\":()V\n         80: astore        6\n         82: aload_3\n-        83: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        83: invokeinterface #282,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         88: astore        7\n         90: aload         7\n-        92: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        92: invokeinterface #286,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         97: ifeq          210\n        100: aload         7\n-       102: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       107: checkcast     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+       102: invokeinterface #291,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       107: checkcast     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n        110: astore        8\n        112: aconst_null\n        113: astore        9\n        115: aload         8\n-       117: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+       117: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n        120: ifeq          134\n        123: aload_0\n        124: aload         5\n-       126: invokespecial #96                 // Method findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       126: invokespecial #296                // Method findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        129: astore        9\n        131: goto          149\n        134: aload_0\n        135: aload         8\n-       137: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       137: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n        142: aload         5\n-       144: invokespecial #98                 // Method findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       144: invokespecial #304                // Method findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        147: astore        9\n        149: aload         9\n        151: ifnull        197\n        154: aload         9\n-       156: invokeinterface #99,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+       156: invokeinterface #308,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n        161: astore        10\n        163: aload         10\n        165: ifnull        187\n        168: aload         10\n        170: arraylength\n        171: ifle          187\n        174: aload         8\n        176: aload         10\n        178: iconst_0\n        179: aload         10\n        181: arraylength\n-       182: invokeinterface #100,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+       182: invokeinterface #311,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n        187: aload         5\n        189: aload         9\n-       191: invokeinterface #101,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+       191: invokeinterface #315,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n        196: pop\n        197: aload         6\n        199: aload         8\n-       201: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       201: invokeinterface #238,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        206: pop\n        207: goto          90\n        210: aload         6\n        212: aload         5\n-       214: invokeinterface #102,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+       214: invokeinterface #318,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n        219: pop\n        220: aload         6\n-       222: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-       225: invokeinterface #81,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       230: checkcast     #82                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+       222: getstatic     #244                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       225: invokeinterface #248,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       230: checkcast     #252                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n        233: areturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 7\n         line 500: 13\n         line 501: 20\n         line 503: 26\n@@ -1771,20 +1771,20 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getParseableExtraFieldsNoCopy();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     11\n-         7: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getstatic     #244                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: areturn\n         11: aload_0\n-        12: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 531: 0\n         line 532: 7\n         line 534: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1794,25 +1794,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getParseableExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #103                // Method getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #322                // Method getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: astore_1\n          5: aload_1\n          6: aload_0\n-         7: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: if_acmpne     23\n         13: aload_0\n         14: aload_1\n         15: aload_1\n         16: arraylength\n-        17: invokespecial #104                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        17: invokespecial #325                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         20: goto          24\n         23: aload_1\n         24: areturn\n       LineNumberTable:\n         line 538: 0\n         line 539: 5\n         line 540: 23\n@@ -1830,27 +1830,27 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getAllExtraFieldsNoCopy();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     12\n          7: aload_0\n-         8: invokespecial #105                // Method getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         8: invokespecial #329                // Method getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         11: areturn\n         12: aload_0\n-        13: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        13: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         16: ifnull        26\n         19: aload_0\n-        20: invokespecial #106                // Method getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        20: invokespecial #332                // Method getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         23: goto          30\n         26: aload_0\n-        27: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        27: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         30: areturn\n       LineNumberTable:\n         line 548: 0\n         line 549: 7\n         line 551: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1864,28 +1864,28 @@\n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getMergedFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         2: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          5: aload_0\n-         6: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         6: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: arraylength\n         10: iconst_1\n         11: iadd\n-        12: invokespecial #104                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: invokespecial #325                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: astore_1\n         16: aload_1\n         17: aload_0\n-        18: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        18: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         21: arraylength\n         22: aload_0\n-        23: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        23: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         26: aastore\n         27: aload_1\n         28: areturn\n       LineNumberTable:\n         line 555: 0\n         line 556: 16\n         line 557: 27\n@@ -1896,24 +1896,24 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getUnparseableOnly();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: ifnonnull     13\n-         7: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getstatic     #244                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: goto          24\n         13: iconst_1\n-        14: anewarray     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        14: anewarray     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         17: dup\n         18: iconst_0\n         19: aload_0\n-        20: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        20: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         23: aastore\n         24: areturn\n       LineNumberTable:\n         line 561: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1924,25 +1924,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getAllExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: astore_1\n          5: aload_1\n          6: aload_0\n-         7: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: if_acmpne     23\n         13: aload_0\n         14: aload_1\n         15: aload_1\n         16: arraylength\n-        17: invokespecial #104                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        17: invokespecial #325                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         20: goto          24\n         23: aload_1\n         24: areturn\n       LineNumberTable:\n         line 565: 0\n         line 566: 5\n         line 567: 23\n@@ -1960,25 +1960,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField findUnparseable(java.util.List<org.apache.commons.compress.archivers.zip.ZipExtraField>);\n     descriptor: (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=4, args_size=2\n          0: aload_1\n-         1: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: invokeinterface #282,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          6: astore_2\n          7: aload_2\n-         8: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         8: invokeinterface #286,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         13: ifeq          38\n         16: aload_2\n-        17: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        22: checkcast     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        17: invokeinterface #291,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        22: checkcast     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         25: astore_3\n         26: aload_3\n-        27: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        27: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n         30: ifeq          35\n         33: aload_3\n         34: areturn\n         35: goto          7\n         38: aconst_null\n         39: areturn\n       LineNumberTable:\n@@ -1998,35 +1998,35 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 27 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #311                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+    Signature: #574                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField findMatching(org.apache.commons.compress.archivers.zip.ZipShort, java.util.List<org.apache.commons.compress.archivers.zip.ZipExtraField>);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=5, args_size=3\n          0: aload_2\n-         1: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: invokeinterface #282,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          6: astore_3\n          7: aload_3\n-         8: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         8: invokeinterface #286,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         13: ifeq          47\n         16: aload_3\n-        17: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        22: checkcast     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        17: invokeinterface #291,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        22: checkcast     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         25: astore        4\n         27: aload_1\n         28: aload         4\n-        30: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        35: invokevirtual #107                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        30: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        35: invokevirtual #335                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         38: ifeq          44\n         41: aload         4\n         43: areturn\n         44: goto          7\n         47: aconst_null\n         48: areturn\n       LineNumberTable:\n@@ -2047,72 +2047,72 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 36 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #316                         // (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+    Signature: #577                         // (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n \n   public void addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+         1: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n          4: ifeq          18\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        12: putfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         9: checkcast     #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        12: putfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         15: goto          91\n         18: aload_0\n-        19: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        19: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         22: ifnonnull     40\n         25: aload_0\n         26: iconst_1\n-        27: anewarray     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        27: anewarray     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         30: dup\n         31: iconst_0\n         32: aload_1\n         33: aastore\n-        34: putfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        34: putfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         37: goto          91\n         40: aload_0\n         41: aload_1\n-        42: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        47: invokevirtual #108                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        42: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        47: invokevirtual #340                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         50: ifnull        63\n         53: aload_0\n         54: aload_1\n-        55: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        60: invokevirtual #109                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+        55: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        60: invokevirtual #344                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n         63: aload_0\n         64: aload_0\n-        65: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        65: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         68: aload_0\n-        69: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        69: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         72: arraylength\n         73: iconst_1\n         74: iadd\n-        75: invokespecial #104                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        75: invokespecial #325                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         78: astore_2\n         79: aload_2\n         80: aload_2\n         81: arraylength\n         82: iconst_1\n         83: isub\n         84: aload_1\n         85: aastore\n         86: aload_0\n         87: aload_2\n-        88: putfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        88: putfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         91: aload_0\n-        92: invokevirtual #27                 // Method setExtra:()V\n+        92: invokevirtual #91                 // Method setExtra:()V\n         95: return\n       LineNumberTable:\n         line 597: 0\n         line 598: 7\n         line 600: 18\n         line 601: 25\n         line 603: 40\n@@ -2135,68 +2135,68 @@\n \n   public void addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_1\n-         1: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+         1: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n          4: ifeq          18\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        12: putfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         9: checkcast     #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        12: putfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         15: goto          101\n         18: aload_0\n         19: aload_1\n-        20: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        25: invokevirtual #108                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        20: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        25: invokevirtual #340                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         28: ifnull        41\n         31: aload_0\n         32: aload_1\n-        33: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        38: invokevirtual #109                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+        33: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        38: invokevirtual #344                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n         41: aload_0\n-        42: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        42: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         45: astore_2\n         46: aload_0\n-        47: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        47: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         50: ifnull        63\n         53: aload_0\n-        54: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        54: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         57: arraylength\n         58: iconst_1\n         59: iadd\n         60: goto          64\n         63: iconst_1\n         64: istore_3\n         65: aload_0\n         66: iload_3\n-        67: anewarray     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n-        70: putfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        67: anewarray     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        70: putfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         73: aload_0\n-        74: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        74: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         77: iconst_0\n         78: aload_1\n         79: aastore\n         80: aload_2\n         81: ifnull        101\n         84: aload_2\n         85: iconst_0\n         86: aload_0\n-        87: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        87: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         90: iconst_1\n         91: aload_0\n-        92: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        92: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         95: arraylength\n         96: iconst_1\n         97: isub\n-        98: invokestatic  #110                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        98: invokestatic  #348                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        101: aload_0\n-       102: invokevirtual #27                 // Method setExtra:()V\n+       102: invokevirtual #91                 // Method setExtra:()V\n        105: return\n       LineNumberTable:\n         line 622: 0\n         line 623: 7\n         line 625: 18\n         line 626: 31\n         line 628: 41\n@@ -2226,26 +2226,26 @@\n \n   public void removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     15\n-         7: new           #111                // class java/util/NoSuchElementException\n+         7: new           #354                // class java/util/NoSuchElementException\n         10: dup\n-        11: invokespecial #112                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        11: invokespecial #356                // Method java/util/NoSuchElementException.\"<init>\":()V\n         14: athrow\n-        15: new           #76                 // class java/util/ArrayList\n+        15: new           #233                // class java/util/ArrayList\n         18: dup\n-        19: invokespecial #77                 // Method java/util/ArrayList.\"<init>\":()V\n+        19: invokespecial #235                // Method java/util/ArrayList.\"<init>\":()V\n         22: astore_2\n         23: aload_0\n-        24: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        24: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         27: astore_3\n         28: aload_3\n         29: arraylength\n         30: istore        4\n         32: iconst_0\n         33: istore        5\n         35: iload         5\n@@ -2253,41 +2253,41 @@\n         39: if_icmpge     77\n         42: aload_3\n         43: iload         5\n         45: aaload\n         46: astore        6\n         48: aload_1\n         49: aload         6\n-        51: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        56: invokevirtual #107                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        51: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        56: invokevirtual #335                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         59: ifne          71\n         62: aload_2\n         63: aload         6\n-        65: invokeinterface #79,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        65: invokeinterface #238,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         70: pop\n         71: iinc          5, 1\n         74: goto          35\n         77: aload_0\n-        78: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        78: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         81: arraylength\n         82: aload_2\n-        83: invokeinterface #113,  1          // InterfaceMethod java/util/List.size:()I\n+        83: invokeinterface #357,  1          // InterfaceMethod java/util/List.size:()I\n         88: if_icmpne     99\n-        91: new           #111                // class java/util/NoSuchElementException\n+        91: new           #354                // class java/util/NoSuchElementException\n         94: dup\n-        95: invokespecial #112                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        95: invokespecial #356                // Method java/util/NoSuchElementException.\"<init>\":()V\n         98: athrow\n         99: aload_0\n        100: aload_2\n-       101: getstatic     #80                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-       104: invokeinterface #81,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       109: checkcast     #82                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-       112: putfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       101: getstatic     #244                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       104: invokeinterface #248,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       109: checkcast     #252                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+       112: putfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        115: aload_0\n-       116: invokevirtual #27                 // Method setExtra:()V\n+       116: invokevirtual #91                 // Method setExtra:()V\n        119: return\n       LineNumberTable:\n         line 644: 0\n         line 645: 7\n         line 648: 15\n         line 649: 23\n         line 650: 48\n@@ -2320,25 +2320,25 @@\n \n   public void removeUnparseableExtraFieldData();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: ifnonnull     15\n-         7: new           #111                // class java/util/NoSuchElementException\n+         7: new           #354                // class java/util/NoSuchElementException\n         10: dup\n-        11: invokespecial #112                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        11: invokespecial #356                // Method java/util/NoSuchElementException.\"<init>\":()V\n         14: athrow\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        17: putfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         20: aload_0\n-        21: invokevirtual #27                 // Method setExtra:()V\n+        21: invokevirtual #91                 // Method setExtra:()V\n         24: return\n       LineNumberTable:\n         line 667: 0\n         line 668: 7\n         line 670: 15\n         line 671: 20\n         line 672: 24\n@@ -2350,18 +2350,18 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField getExtraField(org.apache.commons.compress.archivers.zip.ZipShort);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnull        53\n          7: aload_0\n-         8: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         8: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         11: astore_2\n         12: aload_2\n         13: arraylength\n         14: istore_3\n         15: iconst_0\n         16: istore        4\n         18: iload         4\n@@ -2369,16 +2369,16 @@\n         21: if_icmpge     53\n         24: aload_2\n         25: iload         4\n         27: aaload\n         28: astore        5\n         30: aload_1\n         31: aload         5\n-        33: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        38: invokevirtual #107                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        33: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        38: invokevirtual #335                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         41: ifeq          47\n         44: aload         5\n         46: areturn\n         47: iinc          4, 1\n         50: goto          18\n         53: aconst_null\n         54: areturn\n@@ -2404,47 +2404,47 @@\n \n   public org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData getUnparseableExtraFieldData();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: areturn\n       LineNumberTable:\n         line 699: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setExtra(byte[]) throws java.lang.RuntimeException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n          1: iconst_1\n-         2: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-         5: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         2: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         5: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: astore_2\n          9: aload_0\n         10: aload_2\n         11: iconst_1\n-        12: invokespecial #114                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+        12: invokespecial #359                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n         15: goto          41\n         18: astore_2\n-        19: new           #116                // class java/lang/RuntimeException\n+        19: new           #365                // class java/lang/RuntimeException\n         22: dup\n         23: aload_0\n-        24: invokevirtual #117                // Method getName:()Ljava/lang/String;\n+        24: invokevirtual #367                // Method getName:()Ljava/lang/String;\n         27: aload_2\n-        28: invokevirtual #118                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-        31: invokedynamic #119,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        28: invokevirtual #368                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+        31: invokedynamic #371,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n         36: aload_2\n-        37: invokespecial #120                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        37: invokespecial #374                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         40: athrow\n         41: return\n       Exception table:\n          from    to  target type\n              0    15    18   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 713: 0\n@@ -2470,17 +2470,17 @@\n   protected void setExtra();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-         5: invokestatic  #121                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-         8: invokespecial #122                // Method java/util/zip/ZipEntry.setExtra:([B)V\n+         2: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         5: invokestatic  #377                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+         8: invokespecial #381                // Method java/util/zip/ZipEntry.setExtra:([B)V\n         11: return\n       LineNumberTable:\n         line 729: 0\n         line 730: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2488,29 +2488,29 @@\n   public void setCentralDirectoryExtra(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n          1: iconst_0\n-         2: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-         5: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         2: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         5: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: astore_2\n          9: aload_0\n         10: aload_2\n         11: iconst_0\n-        12: invokespecial #114                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+        12: invokespecial #359                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n         15: goto          32\n         18: astore_2\n-        19: new           #116                // class java/lang/RuntimeException\n+        19: new           #365                // class java/lang/RuntimeException\n         22: dup\n         23: aload_2\n-        24: invokevirtual #118                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+        24: invokevirtual #368                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n         27: aload_2\n-        28: invokespecial #120                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        28: invokespecial #374                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         31: athrow\n         32: return\n       Exception table:\n          from    to  target type\n              0    15    18   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 738: 0\n@@ -2532,21 +2532,21 @@\n \n   public byte[] getLocalFileDataExtra();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #88                 // Method getExtra:()[B\n+         1: invokevirtual #269                // Method getExtra:()[B\n          4: astore_1\n          5: aload_1\n          6: ifnull        13\n          9: aload_1\n         10: goto          16\n-        13: getstatic     #123                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+        13: getstatic     #384                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n         16: areturn\n       LineNumberTable:\n         line 751: 0\n         line 752: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2560,36 +2560,36 @@\n \n   public byte[] getCentralDirectoryExtra();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-         4: invokestatic  #124                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+         1: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         4: invokestatic  #390                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n          7: areturn\n       LineNumberTable:\n         line 760: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #125                // Field name:Ljava/lang/String;\n+         1: getfield      #393                // Field name:Ljava/lang/String;\n          4: ifnonnull     14\n          7: aload_0\n-         8: invokespecial #22                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+         8: invokespecial #67                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n         11: goto          18\n         14: aload_0\n-        15: getfield      #125                // Field name:Ljava/lang/String;\n+        15: getfield      #393                // Field name:Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 772: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n       StackMapTable: number_of_entries = 2\n@@ -2599,21 +2599,21 @@\n \n   public boolean isDirectory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #117                // Method getName:()Ljava/lang/String;\n+         1: invokevirtual #367                // Method getName:()Ljava/lang/String;\n          4: astore_1\n          5: aload_1\n          6: ifnull        22\n          9: aload_1\n-        10: ldc           #45                 // String /\n-        12: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        10: ldc           #151                // String /\n+        12: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         15: ifeq          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n         line 781: 0\n@@ -2633,28 +2633,28 @@\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        29\n          4: aload_0\n-         5: invokevirtual #37                 // Method getPlatform:()I\n+         5: invokevirtual #124                // Method getPlatform:()I\n          8: ifne          29\n         11: aload_1\n-        12: ldc           #45                 // String /\n-        14: invokevirtual #126                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        12: ldc           #151                // String /\n+        14: invokevirtual #397                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n         17: ifne          29\n         20: aload_1\n         21: bipush        92\n         23: bipush        47\n-        25: invokevirtual #127                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        25: invokevirtual #401                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         28: astore_1\n         29: aload_0\n         30: aload_1\n-        31: putfield      #125                // Field name:Ljava/lang/String;\n+        31: putfield      #393                // Field name:Ljava/lang/String;\n         34: return\n       LineNumberTable:\n         line 790: 0\n         line 791: 14\n         line 792: 20\n         line 794: 29\n         line 795: 34\n@@ -2667,15 +2667,15 @@\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #19                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 808: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -2683,47 +2683,47 @@\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          16\n-         6: new           #60                 // class java/lang/IllegalArgumentException\n+         3: ifge          17\n+         6: new           #202                // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #128                // String Invalid entry size\n-        12: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        15: athrow\n-        16: aload_0\n-        17: lload_1\n-        18: putfield      #7                  // Field size:J\n-        21: return\n+        10: ldc_w         #405                // String Invalid entry size\n+        13: invokespecial #207                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        16: athrow\n+        17: aload_0\n+        18: lload_1\n+        19: putfield      #19                 // Field size:J\n+        22: return\n       LineNumberTable:\n         line 819: 0\n         line 820: 6\n-        line 822: 16\n-        line 823: 21\n+        line 822: 17\n+        line 823: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      22     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-            0      22     1  size   J\n+            0      23     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      23     1  size   J\n       StackMapTable: number_of_entries = 1\n-        frame_type = 16 /* same */\n+        frame_type = 17 /* same */\n \n   protected void setName(java.lang.String, byte[]);\n     descriptor: (Ljava/lang/String;[B)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+         2: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #129                // Field rawName:[B\n+         7: putfield      #407                // Field rawName:[B\n         10: return\n       LineNumberTable:\n         line 835: 0\n         line 836: 5\n         line 837: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2733,22 +2733,22 @@\n \n   public byte[] getRawName();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #129                // Field rawName:[B\n+         1: getfield      #407                // Field rawName:[B\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #129                // Field rawName:[B\n+         8: getfield      #407                // Field rawName:[B\n         11: aload_0\n-        12: getfield      #129                // Field rawName:[B\n+        12: getfield      #407                // Field rawName:[B\n         15: arraylength\n-        16: invokestatic  #130                // Method java/util/Arrays.copyOf:([BI)[B\n+        16: invokestatic  #410                // Method java/util/Arrays.copyOf:([BI)[B\n         19: areturn\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 850: 0\n         line 851: 7\n         line 853: 20\n@@ -2760,30 +2760,30 @@\n \n   protected long getLocalHeaderOffset();\n     descriptor: ()J\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field localHeaderOffset:J\n+         1: getfield      #37                 // Field localHeaderOffset:J\n          4: lreturn\n       LineNumberTable:\n         line 857: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setLocalHeaderOffset(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #14                 // Field localHeaderOffset:J\n+         2: putfield      #37                 // Field localHeaderOffset:J\n          5: return\n       LineNumberTable:\n         line 861: 0\n         line 862: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2791,30 +2791,30 @@\n \n   public long getDataOffset();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field dataOffset:J\n+         1: getfield      #40                 // Field dataOffset:J\n          4: lreturn\n       LineNumberTable:\n         line 866: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setDataOffset(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #15                 // Field dataOffset:J\n+         2: putfield      #40                 // Field dataOffset:J\n          5: return\n       LineNumberTable:\n         line 876: 0\n         line 877: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2822,30 +2822,30 @@\n \n   public boolean isStreamContiguous();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #131                // Field isStreamContiguous:Z\n+         1: getfield      #413                // Field isStreamContiguous:Z\n          4: ireturn\n       LineNumberTable:\n         line 881: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setStreamContiguous(boolean);\n     descriptor: (Z)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #131                // Field isStreamContiguous:Z\n+         2: putfield      #413                // Field isStreamContiguous:Z\n          5: return\n       LineNumberTable:\n         line 885: 0\n         line 886: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2853,22 +2853,22 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #117                // Method getName:()Ljava/lang/String;\n+         1: invokevirtual #367                // Method getName:()Ljava/lang/String;\n          4: astore_1\n          5: aload_1\n          6: ifnonnull     14\n-         9: ldc           #42                 // String\n+         9: ldc           #142                // String\n         11: goto          15\n         14: aload_1\n-        15: invokevirtual #132                // Method java/lang/String.hashCode:()I\n+        15: invokevirtual #417                // Method java/lang/String.hashCode:()I\n         18: ireturn\n       LineNumberTable:\n         line 899: 0\n         line 900: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2882,30 +2882,30 @@\n \n   public org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBit();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+         1: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n          4: areturn\n       LineNumberTable:\n         line 909: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+         2: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n          5: return\n       LineNumberTable:\n         line 918: 0\n         line 919: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2913,19 +2913,19 @@\n \n   private void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[], boolean);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=11, args_size=3\n          0: aload_0\n-         1: getfield      #83                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #253                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     15\n          7: aload_0\n          8: aload_1\n-         9: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+         9: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         12: goto          235\n         15: aload_1\n         16: astore_3\n         17: aload_3\n         18: arraylength\n         19: istore        4\n         21: iconst_0\n@@ -2934,92 +2934,92 @@\n         26: iload         4\n         28: if_icmpge     231\n         31: aload_3\n         32: iload         5\n         34: aaload\n         35: astore        6\n         37: aload         6\n-        39: instanceof    #78                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        39: instanceof    #236                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n         42: ifeq          54\n         45: aload_0\n-        46: getfield      #75                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        46: getfield      #229                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         49: astore        7\n         51: goto          67\n         54: aload_0\n         55: aload         6\n-        57: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        62: invokevirtual #108                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        57: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        62: invokevirtual #340                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         65: astore        7\n         67: aload         7\n         69: ifnonnull     81\n         72: aload_0\n         73: aload         6\n-        75: invokevirtual #133                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        75: invokevirtual #420                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         78: goto          225\n         81: iload_2\n         82: ifeq          95\n         85: aload         6\n-        87: invokeinterface #134,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+        87: invokeinterface #424,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n         92: goto          102\n         95: aload         6\n-        97: invokeinterface #99,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+        97: invokeinterface #308,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n        102: astore        8\n        104: iload_2\n        105: ifeq          124\n        108: aload         7\n        110: aload         8\n        112: iconst_0\n        113: aload         8\n        115: arraylength\n-       116: invokeinterface #135,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+       116: invokeinterface #427,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n        121: goto          137\n        124: aload         7\n        126: aload         8\n        128: iconst_0\n        129: aload         8\n        131: arraylength\n-       132: invokeinterface #100,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+       132: invokeinterface #311,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n        137: goto          225\n        140: astore        9\n-       142: new           #136                // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+       142: new           #430                // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n        145: dup\n-       146: invokespecial #137                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+       146: invokespecial #432                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n        149: astore        10\n        151: aload         10\n        153: aload         7\n-       155: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-       160: invokevirtual #138                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+       155: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       160: invokevirtual #433                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n        163: iload_2\n        164: ifeq          189\n        167: aload         10\n        169: aload         8\n-       171: invokevirtual #139                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+       171: invokevirtual #436                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n        174: aload         10\n        176: aload         7\n-       178: invokeinterface #99,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-       183: invokevirtual #140                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+       178: invokeinterface #308,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+       183: invokevirtual #439                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n        186: goto          208\n        189: aload         10\n        191: aload         7\n-       193: invokeinterface #134,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-       198: invokevirtual #139                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+       193: invokeinterface #424,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+       198: invokevirtual #436                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n        201: aload         10\n        203: aload         8\n-       205: invokevirtual #140                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+       205: invokevirtual #439                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n        208: aload_0\n        209: aload         7\n-       211: invokeinterface #97,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-       216: invokevirtual #109                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+       211: invokeinterface #300,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       216: invokevirtual #344                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n        219: aload_0\n        220: aload         10\n-       222: invokevirtual #133                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+       222: invokevirtual #420                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n        225: iinc          5, 1\n        228: goto          24\n        231: aload_0\n-       232: invokevirtual #27                 // Method setExtra:()V\n+       232: invokevirtual #91                 // Method setExtra:()V\n        235: return\n       Exception table:\n          from    to  target type\n            104   137   140   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 930: 0\n         line 931: 7\n@@ -3093,19 +3093,19 @@\n         frame_type = 3 /* same */\n \n   public java.util.Date getLastModifiedDate();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #141                // class java/util/Date\n+         0: new           #442                // class java/util/Date\n          3: dup\n          4: aload_0\n-         5: invokevirtual #142                // Method getTime:()J\n-         8: invokespecial #143                // Method java/util/Date.\"<init>\":(J)V\n+         5: invokevirtual #444                // Method getTime:()J\n+         8: invokespecial #447                // Method java/util/Date.\"<init>\":(J)V\n         11: areturn\n       LineNumberTable:\n         line 981: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -3118,127 +3118,127 @@\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_0\n-        12: invokevirtual #144                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #449                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_1\n-        16: invokevirtual #144                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #449                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+        25: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n         28: astore_2\n         29: aload_0\n-        30: invokevirtual #117                // Method getName:()Ljava/lang/String;\n+        30: invokevirtual #367                // Method getName:()Ljava/lang/String;\n         33: astore_3\n         34: aload_2\n-        35: invokevirtual #117                // Method getName:()Ljava/lang/String;\n+        35: invokevirtual #367                // Method getName:()Ljava/lang/String;\n         38: astore        4\n         40: aload_3\n         41: aload         4\n-        43: invokestatic  #145                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        43: invokestatic  #455                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: aload_0\n-        52: invokevirtual #146                // Method getComment:()Ljava/lang/String;\n+        52: invokevirtual #460                // Method getComment:()Ljava/lang/String;\n         55: astore        5\n         57: aload_2\n-        58: invokevirtual #146                // Method getComment:()Ljava/lang/String;\n+        58: invokevirtual #460                // Method getComment:()Ljava/lang/String;\n         61: astore        6\n         63: aload         5\n         65: ifnonnull     72\n-        68: ldc           #42                 // String\n+        68: ldc           #142                // String\n         70: astore        5\n         72: aload         6\n         74: ifnonnull     81\n-        77: ldc           #42                 // String\n+        77: ldc           #142                // String\n         79: astore        6\n         81: aload_0\n-        82: invokevirtual #142                // Method getTime:()J\n+        82: invokevirtual #444                // Method getTime:()J\n         85: aload_2\n-        86: invokevirtual #142                // Method getTime:()J\n+        86: invokevirtual #444                // Method getTime:()J\n         89: lcmp\n         90: ifne          254\n         93: aload         5\n         95: aload         6\n-        97: invokevirtual #147                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        97: invokevirtual #463                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        100: ifeq          254\n        103: aload_0\n-       104: invokevirtual #32                 // Method getInternalAttributes:()I\n+       104: invokevirtual #107                // Method getInternalAttributes:()I\n        107: aload_2\n-       108: invokevirtual #32                 // Method getInternalAttributes:()I\n+       108: invokevirtual #107                // Method getInternalAttributes:()I\n        111: if_icmpne     254\n        114: aload_0\n-       115: invokevirtual #37                 // Method getPlatform:()I\n+       115: invokevirtual #124                // Method getPlatform:()I\n        118: aload_2\n-       119: invokevirtual #37                 // Method getPlatform:()I\n+       119: invokevirtual #124                // Method getPlatform:()I\n        122: if_icmpne     254\n        125: aload_0\n-       126: invokevirtual #34                 // Method getExternalAttributes:()J\n+       126: invokevirtual #113                // Method getExternalAttributes:()J\n        129: aload_2\n-       130: invokevirtual #34                 // Method getExternalAttributes:()J\n+       130: invokevirtual #113                // Method getExternalAttributes:()J\n        133: lcmp\n        134: ifne          254\n        137: aload_0\n-       138: invokevirtual #148                // Method getMethod:()I\n+       138: invokevirtual #464                // Method getMethod:()I\n        141: aload_2\n-       142: invokevirtual #148                // Method getMethod:()I\n+       142: invokevirtual #464                // Method getMethod:()I\n        145: if_icmpne     254\n        148: aload_0\n-       149: invokevirtual #149                // Method getSize:()J\n+       149: invokevirtual #465                // Method getSize:()J\n        152: aload_2\n-       153: invokevirtual #149                // Method getSize:()J\n+       153: invokevirtual #465                // Method getSize:()J\n        156: lcmp\n        157: ifne          254\n        160: aload_0\n-       161: invokevirtual #150                // Method getCrc:()J\n+       161: invokevirtual #466                // Method getCrc:()J\n        164: aload_2\n-       165: invokevirtual #150                // Method getCrc:()J\n+       165: invokevirtual #466                // Method getCrc:()J\n        168: lcmp\n        169: ifne          254\n        172: aload_0\n-       173: invokevirtual #151                // Method getCompressedSize:()J\n+       173: invokevirtual #469                // Method getCompressedSize:()J\n        176: aload_2\n-       177: invokevirtual #151                // Method getCompressedSize:()J\n+       177: invokevirtual #469                // Method getCompressedSize:()J\n        180: lcmp\n        181: ifne          254\n        184: aload_0\n-       185: invokevirtual #91                 // Method getCentralDirectoryExtra:()[B\n+       185: invokevirtual #279                // Method getCentralDirectoryExtra:()[B\n        188: aload_2\n-       189: invokevirtual #91                 // Method getCentralDirectoryExtra:()[B\n-       192: invokestatic  #152                // Method java/util/Arrays.equals:([B[B)Z\n+       189: invokevirtual #279                // Method getCentralDirectoryExtra:()[B\n+       192: invokestatic  #472                // Method java/util/Arrays.equals:([B[B)Z\n        195: ifeq          254\n        198: aload_0\n-       199: invokevirtual #153                // Method getLocalFileDataExtra:()[B\n+       199: invokevirtual #475                // Method getLocalFileDataExtra:()[B\n        202: aload_2\n-       203: invokevirtual #153                // Method getLocalFileDataExtra:()[B\n-       206: invokestatic  #152                // Method java/util/Arrays.equals:([B[B)Z\n+       203: invokevirtual #475                // Method getLocalFileDataExtra:()[B\n+       206: invokestatic  #472                // Method java/util/Arrays.equals:([B[B)Z\n        209: ifeq          254\n        212: aload_0\n-       213: getfield      #14                 // Field localHeaderOffset:J\n+       213: getfield      #37                 // Field localHeaderOffset:J\n        216: aload_2\n-       217: getfield      #14                 // Field localHeaderOffset:J\n+       217: getfield      #37                 // Field localHeaderOffset:J\n        220: lcmp\n        221: ifne          254\n        224: aload_0\n-       225: getfield      #15                 // Field dataOffset:J\n+       225: getfield      #40                 // Field dataOffset:J\n        228: aload_2\n-       229: getfield      #15                 // Field dataOffset:J\n+       229: getfield      #40                 // Field dataOffset:J\n        232: lcmp\n        233: ifne          254\n        236: aload_0\n-       237: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+       237: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n        240: aload_2\n-       241: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-       244: invokevirtual #154                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+       241: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+       244: invokevirtual #478                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n        247: ifeq          254\n        250: iconst_1\n        251: goto          255\n        254: iconst_0\n        255: ireturn\n       LineNumberTable:\n         line 989: 0\n@@ -3301,15 +3301,15 @@\n   public void setVersionMadeBy(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #155                // Field versionMadeBy:I\n+         2: putfield      #479                // Field versionMadeBy:I\n          5: return\n       LineNumberTable:\n         line 1033: 0\n         line 1034: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3318,15 +3318,15 @@\n   public void setVersionRequired(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #156                // Field versionRequired:I\n+         2: putfield      #482                // Field versionRequired:I\n          5: return\n       LineNumberTable:\n         line 1042: 0\n         line 1043: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3334,58 +3334,58 @@\n \n   public int getVersionRequired();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #156                // Field versionRequired:I\n+         1: getfield      #482                // Field versionRequired:I\n          4: ireturn\n       LineNumberTable:\n         line 1051: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public int getVersionMadeBy();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #155                // Field versionMadeBy:I\n+         1: getfield      #479                // Field versionMadeBy:I\n          4: ireturn\n       LineNumberTable:\n         line 1060: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public int getRawFlag();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #157                // Field rawFlag:I\n+         1: getfield      #485                // Field rawFlag:I\n          4: ireturn\n       LineNumberTable:\n         line 1069: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setRawFlag(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #157                // Field rawFlag:I\n+         2: putfield      #485                // Field rawFlag:I\n          5: return\n       LineNumberTable:\n         line 1078: 0\n         line 1079: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3393,30 +3393,30 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource getNameSource();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+         1: getfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n          4: areturn\n       LineNumberTable:\n         line 1087: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setNameSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+         2: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n          5: return\n       LineNumberTable:\n         line 1096: 0\n         line 1097: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3424,30 +3424,30 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource getCommentSource();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+         1: getfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n          4: areturn\n       LineNumberTable:\n         line 1105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setCommentSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+         2: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n          5: return\n       LineNumberTable:\n         line 1114: 0\n         line 1115: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3455,30 +3455,30 @@\n \n   public long getDiskNumberStart();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #158                // Field diskNumberStart:J\n+         1: getfield      #488                // Field diskNumberStart:J\n          4: lreturn\n       LineNumberTable:\n         line 1124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setDiskNumberStart(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #158                // Field diskNumberStart:J\n+         2: putfield      #488                // Field diskNumberStart:J\n          5: return\n       LineNumberTable:\n         line 1134: 0\n         line 1135: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3486,25 +3486,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[], int);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=4, args_size=3\n          0: iload_2\n-         1: anewarray     #95                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+         1: anewarray     #294                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n          4: astore_3\n          5: aload_1\n          6: iconst_0\n          7: aload_3\n          8: iconst_0\n          9: aload_1\n         10: arraylength\n         11: iload_2\n-        12: invokestatic  #159                // Method java/lang/Math.min:(II)I\n-        15: invokestatic  #110                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        12: invokestatic  #491                // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #348                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         18: aload_3\n         19: areturn\n       LineNumberTable:\n         line 1138: 0\n         line 1139: 5\n         line 1140: 18\n       LocalVariableTable:\n@@ -3516,33 +3516,33 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-         4: putstatic     #160                // Field EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: anewarray     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         4: putstatic     #497                // Field EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          7: return\n       LineNumberTable:\n         line 152: 0\n }\n SourceFile: \"ZipArchiveEntry.java\"\n-InnerClasses:\n-  static #162;                            // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  public static #165= #164 of #8;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #167= #166 of #8;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #169= #168 of #8;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #655= #654 of #657; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #447 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #635 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #448 \\u0001/\n-  1: #447 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #641 \\u0001/\n+  1: #635 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #464 ZIP compression method can not be negative: \\u0001\n-  2: #447 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #643 ZIP compression method can not be negative: \\u0001\n+  2: #635 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #471 Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n-  3: #447 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #645 Invalid value for alignment, must be power of two and no bigger than 65535 but is \\u0001\n+  3: #635 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #513 Error parsing extra fields for entry: \\u0001 - \\u0001\n+      #647 Error parsing extra fields for entry: \\u0001 - \\u0001\n+InnerClasses:\n+  public static final #650= #44 of #10;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  public static final #651= #53 of #10;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  public static #652= #76 of #10;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  static #653;                            // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  public static final #659= #655 of #657; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
