{"diffoscope-json-version": 1, "source1": "first/Streams$FailableStream.class", "source2": "second/Streams$FailableStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,252 +1,252 @@\n-  SHA-256 checksum db392236299a7868f2a89b91b9e78582b212675c05b895568c9a50e136ec012b\n+  SHA-256 checksum eb877a4012b21b59d7fd536512d8e577a64eb4d71f6fe8be4dbbf87a67374f07\n   Compiled from \"Streams.java\"\n public class org.apache.commons.lang3.stream.Streams$FailableStream<O extends java.lang.Object> extends java.lang.Object\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/lang3/stream/Streams$FailableStream\n-  super_class: #23                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/stream/Streams$FailableStream\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 12, attributes: 3\n Constant pool:\n-    #1 = Methodref          #23.#97       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #18.#98       // org/apache/commons/lang3/stream/Streams$FailableStream.stream:Ljava/util/stream/Stream;\n-    #3 = Methodref          #18.#99       // org/apache/commons/lang3/stream/Streams$FailableStream.assertNotTerminated:()V\n-    #4 = Methodref          #18.#100      // org/apache/commons/lang3/stream/Streams$FailableStream.stream:()Ljava/util/stream/Stream;\n-    #5 = Methodref          #101.#102     // org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-    #6 = InterfaceMethodref #103.#104     // java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n-    #7 = InterfaceMethodref #103.#105     // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-    #8 = Fieldref           #18.#106      // org/apache/commons/lang3/stream/Streams$FailableStream.terminated:Z\n-    #9 = Class              #107          // java/lang/IllegalStateException\n-   #10 = String             #108          // This stream is already terminated.\n-   #11 = Methodref          #9.#109       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Methodref          #18.#110      // org/apache/commons/lang3/stream/Streams$FailableStream.makeTerminated:()V\n-   #13 = InterfaceMethodref #103.#111     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #14 = InterfaceMethodref #103.#112     // java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-   #15 = InterfaceMethodref #103.#113     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #16 = Methodref          #101.#114     // org/apache/commons/lang3/function/Failable.asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-   #17 = InterfaceMethodref #103.#115     // java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n-   #18 = Class              #117          // org/apache/commons/lang3/stream/Streams$FailableStream\n-   #19 = Methodref          #101.#118     // org/apache/commons/lang3/function/Failable.asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-   #20 = InterfaceMethodref #103.#119     // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-   #21 = Methodref          #18.#120      // org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n-   #22 = InterfaceMethodref #103.#121     // java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-   #23 = Class              #122          // java/lang/Object\n-   #24 = Utf8               stream\n-   #25 = Utf8               Ljava/util/stream/Stream;\n-   #26 = Utf8               Signature\n-   #27 = Utf8               Ljava/util/stream/Stream<TO;>;\n-   #28 = Utf8               terminated\n-   #29 = Utf8               Z\n-   #30 = Utf8               <init>\n-   #31 = Utf8               (Ljava/util/stream/Stream;)V\n-   #32 = Utf8               Code\n-   #33 = Utf8               LineNumberTable\n-   #34 = Utf8               LocalVariableTable\n-   #35 = Utf8               this\n-   #36 = Utf8               FailableStream\n-   #37 = Utf8               InnerClasses\n-   #38 = Utf8               Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n-   #39 = Utf8               LocalVariableTypeTable\n-   #40 = Utf8               Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n-   #41 = Utf8               (Ljava/util/stream/Stream<TO;>;)V\n-   #42 = Utf8               allMatch\n-   #43 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Z\n-   #44 = Utf8               predicate\n-   #45 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #46 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;\n-   #47 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n-   #48 = Utf8               anyMatch\n-   #49 = Utf8               assertNotTerminated\n-   #50 = Utf8               ()V\n-   #51 = Utf8               StackMapTable\n-   #52 = Utf8               collect\n-   #53 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #54 = Utf8               collector\n-   #55 = Utf8               Ljava/util/stream/Collector;\n-   #56 = Utf8               Ljava/util/stream/Collector<-TO;TA;TR;>;\n-   #57 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n-   #58 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-   #59 = Utf8               pupplier\n-   #60 = Utf8               Ljava/util/function/Supplier;\n-   #61 = Utf8               accumulator\n-   #62 = Utf8               Ljava/util/function/BiConsumer;\n-   #63 = Utf8               combiner\n-   #64 = Utf8               Ljava/util/function/Supplier<TR;>;\n-   #65 = Utf8               Ljava/util/function/BiConsumer<TR;-TO;>;\n-   #66 = Utf8               Ljava/util/function/BiConsumer<TR;TR;>;\n-   #67 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n-   #68 = Utf8               filter\n-   #69 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n-   #70 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n-   #71 = Utf8               forEach\n-   #72 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)V\n-   #73 = Utf8               action\n-   #74 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #75 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;\n-   #76 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V\n-   #77 = Utf8               makeTerminated\n-   #78 = Utf8               map\n-   #79 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n-   #80 = Utf8               mapper\n-   #81 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n-   #82 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;\n-   #83 = Utf8               <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TR;>;\n-   #84 = Utf8               reduce\n-   #85 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-   #86 = Utf8               identity\n-   #87 = Utf8               Ljava/lang/Object;\n-   #88 = Utf8               Ljava/util/function/BinaryOperator;\n-   #89 = Utf8               TO;\n-   #90 = Utf8               Ljava/util/function/BinaryOperator<TO;>;\n-   #91 = Utf8               (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n-   #92 = Utf8               ()Ljava/util/stream/Stream;\n-   #93 = Utf8               ()Ljava/util/stream/Stream<TO;>;\n-   #94 = Utf8               <O:Ljava/lang/Object;>Ljava/lang/Object;\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               Streams.java\n-   #97 = NameAndType        #30:#50       // \"<init>\":()V\n-   #98 = NameAndType        #24:#25       // stream:Ljava/util/stream/Stream;\n-   #99 = NameAndType        #49:#50       // assertNotTerminated:()V\n-  #100 = NameAndType        #24:#92       // stream:()Ljava/util/stream/Stream;\n-  #101 = Class              #123          // org/apache/commons/lang3/function/Failable\n-  #102 = NameAndType        #124:#125     // asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-  #103 = Class              #126          // java/util/stream/Stream\n-  #104 = NameAndType        #42:#127      // allMatch:(Ljava/util/function/Predicate;)Z\n-  #105 = NameAndType        #48:#127      // anyMatch:(Ljava/util/function/Predicate;)Z\n-  #106 = NameAndType        #28:#29       // terminated:Z\n-  #107 = Utf8               java/lang/IllegalStateException\n-  #108 = Utf8               This stream is already terminated.\n-  #109 = NameAndType        #30:#128      // \"<init>\":(Ljava/lang/String;)V\n-  #110 = NameAndType        #77:#50       // makeTerminated:()V\n-  #111 = NameAndType        #52:#53       // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #112 = NameAndType        #52:#58       // collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n-  #113 = NameAndType        #68:#129      // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #114 = NameAndType        #130:#131     // asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-  #115 = NameAndType        #71:#132      // forEach:(Ljava/util/function/Consumer;)V\n-  #116 = Class              #133          // org/apache/commons/lang3/stream/Streams\n-  #117 = Utf8               org/apache/commons/lang3/stream/Streams$FailableStream\n-  #118 = NameAndType        #134:#135     // asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-  #119 = NameAndType        #78:#136      // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #120 = NameAndType        #30:#31       // \"<init>\":(Ljava/util/stream/Stream;)V\n-  #121 = NameAndType        #84:#85       // reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n-  #122 = Utf8               java/lang/Object\n-  #123 = Utf8               org/apache/commons/lang3/function/Failable\n-  #124 = Utf8               asPredicate\n-  #125 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-  #126 = Utf8               java/util/stream/Stream\n-  #127 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #128 = Utf8               (Ljava/lang/String;)V\n-  #129 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #130 = Utf8               asConsumer\n-  #131 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-  #132 = Utf8               (Ljava/util/function/Consumer;)V\n-  #133 = Utf8               org/apache/commons/lang3/stream/Streams\n-  #134 = Utf8               asFunction\n-  #135 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-  #136 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/stream/Streams$FailableStream.stream:Ljava/util/stream/Stream;\n+    #8 = Class              #10           // org/apache/commons/lang3/stream/Streams$FailableStream\n+    #9 = NameAndType        #11:#12       // stream:Ljava/util/stream/Stream;\n+   #10 = Utf8               org/apache/commons/lang3/stream/Streams$FailableStream\n+   #11 = Utf8               stream\n+   #12 = Utf8               Ljava/util/stream/Stream;\n+   #13 = Methodref          #8.#14        // org/apache/commons/lang3/stream/Streams$FailableStream.assertNotTerminated:()V\n+   #14 = NameAndType        #15:#6        // assertNotTerminated:()V\n+   #15 = Utf8               assertNotTerminated\n+   #16 = Methodref          #8.#17        // org/apache/commons/lang3/stream/Streams$FailableStream.stream:()Ljava/util/stream/Stream;\n+   #17 = NameAndType        #11:#18       // stream:()Ljava/util/stream/Stream;\n+   #18 = Utf8               ()Ljava/util/stream/Stream;\n+   #19 = Methodref          #20.#21       // org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #20 = Class              #22           // org/apache/commons/lang3/function/Failable\n+   #21 = NameAndType        #23:#24       // asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #22 = Utf8               org/apache/commons/lang3/function/Failable\n+   #23 = Utf8               asPredicate\n+   #24 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #25 = InterfaceMethodref #26.#27       // java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n+   #26 = Class              #28           // java/util/stream/Stream\n+   #27 = NameAndType        #29:#30       // allMatch:(Ljava/util/function/Predicate;)Z\n+   #28 = Utf8               java/util/stream/Stream\n+   #29 = Utf8               allMatch\n+   #30 = Utf8               (Ljava/util/function/Predicate;)Z\n+   #31 = InterfaceMethodref #26.#32       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #32 = NameAndType        #33:#30       // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #33 = Utf8               anyMatch\n+   #34 = Fieldref           #8.#35        // org/apache/commons/lang3/stream/Streams$FailableStream.terminated:Z\n+   #35 = NameAndType        #36:#37       // terminated:Z\n+   #36 = Utf8               terminated\n+   #37 = Utf8               Z\n+   #38 = Class              #39           // java/lang/IllegalStateException\n+   #39 = Utf8               java/lang/IllegalStateException\n+   #40 = String             #41           // This stream is already terminated.\n+   #41 = Utf8               This stream is already terminated.\n+   #42 = Methodref          #38.#43       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #43 = NameAndType        #5:#44        // \"<init>\":(Ljava/lang/String;)V\n+   #44 = Utf8               (Ljava/lang/String;)V\n+   #45 = Methodref          #8.#46        // org/apache/commons/lang3/stream/Streams$FailableStream.makeTerminated:()V\n+   #46 = NameAndType        #47:#6        // makeTerminated:()V\n+   #47 = Utf8               makeTerminated\n+   #48 = InterfaceMethodref #26.#49       // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #49 = NameAndType        #50:#51       // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #50 = Utf8               collect\n+   #51 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #52 = InterfaceMethodref #26.#53       // java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #53 = NameAndType        #50:#54       // collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #54 = Utf8               (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+   #55 = InterfaceMethodref #26.#56       // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #56 = NameAndType        #57:#58       // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #57 = Utf8               filter\n+   #58 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #59 = Methodref          #20.#60       // org/apache/commons/lang3/function/Failable.asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #60 = NameAndType        #61:#62       // asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #61 = Utf8               asConsumer\n+   #62 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #63 = InterfaceMethodref #26.#64       // java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n+   #64 = NameAndType        #65:#66       // forEach:(Ljava/util/function/Consumer;)V\n+   #65 = Utf8               forEach\n+   #66 = Utf8               (Ljava/util/function/Consumer;)V\n+   #67 = Methodref          #20.#68       // org/apache/commons/lang3/function/Failable.asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #68 = NameAndType        #69:#70       // asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #69 = Utf8               asFunction\n+   #70 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #71 = InterfaceMethodref #26.#72       // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #72 = NameAndType        #73:#74       // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #73 = Utf8               map\n+   #74 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #75 = Methodref          #8.#76        // org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n+   #76 = NameAndType        #5:#77        // \"<init>\":(Ljava/util/stream/Stream;)V\n+   #77 = Utf8               (Ljava/util/stream/Stream;)V\n+   #78 = InterfaceMethodref #26.#79       // java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #79 = NameAndType        #80:#81       // reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #80 = Utf8               reduce\n+   #81 = Utf8               (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+   #82 = Utf8               Signature\n+   #83 = Utf8               Ljava/util/stream/Stream<TO;>;\n+   #84 = Utf8               Code\n+   #85 = Utf8               LineNumberTable\n+   #86 = Utf8               LocalVariableTable\n+   #87 = Utf8               this\n+   #88 = Utf8               Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n+   #89 = Utf8               LocalVariableTypeTable\n+   #90 = Utf8               Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n+   #91 = Utf8               (Ljava/util/stream/Stream<TO;>;)V\n+   #92 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Z\n+   #93 = Utf8               predicate\n+   #94 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #95 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;\n+   #96 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n+   #97 = Utf8               StackMapTable\n+   #98 = Utf8               collector\n+   #99 = Utf8               Ljava/util/stream/Collector;\n+  #100 = Utf8               Ljava/util/stream/Collector<-TO;TA;TR;>;\n+  #101 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n+  #102 = Utf8               pupplier\n+  #103 = Utf8               Ljava/util/function/Supplier;\n+  #104 = Utf8               accumulator\n+  #105 = Utf8               Ljava/util/function/BiConsumer;\n+  #106 = Utf8               combiner\n+  #107 = Utf8               Ljava/util/function/Supplier<TR;>;\n+  #108 = Utf8               Ljava/util/function/BiConsumer<TR;-TO;>;\n+  #109 = Utf8               Ljava/util/function/BiConsumer<TR;TR;>;\n+  #110 = Utf8               <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n+  #111 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n+  #112 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n+  #113 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)V\n+  #114 = Utf8               action\n+  #115 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #116 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;\n+  #117 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V\n+  #118 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n+  #119 = Utf8               mapper\n+  #120 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n+  #121 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;\n+  #122 = Utf8               <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TR;>;\n+  #123 = Utf8               identity\n+  #124 = Utf8               Ljava/lang/Object;\n+  #125 = Utf8               Ljava/util/function/BinaryOperator;\n+  #126 = Utf8               TO;\n+  #127 = Utf8               Ljava/util/function/BinaryOperator<TO;>;\n+  #128 = Utf8               (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n+  #129 = Utf8               ()Ljava/util/stream/Stream<TO;>;\n+  #130 = Utf8               <O:Ljava/lang/Object;>Ljava/lang/Object;\n+  #131 = Utf8               SourceFile\n+  #132 = Utf8               Streams.java\n+  #133 = Utf8               InnerClasses\n+  #134 = Class              #135          // org/apache/commons/lang3/stream/Streams\n+  #135 = Utf8               org/apache/commons/lang3/stream/Streams\n+  #136 = Utf8               FailableStream\n {\n   private java.util.stream.Stream<O> stream;\n     descriptor: Ljava/util/stream/Stream;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #27                          // Ljava/util/stream/Stream<TO;>;\n+    Signature: #83                          // Ljava/util/stream/Stream<TO;>;\n \n   private boolean terminated;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.lang3.stream.Streams$FailableStream(java.util.stream.Stream<O>);\n     descriptor: (Ljava/util/stream/Stream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         6: putfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          9: return\n       LineNumberTable:\n         line 135: 0\n         line 136: 4\n         line 137: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      10     1 stream   Ljava/util/stream/Stream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      10     1 stream   Ljava/util/stream/Stream<TO;>;\n-    Signature: #41                          // (Ljava/util/stream/Stream<TO;>;)V\n+    Signature: #91                          // (Ljava/util/stream/Stream<TO;>;)V\n \n   public boolean allMatch(org.apache.commons.lang3.function.FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #3                  // Method assertNotTerminated:()V\n+         1: invokevirtual #13                 // Method assertNotTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #5                  // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-        12: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n+         9: invokestatic  #19                 // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+        12: invokeinterface #25,  2           // InterfaceMethod java/util/stream/Stream.allMatch:(Ljava/util/function/Predicate;)Z\n         17: ireturn\n       LineNumberTable:\n         line 156: 0\n         line 157: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      18     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      18     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;\n-    Signature: #47                          // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n+    Signature: #96                          // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n \n   public boolean anyMatch(org.apache.commons.lang3.function.FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #3                  // Method assertNotTerminated:()V\n+         1: invokevirtual #13                 // Method assertNotTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #5                  // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-        12: invokeinterface #7,  2            // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+         9: invokestatic  #19                 // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+        12: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n         17: ireturn\n       LineNumberTable:\n         line 175: 0\n         line 176: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      18     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      18     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;\n-    Signature: #47                          // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n+    Signature: #96                          // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Z\n \n   protected void assertNotTerminated();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field terminated:Z\n+         1: getfield      #34                 // Field terminated:Z\n          4: ifeq          17\n-         7: new           #9                  // class java/lang/IllegalStateException\n+         7: new           #38                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #10                 // String This stream is already terminated.\n-        13: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #40                 // String This stream is already terminated.\n+        13: invokespecial #42                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 180: 0\n         line 181: 7\n         line 183: 17\n       LocalVariableTable:\n@@ -260,46 +260,46 @@\n \n   public <A extends java.lang.Object, R extends java.lang.Object> R collect(java.util.stream.Collector<? super O, A, R>);\n     descriptor: (Ljava/util/stream/Collector;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #12                 // Method makeTerminated:()V\n+         1: invokevirtual #45                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+         9: invokeinterface #48,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n         14: areturn\n       LineNumberTable:\n         line 241: 0\n         line 242: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      15     1 collector   Ljava/util/stream/Collector;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      15     1 collector   Ljava/util/stream/Collector<-TO;TA;TR;>;\n-    Signature: #57                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n+    Signature: #101                         // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TO;TA;TR;>;)TR;\n \n   public <A extends java.lang.Object, R extends java.lang.Object> R collect(java.util.function.Supplier<R>, java.util.function.BiConsumer<R, ? super O>, java.util.function.BiConsumer<R, R>);\n     descriptor: (Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #12                 // Method makeTerminated:()V\n+         1: invokevirtual #45                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n          9: aload_2\n         10: aload_3\n-        11: invokeinterface #14,  4           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n+        11: invokeinterface #52,  4           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/function/Supplier;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;)Ljava/lang/Object;\n         16: areturn\n       LineNumberTable:\n         line 299: 0\n         line 300: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n@@ -308,83 +308,83 @@\n             0      17     3 combiner   Ljava/util/function/BiConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      17     1 pupplier   Ljava/util/function/Supplier<TR;>;\n             0      17     2 accumulator   Ljava/util/function/BiConsumer<TR;-TO;>;\n             0      17     3 combiner   Ljava/util/function/BiConsumer<TR;TR;>;\n-    Signature: #67                          // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n+    Signature: #110                         // <A:Ljava/lang/Object;R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TO;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;\n \n   public org.apache.commons.lang3.stream.Streams$FailableStream<O> filter(org.apache.commons.lang3.function.FailablePredicate<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #3                  // Method assertNotTerminated:()V\n+         1: invokevirtual #13                 // Method assertNotTerminated:()V\n          4: aload_0\n          5: aload_0\n-         6: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         6: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          9: aload_1\n-        10: invokestatic  #5                  // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-        13: invokeinterface #15,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        18: putfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+        10: invokestatic  #19                 // Method org/apache/commons/lang3/function/Failable.asPredicate:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+        13: invokeinterface #55,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        18: putfield      #7                  // Field stream:Ljava/util/stream/Stream;\n         21: aload_0\n         22: areturn\n       LineNumberTable:\n         line 314: 0\n         line 315: 4\n         line 316: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      23     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      23     1 predicate   Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;\n-    Signature: #70                          // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n+    Signature: #112                         // (Lorg/apache/commons/lang3/function/FailablePredicate<TO;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n \n   public void forEach(org.apache.commons.lang3.function.FailableConsumer<O, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #12                 // Method makeTerminated:()V\n+         1: invokevirtual #45                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n-         9: invokestatic  #16                 // Method org/apache/commons/lang3/function/Failable.asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-        12: invokeinterface #17,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n+         9: invokestatic  #59                 // Method org/apache/commons/lang3/function/Failable.asConsumer:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+        12: invokeinterface #63,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V\n         17: return\n       LineNumberTable:\n         line 335: 0\n         line 336: 4\n         line 337: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      18     1 action   Lorg/apache/commons/lang3/function/FailableConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      18     1 action   Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;\n-    Signature: #76                          // (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V\n+    Signature: #117                         // (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V\n \n   protected void makeTerminated();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method assertNotTerminated:()V\n+         1: invokevirtual #13                 // Method assertNotTerminated:()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #8                  // Field terminated:Z\n+         6: putfield      #34                 // Field terminated:Z\n          9: return\n       LineNumberTable:\n         line 340: 0\n         line 341: 4\n         line 342: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -395,80 +395,80 @@\n \n   public <R extends java.lang.Object> org.apache.commons.lang3.stream.Streams$FailableStream<R> map(org.apache.commons.lang3.function.FailableFunction<O, R, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #3                  // Method assertNotTerminated:()V\n-         4: new           #18                 // class org/apache/commons/lang3/stream/Streams$FailableStream\n+         1: invokevirtual #13                 // Method assertNotTerminated:()V\n+         4: new           #8                  // class org/apache/commons/lang3/stream/Streams$FailableStream\n          7: dup\n          8: aload_0\n-         9: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         9: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n         12: aload_1\n-        13: invokestatic  #19                 // Method org/apache/commons/lang3/function/Failable.asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-        16: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-        21: invokespecial #21                 // Method \"<init>\":(Ljava/util/stream/Stream;)V\n+        13: invokestatic  #67                 // Method org/apache/commons/lang3/function/Failable.asFunction:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+        16: invokeinterface #71,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+        21: invokespecial #75                 // Method \"<init>\":(Ljava/util/stream/Stream;)V\n         24: areturn\n       LineNumberTable:\n         line 355: 0\n         line 356: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      25     1 mapper   Lorg/apache/commons/lang3/function/FailableFunction;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      25     1 mapper   Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;\n-    Signature: #83                          // <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TR;>;\n+    Signature: #122                         // <R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TR;*>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TR;>;\n \n   public O reduce(O, java.util.function.BinaryOperator<O>);\n     descriptor: (Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #12                 // Method makeTerminated:()V\n+         1: invokevirtual #45                 // Method makeTerminated:()V\n          4: aload_0\n-         5: invokevirtual #4                  // Method stream:()Ljava/util/stream/Stream;\n+         5: invokevirtual #16                 // Method stream:()Ljava/util/stream/Stream;\n          8: aload_1\n          9: aload_2\n-        10: invokeinterface #22,  3           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n+        10: invokeinterface #78,  3           // InterfaceMethod java/util/stream/Stream.reduce:(Ljava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;\n         15: areturn\n       LineNumberTable:\n         line 409: 0\n         line 410: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n             0      16     1 identity   Ljava/lang/Object;\n             0      16     2 accumulator   Ljava/util/function/BinaryOperator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n             0      16     1 identity   TO;\n             0      16     2 accumulator   Ljava/util/function/BinaryOperator<TO;>;\n-    Signature: #91                          // (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n+    Signature: #128                         // (TO;Ljava/util/function/BinaryOperator<TO;>;)TO;\n \n   public java.util.stream.Stream<O> stream();\n     descriptor: ()Ljava/util/stream/Stream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field stream:Ljava/util/stream/Stream;\n+         1: getfield      #7                  // Field stream:Ljava/util/stream/Stream;\n          4: areturn\n       LineNumberTable:\n         line 419: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/stream/Streams$FailableStream<TO;>;\n-    Signature: #93                          // ()Ljava/util/stream/Stream<TO;>;\n+    Signature: #129                         // ()Ljava/util/stream/Stream<TO;>;\n }\n-Signature: #94                          // <O:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #130                         // <O:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"Streams.java\"\n InnerClasses:\n-  public static #36= #18 of #116;         // FailableStream=class org/apache/commons/lang3/stream/Streams$FailableStream of class org/apache/commons/lang3/stream/Streams\n+  public static #136= #8 of #134;         // FailableStream=class org/apache/commons/lang3/stream/Streams$FailableStream of class org/apache/commons/lang3/stream/Streams\n"}]}
