{"diffoscope-json-version": 1, "source1": "first/Pass3aVerifier.class", "source2": "second/Pass3aVerifier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,142 +1,142 @@\n-  SHA-256 checksum 9a0edd13fc3057f02204c938274cf256a4cc729c99411fb8842f646b4a8aca02\n+  SHA-256 checksum 8009a5c1a9adf254b4ab679123d1a137bf3671e87fcdcaae16202fa9b0ccd76d\n   Compiled from \"Pass3aVerifier.java\"\n public final class org.apache.bcel.verifier.statics.Pass3aVerifier extends org.apache.bcel.verifier.PassVerifier\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #124                        // org/apache/bcel/verifier/statics/Pass3aVerifier\n   super_class: #125                       // org/apache/bcel/verifier/PassVerifier\n   interfaces: 0, fields: 4, methods: 9, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #124.#248     // org/apache/bcel/verifier/statics/Pass3aVerifier.method_no:I\n-    #2 = Fieldref           #124.#249     // org/apache/bcel/verifier/statics/Pass3aVerifier.myOwner:Lorg/apache/bcel/verifier/Verifier;\n-    #3 = Methodref          #125.#250     // org/apache/bcel/verifier/PassVerifier.\"<init>\":()V\n-    #4 = Methodref          #251.#252     // org/apache/bcel/verifier/Verifier.doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n-    #5 = Fieldref           #22.#253      // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-    #6 = Methodref          #22.#254      // org/apache/bcel/verifier/VerificationResult.equals:(Ljava/lang/Object;)Z\n-    #7 = Methodref          #251.#255     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n-    #8 = Methodref          #256.#257     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-    #9 = Methodref          #258.#259     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #10 = Class              #260          // org/apache/bcel/verifier/exc/InvalidMethodException\n-   #11 = String             #261          // METHOD DOES NOT EXIST!\n-   #12 = Methodref          #10.#262      // org/apache/bcel/verifier/exc/InvalidMethodException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #263.#264     // org/apache/bcel/classfile/Method.getCode:()Lorg/apache/bcel/classfile/Code;\n-   #14 = Fieldref           #124.#265     // org/apache/bcel/verifier/statics/Pass3aVerifier.code:Lorg/apache/bcel/classfile/Code;\n-   #15 = Methodref          #263.#266     // org/apache/bcel/classfile/Method.isAbstract:()Z\n-   #16 = Methodref          #263.#267     // org/apache/bcel/classfile/Method.isNative:()Z\n-   #17 = Class              #268          // org/apache/bcel/generic/InstructionList\n-   #18 = Methodref          #269.#270     // org/apache/bcel/classfile/Code.getCode:()[B\n-   #19 = Methodref          #17.#271      // org/apache/bcel/generic/InstructionList.\"<init>\":([B)V\n-   #20 = Fieldref           #124.#272     // org/apache/bcel/verifier/statics/Pass3aVerifier.instructionList:Lorg/apache/bcel/generic/InstructionList;\n-   #21 = Class              #273          // java/lang/RuntimeException\n-   #22 = Class              #274          // org/apache/bcel/verifier/VerificationResult\n-   #23 = Class              #275          // java/lang/StringBuilder\n-   #24 = Methodref          #23.#250      // java/lang/StringBuilder.\"<init>\":()V\n-   #25 = String             #276          // Bad bytecode in the code array of the Code attribute of method \\'\n-   #26 = Methodref          #23.#277      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #23.#278      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #28 = String             #279          // \\'.\n-   #29 = Methodref          #23.#280      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = Methodref          #22.#281      // org/apache/bcel/verifier/VerificationResult.\"<init>\":(ILjava/lang/String;)V\n-   #31 = Methodref          #17.#282      // org/apache/bcel/generic/InstructionList.setPositions:(Z)V\n-   #32 = Methodref          #124.#283     // org/apache/bcel/verifier/statics/Pass3aVerifier.delayedPass2Checks:()V\n-   #33 = Class              #284          // org/apache/bcel/verifier/exc/ClassConstraintException\n-   #34 = Methodref          #33.#285      // org/apache/bcel/verifier/exc/ClassConstraintException.getMessage:()Ljava/lang/String;\n-   #35 = Methodref          #124.#286     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionChecks:()V\n-   #36 = Methodref          #124.#287     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionOperandsChecks:()V\n-   #37 = Class              #288          // org/apache/bcel/verifier/exc/StaticCodeConstraintException\n-   #38 = Methodref          #37.#285      // org/apache/bcel/verifier/exc/StaticCodeConstraintException.getMessage:()Ljava/lang/String;\n-   #39 = Class              #289          // java/lang/ClassCastException\n-   #40 = String             #290          // Class Cast Exception:\n-   #41 = Methodref          #39.#285      // java/lang/ClassCastException.getMessage:()Ljava/lang/String;\n-   #42 = Fieldref           #22.#291      // org/apache/bcel/verifier/VerificationResult.VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n-   #43 = Class              #292          // java/lang/ClassNotFoundException\n-   #44 = Class              #293          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #45 = String             #294          // Missing class:\n-   #46 = Methodref          #44.#295      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #47 = Methodref          #17.#296      // org/apache/bcel/generic/InstructionList.getInstructionPositions:()[I\n-   #48 = Methodref          #269.#297     // org/apache/bcel/classfile/Code.getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n-   #49 = Methodref          #298.#299     // org/apache/bcel/classfile/LineNumberTable.getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n-   #50 = Class              #300          // org/apache/bcel/verifier/statics/IntList\n-   #51 = Methodref          #50.#250      // org/apache/bcel/verifier/statics/IntList.\"<init>\":()V\n-   #52 = Methodref          #301.#302     // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n-   #53 = Methodref          #50.#303      // org/apache/bcel/verifier/statics/IntList.contains:(I)Z\n-   #54 = String             #304          // LineNumberTable attribute \\'\n-   #55 = String             #305          // \\' refers to the same code offset (\\'\n-   #56 = Methodref          #23.#306      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #57 = String             #307          // \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n-   #58 = Methodref          #124.#308     // org/apache/bcel/verifier/statics/Pass3aVerifier.addMessage:(Ljava/lang/String;)V\n-   #59 = Methodref          #50.#309      // org/apache/bcel/verifier/statics/IntList.add:(I)V\n-   #60 = String             #310          // Code attribute \\'\n-   #61 = String             #311          // \\' has a LineNumberTable attribute \\'\n-   #62 = String             #312          // \\' referring to a code offset (\\'\n-   #63 = String             #313          // \\') that does not exist.\n-   #64 = Methodref          #33.#262      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #65 = Methodref          #269.#314     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #66 = Class              #315          // org/apache/bcel/classfile/LocalVariableTable\n-   #67 = Methodref          #66.#316      // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-   #68 = Methodref          #317.#302     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n-   #69 = Methodref          #317.#318     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n-   #70 = Methodref          #124.#319     // org/apache/bcel/verifier/statics/Pass3aVerifier.contains:([II)Z\n-   #71 = String             #320          // \\' has a LocalVariableTable attribute \\'\n-   #72 = Methodref          #269.#321     // org/apache/bcel/classfile/Code.getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n-   #73 = String             #322          // \\' referring to a code offset start_pc+length (\\'\n-   #74 = Methodref          #269.#323     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-   #75 = Methodref          #324.#302     // org/apache/bcel/classfile/CodeException.getStartPC:()I\n-   #76 = Methodref          #324.#325     // org/apache/bcel/classfile/CodeException.getEndPC:()I\n-   #77 = Methodref          #324.#326     // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n-   #78 = String             #327          // \\' has an exception_table entry \\'\n-   #79 = String             #328          // \\' that has its start_pc (\\'\n-   #80 = String             #329          // \\') not smaller than its end_pc (\\'\n-   #81 = String             #330          // \\').\n-   #82 = String             #331          // \\' that has a non-existant bytecode offset as its start_pc (\\'\n-   #83 = String             #332          // \\' that has a non-existant bytecode offset as its end_pc (\\'\n-   #84 = String             #333          // \\') [that is also not equal to code_length (\\'\n-   #85 = String             #334          // \\')].\n-   #86 = String             #335          // \\' that has a non-existant bytecode offset as its handler_pc (\\'\n-   #87 = Class              #336          // org/apache/bcel/Const\n+    #1 = Fieldref           #124.#237     // org/apache/bcel/verifier/statics/Pass3aVerifier.method_no:I\n+    #2 = Fieldref           #124.#238     // org/apache/bcel/verifier/statics/Pass3aVerifier.myOwner:Lorg/apache/bcel/verifier/Verifier;\n+    #3 = Methodref          #125.#239     // org/apache/bcel/verifier/PassVerifier.\"<init>\":()V\n+    #4 = Methodref          #240.#241     // org/apache/bcel/verifier/Verifier.doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n+    #5 = Fieldref           #22.#242      // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+    #6 = Methodref          #22.#243      // org/apache/bcel/verifier/VerificationResult.equals:(Ljava/lang/Object;)Z\n+    #7 = Methodref          #240.#244     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n+    #8 = Methodref          #245.#246     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+    #9 = Methodref          #164.#247     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #10 = Class              #248          // org/apache/bcel/verifier/exc/InvalidMethodException\n+   #11 = String             #249          // METHOD DOES NOT EXIST!\n+   #12 = Methodref          #10.#250      // org/apache/bcel/verifier/exc/InvalidMethodException.\"<init>\":(Ljava/lang/String;)V\n+   #13 = Methodref          #166.#251     // org/apache/bcel/classfile/Method.getCode:()Lorg/apache/bcel/classfile/Code;\n+   #14 = Fieldref           #124.#252     // org/apache/bcel/verifier/statics/Pass3aVerifier.code:Lorg/apache/bcel/classfile/Code;\n+   #15 = Methodref          #166.#253     // org/apache/bcel/classfile/Method.isAbstract:()Z\n+   #16 = Methodref          #166.#254     // org/apache/bcel/classfile/Method.isNative:()Z\n+   #17 = Class              #255          // org/apache/bcel/generic/InstructionList\n+   #18 = Methodref          #256.#257     // org/apache/bcel/classfile/Code.getCode:()[B\n+   #19 = Methodref          #17.#258      // org/apache/bcel/generic/InstructionList.\"<init>\":([B)V\n+   #20 = Fieldref           #124.#259     // org/apache/bcel/verifier/statics/Pass3aVerifier.instructionList:Lorg/apache/bcel/generic/InstructionList;\n+   #21 = Class              #260          // java/lang/RuntimeException\n+   #22 = Class              #261          // org/apache/bcel/verifier/VerificationResult\n+   #23 = Class              #262          // java/lang/StringBuilder\n+   #24 = Methodref          #23.#239      // java/lang/StringBuilder.\"<init>\":()V\n+   #25 = String             #263          // Bad bytecode in the code array of the Code attribute of method \\'\n+   #26 = Methodref          #23.#264      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #23.#265      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #28 = String             #266          // \\'.\n+   #29 = Methodref          #23.#267      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #30 = Methodref          #22.#268      // org/apache/bcel/verifier/VerificationResult.\"<init>\":(ILjava/lang/String;)V\n+   #31 = Methodref          #17.#269      // org/apache/bcel/generic/InstructionList.setPositions:(Z)V\n+   #32 = Methodref          #124.#270     // org/apache/bcel/verifier/statics/Pass3aVerifier.delayedPass2Checks:()V\n+   #33 = Class              #271          // org/apache/bcel/verifier/exc/ClassConstraintException\n+   #34 = Methodref          #33.#272      // org/apache/bcel/verifier/exc/ClassConstraintException.getMessage:()Ljava/lang/String;\n+   #35 = Methodref          #124.#273     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionChecks:()V\n+   #36 = Methodref          #124.#274     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionOperandsChecks:()V\n+   #37 = Class              #275          // org/apache/bcel/verifier/exc/StaticCodeConstraintException\n+   #38 = Methodref          #37.#272      // org/apache/bcel/verifier/exc/StaticCodeConstraintException.getMessage:()Ljava/lang/String;\n+   #39 = Class              #276          // java/lang/ClassCastException\n+   #40 = String             #277          // Class Cast Exception:\n+   #41 = Methodref          #39.#272      // java/lang/ClassCastException.getMessage:()Ljava/lang/String;\n+   #42 = Fieldref           #22.#278      // org/apache/bcel/verifier/VerificationResult.VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n+   #43 = Class              #279          // java/lang/ClassNotFoundException\n+   #44 = Class              #280          // org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #45 = String             #281          // Missing class:\n+   #46 = Methodref          #44.#282      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #47 = Methodref          #17.#283      // org/apache/bcel/generic/InstructionList.getInstructionPositions:()[I\n+   #48 = Methodref          #256.#284     // org/apache/bcel/classfile/Code.getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n+   #49 = Methodref          #201.#285     // org/apache/bcel/classfile/LineNumberTable.getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n+   #50 = Class              #286          // org/apache/bcel/verifier/statics/IntList\n+   #51 = Methodref          #50.#239      // org/apache/bcel/verifier/statics/IntList.\"<init>\":()V\n+   #52 = Methodref          #203.#287     // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n+   #53 = Methodref          #50.#288      // org/apache/bcel/verifier/statics/IntList.contains:(I)Z\n+   #54 = String             #289          // LineNumberTable attribute \\'\n+   #55 = String             #290          // \\' refers to the same code offset (\\'\n+   #56 = Methodref          #23.#291      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #57 = String             #292          // \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n+   #58 = Methodref          #124.#293     // org/apache/bcel/verifier/statics/Pass3aVerifier.addMessage:(Ljava/lang/String;)V\n+   #59 = Methodref          #50.#294      // org/apache/bcel/verifier/statics/IntList.add:(I)V\n+   #60 = String             #295          // Code attribute \\'\n+   #61 = String             #296          // \\' has a LineNumberTable attribute \\'\n+   #62 = String             #297          // \\' referring to a code offset (\\'\n+   #63 = String             #298          // \\') that does not exist.\n+   #64 = Methodref          #33.#250      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #65 = Methodref          #256.#299     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #66 = Class              #300          // org/apache/bcel/classfile/LocalVariableTable\n+   #67 = Methodref          #66.#301      // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+   #68 = Methodref          #207.#287     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n+   #69 = Methodref          #207.#302     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n+   #70 = Methodref          #124.#303     // org/apache/bcel/verifier/statics/Pass3aVerifier.contains:([II)Z\n+   #71 = String             #304          // \\' has a LocalVariableTable attribute \\'\n+   #72 = Methodref          #256.#305     // org/apache/bcel/classfile/Code.getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n+   #73 = String             #306          // \\' referring to a code offset start_pc+length (\\'\n+   #74 = Methodref          #256.#307     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+   #75 = Methodref          #209.#287     // org/apache/bcel/classfile/CodeException.getStartPC:()I\n+   #76 = Methodref          #209.#308     // org/apache/bcel/classfile/CodeException.getEndPC:()I\n+   #77 = Methodref          #209.#309     // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n+   #78 = String             #310          // \\' has an exception_table entry \\'\n+   #79 = String             #311          // \\' that has its start_pc (\\'\n+   #80 = String             #312          // \\') not smaller than its end_pc (\\'\n+   #81 = String             #313          // \\').\n+   #82 = String             #314          // \\' that has a non-existant bytecode offset as its start_pc (\\'\n+   #83 = String             #315          // \\' that has a non-existant bytecode offset as its end_pc (\\'\n+   #84 = String             #316          // \\') [that is also not equal to code_length (\\'\n+   #85 = String             #317          // \\')].\n+   #86 = String             #318          // \\' that has a non-existant bytecode offset as its handler_pc (\\'\n+   #87 = Class              #319          // org/apache/bcel/Const\n    #88 = Integer            65536\n-   #89 = Class              #337          // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n-   #90 = String             #338          // Code array in code attribute \\'\n-   #91 = String             #339          // \\' too big: must be smaller than\n-   #92 = String             #340          // 65536 bytes.\n-   #93 = Methodref          #89.#262      // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #94 = Methodref          #17.#341      // org/apache/bcel/generic/InstructionList.getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #95 = Methodref          #342.#343     // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-   #96 = Class              #344          // org/apache/bcel/generic/IMPDEP1\n-   #97 = String             #345          // IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-   #98 = Class              #346          // org/apache/bcel/generic/IMPDEP2\n-   #99 = String             #347          // IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #100 = Class              #348          // org/apache/bcel/generic/BREAKPOINT\n-  #101 = String             #349          // BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #102 = Methodref          #342.#350     // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #103 = Methodref          #17.#351      // org/apache/bcel/generic/InstructionList.getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #104 = Class              #352          // org/apache/bcel/generic/ReturnInstruction\n-  #105 = Class              #353          // org/apache/bcel/generic/RET\n-  #106 = Class              #354          // org/apache/bcel/generic/GotoInstruction\n-  #107 = Class              #355          // org/apache/bcel/generic/ATHROW\n-  #108 = String             #356          // Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n-  #109 = Class              #357          // org/apache/bcel/generic/ConstantPoolGen\n-  #110 = Methodref          #258.#358     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #111 = Methodref          #109.#359     // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #112 = Class              #360          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #113 = Methodref          #112.#361     // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #114 = Class              #362          // org/apache/bcel/generic/JsrInstruction\n-  #115 = Methodref          #114.#363     // org/apache/bcel/generic/JsrInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #116 = Class              #364          // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n-  #117 = String             #365          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n-  #118 = String             #366          // \\' as its target.\n-  #119 = Methodref          #116.#262     // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException.\"<init>\":(Ljava/lang/String;)V\n-  #120 = Class              #367          // org/apache/bcel/generic/ASTORE\n-  #121 = String             #368          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n-  #122 = String             #369          // \\' targets \\'\n-  #123 = Methodref          #342.#370     // org/apache/bcel/generic/InstructionHandle.accept:(Lorg/apache/bcel/generic/Visitor;)V\n-  #124 = Class              #371          // org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #125 = Class              #372          // org/apache/bcel/verifier/PassVerifier\n+   #89 = Class              #320          // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n+   #90 = String             #321          // Code array in code attribute \\'\n+   #91 = String             #322          // \\' too big: must be smaller than\n+   #92 = String             #323          // 65536 bytes.\n+   #93 = Methodref          #89.#250      // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #94 = Methodref          #17.#324      // org/apache/bcel/generic/InstructionList.getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #95 = Methodref          #216.#325     // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+   #96 = Class              #326          // org/apache/bcel/generic/IMPDEP1\n+   #97 = String             #327          // IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+   #98 = Class              #328          // org/apache/bcel/generic/IMPDEP2\n+   #99 = String             #329          // IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #100 = Class              #330          // org/apache/bcel/generic/BREAKPOINT\n+  #101 = String             #331          // BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #102 = Methodref          #216.#332     // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #103 = Methodref          #17.#333      // org/apache/bcel/generic/InstructionList.getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #104 = Class              #334          // org/apache/bcel/generic/ReturnInstruction\n+  #105 = Class              #335          // org/apache/bcel/generic/RET\n+  #106 = Class              #336          // org/apache/bcel/generic/GotoInstruction\n+  #107 = Class              #337          // org/apache/bcel/generic/ATHROW\n+  #108 = String             #338          // Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n+  #109 = Class              #339          // org/apache/bcel/generic/ConstantPoolGen\n+  #110 = Methodref          #164.#340     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #111 = Methodref          #109.#341     // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #112 = Class              #342          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n+  #113 = Methodref          #112.#343     // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #114 = Class              #344          // org/apache/bcel/generic/JsrInstruction\n+  #115 = Methodref          #114.#345     // org/apache/bcel/generic/JsrInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #116 = Class              #346          // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n+  #117 = String             #347          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n+  #118 = String             #348          // \\' as its target.\n+  #119 = Methodref          #116.#250     // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException.\"<init>\":(Ljava/lang/String;)V\n+  #120 = Class              #349          // org/apache/bcel/generic/ASTORE\n+  #121 = String             #350          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n+  #122 = String             #351          // \\' targets \\'\n+  #123 = Methodref          #216.#352     // org/apache/bcel/generic/InstructionHandle.accept:(Lorg/apache/bcel/generic/Visitor;)V\n+  #124 = Class              #353          // org/apache/bcel/verifier/statics/Pass3aVerifier\n+  #125 = Class              #354          // org/apache/bcel/verifier/PassVerifier\n   #126 = Utf8               InstOperandConstraintVisitor\n   #127 = Utf8               InnerClasses\n   #128 = Utf8               myOwner\n   #129 = Utf8               Lorg/apache/bcel/verifier/Verifier;\n   #130 = Utf8               method_no\n   #131 = Utf8               I\n   #132 = Utf8               instructionList\n@@ -167,297 +167,279 @@\n   #157 = Utf8               method\n   #158 = Utf8               Lorg/apache/bcel/classfile/Method;\n   #159 = Utf8               vr\n   #160 = Utf8               Lorg/apache/bcel/verifier/VerificationResult;\n   #161 = Utf8               e\n   #162 = Utf8               Ljava/lang/ClassNotFoundException;\n   #163 = Utf8               StackMapTable\n-  #164 = Class              #373          // org/apache/bcel/classfile/JavaClass\n+  #164 = Class              #355          // org/apache/bcel/classfile/JavaClass\n   #165 = Class              #156          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #166 = Class              #374          // org/apache/bcel/classfile/Method\n-  #167 = Class              #273          // java/lang/RuntimeException\n-  #168 = Class              #371          // org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #169 = Class              #274          // org/apache/bcel/verifier/VerificationResult\n-  #170 = Class              #284          // org/apache/bcel/verifier/exc/ClassConstraintException\n-  #171 = Class              #288          // org/apache/bcel/verifier/exc/StaticCodeConstraintException\n-  #172 = Class              #289          // java/lang/ClassCastException\n-  #173 = Class              #292          // java/lang/ClassNotFoundException\n-  #174 = Utf8               delayedPass2Checks\n-  #175 = Utf8               ()V\n-  #176 = Utf8               offset\n-  #177 = Utf8               instructionPosition\n-  #178 = Utf8               lineNumber\n-  #179 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n-  #180 = Utf8               lineNumbers\n-  #181 = Utf8               [Lorg/apache/bcel/classfile/LineNumber;\n-  #182 = Utf8               offsets\n-  #183 = Utf8               Lorg/apache/bcel/verifier/statics/IntList;\n-  #184 = Utf8               startpc\n-  #185 = Utf8               length\n-  #186 = Utf8               localVariable\n-  #187 = Utf8               Lorg/apache/bcel/classfile/LocalVariable;\n-  #188 = Utf8               lvt\n-  #189 = Utf8               Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #190 = Utf8               localVariables\n-  #191 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n-  #192 = Utf8               att\n-  #193 = Utf8               Lorg/apache/bcel/classfile/Attribute;\n-  #194 = Utf8               endpc\n-  #195 = Utf8               handlerpc\n-  #196 = Utf8               element\n-  #197 = Utf8               Lorg/apache/bcel/classfile/CodeException;\n-  #198 = Utf8               instructionPositions\n-  #199 = Utf8               [I\n-  #200 = Utf8               codeLength\n-  #201 = Utf8               lnt\n-  #202 = Utf8               Lorg/apache/bcel/classfile/LineNumberTable;\n-  #203 = Utf8               atts\n-  #204 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n-  #205 = Utf8               exceptionTable\n-  #206 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n-  #207 = Class              #199          // \"[I\"\n-  #208 = Class              #375          // org/apache/bcel/classfile/LineNumberTable\n-  #209 = Class              #181          // \"[Lorg/apache/bcel/classfile/LineNumber;\"\n-  #210 = Class              #300          // org/apache/bcel/verifier/statics/IntList\n-  #211 = Class              #376          // org/apache/bcel/classfile/LineNumber\n-  #212 = Class              #204          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n-  #213 = Class              #377          // org/apache/bcel/classfile/Attribute\n-  #214 = Class              #315          // org/apache/bcel/classfile/LocalVariableTable\n-  #215 = Class              #191          // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n-  #216 = Class              #378          // org/apache/bcel/classfile/LocalVariable\n-  #217 = Class              #206          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n-  #218 = Class              #379          // org/apache/bcel/classfile/CodeException\n-  #219 = Utf8               pass3StaticInstructionChecks\n-  #220 = Utf8               i\n-  #221 = Utf8               Lorg/apache/bcel/generic/Instruction;\n-  #222 = Utf8               ih\n-  #223 = Utf8               Lorg/apache/bcel/generic/InstructionHandle;\n-  #224 = Utf8               last\n-  #225 = Class              #380          // org/apache/bcel/generic/InstructionHandle\n-  #226 = Class              #381          // org/apache/bcel/generic/Instruction\n-  #227 = Utf8               pass3StaticInstructionOperandsChecks\n-  #228 = Utf8               target\n-  #229 = Utf8               cpg\n-  #230 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #231 = Utf8               v\n-  #232 = Utf8               Lorg/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor;\n-  #233 = Class              #357          // org/apache/bcel/generic/ConstantPoolGen\n-  #234 = Class              #360          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #235 = Utf8               contains\n-  #236 = Utf8               ([II)Z\n-  #237 = Utf8               k\n-  #238 = Utf8               ints\n-  #239 = Utf8               getMethodNo\n-  #240 = Utf8               ()I\n-  #241 = Utf8               access$000\n-  #242 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)Lorg/apache/bcel/verifier/Verifier;\n-  #243 = Utf8               x0\n-  #244 = Utf8               access$100\n-  #245 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)I\n-  #246 = Utf8               SourceFile\n-  #247 = Utf8               Pass3aVerifier.java\n-  #248 = NameAndType        #130:#131     // method_no:I\n-  #249 = NameAndType        #128:#129     // myOwner:Lorg/apache/bcel/verifier/Verifier;\n-  #250 = NameAndType        #136:#175     // \"<init>\":()V\n-  #251 = Class              #382          // org/apache/bcel/verifier/Verifier\n-  #252 = NameAndType        #383:#145     // doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n-  #253 = NameAndType        #384:#160     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-  #254 = NameAndType        #385:#386     // equals:(Ljava/lang/Object;)Z\n-  #255 = NameAndType        #387:#388     // getClassName:()Ljava/lang/String;\n-  #256 = Class              #389          // org/apache/bcel/Repository\n-  #257 = NameAndType        #390:#391     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #258 = Class              #373          // org/apache/bcel/classfile/JavaClass\n-  #259 = NameAndType        #392:#393     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #260 = Utf8               org/apache/bcel/verifier/exc/InvalidMethodException\n-  #261 = Utf8               METHOD DOES NOT EXIST!\n-  #262 = NameAndType        #136:#394     // \"<init>\":(Ljava/lang/String;)V\n-  #263 = Class              #374          // org/apache/bcel/classfile/Method\n-  #264 = NameAndType        #395:#396     // getCode:()Lorg/apache/bcel/classfile/Code;\n-  #265 = NameAndType        #134:#135     // code:Lorg/apache/bcel/classfile/Code;\n-  #266 = NameAndType        #397:#398     // isAbstract:()Z\n-  #267 = NameAndType        #399:#398     // isNative:()Z\n-  #268 = Utf8               org/apache/bcel/generic/InstructionList\n-  #269 = Class              #400          // org/apache/bcel/classfile/Code\n-  #270 = NameAndType        #395:#401     // getCode:()[B\n-  #271 = NameAndType        #136:#402     // \"<init>\":([B)V\n-  #272 = NameAndType        #132:#133     // instructionList:Lorg/apache/bcel/generic/InstructionList;\n-  #273 = Utf8               java/lang/RuntimeException\n-  #274 = Utf8               org/apache/bcel/verifier/VerificationResult\n-  #275 = Utf8               java/lang/StringBuilder\n-  #276 = Utf8               Bad bytecode in the code array of the Code attribute of method \\'\n-  #277 = NameAndType        #403:#404     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #278 = NameAndType        #403:#405     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #279 = Utf8               \\'.\n-  #280 = NameAndType        #406:#388     // toString:()Ljava/lang/String;\n-  #281 = NameAndType        #136:#407     // \"<init>\":(ILjava/lang/String;)V\n-  #282 = NameAndType        #408:#409     // setPositions:(Z)V\n-  #283 = NameAndType        #174:#175     // delayedPass2Checks:()V\n-  #284 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n-  #285 = NameAndType        #410:#388     // getMessage:()Ljava/lang/String;\n-  #286 = NameAndType        #219:#175     // pass3StaticInstructionChecks:()V\n-  #287 = NameAndType        #227:#175     // pass3StaticInstructionOperandsChecks:()V\n-  #288 = Utf8               org/apache/bcel/verifier/exc/StaticCodeConstraintException\n-  #289 = Utf8               java/lang/ClassCastException\n-  #290 = Utf8               Class Cast Exception:\n-  #291 = NameAndType        #411:#160     // VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n-  #292 = Utf8               java/lang/ClassNotFoundException\n-  #293 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #294 = Utf8               Missing class:\n-  #295 = NameAndType        #136:#412     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #296 = NameAndType        #413:#414     // getInstructionPositions:()[I\n-  #297 = NameAndType        #415:#416     // getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n-  #298 = Class              #375          // org/apache/bcel/classfile/LineNumberTable\n-  #299 = NameAndType        #415:#417     // getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n-  #300 = Utf8               org/apache/bcel/verifier/statics/IntList\n-  #301 = Class              #376          // org/apache/bcel/classfile/LineNumber\n-  #302 = NameAndType        #418:#240     // getStartPC:()I\n-  #303 = NameAndType        #235:#419     // contains:(I)Z\n-  #304 = Utf8               LineNumberTable attribute \\'\n-  #305 = Utf8               \\' refers to the same code offset (\\'\n-  #306 = NameAndType        #403:#420     // append:(I)Ljava/lang/StringBuilder;\n-  #307 = Utf8               \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n-  #308 = NameAndType        #421:#394     // addMessage:(Ljava/lang/String;)V\n-  #309 = NameAndType        #422:#423     // add:(I)V\n-  #310 = Utf8               Code attribute \\'\n-  #311 = Utf8               \\' has a LineNumberTable attribute \\'\n-  #312 = Utf8               \\' referring to a code offset (\\'\n-  #313 = Utf8               \\') that does not exist.\n-  #314 = NameAndType        #424:#425     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #315 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n-  #316 = NameAndType        #426:#427     // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-  #317 = Class              #378          // org/apache/bcel/classfile/LocalVariable\n-  #318 = NameAndType        #428:#240     // getLength:()I\n-  #319 = NameAndType        #235:#236     // contains:([II)Z\n-  #320 = Utf8               \\' has a LocalVariableTable attribute \\'\n-  #321 = NameAndType        #426:#429     // getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #322 = Utf8               \\' referring to a code offset start_pc+length (\\'\n-  #323 = NameAndType        #430:#431     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-  #324 = Class              #379          // org/apache/bcel/classfile/CodeException\n-  #325 = NameAndType        #432:#240     // getEndPC:()I\n-  #326 = NameAndType        #433:#240     // getHandlerPC:()I\n-  #327 = Utf8               \\' has an exception_table entry \\'\n-  #328 = Utf8               \\' that has its start_pc (\\'\n-  #329 = Utf8               \\') not smaller than its end_pc (\\'\n-  #330 = Utf8               \\').\n-  #331 = Utf8               \\' that has a non-existant bytecode offset as its start_pc (\\'\n-  #332 = Utf8               \\' that has a non-existant bytecode offset as its end_pc (\\'\n-  #333 = Utf8               \\') [that is also not equal to code_length (\\'\n-  #334 = Utf8               \\')].\n-  #335 = Utf8               \\' that has a non-existant bytecode offset as its handler_pc (\\'\n-  #336 = Utf8               org/apache/bcel/Const\n-  #337 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n-  #338 = Utf8               Code array in code attribute \\'\n-  #339 = Utf8               \\' too big: must be smaller than\n-  #340 = Utf8               65536 bytes.\n-  #341 = NameAndType        #434:#435     // getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #342 = Class              #380          // org/apache/bcel/generic/InstructionHandle\n-  #343 = NameAndType        #436:#437     // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-  #344 = Utf8               org/apache/bcel/generic/IMPDEP1\n-  #345 = Utf8               IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #346 = Utf8               org/apache/bcel/generic/IMPDEP2\n-  #347 = Utf8               IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #348 = Utf8               org/apache/bcel/generic/BREAKPOINT\n-  #349 = Utf8               BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #350 = NameAndType        #438:#435     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #351 = NameAndType        #439:#435     // getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #352 = Utf8               org/apache/bcel/generic/ReturnInstruction\n-  #353 = Utf8               org/apache/bcel/generic/RET\n-  #354 = Utf8               org/apache/bcel/generic/GotoInstruction\n-  #355 = Utf8               org/apache/bcel/generic/ATHROW\n-  #356 = Utf8               Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n-  #357 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #358 = NameAndType        #440:#441     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #359 = NameAndType        #136:#442     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #360 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #361 = NameAndType        #136:#443     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #362 = Utf8               org/apache/bcel/generic/JsrInstruction\n-  #363 = NameAndType        #444:#435     // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #364 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n-  #365 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n-  #366 = Utf8               \\' as its target.\n-  #367 = Utf8               org/apache/bcel/generic/ASTORE\n-  #368 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n-  #369 = Utf8               \\' targets \\'\n-  #370 = NameAndType        #445:#446     // accept:(Lorg/apache/bcel/generic/Visitor;)V\n-  #371 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #372 = Utf8               org/apache/bcel/verifier/PassVerifier\n-  #373 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #374 = Utf8               org/apache/bcel/classfile/Method\n-  #375 = Utf8               org/apache/bcel/classfile/LineNumberTable\n-  #376 = Utf8               org/apache/bcel/classfile/LineNumber\n-  #377 = Utf8               org/apache/bcel/classfile/Attribute\n-  #378 = Utf8               org/apache/bcel/classfile/LocalVariable\n-  #379 = Utf8               org/apache/bcel/classfile/CodeException\n-  #380 = Utf8               org/apache/bcel/generic/InstructionHandle\n-  #381 = Utf8               org/apache/bcel/generic/Instruction\n-  #382 = Utf8               org/apache/bcel/verifier/Verifier\n-  #383 = Utf8               doPass2\n-  #384 = Utf8               VR_OK\n-  #385 = Utf8               equals\n-  #386 = Utf8               (Ljava/lang/Object;)Z\n-  #387 = Utf8               getClassName\n-  #388 = Utf8               ()Ljava/lang/String;\n-  #389 = Utf8               org/apache/bcel/Repository\n-  #390 = Utf8               lookupClass\n-  #391 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #392 = Utf8               getMethods\n-  #393 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #394 = Utf8               (Ljava/lang/String;)V\n-  #395 = Utf8               getCode\n-  #396 = Utf8               ()Lorg/apache/bcel/classfile/Code;\n-  #397 = Utf8               isAbstract\n-  #398 = Utf8               ()Z\n-  #399 = Utf8               isNative\n-  #400 = Utf8               org/apache/bcel/classfile/Code\n-  #401 = Utf8               ()[B\n-  #402 = Utf8               ([B)V\n-  #403 = Utf8               append\n-  #404 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #405 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #406 = Utf8               toString\n-  #407 = Utf8               (ILjava/lang/String;)V\n-  #408 = Utf8               setPositions\n-  #409 = Utf8               (Z)V\n-  #410 = Utf8               getMessage\n-  #411 = Utf8               VR_NOTYET\n-  #412 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #413 = Utf8               getInstructionPositions\n-  #414 = Utf8               ()[I\n-  #415 = Utf8               getLineNumberTable\n-  #416 = Utf8               ()Lorg/apache/bcel/classfile/LineNumberTable;\n-  #417 = Utf8               ()[Lorg/apache/bcel/classfile/LineNumber;\n-  #418 = Utf8               getStartPC\n-  #419 = Utf8               (I)Z\n-  #420 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #421 = Utf8               addMessage\n-  #422 = Utf8               add\n-  #423 = Utf8               (I)V\n-  #424 = Utf8               getAttributes\n-  #425 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n-  #426 = Utf8               getLocalVariableTable\n-  #427 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n-  #428 = Utf8               getLength\n-  #429 = Utf8               ()Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #430 = Utf8               getExceptionTable\n-  #431 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n-  #432 = Utf8               getEndPC\n-  #433 = Utf8               getHandlerPC\n-  #434 = Utf8               getStart\n-  #435 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n-  #436 = Utf8               getInstruction\n-  #437 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n-  #438 = Utf8               getNext\n-  #439 = Utf8               getEnd\n-  #440 = Utf8               getConstantPool\n-  #441 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #442 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #443 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #444 = Utf8               getTarget\n-  #445 = Utf8               accept\n-  #446 = Utf8               (Lorg/apache/bcel/generic/Visitor;)V\n+  #166 = Class              #356          // org/apache/bcel/classfile/Method\n+  #167 = Utf8               delayedPass2Checks\n+  #168 = Utf8               ()V\n+  #169 = Utf8               offset\n+  #170 = Utf8               instructionPosition\n+  #171 = Utf8               lineNumber\n+  #172 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n+  #173 = Utf8               lineNumbers\n+  #174 = Utf8               [Lorg/apache/bcel/classfile/LineNumber;\n+  #175 = Utf8               offsets\n+  #176 = Utf8               Lorg/apache/bcel/verifier/statics/IntList;\n+  #177 = Utf8               startpc\n+  #178 = Utf8               length\n+  #179 = Utf8               localVariable\n+  #180 = Utf8               Lorg/apache/bcel/classfile/LocalVariable;\n+  #181 = Utf8               lvt\n+  #182 = Utf8               Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #183 = Utf8               localVariables\n+  #184 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n+  #185 = Utf8               att\n+  #186 = Utf8               Lorg/apache/bcel/classfile/Attribute;\n+  #187 = Utf8               endpc\n+  #188 = Utf8               handlerpc\n+  #189 = Utf8               element\n+  #190 = Utf8               Lorg/apache/bcel/classfile/CodeException;\n+  #191 = Utf8               instructionPositions\n+  #192 = Utf8               [I\n+  #193 = Utf8               codeLength\n+  #194 = Utf8               lnt\n+  #195 = Utf8               Lorg/apache/bcel/classfile/LineNumberTable;\n+  #196 = Utf8               atts\n+  #197 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n+  #198 = Utf8               exceptionTable\n+  #199 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n+  #200 = Class              #192          // \"[I\"\n+  #201 = Class              #357          // org/apache/bcel/classfile/LineNumberTable\n+  #202 = Class              #174          // \"[Lorg/apache/bcel/classfile/LineNumber;\"\n+  #203 = Class              #358          // org/apache/bcel/classfile/LineNumber\n+  #204 = Class              #197          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n+  #205 = Class              #359          // org/apache/bcel/classfile/Attribute\n+  #206 = Class              #184          // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n+  #207 = Class              #360          // org/apache/bcel/classfile/LocalVariable\n+  #208 = Class              #199          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n+  #209 = Class              #361          // org/apache/bcel/classfile/CodeException\n+  #210 = Utf8               pass3StaticInstructionChecks\n+  #211 = Utf8               i\n+  #212 = Utf8               Lorg/apache/bcel/generic/Instruction;\n+  #213 = Utf8               ih\n+  #214 = Utf8               Lorg/apache/bcel/generic/InstructionHandle;\n+  #215 = Utf8               last\n+  #216 = Class              #362          // org/apache/bcel/generic/InstructionHandle\n+  #217 = Class              #363          // org/apache/bcel/generic/Instruction\n+  #218 = Utf8               pass3StaticInstructionOperandsChecks\n+  #219 = Utf8               target\n+  #220 = Utf8               cpg\n+  #221 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #222 = Utf8               v\n+  #223 = Utf8               Lorg/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor;\n+  #224 = Utf8               contains\n+  #225 = Utf8               ([II)Z\n+  #226 = Utf8               k\n+  #227 = Utf8               ints\n+  #228 = Utf8               getMethodNo\n+  #229 = Utf8               ()I\n+  #230 = Utf8               access$000\n+  #231 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)Lorg/apache/bcel/verifier/Verifier;\n+  #232 = Utf8               x0\n+  #233 = Utf8               access$100\n+  #234 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)I\n+  #235 = Utf8               SourceFile\n+  #236 = Utf8               Pass3aVerifier.java\n+  #237 = NameAndType        #130:#131     // method_no:I\n+  #238 = NameAndType        #128:#129     // myOwner:Lorg/apache/bcel/verifier/Verifier;\n+  #239 = NameAndType        #136:#168     // \"<init>\":()V\n+  #240 = Class              #364          // org/apache/bcel/verifier/Verifier\n+  #241 = NameAndType        #365:#145     // doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n+  #242 = NameAndType        #366:#160     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+  #243 = NameAndType        #367:#368     // equals:(Ljava/lang/Object;)Z\n+  #244 = NameAndType        #369:#370     // getClassName:()Ljava/lang/String;\n+  #245 = Class              #371          // org/apache/bcel/Repository\n+  #246 = NameAndType        #372:#373     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #247 = NameAndType        #374:#375     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #248 = Utf8               org/apache/bcel/verifier/exc/InvalidMethodException\n+  #249 = Utf8               METHOD DOES NOT EXIST!\n+  #250 = NameAndType        #136:#376     // \"<init>\":(Ljava/lang/String;)V\n+  #251 = NameAndType        #377:#378     // getCode:()Lorg/apache/bcel/classfile/Code;\n+  #252 = NameAndType        #134:#135     // code:Lorg/apache/bcel/classfile/Code;\n+  #253 = NameAndType        #379:#380     // isAbstract:()Z\n+  #254 = NameAndType        #381:#380     // isNative:()Z\n+  #255 = Utf8               org/apache/bcel/generic/InstructionList\n+  #256 = Class              #382          // org/apache/bcel/classfile/Code\n+  #257 = NameAndType        #377:#383     // getCode:()[B\n+  #258 = NameAndType        #136:#384     // \"<init>\":([B)V\n+  #259 = NameAndType        #132:#133     // instructionList:Lorg/apache/bcel/generic/InstructionList;\n+  #260 = Utf8               java/lang/RuntimeException\n+  #261 = Utf8               org/apache/bcel/verifier/VerificationResult\n+  #262 = Utf8               java/lang/StringBuilder\n+  #263 = Utf8               Bad bytecode in the code array of the Code attribute of method \\'\n+  #264 = NameAndType        #385:#386     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #265 = NameAndType        #385:#387     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #266 = Utf8               \\'.\n+  #267 = NameAndType        #388:#370     // toString:()Ljava/lang/String;\n+  #268 = NameAndType        #136:#389     // \"<init>\":(ILjava/lang/String;)V\n+  #269 = NameAndType        #390:#391     // setPositions:(Z)V\n+  #270 = NameAndType        #167:#168     // delayedPass2Checks:()V\n+  #271 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n+  #272 = NameAndType        #392:#370     // getMessage:()Ljava/lang/String;\n+  #273 = NameAndType        #210:#168     // pass3StaticInstructionChecks:()V\n+  #274 = NameAndType        #218:#168     // pass3StaticInstructionOperandsChecks:()V\n+  #275 = Utf8               org/apache/bcel/verifier/exc/StaticCodeConstraintException\n+  #276 = Utf8               java/lang/ClassCastException\n+  #277 = Utf8               Class Cast Exception:\n+  #278 = NameAndType        #393:#160     // VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n+  #279 = Utf8               java/lang/ClassNotFoundException\n+  #280 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #281 = Utf8               Missing class:\n+  #282 = NameAndType        #136:#394     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #283 = NameAndType        #395:#396     // getInstructionPositions:()[I\n+  #284 = NameAndType        #397:#398     // getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n+  #285 = NameAndType        #397:#399     // getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n+  #286 = Utf8               org/apache/bcel/verifier/statics/IntList\n+  #287 = NameAndType        #400:#229     // getStartPC:()I\n+  #288 = NameAndType        #224:#401     // contains:(I)Z\n+  #289 = Utf8               LineNumberTable attribute \\'\n+  #290 = Utf8               \\' refers to the same code offset (\\'\n+  #291 = NameAndType        #385:#402     // append:(I)Ljava/lang/StringBuilder;\n+  #292 = Utf8               \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n+  #293 = NameAndType        #403:#376     // addMessage:(Ljava/lang/String;)V\n+  #294 = NameAndType        #404:#405     // add:(I)V\n+  #295 = Utf8               Code attribute \\'\n+  #296 = Utf8               \\' has a LineNumberTable attribute \\'\n+  #297 = Utf8               \\' referring to a code offset (\\'\n+  #298 = Utf8               \\') that does not exist.\n+  #299 = NameAndType        #406:#407     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #300 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n+  #301 = NameAndType        #408:#409     // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+  #302 = NameAndType        #410:#229     // getLength:()I\n+  #303 = NameAndType        #224:#225     // contains:([II)Z\n+  #304 = Utf8               \\' has a LocalVariableTable attribute \\'\n+  #305 = NameAndType        #408:#411     // getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #306 = Utf8               \\' referring to a code offset start_pc+length (\\'\n+  #307 = NameAndType        #412:#413     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+  #308 = NameAndType        #414:#229     // getEndPC:()I\n+  #309 = NameAndType        #415:#229     // getHandlerPC:()I\n+  #310 = Utf8               \\' has an exception_table entry \\'\n+  #311 = Utf8               \\' that has its start_pc (\\'\n+  #312 = Utf8               \\') not smaller than its end_pc (\\'\n+  #313 = Utf8               \\').\n+  #314 = Utf8               \\' that has a non-existant bytecode offset as its start_pc (\\'\n+  #315 = Utf8               \\' that has a non-existant bytecode offset as its end_pc (\\'\n+  #316 = Utf8               \\') [that is also not equal to code_length (\\'\n+  #317 = Utf8               \\')].\n+  #318 = Utf8               \\' that has a non-existant bytecode offset as its handler_pc (\\'\n+  #319 = Utf8               org/apache/bcel/Const\n+  #320 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n+  #321 = Utf8               Code array in code attribute \\'\n+  #322 = Utf8               \\' too big: must be smaller than\n+  #323 = Utf8               65536 bytes.\n+  #324 = NameAndType        #416:#417     // getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #325 = NameAndType        #418:#419     // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+  #326 = Utf8               org/apache/bcel/generic/IMPDEP1\n+  #327 = Utf8               IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #328 = Utf8               org/apache/bcel/generic/IMPDEP2\n+  #329 = Utf8               IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #330 = Utf8               org/apache/bcel/generic/BREAKPOINT\n+  #331 = Utf8               BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #332 = NameAndType        #420:#417     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #333 = NameAndType        #421:#417     // getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #334 = Utf8               org/apache/bcel/generic/ReturnInstruction\n+  #335 = Utf8               org/apache/bcel/generic/RET\n+  #336 = Utf8               org/apache/bcel/generic/GotoInstruction\n+  #337 = Utf8               org/apache/bcel/generic/ATHROW\n+  #338 = Utf8               Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n+  #339 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #340 = NameAndType        #422:#423     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #341 = NameAndType        #136:#424     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #342 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n+  #343 = NameAndType        #136:#425     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #344 = Utf8               org/apache/bcel/generic/JsrInstruction\n+  #345 = NameAndType        #426:#417     // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #346 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n+  #347 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n+  #348 = Utf8               \\' as its target.\n+  #349 = Utf8               org/apache/bcel/generic/ASTORE\n+  #350 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n+  #351 = Utf8               \\' targets \\'\n+  #352 = NameAndType        #427:#428     // accept:(Lorg/apache/bcel/generic/Visitor;)V\n+  #353 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier\n+  #354 = Utf8               org/apache/bcel/verifier/PassVerifier\n+  #355 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #356 = Utf8               org/apache/bcel/classfile/Method\n+  #357 = Utf8               org/apache/bcel/classfile/LineNumberTable\n+  #358 = Utf8               org/apache/bcel/classfile/LineNumber\n+  #359 = Utf8               org/apache/bcel/classfile/Attribute\n+  #360 = Utf8               org/apache/bcel/classfile/LocalVariable\n+  #361 = Utf8               org/apache/bcel/classfile/CodeException\n+  #362 = Utf8               org/apache/bcel/generic/InstructionHandle\n+  #363 = Utf8               org/apache/bcel/generic/Instruction\n+  #364 = Utf8               org/apache/bcel/verifier/Verifier\n+  #365 = Utf8               doPass2\n+  #366 = Utf8               VR_OK\n+  #367 = Utf8               equals\n+  #368 = Utf8               (Ljava/lang/Object;)Z\n+  #369 = Utf8               getClassName\n+  #370 = Utf8               ()Ljava/lang/String;\n+  #371 = Utf8               org/apache/bcel/Repository\n+  #372 = Utf8               lookupClass\n+  #373 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #374 = Utf8               getMethods\n+  #375 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #376 = Utf8               (Ljava/lang/String;)V\n+  #377 = Utf8               getCode\n+  #378 = Utf8               ()Lorg/apache/bcel/classfile/Code;\n+  #379 = Utf8               isAbstract\n+  #380 = Utf8               ()Z\n+  #381 = Utf8               isNative\n+  #382 = Utf8               org/apache/bcel/classfile/Code\n+  #383 = Utf8               ()[B\n+  #384 = Utf8               ([B)V\n+  #385 = Utf8               append\n+  #386 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #387 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #388 = Utf8               toString\n+  #389 = Utf8               (ILjava/lang/String;)V\n+  #390 = Utf8               setPositions\n+  #391 = Utf8               (Z)V\n+  #392 = Utf8               getMessage\n+  #393 = Utf8               VR_NOTYET\n+  #394 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #395 = Utf8               getInstructionPositions\n+  #396 = Utf8               ()[I\n+  #397 = Utf8               getLineNumberTable\n+  #398 = Utf8               ()Lorg/apache/bcel/classfile/LineNumberTable;\n+  #399 = Utf8               ()[Lorg/apache/bcel/classfile/LineNumber;\n+  #400 = Utf8               getStartPC\n+  #401 = Utf8               (I)Z\n+  #402 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #403 = Utf8               addMessage\n+  #404 = Utf8               add\n+  #405 = Utf8               (I)V\n+  #406 = Utf8               getAttributes\n+  #407 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n+  #408 = Utf8               getLocalVariableTable\n+  #409 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n+  #410 = Utf8               getLength\n+  #411 = Utf8               ()Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #412 = Utf8               getExceptionTable\n+  #413 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n+  #414 = Utf8               getEndPC\n+  #415 = Utf8               getHandlerPC\n+  #416 = Utf8               getStart\n+  #417 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n+  #418 = Utf8               getInstruction\n+  #419 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n+  #420 = Utf8               getNext\n+  #421 = Utf8               getEnd\n+  #422 = Utf8               getConstantPool\n+  #423 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #424 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #425 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #426 = Utf8               getTarget\n+  #427 = Utf8               accept\n+  #428 = Utf8               (Lorg/apache/bcel/generic/Visitor;)V\n {\n   private final org.apache.bcel.verifier.Verifier myOwner;\n     descriptor: Lorg/apache/bcel/verifier/Verifier;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int method_no;\n     descriptor: I\n"}]}
