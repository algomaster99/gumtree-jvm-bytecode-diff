{"diffoscope-json-version": 1, "source1": "first/LockableFileWriter.class", "source2": "second/LockableFileWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,73 +1,73 @@\n-  SHA-256 checksum b4e64e30d7b5da2c86c03421caf3631117b70ce495caef7b3368479394618eab\n+  SHA-256 checksum 40bd694946f5898df9c5fbaec913390e244ce537083e8389276f97d90d45abba\n   Compiled from \"LockableFileWriter.java\"\n public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/commons/io/output/LockableFileWriter\n   super_class: #56                        // java/io/Writer\n   interfaces: 0, fields: 3, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#125      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-    #2 = Class              #126          // java/io/File\n-    #3 = Methodref          #2.#127       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #23.#128      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-    #5 = Methodref          #129.#130     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #6 = Methodref          #23.#131      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-    #7 = Methodref          #23.#132      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-    #8 = Methodref          #56.#133      // java/io/Writer.\"<init>\":()V\n-    #9 = Methodref          #2.#134       // java/io/File.getAbsoluteFile:()Ljava/io/File;\n-   #10 = Methodref          #2.#135       // java/io/File.getParentFile:()Ljava/io/File;\n-   #11 = Methodref          #136.#137     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n-   #12 = Methodref          #2.#138       // java/io/File.isDirectory:()Z\n-   #13 = Class              #139          // java/io/IOException\n-   #14 = String             #140          // File specified is a directory\n-   #15 = Methodref          #13.#127      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = String             #141          // java.io.tmpdir\n-   #17 = Methodref          #142.#143     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #23.#144      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n-   #19 = Class              #145          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#133      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = Methodref          #2.#146       // java/io/File.getName:()Ljava/lang/String;\n-   #22 = Methodref          #19.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Class              #148          // org/apache/commons/io/output/LockableFileWriter\n-   #24 = String             #149          // .lck\n-   #25 = Methodref          #19.#150      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #2.#151       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #27 = Fieldref           #23.#152      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n-   #28 = Methodref          #23.#153      // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n-   #29 = Methodref          #23.#154      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-   #30 = Fieldref           #23.#155      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n-   #31 = Methodref          #156.#157     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #32 = Methodref          #2.#158       // java/io/File.exists:()Z\n-   #33 = String             #159          // Could not find lockDir:\n-   #34 = Methodref          #2.#160       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n-   #35 = Methodref          #2.#161       // java/io/File.canWrite:()Z\n-   #36 = String             #162          // Could not write to lockDir:\n-   #37 = Methodref          #2.#163       // java/io/File.createNewFile:()Z\n-   #38 = String             #164          // Can\\'t write file, lock\n-   #39 = String             #165          //  exists\n-   #40 = Methodref          #2.#166       // java/io/File.deleteOnExit:()V\n-   #41 = Class              #167          // java/io/OutputStreamWriter\n-   #42 = Class              #168          // java/io/FileOutputStream\n-   #43 = Methodref          #42.#169      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n-   #44 = Methodref          #156.#170     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #45 = Methodref          #41.#171      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #46 = Class              #172          // java/lang/RuntimeException\n-   #47 = Methodref          #136.#173     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n-   #48 = Methodref          #56.#174      // java/io/Writer.close:()V\n-   #49 = Methodref          #136.#175     // org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n-   #50 = Methodref          #56.#176      // java/io/Writer.write:(I)V\n-   #51 = Methodref          #56.#177      // java/io/Writer.write:([C)V\n-   #52 = Methodref          #56.#178      // java/io/Writer.write:([CII)V\n-   #53 = Methodref          #56.#179      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #54 = Methodref          #56.#180      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #55 = Methodref          #56.#181      // java/io/Writer.flush:()V\n-   #56 = Class              #182          // java/io/Writer\n+    #1 = Methodref          #23.#123      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+    #2 = Class              #124          // java/io/File\n+    #3 = Methodref          #2.#125       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #23.#126      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+    #5 = Methodref          #93.#127      // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #6 = Methodref          #23.#128      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+    #7 = Methodref          #23.#129      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+    #8 = Methodref          #56.#130      // java/io/Writer.\"<init>\":()V\n+    #9 = Methodref          #2.#131       // java/io/File.getAbsoluteFile:()Ljava/io/File;\n+   #10 = Methodref          #2.#132       // java/io/File.getParentFile:()Ljava/io/File;\n+   #11 = Methodref          #133.#134     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n+   #12 = Methodref          #2.#135       // java/io/File.isDirectory:()Z\n+   #13 = Class              #136          // java/io/IOException\n+   #14 = String             #137          // File specified is a directory\n+   #15 = Methodref          #13.#125      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = String             #138          // java.io.tmpdir\n+   #17 = Methodref          #139.#140     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #18 = Methodref          #23.#141      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n+   #19 = Class              #142          // java/lang/StringBuilder\n+   #20 = Methodref          #19.#130      // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = Methodref          #2.#143       // java/io/File.getName:()Ljava/lang/String;\n+   #22 = Methodref          #19.#144      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Class              #145          // org/apache/commons/io/output/LockableFileWriter\n+   #24 = String             #146          // .lck\n+   #25 = Methodref          #19.#147      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #26 = Methodref          #2.#148       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #27 = Fieldref           #23.#149      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n+   #28 = Methodref          #23.#150      // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n+   #29 = Methodref          #23.#151      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #30 = Fieldref           #23.#152      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n+   #31 = Methodref          #153.#154     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #32 = Methodref          #2.#155       // java/io/File.exists:()Z\n+   #33 = String             #156          // Could not find lockDir:\n+   #34 = Methodref          #2.#157       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n+   #35 = Methodref          #2.#158       // java/io/File.canWrite:()Z\n+   #36 = String             #159          // Could not write to lockDir:\n+   #37 = Methodref          #2.#160       // java/io/File.createNewFile:()Z\n+   #38 = String             #161          // Can\\'t write file, lock\n+   #39 = String             #162          //  exists\n+   #40 = Methodref          #2.#163       // java/io/File.deleteOnExit:()V\n+   #41 = Class              #164          // java/io/OutputStreamWriter\n+   #42 = Class              #165          // java/io/FileOutputStream\n+   #43 = Methodref          #42.#166      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+   #44 = Methodref          #153.#167     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #45 = Methodref          #41.#168      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #46 = Class              #169          // java/lang/RuntimeException\n+   #47 = Methodref          #133.#170     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+   #48 = Methodref          #56.#171      // java/io/Writer.close:()V\n+   #49 = Methodref          #133.#172     // org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n+   #50 = Methodref          #56.#173      // java/io/Writer.write:(I)V\n+   #51 = Methodref          #56.#174      // java/io/Writer.write:([C)V\n+   #52 = Methodref          #56.#175      // java/io/Writer.write:([CII)V\n+   #53 = Methodref          #56.#176      // java/io/Writer.write:(Ljava/lang/String;)V\n+   #54 = Methodref          #56.#177      // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #55 = Methodref          #56.#178      // java/io/Writer.flush:()V\n+   #56 = Class              #179          // java/io/Writer\n    #57 = Utf8               LCK\n    #58 = Utf8               Ljava/lang/String;\n    #59 = Utf8               ConstantValue\n    #60 = Utf8               out\n    #61 = Utf8               Ljava/io/Writer;\n    #62 = Utf8               lockFile\n    #63 = Utf8               Ljava/io/File;\n@@ -96,139 +96,136 @@\n    #86 = Utf8               charset\n    #87 = Utf8               Ljava/nio/charset/Charset;\n    #88 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n    #89 = Utf8               charsetName\n    #90 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n    #91 = Utf8               lockDirFile\n    #92 = Utf8               StackMapTable\n-   #93 = Class              #148          // org/apache/commons/io/output/LockableFileWriter\n-   #94 = Class              #126          // java/io/File\n-   #95 = Class              #183          // java/nio/charset/Charset\n-   #96 = Class              #184          // java/lang/String\n-   #97 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-   #98 = Utf8               testLockDir\n-   #99 = Utf8               createLock\n-  #100 = Utf8               ()V\n-  #101 = Class              #185          // java/lang/Object\n-  #102 = Class              #186          // java/lang/Throwable\n-  #103 = Utf8               initWriter\n-  #104 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-  #105 = Utf8               ex\n-  #106 = Utf8               Ljava/lang/Exception;\n-  #107 = Utf8               fileExistedAlready\n-  #108 = Class              #187          // java/lang/Exception\n-  #109 = Utf8               close\n-  #110 = Utf8               write\n-  #111 = Utf8               (I)V\n-  #112 = Utf8               c\n-  #113 = Utf8               I\n-  #114 = Utf8               ([C)V\n-  #115 = Utf8               cbuf\n-  #116 = Utf8               [C\n-  #117 = Utf8               ([CII)V\n-  #118 = Utf8               off\n-  #119 = Utf8               len\n-  #120 = Utf8               str\n-  #121 = Utf8               (Ljava/lang/String;II)V\n-  #122 = Utf8               flush\n-  #123 = Utf8               SourceFile\n-  #124 = Utf8               LockableFileWriter.java\n-  #125 = NameAndType        #64:#76       // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-  #126 = Utf8               java/io/File\n-  #127 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;)V\n-  #128 = NameAndType        #64:#81       // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-  #129 = Class              #183          // java/nio/charset/Charset\n-  #130 = NameAndType        #188:#189     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #131 = NameAndType        #64:#90       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-  #132 = NameAndType        #64:#97       // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-  #133 = NameAndType        #64:#100      // \"<init>\":()V\n-  #134 = NameAndType        #190:#191     // getAbsoluteFile:()Ljava/io/File;\n-  #135 = NameAndType        #192:#191     // getParentFile:()Ljava/io/File;\n-  #136 = Class              #193          // org/apache/commons/io/FileUtils\n-  #137 = NameAndType        #194:#78      // forceMkdir:(Ljava/io/File;)V\n-  #138 = NameAndType        #195:#196     // isDirectory:()Z\n-  #139 = Utf8               java/io/IOException\n-  #140 = Utf8               File specified is a directory\n-  #141 = Utf8               java.io.tmpdir\n-  #142 = Class              #197          // java/lang/System\n-  #143 = NameAndType        #198:#199     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #144 = NameAndType        #98:#78       // testLockDir:(Ljava/io/File;)V\n-  #145 = Utf8               java/lang/StringBuilder\n-  #146 = NameAndType        #200:#201     // getName:()Ljava/lang/String;\n-  #147 = NameAndType        #74:#202      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = Utf8               org/apache/commons/io/output/LockableFileWriter\n-  #149 = Utf8               .lck\n-  #150 = NameAndType        #203:#201     // toString:()Ljava/lang/String;\n-  #151 = NameAndType        #64:#88       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #152 = NameAndType        #62:#63       // lockFile:Ljava/io/File;\n-  #153 = NameAndType        #99:#100      // createLock:()V\n-  #154 = NameAndType        #103:#104     // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-  #155 = NameAndType        #60:#61       // out:Ljava/io/Writer;\n-  #156 = Class              #204          // org/apache/commons/io/Charsets\n-  #157 = NameAndType        #205:#206     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #158 = NameAndType        #207:#196     // exists:()Z\n-  #159 = Utf8               Could not find lockDir:\n-  #160 = NameAndType        #208:#201     // getAbsolutePath:()Ljava/lang/String;\n-  #161 = NameAndType        #209:#196     // canWrite:()Z\n-  #162 = Utf8               Could not write to lockDir:\n-  #163 = NameAndType        #210:#196     // createNewFile:()Z\n-  #164 = Utf8               Can\\'t write file, lock\n-  #165 = Utf8                exists\n-  #166 = NameAndType        #211:#100     // deleteOnExit:()V\n-  #167 = Utf8               java/io/OutputStreamWriter\n-  #168 = Utf8               java/io/FileOutputStream\n-  #169 = NameAndType        #64:#73       // \"<init>\":(Ljava/lang/String;Z)V\n-  #170 = NameAndType        #205:#212     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #171 = NameAndType        #64:#213      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #172 = Utf8               java/lang/RuntimeException\n-  #173 = NameAndType        #214:#215     // deleteQuietly:(Ljava/io/File;)Z\n-  #174 = NameAndType        #109:#100     // close:()V\n-  #175 = NameAndType        #216:#217     // delete:(Ljava/io/File;)Ljava/io/File;\n-  #176 = NameAndType        #110:#111     // write:(I)V\n-  #177 = NameAndType        #110:#114     // write:([C)V\n-  #178 = NameAndType        #110:#117     // write:([CII)V\n-  #179 = NameAndType        #110:#65      // write:(Ljava/lang/String;)V\n-  #180 = NameAndType        #110:#121     // write:(Ljava/lang/String;II)V\n-  #181 = NameAndType        #122:#100     // flush:()V\n-  #182 = Utf8               java/io/Writer\n-  #183 = Utf8               java/nio/charset/Charset\n-  #184 = Utf8               java/lang/String\n-  #185 = Utf8               java/lang/Object\n-  #186 = Utf8               java/lang/Throwable\n-  #187 = Utf8               java/lang/Exception\n-  #188 = Utf8               defaultCharset\n-  #189 = Utf8               ()Ljava/nio/charset/Charset;\n-  #190 = Utf8               getAbsoluteFile\n-  #191 = Utf8               ()Ljava/io/File;\n-  #192 = Utf8               getParentFile\n-  #193 = Utf8               org/apache/commons/io/FileUtils\n-  #194 = Utf8               forceMkdir\n-  #195 = Utf8               isDirectory\n-  #196 = Utf8               ()Z\n-  #197 = Utf8               java/lang/System\n-  #198 = Utf8               getProperty\n-  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #200 = Utf8               getName\n-  #201 = Utf8               ()Ljava/lang/String;\n-  #202 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #203 = Utf8               toString\n-  #204 = Utf8               org/apache/commons/io/Charsets\n-  #205 = Utf8               toCharset\n-  #206 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #207 = Utf8               exists\n-  #208 = Utf8               getAbsolutePath\n-  #209 = Utf8               canWrite\n-  #210 = Utf8               createNewFile\n-  #211 = Utf8               deleteOnExit\n-  #212 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #213 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #214 = Utf8               deleteQuietly\n-  #215 = Utf8               (Ljava/io/File;)Z\n-  #216 = Utf8               delete\n-  #217 = Utf8               (Ljava/io/File;)Ljava/io/File;\n+   #93 = Class              #180          // java/nio/charset/Charset\n+   #94 = Class              #181          // java/lang/String\n+   #95 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+   #96 = Utf8               testLockDir\n+   #97 = Utf8               createLock\n+   #98 = Utf8               ()V\n+   #99 = Class              #182          // java/lang/Object\n+  #100 = Class              #183          // java/lang/Throwable\n+  #101 = Utf8               initWriter\n+  #102 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+  #103 = Utf8               ex\n+  #104 = Utf8               Ljava/lang/Exception;\n+  #105 = Utf8               fileExistedAlready\n+  #106 = Class              #184          // java/lang/Exception\n+  #107 = Utf8               close\n+  #108 = Utf8               write\n+  #109 = Utf8               (I)V\n+  #110 = Utf8               c\n+  #111 = Utf8               I\n+  #112 = Utf8               ([C)V\n+  #113 = Utf8               cbuf\n+  #114 = Utf8               [C\n+  #115 = Utf8               ([CII)V\n+  #116 = Utf8               off\n+  #117 = Utf8               len\n+  #118 = Utf8               str\n+  #119 = Utf8               (Ljava/lang/String;II)V\n+  #120 = Utf8               flush\n+  #121 = Utf8               SourceFile\n+  #122 = Utf8               LockableFileWriter.java\n+  #123 = NameAndType        #64:#76       // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+  #124 = Utf8               java/io/File\n+  #125 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;)V\n+  #126 = NameAndType        #64:#81       // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+  #127 = NameAndType        #185:#186     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #128 = NameAndType        #64:#90       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+  #129 = NameAndType        #64:#95       // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+  #130 = NameAndType        #64:#98       // \"<init>\":()V\n+  #131 = NameAndType        #187:#188     // getAbsoluteFile:()Ljava/io/File;\n+  #132 = NameAndType        #189:#188     // getParentFile:()Ljava/io/File;\n+  #133 = Class              #190          // org/apache/commons/io/FileUtils\n+  #134 = NameAndType        #191:#78      // forceMkdir:(Ljava/io/File;)V\n+  #135 = NameAndType        #192:#193     // isDirectory:()Z\n+  #136 = Utf8               java/io/IOException\n+  #137 = Utf8               File specified is a directory\n+  #138 = Utf8               java.io.tmpdir\n+  #139 = Class              #194          // java/lang/System\n+  #140 = NameAndType        #195:#196     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #141 = NameAndType        #96:#78       // testLockDir:(Ljava/io/File;)V\n+  #142 = Utf8               java/lang/StringBuilder\n+  #143 = NameAndType        #197:#198     // getName:()Ljava/lang/String;\n+  #144 = NameAndType        #74:#199      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #145 = Utf8               org/apache/commons/io/output/LockableFileWriter\n+  #146 = Utf8               .lck\n+  #147 = NameAndType        #200:#198     // toString:()Ljava/lang/String;\n+  #148 = NameAndType        #64:#88       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #149 = NameAndType        #62:#63       // lockFile:Ljava/io/File;\n+  #150 = NameAndType        #97:#98       // createLock:()V\n+  #151 = NameAndType        #101:#102     // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+  #152 = NameAndType        #60:#61       // out:Ljava/io/Writer;\n+  #153 = Class              #201          // org/apache/commons/io/Charsets\n+  #154 = NameAndType        #202:#203     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #155 = NameAndType        #204:#193     // exists:()Z\n+  #156 = Utf8               Could not find lockDir:\n+  #157 = NameAndType        #205:#198     // getAbsolutePath:()Ljava/lang/String;\n+  #158 = NameAndType        #206:#193     // canWrite:()Z\n+  #159 = Utf8               Could not write to lockDir:\n+  #160 = NameAndType        #207:#193     // createNewFile:()Z\n+  #161 = Utf8               Can\\'t write file, lock\n+  #162 = Utf8                exists\n+  #163 = NameAndType        #208:#98      // deleteOnExit:()V\n+  #164 = Utf8               java/io/OutputStreamWriter\n+  #165 = Utf8               java/io/FileOutputStream\n+  #166 = NameAndType        #64:#73       // \"<init>\":(Ljava/lang/String;Z)V\n+  #167 = NameAndType        #202:#209     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #168 = NameAndType        #64:#210      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #169 = Utf8               java/lang/RuntimeException\n+  #170 = NameAndType        #211:#212     // deleteQuietly:(Ljava/io/File;)Z\n+  #171 = NameAndType        #107:#98      // close:()V\n+  #172 = NameAndType        #213:#214     // delete:(Ljava/io/File;)Ljava/io/File;\n+  #173 = NameAndType        #108:#109     // write:(I)V\n+  #174 = NameAndType        #108:#112     // write:([C)V\n+  #175 = NameAndType        #108:#115     // write:([CII)V\n+  #176 = NameAndType        #108:#65      // write:(Ljava/lang/String;)V\n+  #177 = NameAndType        #108:#119     // write:(Ljava/lang/String;II)V\n+  #178 = NameAndType        #120:#98      // flush:()V\n+  #179 = Utf8               java/io/Writer\n+  #180 = Utf8               java/nio/charset/Charset\n+  #181 = Utf8               java/lang/String\n+  #182 = Utf8               java/lang/Object\n+  #183 = Utf8               java/lang/Throwable\n+  #184 = Utf8               java/lang/Exception\n+  #185 = Utf8               defaultCharset\n+  #186 = Utf8               ()Ljava/nio/charset/Charset;\n+  #187 = Utf8               getAbsoluteFile\n+  #188 = Utf8               ()Ljava/io/File;\n+  #189 = Utf8               getParentFile\n+  #190 = Utf8               org/apache/commons/io/FileUtils\n+  #191 = Utf8               forceMkdir\n+  #192 = Utf8               isDirectory\n+  #193 = Utf8               ()Z\n+  #194 = Utf8               java/lang/System\n+  #195 = Utf8               getProperty\n+  #196 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #197 = Utf8               getName\n+  #198 = Utf8               ()Ljava/lang/String;\n+  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #200 = Utf8               toString\n+  #201 = Utf8               org/apache/commons/io/Charsets\n+  #202 = Utf8               toCharset\n+  #203 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #204 = Utf8               exists\n+  #205 = Utf8               getAbsolutePath\n+  #206 = Utf8               canWrite\n+  #207 = Utf8               createNewFile\n+  #208 = Utf8               deleteOnExit\n+  #209 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #210 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #211 = Utf8               deleteQuietly\n+  #212 = Utf8               (Ljava/io/File;)Z\n+  #213 = Utf8               delete\n+  #214 = Utf8               (Ljava/io/File;)Ljava/io/File;\n {\n   private static final java.lang.String LCK = \".lck\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String .lck\n \n   private final java.io.Writer out;\n"}]}
