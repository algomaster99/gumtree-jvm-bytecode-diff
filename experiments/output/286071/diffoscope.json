{"diffoscope-json-version": 1, "source1": "first/Base16.class", "source2": "second/Base16.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum 44508bf3df60a6c14c84b09ccd976001e9a89926068205dd54a0ed828c91e19b\n+  SHA-256 checksum 9d95086ab20bfa47cf91cbdb0dde80e6dd2b5b25b813f6d28c4b6aa525d8efe4\n   Compiled from \"Base16.java\"\n public class org.apache.commons.codec.binary.Base16 extends org.apache.commons.codec.binary.BaseNCodec\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #4                          // org/apache/commons/codec/binary/Base16\n   super_class: #5                         // org/apache/commons/codec/binary/BaseNCodec\n   interfaces: 0, fields: 10, methods: 9, attributes: 2\n Constant pool:\n-    #1 = Methodref          #4.#72        // org/apache/commons/codec/binary/Base16.\"<init>\":(Z)V\n-    #2 = Fieldref           #4.#73        // org/apache/commons/codec/binary/Base16.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-    #3 = Methodref          #4.#74        // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-    #4 = Class              #75           // org/apache/commons/codec/binary/Base16\n-    #5 = Class              #76           // org/apache/commons/codec/binary/BaseNCodec\n-    #6 = Methodref          #5.#77        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-    #7 = Fieldref           #4.#78        // org/apache/commons/codec/binary/Base16.LOWER_CASE_ENCODE_TABLE:[B\n-    #8 = Fieldref           #4.#79        // org/apache/commons/codec/binary/Base16.encodeTable:[B\n-    #9 = Fieldref           #4.#80        // org/apache/commons/codec/binary/Base16.LOWER_CASE_DECODE_TABLE:[B\n-   #10 = Fieldref           #4.#81        // org/apache/commons/codec/binary/Base16.decodeTable:[B\n-   #11 = Fieldref           #4.#82        // org/apache/commons/codec/binary/Base16.UPPER_CASE_ENCODE_TABLE:[B\n-   #12 = Fieldref           #4.#83        // org/apache/commons/codec/binary/Base16.UPPER_CASE_DECODE_TABLE:[B\n-   #13 = Fieldref           #58.#84       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #14 = Fieldref           #58.#85       // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n-   #15 = Methodref          #4.#86        // org/apache/commons/codec/binary/Base16.validateTrailingCharacter:()V\n-   #16 = Methodref          #87.#88       // java/lang/Math.min:(II)I\n-   #17 = Methodref          #4.#89        // org/apache/commons/codec/binary/Base16.decodeOctet:(B)I\n-   #18 = Methodref          #4.#90        // org/apache/commons/codec/binary/Base16.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #19 = Fieldref           #58.#91       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #20 = Class              #92           // java/lang/IllegalArgumentException\n-   #21 = Class              #93           // java/lang/StringBuilder\n-   #22 = Methodref          #21.#94       // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #95           // Invalid octet in encoded value:\n-   #24 = Methodref          #21.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#97       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #21.#98       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #27 = Methodref          #20.#99       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #28 = String             #100          // Input length exceeds maximum size for encoded data:\n-   #29 = Methodref          #4.#101       // org/apache/commons/codec/binary/Base16.isStrictDecoding:()Z\n-   #30 = String             #102          // Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n+    #1 = Methodref          #4.#71        // org/apache/commons/codec/binary/Base16.\"<init>\":(Z)V\n+    #2 = Fieldref           #4.#72        // org/apache/commons/codec/binary/Base16.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+    #3 = Methodref          #4.#73        // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+    #4 = Class              #74           // org/apache/commons/codec/binary/Base16\n+    #5 = Class              #75           // org/apache/commons/codec/binary/BaseNCodec\n+    #6 = Methodref          #5.#76        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+    #7 = Fieldref           #4.#77        // org/apache/commons/codec/binary/Base16.LOWER_CASE_ENCODE_TABLE:[B\n+    #8 = Fieldref           #4.#78        // org/apache/commons/codec/binary/Base16.encodeTable:[B\n+    #9 = Fieldref           #4.#79        // org/apache/commons/codec/binary/Base16.LOWER_CASE_DECODE_TABLE:[B\n+   #10 = Fieldref           #4.#80        // org/apache/commons/codec/binary/Base16.decodeTable:[B\n+   #11 = Fieldref           #4.#81        // org/apache/commons/codec/binary/Base16.UPPER_CASE_ENCODE_TABLE:[B\n+   #12 = Fieldref           #4.#82        // org/apache/commons/codec/binary/Base16.UPPER_CASE_DECODE_TABLE:[B\n+   #13 = Fieldref           #57.#83       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #14 = Fieldref           #57.#84       // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+   #15 = Methodref          #4.#85        // org/apache/commons/codec/binary/Base16.validateTrailingCharacter:()V\n+   #16 = Methodref          #86.#87       // java/lang/Math.min:(II)I\n+   #17 = Methodref          #4.#88        // org/apache/commons/codec/binary/Base16.decodeOctet:(B)I\n+   #18 = Methodref          #4.#89        // org/apache/commons/codec/binary/Base16.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #19 = Fieldref           #57.#90       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #20 = Class              #91           // java/lang/IllegalArgumentException\n+   #21 = Class              #92           // java/lang/StringBuilder\n+   #22 = Methodref          #21.#93       // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #94           // Invalid octet in encoded value:\n+   #24 = Methodref          #21.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #21.#96       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #26 = Methodref          #21.#97       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #27 = Methodref          #20.#98       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #28 = String             #99           // Input length exceeds maximum size for encoded data:\n+   #29 = Methodref          #4.#100       // org/apache/commons/codec/binary/Base16.isStrictDecoding:()Z\n+   #30 = String             #101          // Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n    #31 = Utf8               BITS_PER_ENCODED_BYTE\n    #32 = Utf8               I\n    #33 = Utf8               ConstantValue\n    #34 = Integer            4\n    #35 = Utf8               BYTES_PER_ENCODED_BLOCK\n    #36 = Integer            2\n    #37 = Utf8               BYTES_PER_UNENCODED_BLOCK\n@@ -58,84 +58,83 @@\n    #48 = Utf8               <init>\n    #49 = Utf8               ()V\n    #50 = Utf8               Code\n    #51 = Utf8               LineNumberTable\n    #52 = Utf8               (Z)V\n    #53 = Utf8               (ZLorg/apache/commons/codec/CodecPolicy;)V\n    #54 = Utf8               StackMapTable\n-   #55 = Class              #75           // org/apache/commons/codec/binary/Base16\n-   #56 = Class              #103          // org/apache/commons/codec/CodecPolicy\n-   #57 = Utf8               decode\n-   #58 = Class              #104          // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #59 = Utf8               Context\n-   #60 = Utf8               InnerClasses\n-   #61 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #62 = Class              #40           // \"[B\"\n-   #63 = Utf8               decodeOctet\n-   #64 = Utf8               (B)I\n-   #65 = Utf8               encode\n-   #66 = Utf8               isInAlphabet\n-   #67 = Utf8               (B)Z\n-   #68 = Utf8               validateTrailingCharacter\n-   #69 = Utf8               <clinit>\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               Base16.java\n-   #72 = NameAndType        #48:#52       // \"<init>\":(Z)V\n-   #73 = NameAndType        #105:#106     // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-   #74 = NameAndType        #48:#53       // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-   #75 = Utf8               org/apache/commons/codec/binary/Base16\n-   #76 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #77 = NameAndType        #48:#107      // \"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-   #78 = NameAndType        #43:#40       // LOWER_CASE_ENCODE_TABLE:[B\n-   #79 = NameAndType        #47:#40       // encodeTable:[B\n-   #80 = NameAndType        #42:#40       // LOWER_CASE_DECODE_TABLE:[B\n-   #81 = NameAndType        #46:#40       // decodeTable:[B\n-   #82 = NameAndType        #41:#40       // UPPER_CASE_ENCODE_TABLE:[B\n-   #83 = NameAndType        #39:#40       // UPPER_CASE_DECODE_TABLE:[B\n-   #84 = NameAndType        #108:#109     // eof:Z\n-   #85 = NameAndType        #110:#32      // ibitWorkArea:I\n-   #86 = NameAndType        #68:#49       // validateTrailingCharacter:()V\n-   #87 = Class              #111          // java/lang/Math\n-   #88 = NameAndType        #112:#113     // min:(II)I\n-   #89 = NameAndType        #63:#64       // decodeOctet:(B)I\n-   #90 = NameAndType        #114:#115     // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #91 = NameAndType        #116:#32      // pos:I\n-   #92 = Utf8               java/lang/IllegalArgumentException\n-   #93 = Utf8               java/lang/StringBuilder\n-   #94 = NameAndType        #48:#49       // \"<init>\":()V\n-   #95 = Utf8               Invalid octet in encoded value:\n-   #96 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #117:#119     // append:(I)Ljava/lang/StringBuilder;\n-   #98 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n-   #99 = NameAndType        #48:#122      // \"<init>\":(Ljava/lang/String;)V\n-  #100 = Utf8               Input length exceeds maximum size for encoded data:\n-  #101 = NameAndType        #123:#124     // isStrictDecoding:()Z\n-  #102 = Utf8               Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n-  #103 = Utf8               org/apache/commons/codec/CodecPolicy\n-  #104 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #105 = Utf8               DECODING_POLICY_DEFAULT\n-  #106 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n-  #107 = Utf8               (IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-  #108 = Utf8               eof\n-  #109 = Utf8               Z\n-  #110 = Utf8               ibitWorkArea\n-  #111 = Utf8               java/lang/Math\n-  #112 = Utf8               min\n-  #113 = Utf8               (II)I\n-  #114 = Utf8               ensureBufferSize\n-  #115 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #116 = Utf8               pos\n-  #117 = Utf8               append\n-  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #119 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #120 = Utf8               toString\n-  #121 = Utf8               ()Ljava/lang/String;\n-  #122 = Utf8               (Ljava/lang/String;)V\n-  #123 = Utf8               isStrictDecoding\n-  #124 = Utf8               ()Z\n+   #55 = Class              #102          // org/apache/commons/codec/CodecPolicy\n+   #56 = Utf8               decode\n+   #57 = Class              #103          // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #58 = Utf8               Context\n+   #59 = Utf8               InnerClasses\n+   #60 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #61 = Class              #40           // \"[B\"\n+   #62 = Utf8               decodeOctet\n+   #63 = Utf8               (B)I\n+   #64 = Utf8               encode\n+   #65 = Utf8               isInAlphabet\n+   #66 = Utf8               (B)Z\n+   #67 = Utf8               validateTrailingCharacter\n+   #68 = Utf8               <clinit>\n+   #69 = Utf8               SourceFile\n+   #70 = Utf8               Base16.java\n+   #71 = NameAndType        #48:#52       // \"<init>\":(Z)V\n+   #72 = NameAndType        #104:#105     // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+   #73 = NameAndType        #48:#53       // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+   #74 = Utf8               org/apache/commons/codec/binary/Base16\n+   #75 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+   #76 = NameAndType        #48:#106      // \"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+   #77 = NameAndType        #43:#40       // LOWER_CASE_ENCODE_TABLE:[B\n+   #78 = NameAndType        #47:#40       // encodeTable:[B\n+   #79 = NameAndType        #42:#40       // LOWER_CASE_DECODE_TABLE:[B\n+   #80 = NameAndType        #46:#40       // decodeTable:[B\n+   #81 = NameAndType        #41:#40       // UPPER_CASE_ENCODE_TABLE:[B\n+   #82 = NameAndType        #39:#40       // UPPER_CASE_DECODE_TABLE:[B\n+   #83 = NameAndType        #107:#108     // eof:Z\n+   #84 = NameAndType        #109:#32      // ibitWorkArea:I\n+   #85 = NameAndType        #67:#49       // validateTrailingCharacter:()V\n+   #86 = Class              #110          // java/lang/Math\n+   #87 = NameAndType        #111:#112     // min:(II)I\n+   #88 = NameAndType        #62:#63       // decodeOctet:(B)I\n+   #89 = NameAndType        #113:#114     // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #90 = NameAndType        #115:#32      // pos:I\n+   #91 = Utf8               java/lang/IllegalArgumentException\n+   #92 = Utf8               java/lang/StringBuilder\n+   #93 = NameAndType        #48:#49       // \"<init>\":()V\n+   #94 = Utf8               Invalid octet in encoded value:\n+   #95 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #116:#118     // append:(I)Ljava/lang/StringBuilder;\n+   #97 = NameAndType        #119:#120     // toString:()Ljava/lang/String;\n+   #98 = NameAndType        #48:#121      // \"<init>\":(Ljava/lang/String;)V\n+   #99 = Utf8               Input length exceeds maximum size for encoded data:\n+  #100 = NameAndType        #122:#123     // isStrictDecoding:()Z\n+  #101 = Utf8               Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n+  #102 = Utf8               org/apache/commons/codec/CodecPolicy\n+  #103 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+  #104 = Utf8               DECODING_POLICY_DEFAULT\n+  #105 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n+  #106 = Utf8               (IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+  #107 = Utf8               eof\n+  #108 = Utf8               Z\n+  #109 = Utf8               ibitWorkArea\n+  #110 = Utf8               java/lang/Math\n+  #111 = Utf8               min\n+  #112 = Utf8               (II)I\n+  #113 = Utf8               ensureBufferSize\n+  #114 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #115 = Utf8               pos\n+  #116 = Utf8               append\n+  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #118 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #119 = Utf8               toString\n+  #120 = Utf8               ()Ljava/lang/String;\n+  #121 = Utf8               (Ljava/lang/String;)V\n+  #122 = Utf8               isStrictDecoding\n+  #123 = Utf8               ()Z\n {\n   private static final int BITS_PER_ENCODED_BYTE = 4;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 4\n \n   private static final int BYTES_PER_ENCODED_BLOCK = 2;\n@@ -1520,8 +1519,8 @@\n         line 60: 0\n         line 73: 366\n         line 83: 463\n         line 98: 989\n }\n SourceFile: \"Base16.java\"\n InnerClasses:\n-  static #59= #58 of #5;                  // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #58= #57 of #5;                  // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
