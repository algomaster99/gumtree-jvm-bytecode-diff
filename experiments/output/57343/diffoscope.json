{"diffoscope-json-version": 1, "source1": "first/WriterOutputStream.class", "source2": "second/WriterOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -115,26 +115,25 @@\n         }\n     }\n     \n     private static void checkIbmJdkWithBrokenUTF16(final Charset charset) {\n         if (!\"UTF-16\".equals(charset.name())) {\n             return;\n         }\n-        final String TEST_STRING_2 = \"v\\u00e9s\";\n         final byte[] bytes = \"v\\u00e9s\".getBytes(charset);\n         final CharsetDecoder charsetDecoder2 = charset.newDecoder();\n         final ByteBuffer bb2 = ByteBuffer.allocate(16);\n         final CharBuffer cb2 = CharBuffer.allocate(\"v\\u00e9s\".length());\n         for (int len = bytes.length, i = 0; i < len; ++i) {\n             bb2.put(bytes[i]);\n             bb2.flip();\n             try {\n                 charsetDecoder2.decode(bb2, cb2, i == len - 1);\n             }\n-            catch (final IllegalArgumentException e) {\n+            catch (final IllegalArgumentException ex) {\n                 throw new UnsupportedOperationException(\"UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\");\n             }\n             bb2.compact();\n         }\n         cb2.rewind();\n         if (!\"v\\u00e9s\".equals(cb2.toString())) {\n             throw new UnsupportedOperationException(\"UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\");\n"}]}
