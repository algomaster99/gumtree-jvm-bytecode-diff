{"diffoscope-json-version": 1, "source1": "first/ThresholdCircuitBreaker.class", "source2": "second/ThresholdCircuitBreaker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum 5e7f3092359a4d0aa1d2293a21dfba61714317f9a69bd8e31d5e56f00832033e\n+  SHA-256 checksum 8db43bdad28d62b286ff936ad4dd8959a41ce1c6cd61e42332bcdeadf46fe9f3\n   Compiled from \"ThresholdCircuitBreaker.java\"\n public class org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker extends org.apache.commons.lang3.concurrent.AbstractCircuitBreaker<java.lang.Long>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n-  super_class: #16                        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+  this_class: #1                          // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n+  super_class: #3                         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n   interfaces: 0, fields: 3, methods: 6, attributes: 2\n Constant pool:\n-   #1 = Methodref          #16.#48        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.\"<init>\":()V\n-   #2 = Class              #49            // java/util/concurrent/atomic/AtomicLong\n-   #3 = Class              #50            // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n-   #4 = Methodref          #2.#51         // java/util/concurrent/atomic/AtomicLong.\"<init>\":(J)V\n-   #5 = Fieldref           #3.#52         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.used:Ljava/util/concurrent/atomic/AtomicLong;\n-   #6 = Fieldref           #3.#53         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.threshold:J\n-   #7 = Methodref          #3.#54         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.isOpen:()Z\n-   #8 = Methodref          #16.#55        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.close:()V\n-   #9 = Methodref          #2.#56         // java/util/concurrent/atomic/AtomicLong.set:(J)V\n-  #10 = Methodref          #3.#57         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.open:()V\n-  #11 = Methodref          #14.#58        // java/lang/Long.longValue:()J\n-  #12 = Methodref          #2.#59         // java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J\n-  #13 = Methodref          #3.#60         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.checkState:()Z\n-  #14 = Class              #61            // java/lang/Long\n-  #15 = Methodref          #3.#62         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.incrementAndCheckState:(Ljava/lang/Long;)Z\n-  #16 = Class              #63            // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-  #17 = Utf8               INITIAL_COUNT\n-  #18 = Utf8               J\n-  #19 = Utf8               ConstantValue\n-  #20 = Long               0l\n-  #22 = Utf8               threshold\n-  #23 = Utf8               used\n-  #24 = Utf8               Ljava/util/concurrent/atomic/AtomicLong;\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (J)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               LocalVariableTable\n-  #30 = Utf8               this\n-  #31 = Utf8               Lorg/apache/commons/lang3/concurrent/ThresholdCircuitBreaker;\n-  #32 = Utf8               getThreshold\n-  #33 = Utf8               ()J\n-  #34 = Utf8               checkState\n-  #35 = Utf8               ()Z\n-  #36 = Utf8               close\n-  #37 = Utf8               ()V\n-  #38 = Utf8               incrementAndCheckState\n-  #39 = Utf8               (Ljava/lang/Long;)Z\n-  #40 = Utf8               increment\n-  #41 = Utf8               Ljava/lang/Long;\n-  #42 = Utf8               StackMapTable\n-  #43 = Utf8               (Ljava/lang/Object;)Z\n-  #44 = Utf8               Signature\n-  #45 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<Ljava/lang/Long;>;\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               ThresholdCircuitBreaker.java\n-  #48 = NameAndType        #25:#37        // \"<init>\":()V\n-  #49 = Utf8               java/util/concurrent/atomic/AtomicLong\n-  #50 = Utf8               org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n-  #51 = NameAndType        #25:#26        // \"<init>\":(J)V\n-  #52 = NameAndType        #23:#24        // used:Ljava/util/concurrent/atomic/AtomicLong;\n-  #53 = NameAndType        #22:#18        // threshold:J\n-  #54 = NameAndType        #64:#35        // isOpen:()Z\n-  #55 = NameAndType        #36:#37        // close:()V\n-  #56 = NameAndType        #65:#26        // set:(J)V\n-  #57 = NameAndType        #66:#37        // open:()V\n-  #58 = NameAndType        #67:#33        // longValue:()J\n-  #59 = NameAndType        #68:#69        // addAndGet:(J)J\n-  #60 = NameAndType        #34:#35        // checkState:()Z\n-  #61 = Utf8               java/lang/Long\n-  #62 = NameAndType        #38:#39        // incrementAndCheckState:(Ljava/lang/Long;)Z\n-  #63 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-  #64 = Utf8               isOpen\n-  #65 = Utf8               set\n-  #66 = Utf8               open\n-  #67 = Utf8               longValue\n-  #68 = Utf8               addAndGet\n-  #69 = Utf8               (J)J\n+   #1 = Class              #2             // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n+   #2 = Utf8               org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker\n+   #3 = Class              #4             // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+   #4 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+   #5 = Utf8               INITIAL_COUNT\n+   #6 = Utf8               J\n+   #7 = Utf8               ConstantValue\n+   #8 = Long               0l\n+  #10 = Utf8               threshold\n+  #11 = Utf8               used\n+  #12 = Utf8               Ljava/util/concurrent/atomic/AtomicLong;\n+  #13 = Utf8               <init>\n+  #14 = Utf8               (J)V\n+  #15 = Utf8               Code\n+  #16 = Methodref          #3.#17         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.\"<init>\":()V\n+  #17 = NameAndType        #13:#18        // \"<init>\":()V\n+  #18 = Utf8               ()V\n+  #19 = Class              #20            // java/util/concurrent/atomic/AtomicLong\n+  #20 = Utf8               java/util/concurrent/atomic/AtomicLong\n+  #21 = Methodref          #19.#22        // java/util/concurrent/atomic/AtomicLong.\"<init>\":(J)V\n+  #22 = NameAndType        #13:#14        // \"<init>\":(J)V\n+  #23 = Fieldref           #1.#24         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.used:Ljava/util/concurrent/atomic/AtomicLong;\n+  #24 = NameAndType        #11:#12        // used:Ljava/util/concurrent/atomic/AtomicLong;\n+  #25 = Fieldref           #1.#26         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.threshold:J\n+  #26 = NameAndType        #10:#6         // threshold:J\n+  #27 = Utf8               LineNumberTable\n+  #28 = Utf8               LocalVariableTable\n+  #29 = Utf8               this\n+  #30 = Utf8               Lorg/apache/commons/lang3/concurrent/ThresholdCircuitBreaker;\n+  #31 = Utf8               getThreshold\n+  #32 = Utf8               ()J\n+  #33 = Utf8               checkState\n+  #34 = Utf8               ()Z\n+  #35 = Methodref          #1.#36         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.isOpen:()Z\n+  #36 = NameAndType        #37:#34        // isOpen:()Z\n+  #37 = Utf8               isOpen\n+  #38 = Utf8               close\n+  #39 = Methodref          #3.#40         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.close:()V\n+  #40 = NameAndType        #38:#18        // close:()V\n+  #41 = Methodref          #19.#42        // java/util/concurrent/atomic/AtomicLong.set:(J)V\n+  #42 = NameAndType        #43:#14        // set:(J)V\n+  #43 = Utf8               set\n+  #44 = Utf8               incrementAndCheckState\n+  #45 = Utf8               (Ljava/lang/Long;)Z\n+  #46 = Methodref          #1.#47         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.open:()V\n+  #47 = NameAndType        #48:#18        // open:()V\n+  #48 = Utf8               open\n+  #49 = Methodref          #50.#52        // java/lang/Long.longValue:()J\n+  #50 = Class              #51            // java/lang/Long\n+  #51 = Utf8               java/lang/Long\n+  #52 = NameAndType        #53:#32        // longValue:()J\n+  #53 = Utf8               longValue\n+  #54 = Methodref          #19.#55        // java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J\n+  #55 = NameAndType        #56:#57        // addAndGet:(J)J\n+  #56 = Utf8               addAndGet\n+  #57 = Utf8               (J)J\n+  #58 = Methodref          #1.#59         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.checkState:()Z\n+  #59 = NameAndType        #33:#34        // checkState:()Z\n+  #60 = Utf8               increment\n+  #61 = Utf8               Ljava/lang/Long;\n+  #62 = Utf8               StackMapTable\n+  #63 = Utf8               (Ljava/lang/Object;)Z\n+  #64 = Methodref          #1.#65         // org/apache/commons/lang3/concurrent/ThresholdCircuitBreaker.incrementAndCheckState:(Ljava/lang/Long;)Z\n+  #65 = NameAndType        #44:#45        // incrementAndCheckState:(Ljava/lang/Long;)Z\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               ThresholdCircuitBreaker.java\n+  #68 = Utf8               Signature\n+  #69 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<Ljava/lang/Long;>;\n {\n   private static final long INITIAL_COUNT = 0l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 0l\n \n   private final long threshold;\n@@ -92,24 +92,24 @@\n \n   public org.apache.commons.lang3.concurrent.ThresholdCircuitBreaker(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.\"<init>\":()V\n+         1: invokespecial #16                 // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/concurrent/atomic/AtomicLong\n+         5: new           #19                 // class java/util/concurrent/atomic/AtomicLong\n          8: dup\n          9: lconst_0\n-        10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong.\"<init>\":(J)V\n-        13: putfield      #5                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n+        10: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicLong.\"<init>\":(J)V\n+        13: putfield      #23                 // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n         16: aload_0\n         17: lload_1\n-        18: putfield      #6                  // Field threshold:J\n+        18: putfield      #25                 // Field threshold:J\n         21: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 4\n         line 78: 16\n         line 79: 21\n       LocalVariableTable:\n@@ -119,47 +119,47 @@\n \n   public long getThreshold();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field threshold:J\n+         1: getfield      #25                 // Field threshold:J\n          4: lreturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/concurrent/ThresholdCircuitBreaker;\n \n   public boolean checkState();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #7                  // Method isOpen:()Z\n+         1: invokevirtual #35                 // Method isOpen:()Z\n          4: ireturn\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/concurrent/ThresholdCircuitBreaker;\n \n   public void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.close:()V\n+         1: invokespecial #39                 // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.close:()V\n          4: aload_0\n-         5: getfield      #5                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n+         5: getfield      #23                 // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n          8: lconst_0\n-         9: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.set:(J)V\n+         9: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V\n         12: return\n       LineNumberTable:\n         line 105: 0\n         line 106: 4\n         line 107: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -167,35 +167,35 @@\n \n   public boolean incrementAndCheckState(java.lang.Long);\n     descriptor: (Ljava/lang/Long;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field threshold:J\n+         1: getfield      #25                 // Field threshold:J\n          4: lconst_0\n          5: lcmp\n          6: ifne          13\n          9: aload_0\n-        10: invokevirtual #10                 // Method open:()V\n+        10: invokevirtual #46                 // Method open:()V\n         13: aload_0\n-        14: getfield      #5                  // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n+        14: getfield      #23                 // Field used:Ljava/util/concurrent/atomic/AtomicLong;\n         17: aload_1\n-        18: invokevirtual #11                 // Method java/lang/Long.longValue:()J\n-        21: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J\n+        18: invokevirtual #49                 // Method java/lang/Long.longValue:()J\n+        21: invokevirtual #54                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J\n         24: lstore_2\n         25: lload_2\n         26: aload_0\n-        27: getfield      #6                  // Field threshold:J\n+        27: getfield      #25                 // Field threshold:J\n         30: lcmp\n         31: ifle          38\n         34: aload_0\n-        35: invokevirtual #10                 // Method open:()V\n+        35: invokevirtual #46                 // Method open:()V\n         38: aload_0\n-        39: invokevirtual #13                 // Method checkState:()Z\n+        39: invokevirtual #58                 // Method checkState:()Z\n         42: ireturn\n       LineNumberTable:\n         line 116: 0\n         line 117: 9\n         line 120: 13\n         line 121: 25\n         line 122: 34\n@@ -214,18 +214,17 @@\n   public boolean incrementAndCheckState(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #14                 // class java/lang/Long\n-         5: invokevirtual #15                 // Method incrementAndCheckState:(Ljava/lang/Long;)Z\n+         2: checkcast     #50                 // class java/lang/Long\n+         5: invokevirtual #64                 // Method incrementAndCheckState:(Ljava/lang/Long;)Z\n          8: ireturn\n       LineNumberTable:\n-        line 54: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/lang3/concurrent/ThresholdCircuitBreaker;\n }\n-Signature: #45                          // Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<Ljava/lang/Long;>;\n SourceFile: \"ThresholdCircuitBreaker.java\"\n+Signature: #69                          // Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<Ljava/lang/Long;>;\n"}]}
