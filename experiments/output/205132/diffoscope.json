{"diffoscope-json-version": 1, "source1": "first/CombinedLocationStrategy.class", "source2": "second/CombinedLocationStrategy.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,31 +7,32 @@\n import java.util.ArrayList;\n import java.util.Collection;\n \n public class CombinedLocationStrategy implements FileLocationStrategy\n {\n     private final Collection<FileLocationStrategy> subStrategies;\n     \n-    public CombinedLocationStrategy(final Collection<? extends FileLocationStrategy> subs) {\n-        if (subs == null) {\n+    public CombinedLocationStrategy(final Collection<? extends FileLocationStrategy> c) {\n+        if (c == null) {\n             throw new IllegalArgumentException(\"Collection with sub strategies must not be null!\");\n         }\n-        this.subStrategies = Collections.unmodifiableCollection((Collection<? extends FileLocationStrategy>)new ArrayList<FileLocationStrategy>(subs));\n+        this.subStrategies = Collections.unmodifiableCollection((Collection<? extends FileLocationStrategy>)new ArrayList<FileLocationStrategy>(c));\n         if (this.subStrategies.contains(null)) {\n             throw new IllegalArgumentException(\"Collection with sub strategies contains null entry!\");\n         }\n     }\n     \n     public Collection<FileLocationStrategy> getSubStrategies() {\n         return this.subStrategies;\n     }\n     \n-    public URL locate(final FileSystem fileSystem, final FileLocator locator) {\n-        for (final FileLocationStrategy sub : this.getSubStrategies()) {\n-            final URL url = sub.locate(fileSystem, locator);\n-            if (url != null) {\n-                return url;\n+    public URL locate(final FileSystem fileSystem, final FileLocator fileLocator) {\n+        final Iterator<FileLocationStrategy> iterator = this.getSubStrategies().iterator();\n+        while (iterator.hasNext()) {\n+            final URL locate = ((FileLocationStrategy)iterator.next()).locate(fileSystem, fileLocator);\n+            if (locate != null) {\n+                return locate;\n             }\n         }\n         return null;\n     }\n }\n"}]}
