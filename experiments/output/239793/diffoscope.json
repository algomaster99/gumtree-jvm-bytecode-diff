{"diffoscope-json-version": 1, "source1": "first/FastTimeZone.class", "source2": "second/FastTimeZone.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,44 +10,44 @@\n     private static final Pattern GMT_PATTERN;\n     private static final TimeZone GREENWICH;\n     \n     public static TimeZone getGmtTimeZone() {\n         return FastTimeZone.GREENWICH;\n     }\n     \n-    public static TimeZone getGmtTimeZone(final String pattern) {\n-        if (\"Z\".equals(pattern) || \"UTC\".equals(pattern)) {\n+    public static TimeZone getGmtTimeZone(final String input) {\n+        if (\"Z\".equals(input) || \"UTC\".equals(input)) {\n             return FastTimeZone.GREENWICH;\n         }\n-        final Matcher m = FastTimeZone.GMT_PATTERN.matcher(pattern);\n-        if (!m.matches()) {\n+        final Matcher matcher = FastTimeZone.GMT_PATTERN.matcher(input);\n+        if (!matcher.matches()) {\n             return null;\n         }\n-        final int hours = parseInt(m.group(2));\n-        final int minutes = parseInt(m.group(4));\n-        if (hours == 0 && minutes == 0) {\n+        final int int1 = parseInt(matcher.group(2));\n+        final int int2 = parseInt(matcher.group(4));\n+        if (int1 == 0 && int2 == 0) {\n             return FastTimeZone.GREENWICH;\n         }\n-        return (TimeZone)new GmtTimeZone(parseSign(m.group(1)), hours, minutes);\n+        return (TimeZone)new GmtTimeZone(parseSign(matcher.group(1)), int1, int2);\n     }\n     \n     public static TimeZone getTimeZone(final String id) {\n-        final TimeZone tz = getGmtTimeZone(id);\n-        if (tz != null) {\n-            return tz;\n+        final TimeZone gmtTimeZone = getGmtTimeZone(id);\n+        if (gmtTimeZone != null) {\n+            return gmtTimeZone;\n         }\n         return TimeZone.getTimeZone(id);\n     }\n     \n-    private static int parseInt(final String group) {\n-        return (group != null) ? Integer.parseInt(group) : 0;\n+    private static int parseInt(final String s) {\n+        return (s != null) ? Integer.parseInt(s) : 0;\n     }\n     \n-    private static boolean parseSign(final String group) {\n-        return group != null && group.charAt(0) == '-';\n+    private static boolean parseSign(final String s) {\n+        return s != null && s.charAt(0) == '-';\n     }\n     \n     private FastTimeZone() {\n     }\n     \n     static {\n         GMT_PATTERN = Pattern.compile(\"^(?:(?i)GMT)?([+-])?(\\\\d\\\\d?)?(:?(\\\\d\\\\d?))?$\");\n"}]}
