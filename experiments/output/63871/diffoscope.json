{"diffoscope-json-version": 1, "source1": "first/B64.class", "source2": "second/B64.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,14 +5,18 @@\n import java.security.SecureRandom;\n \n class B64\n {\n     static final String B64T_STRING = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n     static final char[] B64T_ARRAY;\n     \n+    static {\n+        B64T_ARRAY = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".toCharArray();\n+    }\n+    \n     static void b64from24bit(final byte b2, final byte b1, final byte b0, final int outLen, final StringBuilder buffer) {\n         int w = (b2 << 16 & 0xFFFFFF) | (b1 << 8 & 0xFFFF) | (b0 & 0xFF);\n         int n = outLen;\n         while (n-- > 0) {\n             buffer.append(B64.B64T_ARRAY[w & 0x3F]);\n             w >>= 6;\n         }\n@@ -25,12 +29,8 @@\n     static String getRandomSalt(final int num, final Random random) {\n         final StringBuilder saltString = new StringBuilder(num);\n         for (int i = 1; i <= num; ++i) {\n             saltString.append(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".charAt(random.nextInt(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".length())));\n         }\n         return saltString.toString();\n     }\n-    \n-    static {\n-        B64T_ARRAY = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".toCharArray();\n-    }\n }\n"}]}
