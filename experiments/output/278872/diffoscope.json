{"diffoscope-json-version": 1, "source1": "first/Pack200.class", "source2": "second/Pack200.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,22 +5,24 @@\n import org.apache.commons.compress.harmony.archive.internal.nls.Messages;\n \n public abstract class Pack200\n {\n     private static final String SYSTEM_PROPERTY_PACKER = \"java.util.jar.Pack200.Packer\";\n     private static final String SYSTEM_PROPERTY_UNPACKER = \"java.util.jar.Pack200.Unpacker\";\n     \n-    static Object newInstance(final String systemProperty, final String defaultClassName) {\n+    static Object newInstance(final String s, final String s2) {\n         return AccessController.doPrivileged(() -> {\n-            final String className = System.getProperty(systemProperty, defaultClassName);\n+            System.getProperty(key, def);\n             try {\n-                return Pack200.class.getClassLoader().loadClass(className).newInstance();\n+                final String name;\n+                return Pack200.class.getClassLoader().loadClass(name).newInstance();\n             }\n-            catch (final Exception e) {\n-                throw new Error(Messages.getString(\"archive.3E\", className), e);\n+            catch (final Exception cause) {\n+                final String name;\n+                throw new Error(Messages.getString(\"archive.3E\", name), cause);\n             }\n         });\n     }\n     \n     public static Pack200.Packer newPacker() {\n         return (Pack200.Packer)newInstance(\"java.util.jar.Pack200.Packer\", \"org.apache.commons.compress.harmony.pack200.Pack200PackerAdapter\");\n     }\n"}]}
