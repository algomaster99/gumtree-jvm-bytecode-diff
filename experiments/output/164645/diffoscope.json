{"diffoscope-json-version": 1, "source1": "first/XZCompressorInputStream.class", "source2": "second/XZCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,44 +1,44 @@\n-  SHA-256 checksum e2db8357dc2e5b85d6454dedfa6a920ac9371373769c06683ef1dc092028b32f\n+  SHA-256 checksum 2da9204191e23a025f4879785a1d30557dc30bd7e9dac27bc851be223e463d7a\n   Compiled from \"XZCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.xz.XZCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #25                         // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n   super_class: #26                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #78.#79       // org/tukaani/xz/XZ.HEADER_MAGIC:[B\n-    #2 = Methodref          #25.#80       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #3 = Methodref          #25.#81       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n-    #4 = Methodref          #26.#82       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #5 = Class              #83           // org/apache/commons/compress/utils/CountingInputStream\n-    #6 = Methodref          #5.#84        // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #7 = Fieldref           #25.#85       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-    #8 = Class              #86           // org/tukaani/xz/XZInputStream\n-    #9 = Methodref          #8.#87        // org/tukaani/xz/XZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #10 = Fieldref           #25.#88       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.in:Ljava/io/InputStream;\n-   #11 = Class              #89           // org/tukaani/xz/SingleXZInputStream\n-   #12 = Methodref          #11.#87       // org/tukaani/xz/SingleXZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #13 = Methodref          #90.#91       // java/io/InputStream.read:()I\n-   #14 = Methodref          #25.#92       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.count:(I)V\n-   #15 = Class              #93           // org/tukaani/xz/MemoryLimitException\n-   #16 = Class              #94           // org/apache/commons/compress/MemoryLimitException\n-   #17 = Methodref          #15.#95       // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n-   #18 = Methodref          #15.#96       // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n-   #19 = Methodref          #16.#97       // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n-   #20 = Methodref          #90.#98       // java/io/InputStream.read:([BII)I\n-   #21 = Methodref          #99.#100      // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #22 = Methodref          #90.#101      // java/io/InputStream.available:()I\n-   #23 = Methodref          #90.#102      // java/io/InputStream.close:()V\n-   #24 = Methodref          #5.#103       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #25 = Class              #104          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #26 = Class              #105          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #27 = Class              #106          // org/apache/commons/compress/utils/InputStreamStatistics\n+    #1 = Fieldref           #76.#77       // org/tukaani/xz/XZ.HEADER_MAGIC:[B\n+    #2 = Methodref          #25.#78       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #3 = Methodref          #25.#79       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ZI)V\n+    #4 = Methodref          #26.#80       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #5 = Class              #81           // org/apache/commons/compress/utils/CountingInputStream\n+    #6 = Methodref          #5.#82        // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #7 = Fieldref           #25.#83       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+    #8 = Class              #84           // org/tukaani/xz/XZInputStream\n+    #9 = Methodref          #8.#85        // org/tukaani/xz/XZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #10 = Fieldref           #25.#86       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.in:Ljava/io/InputStream;\n+   #11 = Class              #87           // org/tukaani/xz/SingleXZInputStream\n+   #12 = Methodref          #11.#85       // org/tukaani/xz/SingleXZInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #13 = Methodref          #55.#88       // java/io/InputStream.read:()I\n+   #14 = Methodref          #25.#89       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.count:(I)V\n+   #15 = Class              #90           // org/tukaani/xz/MemoryLimitException\n+   #16 = Class              #91           // org/apache/commons/compress/MemoryLimitException\n+   #17 = Methodref          #15.#92       // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n+   #18 = Methodref          #15.#93       // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n+   #19 = Methodref          #16.#94       // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n+   #20 = Methodref          #55.#95       // java/io/InputStream.read:([BII)I\n+   #21 = Methodref          #96.#97       // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #22 = Methodref          #55.#98       // java/io/InputStream.available:()I\n+   #23 = Methodref          #55.#99       // java/io/InputStream.close:()V\n+   #24 = Methodref          #5.#100       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #25 = Class              #101          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+   #26 = Class              #102          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #27 = Class              #103          // org/apache/commons/compress/utils/InputStreamStatistics\n    #28 = Utf8               countingStream\n    #29 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n    #30 = Utf8               in\n    #31 = Utf8               Ljava/io/InputStream;\n    #32 = Utf8               matches\n    #33 = Utf8               ([BI)Z\n    #34 = Utf8               Code\n@@ -52,85 +52,82 @@\n    #42 = Utf8               StackMapTable\n    #43 = Utf8               <init>\n    #44 = Utf8               (Ljava/io/InputStream;)V\n    #45 = Utf8               this\n    #46 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZCompressorInputStream;\n    #47 = Utf8               inputStream\n    #48 = Utf8               Exceptions\n-   #49 = Class              #107          // java/io/IOException\n+   #49 = Class              #104          // java/io/IOException\n    #50 = Utf8               (Ljava/io/InputStream;Z)V\n    #51 = Utf8               decompressConcatenated\n    #52 = Utf8               Z\n    #53 = Utf8               (Ljava/io/InputStream;ZI)V\n    #54 = Utf8               memoryLimitInKb\n-   #55 = Class              #104          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #56 = Class              #108          // java/io/InputStream\n-   #57 = Utf8               read\n-   #58 = Utf8               ()I\n-   #59 = Utf8               ret\n-   #60 = Utf8               e\n-   #61 = Utf8               Lorg/tukaani/xz/MemoryLimitException;\n-   #62 = Class              #93           // org/tukaani/xz/MemoryLimitException\n-   #63 = Utf8               ([BII)I\n-   #64 = Utf8               buf\n-   #65 = Utf8               off\n-   #66 = Utf8               len\n-   #67 = Utf8               skip\n-   #68 = Utf8               (J)J\n-   #69 = Utf8               n\n-   #70 = Utf8               J\n-   #71 = Utf8               available\n-   #72 = Utf8               close\n-   #73 = Utf8               ()V\n-   #74 = Utf8               getCompressedCount\n-   #75 = Utf8               ()J\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               XZCompressorInputStream.java\n-   #78 = Class              #109          // org/tukaani/xz/XZ\n-   #79 = NameAndType        #110:#40      // HEADER_MAGIC:[B\n-   #80 = NameAndType        #43:#50       // \"<init>\":(Ljava/io/InputStream;Z)V\n-   #81 = NameAndType        #43:#53       // \"<init>\":(Ljava/io/InputStream;ZI)V\n-   #82 = NameAndType        #43:#73       // \"<init>\":()V\n-   #83 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #84 = NameAndType        #43:#44       // \"<init>\":(Ljava/io/InputStream;)V\n-   #85 = NameAndType        #28:#29       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #86 = Utf8               org/tukaani/xz/XZInputStream\n-   #87 = NameAndType        #43:#111      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #88 = NameAndType        #30:#31       // in:Ljava/io/InputStream;\n-   #89 = Utf8               org/tukaani/xz/SingleXZInputStream\n-   #90 = Class              #108          // java/io/InputStream\n-   #91 = NameAndType        #57:#58       // read:()I\n-   #92 = NameAndType        #112:#113     // count:(I)V\n-   #93 = Utf8               org/tukaani/xz/MemoryLimitException\n-   #94 = Utf8               org/apache/commons/compress/MemoryLimitException\n-   #95 = NameAndType        #114:#58      // getMemoryNeeded:()I\n-   #96 = NameAndType        #115:#58      // getMemoryLimit:()I\n-   #97 = NameAndType        #43:#116      // \"<init>\":(JILjava/lang/Exception;)V\n-   #98 = NameAndType        #57:#63       // read:([BII)I\n-   #99 = Class              #117          // org/apache/commons/compress/utils/IOUtils\n-  #100 = NameAndType        #67:#118      // skip:(Ljava/io/InputStream;J)J\n-  #101 = NameAndType        #71:#58       // available:()I\n-  #102 = NameAndType        #72:#73       // close:()V\n-  #103 = NameAndType        #119:#75      // getBytesRead:()J\n-  #104 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-  #105 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #106 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #107 = Utf8               java/io/IOException\n-  #108 = Utf8               java/io/InputStream\n-  #109 = Utf8               org/tukaani/xz/XZ\n-  #110 = Utf8               HEADER_MAGIC\n-  #111 = Utf8               (Ljava/io/InputStream;I)V\n-  #112 = Utf8               count\n-  #113 = Utf8               (I)V\n-  #114 = Utf8               getMemoryNeeded\n-  #115 = Utf8               getMemoryLimit\n-  #116 = Utf8               (JILjava/lang/Exception;)V\n-  #117 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #118 = Utf8               (Ljava/io/InputStream;J)J\n-  #119 = Utf8               getBytesRead\n+   #55 = Class              #105          // java/io/InputStream\n+   #56 = Utf8               read\n+   #57 = Utf8               ()I\n+   #58 = Utf8               ret\n+   #59 = Utf8               e\n+   #60 = Utf8               Lorg/tukaani/xz/MemoryLimitException;\n+   #61 = Utf8               ([BII)I\n+   #62 = Utf8               buf\n+   #63 = Utf8               off\n+   #64 = Utf8               len\n+   #65 = Utf8               skip\n+   #66 = Utf8               (J)J\n+   #67 = Utf8               n\n+   #68 = Utf8               J\n+   #69 = Utf8               available\n+   #70 = Utf8               close\n+   #71 = Utf8               ()V\n+   #72 = Utf8               getCompressedCount\n+   #73 = Utf8               ()J\n+   #74 = Utf8               SourceFile\n+   #75 = Utf8               XZCompressorInputStream.java\n+   #76 = Class              #106          // org/tukaani/xz/XZ\n+   #77 = NameAndType        #107:#40      // HEADER_MAGIC:[B\n+   #78 = NameAndType        #43:#50       // \"<init>\":(Ljava/io/InputStream;Z)V\n+   #79 = NameAndType        #43:#53       // \"<init>\":(Ljava/io/InputStream;ZI)V\n+   #80 = NameAndType        #43:#71       // \"<init>\":()V\n+   #81 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #82 = NameAndType        #43:#44       // \"<init>\":(Ljava/io/InputStream;)V\n+   #83 = NameAndType        #28:#29       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #84 = Utf8               org/tukaani/xz/XZInputStream\n+   #85 = NameAndType        #43:#108      // \"<init>\":(Ljava/io/InputStream;I)V\n+   #86 = NameAndType        #30:#31       // in:Ljava/io/InputStream;\n+   #87 = Utf8               org/tukaani/xz/SingleXZInputStream\n+   #88 = NameAndType        #56:#57       // read:()I\n+   #89 = NameAndType        #109:#110     // count:(I)V\n+   #90 = Utf8               org/tukaani/xz/MemoryLimitException\n+   #91 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #92 = NameAndType        #111:#57      // getMemoryNeeded:()I\n+   #93 = NameAndType        #112:#57      // getMemoryLimit:()I\n+   #94 = NameAndType        #43:#113      // \"<init>\":(JILjava/lang/Exception;)V\n+   #95 = NameAndType        #56:#61       // read:([BII)I\n+   #96 = Class              #114          // org/apache/commons/compress/utils/IOUtils\n+   #97 = NameAndType        #65:#115      // skip:(Ljava/io/InputStream;J)J\n+   #98 = NameAndType        #69:#57       // available:()I\n+   #99 = NameAndType        #70:#71       // close:()V\n+  #100 = NameAndType        #116:#73      // getBytesRead:()J\n+  #101 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+  #102 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #103 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #104 = Utf8               java/io/IOException\n+  #105 = Utf8               java/io/InputStream\n+  #106 = Utf8               org/tukaani/xz/XZ\n+  #107 = Utf8               HEADER_MAGIC\n+  #108 = Utf8               (Ljava/io/InputStream;I)V\n+  #109 = Utf8               count\n+  #110 = Utf8               (I)V\n+  #111 = Utf8               getMemoryNeeded\n+  #112 = Utf8               getMemoryLimit\n+  #113 = Utf8               (JILjava/lang/Exception;)V\n+  #114 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #115 = Utf8               (Ljava/io/InputStream;J)J\n+  #116 = Utf8               getBytesRead\n {\n   private final org.apache.commons.compress.utils.CountingInputStream countingStream;\n     descriptor: Lorg/apache/commons/compress/utils/CountingInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n"}]}
