{"diffoscope-json-version": 1, "source1": "first/DefaultFTPFileEntryParserFactory.class", "source2": "second/DefaultFTPFileEntryParserFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,14 +9,18 @@\n \n public class DefaultFTPFileEntryParserFactory implements FTPFileEntryParserFactory\n {\n     private static final String JAVA_IDENTIFIER = \"\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\";\n     private static final String JAVA_QUALIFIED_NAME = \"(\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\\\\.)+\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\";\n     private static final Pattern JAVA_QUALIFIED_NAME_PATTERN;\n     \n+    static {\n+        JAVA_QUALIFIED_NAME_PATTERN = Pattern.compile(\"(\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\\\\.)+\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\");\n+    }\n+    \n     public FTPFileEntryParser createFileEntryParser(final FTPClientConfig config) throws ParserInitializationException {\n         final String key = config.getServerSystemKey();\n         return this.createFileEntryParser(key, config);\n     }\n     \n     public FTPFileEntryParser createFileEntryParser(final String key) {\n         if (key == null) {\n@@ -30,15 +34,15 @@\n         if (DefaultFTPFileEntryParserFactory.JAVA_QUALIFIED_NAME_PATTERN.matcher(key).matches()) {\n             try {\n                 final Class<?> parserClass = Class.forName(key);\n                 try {\n                     parser = (FTPFileEntryParser)parserClass.newInstance();\n                 }\n                 catch (final ClassCastException e) {\n-                    throw new ParserInitializationException(parserClass.getName() + \" does not implement the interface org.apache.commons.net.ftp.FTPFileEntryParser.\", (Throwable)e);\n+                    throw new ParserInitializationException(String.valueOf(parserClass.getName()) + \" does not implement the interface \" + \"org.apache.commons.net.ftp.FTPFileEntryParser.\", (Throwable)e);\n                 }\n                 catch (final Exception | ExceptionInInitializerError e2) {\n                     throw new ParserInitializationException(\"Error initializing parser\", e2);\n                 }\n             }\n             catch (final ClassNotFoundException ex) {}\n         }\n@@ -123,12 +127,8 @@\n     public FTPFileEntryParser createUnixFTPEntryParser() {\n         return (FTPFileEntryParser)new UnixFTPEntryParser();\n     }\n     \n     public FTPFileEntryParser createVMSVersioningFTPEntryParser() {\n         return (FTPFileEntryParser)new VMSVersioningFTPEntryParser();\n     }\n-    \n-    static {\n-        JAVA_QUALIFIED_NAME_PATTERN = Pattern.compile(\"(\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\\\\.)+\\\\p{javaJavaIdentifierStart}(\\\\p{javaJavaIdentifierPart})*\");\n-    }\n }\n"}]}
