{"diffoscope-json-version": 1, "source1": "first/AtomicSafeInitializer.class", "source2": "second/AtomicSafeInitializer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,18 +10,18 @@\n     \n     public AtomicSafeInitializer() {\n         this.factory = new AtomicReference<AtomicSafeInitializer<T>>();\n         this.reference = new AtomicReference<T>();\n     }\n     \n     public final T get() throws ConcurrentException {\n-        T result;\n-        while ((result = this.reference.get()) == null) {\n+        T value;\n+        while ((value = this.reference.get()) == null) {\n             if (this.factory.compareAndSet(null, this)) {\n                 this.reference.set(this.initialize());\n             }\n         }\n-        return result;\n+        return value;\n     }\n     \n     protected abstract T initialize() throws ConcurrentException;\n }\n"}]}
