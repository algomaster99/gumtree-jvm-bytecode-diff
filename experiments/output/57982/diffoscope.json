{"diffoscope-json-version": 1, "source1": "first/TaggedIOException.class", "source2": "second/TaggedIOException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,75 +1,75 @@\n-  SHA-256 checksum cd314c6911908c38bc32140388f8ef0511e66c638d15e09653e3dbbdd320a51b\n+  SHA-256 checksum e9d54b9509944f08b5b6eb009bacae91e1b4fdecc3c9b3950aa9ca36235cf2d8\n   Compiled from \"TaggedIOException.java\"\n public class org.apache.commons.io.TaggedIOException extends org.apache.commons.io.IOExceptionWithCause\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/TaggedIOException\n-  super_class: #10                        // org/apache/commons/io/IOExceptionWithCause\n+  super_class: #3                         // org/apache/commons/io/IOExceptionWithCause\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #43            // org/apache/commons/io/TaggedIOException\n-   #2 = Fieldref           #1.#44         // org/apache/commons/io/TaggedIOException.tag:Ljava/io/Serializable;\n-   #3 = Methodref          #45.#46        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #4 = Methodref          #1.#47         // org/apache/commons/io/TaggedIOException.isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-   #5 = Methodref          #1.#48         // org/apache/commons/io/TaggedIOException.getCause:()Ljava/io/IOException;\n-   #6 = Methodref          #9.#49         // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #7 = Methodref          #10.#50        // org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #8 = Methodref          #10.#51        // org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n-   #9 = Class              #52            // java/io/IOException\n-  #10 = Class              #53            // org/apache/commons/io/IOExceptionWithCause\n-  #11 = Utf8               serialVersionUID\n-  #12 = Utf8               J\n-  #13 = Utf8               ConstantValue\n-  #14 = Long               -6994123481142850163l\n-  #16 = Utf8               tag\n-  #17 = Utf8               Ljava/io/Serializable;\n-  #18 = Utf8               isTaggedWith\n-  #19 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               throwable\n-  #24 = Utf8               Ljava/lang/Throwable;\n-  #25 = Utf8               Ljava/lang/Object;\n-  #26 = Utf8               StackMapTable\n-  #27 = Utf8               throwCauseIfTaggedWith\n-  #28 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)V\n-  #29 = Utf8               Exceptions\n-  #30 = Utf8               <init>\n-  #31 = Utf8               (Ljava/io/IOException;Ljava/io/Serializable;)V\n-  #32 = Utf8               this\n-  #33 = Utf8               Lorg/apache/commons/io/TaggedIOException;\n-  #34 = Utf8               original\n-  #35 = Utf8               Ljava/io/IOException;\n-  #36 = Utf8               getTag\n-  #37 = Utf8               ()Ljava/io/Serializable;\n+   #1 = Class              #2             // org/apache/commons/io/TaggedIOException\n+   #2 = Utf8               org/apache/commons/io/TaggedIOException\n+   #3 = Class              #4             // org/apache/commons/io/IOExceptionWithCause\n+   #4 = Utf8               org/apache/commons/io/IOExceptionWithCause\n+   #5 = Utf8               serialVersionUID\n+   #6 = Utf8               J\n+   #7 = Utf8               ConstantValue\n+   #8 = Long               -6994123481142850163l\n+  #10 = Utf8               tag\n+  #11 = Utf8               Ljava/io/Serializable;\n+  #12 = Utf8               isTaggedWith\n+  #13 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #14 = Utf8               Code\n+  #15 = Fieldref           #1.#16         // org/apache/commons/io/TaggedIOException.tag:Ljava/io/Serializable;\n+  #16 = NameAndType        #10:#11        // tag:Ljava/io/Serializable;\n+  #17 = Methodref          #18.#20        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #18 = Class              #19            // java/lang/Object\n+  #19 = Utf8               java/lang/Object\n+  #20 = NameAndType        #21:#22        // equals:(Ljava/lang/Object;)Z\n+  #21 = Utf8               equals\n+  #22 = Utf8               (Ljava/lang/Object;)Z\n+  #23 = Utf8               LineNumberTable\n+  #24 = Utf8               LocalVariableTable\n+  #25 = Utf8               throwable\n+  #26 = Utf8               Ljava/lang/Throwable;\n+  #27 = Utf8               Ljava/lang/Object;\n+  #28 = Utf8               StackMapTable\n+  #29 = Utf8               throwCauseIfTaggedWith\n+  #30 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)V\n+  #31 = Utf8               Exceptions\n+  #32 = Class              #33            // java/io/IOException\n+  #33 = Utf8               java/io/IOException\n+  #34 = Methodref          #1.#35         // org/apache/commons/io/TaggedIOException.isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #35 = NameAndType        #12:#13        // isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #36 = Methodref          #1.#37         // org/apache/commons/io/TaggedIOException.getCause:()Ljava/io/IOException;\n+  #37 = NameAndType        #38:#39        // getCause:()Ljava/io/IOException;\n   #38 = Utf8               getCause\n   #39 = Utf8               ()Ljava/io/IOException;\n-  #40 = Utf8               ()Ljava/lang/Throwable;\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               TaggedIOException.java\n-  #43 = Utf8               org/apache/commons/io/TaggedIOException\n-  #44 = NameAndType        #16:#17        // tag:Ljava/io/Serializable;\n-  #45 = Class              #54            // java/lang/Object\n-  #46 = NameAndType        #55:#56        // equals:(Ljava/lang/Object;)Z\n-  #47 = NameAndType        #18:#19        // isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-  #48 = NameAndType        #38:#39        // getCause:()Ljava/io/IOException;\n-  #49 = NameAndType        #57:#58        // getMessage:()Ljava/lang/String;\n-  #50 = NameAndType        #30:#59        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #51 = NameAndType        #38:#40        // getCause:()Ljava/lang/Throwable;\n-  #52 = Utf8               java/io/IOException\n-  #53 = Utf8               org/apache/commons/io/IOExceptionWithCause\n-  #54 = Utf8               java/lang/Object\n-  #55 = Utf8               equals\n-  #56 = Utf8               (Ljava/lang/Object;)Z\n-  #57 = Utf8               getMessage\n-  #58 = Utf8               ()Ljava/lang/String;\n-  #59 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #40 = Utf8               <init>\n+  #41 = Utf8               (Ljava/io/IOException;Ljava/io/Serializable;)V\n+  #42 = Methodref          #32.#43        // java/io/IOException.getMessage:()Ljava/lang/String;\n+  #43 = NameAndType        #44:#45        // getMessage:()Ljava/lang/String;\n+  #44 = Utf8               getMessage\n+  #45 = Utf8               ()Ljava/lang/String;\n+  #46 = Methodref          #3.#47         // org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #47 = NameAndType        #40:#48        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #48 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #49 = Utf8               this\n+  #50 = Utf8               Lorg/apache/commons/io/TaggedIOException;\n+  #51 = Utf8               original\n+  #52 = Utf8               Ljava/io/IOException;\n+  #53 = Utf8               getTag\n+  #54 = Utf8               ()Ljava/io/Serializable;\n+  #55 = Methodref          #3.#56         // org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n+  #56 = NameAndType        #38:#57        // getCause:()Ljava/lang/Throwable;\n+  #57 = Utf8               ()Ljava/lang/Throwable;\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               TaggedIOException.java\n {\n   private static final long serialVersionUID = -6994123481142850163l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -6994123481142850163l\n \n   private final java.io.Serializable tag;\n@@ -78,81 +78,80 @@\n \n   public static boolean isTaggedWith(java.lang.Throwable, java.lang.Object);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Object;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ifnull        29\n+         1: ifnull        27\n          4: aload_0\n          5: instanceof    #1                  // class org/apache/commons/io/TaggedIOException\n-         8: ifeq          29\n+         8: ifeq          27\n         11: aload_1\n         12: aload_0\n         13: checkcast     #1                  // class org/apache/commons/io/TaggedIOException\n-        16: getfield      #2                  // Field tag:Ljava/io/Serializable;\n-        19: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n-        22: ifeq          29\n+        16: getfield      #15                 // Field tag:Ljava/io/Serializable;\n+        19: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        22: ifeq          27\n         25: iconst_1\n-        26: goto          30\n-        29: iconst_0\n-        30: ireturn\n+        26: ireturn\n+        27: iconst_0\n+        28: ireturn\n       LineNumberTable:\n         line 66: 0\n-        line 68: 19\n-        line 66: 30\n+        line 67: 4\n+        line 68: 11\n+        line 66: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      31     0 throwable   Ljava/lang/Throwable;\n-            0      31     1   tag   Ljava/lang/Object;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 29 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      29     0 throwable   Ljava/lang/Throwable;\n+            0      29     1   tag   Ljava/lang/Object;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 27 /* same */\n \n   public static void throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #4                  // Method isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+         2: invokestatic  #34                 // Method isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n          5: ifeq          16\n          8: aload_0\n          9: checkcast     #1                  // class org/apache/commons/io/TaggedIOException\n-        12: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;\n+        12: invokevirtual #36                 // Method getCause:()Ljava/io/IOException;\n         15: athrow\n         16: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 8\n         line 98: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0 throwable   Ljava/lang/Throwable;\n             0      17     1   tag   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 1\n         frame_type = 16 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.TaggedIOException(java.io.IOException, java.io.Serializable);\n     descriptor: (Ljava/io/IOException;Ljava/io/Serializable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #6                  // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+         2: invokevirtual #42                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n          5: aload_1\n-         6: invokespecial #7                  // Method org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+         6: invokespecial #46                 // Method org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n          9: aload_0\n         10: aload_2\n-        11: putfield      #2                  // Field tag:Ljava/io/Serializable;\n+        11: putfield      #15                 // Field tag:Ljava/io/Serializable;\n         14: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 9\n         line 114: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -162,45 +161,44 @@\n \n   public java.io.Serializable getTag();\n     descriptor: ()Ljava/io/Serializable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field tag:Ljava/io/Serializable;\n+         1: getfield      #15                 // Field tag:Ljava/io/Serializable;\n          4: areturn\n       LineNumberTable:\n         line 122: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/TaggedIOException;\n \n   public synchronized java.io.IOException getCause();\n     descriptor: ()Ljava/io/IOException;\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n-         4: checkcast     #9                  // class java/io/IOException\n+         1: invokespecial #55                 // Method org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n+         4: checkcast     #32                 // class java/io/IOException\n          7: areturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/TaggedIOException;\n \n   public java.lang.Throwable getCause();\n     descriptor: ()Ljava/lang/Throwable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;\n+         1: invokevirtual #36                 // Method getCause:()Ljava/io/IOException;\n          4: areturn\n       LineNumberTable:\n-        line 29: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/TaggedIOException;\n }\n SourceFile: \"TaggedIOException.java\"\n"}]}
