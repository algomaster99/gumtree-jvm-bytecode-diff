{"diffoscope-json-version": 1, "source1": "first/MutableByte.class", "source2": "second/MutableByte.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,96 +11,96 @@\n     public MutableByte() {\n     }\n     \n     public MutableByte(final byte value) {\n         this.value = value;\n     }\n     \n-    public MutableByte(final Number value) {\n-        this.value = value.byteValue();\n+    public MutableByte(final Number n) {\n+        this.value = n.byteValue();\n     }\n     \n-    public MutableByte(final String value) {\n-        this.value = Byte.parseByte(value);\n+    public MutableByte(final String s) {\n+        this.value = Byte.parseByte(s);\n     }\n     \n     public Byte getValue() {\n         return Byte.valueOf(this.value);\n     }\n     \n     public void setValue(final byte value) {\n         this.value = value;\n     }\n     \n-    public void setValue(final Number value) {\n-        this.value = value.byteValue();\n+    public void setValue(final Number n) {\n+        this.value = n.byteValue();\n     }\n     \n     public void increment() {\n         ++this.value;\n     }\n     \n     public byte getAndIncrement() {\n-        final byte last = this.value;\n+        final byte value = this.value;\n         ++this.value;\n-        return last;\n+        return value;\n     }\n     \n     public byte incrementAndGet() {\n         return (byte)(++this.value);\n     }\n     \n     public void decrement() {\n         --this.value;\n     }\n     \n     public byte getAndDecrement() {\n-        final byte last = this.value;\n+        final byte value = this.value;\n         --this.value;\n-        return last;\n+        return value;\n     }\n     \n     public byte decrementAndGet() {\n         return (byte)(--this.value);\n     }\n     \n-    public void add(final byte operand) {\n-        this.value += operand;\n+    public void add(final byte b) {\n+        this.value += b;\n     }\n     \n-    public void add(final Number operand) {\n-        this.value += operand.byteValue();\n+    public void add(final Number n) {\n+        this.value += n.byteValue();\n     }\n     \n-    public void subtract(final byte operand) {\n-        this.value -= operand;\n+    public void subtract(final byte b) {\n+        this.value -= b;\n     }\n     \n-    public void subtract(final Number operand) {\n-        this.value -= operand.byteValue();\n+    public void subtract(final Number n) {\n+        this.value -= n.byteValue();\n     }\n     \n-    public byte addAndGet(final byte operand) {\n-        return this.value += operand;\n+    public byte addAndGet(final byte b) {\n+        return this.value += b;\n     }\n     \n-    public byte addAndGet(final Number operand) {\n-        return this.value += operand.byteValue();\n+    public byte addAndGet(final Number n) {\n+        return this.value += n.byteValue();\n     }\n     \n-    public byte getAndAdd(final byte operand) {\n-        final byte last = this.value;\n-        this.value += operand;\n-        return last;\n+    public byte getAndAdd(final byte b) {\n+        final byte value = this.value;\n+        this.value += b;\n+        return value;\n     }\n     \n-    public byte getAndAdd(final Number operand) {\n-        final byte last = this.value;\n-        this.value += operand.byteValue();\n-        return last;\n+    public byte getAndAdd(final Number n) {\n+        final byte value = this.value;\n+        this.value += n.byteValue();\n+        return value;\n     }\n     \n     @Override\n     public byte byteValue() {\n         return this.value;\n     }\n     \n@@ -124,24 +124,24 @@\n         return this.value;\n     }\n     \n     public Byte toByte() {\n         return Byte.valueOf(this.byteValue());\n     }\n     \n-    public boolean equals(final Object obj) {\n-        return obj instanceof MutableByte && this.value == ((MutableByte)obj).byteValue();\n+    public boolean equals(final Object o) {\n+        return o instanceof MutableByte && this.value == ((MutableByte)o).byteValue();\n     }\n     \n     public int hashCode() {\n         return this.value;\n     }\n     \n     @Override\n-    public int compareTo(final MutableByte other) {\n-        return NumberUtils.compare(this.value, other.value);\n+    public int compareTo(final MutableByte mutableByte) {\n+        return NumberUtils.compare(this.value, mutableByte.value);\n     }\n     \n     public String toString() {\n         return String.valueOf(this.value);\n     }\n }\n"}]}
