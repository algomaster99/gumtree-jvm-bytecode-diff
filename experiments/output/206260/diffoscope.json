{"diffoscope-json-version": 1, "source1": "first/ConfigurationAttributePointer.class", "source2": "second/ConfigurationAttributePointer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,25 +9,24 @@\n import org.apache.commons.jxpath.ri.model.NodePointer;\n \n class ConfigurationAttributePointer<T> extends NodePointer\n {\n     private static final long serialVersionUID = 5504551041716043748L;\n     private final QueryResult<T> attributeResult;\n     \n-    public ConfigurationAttributePointer(final ConfigurationNodePointer<T> parent, final String attrName) {\n-        super((NodePointer)parent);\n-        this.attributeResult = (org.apache.commons.configuration2.tree.QueryResult<T>)QueryResult.createAttributeResult(parent.getConfigurationNode(), attrName);\n+    public ConfigurationAttributePointer(final ConfigurationNodePointer<T> configurationNodePointer, final String s) {\n+        super((NodePointer)configurationNodePointer);\n+        this.attributeResult = (org.apache.commons.configuration2.tree.QueryResult<T>)QueryResult.createAttributeResult(configurationNodePointer.getConfigurationNode(), s);\n     }\n     \n     public ConfigurationNodePointer<T> getParentPointer() {\n-        final ConfigurationNodePointer<T> configurationNodePointer = (ConfigurationNodePointer<T>)this.getParent();\n-        return configurationNodePointer;\n+        return (ConfigurationNodePointer<T>)this.getParent();\n     }\n     \n-    public int compareChildNodePointers(final NodePointer p1, final NodePointer p2) {\n+    public int compareChildNodePointers(final NodePointer nodePointer, final NodePointer nodePointer2) {\n         return 0;\n     }\n     \n     public Object getBaseValue() {\n         return this.getValue();\n     }\n     \n@@ -55,19 +54,19 @@\n         return true;\n     }\n     \n     public Object getValue() {\n         return this.attributeResult.getAttributeValue((NodeHandler)this.getNodeHandler());\n     }\n     \n-    public void setValue(final Object value) {\n+    public void setValue(final Object o) {\n         throw new UnsupportedOperationException(\"Updating the value is not supported!\");\n     }\n     \n-    public boolean testNode(final NodeTest test) {\n-        return (test instanceof NodeTypeTest && ((NodeTypeTest)test).getNodeType() == 2) || super.testNode(test);\n+    public boolean testNode(final NodeTest nodeTest) {\n+        return (nodeTest instanceof NodeTypeTest && ((NodeTypeTest)nodeTest).getNodeType() == 2) || super.testNode(nodeTest);\n     }\n     \n     private NodeHandler<T> getNodeHandler() {\n         return (NodeHandler<T>)this.getParentPointer().getNodeHandler();\n     }\n }\n"}]}
