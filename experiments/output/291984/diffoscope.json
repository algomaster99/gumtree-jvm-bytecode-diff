{"diffoscope-json-version": 1, "source1": "first/LazyInitializer.class", "source2": "second/LazyInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,55 +1,54 @@\n-  SHA-256 checksum 409ad90689aabcf002f10b20a01f54bf35be434cf4c19a3f6326aeac668540ce\n+  SHA-256 checksum b8a497816ca0ad17512bf74750d27323afea1f2631dac6d1445dff037c3b05f4\n   Compiled from \"LazyInitializer.java\"\n public abstract class org.apache.commons.lang3.concurrent.LazyInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #6                          // org/apache/commons/lang3/concurrent/LazyInitializer\n   super_class: #5                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #5.#30         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #6.#31         // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n-   #3 = Fieldref           #6.#32         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n-   #4 = Methodref          #6.#33         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n-   #5 = Class              #34            // java/lang/Object\n-   #6 = Class              #35            // org/apache/commons/lang3/concurrent/LazyInitializer\n-   #7 = Class              #36            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #1 = Methodref          #5.#29         // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #6.#30         // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n+   #3 = Fieldref           #6.#31         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n+   #4 = Methodref          #6.#32         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n+   #5 = Class              #33            // java/lang/Object\n+   #6 = Class              #34            // org/apache/commons/lang3/concurrent/LazyInitializer\n+   #7 = Class              #35            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n    #8 = Utf8               NO_INIT\n    #9 = Utf8               Ljava/lang/Object;\n   #10 = Utf8               object\n   #11 = Utf8               Signature\n   #12 = Utf8               TT;\n   #13 = Utf8               <init>\n   #14 = Utf8               ()V\n   #15 = Utf8               Code\n   #16 = Utf8               LineNumberTable\n   #17 = Utf8               get\n   #18 = Utf8               ()Ljava/lang/Object;\n   #19 = Utf8               StackMapTable\n-  #20 = Class              #34            // java/lang/Object\n-  #21 = Class              #37            // java/lang/Throwable\n-  #22 = Utf8               Exceptions\n-  #23 = Class              #38            // org/apache/commons/lang3/concurrent/ConcurrentException\n-  #24 = Utf8               ()TT;\n-  #25 = Utf8               initialize\n-  #26 = Utf8               <clinit>\n-  #27 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-  #28 = Utf8               SourceFile\n-  #29 = Utf8               LazyInitializer.java\n-  #30 = NameAndType        #13:#14        // \"<init>\":()V\n-  #31 = NameAndType        #8:#9          // NO_INIT:Ljava/lang/Object;\n-  #32 = NameAndType        #10:#9         // object:Ljava/lang/Object;\n-  #33 = NameAndType        #25:#18        // initialize:()Ljava/lang/Object;\n-  #34 = Utf8               java/lang/Object\n-  #35 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n-  #36 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #37 = Utf8               java/lang/Throwable\n-  #38 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+  #20 = Class              #36            // java/lang/Throwable\n+  #21 = Utf8               Exceptions\n+  #22 = Class              #37            // org/apache/commons/lang3/concurrent/ConcurrentException\n+  #23 = Utf8               ()TT;\n+  #24 = Utf8               initialize\n+  #25 = Utf8               <clinit>\n+  #26 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+  #27 = Utf8               SourceFile\n+  #28 = Utf8               LazyInitializer.java\n+  #29 = NameAndType        #13:#14        // \"<init>\":()V\n+  #30 = NameAndType        #8:#9          // NO_INIT:Ljava/lang/Object;\n+  #31 = NameAndType        #10:#9         // object:Ljava/lang/Object;\n+  #32 = NameAndType        #24:#18        // initialize:()Ljava/lang/Object;\n+  #33 = Utf8               java/lang/Object\n+  #34 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n+  #35 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #36 = Utf8               java/lang/Throwable\n+  #37 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n {\n   private static final java.lang.Object NO_INIT;\n     descriptor: Ljava/lang/Object;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private volatile T object;\n     descriptor: Ljava/lang/Object;\n@@ -127,31 +126,31 @@\n           locals = [ class java/lang/Object, class java/lang/Object ]\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 250 /* chop */\n           offset_delta = 4\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #24                          // ()TT;\n+    Signature: #23                          // ()TT;\n \n   protected abstract T initialize() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #24                          // ()TT;\n+    Signature: #23                          // ()TT;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #5                  // class java/lang/Object\n          3: dup\n          4: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          7: putstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n         10: return\n       LineNumberTable:\n         line 82: 0\n }\n-Signature: #27                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+Signature: #26                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n SourceFile: \"LazyInitializer.java\"\n"}]}
