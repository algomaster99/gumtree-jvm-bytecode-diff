{"diffoscope-json-version": 1, "source1": "first/PropertiesMacro.class", "source2": "second/PropertiesMacro.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -34,14 +34,25 @@\n     private static final String INDENT_LEVEL_14;\n     private static final String INDENT_LEVEL_16;\n     private static final String INDENT_LEVEL_18;\n     private static final String INDENT_LEVEL_20;\n     private static String currentModuleName;\n     private static File currentModuleFile;\n     \n+    static {\n+        INDENT_LEVEL_10 = SiteUtil.getNewlineAndIndentSpaces(10);\n+        INDENT_LEVEL_12 = SiteUtil.getNewlineAndIndentSpaces(12);\n+        INDENT_LEVEL_14 = SiteUtil.getNewlineAndIndentSpaces(14);\n+        INDENT_LEVEL_16 = SiteUtil.getNewlineAndIndentSpaces(16);\n+        INDENT_LEVEL_18 = SiteUtil.getNewlineAndIndentSpaces(18);\n+        INDENT_LEVEL_20 = SiteUtil.getNewlineAndIndentSpaces(20);\n+        PropertiesMacro.currentModuleName = \"\";\n+        PropertiesMacro.currentModuleFile = new File(\"\");\n+    }\n+    \n     public void execute(final Sink sink, final MacroRequest request) throws MacroExecutionException {\n         if (!(sink instanceof XdocSink)) {\n             throw new MacroExecutionException(\"Expected Sink to be an XdocSink.\");\n         }\n         final String modulePath = (String)request.getParameter(\"modulePath\");\n         configureGlobalProperties(modulePath);\n         writePropertiesTable((XdocSink)sink);\n@@ -166,15 +177,15 @@\n         }\n         sink.rawText(PropertiesMacro.INDENT_LEVEL_18);\n         sink.text(\".\");\n         sink.rawText(PropertiesMacro.INDENT_LEVEL_14);\n     }\n     \n     private static void writeLinkToToken(final Sink sink, final String document, final String tokenName) throws MacroExecutionException {\n-        final String link = SiteUtil.getLinkToDocument(PropertiesMacro.currentModuleName, document) + \"#\" + tokenName;\n+        final String link = String.valueOf(SiteUtil.getLinkToDocument(PropertiesMacro.currentModuleName, document)) + \"#\" + tokenName;\n         sink.link(link);\n         sink.rawText(PropertiesMacro.INDENT_LEVEL_20);\n         sink.text(tokenName);\n         sink.link_();\n     }\n     \n     private static void writePropertyDefaultValueCell(final Sink sink, final String propertyName, final Field field, final Object instance) throws MacroExecutionException {\n@@ -207,19 +218,8 @@\n     private static void writePropertySinceVersionCell(final Sink sink, final String propertyName, final DetailNode moduleJavadoc, final DetailNode propertyJavadoc) throws MacroExecutionException {\n         sink.rawText(PropertiesMacro.INDENT_LEVEL_14);\n         sink.tableCell();\n         final String sinceVersion = SiteUtil.getSinceVersion(PropertiesMacro.currentModuleName, moduleJavadoc, propertyName, propertyJavadoc);\n         sink.text(sinceVersion);\n         sink.tableCell_();\n     }\n-    \n-    static {\n-        INDENT_LEVEL_10 = SiteUtil.getNewlineAndIndentSpaces(10);\n-        INDENT_LEVEL_12 = SiteUtil.getNewlineAndIndentSpaces(12);\n-        INDENT_LEVEL_14 = SiteUtil.getNewlineAndIndentSpaces(14);\n-        INDENT_LEVEL_16 = SiteUtil.getNewlineAndIndentSpaces(16);\n-        INDENT_LEVEL_18 = SiteUtil.getNewlineAndIndentSpaces(18);\n-        INDENT_LEVEL_20 = SiteUtil.getNewlineAndIndentSpaces(20);\n-        PropertiesMacro.currentModuleName = \"\";\n-        PropertiesMacro.currentModuleFile = new File(\"\");\n-    }\n }\n"}]}
