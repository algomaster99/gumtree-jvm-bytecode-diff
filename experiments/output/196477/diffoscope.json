{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIOutputStream.class", "source2": "second/FromNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,79 +1,79 @@\n-  SHA-256 checksum 40b4fff0bc95d47c98ca7ce157c4508df96639af1bce18551fdc040884b90388\n+  SHA-256 checksum aaff5edfd6751c09b56ead662ed52d9d582d3eb439d0282cdca54a9d9cd1d866\n   Compiled from \"FromNetASCIIOutputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  super_class: #13                        // java/io/FilterOutputStream\n+  this_class: #8                          // org/apache/commons/net/io/FromNetASCIIOutputStream\n+  super_class: #2                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#43        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #12.#44        // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n-   #3 = Fieldref           #12.#45        // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Fieldref           #46.#47        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-   #5 = Methodref          #48.#49        // java/io/OutputStream.write:([B)V\n-   #6 = Methodref          #48.#50        // java/io/OutputStream.write:(I)V\n-   #7 = Fieldref           #46.#51        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-   #8 = Methodref          #12.#52        // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n-   #9 = Methodref          #12.#53        // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n-  #10 = Methodref          #48.#53        // java/io/OutputStream.write:([BII)V\n-  #11 = Methodref          #13.#54        // java/io/FilterOutputStream.close:()V\n-  #12 = Class              #55            // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #13 = Class              #56            // java/io/FilterOutputStream\n-  #14 = Utf8               lastWasCR\n-  #15 = Utf8               Z\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/io/OutputStream;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               LocalVariableTable\n-  #21 = Utf8               this\n-  #22 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-  #23 = Utf8               output\n-  #24 = Utf8               Ljava/io/OutputStream;\n-  #25 = Utf8               writeInt\n-  #26 = Utf8               (I)V\n-  #27 = Utf8               ch\n-  #28 = Utf8               I\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #57            // java/io/IOException\n-  #32 = Utf8               write\n-  #33 = Utf8               ([B)V\n-  #34 = Utf8               buffer\n-  #35 = Utf8               [B\n-  #36 = Utf8               ([BII)V\n-  #37 = Utf8               offset\n-  #38 = Utf8               length\n-  #39 = Utf8               close\n-  #40 = Utf8               ()V\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               FromNetASCIIOutputStream.java\n-  #43 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #44 = NameAndType        #14:#15        // lastWasCR:Z\n-  #45 = NameAndType        #58:#24        // out:Ljava/io/OutputStream;\n-  #46 = Class              #59            // org/apache/commons/net/io/FromNetASCIIInputStream\n-  #47 = NameAndType        #60:#35        // _lineSeparatorBytes:[B\n-  #48 = Class              #61            // java/io/OutputStream\n-  #49 = NameAndType        #32:#33        // write:([B)V\n-  #50 = NameAndType        #32:#26        // write:(I)V\n-  #51 = NameAndType        #62:#15        // _noConversionRequired:Z\n-  #52 = NameAndType        #25:#26        // writeInt:(I)V\n-  #53 = NameAndType        #32:#36        // write:([BII)V\n-  #54 = NameAndType        #39:#40        // close:()V\n-  #55 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #56 = Utf8               java/io/FilterOutputStream\n+   #1 = Methodref          #2.#3          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Class              #4             // java/io/FilterOutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n+   #8 = Class              #10            // org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #9 = NameAndType        #11:#12        // lastWasCR:Z\n+  #10 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n+  #11 = Utf8               lastWasCR\n+  #12 = Utf8               Z\n+  #13 = Fieldref           #8.#14         // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n+  #14 = NameAndType        #15:#16        // out:Ljava/io/OutputStream;\n+  #15 = Utf8               out\n+  #16 = Utf8               Ljava/io/OutputStream;\n+  #17 = Fieldref           #18.#19        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+  #18 = Class              #20            // org/apache/commons/net/io/FromNetASCIIInputStream\n+  #19 = NameAndType        #21:#22        // _lineSeparatorBytes:[B\n+  #20 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+  #21 = Utf8               _lineSeparatorBytes\n+  #22 = Utf8               [B\n+  #23 = Methodref          #24.#25        // java/io/OutputStream.write:([B)V\n+  #24 = Class              #26            // java/io/OutputStream\n+  #25 = NameAndType        #27:#28        // write:([B)V\n+  #26 = Utf8               java/io/OutputStream\n+  #27 = Utf8               write\n+  #28 = Utf8               ([B)V\n+  #29 = Methodref          #24.#30        // java/io/OutputStream.write:(I)V\n+  #30 = NameAndType        #27:#31        // write:(I)V\n+  #31 = Utf8               (I)V\n+  #32 = Fieldref           #18.#33        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+  #33 = NameAndType        #34:#12        // _noConversionRequired:Z\n+  #34 = Utf8               _noConversionRequired\n+  #35 = Methodref          #8.#36         // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n+  #36 = NameAndType        #37:#31        // writeInt:(I)V\n+  #37 = Utf8               writeInt\n+  #38 = Methodref          #8.#39         // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n+  #39 = NameAndType        #27:#40        // write:([BII)V\n+  #40 = Utf8               ([BII)V\n+  #41 = Methodref          #24.#39        // java/io/OutputStream.write:([BII)V\n+  #42 = Methodref          #2.#43         // java/io/FilterOutputStream.close:()V\n+  #43 = NameAndType        #44:#45        // close:()V\n+  #44 = Utf8               close\n+  #45 = Utf8               ()V\n+  #46 = Utf8               Code\n+  #47 = Utf8               LineNumberTable\n+  #48 = Utf8               LocalVariableTable\n+  #49 = Utf8               this\n+  #50 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+  #51 = Utf8               output\n+  #52 = Utf8               ch\n+  #53 = Utf8               I\n+  #54 = Utf8               StackMapTable\n+  #55 = Utf8               Exceptions\n+  #56 = Class              #57            // java/io/IOException\n   #57 = Utf8               java/io/IOException\n-  #58 = Utf8               out\n-  #59 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #60 = Utf8               _lineSeparatorBytes\n-  #61 = Utf8               java/io/OutputStream\n-  #62 = Utf8               _noConversionRequired\n+  #58 = Utf8               buffer\n+  #59 = Utf8               offset\n+  #60 = Utf8               length\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               FromNetASCIIOutputStream.java\n {\n   private boolean lastWasCR;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.net.io.FromNetASCIIOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n@@ -81,15 +81,15 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #2                  // Field lastWasCR:Z\n+         7: putfield      #7                  // Field lastWasCR:Z\n         10: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 5\n         line 53: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -105,49 +105,49 @@\n          1: lookupswitch  { // 2\n                       10: 36\n                       13: 28\n                  default: 78\n             }\n         28: aload_0\n         29: iconst_1\n-        30: putfield      #2                  // Field lastWasCR:Z\n+        30: putfield      #7                  // Field lastWasCR:Z\n         33: goto          107\n         36: aload_0\n-        37: getfield      #2                  // Field lastWasCR:Z\n+        37: getfield      #7                  // Field lastWasCR:Z\n         40: ifeq          61\n         43: aload_0\n-        44: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-        47: getstatic     #4                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-        50: invokevirtual #5                  // Method java/io/OutputStream.write:([B)V\n+        44: getfield      #13                 // Field out:Ljava/io/OutputStream;\n+        47: getstatic     #17                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+        50: invokevirtual #23                 // Method java/io/OutputStream.write:([B)V\n         53: aload_0\n         54: iconst_0\n-        55: putfield      #2                  // Field lastWasCR:Z\n+        55: putfield      #7                  // Field lastWasCR:Z\n         58: goto          107\n         61: aload_0\n         62: iconst_0\n-        63: putfield      #2                  // Field lastWasCR:Z\n+        63: putfield      #7                  // Field lastWasCR:Z\n         66: aload_0\n-        67: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+        67: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         70: bipush        10\n-        72: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        72: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n         75: goto          107\n         78: aload_0\n-        79: getfield      #2                  // Field lastWasCR:Z\n+        79: getfield      #7                  // Field lastWasCR:Z\n         82: ifeq          99\n         85: aload_0\n-        86: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+        86: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         89: bipush        13\n-        91: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        91: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n         94: aload_0\n         95: iconst_0\n-        96: putfield      #2                  // Field lastWasCR:Z\n+        96: putfield      #7                  // Field lastWasCR:Z\n         99: aload_0\n-       100: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+       100: getfield      #13                 // Field out:Ljava/io/OutputStream;\n        103: iload_1\n-       104: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+       104: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n        107: return\n       LineNumberTable:\n         line 58: 0\n         line 61: 28\n         line 63: 33\n         line 65: 36\n         line 67: 43\n@@ -176,24 +176,24 @@\n       throws java.io.IOException\n \n   public synchronized void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #32                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          15\n          6: aload_0\n-         7: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         10: iload_1\n-        11: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n         14: return\n         15: aload_0\n         16: iload_1\n-        17: invokespecial #8                  // Method writeInt:(I)V\n+        17: invokespecial #35                 // Method writeInt:(I)V\n         20: return\n       LineNumberTable:\n         line 102: 0\n         line 104: 6\n         line 105: 14\n         line 108: 15\n         line 109: 20\n@@ -212,15 +212,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #9                  // Method write:([BII)V\n+         5: invokevirtual #38                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n@@ -229,32 +229,32 @@\n       throws java.io.IOException\n \n   public synchronized void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=4, args_size=4\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #32                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          17\n          6: aload_0\n-         7: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #10                 // Method java/io/OutputStream.write:([BII)V\n+        13: invokevirtual #41                 // Method java/io/OutputStream.write:([BII)V\n         16: return\n         17: iload_3\n         18: iinc          3, -1\n         21: ifle          37\n         24: aload_0\n         25: aload_1\n         26: iload_2\n         27: iinc          2, 1\n         30: baload\n-        31: invokespecial #8                  // Method writeInt:(I)V\n+        31: invokespecial #35                 // Method writeInt:(I)V\n         34: goto          17\n         37: return\n       LineNumberTable:\n         line 141: 0\n         line 145: 6\n         line 146: 16\n         line 149: 17\n@@ -273,28 +273,28 @@\n       throws java.io.IOException\n \n   public synchronized void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #32                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          11\n          6: aload_0\n-         7: invokespecial #11                 // Method java/io/FilterOutputStream.close:()V\n+         7: invokespecial #42                 // Method java/io/FilterOutputStream.close:()V\n         10: return\n         11: aload_0\n-        12: getfield      #2                  // Field lastWasCR:Z\n+        12: getfield      #7                  // Field lastWasCR:Z\n         15: ifeq          27\n         18: aload_0\n-        19: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+        19: getfield      #13                 // Field out:Ljava/io/OutputStream;\n         22: bipush        13\n-        24: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        24: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n         27: aload_0\n-        28: invokespecial #11                 // Method java/io/FilterOutputStream.close:()V\n+        28: invokespecial #42                 // Method java/io/FilterOutputStream.close:()V\n         31: return\n       LineNumberTable:\n         line 164: 0\n         line 166: 6\n         line 167: 10\n         line 170: 11\n         line 171: 18\n"}]}
