{"diffoscope-json-version": 1, "source1": "first/ConstantMethodHandle.class", "source2": "second/ConstantMethodHandle.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,108 @@\n-  SHA-256 checksum 08eef62e40ce6deae2f5fd90599ec67b96842a6605893cd41b660a95efcfeb5b\n+  SHA-256 checksum 27a19233bae384d052293e5ec5a77dbcd560ff150d8545574d472f4309e2ccbe\n   Compiled from \"ConstantMethodHandle.java\"\n public final class org.apache.bcel.classfile.ConstantMethodHandle extends org.apache.bcel.classfile.Constant\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #23                         // org/apache/bcel/classfile/ConstantMethodHandle\n-  super_class: #24                        // org/apache/bcel/classfile/Constant\n+  this_class: #2                          // org/apache/bcel/classfile/ConstantMethodHandle\n+  super_class: #25                        // org/apache/bcel/classfile/Constant\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#50        // org/apache/bcel/classfile/ConstantMethodHandle.getReferenceKind:()I\n-   #2 = Methodref          #23.#51        // org/apache/bcel/classfile/ConstantMethodHandle.getReferenceIndex:()I\n-   #3 = Methodref          #23.#52        // org/apache/bcel/classfile/ConstantMethodHandle.\"<init>\":(II)V\n-   #4 = InterfaceMethodref #53.#54        // java/io/DataInput.readUnsignedByte:()I\n-   #5 = InterfaceMethodref #53.#55        // java/io/DataInput.readUnsignedShort:()I\n-   #6 = Class              #56            // org/apache/bcel/Const\n-   #7 = Methodref          #24.#57        // org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n-   #8 = Fieldref           #23.#58        // org/apache/bcel/classfile/ConstantMethodHandle.referenceKind:I\n-   #9 = Fieldref           #23.#59        // org/apache/bcel/classfile/ConstantMethodHandle.referenceIndex:I\n-  #10 = InterfaceMethodref #60.#61        // org/apache/bcel/classfile/Visitor.visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n-  #11 = Methodref          #24.#62        // org/apache/bcel/classfile/Constant.getTag:()B\n-  #12 = Methodref          #63.#64        // java/io/DataOutputStream.writeByte:(I)V\n-  #13 = Methodref          #63.#65        // java/io/DataOutputStream.writeShort:(I)V\n-  #14 = Class              #66            // java/lang/StringBuilder\n-  #15 = Methodref          #14.#67        // java/lang/StringBuilder.\"<init>\":()V\n-  #16 = Methodref          #24.#68        // org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n-  #17 = Methodref          #14.#69        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #18 = String             #70            // (referenceKind =\n-  #19 = Methodref          #14.#71        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #20 = String             #72            // , referenceIndex =\n-  #21 = String             #73            // )\n-  #22 = Methodref          #14.#68        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #23 = Class              #74            // org/apache/bcel/classfile/ConstantMethodHandle\n-  #24 = Class              #75            // org/apache/bcel/classfile/Constant\n-  #25 = Utf8               referenceKind\n-  #26 = Utf8               I\n-  #27 = Utf8               referenceIndex\n-  #28 = Utf8               <init>\n-  #29 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               (Ljava/io/DataInput;)V\n-  #33 = Utf8               Exceptions\n-  #34 = Class              #76            // java/io/IOException\n-  #35 = Utf8               (II)V\n-  #36 = Utf8               accept\n-  #37 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #38 = Utf8               dump\n-  #39 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #40 = Utf8               getReferenceIndex\n-  #41 = Utf8               ()I\n-  #42 = Utf8               getReferenceKind\n-  #43 = Utf8               setReferenceIndex\n-  #44 = Utf8               (I)V\n-  #45 = Utf8               setReferenceKind\n-  #46 = Utf8               toString\n-  #47 = Utf8               ()Ljava/lang/String;\n-  #48 = Utf8               SourceFile\n-  #49 = Utf8               ConstantMethodHandle.java\n-  #50 = NameAndType        #42:#41        // getReferenceKind:()I\n-  #51 = NameAndType        #40:#41        // getReferenceIndex:()I\n-  #52 = NameAndType        #28:#35        // \"<init>\":(II)V\n-  #53 = Class              #77            // java/io/DataInput\n-  #54 = NameAndType        #78:#41        // readUnsignedByte:()I\n-  #55 = NameAndType        #79:#41        // readUnsignedShort:()I\n-  #56 = Utf8               org/apache/bcel/Const\n-  #57 = NameAndType        #28:#80        // \"<init>\":(B)V\n-  #58 = NameAndType        #25:#26        // referenceKind:I\n-  #59 = NameAndType        #27:#26        // referenceIndex:I\n-  #60 = Class              #81            // org/apache/bcel/classfile/Visitor\n-  #61 = NameAndType        #82:#29        // visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n-  #62 = NameAndType        #83:#84        // getTag:()B\n-  #63 = Class              #85            // java/io/DataOutputStream\n-  #64 = NameAndType        #86:#44        // writeByte:(I)V\n-  #65 = NameAndType        #87:#44        // writeShort:(I)V\n-  #66 = Utf8               java/lang/StringBuilder\n-  #67 = NameAndType        #28:#88        // \"<init>\":()V\n-  #68 = NameAndType        #46:#47        // toString:()Ljava/lang/String;\n-  #69 = NameAndType        #89:#90        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #70 = Utf8               (referenceKind =\n-  #71 = NameAndType        #89:#91        // append:(I)Ljava/lang/StringBuilder;\n-  #72 = Utf8               , referenceIndex =\n-  #73 = Utf8               )\n-  #74 = Utf8               org/apache/bcel/classfile/ConstantMethodHandle\n-  #75 = Utf8               org/apache/bcel/classfile/Constant\n-  #76 = Utf8               java/io/IOException\n-  #77 = Utf8               java/io/DataInput\n-  #78 = Utf8               readUnsignedByte\n-  #79 = Utf8               readUnsignedShort\n-  #80 = Utf8               (B)V\n-  #81 = Utf8               org/apache/bcel/classfile/Visitor\n-  #82 = Utf8               visitConstantMethodHandle\n-  #83 = Utf8               getTag\n-  #84 = Utf8               ()B\n-  #85 = Utf8               java/io/DataOutputStream\n-  #86 = Utf8               writeByte\n-  #87 = Utf8               writeShort\n-  #88 = Utf8               ()V\n-  #89 = Utf8               append\n-  #90 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #91 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #1 = Methodref          #2.#3          // org/apache/bcel/classfile/ConstantMethodHandle.getReferenceKind:()I\n+   #2 = Class              #4             // org/apache/bcel/classfile/ConstantMethodHandle\n+   #3 = NameAndType        #5:#6          // getReferenceKind:()I\n+   #4 = Utf8               org/apache/bcel/classfile/ConstantMethodHandle\n+   #5 = Utf8               getReferenceKind\n+   #6 = Utf8               ()I\n+   #7 = Methodref          #2.#8          // org/apache/bcel/classfile/ConstantMethodHandle.getReferenceIndex:()I\n+   #8 = NameAndType        #9:#6          // getReferenceIndex:()I\n+   #9 = Utf8               getReferenceIndex\n+  #10 = Methodref          #2.#11         // org/apache/bcel/classfile/ConstantMethodHandle.\"<init>\":(II)V\n+  #11 = NameAndType        #12:#13        // \"<init>\":(II)V\n+  #12 = Utf8               <init>\n+  #13 = Utf8               (II)V\n+  #14 = InterfaceMethodref #15.#16        // java/io/DataInput.readUnsignedByte:()I\n+  #15 = Class              #17            // java/io/DataInput\n+  #16 = NameAndType        #18:#6         // readUnsignedByte:()I\n+  #17 = Utf8               java/io/DataInput\n+  #18 = Utf8               readUnsignedByte\n+  #19 = InterfaceMethodref #15.#20        // java/io/DataInput.readUnsignedShort:()I\n+  #20 = NameAndType        #21:#6         // readUnsignedShort:()I\n+  #21 = Utf8               readUnsignedShort\n+  #22 = Class              #23            // org/apache/bcel/Const\n+  #23 = Utf8               org/apache/bcel/Const\n+  #24 = Methodref          #25.#26        // org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n+  #25 = Class              #27            // org/apache/bcel/classfile/Constant\n+  #26 = NameAndType        #12:#28        // \"<init>\":(B)V\n+  #27 = Utf8               org/apache/bcel/classfile/Constant\n+  #28 = Utf8               (B)V\n+  #29 = Fieldref           #2.#30         // org/apache/bcel/classfile/ConstantMethodHandle.referenceKind:I\n+  #30 = NameAndType        #31:#32        // referenceKind:I\n+  #31 = Utf8               referenceKind\n+  #32 = Utf8               I\n+  #33 = Fieldref           #2.#34         // org/apache/bcel/classfile/ConstantMethodHandle.referenceIndex:I\n+  #34 = NameAndType        #35:#32        // referenceIndex:I\n+  #35 = Utf8               referenceIndex\n+  #36 = InterfaceMethodref #37.#38        // org/apache/bcel/classfile/Visitor.visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n+  #37 = Class              #39            // org/apache/bcel/classfile/Visitor\n+  #38 = NameAndType        #40:#41        // visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n+  #39 = Utf8               org/apache/bcel/classfile/Visitor\n+  #40 = Utf8               visitConstantMethodHandle\n+  #41 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n+  #42 = Methodref          #25.#43        // org/apache/bcel/classfile/Constant.getTag:()B\n+  #43 = NameAndType        #44:#45        // getTag:()B\n+  #44 = Utf8               getTag\n+  #45 = Utf8               ()B\n+  #46 = Methodref          #47.#48        // java/io/DataOutputStream.writeByte:(I)V\n+  #47 = Class              #49            // java/io/DataOutputStream\n+  #48 = NameAndType        #50:#51        // writeByte:(I)V\n+  #49 = Utf8               java/io/DataOutputStream\n+  #50 = Utf8               writeByte\n+  #51 = Utf8               (I)V\n+  #52 = Methodref          #47.#53        // java/io/DataOutputStream.writeShort:(I)V\n+  #53 = NameAndType        #54:#51        // writeShort:(I)V\n+  #54 = Utf8               writeShort\n+  #55 = Class              #56            // java/lang/StringBuilder\n+  #56 = Utf8               java/lang/StringBuilder\n+  #57 = Methodref          #55.#58        // java/lang/StringBuilder.\"<init>\":()V\n+  #58 = NameAndType        #12:#59        // \"<init>\":()V\n+  #59 = Utf8               ()V\n+  #60 = Methodref          #25.#61        // org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n+  #61 = NameAndType        #62:#63        // toString:()Ljava/lang/String;\n+  #62 = Utf8               toString\n+  #63 = Utf8               ()Ljava/lang/String;\n+  #64 = Methodref          #55.#65        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #65 = NameAndType        #66:#67        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #66 = Utf8               append\n+  #67 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #68 = String             #69            // (referenceKind =\n+  #69 = Utf8               (referenceKind =\n+  #70 = Methodref          #55.#71        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #71 = NameAndType        #66:#72        // append:(I)Ljava/lang/StringBuilder;\n+  #72 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #73 = String             #74            // , referenceIndex =\n+  #74 = Utf8               , referenceIndex =\n+  #75 = String             #76            // )\n+  #76 = Utf8               )\n+  #77 = Methodref          #55.#61        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #78 = Utf8               Code\n+  #79 = Utf8               LineNumberTable\n+  #80 = Utf8               (Ljava/io/DataInput;)V\n+  #81 = Utf8               Exceptions\n+  #82 = Class              #83            // java/io/IOException\n+  #83 = Utf8               java/io/IOException\n+  #84 = Utf8               accept\n+  #85 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #86 = Utf8               dump\n+  #87 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #88 = Utf8               setReferenceIndex\n+  #89 = Utf8               setReferenceKind\n+  #90 = Utf8               SourceFile\n+  #91 = Utf8               ConstantMethodHandle.java\n {\n   private int referenceKind;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int referenceIndex;\n     descriptor: I\n@@ -113,90 +113,90 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokevirtual #1                  // Method getReferenceKind:()I\n          5: aload_1\n-         6: invokevirtual #2                  // Method getReferenceIndex:()I\n-         9: invokespecial #3                  // Method \"<init>\":(II)V\n+         6: invokevirtual #7                  // Method getReferenceIndex:()I\n+         9: invokespecial #10                 // Method \"<init>\":(II)V\n         12: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 12\n \n   org.apache.bcel.classfile.ConstantMethodHandle(java.io.DataInput) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n+         2: invokeinterface #14,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n          7: aload_1\n-         8: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        13: invokespecial #3                  // Method \"<init>\":(II)V\n+         8: invokeinterface #19,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        13: invokespecial #10                 // Method \"<init>\":(II)V\n         16: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 16\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.bcel.classfile.ConstantMethodHandle(int, int);\n     descriptor: (II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: bipush        15\n-         3: invokespecial #7                  // Method org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n+         3: invokespecial #24                 // Method org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n          6: aload_0\n          7: iload_1\n-         8: putfield      #8                  // Field referenceKind:I\n+         8: putfield      #29                 // Field referenceKind:I\n         11: aload_0\n         12: iload_2\n-        13: putfield      #9                  // Field referenceIndex:I\n+        13: putfield      #33                 // Field referenceIndex:I\n         16: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 6\n         line 57: 11\n         line 58: 16\n \n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #10,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n+         2: invokeinterface #36,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitConstantMethodHandle:(Lorg/apache/bcel/classfile/ConstantMethodHandle;)V\n          7: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 7\n \n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #11                 // Method org/apache/bcel/classfile/Constant.getTag:()B\n-         5: invokevirtual #12                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: invokespecial #42                 // Method org/apache/bcel/classfile/Constant.getTag:()B\n+         5: invokevirtual #46                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #8                  // Field referenceKind:I\n-        13: invokevirtual #12                 // Method java/io/DataOutputStream.writeByte:(I)V\n+        10: getfield      #29                 // Field referenceKind:I\n+        13: invokevirtual #46                 // Method java/io/DataOutputStream.writeByte:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #9                  // Field referenceIndex:I\n-        21: invokevirtual #13                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #33                 // Field referenceIndex:I\n+        21: invokevirtual #52                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 8\n         line 81: 16\n         line 82: 24\n     Exceptions:\n@@ -204,78 +204,78 @@\n \n   public int getReferenceIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field referenceIndex:I\n+         1: getfield      #33                 // Field referenceIndex:I\n          4: ireturn\n       LineNumberTable:\n         line 85: 0\n \n   public int getReferenceKind();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field referenceKind:I\n+         1: getfield      #29                 // Field referenceKind:I\n          4: ireturn\n       LineNumberTable:\n         line 89: 0\n \n   public void setReferenceIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #9                  // Field referenceIndex:I\n+         2: putfield      #33                 // Field referenceIndex:I\n          5: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 5\n \n   public void setReferenceKind(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field referenceKind:I\n+         2: putfield      #29                 // Field referenceKind:I\n          5: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 5\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/StringBuilder\n+         0: new           #55                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: aload_0\n-         8: invokespecial #16                 // Method org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n-        11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: ldc           #18                 // String (referenceKind =\n-        16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         8: invokespecial #60                 // Method org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n+        11: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: ldc           #68                 // String (referenceKind =\n+        16: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: aload_0\n-        20: getfield      #8                  // Field referenceKind:I\n-        23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        26: ldc           #20                 // String , referenceIndex =\n-        28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: getfield      #29                 // Field referenceKind:I\n+        23: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        26: ldc           #73                 // String , referenceIndex =\n+        28: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         31: aload_0\n-        32: getfield      #9                  // Field referenceIndex:I\n-        35: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        38: ldc           #21                 // String )\n-        40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        43: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        32: getfield      #33                 // Field referenceIndex:I\n+        35: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        38: ldc           #75                 // String )\n+        40: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         46: areturn\n       LineNumberTable:\n         line 105: 0\n }\n SourceFile: \"ConstantMethodHandle.java\"\n"}]}
