{"diffoscope-json-version": 1, "source1": "first/FileTimes.class", "source2": "second/FileTimes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,52 +1,52 @@\n-  SHA-256 checksum 06140026f588f65a2400f79f7a5620931bd0c08041972dd6200c05a927cdd324\n+  SHA-256 checksum d569de8626269a4b5ba1304d00ba1ba76a45ac8a3d7440161fd05e0446db905e\n   Compiled from \"FileTimes.java\"\n public final class org.apache.commons.io.file.attribute.FileTimes\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #7                          // org/apache/commons/io/file/attribute/FileTimes\n   super_class: #37                        // java/lang/Object\n   interfaces: 0, fields: 4, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Methodref          #100.#101     // java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n-    #2 = Methodref          #102.#103     // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n-    #3 = Methodref          #100.#104     // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-    #4 = Methodref          #102.#105     // java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n-    #5 = Methodref          #102.#106     // java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n-    #6 = Methodref          #102.#107     // java/time/Instant.now:()Ljava/time/Instant;\n-    #7 = Class              #108          // org/apache/commons/io/file/attribute/FileTimes\n+    #1 = Methodref          #86.#99       // java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n+    #2 = Methodref          #100.#101     // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n+    #3 = Methodref          #86.#102      // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+    #4 = Methodref          #100.#103     // java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n+    #5 = Methodref          #100.#104     // java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n+    #6 = Methodref          #100.#105     // java/time/Instant.now:()Ljava/time/Instant;\n+    #7 = Class              #106          // org/apache/commons/io/file/attribute/FileTimes\n     #8 = Long               -116444736000000000l\n-   #10 = Methodref          #109.#110     // java/lang/Math.addExact:(JJ)J\n-   #11 = Fieldref           #7.#111       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_MILLISECOND:J\n-   #12 = Methodref          #109.#112     // java/lang/Math.floorDiv:(JJ)J\n-   #13 = Class              #113          // java/util/Date\n-   #14 = Methodref          #13.#114      // java/util/Date.\"<init>\":(J)V\n-   #15 = Fieldref           #7.#115       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_SECOND:J\n-   #16 = Methodref          #109.#116     // java/lang/Math.floorMod:(JJ)J\n+   #10 = Methodref          #107.#108     // java/lang/Math.addExact:(JJ)J\n+   #11 = Fieldref           #7.#109       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_MILLISECOND:J\n+   #12 = Methodref          #107.#110     // java/lang/Math.floorDiv:(JJ)J\n+   #13 = Class              #111          // java/util/Date\n+   #14 = Methodref          #13.#112      // java/util/Date.\"<init>\":(J)V\n+   #15 = Fieldref           #7.#113       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_SECOND:J\n+   #16 = Methodref          #107.#114     // java/lang/Math.floorMod:(JJ)J\n    #17 = Long               100l\n-   #19 = Methodref          #102.#117     // java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n-   #20 = Methodref          #102.#118     // java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n-   #21 = Methodref          #102.#119     // java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n-   #22 = Methodref          #102.#120     // java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n-   #23 = Methodref          #7.#121       // org/apache/commons/io/file/attribute/FileTimes.now:()Ljava/nio/file/attribute/FileTime;\n-   #24 = Methodref          #122.#123     // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-   #25 = Methodref          #100.#124     // java/nio/file/attribute/FileTime.toMillis:()J\n-   #26 = Methodref          #13.#125      // java/util/Date.getTime:()J\n-   #27 = Methodref          #100.#126     // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-   #28 = Methodref          #109.#127     // java/lang/Math.subtractExact:(JJ)J\n-   #29 = Methodref          #102.#128     // java/time/Instant.getEpochSecond:()J\n-   #30 = Methodref          #102.#129     // java/time/Instant.getNano:()I\n-   #31 = Methodref          #37.#130      // java/lang/Object.\"<init>\":()V\n-   #32 = Fieldref           #102.#131     // java/time/Instant.EPOCH:Ljava/time/Instant;\n-   #33 = Fieldref           #7.#132       // org/apache/commons/io/file/attribute/FileTimes.EPOCH:Ljava/nio/file/attribute/FileTime;\n-   #34 = Fieldref           #133.#134     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #35 = Methodref          #133.#135     // java/util/concurrent/TimeUnit.toNanos:(J)J\n-   #36 = Fieldref           #133.#136     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-   #37 = Class              #137          // java/lang/Object\n+   #19 = Methodref          #100.#115     // java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n+   #20 = Methodref          #100.#116     // java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n+   #21 = Methodref          #100.#117     // java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n+   #22 = Methodref          #100.#118     // java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n+   #23 = Methodref          #7.#119       // org/apache/commons/io/file/attribute/FileTimes.now:()Ljava/nio/file/attribute/FileTime;\n+   #24 = Methodref          #120.#121     // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #25 = Methodref          #86.#122      // java/nio/file/attribute/FileTime.toMillis:()J\n+   #26 = Methodref          #13.#123      // java/util/Date.getTime:()J\n+   #27 = Methodref          #86.#124      // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+   #28 = Methodref          #107.#125     // java/lang/Math.subtractExact:(JJ)J\n+   #29 = Methodref          #100.#126     // java/time/Instant.getEpochSecond:()J\n+   #30 = Methodref          #100.#127     // java/time/Instant.getNano:()I\n+   #31 = Methodref          #37.#128      // java/lang/Object.\"<init>\":()V\n+   #32 = Fieldref           #100.#129     // java/time/Instant.EPOCH:Ljava/time/Instant;\n+   #33 = Fieldref           #7.#130       // org/apache/commons/io/file/attribute/FileTimes.EPOCH:Ljava/nio/file/attribute/FileTime;\n+   #34 = Fieldref           #131.#132     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+   #35 = Methodref          #131.#133     // java/util/concurrent/TimeUnit.toNanos:(J)J\n+   #36 = Fieldref           #131.#134     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+   #37 = Class              #135          // java/lang/Object\n    #38 = Utf8               EPOCH\n    #39 = Utf8               Ljava/nio/file/attribute/FileTime;\n    #40 = Utf8               WINDOWS_EPOCH_OFFSET\n    #41 = Utf8               J\n    #42 = Utf8               ConstantValue\n    #43 = Utf8               HUNDRED_NANOS_PER_SECOND\n    #44 = Utf8               HUNDRED_NANOS_PER_MILLISECOND\n@@ -79,106 +79,104 @@\n    #71 = Utf8               plusSeconds\n    #72 = Utf8               secondsToAdd\n    #73 = Utf8               setLastModifiedTime\n    #74 = Utf8               (Ljava/nio/file/Path;)V\n    #75 = Utf8               path\n    #76 = Utf8               Ljava/nio/file/Path;\n    #77 = Utf8               Exceptions\n-   #78 = Class              #138          // java/io/IOException\n+   #78 = Class              #136          // java/io/IOException\n    #79 = Utf8               toDate\n    #80 = Utf8               (Ljava/nio/file/attribute/FileTime;)Ljava/util/Date;\n    #81 = Utf8               StackMapTable\n-   #82 = Class              #113          // java/util/Date\n-   #83 = Utf8               toFileTime\n-   #84 = Utf8               (Ljava/util/Date;)Ljava/nio/file/attribute/FileTime;\n-   #85 = Utf8               date\n-   #86 = Utf8               Ljava/util/Date;\n-   #87 = Class              #139          // java/nio/file/attribute/FileTime\n-   #88 = Utf8               toNtfsTime\n-   #89 = Utf8               (Ljava/util/Date;)J\n-   #90 = Utf8               (Ljava/nio/file/attribute/FileTime;)J\n-   #91 = Utf8               instant\n-   #92 = Utf8               Ljava/time/Instant;\n-   #93 = Utf8               <init>\n-   #94 = Utf8               ()V\n-   #95 = Utf8               this\n-   #96 = Utf8               Lorg/apache/commons/io/file/attribute/FileTimes;\n-   #97 = Utf8               <clinit>\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               FileTimes.java\n-  #100 = Class              #139          // java/nio/file/attribute/FileTime\n-  #101 = NameAndType        #140:#141     // toInstant:()Ljava/time/Instant;\n-  #102 = Class              #142          // java/time/Instant\n-  #103 = NameAndType        #45:#143      // minusMillis:(J)Ljava/time/Instant;\n-  #104 = NameAndType        #144:#145     // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-  #105 = NameAndType        #52:#143      // minusNanos:(J)Ljava/time/Instant;\n-  #106 = NameAndType        #54:#143      // minusSeconds:(J)Ljava/time/Instant;\n-  #107 = NameAndType        #56:#141      // now:()Ljava/time/Instant;\n-  #108 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n-  #109 = Class              #146          // java/lang/Math\n-  #110 = NameAndType        #147:#148     // addExact:(JJ)J\n-  #111 = NameAndType        #44:#41       // HUNDRED_NANOS_PER_MILLISECOND:J\n-  #112 = NameAndType        #149:#148     // floorDiv:(JJ)J\n-  #113 = Utf8               java/util/Date\n-  #114 = NameAndType        #93:#150      // \"<init>\":(J)V\n-  #115 = NameAndType        #43:#41       // HUNDRED_NANOS_PER_SECOND:J\n-  #116 = NameAndType        #151:#148     // floorMod:(JJ)J\n-  #117 = NameAndType        #152:#153     // ofEpochSecond:(JJ)Ljava/time/Instant;\n-  #118 = NameAndType        #68:#143      // plusMillis:(J)Ljava/time/Instant;\n-  #119 = NameAndType        #70:#143      // plusNanos:(J)Ljava/time/Instant;\n-  #120 = NameAndType        #71:#143      // plusSeconds:(J)Ljava/time/Instant;\n-  #121 = NameAndType        #56:#57       // now:()Ljava/nio/file/attribute/FileTime;\n-  #122 = Class              #154          // java/nio/file/Files\n-  #123 = NameAndType        #73:#155      // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-  #124 = NameAndType        #156:#157     // toMillis:()J\n-  #125 = NameAndType        #158:#157     // getTime:()J\n-  #126 = NameAndType        #159:#64      // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-  #127 = NameAndType        #160:#148     // subtractExact:(JJ)J\n-  #128 = NameAndType        #161:#157     // getEpochSecond:()J\n-  #129 = NameAndType        #162:#163     // getNano:()I\n-  #130 = NameAndType        #93:#94       // \"<init>\":()V\n-  #131 = NameAndType        #38:#92       // EPOCH:Ljava/time/Instant;\n-  #132 = NameAndType        #38:#39       // EPOCH:Ljava/nio/file/attribute/FileTime;\n-  #133 = Class              #164          // java/util/concurrent/TimeUnit\n-  #134 = NameAndType        #165:#166     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #135 = NameAndType        #167:#168     // toNanos:(J)J\n-  #136 = NameAndType        #169:#166     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-  #137 = Utf8               java/lang/Object\n-  #138 = Utf8               java/io/IOException\n-  #139 = Utf8               java/nio/file/attribute/FileTime\n-  #140 = Utf8               toInstant\n-  #141 = Utf8               ()Ljava/time/Instant;\n-  #142 = Utf8               java/time/Instant\n-  #143 = Utf8               (J)Ljava/time/Instant;\n-  #144 = Utf8               from\n-  #145 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-  #146 = Utf8               java/lang/Math\n-  #147 = Utf8               addExact\n-  #148 = Utf8               (JJ)J\n-  #149 = Utf8               floorDiv\n-  #150 = Utf8               (J)V\n-  #151 = Utf8               floorMod\n-  #152 = Utf8               ofEpochSecond\n-  #153 = Utf8               (JJ)Ljava/time/Instant;\n-  #154 = Utf8               java/nio/file/Files\n-  #155 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-  #156 = Utf8               toMillis\n-  #157 = Utf8               ()J\n-  #158 = Utf8               getTime\n-  #159 = Utf8               fromMillis\n-  #160 = Utf8               subtractExact\n-  #161 = Utf8               getEpochSecond\n-  #162 = Utf8               getNano\n-  #163 = Utf8               ()I\n-  #164 = Utf8               java/util/concurrent/TimeUnit\n-  #165 = Utf8               SECONDS\n-  #166 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #167 = Utf8               toNanos\n-  #168 = Utf8               (J)J\n-  #169 = Utf8               MILLISECONDS\n+   #82 = Utf8               toFileTime\n+   #83 = Utf8               (Ljava/util/Date;)Ljava/nio/file/attribute/FileTime;\n+   #84 = Utf8               date\n+   #85 = Utf8               Ljava/util/Date;\n+   #86 = Class              #137          // java/nio/file/attribute/FileTime\n+   #87 = Utf8               toNtfsTime\n+   #88 = Utf8               (Ljava/util/Date;)J\n+   #89 = Utf8               (Ljava/nio/file/attribute/FileTime;)J\n+   #90 = Utf8               instant\n+   #91 = Utf8               Ljava/time/Instant;\n+   #92 = Utf8               <init>\n+   #93 = Utf8               ()V\n+   #94 = Utf8               this\n+   #95 = Utf8               Lorg/apache/commons/io/file/attribute/FileTimes;\n+   #96 = Utf8               <clinit>\n+   #97 = Utf8               SourceFile\n+   #98 = Utf8               FileTimes.java\n+   #99 = NameAndType        #138:#139     // toInstant:()Ljava/time/Instant;\n+  #100 = Class              #140          // java/time/Instant\n+  #101 = NameAndType        #45:#141      // minusMillis:(J)Ljava/time/Instant;\n+  #102 = NameAndType        #142:#143     // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+  #103 = NameAndType        #52:#141      // minusNanos:(J)Ljava/time/Instant;\n+  #104 = NameAndType        #54:#141      // minusSeconds:(J)Ljava/time/Instant;\n+  #105 = NameAndType        #56:#139      // now:()Ljava/time/Instant;\n+  #106 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n+  #107 = Class              #144          // java/lang/Math\n+  #108 = NameAndType        #145:#146     // addExact:(JJ)J\n+  #109 = NameAndType        #44:#41       // HUNDRED_NANOS_PER_MILLISECOND:J\n+  #110 = NameAndType        #147:#146     // floorDiv:(JJ)J\n+  #111 = Utf8               java/util/Date\n+  #112 = NameAndType        #92:#148      // \"<init>\":(J)V\n+  #113 = NameAndType        #43:#41       // HUNDRED_NANOS_PER_SECOND:J\n+  #114 = NameAndType        #149:#146     // floorMod:(JJ)J\n+  #115 = NameAndType        #150:#151     // ofEpochSecond:(JJ)Ljava/time/Instant;\n+  #116 = NameAndType        #68:#141      // plusMillis:(J)Ljava/time/Instant;\n+  #117 = NameAndType        #70:#141      // plusNanos:(J)Ljava/time/Instant;\n+  #118 = NameAndType        #71:#141      // plusSeconds:(J)Ljava/time/Instant;\n+  #119 = NameAndType        #56:#57       // now:()Ljava/nio/file/attribute/FileTime;\n+  #120 = Class              #152          // java/nio/file/Files\n+  #121 = NameAndType        #73:#153      // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+  #122 = NameAndType        #154:#155     // toMillis:()J\n+  #123 = NameAndType        #156:#155     // getTime:()J\n+  #124 = NameAndType        #157:#64      // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+  #125 = NameAndType        #158:#146     // subtractExact:(JJ)J\n+  #126 = NameAndType        #159:#155     // getEpochSecond:()J\n+  #127 = NameAndType        #160:#161     // getNano:()I\n+  #128 = NameAndType        #92:#93       // \"<init>\":()V\n+  #129 = NameAndType        #38:#91       // EPOCH:Ljava/time/Instant;\n+  #130 = NameAndType        #38:#39       // EPOCH:Ljava/nio/file/attribute/FileTime;\n+  #131 = Class              #162          // java/util/concurrent/TimeUnit\n+  #132 = NameAndType        #163:#164     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #133 = NameAndType        #165:#166     // toNanos:(J)J\n+  #134 = NameAndType        #167:#164     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+  #135 = Utf8               java/lang/Object\n+  #136 = Utf8               java/io/IOException\n+  #137 = Utf8               java/nio/file/attribute/FileTime\n+  #138 = Utf8               toInstant\n+  #139 = Utf8               ()Ljava/time/Instant;\n+  #140 = Utf8               java/time/Instant\n+  #141 = Utf8               (J)Ljava/time/Instant;\n+  #142 = Utf8               from\n+  #143 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+  #144 = Utf8               java/lang/Math\n+  #145 = Utf8               addExact\n+  #146 = Utf8               (JJ)J\n+  #147 = Utf8               floorDiv\n+  #148 = Utf8               (J)V\n+  #149 = Utf8               floorMod\n+  #150 = Utf8               ofEpochSecond\n+  #151 = Utf8               (JJ)Ljava/time/Instant;\n+  #152 = Utf8               java/nio/file/Files\n+  #153 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+  #154 = Utf8               toMillis\n+  #155 = Utf8               ()J\n+  #156 = Utf8               getTime\n+  #157 = Utf8               fromMillis\n+  #158 = Utf8               subtractExact\n+  #159 = Utf8               getEpochSecond\n+  #160 = Utf8               getNano\n+  #161 = Utf8               ()I\n+  #162 = Utf8               java/util/concurrent/TimeUnit\n+  #163 = Utf8               SECONDS\n+  #164 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #165 = Utf8               toNanos\n+  #166 = Utf8               (J)J\n+  #167 = Utf8               MILLISECONDS\n {\n   public static final java.nio.file.attribute.FileTime EPOCH;\n     descriptor: Ljava/nio/file/attribute/FileTime;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   static final long WINDOWS_EPOCH_OFFSET = -116444736000000000l;\n     descriptor: J\n"}]}
