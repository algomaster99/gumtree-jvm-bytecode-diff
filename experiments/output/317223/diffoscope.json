{"diffoscope-json-version": 1, "source1": "first/FailableBiFunction.class", "source2": "second/FailableBiFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,139 @@\n-  SHA-256 checksum 327c557c3d127aa804e27c6c0a69044e06f3d9c85dd6e2d9246f34967fabda71\n+  SHA-256 checksum 2f550d78e62395d8edc1ee5264a6747f6a2da08e2879e172f49286f315c5d48a\n   Compiled from \"FailableBiFunction.java\"\n public interface org.apache.commons.lang3.function.FailableBiFunction<T extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #7                          // org/apache/commons/lang3/function/FailableBiFunction\n-  super_class: #8                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/function/FailableBiFunction\n+  super_class: #27                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 6, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #7.#35         // org/apache/commons/lang3/function/FailableBiFunction.NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n-   #2 = Methodref          #36.#37        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #3 = InvokeDynamic      #0:#42         // #0:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n-   #4 = InterfaceMethodref #7.#43         // org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #5 = InterfaceMethodref #44.#45        // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #6 = InvokeDynamic      #1:#47         // #1:apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n-   #7 = Class              #48            // org/apache/commons/lang3/function/FailableBiFunction\n-   #8 = Class              #49            // java/lang/Object\n-   #9 = Utf8               NOP\n-  #10 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #11 = Utf8               nop\n-  #12 = Utf8               ()Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #13 = Utf8               Code\n-  #14 = Utf8               LineNumberTable\n-  #15 = Utf8               Signature\n-  #16 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n-  #17 = Utf8               andThen\n-  #18 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #19 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TV;TE;>;\n-  #20 = Utf8               apply\n-  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #22 = Utf8               Exceptions\n-  #23 = Class              #50            // java/lang/Throwable\n-  #24 = Utf8               (TT;TU;)TR;^TE;\n-  #25 = Utf8               lambda$andThen$1\n-  #26 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #27 = Utf8               lambda$static$0\n-  #28 = Utf8               <clinit>\n-  #29 = Utf8               ()V\n-  #30 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               FailableBiFunction.java\n-  #33 = Utf8               RuntimeVisibleAnnotations\n-  #34 = Utf8               Ljava/lang/FunctionalInterface;\n-  #35 = NameAndType        #9:#10         // NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #36 = Class              #51            // java/util/Objects\n-  #37 = NameAndType        #52:#53        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #38 = Utf8               BootstrapMethods\n-  #39 = MethodHandle       6:#54          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #40 = MethodType         #21            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #41 = MethodHandle       7:#55          // REF_invokeSpecial org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #42 = NameAndType        #20:#56        // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #43 = NameAndType        #20:#21        // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #44 = Class              #57            // org/apache/commons/lang3/function/FailableFunction\n-  #45 = NameAndType        #20:#53        // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #46 = MethodHandle       6:#58          // REF_invokeStatic org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #47 = NameAndType        #20:#12        // apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #48 = Utf8               org/apache/commons/lang3/function/FailableBiFunction\n-  #49 = Utf8               java/lang/Object\n-  #50 = Utf8               java/lang/Throwable\n-  #51 = Utf8               java/util/Objects\n-  #52 = Utf8               requireNonNull\n-  #53 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #54 = Methodref          #59.#60        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #55 = InterfaceMethodref #7.#61         // org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #56 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #57 = Utf8               org/apache/commons/lang3/function/FailableFunction\n-  #58 = InterfaceMethodref #7.#62         // org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #59 = Class              #63            // java/lang/invoke/LambdaMetafactory\n-  #60 = NameAndType        #64:#68        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #61 = NameAndType        #25:#26        // lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #62 = NameAndType        #27:#21        // lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #63 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #64 = Utf8               metafactory\n-  #65 = Class              #70            // java/lang/invoke/MethodHandles$Lookup\n-  #66 = Utf8               Lookup\n-  #67 = Utf8               InnerClasses\n-  #68 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #69 = Class              #71            // java/lang/invoke/MethodHandles\n-  #70 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #71 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableBiFunction.NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n+   #2 = Class              #4             // org/apache/commons/lang3/function/FailableBiFunction\n+   #3 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n+   #4 = Utf8               org/apache/commons/lang3/function/FailableBiFunction\n+   #5 = Utf8               NOP\n+   #6 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction;\n+   #7 = Methodref          #8.#9          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #8 = Class              #10            // java/util/Objects\n+   #9 = NameAndType        #11:#12        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #10 = Utf8               java/util/Objects\n+  #11 = Utf8               requireNonNull\n+  #12 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #13 = InvokeDynamic      #0:#14         // #0:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #14 = NameAndType        #15:#16        // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #15 = Utf8               apply\n+  #16 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #17 = InterfaceMethodref #2.#18         // org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #18 = NameAndType        #15:#19        // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #19 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #20 = InterfaceMethodref #21.#22        // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #21 = Class              #23            // org/apache/commons/lang3/function/FailableFunction\n+  #22 = NameAndType        #15:#12        // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #23 = Utf8               org/apache/commons/lang3/function/FailableFunction\n+  #24 = InvokeDynamic      #1:#25         // #1:apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #25 = NameAndType        #15:#26        // apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #26 = Utf8               ()Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #27 = Class              #28            // java/lang/Object\n+  #28 = Utf8               java/lang/Object\n+  #29 = Utf8               nop\n+  #30 = Utf8               Code\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               Signature\n+  #33 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n+  #34 = Utf8               andThen\n+  #35 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #36 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TV;TE;>;\n+  #37 = Utf8               Exceptions\n+  #38 = Class              #39            // java/lang/Throwable\n+  #39 = Utf8               java/lang/Throwable\n+  #40 = Utf8               (TT;TU;)TR;^TE;\n+  #41 = Utf8               lambda$andThen$1\n+  #42 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #43 = Utf8               lambda$static$0\n+  #44 = Utf8               <clinit>\n+  #45 = Utf8               ()V\n+  #46 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #47 = Utf8               SourceFile\n+  #48 = Utf8               FailableBiFunction.java\n+  #49 = Utf8               RuntimeVisibleAnnotations\n+  #50 = Utf8               Ljava/lang/FunctionalInterface;\n+  #51 = Utf8               BootstrapMethods\n+  #52 = MethodHandle       6:#53          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #53 = Methodref          #54.#55        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #54 = Class              #56            // java/lang/invoke/LambdaMetafactory\n+  #55 = NameAndType        #57:#58        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #56 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #57 = Utf8               metafactory\n+  #58 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #59 = MethodType         #19            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #60 = MethodHandle       7:#61          // REF_invokeSpecial org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #61 = InterfaceMethodref #2.#62         // org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #62 = NameAndType        #41:#42        // lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #63 = MethodHandle       6:#64          // REF_invokeStatic org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #64 = InterfaceMethodref #2.#65         // org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #65 = NameAndType        #43:#19        // lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #66 = Utf8               InnerClasses\n+  #67 = Class              #68            // java/lang/invoke/MethodHandles$Lookup\n+  #68 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #69 = Class              #70            // java/lang/invoke/MethodHandles\n+  #70 = Utf8               java/lang/invoke/MethodHandles\n+  #71 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableBiFunction NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableBiFunction;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <T extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableBiFunction<T, U, R, E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableBiFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n          3: areturn\n       LineNumberTable:\n         line 50: 0\n-    Signature: #16                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n+    Signature: #33                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n \n   public default <V extends java.lang.Object> org.apache.commons.lang3.function.FailableBiFunction<T, U, V, E> andThen(org.apache.commons.lang3.function.FailableFunction<? super R, ? extends V, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #3,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n+         7: invokedynamic #13,  0             // InvokeDynamic #0:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableBiFunction;\n         12: areturn\n       LineNumberTable:\n         line 62: 0\n         line 63: 5\n-    Signature: #19                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TV;TE;>;\n+    Signature: #36                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TV;TE;>;\n \n   public abstract R apply(T, U) throws E;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #24                          // (TT;TU;)TR;^TE;\n+    Signature: #40                          // (TT;TU;)TR;^TE;\n \n   private java.lang.Object lambda$andThen$1(org.apache.commons.lang3.function.FailableFunction, java.lang.Object, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_0\n          2: aload_2\n          3: aload_3\n-         4: invokeinterface #4,  3            // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-         9: invokeinterface #5,  2            // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         4: invokeinterface #17,  3           // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         14: areturn\n       LineNumberTable:\n         line 63: 0\n     Exceptions:\n       throws java.lang.Throwable\n \n   private static java.lang.Object lambda$static$0(java.lang.Object, java.lang.Object) throws java.lang.Throwable;\n@@ -149,31 +149,31 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #6,  0              // InvokeDynamic #1:apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n+         0: invokedynamic #24,  0             // InvokeDynamic #1:apply:()Lorg/apache/commons/lang3/function/FailableBiFunction;\n          5: putstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableBiFunction;\n          8: return\n       LineNumberTable:\n         line 38: 0\n }\n-Signature: #30                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #46                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableBiFunction.java\"\n RuntimeVisibleAnnotations:\n-  0: #34()\n+  0: #50()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #66= #65 of #69;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #41 REF_invokeSpecial org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #40 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  1: #39 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #60 REF_invokeSpecial org/apache/commons/lang3/function/FailableBiFunction.lambda$andThen$1:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  1: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #40 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #46 REF_invokeStatic org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #40 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #63 REF_invokeStatic org/apache/commons/lang3/function/FailableBiFunction.lambda$static$0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+InnerClasses:\n+  public static final #71= #67 of #69;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
