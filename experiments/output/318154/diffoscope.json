{"diffoscope-json-version": 1, "source1": "first/CallableBackgroundInitializer.class", "source2": "second/CallableBackgroundInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,151 +1,151 @@\n-  SHA-256 checksum 6ee51a7de7cb2f6eab7fafc5e887856d52260583ce347a011a38aeae54e8bfec\n+  SHA-256 checksum 11e2f0ad678366d5e9e8576038e7eff2d39598d773b9422bc2c6778beb111f47\n   Compiled from \"CallableBackgroundInitializer.java\"\n public class org.apache.commons.lang3.concurrent.CallableBackgroundInitializer<T extends java.lang.Object> extends org.apache.commons.lang3.concurrent.BackgroundInitializer<T>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #9                          // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n-  super_class: #10                        // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+  this_class: #8                          // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n+  super_class: #2                         // org/apache/commons/lang3/concurrent/BackgroundInitializer\n   interfaces: 0, fields: 1, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #10.#32        // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":()V\n-   #2 = Methodref          #9.#33         // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.checkCallable:(Ljava/util/concurrent/Callable;)V\n-   #3 = Fieldref           #9.#34         // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.callable:Ljava/util/concurrent/Callable;\n-   #4 = Methodref          #10.#35        // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-   #5 = InterfaceMethodref #36.#37        // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n-   #6 = String             #38            // Callable must not be null!\n-   #7 = Class              #39            // java/lang/Object\n-   #8 = Methodref          #40.#41        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #9 = Class              #42            // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n-  #10 = Class              #43            // org/apache/commons/lang3/concurrent/BackgroundInitializer\n-  #11 = Utf8               callable\n-  #12 = Utf8               Ljava/util/concurrent/Callable;\n-  #13 = Utf8               Signature\n-  #14 = Utf8               Ljava/util/concurrent/Callable<TT;>;\n-  #15 = Utf8               <init>\n-  #16 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               (Ljava/util/concurrent/Callable<TT;>;)V\n-  #20 = Utf8               (Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V\n-  #21 = Utf8               (Ljava/util/concurrent/Callable<TT;>;Ljava/util/concurrent/ExecutorService;)V\n-  #22 = Utf8               initialize\n-  #23 = Utf8               ()Ljava/lang/Object;\n-  #24 = Utf8               Exceptions\n-  #25 = Class              #44            // java/lang/Exception\n-  #26 = Utf8               ()TT;\n-  #27 = Utf8               checkCallable\n-  #28 = Utf8               StackMapTable\n-  #29 = Utf8               <T:Ljava/lang/Object;>Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               CallableBackgroundInitializer.java\n-  #32 = NameAndType        #15:#45        // \"<init>\":()V\n-  #33 = NameAndType        #27:#16        // checkCallable:(Ljava/util/concurrent/Callable;)V\n-  #34 = NameAndType        #11:#12        // callable:Ljava/util/concurrent/Callable;\n-  #35 = NameAndType        #15:#46        // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-  #36 = Class              #47            // java/util/concurrent/Callable\n-  #37 = NameAndType        #48:#23        // call:()Ljava/lang/Object;\n-  #38 = Utf8               Callable must not be null!\n-  #39 = Utf8               java/lang/Object\n-  #40 = Class              #49            // org/apache/commons/lang3/Validate\n-  #41 = NameAndType        #50:#51        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #42 = Utf8               org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n-  #43 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n-  #44 = Utf8               java/lang/Exception\n-  #45 = Utf8               ()V\n-  #46 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n-  #47 = Utf8               java/util/concurrent/Callable\n-  #48 = Utf8               call\n-  #49 = Utf8               org/apache/commons/lang3/Validate\n-  #50 = Utf8               isTrue\n-  #51 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.checkCallable:(Ljava/util/concurrent/Callable;)V\n+   #8 = Class              #10            // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n+   #9 = NameAndType        #11:#12        // checkCallable:(Ljava/util/concurrent/Callable;)V\n+  #10 = Utf8               org/apache/commons/lang3/concurrent/CallableBackgroundInitializer\n+  #11 = Utf8               checkCallable\n+  #12 = Utf8               (Ljava/util/concurrent/Callable;)V\n+  #13 = Fieldref           #8.#14         // org/apache/commons/lang3/concurrent/CallableBackgroundInitializer.callable:Ljava/util/concurrent/Callable;\n+  #14 = NameAndType        #15:#16        // callable:Ljava/util/concurrent/Callable;\n+  #15 = Utf8               callable\n+  #16 = Utf8               Ljava/util/concurrent/Callable;\n+  #17 = Methodref          #2.#18         // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+  #19 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n+  #20 = InterfaceMethodref #21.#22        // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n+  #21 = Class              #23            // java/util/concurrent/Callable\n+  #22 = NameAndType        #24:#25        // call:()Ljava/lang/Object;\n+  #23 = Utf8               java/util/concurrent/Callable\n+  #24 = Utf8               call\n+  #25 = Utf8               ()Ljava/lang/Object;\n+  #26 = String             #27            // Callable must not be null!\n+  #27 = Utf8               Callable must not be null!\n+  #28 = Class              #29            // java/lang/Object\n+  #29 = Utf8               java/lang/Object\n+  #30 = Methodref          #31.#32        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #31 = Class              #33            // org/apache/commons/lang3/Validate\n+  #32 = NameAndType        #34:#35        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #33 = Utf8               org/apache/commons/lang3/Validate\n+  #34 = Utf8               isTrue\n+  #35 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #36 = Utf8               Signature\n+  #37 = Utf8               Ljava/util/concurrent/Callable<TT;>;\n+  #38 = Utf8               Code\n+  #39 = Utf8               LineNumberTable\n+  #40 = Utf8               (Ljava/util/concurrent/Callable<TT;>;)V\n+  #41 = Utf8               (Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V\n+  #42 = Utf8               (Ljava/util/concurrent/Callable<TT;>;Ljava/util/concurrent/ExecutorService;)V\n+  #43 = Utf8               initialize\n+  #44 = Utf8               Exceptions\n+  #45 = Class              #46            // java/lang/Exception\n+  #46 = Utf8               java/lang/Exception\n+  #47 = Utf8               ()TT;\n+  #48 = Utf8               StackMapTable\n+  #49 = Utf8               <T:Ljava/lang/Object;>Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n+  #50 = Utf8               SourceFile\n+  #51 = Utf8               CallableBackgroundInitializer.java\n {\n   private final java.util.concurrent.Callable<T> callable;\n     descriptor: Ljava/util/concurrent/Callable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #14                          // Ljava/util/concurrent/Callable<TT;>;\n+    Signature: #37                          // Ljava/util/concurrent/Callable<TT;>;\n \n   public org.apache.commons.lang3.concurrent.CallableBackgroundInitializer(java.util.concurrent.Callable<T>);\n     descriptor: (Ljava/util/concurrent/Callable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #2                  // Method checkCallable:(Ljava/util/concurrent/Callable;)V\n+         6: invokespecial #7                  // Method checkCallable:(Ljava/util/concurrent/Callable;)V\n          9: aload_0\n         10: aload_1\n-        11: putfield      #3                  // Field callable:Ljava/util/concurrent/Callable;\n+        11: putfield      #13                 // Field callable:Ljava/util/concurrent/Callable;\n         14: return\n       LineNumberTable:\n         line 80: 0\n         line 81: 4\n         line 82: 9\n         line 83: 14\n-    Signature: #19                          // (Ljava/util/concurrent/Callable<TT;>;)V\n+    Signature: #40                          // (Ljava/util/concurrent/Callable<TT;>;)V\n \n   public org.apache.commons.lang3.concurrent.CallableBackgroundInitializer(java.util.concurrent.Callable<T>, java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/Callable;Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokespecial #4                  // Method org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+         2: invokespecial #17                 // Method org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n          5: aload_0\n          6: aload_1\n-         7: invokespecial #2                  // Method checkCallable:(Ljava/util/concurrent/Callable;)V\n+         7: invokespecial #7                  // Method checkCallable:(Ljava/util/concurrent/Callable;)V\n         10: aload_0\n         11: aload_1\n-        12: putfield      #3                  // Field callable:Ljava/util/concurrent/Callable;\n+        12: putfield      #13                 // Field callable:Ljava/util/concurrent/Callable;\n         15: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 5\n         line 99: 10\n         line 100: 15\n-    Signature: #21                          // (Ljava/util/concurrent/Callable<TT;>;Ljava/util/concurrent/ExecutorService;)V\n+    Signature: #42                          // (Ljava/util/concurrent/Callable<TT;>;Ljava/util/concurrent/ExecutorService;)V\n \n   protected T initialize() throws java.lang.Exception;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field callable:Ljava/util/concurrent/Callable;\n-         4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;\n+         1: getfield      #13                 // Field callable:Ljava/util/concurrent/Callable;\n+         4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;\n          9: areturn\n       LineNumberTable:\n         line 112: 0\n     Exceptions:\n       throws java.lang.Exception\n-    Signature: #26                          // ()TT;\n+    Signature: #47                          // ()TT;\n \n   private void checkCallable(java.util.concurrent.Callable<T>);\n     descriptor: (Ljava/util/concurrent/Callable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #6                  // String Callable must not be null!\n+         9: ldc           #26                 // String Callable must not be null!\n         11: iconst_0\n-        12: anewarray     #7                  // class java/lang/Object\n-        15: invokestatic  #8                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #28                 // class java/lang/Object\n+        15: invokestatic  #30                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 18\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #19                          // (Ljava/util/concurrent/Callable<TT;>;)V\n+    Signature: #40                          // (Ljava/util/concurrent/Callable<TT;>;)V\n }\n-Signature: #29                          // <T:Ljava/lang/Object;>Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n+Signature: #49                          // <T:Ljava/lang/Object;>Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n SourceFile: \"CallableBackgroundInitializer.java\"\n"}]}
