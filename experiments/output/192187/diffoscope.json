{"diffoscope-json-version": 1, "source1": "first/PathVisitorFileFilter.class", "source2": "second/PathVisitorFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum 969e7e20816b624e499a2434125116b050845e67fe781d406d11c4572b1ce3ef\n+  SHA-256 checksum 2540886b232e120eec9762d0eb42375052282beee0d82494bfaeb0de41609e17\n   Compiled from \"PathVisitorFileFilter.java\"\n public class org.apache.commons.io.filefilter.PathVisitorFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-  super_class: #21                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #14                         // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 0, fields: 1, methods: 7, attributes: 3\n Constant pool:\n-    #1 = Methodref          #21.#58       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Fieldref           #59.#60       // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-    #3 = Fieldref           #20.#61       // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-    #4 = Methodref          #41.#62       // java/io/File.toPath:()Ljava/nio/file/Path;\n-    #5 = Methodref          #41.#63       // java/io/File.exists:()Z\n-    #6 = Methodref          #64.#65       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-    #7 = Methodref          #20.#66       // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-    #8 = Fieldref           #55.#67       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #9 = Class              #68           // java/io/IOException\n-   #10 = Methodref          #20.#69       // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #11 = InterfaceMethodref #16.#70       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #12 = Methodref          #20.#71       // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #13 = InvokeDynamic      #0:#77        // #0:get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n-   #14 = Methodref          #20.#78       // org/apache/commons/io/filefilter/PathVisitorFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-   #15 = InterfaceMethodref #32.#79       // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #16 = Class              #80           // java/nio/file/Path\n-   #17 = Class              #81           // java/nio/file/LinkOption\n-   #18 = Methodref          #82.#83       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #19 = InterfaceMethodref #32.#84       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #20 = Class              #85           // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #21 = Class              #86           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #22 = Utf8               pathVisitor\n-   #23 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n-   #24 = Utf8               <init>\n-   #25 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n-   #26 = Utf8               Code\n-   #27 = Utf8               LineNumberTable\n-   #28 = Utf8               LocalVariableTable\n-   #29 = Utf8               this\n-   #30 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-   #31 = Utf8               StackMapTable\n-   #32 = Class              #87           // org/apache/commons/io/file/PathVisitor\n-   #33 = Utf8               accept\n-   #34 = Utf8               (Ljava/io/File;)Z\n-   #35 = Utf8               path\n-   #36 = Utf8               Ljava/nio/file/Path;\n-   #37 = Utf8               e\n-   #38 = Utf8               Ljava/io/IOException;\n-   #39 = Utf8               file\n-   #40 = Utf8               Ljava/io/File;\n-   #41 = Class              #88           // java/io/File\n-   #42 = Class              #89           // java/nio/file/attribute/BasicFileAttributes\n-   #43 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #44 = Utf8               dir\n-   #45 = Utf8               name\n-   #46 = Utf8               Ljava/lang/String;\n-   #47 = Class              #90           // java/lang/String\n-   #48 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               attributes\n-   #50 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #51 = Utf8               visitFile\n-   #52 = Utf8               Exceptions\n-   #53 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #54 = Utf8               lambda$accept$0\n-   #55 = Class              #91           // java/nio/file/FileVisitResult\n-   #56 = Utf8               SourceFile\n-   #57 = Utf8               PathVisitorFileFilter.java\n-   #58 = NameAndType        #24:#92       // \"<init>\":()V\n-   #59 = Class              #93           // org/apache/commons/io/file/NoopPathVisitor\n-   #60 = NameAndType        #94:#95       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #61 = NameAndType        #22:#23       // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-   #62 = NameAndType        #96:#97       // toPath:()Ljava/nio/file/Path;\n-   #63 = NameAndType        #98:#99       // exists:()Z\n-   #64 = Class              #100          // org/apache/commons/io/file/PathUtils\n-   #65 = NameAndType        #101:#102     // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #66 = NameAndType        #51:#48       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #67 = NameAndType        #103:#104     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #68 = Utf8               java/io/IOException\n-   #69 = NameAndType        #105:#106     // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #70 = NameAndType        #107:#108     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #71 = NameAndType        #33:#48       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #72 = Utf8               BootstrapMethods\n-   #73 = MethodHandle       6:#109        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #74 = MethodType         #110          //  ()Ljava/lang/Object;\n-   #75 = MethodHandle       7:#111        // REF_invokeSpecial org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #76 = MethodType         #112          //  ()Ljava/nio/file/FileVisitResult;\n-   #77 = NameAndType        #113:#114     // get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n-   #78 = NameAndType        #113:#115     // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-   #79 = NameAndType        #51:#53       // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #80 = Utf8               java/nio/file/Path\n-   #81 = Utf8               java/nio/file/LinkOption\n-   #82 = Class              #116          // java/nio/file/Files\n-   #83 = NameAndType        #117:#118     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #84 = NameAndType        #119:#120     // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #85 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #86 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #87 = Utf8               org/apache/commons/io/file/PathVisitor\n-   #88 = Utf8               java/io/File\n-   #89 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-   #90 = Utf8               java/lang/String\n-   #91 = Utf8               java/nio/file/FileVisitResult\n-   #92 = Utf8               ()V\n-   #93 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n-   #94 = Utf8               INSTANCE\n-   #95 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #96 = Utf8               toPath\n-   #97 = Utf8               ()Ljava/nio/file/Path;\n-   #98 = Utf8               exists\n-   #99 = Utf8               ()Z\n-  #100 = Utf8               org/apache/commons/io/file/PathUtils\n-  #101 = Utf8               readBasicFileAttributes\n-  #102 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #103 = Utf8               CONTINUE\n-  #104 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #105 = Utf8               handle\n-  #106 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-  #107 = Utf8               resolve\n-  #108 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-  #109 = Methodref          #121.#122     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #110 = Utf8               ()Ljava/lang/Object;\n-  #111 = Methodref          #20.#123      // org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #112 = Utf8               ()Ljava/nio/file/FileVisitResult;\n-  #113 = Utf8               get\n-  #114 = Utf8               (Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n-  #115 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-  #116 = Utf8               java/nio/file/Files\n-  #117 = Utf8               isDirectory\n-  #118 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #119 = Utf8               postVisitDirectory\n-  #120 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #121 = Class              #124          // java/lang/invoke/LambdaMetafactory\n-  #122 = NameAndType        #125:#129     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #123 = NameAndType        #54:#48       // lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #124 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #125 = Utf8               metafactory\n-  #126 = Class              #131          // java/lang/invoke/MethodHandles$Lookup\n-  #127 = Utf8               Lookup\n-  #128 = Utf8               InnerClasses\n-  #129 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #130 = Class              #132          // java/lang/invoke/MethodHandles\n-  #131 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #132 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+    #8 = Class              #10           // org/apache/commons/io/file/NoopPathVisitor\n+    #9 = NameAndType        #11:#12       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #10 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n+   #11 = Utf8               INSTANCE\n+   #12 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #14 = Class              #16           // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+   #15 = NameAndType        #17:#18       // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #16 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n+   #17 = Utf8               pathVisitor\n+   #18 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n+   #19 = Methodref          #20.#21       // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #20 = Class              #22           // java/io/File\n+   #21 = NameAndType        #23:#24       // toPath:()Ljava/nio/file/Path;\n+   #22 = Utf8               java/io/File\n+   #23 = Utf8               toPath\n+   #24 = Utf8               ()Ljava/nio/file/Path;\n+   #25 = Methodref          #20.#26       // java/io/File.exists:()Z\n+   #26 = NameAndType        #27:#28       // exists:()Z\n+   #27 = Utf8               exists\n+   #28 = Utf8               ()Z\n+   #29 = Methodref          #30.#31       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #30 = Class              #32           // org/apache/commons/io/file/PathUtils\n+   #31 = NameAndType        #33:#34       // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #32 = Utf8               org/apache/commons/io/file/PathUtils\n+   #33 = Utf8               readBasicFileAttributes\n+   #34 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #35 = Methodref          #14.#36       // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #36 = NameAndType        #37:#38       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #37 = Utf8               visitFile\n+   #38 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #39 = Fieldref           #40.#41       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #40 = Class              #42           // java/nio/file/FileVisitResult\n+   #41 = NameAndType        #43:#44       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #42 = Utf8               java/nio/file/FileVisitResult\n+   #43 = Utf8               CONTINUE\n+   #44 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #45 = Class              #46           // java/io/IOException\n+   #46 = Utf8               java/io/IOException\n+   #47 = Methodref          #14.#48       // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #48 = NameAndType        #49:#50       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #49 = Utf8               handle\n+   #50 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #51 = InterfaceMethodref #52.#53       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #52 = Class              #54           // java/nio/file/Path\n+   #53 = NameAndType        #55:#56       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #54 = Utf8               java/nio/file/Path\n+   #55 = Utf8               resolve\n+   #56 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+   #57 = Methodref          #14.#58       // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #58 = NameAndType        #59:#38       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #59 = Utf8               accept\n+   #60 = InvokeDynamic      #0:#61        // #0:get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n+   #61 = NameAndType        #62:#63       // get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n+   #62 = Utf8               get\n+   #63 = Utf8               (Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n+   #64 = Methodref          #14.#65       // org/apache/commons/io/filefilter/PathVisitorFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #65 = NameAndType        #62:#66       // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #66 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #67 = InterfaceMethodref #68.#69       // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #68 = Class              #70           // org/apache/commons/io/file/PathVisitor\n+   #69 = NameAndType        #37:#71       // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #70 = Utf8               org/apache/commons/io/file/PathVisitor\n+   #71 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #72 = Class              #73           // java/nio/file/LinkOption\n+   #73 = Utf8               java/nio/file/LinkOption\n+   #74 = Methodref          #75.#76       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #75 = Class              #77           // java/nio/file/Files\n+   #76 = NameAndType        #78:#79       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #77 = Utf8               java/nio/file/Files\n+   #78 = Utf8               isDirectory\n+   #79 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #80 = InterfaceMethodref #68.#81       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #81 = NameAndType        #82:#83       // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #82 = Utf8               postVisitDirectory\n+   #83 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #84 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n+   #85 = Utf8               Code\n+   #86 = Utf8               LineNumberTable\n+   #87 = Utf8               LocalVariableTable\n+   #88 = Utf8               this\n+   #89 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n+   #90 = Utf8               StackMapTable\n+   #91 = Utf8               (Ljava/io/File;)Z\n+   #92 = Utf8               path\n+   #93 = Utf8               Ljava/nio/file/Path;\n+   #94 = Utf8               e\n+   #95 = Utf8               Ljava/io/IOException;\n+   #96 = Utf8               file\n+   #97 = Utf8               Ljava/io/File;\n+   #98 = Class              #99           // java/nio/file/attribute/BasicFileAttributes\n+   #99 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #100 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #101 = Utf8               dir\n+  #102 = Utf8               name\n+  #103 = Utf8               Ljava/lang/String;\n+  #104 = Class              #105          // java/lang/String\n+  #105 = Utf8               java/lang/String\n+  #106 = Utf8               attributes\n+  #107 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #108 = Utf8               Exceptions\n+  #109 = Utf8               lambda$accept$0\n+  #110 = Utf8               SourceFile\n+  #111 = Utf8               PathVisitorFileFilter.java\n+  #112 = Utf8               BootstrapMethods\n+  #113 = MethodHandle       6:#114        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #114 = Methodref          #115.#116     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #115 = Class              #117          // java/lang/invoke/LambdaMetafactory\n+  #116 = NameAndType        #118:#119     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #117 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #118 = Utf8               metafactory\n+  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = MethodType         #121          //  ()Ljava/lang/Object;\n+  #121 = Utf8               ()Ljava/lang/Object;\n+  #122 = MethodHandle       7:#123        // REF_invokeSpecial org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #123 = Methodref          #14.#124      // org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #124 = NameAndType        #109:#38      // lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #125 = MethodType         #126          //  ()Ljava/nio/file/FileVisitResult;\n+  #126 = Utf8               ()Ljava/nio/file/FileVisitResult;\n+  #127 = Utf8               InnerClasses\n+  #128 = Class              #129          // java/lang/invoke/MethodHandles$Lookup\n+  #129 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #130 = Class              #131          // java/lang/invoke/MethodHandles\n+  #131 = Utf8               java/lang/invoke/MethodHandles\n+  #132 = Utf8               Lookup\n {\n   private final org.apache.commons.io.file.PathVisitor pathVisitor;\n     descriptor: Lorg/apache/commons/io/file/PathVisitor;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.filefilter.PathVisitorFileFilter(org.apache.commons.io.file.PathVisitor);\n     descriptor: (Lorg/apache/commons/io/file/PathVisitor;)V\n@@ -151,18 +151,18 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnonnull     15\n-         9: getstatic     #2                  // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+         9: getstatic     #7                  // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n         12: goto          16\n         15: aload_1\n-        16: putfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        16: putfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         19: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -180,37 +180,37 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #4                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: astore_2\n          5: aload_0\n          6: aload_2\n          7: aload_1\n-         8: invokevirtual #5                  // Method java/io/File.exists:()Z\n+         8: invokevirtual #25                 // Method java/io/File.exists:()Z\n         11: ifeq          21\n         14: aload_2\n-        15: invokestatic  #6                  // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        15: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n         18: goto          22\n         21: aconst_null\n-        22: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        25: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        22: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        25: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         28: if_acmpne     35\n         31: iconst_1\n         32: goto          36\n         35: iconst_0\n         36: ireturn\n         37: astore_2\n         38: aload_0\n         39: aload_2\n-        40: invokevirtual #10                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        43: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        40: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        43: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         46: if_acmpne     53\n         49: iconst_1\n         50: goto          54\n         53: iconst_0\n         54: ireturn\n       Exception table:\n          from    to  target type\n@@ -250,34 +250,34 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n-         1: invokevirtual #4                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: aload_2\n-         5: invokeinterface #11,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         5: invokeinterface #51,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         10: astore_3\n         11: aload_0\n         12: aload_3\n         13: aload_3\n-        14: invokestatic  #6                  // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        17: invokevirtual #12                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        20: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        14: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        17: invokevirtual #57                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        20: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         23: if_acmpne     30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n         31: ireturn\n         32: astore_3\n         33: aload_0\n         34: aload_3\n-        35: invokevirtual #10                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        38: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        35: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        38: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         41: if_acmpne     48\n         44: iconst_1\n         45: goto          49\n         48: iconst_0\n         49: ireturn\n       Exception table:\n          from    to  target type\n@@ -315,16 +315,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n          2: aload_1\n          3: aload_2\n-         4: invokedynamic #13,  0             // InvokeDynamic #0:get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n-         9: invokevirtual #14                 // Method get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+         4: invokedynamic #60,  0             // InvokeDynamic #0:get:(Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Lorg/apache/commons/io/function/IOSupplier;\n+         9: invokevirtual #64                 // Method get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n         12: areturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      13     1  path   Ljava/nio/file/Path;\n@@ -332,18 +332,18 @@\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+         1: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #15,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokeinterface #67,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         11: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      12     1  path   Ljava/nio/file/Path;\n@@ -354,17 +354,17 @@\n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #16                 // class java/nio/file/Path\n+         2: checkcast     #52                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n     Exceptions:\n@@ -373,27 +373,27 @@\n   private java.nio.file.FileVisitResult lambda$accept$0(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #17                 // class java/nio/file/LinkOption\n-         5: invokestatic  #18                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #72                 // class java/nio/file/LinkOption\n+         5: invokestatic  #74                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          25\n         11: aload_0\n-        12: getfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        12: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         15: aload_1\n         16: aconst_null\n-        17: invokeinterface #19,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+        17: invokeinterface #80,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n         22: goto          31\n         25: aload_0\n         26: aload_1\n         27: aload_2\n-        28: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        28: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         31: areturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      32     1  path   Ljava/nio/file/Path;\n@@ -402,15 +402,15 @@\n         frame_type = 25 /* same */\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/FileVisitResult ]\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"PathVisitorFileFilter.java\"\n-InnerClasses:\n-  public static final #127= #126 of #130; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #73 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #74 ()Ljava/lang/Object;\n-      #75 REF_invokeSpecial org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-      #76 ()Ljava/nio/file/FileVisitResult;\n+      #120 ()Ljava/lang/Object;\n+      #122 REF_invokeSpecial org/apache/commons/io/filefilter/PathVisitorFileFilter.lambda$accept$0:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+      #125 ()Ljava/nio/file/FileVisitResult;\n+InnerClasses:\n+  public static final #132= #128 of #130; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
