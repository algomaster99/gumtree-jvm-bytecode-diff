{"diffoscope-json-version": 1, "source1": "first/AbstractCharacterFilterReader.class", "source2": "second/AbstractCharacterFilterReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,46 +11,46 @@\n     protected static final IntPredicate SKIP_NONE;\n     private final IntPredicate skip;\n     \n     protected AbstractCharacterFilterReader(final Reader reader) {\n         this(reader, AbstractCharacterFilterReader.SKIP_NONE);\n     }\n     \n-    protected AbstractCharacterFilterReader(final Reader reader, final IntPredicate skip) {\n-        super(reader);\n-        this.skip = ((skip == null) ? AbstractCharacterFilterReader.SKIP_NONE : skip);\n+    protected AbstractCharacterFilterReader(final Reader in, final IntPredicate intPredicate) {\n+        super(in);\n+        this.skip = ((intPredicate == null) ? AbstractCharacterFilterReader.SKIP_NONE : intPredicate);\n     }\n     \n-    protected boolean filter(final int ch) {\n-        return this.skip.test(ch);\n+    protected boolean filter(final int n) {\n+        return this.skip.test(n);\n     }\n     \n     @Override\n     public int read() throws IOException {\n-        int ch;\n+        int read;\n         do {\n-            ch = this.in.read();\n-        } while (ch != -1 && this.filter(ch));\n-        return ch;\n+            read = this.in.read();\n+        } while (read != -1 && this.filter(read));\n+        return read;\n     }\n     \n     @Override\n     public int read(final char[] cbuf, final int off, final int len) throws IOException {\n         final int read = super.read(cbuf, off, len);\n         if (read == -1) {\n             return -1;\n         }\n-        int pos = off - 1;\n-        for (int readPos = off; readPos < off + read; ++readPos) {\n-            if (!this.filter(cbuf[readPos])) {\n-                if (++pos < readPos) {\n-                    cbuf[pos] = cbuf[readPos];\n+        int n = off - 1;\n+        for (int i = off; i < off + read; ++i) {\n+            if (!this.filter(cbuf[i])) {\n+                if (++n < i) {\n+                    cbuf[n] = cbuf[i];\n                 }\n             }\n         }\n-        return pos - off + 1;\n+        return n - off + 1;\n     }\n     \n     static {\n-        SKIP_NONE = (ch -> false);\n+        SKIP_NONE = (p0 -> false);\n     }\n }\n"}]}
