{"diffoscope-json-version": 1, "source1": "first/LockableFileWriter.class", "source2": "second/LockableFileWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,73 +1,73 @@\n-  SHA-256 checksum 5e91fc0adc8f4faf315603ec0d2fe4872cab9c0191eb93d77dccb48cd654d4d4\n+  SHA-256 checksum f90ebd407bb04c95ce9e6c038b6c4653394f6708786c77d68005fade50dcc0bb\n   Compiled from \"LockableFileWriter.java\"\n public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/commons/io/output/LockableFileWriter\n   super_class: #56                        // java/io/Writer\n   interfaces: 0, fields: 3, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#103      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-    #2 = Class              #104          // java/io/File\n-    #3 = Methodref          #2.#105       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #23.#106      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-    #5 = Methodref          #107.#108     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #6 = Methodref          #23.#109      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-    #7 = Methodref          #23.#110      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-    #8 = Methodref          #56.#111      // java/io/Writer.\"<init>\":()V\n-    #9 = Methodref          #2.#112       // java/io/File.getAbsoluteFile:()Ljava/io/File;\n-   #10 = Methodref          #2.#113       // java/io/File.getParentFile:()Ljava/io/File;\n-   #11 = Methodref          #114.#115     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n-   #12 = Methodref          #2.#116       // java/io/File.isDirectory:()Z\n-   #13 = Class              #117          // java/io/IOException\n-   #14 = String             #118          // File specified is a directory\n-   #15 = Methodref          #13.#105      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = String             #119          // java.io.tmpdir\n-   #17 = Methodref          #120.#121     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #23.#122      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n-   #19 = Class              #123          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#111      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = Methodref          #2.#124       // java/io/File.getName:()Ljava/lang/String;\n-   #22 = Methodref          #19.#125      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Class              #126          // org/apache/commons/io/output/LockableFileWriter\n-   #24 = String             #127          // .lck\n-   #25 = Methodref          #19.#128      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #2.#129       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #27 = Fieldref           #23.#130      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n-   #28 = Methodref          #23.#131      // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n-   #29 = Methodref          #23.#132      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-   #30 = Fieldref           #23.#133      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n-   #31 = Methodref          #134.#135     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #32 = Methodref          #2.#136       // java/io/File.exists:()Z\n-   #33 = String             #137          // Could not find lockDir:\n-   #34 = Methodref          #2.#138       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n-   #35 = Methodref          #2.#139       // java/io/File.canWrite:()Z\n-   #36 = String             #140          // Could not write to lockDir:\n-   #37 = Methodref          #2.#141       // java/io/File.createNewFile:()Z\n-   #38 = String             #142          // Can\\'t write file, lock\n-   #39 = String             #143          //  exists\n-   #40 = Methodref          #2.#144       // java/io/File.deleteOnExit:()V\n-   #41 = Class              #145          // java/io/OutputStreamWriter\n-   #42 = Class              #146          // java/io/FileOutputStream\n-   #43 = Methodref          #42.#147      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n-   #44 = Methodref          #134.#148     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #45 = Methodref          #41.#149      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #46 = Class              #150          // java/lang/RuntimeException\n-   #47 = Methodref          #114.#151     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n-   #48 = Methodref          #56.#152      // java/io/Writer.close:()V\n-   #49 = Methodref          #2.#153       // java/io/File.delete:()Z\n-   #50 = Methodref          #56.#154      // java/io/Writer.write:(I)V\n-   #51 = Methodref          #56.#155      // java/io/Writer.write:([C)V\n-   #52 = Methodref          #56.#156      // java/io/Writer.write:([CII)V\n-   #53 = Methodref          #56.#157      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #54 = Methodref          #56.#158      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #55 = Methodref          #56.#159      // java/io/Writer.flush:()V\n-   #56 = Class              #160          // java/io/Writer\n+    #1 = Methodref          #23.#101      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+    #2 = Class              #102          // java/io/File\n+    #3 = Methodref          #2.#103       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #23.#104      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+    #5 = Methodref          #81.#105      // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #6 = Methodref          #23.#106      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+    #7 = Methodref          #23.#107      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+    #8 = Methodref          #56.#108      // java/io/Writer.\"<init>\":()V\n+    #9 = Methodref          #2.#109       // java/io/File.getAbsoluteFile:()Ljava/io/File;\n+   #10 = Methodref          #2.#110       // java/io/File.getParentFile:()Ljava/io/File;\n+   #11 = Methodref          #111.#112     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n+   #12 = Methodref          #2.#113       // java/io/File.isDirectory:()Z\n+   #13 = Class              #114          // java/io/IOException\n+   #14 = String             #115          // File specified is a directory\n+   #15 = Methodref          #13.#103      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = String             #116          // java.io.tmpdir\n+   #17 = Methodref          #117.#118     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #18 = Methodref          #23.#119      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n+   #19 = Class              #120          // java/lang/StringBuilder\n+   #20 = Methodref          #19.#108      // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = Methodref          #2.#121       // java/io/File.getName:()Ljava/lang/String;\n+   #22 = Methodref          #19.#122      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Class              #123          // org/apache/commons/io/output/LockableFileWriter\n+   #24 = String             #124          // .lck\n+   #25 = Methodref          #19.#125      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #26 = Methodref          #2.#126       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #27 = Fieldref           #23.#127      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n+   #28 = Methodref          #23.#128      // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n+   #29 = Methodref          #23.#129      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #30 = Fieldref           #23.#130      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n+   #31 = Methodref          #131.#132     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #32 = Methodref          #2.#133       // java/io/File.exists:()Z\n+   #33 = String             #134          // Could not find lockDir:\n+   #34 = Methodref          #2.#135       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n+   #35 = Methodref          #2.#136       // java/io/File.canWrite:()Z\n+   #36 = String             #137          // Could not write to lockDir:\n+   #37 = Methodref          #2.#138       // java/io/File.createNewFile:()Z\n+   #38 = String             #139          // Can\\'t write file, lock\n+   #39 = String             #140          //  exists\n+   #40 = Methodref          #2.#141       // java/io/File.deleteOnExit:()V\n+   #41 = Class              #142          // java/io/OutputStreamWriter\n+   #42 = Class              #143          // java/io/FileOutputStream\n+   #43 = Methodref          #42.#144      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+   #44 = Methodref          #131.#145     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #45 = Methodref          #41.#146      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #46 = Class              #147          // java/lang/RuntimeException\n+   #47 = Methodref          #111.#148     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+   #48 = Methodref          #56.#149      // java/io/Writer.close:()V\n+   #49 = Methodref          #2.#150       // java/io/File.delete:()Z\n+   #50 = Methodref          #56.#151      // java/io/Writer.write:(I)V\n+   #51 = Methodref          #56.#152      // java/io/Writer.write:([C)V\n+   #52 = Methodref          #56.#153      // java/io/Writer.write:([CII)V\n+   #53 = Methodref          #56.#154      // java/io/Writer.write:(Ljava/lang/String;)V\n+   #54 = Methodref          #56.#155      // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #55 = Methodref          #56.#156      // java/io/Writer.flush:()V\n+   #56 = Class              #157          // java/io/Writer\n    #57 = Utf8               LCK\n    #58 = Utf8               Ljava/lang/String;\n    #59 = Utf8               ConstantValue\n    #60 = Utf8               out\n    #61 = Utf8               Ljava/io/Writer;\n    #62 = Utf8               lockFile\n    #63 = Utf8               Ljava/io/File;\n@@ -84,129 +84,126 @@\n    #74 = Utf8               Deprecated\n    #75 = Utf8               RuntimeVisibleAnnotations\n    #76 = Utf8               Ljava/lang/Deprecated;\n    #77 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n    #78 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n    #79 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n    #80 = Utf8               StackMapTable\n-   #81 = Class              #126          // org/apache/commons/io/output/LockableFileWriter\n-   #82 = Class              #104          // java/io/File\n-   #83 = Class              #161          // java/nio/charset/Charset\n-   #84 = Class              #162          // java/lang/String\n-   #85 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-   #86 = Utf8               testLockDir\n-   #87 = Utf8               createLock\n-   #88 = Utf8               ()V\n-   #89 = Class              #163          // java/lang/Object\n-   #90 = Class              #164          // java/lang/Throwable\n-   #91 = Utf8               initWriter\n-   #92 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-   #93 = Class              #165          // java/lang/Exception\n-   #94 = Utf8               close\n-   #95 = Utf8               write\n-   #96 = Utf8               (I)V\n-   #97 = Utf8               ([C)V\n-   #98 = Utf8               ([CII)V\n-   #99 = Utf8               (Ljava/lang/String;II)V\n-  #100 = Utf8               flush\n-  #101 = Utf8               SourceFile\n-  #102 = Utf8               LockableFileWriter.java\n-  #103 = NameAndType        #64:#70       // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-  #104 = Utf8               java/io/File\n-  #105 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;)V\n-  #106 = NameAndType        #64:#73       // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-  #107 = Class              #161          // java/nio/charset/Charset\n-  #108 = NameAndType        #166:#167     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #109 = NameAndType        #64:#79       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-  #110 = NameAndType        #64:#85       // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-  #111 = NameAndType        #64:#88       // \"<init>\":()V\n-  #112 = NameAndType        #168:#169     // getAbsoluteFile:()Ljava/io/File;\n-  #113 = NameAndType        #170:#169     // getParentFile:()Ljava/io/File;\n-  #114 = Class              #171          // org/apache/commons/io/FileUtils\n-  #115 = NameAndType        #172:#71      // forceMkdir:(Ljava/io/File;)V\n-  #116 = NameAndType        #173:#174     // isDirectory:()Z\n-  #117 = Utf8               java/io/IOException\n-  #118 = Utf8               File specified is a directory\n-  #119 = Utf8               java.io.tmpdir\n-  #120 = Class              #175          // java/lang/System\n-  #121 = NameAndType        #176:#177     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #122 = NameAndType        #86:#71       // testLockDir:(Ljava/io/File;)V\n-  #123 = Utf8               java/lang/StringBuilder\n-  #124 = NameAndType        #178:#179     // getName:()Ljava/lang/String;\n-  #125 = NameAndType        #180:#181     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #126 = Utf8               org/apache/commons/io/output/LockableFileWriter\n-  #127 = Utf8               .lck\n-  #128 = NameAndType        #182:#179     // toString:()Ljava/lang/String;\n-  #129 = NameAndType        #64:#78       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #130 = NameAndType        #62:#63       // lockFile:Ljava/io/File;\n-  #131 = NameAndType        #87:#88       // createLock:()V\n-  #132 = NameAndType        #91:#92       // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-  #133 = NameAndType        #60:#61       // out:Ljava/io/Writer;\n-  #134 = Class              #183          // org/apache/commons/io/Charsets\n-  #135 = NameAndType        #184:#185     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #136 = NameAndType        #186:#174     // exists:()Z\n-  #137 = Utf8               Could not find lockDir:\n-  #138 = NameAndType        #187:#179     // getAbsolutePath:()Ljava/lang/String;\n-  #139 = NameAndType        #188:#174     // canWrite:()Z\n-  #140 = Utf8               Could not write to lockDir:\n-  #141 = NameAndType        #189:#174     // createNewFile:()Z\n-  #142 = Utf8               Can\\'t write file, lock\n-  #143 = Utf8                exists\n-  #144 = NameAndType        #190:#88      // deleteOnExit:()V\n-  #145 = Utf8               java/io/OutputStreamWriter\n-  #146 = Utf8               java/io/FileOutputStream\n-  #147 = NameAndType        #64:#69       // \"<init>\":(Ljava/lang/String;Z)V\n-  #148 = NameAndType        #184:#191     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #149 = NameAndType        #64:#192      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #150 = Utf8               java/lang/RuntimeException\n-  #151 = NameAndType        #193:#194     // deleteQuietly:(Ljava/io/File;)Z\n-  #152 = NameAndType        #94:#88       // close:()V\n-  #153 = NameAndType        #195:#174     // delete:()Z\n-  #154 = NameAndType        #95:#96       // write:(I)V\n-  #155 = NameAndType        #95:#97       // write:([C)V\n-  #156 = NameAndType        #95:#98       // write:([CII)V\n-  #157 = NameAndType        #95:#65       // write:(Ljava/lang/String;)V\n-  #158 = NameAndType        #95:#99       // write:(Ljava/lang/String;II)V\n-  #159 = NameAndType        #100:#88      // flush:()V\n-  #160 = Utf8               java/io/Writer\n-  #161 = Utf8               java/nio/charset/Charset\n-  #162 = Utf8               java/lang/String\n-  #163 = Utf8               java/lang/Object\n-  #164 = Utf8               java/lang/Throwable\n-  #165 = Utf8               java/lang/Exception\n-  #166 = Utf8               defaultCharset\n-  #167 = Utf8               ()Ljava/nio/charset/Charset;\n-  #168 = Utf8               getAbsoluteFile\n-  #169 = Utf8               ()Ljava/io/File;\n-  #170 = Utf8               getParentFile\n-  #171 = Utf8               org/apache/commons/io/FileUtils\n-  #172 = Utf8               forceMkdir\n-  #173 = Utf8               isDirectory\n-  #174 = Utf8               ()Z\n-  #175 = Utf8               java/lang/System\n-  #176 = Utf8               getProperty\n-  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #178 = Utf8               getName\n-  #179 = Utf8               ()Ljava/lang/String;\n-  #180 = Utf8               append\n-  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #182 = Utf8               toString\n-  #183 = Utf8               org/apache/commons/io/Charsets\n-  #184 = Utf8               toCharset\n-  #185 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #186 = Utf8               exists\n-  #187 = Utf8               getAbsolutePath\n-  #188 = Utf8               canWrite\n-  #189 = Utf8               createNewFile\n-  #190 = Utf8               deleteOnExit\n-  #191 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #192 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #193 = Utf8               deleteQuietly\n-  #194 = Utf8               (Ljava/io/File;)Z\n-  #195 = Utf8               delete\n+   #81 = Class              #158          // java/nio/charset/Charset\n+   #82 = Class              #159          // java/lang/String\n+   #83 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+   #84 = Utf8               testLockDir\n+   #85 = Utf8               createLock\n+   #86 = Utf8               ()V\n+   #87 = Class              #160          // java/lang/Object\n+   #88 = Class              #161          // java/lang/Throwable\n+   #89 = Utf8               initWriter\n+   #90 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #91 = Class              #162          // java/lang/Exception\n+   #92 = Utf8               close\n+   #93 = Utf8               write\n+   #94 = Utf8               (I)V\n+   #95 = Utf8               ([C)V\n+   #96 = Utf8               ([CII)V\n+   #97 = Utf8               (Ljava/lang/String;II)V\n+   #98 = Utf8               flush\n+   #99 = Utf8               SourceFile\n+  #100 = Utf8               LockableFileWriter.java\n+  #101 = NameAndType        #64:#70       // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+  #102 = Utf8               java/io/File\n+  #103 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;)V\n+  #104 = NameAndType        #64:#73       // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+  #105 = NameAndType        #163:#164     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #106 = NameAndType        #64:#79       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+  #107 = NameAndType        #64:#83       // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+  #108 = NameAndType        #64:#86       // \"<init>\":()V\n+  #109 = NameAndType        #165:#166     // getAbsoluteFile:()Ljava/io/File;\n+  #110 = NameAndType        #167:#166     // getParentFile:()Ljava/io/File;\n+  #111 = Class              #168          // org/apache/commons/io/FileUtils\n+  #112 = NameAndType        #169:#71      // forceMkdir:(Ljava/io/File;)V\n+  #113 = NameAndType        #170:#171     // isDirectory:()Z\n+  #114 = Utf8               java/io/IOException\n+  #115 = Utf8               File specified is a directory\n+  #116 = Utf8               java.io.tmpdir\n+  #117 = Class              #172          // java/lang/System\n+  #118 = NameAndType        #173:#174     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #119 = NameAndType        #84:#71       // testLockDir:(Ljava/io/File;)V\n+  #120 = Utf8               java/lang/StringBuilder\n+  #121 = NameAndType        #175:#176     // getName:()Ljava/lang/String;\n+  #122 = NameAndType        #177:#178     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #123 = Utf8               org/apache/commons/io/output/LockableFileWriter\n+  #124 = Utf8               .lck\n+  #125 = NameAndType        #179:#176     // toString:()Ljava/lang/String;\n+  #126 = NameAndType        #64:#78       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #127 = NameAndType        #62:#63       // lockFile:Ljava/io/File;\n+  #128 = NameAndType        #85:#86       // createLock:()V\n+  #129 = NameAndType        #89:#90       // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+  #130 = NameAndType        #60:#61       // out:Ljava/io/Writer;\n+  #131 = Class              #180          // org/apache/commons/io/Charsets\n+  #132 = NameAndType        #181:#182     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #133 = NameAndType        #183:#171     // exists:()Z\n+  #134 = Utf8               Could not find lockDir:\n+  #135 = NameAndType        #184:#176     // getAbsolutePath:()Ljava/lang/String;\n+  #136 = NameAndType        #185:#171     // canWrite:()Z\n+  #137 = Utf8               Could not write to lockDir:\n+  #138 = NameAndType        #186:#171     // createNewFile:()Z\n+  #139 = Utf8               Can\\'t write file, lock\n+  #140 = Utf8                exists\n+  #141 = NameAndType        #187:#86      // deleteOnExit:()V\n+  #142 = Utf8               java/io/OutputStreamWriter\n+  #143 = Utf8               java/io/FileOutputStream\n+  #144 = NameAndType        #64:#69       // \"<init>\":(Ljava/lang/String;Z)V\n+  #145 = NameAndType        #181:#188     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #146 = NameAndType        #64:#189      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #147 = Utf8               java/lang/RuntimeException\n+  #148 = NameAndType        #190:#191     // deleteQuietly:(Ljava/io/File;)Z\n+  #149 = NameAndType        #92:#86       // close:()V\n+  #150 = NameAndType        #192:#171     // delete:()Z\n+  #151 = NameAndType        #93:#94       // write:(I)V\n+  #152 = NameAndType        #93:#95       // write:([C)V\n+  #153 = NameAndType        #93:#96       // write:([CII)V\n+  #154 = NameAndType        #93:#65       // write:(Ljava/lang/String;)V\n+  #155 = NameAndType        #93:#97       // write:(Ljava/lang/String;II)V\n+  #156 = NameAndType        #98:#86       // flush:()V\n+  #157 = Utf8               java/io/Writer\n+  #158 = Utf8               java/nio/charset/Charset\n+  #159 = Utf8               java/lang/String\n+  #160 = Utf8               java/lang/Object\n+  #161 = Utf8               java/lang/Throwable\n+  #162 = Utf8               java/lang/Exception\n+  #163 = Utf8               defaultCharset\n+  #164 = Utf8               ()Ljava/nio/charset/Charset;\n+  #165 = Utf8               getAbsoluteFile\n+  #166 = Utf8               ()Ljava/io/File;\n+  #167 = Utf8               getParentFile\n+  #168 = Utf8               org/apache/commons/io/FileUtils\n+  #169 = Utf8               forceMkdir\n+  #170 = Utf8               isDirectory\n+  #171 = Utf8               ()Z\n+  #172 = Utf8               java/lang/System\n+  #173 = Utf8               getProperty\n+  #174 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #175 = Utf8               getName\n+  #176 = Utf8               ()Ljava/lang/String;\n+  #177 = Utf8               append\n+  #178 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #179 = Utf8               toString\n+  #180 = Utf8               org/apache/commons/io/Charsets\n+  #181 = Utf8               toCharset\n+  #182 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #183 = Utf8               exists\n+  #184 = Utf8               getAbsolutePath\n+  #185 = Utf8               canWrite\n+  #186 = Utf8               createNewFile\n+  #187 = Utf8               deleteOnExit\n+  #188 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #189 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #190 = Utf8               deleteQuietly\n+  #191 = Utf8               (Ljava/io/File;)Z\n+  #192 = Utf8               delete\n {\n   private static final java.lang.String LCK = \".lck\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String .lck\n \n   private final java.io.Writer out;\n"}]}
