{"diffoscope-json-version": 1, "source1": "first/StringEscapeUtils$CsvUnescaper.class", "source2": "second/StringEscapeUtils$CsvUnescaper.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 057093ef3dff79a40067656e4f98741e752d4a70939606a09a7c13a56dbfbfea\n+  SHA-256 checksum ac91a3b1aa3d6d53f3a8fccc952a5225e9e6ed133f7476e8512e5969fbc0424b\n   Compiled from \"StringEscapeUtils.java\"\n class org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper extends org.apache.commons.lang3.text.translate.CharSequenceTranslator\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #6                          // org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper\n   super_class: #22                        // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n@@ -23,17 +23,17 @@\n    #13 = Methodref          #74.#75       // org/apache/commons/lang3/StringUtils.containsAny:(Ljava/lang/CharSequence;[C)Z\n    #14 = Class              #76           // java/lang/StringBuilder\n    #15 = Methodref          #14.#58       // java/lang/StringBuilder.\"<init>\":()V\n    #16 = Fieldref           #6.#77        // org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper.CSV_QUOTE_STR:Ljava/lang/String;\n    #17 = Methodref          #14.#78       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n    #18 = Methodref          #14.#67       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n    #19 = Methodref          #74.#79       // org/apache/commons/lang3/StringUtils.replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #20 = Methodref          #80.#81       // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #21 = Class              #82           // org/apache/commons/lang3/CharUtils\n-   #22 = Class              #83           // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+   #20 = Methodref          #52.#80       // java/lang/String.valueOf:(C)Ljava/lang/String;\n+   #21 = Class              #81           // org/apache/commons/lang3/CharUtils\n+   #22 = Class              #82           // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n    #23 = Utf8               CSV_DELIMITER\n    #24 = Utf8               C\n    #25 = Utf8               ConstantValue\n    #26 = Integer            44\n    #27 = Utf8               CSV_QUOTE\n    #28 = Integer            34\n    #29 = Utf8               CSV_QUOTE_STR\n@@ -55,73 +55,72 @@\n    #45 = Utf8               Ljava/lang/CharSequence;\n    #46 = Utf8               index\n    #47 = Utf8               I\n    #48 = Utf8               out\n    #49 = Utf8               Ljava/io/Writer;\n    #50 = Utf8               quoteless\n    #51 = Utf8               StackMapTable\n-   #52 = Class              #84           // java/lang/String\n+   #52 = Class              #83           // java/lang/String\n    #53 = Utf8               Exceptions\n-   #54 = Class              #85           // java/io/IOException\n+   #54 = Class              #84           // java/io/IOException\n    #55 = Utf8               <clinit>\n    #56 = Utf8               SourceFile\n    #57 = Utf8               StringEscapeUtils.java\n    #58 = NameAndType        #33:#34       // \"<init>\":()V\n    #59 = Utf8               java/lang/IllegalStateException\n    #60 = Utf8               CsvUnescaper should never reach the [1] index\n-   #61 = NameAndType        #33:#86       // \"<init>\":(Ljava/lang/String;)V\n-   #62 = Class              #87           // java/lang/CharSequence\n-   #63 = NameAndType        #88:#89       // charAt:(I)C\n-   #64 = Class              #90           // org/apache/commons/lang3/StringEscapeUtils\n+   #61 = NameAndType        #33:#85       // \"<init>\":(Ljava/lang/String;)V\n+   #62 = Class              #86           // java/lang/CharSequence\n+   #63 = NameAndType        #87:#88       // charAt:(I)C\n+   #64 = Class              #89           // org/apache/commons/lang3/StringEscapeUtils\n    #65 = Utf8               org/apache/commons/lang3/StringEscapeUtils$CsvUnescaper\n-   #66 = NameAndType        #91:#92       // length:()I\n-   #67 = NameAndType        #93:#94       // toString:()Ljava/lang/String;\n-   #68 = Class              #95           // java/io/Writer\n-   #69 = NameAndType        #96:#86       // write:(Ljava/lang/String;)V\n-   #70 = Class              #97           // java/lang/Character\n-   #71 = NameAndType        #98:#99       // codePointCount:(Ljava/lang/CharSequence;II)I\n-   #72 = NameAndType        #100:#101     // subSequence:(II)Ljava/lang/CharSequence;\n+   #66 = NameAndType        #90:#91       // length:()I\n+   #67 = NameAndType        #92:#93       // toString:()Ljava/lang/String;\n+   #68 = Class              #94           // java/io/Writer\n+   #69 = NameAndType        #95:#85       // write:(Ljava/lang/String;)V\n+   #70 = Class              #96           // java/lang/Character\n+   #71 = NameAndType        #97:#98       // codePointCount:(Ljava/lang/CharSequence;II)I\n+   #72 = NameAndType        #99:#100      // subSequence:(II)Ljava/lang/CharSequence;\n    #73 = NameAndType        #31:#32       // CSV_SEARCH_CHARS:[C\n-   #74 = Class              #102          // org/apache/commons/lang3/StringUtils\n-   #75 = NameAndType        #103:#104     // containsAny:(Ljava/lang/CharSequence;[C)Z\n+   #74 = Class              #101          // org/apache/commons/lang3/StringUtils\n+   #75 = NameAndType        #102:#103     // containsAny:(Ljava/lang/CharSequence;[C)Z\n    #76 = Utf8               java/lang/StringBuilder\n    #77 = NameAndType        #29:#30       // CSV_QUOTE_STR:Ljava/lang/String;\n-   #78 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #79 = NameAndType        #107:#108     // replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #80 = Class              #84           // java/lang/String\n-   #81 = NameAndType        #109:#110     // valueOf:(C)Ljava/lang/String;\n-   #82 = Utf8               org/apache/commons/lang3/CharUtils\n-   #83 = Utf8               org/apache/commons/lang3/text/translate/CharSequenceTranslator\n-   #84 = Utf8               java/lang/String\n-   #85 = Utf8               java/io/IOException\n-   #86 = Utf8               (Ljava/lang/String;)V\n-   #87 = Utf8               java/lang/CharSequence\n-   #88 = Utf8               charAt\n-   #89 = Utf8               (I)C\n-   #90 = Utf8               org/apache/commons/lang3/StringEscapeUtils\n-   #91 = Utf8               length\n-   #92 = Utf8               ()I\n-   #93 = Utf8               toString\n-   #94 = Utf8               ()Ljava/lang/String;\n-   #95 = Utf8               java/io/Writer\n-   #96 = Utf8               write\n-   #97 = Utf8               java/lang/Character\n-   #98 = Utf8               codePointCount\n-   #99 = Utf8               (Ljava/lang/CharSequence;II)I\n-  #100 = Utf8               subSequence\n-  #101 = Utf8               (II)Ljava/lang/CharSequence;\n-  #102 = Utf8               org/apache/commons/lang3/StringUtils\n-  #103 = Utf8               containsAny\n-  #104 = Utf8               (Ljava/lang/CharSequence;[C)Z\n-  #105 = Utf8               append\n-  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #107 = Utf8               replace\n-  #108 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #109 = Utf8               valueOf\n-  #110 = Utf8               (C)Ljava/lang/String;\n+   #78 = NameAndType        #104:#105     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #79 = NameAndType        #106:#107     // replace:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #80 = NameAndType        #108:#109     // valueOf:(C)Ljava/lang/String;\n+   #81 = Utf8               org/apache/commons/lang3/CharUtils\n+   #82 = Utf8               org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+   #83 = Utf8               java/lang/String\n+   #84 = Utf8               java/io/IOException\n+   #85 = Utf8               (Ljava/lang/String;)V\n+   #86 = Utf8               java/lang/CharSequence\n+   #87 = Utf8               charAt\n+   #88 = Utf8               (I)C\n+   #89 = Utf8               org/apache/commons/lang3/StringEscapeUtils\n+   #90 = Utf8               length\n+   #91 = Utf8               ()I\n+   #92 = Utf8               toString\n+   #93 = Utf8               ()Ljava/lang/String;\n+   #94 = Utf8               java/io/Writer\n+   #95 = Utf8               write\n+   #96 = Utf8               java/lang/Character\n+   #97 = Utf8               codePointCount\n+   #98 = Utf8               (Ljava/lang/CharSequence;II)I\n+   #99 = Utf8               subSequence\n+  #100 = Utf8               (II)Ljava/lang/CharSequence;\n+  #101 = Utf8               org/apache/commons/lang3/StringUtils\n+  #102 = Utf8               containsAny\n+  #103 = Utf8               (Ljava/lang/CharSequence;[C)Z\n+  #104 = Utf8               append\n+  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #106 = Utf8               replace\n+  #107 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #108 = Utf8               valueOf\n+  #109 = Utf8               (C)Ljava/lang/String;\n {\n   private static final char CSV_DELIMITER = ',';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 44\n \n   private static final char CSV_QUOTE = '\"';\n"}]}
