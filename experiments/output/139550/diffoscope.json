{"diffoscope-json-version": 1, "source1": "first/ConfigurationLoader$InternalLoader.class", "source2": "second/ConfigurationLoader$InternalLoader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -62,15 +62,15 @@\n         else if (\"message\".equals(qName)) {\n             final String key = attributes.getValue(\"key\");\n             final String value = attributes.getValue(\"value\");\n             final DefaultConfiguration top2 = (DefaultConfiguration)this.configStack.peek();\n             top2.addMessage(key, value);\n         }\n         else if (!\"metadata\".equals(qName)) {\n-            throw new IllegalStateException(\"Unknown name:\" + qName);\n+            throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n         }\n     }\n     \n     public void endElement(final String uri, final String localName, final String qName) throws SAXException {\n         if (\"module\".equals(qName)) {\n             final Configuration recentModule = (Configuration)this.configStack.pop();\n             SeverityLevel level = null;\n@@ -89,11 +89,11 @@\n                 parentModule.removeChild(recentModule);\n             }\n         }\n     }\n     \n     private boolean containsAttribute(final Configuration module, final String attributeName) {\n         final String[] names = module.getPropertyNames();\n-        final Optional<String> result = Arrays.stream(names).filter(InternalLoader::lambda$containsAttribute$0).findFirst();\n+        final Optional<String> result = Arrays.stream(names).filter(InternalLoader::lambda$0).findFirst();\n         return result.isPresent();\n     }\n }\n"}]}
