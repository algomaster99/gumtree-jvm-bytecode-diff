{"diffoscope-json-version": 1, "source1": "first/GeneratorBase.class", "source2": "second/GeneratorBase.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -33,14 +33,18 @@\n     protected static final int MAX_BIG_DECIMAL_SCALE = 9999;\n     protected ObjectCodec _objectCodec;\n     protected int _features;\n     protected boolean _cfgNumbersAsStrings;\n     protected JsonWriteContext _writeContext;\n     protected boolean _closed;\n     \n+    static {\n+        DERIVED_FEATURES_MASK = (JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS.getMask() | JsonGenerator.Feature.ESCAPE_NON_ASCII.getMask() | JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION.getMask());\n+    }\n+    \n     protected GeneratorBase(final int features, final ObjectCodec codec) {\n         this._features = features;\n         this._objectCodec = codec;\n         final DupDetector dups = JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features) ? DupDetector.rootDetector((JsonGenerator)this) : null;\n         this._writeContext = JsonWriteContext.createRootContext(dups);\n         this._cfgNumbersAsStrings = JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);\n     }\n@@ -307,12 +311,8 @@\n         final int dataLen = data.length();\n         final int end = offset + len;\n         final int anyNegs = offset | len | end | dataLen - end;\n         if (anyNegs < 0) {\n             this._reportError(String.format(\"Invalid 'offset' (%d) and/or 'len' (%d) arguments for `String` of length %d\", Integer.valueOf(offset), Integer.valueOf(len), Integer.valueOf(dataLen)));\n         }\n     }\n-    \n-    static {\n-        DERIVED_FEATURES_MASK = (JsonGenerator.Feature.WRITE_NUMBERS_AS_STRINGS.getMask() | JsonGenerator.Feature.ESCAPE_NON_ASCII.getMask() | JsonGenerator.Feature.STRICT_DUPLICATE_DETECTION.getMask());\n-    }\n }\n"}]}
