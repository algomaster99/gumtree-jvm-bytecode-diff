{"diffoscope-json-version": 1, "source1": "first/Expander$ArchiveEntrySupplier.class", "source2": "second/Expander$ArchiveEntrySupplier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,35 +1,35 @@\n-  SHA-256 checksum f393cb16b42bcb6d65bc6dbb60c921883a6d5305631b006dce0549e55b4bb5fd\n+  SHA-256 checksum 9bc1006596e27ee145215cf5b923221a6f6d384f778dd2392c001f0ae6aaba46\n   Compiled from \"Expander.java\"\n interface org.apache.commons.compress.archivers.examples.Expander$ArchiveEntrySupplier\n   minor version: 0\n-  major version: 53\n+  major version: 52\n   flags: (0x0600) ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier\n-  super_class: #2                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 1, attributes: 2\n Constant pool:\n-   #1 = Class              #10            // org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier\n-   #2 = Class              #13            // java/lang/Object\n-   #3 = Utf8               getNextReadableEntry\n-   #4 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-   #5 = Utf8               Exceptions\n-   #6 = Class              #14            // java/io/IOException\n-   #7 = Utf8               SourceFile\n-   #8 = Utf8               Expander.java\n-   #9 = Class              #15            // org/apache/commons/compress/archivers/examples/Expander\n-  #10 = Utf8               org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier\n-  #11 = Utf8               ArchiveEntrySupplier\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier\n+   #2 = Utf8               org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               getNextReadableEntry\n+   #6 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+   #7 = Utf8               Exceptions\n+   #8 = Class              #9             // java/io/IOException\n+   #9 = Utf8               java/io/IOException\n+  #10 = Utf8               SourceFile\n+  #11 = Utf8               Expander.java\n   #12 = Utf8               InnerClasses\n-  #13 = Utf8               java/lang/Object\n-  #14 = Utf8               java/io/IOException\n-  #15 = Utf8               org/apache/commons/compress/archivers/examples/Expander\n+  #13 = Class              #14            // org/apache/commons/compress/archivers/examples/Expander\n+  #14 = Utf8               org/apache/commons/compress/archivers/examples/Expander\n+  #15 = Utf8               ArchiveEntrySupplier\n {\n   public abstract org.apache.commons.compress.archivers.ArchiveEntry getNextReadableEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"Expander.java\"\n InnerClasses:\n-  private static #11= #1 of #9;           // ArchiveEntrySupplier=class org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier of class org/apache/commons/compress/archivers/examples/Expander\n+  private static #15= #1 of #13;          // ArchiveEntrySupplier=class org/apache/commons/compress/archivers/examples/Expander$ArchiveEntrySupplier of class org/apache/commons/compress/archivers/examples/Expander\n"}]}
