{"diffoscope-json-version": 1, "source1": "first/StringUtils.class", "source2": "second/StringUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,160 +1,160 @@\n-  SHA-256 checksum d7fb41ece1e224fbf82bee7b4327358b197f4c537f7ba77fb31b894379382a82\n+  SHA-256 checksum 300a3152c836de62130e4737d984455934cf58cd2b8179d8fb7b25c87f99c485\n   Compiled from \"StringUtils.java\"\n public class org.apache.commons.codec.binary.StringUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #30                         // org/apache/commons/codec/binary/StringUtils\n-  super_class: #31                        // java/lang/Object\n+  this_class: #42                         // org/apache/commons/codec/binary/StringUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 21, attributes: 1\n Constant pool:\n-    #1 = Methodref          #31.#84       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #85           // java/lang/String\n-    #3 = Methodref          #31.#86       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-    #4 = InterfaceMethodref #87.#88       // java/lang/CharSequence.length:()I\n-    #5 = Methodref          #89.#90       // org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-    #6 = Methodref          #2.#91        // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-    #7 = Methodref          #92.#93       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n-    #8 = Fieldref           #94.#95       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-    #9 = Methodref          #30.#96       // org/apache/commons/codec/binary/StringUtils.getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n-   #10 = Fieldref           #94.#97       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-   #11 = Methodref          #30.#98       // org/apache/commons/codec/binary/StringUtils.getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-   #12 = Methodref          #2.#99        // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #13 = Class              #100          // java/io/UnsupportedEncodingException\n-   #14 = Methodref          #30.#101      // org/apache/commons/codec/binary/StringUtils.newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-   #15 = Fieldref           #94.#102      // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #16 = Fieldref           #94.#103      // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #17 = Fieldref           #94.#104      // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #18 = Fieldref           #94.#105      // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #19 = Class              #106          // java/lang/IllegalStateException\n-   #20 = Class              #107          // java/lang/StringBuilder\n-   #21 = Methodref          #20.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #22 = Methodref          #20.#108      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = String             #109          // :\n-   #24 = Methodref          #20.#110      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #20.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #19.#112      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #2.#113       // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #28 = Methodref          #2.#114       // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #29 = Methodref          #30.#115      // org/apache/commons/codec/binary/StringUtils.newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-   #30 = Class              #116          // org/apache/commons/codec/binary/StringUtils\n-   #31 = Class              #117          // java/lang/Object\n-   #32 = Utf8               <init>\n-   #33 = Utf8               ()V\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               LocalVariableTable\n-   #37 = Utf8               this\n-   #38 = Utf8               Lorg/apache/commons/codec/binary/StringUtils;\n-   #39 = Utf8               equals\n-   #40 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-   #41 = Utf8               cs1\n-   #42 = Utf8               Ljava/lang/CharSequence;\n-   #43 = Utf8               cs2\n-   #44 = Utf8               StackMapTable\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/String\n+    #8 = Utf8               java/lang/String\n+    #9 = Methodref          #2.#10        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #10 = NameAndType        #11:#12       // equals:(Ljava/lang/Object;)Z\n+   #11 = Utf8               equals\n+   #12 = Utf8               (Ljava/lang/Object;)Z\n+   #13 = InterfaceMethodref #14.#15       // java/lang/CharSequence.length:()I\n+   #14 = Class              #16           // java/lang/CharSequence\n+   #15 = NameAndType        #17:#18       // length:()I\n+   #16 = Utf8               java/lang/CharSequence\n+   #17 = Utf8               length\n+   #18 = Utf8               ()I\n+   #19 = Methodref          #20.#21       // org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+   #20 = Class              #22           // org/apache/commons/codec/binary/CharSequenceUtils\n+   #21 = NameAndType        #23:#24       // regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+   #22 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n+   #23 = Utf8               regionMatches\n+   #24 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+   #25 = Methodref          #7.#26        // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #26 = NameAndType        #27:#28       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #27 = Utf8               getBytes\n+   #28 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #29 = Methodref          #30.#31       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n+   #30 = Class              #32           // java/nio/ByteBuffer\n+   #31 = NameAndType        #33:#34       // wrap:([B)Ljava/nio/ByteBuffer;\n+   #32 = Utf8               java/nio/ByteBuffer\n+   #33 = Utf8               wrap\n+   #34 = Utf8               ([B)Ljava/nio/ByteBuffer;\n+   #35 = Fieldref           #36.#37       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #36 = Class              #38           // java/nio/charset/StandardCharsets\n+   #37 = NameAndType        #39:#40       // UTF_8:Ljava/nio/charset/Charset;\n+   #38 = Utf8               java/nio/charset/StandardCharsets\n+   #39 = Utf8               UTF_8\n+   #40 = Utf8               Ljava/nio/charset/Charset;\n+   #41 = Methodref          #42.#43       // org/apache/commons/codec/binary/StringUtils.getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n+   #42 = Class              #44           // org/apache/commons/codec/binary/StringUtils\n+   #43 = NameAndType        #45:#46       // getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n+   #44 = Utf8               org/apache/commons/codec/binary/StringUtils\n    #45 = Utf8               getByteBuffer\n    #46 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n-   #47 = Utf8               string\n-   #48 = Utf8               Ljava/lang/String;\n-   #49 = Utf8               charset\n-   #50 = Utf8               Ljava/nio/charset/Charset;\n-   #51 = Utf8               getByteBufferUtf8\n-   #52 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-   #53 = Utf8               getBytes\n-   #54 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-   #55 = Class              #73           // \"[B\"\n-   #56 = Utf8               getBytesIso8859_1\n-   #57 = Utf8               (Ljava/lang/String;)[B\n-   #58 = Utf8               getBytesUnchecked\n-   #59 = Utf8               (Ljava/lang/String;Ljava/lang/String;)[B\n-   #60 = Utf8               e\n-   #61 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #62 = Utf8               charsetName\n-   #63 = Utf8               getBytesUsAscii\n-   #64 = Utf8               getBytesUtf16\n-   #65 = Utf8               getBytesUtf16Be\n-   #66 = Utf8               getBytesUtf16Le\n-   #67 = Utf8               getBytesUtf8\n-   #68 = Utf8               newIllegalStateException\n-   #69 = Utf8               (Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-   #70 = Utf8               newString\n-   #71 = Utf8               ([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-   #72 = Utf8               bytes\n-   #73 = Utf8               [B\n-   #74 = Utf8               ([BLjava/lang/String;)Ljava/lang/String;\n-   #75 = Utf8               newStringIso8859_1\n-   #76 = Utf8               ([B)Ljava/lang/String;\n-   #77 = Utf8               newStringUsAscii\n-   #78 = Utf8               newStringUtf16\n-   #79 = Utf8               newStringUtf16Be\n-   #80 = Utf8               newStringUtf16Le\n-   #81 = Utf8               newStringUtf8\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               StringUtils.java\n-   #84 = NameAndType        #32:#33       // \"<init>\":()V\n-   #85 = Utf8               java/lang/String\n-   #86 = NameAndType        #39:#118      // equals:(Ljava/lang/Object;)Z\n-   #87 = Class              #119          // java/lang/CharSequence\n-   #88 = NameAndType        #120:#121     // length:()I\n-   #89 = Class              #122          // org/apache/commons/codec/binary/CharSequenceUtils\n-   #90 = NameAndType        #123:#124     // regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-   #91 = NameAndType        #53:#125      // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #92 = Class              #126          // java/nio/ByteBuffer\n-   #93 = NameAndType        #127:#128     // wrap:([B)Ljava/nio/ByteBuffer;\n-   #94 = Class              #129          // java/nio/charset/StandardCharsets\n-   #95 = NameAndType        #130:#50      // UTF_8:Ljava/nio/charset/Charset;\n-   #96 = NameAndType        #45:#46       // getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n-   #97 = NameAndType        #131:#50      // ISO_8859_1:Ljava/nio/charset/Charset;\n-   #98 = NameAndType        #53:#54       // getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-   #99 = NameAndType        #53:#57       // getBytes:(Ljava/lang/String;)[B\n-  #100 = Utf8               java/io/UnsupportedEncodingException\n-  #101 = NameAndType        #68:#69       // newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-  #102 = NameAndType        #132:#50      // US_ASCII:Ljava/nio/charset/Charset;\n-  #103 = NameAndType        #133:#50      // UTF_16:Ljava/nio/charset/Charset;\n-  #104 = NameAndType        #134:#50      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #105 = NameAndType        #135:#50      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #106 = Utf8               java/lang/IllegalStateException\n-  #107 = Utf8               java/lang/StringBuilder\n-  #108 = NameAndType        #136:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #109 = Utf8               :\n-  #110 = NameAndType        #136:#138     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #139:#140     // toString:()Ljava/lang/String;\n-  #112 = NameAndType        #32:#141      // \"<init>\":(Ljava/lang/String;)V\n-  #113 = NameAndType        #32:#142      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #114 = NameAndType        #32:#143      // \"<init>\":([BLjava/lang/String;)V\n-  #115 = NameAndType        #70:#71       // newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-  #116 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               (Ljava/lang/Object;)Z\n-  #119 = Utf8               java/lang/CharSequence\n-  #120 = Utf8               length\n-  #121 = Utf8               ()I\n-  #122 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n-  #123 = Utf8               regionMatches\n-  #124 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-  #125 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #126 = Utf8               java/nio/ByteBuffer\n-  #127 = Utf8               wrap\n-  #128 = Utf8               ([B)Ljava/nio/ByteBuffer;\n-  #129 = Utf8               java/nio/charset/StandardCharsets\n-  #130 = Utf8               UTF_8\n-  #131 = Utf8               ISO_8859_1\n-  #132 = Utf8               US_ASCII\n-  #133 = Utf8               UTF_16\n-  #134 = Utf8               UTF_16BE\n-  #135 = Utf8               UTF_16LE\n-  #136 = Utf8               append\n-  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #138 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #139 = Utf8               toString\n-  #140 = Utf8               ()Ljava/lang/String;\n-  #141 = Utf8               (Ljava/lang/String;)V\n-  #142 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #143 = Utf8               ([BLjava/lang/String;)V\n+   #47 = Fieldref           #36.#48       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+   #48 = NameAndType        #49:#40       // ISO_8859_1:Ljava/nio/charset/Charset;\n+   #49 = Utf8               ISO_8859_1\n+   #50 = Methodref          #42.#51       // org/apache/commons/codec/binary/StringUtils.getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+   #51 = NameAndType        #27:#52       // getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+   #52 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+   #53 = Methodref          #7.#54        // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #54 = NameAndType        #27:#55       // getBytes:(Ljava/lang/String;)[B\n+   #55 = Utf8               (Ljava/lang/String;)[B\n+   #56 = Class              #57           // java/io/UnsupportedEncodingException\n+   #57 = Utf8               java/io/UnsupportedEncodingException\n+   #58 = Methodref          #42.#59       // org/apache/commons/codec/binary/StringUtils.newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+   #59 = NameAndType        #60:#61       // newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+   #60 = Utf8               newIllegalStateException\n+   #61 = Utf8               (Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+   #62 = Fieldref           #36.#63       // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+   #63 = NameAndType        #64:#40       // US_ASCII:Ljava/nio/charset/Charset;\n+   #64 = Utf8               US_ASCII\n+   #65 = Fieldref           #36.#66       // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #66 = NameAndType        #67:#40       // UTF_16:Ljava/nio/charset/Charset;\n+   #67 = Utf8               UTF_16\n+   #68 = Fieldref           #36.#69       // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #69 = NameAndType        #70:#40       // UTF_16BE:Ljava/nio/charset/Charset;\n+   #70 = Utf8               UTF_16BE\n+   #71 = Fieldref           #36.#72       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #72 = NameAndType        #73:#40       // UTF_16LE:Ljava/nio/charset/Charset;\n+   #73 = Utf8               UTF_16LE\n+   #74 = Class              #75           // java/lang/IllegalStateException\n+   #75 = Utf8               java/lang/IllegalStateException\n+   #76 = Class              #77           // java/lang/StringBuilder\n+   #77 = Utf8               java/lang/StringBuilder\n+   #78 = Methodref          #76.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #79 = Methodref          #76.#80       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = NameAndType        #81:#82       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #81 = Utf8               append\n+   #82 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = String             #84           // :\n+   #84 = Utf8               :\n+   #85 = Methodref          #76.#86       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #86 = NameAndType        #81:#87       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #87 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #88 = Methodref          #76.#89       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #89 = NameAndType        #90:#91       // toString:()Ljava/lang/String;\n+   #90 = Utf8               toString\n+   #91 = Utf8               ()Ljava/lang/String;\n+   #92 = Methodref          #74.#93       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #93 = NameAndType        #5:#94        // \"<init>\":(Ljava/lang/String;)V\n+   #94 = Utf8               (Ljava/lang/String;)V\n+   #95 = Methodref          #7.#96        // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+   #96 = NameAndType        #5:#97        // \"<init>\":([BLjava/nio/charset/Charset;)V\n+   #97 = Utf8               ([BLjava/nio/charset/Charset;)V\n+   #98 = Methodref          #7.#99        // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #99 = NameAndType        #5:#100       // \"<init>\":([BLjava/lang/String;)V\n+  #100 = Utf8               ([BLjava/lang/String;)V\n+  #101 = Methodref          #42.#102      // org/apache/commons/codec/binary/StringUtils.newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+  #102 = NameAndType        #103:#104     // newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+  #103 = Utf8               newString\n+  #104 = Utf8               ([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+  #105 = Utf8               Code\n+  #106 = Utf8               LineNumberTable\n+  #107 = Utf8               LocalVariableTable\n+  #108 = Utf8               this\n+  #109 = Utf8               Lorg/apache/commons/codec/binary/StringUtils;\n+  #110 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #111 = Utf8               cs1\n+  #112 = Utf8               Ljava/lang/CharSequence;\n+  #113 = Utf8               cs2\n+  #114 = Utf8               StackMapTable\n+  #115 = Utf8               string\n+  #116 = Utf8               Ljava/lang/String;\n+  #117 = Utf8               charset\n+  #118 = Utf8               getByteBufferUtf8\n+  #119 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #120 = Class              #121          // \"[B\"\n+  #121 = Utf8               [B\n+  #122 = Utf8               getBytesIso8859_1\n+  #123 = Utf8               getBytesUnchecked\n+  #124 = Utf8               (Ljava/lang/String;Ljava/lang/String;)[B\n+  #125 = Utf8               e\n+  #126 = Utf8               Ljava/io/UnsupportedEncodingException;\n+  #127 = Utf8               charsetName\n+  #128 = Utf8               getBytesUsAscii\n+  #129 = Utf8               getBytesUtf16\n+  #130 = Utf8               getBytesUtf16Be\n+  #131 = Utf8               getBytesUtf16Le\n+  #132 = Utf8               getBytesUtf8\n+  #133 = Utf8               bytes\n+  #134 = Utf8               ([BLjava/lang/String;)Ljava/lang/String;\n+  #135 = Utf8               newStringIso8859_1\n+  #136 = Utf8               ([B)Ljava/lang/String;\n+  #137 = Utf8               newStringUsAscii\n+  #138 = Utf8               newStringUtf16\n+  #139 = Utf8               newStringUtf16Be\n+  #140 = Utf8               newStringUtf16Le\n+  #141 = Utf8               newStringUtf8\n+  #142 = Utf8               SourceFile\n+  #143 = Utf8               StringUtils.java\n {\n   public org.apache.commons.codec.binary.StringUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -179,36 +179,36 @@\n          7: aload_0\n          8: ifnull        15\n         11: aload_1\n         12: ifnonnull     17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n-        18: instanceof    #2                  // class java/lang/String\n+        18: instanceof    #7                  // class java/lang/String\n         21: ifeq          37\n         24: aload_1\n-        25: instanceof    #2                  // class java/lang/String\n+        25: instanceof    #7                  // class java/lang/String\n         28: ifeq          37\n         31: aload_0\n         32: aload_1\n-        33: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        33: invokevirtual #9                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         36: ireturn\n         37: aload_0\n-        38: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n+        38: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n         43: aload_1\n-        44: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n+        44: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n         49: if_icmpne     73\n         52: aload_0\n         53: iconst_0\n         54: iconst_0\n         55: aload_1\n         56: iconst_0\n         57: aload_0\n-        58: invokeinterface #4,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n-        63: invokestatic  #5                  // Method org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+        58: invokeinterface #13,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        63: invokestatic  #19                 // Method org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n         66: ifeq          73\n         69: iconst_1\n         70: goto          74\n         73: iconst_0\n         74: ireturn\n       LineNumberTable:\n         line 71: 0\n@@ -238,16 +238,16 @@\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #6                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        11: invokestatic  #7                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n+         8: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        11: invokestatic  #29                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n         14: areturn\n       LineNumberTable:\n         line 93: 0\n         line 94: 4\n         line 96: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -258,16 +258,16 @@\n \n   public static java.nio.ByteBuffer getByteBufferUtf8(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #8                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         4: invokestatic  #9                  // Method getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n+         1: getstatic     #35                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         4: invokestatic  #41                 // Method getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n          7: areturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n@@ -278,15 +278,15 @@\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          13\n          8: aload_0\n          9: aload_1\n-        10: invokevirtual #6                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        10: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n         13: areturn\n       LineNumberTable:\n         line 127: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 string   Ljava/lang/String;\n             0      14     1 charset   Ljava/nio/charset/Charset;\n@@ -297,16 +297,16 @@\n \n   public static byte[] getBytesIso8859_1(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #47                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n@@ -317,20 +317,20 @@\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+         8: invokevirtual #53                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n         11: areturn\n         12: astore_2\n         13: aload_1\n         14: aload_2\n-        15: invokestatic  #14                 // Method newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+        15: invokestatic  #58                 // Method newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n         18: athrow\n       Exception table:\n          from    to  target type\n              6    11    12   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 169: 0\n         line 170: 4\n@@ -349,101 +349,101 @@\n \n   public static byte[] getBytesUsAscii(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #15                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #62                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 194: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n   public static byte[] getBytesUtf16(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #16                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #65                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 212: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n   public static byte[] getBytesUtf16Be(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #68                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 230: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n   public static byte[] getBytesUtf16Le(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #71                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 248: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n   public static byte[] getBytesUtf8(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #8                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         4: invokestatic  #11                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+         1: getstatic     #35                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         4: invokestatic  #50                 // Method getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n          7: areturn\n       LineNumberTable:\n         line 266: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 string   Ljava/lang/String;\n \n   private static java.lang.IllegalStateException newIllegalStateException(java.lang.String, java.io.UnsupportedEncodingException);\n     descriptor: (Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #19                 // class java/lang/IllegalStateException\n+         0: new           #74                 // class java/lang/IllegalStateException\n          3: dup\n-         4: new           #20                 // class java/lang/StringBuilder\n+         4: new           #76                 // class java/lang/StringBuilder\n          7: dup\n-         8: invokespecial #21                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         8: invokespecial #78                 // Method java/lang/StringBuilder.\"<init>\":()V\n         11: aload_0\n-        12: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        15: ldc           #23                 // String :\n-        17: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: ldc           #83                 // String :\n+        17: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         20: aload_1\n-        21: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        24: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        27: invokespecial #26                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        21: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        24: invokevirtual #88                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        27: invokespecial #92                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         30: areturn\n       LineNumberTable:\n         line 271: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0 charsetName   Ljava/lang/String;\n             0      31     1     e   Ljava/io/UnsupportedEncodingException;\n@@ -453,19 +453,19 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          17\n-         8: new           #2                  // class java/lang/String\n+         8: new           #7                  // class java/lang/String\n         11: dup\n         12: aload_0\n         13: aload_1\n-        14: invokespecial #27                 // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+        14: invokespecial #95                 // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         17: areturn\n       LineNumberTable:\n         line 287: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 bytes   [B\n             0      18     1 charset   Ljava/nio/charset/Charset;\n@@ -479,24 +479,24 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #2                  // class java/lang/String\n+         6: new           #7                  // class java/lang/String\n          9: dup\n         10: aload_0\n         11: aload_1\n-        12: invokespecial #28                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+        12: invokespecial #98                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n         15: areturn\n         16: astore_2\n         17: aload_1\n         18: aload_2\n-        19: invokestatic  #14                 // Method newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+        19: invokestatic  #58                 // Method newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n         22: athrow\n       Exception table:\n          from    to  target type\n              6    15    16   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 310: 0\n         line 311: 4\n@@ -515,91 +515,91 @@\n \n   public static java.lang.String newStringIso8859_1(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #10                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #47                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 333: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static java.lang.String newStringUsAscii(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #15                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #62                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 349: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static java.lang.String newStringUtf16(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #16                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #65                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 365: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static java.lang.String newStringUtf16Be(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #68                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 381: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static java.lang.String newStringUtf16Le(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #18                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #71                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 397: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n \n   public static java.lang.String newStringUtf8(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #8                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         4: invokestatic  #29                 // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+         1: getstatic     #35                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         4: invokestatic  #101                // Method newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 413: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n }\n"}]}
