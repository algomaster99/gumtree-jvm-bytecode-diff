{"diffoscope-json-version": 1, "source1": "first/BackgroundInitializer.class", "source2": "second/BackgroundInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,176 +1,176 @@\n-  SHA-256 checksum f5b7b0d18cd242f2fe3717768204aefccb5dfcacb2195a95a1cc38ba7acb9d96\n+  SHA-256 checksum 2f251a954026c862fbfff72fe176560b299e08dffee57a0e1e1a69a3cb8d0c21\n   Compiled from \"BackgroundInitializer.java\"\n public abstract class org.apache.commons.lang3.concurrent.BackgroundInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #2                          // org/apache/commons/lang3/concurrent/BackgroundInitializer\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-    #2 = Class              #4            // org/apache/commons/lang3/concurrent/BackgroundInitializer\n-    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-    #4 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n-    #5 = Utf8               <init>\n-    #6 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n-    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #10           // java/lang/Object\n-    #9 = NameAndType        #5:#11        // \"<init>\":()V\n-   #10 = Utf8               java/lang/Object\n-   #11 = Utf8               ()V\n-   #12 = Methodref          #2.#13        // org/apache/commons/lang3/concurrent/BackgroundInitializer.setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n-   #13 = NameAndType        #14:#6        // setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n-   #14 = Utf8               setExternalExecutor\n-   #15 = Fieldref           #2.#16        // org/apache/commons/lang3/concurrent/BackgroundInitializer.externalExecutor:Ljava/util/concurrent/ExecutorService;\n-   #16 = NameAndType        #17:#18       // externalExecutor:Ljava/util/concurrent/ExecutorService;\n-   #17 = Utf8               externalExecutor\n-   #18 = Utf8               Ljava/util/concurrent/ExecutorService;\n-   #19 = Fieldref           #2.#20        // org/apache/commons/lang3/concurrent/BackgroundInitializer.future:Ljava/util/concurrent/Future;\n-   #20 = NameAndType        #21:#22       // future:Ljava/util/concurrent/Future;\n-   #21 = Utf8               future\n-   #22 = Utf8               Ljava/util/concurrent/Future;\n-   #23 = Methodref          #2.#24        // org/apache/commons/lang3/concurrent/BackgroundInitializer.isStarted:()Z\n-   #24 = NameAndType        #25:#26       // isStarted:()Z\n-   #25 = Utf8               isStarted\n-   #26 = Utf8               ()Z\n-   #27 = Class              #28           // java/lang/IllegalStateException\n-   #28 = Utf8               java/lang/IllegalStateException\n-   #29 = String             #30           // Cannot set ExecutorService after start()!\n-   #30 = Utf8               Cannot set ExecutorService after start()!\n-   #31 = Methodref          #27.#32       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = NameAndType        #5:#33        // \"<init>\":(Ljava/lang/String;)V\n-   #33 = Utf8               (Ljava/lang/String;)V\n-   #34 = Methodref          #2.#35        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #35 = NameAndType        #36:#37       // getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #36 = Utf8               getExternalExecutor\n-   #37 = Utf8               ()Ljava/util/concurrent/ExecutorService;\n-   #38 = Fieldref           #2.#39        // org/apache/commons/lang3/concurrent/BackgroundInitializer.executor:Ljava/util/concurrent/ExecutorService;\n-   #39 = NameAndType        #40:#18       // executor:Ljava/util/concurrent/ExecutorService;\n-   #40 = Utf8               executor\n-   #41 = Methodref          #2.#42        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #42 = NameAndType        #43:#37       // createExecutor:()Ljava/util/concurrent/ExecutorService;\n-   #43 = Utf8               createExecutor\n-   #44 = Methodref          #2.#45        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #45 = NameAndType        #46:#47       // createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #46 = Utf8               createTask\n-   #47 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-   #48 = InterfaceMethodref #49.#50       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #49 = Class              #51           // java/util/concurrent/ExecutorService\n-   #50 = NameAndType        #52:#53       // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #51 = Utf8               java/util/concurrent/ExecutorService\n-   #52 = Utf8               submit\n-   #53 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #54 = Methodref          #2.#55        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getFuture:()Ljava/util/concurrent/Future;\n-   #55 = NameAndType        #56:#57       // getFuture:()Ljava/util/concurrent/Future;\n-   #56 = Utf8               getFuture\n-   #57 = Utf8               ()Ljava/util/concurrent/Future;\n-   #58 = InterfaceMethodref #59.#60       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #59 = Class              #61           // java/util/concurrent/Future\n-   #60 = NameAndType        #62:#63       // get:()Ljava/lang/Object;\n-   #61 = Utf8               java/util/concurrent/Future\n-   #62 = Utf8               get\n-   #63 = Utf8               ()Ljava/lang/Object;\n-   #64 = Class              #65           // java/util/concurrent/ExecutionException\n-   #65 = Utf8               java/util/concurrent/ExecutionException\n-   #66 = Methodref          #67.#68       // org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #67 = Class              #69           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #68 = NameAndType        #70:#71       // handleCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #69 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #70 = Utf8               handleCause\n-   #71 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n-   #72 = Class              #73           // java/lang/InterruptedException\n-   #73 = Utf8               java/lang/InterruptedException\n-   #74 = Methodref          #75.#76       // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #75 = Class              #77           // java/lang/Thread\n-   #76 = NameAndType        #78:#79       // currentThread:()Ljava/lang/Thread;\n-   #77 = Utf8               java/lang/Thread\n-   #78 = Utf8               currentThread\n-   #79 = Utf8               ()Ljava/lang/Thread;\n-   #80 = Methodref          #75.#81       // java/lang/Thread.interrupt:()V\n-   #81 = NameAndType        #82:#11       // interrupt:()V\n-   #82 = Utf8               interrupt\n-   #83 = Class              #84           // org/apache/commons/lang3/concurrent/ConcurrentException\n-   #84 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-   #85 = Methodref          #83.#86       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #86 = NameAndType        #5:#87        // \"<init>\":(Ljava/lang/Throwable;)V\n-   #87 = Utf8               (Ljava/lang/Throwable;)V\n-   #88 = String             #89           // start() must be called first!\n-   #89 = Utf8               start() must be called first!\n-   #90 = Class              #91           // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n-   #91 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n-   #92 = Methodref          #90.#93       // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-   #93 = NameAndType        #5:#94        // \"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-   #94 = Utf8               (Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n-   #95 = Methodref          #2.#96        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getTaskCount:()I\n-   #96 = NameAndType        #97:#98       // getTaskCount:()I\n-   #97 = Utf8               getTaskCount\n-   #98 = Utf8               ()I\n-   #99 = Methodref          #100.#101     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-  #100 = Class              #102          // java/util/concurrent/Executors\n-  #101 = NameAndType        #103:#104     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-  #102 = Utf8               java/util/concurrent/Executors\n-  #103 = Utf8               newFixedThreadPool\n-  #104 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n-  #105 = Class              #106          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #106 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #107 = Utf8               Signature\n-  #108 = Utf8               Ljava/util/concurrent/Future<TT;>;\n-  #109 = Utf8               Code\n-  #110 = Utf8               LineNumberTable\n-  #111 = Utf8               LocalVariableTable\n-  #112 = Utf8               this\n-  #113 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n-  #114 = Utf8               LocalVariableTypeTable\n-  #115 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n-  #116 = Utf8               exec\n-  #117 = Utf8               StackMapTable\n-  #118 = Utf8               start\n-  #119 = Utf8               tempExec\n-  #120 = Utf8               execex\n-  #121 = Utf8               Ljava/util/concurrent/ExecutionException;\n-  #122 = Utf8               iex\n-  #123 = Utf8               Ljava/lang/InterruptedException;\n-  #124 = Utf8               Exceptions\n-  #125 = Utf8               ()TT;\n-  #126 = Utf8               ()Ljava/util/concurrent/Future<TT;>;\n-  #127 = Utf8               getActiveExecutor\n-  #128 = Utf8               initialize\n-  #129 = Class              #130          // java/lang/Exception\n-  #130 = Utf8               java/lang/Exception\n-  #131 = Utf8               execDestroy\n-  #132 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n-  #133 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-  #134 = Utf8               SourceFile\n-  #135 = Utf8               BackgroundInitializer.java\n+    #1 = Class              #2            // org/apache/commons/lang3/concurrent/BackgroundInitializer\n+    #2 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+    #6 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+    #7 = Utf8               externalExecutor\n+    #8 = Utf8               Ljava/util/concurrent/ExecutorService;\n+    #9 = Utf8               executor\n+   #10 = Utf8               future\n+   #11 = Utf8               Ljava/util/concurrent/Future;\n+   #12 = Utf8               Signature\n+   #13 = Utf8               Ljava/util/concurrent/Future<TT;>;\n+   #14 = Utf8               <init>\n+   #15 = Utf8               ()V\n+   #16 = Utf8               Code\n+   #17 = Methodref          #1.#18        // org/apache/commons/lang3/concurrent/BackgroundInitializer.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+   #18 = NameAndType        #14:#19       // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+   #19 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n+   #20 = Utf8               LineNumberTable\n+   #21 = Utf8               LocalVariableTable\n+   #22 = Utf8               this\n+   #23 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n+   #24 = Utf8               LocalVariableTypeTable\n+   #25 = Utf8               Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n+   #26 = Methodref          #3.#27        // java/lang/Object.\"<init>\":()V\n+   #27 = NameAndType        #14:#15       // \"<init>\":()V\n+   #28 = Methodref          #1.#29        // org/apache/commons/lang3/concurrent/BackgroundInitializer.setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+   #29 = NameAndType        #30:#19       // setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+   #30 = Utf8               setExternalExecutor\n+   #31 = Utf8               exec\n+   #32 = Utf8               getExternalExecutor\n+   #33 = Utf8               ()Ljava/util/concurrent/ExecutorService;\n+   #34 = Fieldref           #1.#35        // org/apache/commons/lang3/concurrent/BackgroundInitializer.externalExecutor:Ljava/util/concurrent/ExecutorService;\n+   #35 = NameAndType        #7:#8         // externalExecutor:Ljava/util/concurrent/ExecutorService;\n+   #36 = Utf8               isStarted\n+   #37 = Utf8               ()Z\n+   #38 = Fieldref           #1.#39        // org/apache/commons/lang3/concurrent/BackgroundInitializer.future:Ljava/util/concurrent/Future;\n+   #39 = NameAndType        #10:#11       // future:Ljava/util/concurrent/Future;\n+   #40 = Utf8               StackMapTable\n+   #41 = Methodref          #1.#42        // org/apache/commons/lang3/concurrent/BackgroundInitializer.isStarted:()Z\n+   #42 = NameAndType        #36:#37       // isStarted:()Z\n+   #43 = Class              #44           // java/lang/IllegalStateException\n+   #44 = Utf8               java/lang/IllegalStateException\n+   #45 = String             #46           // Cannot set ExecutorService after start()!\n+   #46 = Utf8               Cannot set ExecutorService after start()!\n+   #47 = Methodref          #43.#48       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #48 = NameAndType        #14:#49       // \"<init>\":(Ljava/lang/String;)V\n+   #49 = Utf8               (Ljava/lang/String;)V\n+   #50 = Utf8               start\n+   #51 = Methodref          #1.#52        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #52 = NameAndType        #32:#33       // getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #53 = Fieldref           #1.#54        // org/apache/commons/lang3/concurrent/BackgroundInitializer.executor:Ljava/util/concurrent/ExecutorService;\n+   #54 = NameAndType        #9:#8         // executor:Ljava/util/concurrent/ExecutorService;\n+   #55 = Methodref          #1.#56        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #56 = NameAndType        #57:#33       // createExecutor:()Ljava/util/concurrent/ExecutorService;\n+   #57 = Utf8               createExecutor\n+   #58 = Methodref          #1.#59        // org/apache/commons/lang3/concurrent/BackgroundInitializer.createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #59 = NameAndType        #60:#61       // createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #60 = Utf8               createTask\n+   #61 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+   #62 = InterfaceMethodref #63.#65       // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #63 = Class              #64           // java/util/concurrent/ExecutorService\n+   #64 = Utf8               java/util/concurrent/ExecutorService\n+   #65 = NameAndType        #66:#67       // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #66 = Utf8               submit\n+   #67 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+   #68 = Utf8               tempExec\n+   #69 = Utf8               get\n+   #70 = Utf8               ()Ljava/lang/Object;\n+   #71 = Utf8               Exceptions\n+   #72 = Class              #73           // org/apache/commons/lang3/concurrent/ConcurrentException\n+   #73 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #74 = Utf8               ()TT;\n+   #75 = Methodref          #1.#76        // org/apache/commons/lang3/concurrent/BackgroundInitializer.getFuture:()Ljava/util/concurrent/Future;\n+   #76 = NameAndType        #77:#78       // getFuture:()Ljava/util/concurrent/Future;\n+   #77 = Utf8               getFuture\n+   #78 = Utf8               ()Ljava/util/concurrent/Future;\n+   #79 = InterfaceMethodref #80.#82       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #80 = Class              #81           // java/util/concurrent/Future\n+   #81 = Utf8               java/util/concurrent/Future\n+   #82 = NameAndType        #69:#70       // get:()Ljava/lang/Object;\n+   #83 = Methodref          #84.#86       // org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #84 = Class              #85           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #85 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #86 = NameAndType        #87:#88       // handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #87 = Utf8               handleCause\n+   #88 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n+   #89 = Methodref          #90.#92       // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #90 = Class              #91           // java/lang/Thread\n+   #91 = Utf8               java/lang/Thread\n+   #92 = NameAndType        #93:#94       // currentThread:()Ljava/lang/Thread;\n+   #93 = Utf8               currentThread\n+   #94 = Utf8               ()Ljava/lang/Thread;\n+   #95 = Methodref          #90.#96       // java/lang/Thread.interrupt:()V\n+   #96 = NameAndType        #97:#15       // interrupt:()V\n+   #97 = Utf8               interrupt\n+   #98 = Methodref          #72.#99       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #99 = NameAndType        #14:#100      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #100 = Utf8               (Ljava/lang/Throwable;)V\n+  #101 = Class              #102          // java/util/concurrent/ExecutionException\n+  #102 = Utf8               java/util/concurrent/ExecutionException\n+  #103 = Class              #104          // java/lang/InterruptedException\n+  #104 = Utf8               java/lang/InterruptedException\n+  #105 = Utf8               execex\n+  #106 = Utf8               Ljava/util/concurrent/ExecutionException;\n+  #107 = Utf8               iex\n+  #108 = Utf8               Ljava/lang/InterruptedException;\n+  #109 = Utf8               ()Ljava/util/concurrent/Future<TT;>;\n+  #110 = String             #111          // start() must be called first!\n+  #111 = Utf8               start() must be called first!\n+  #112 = Utf8               getActiveExecutor\n+  #113 = Utf8               getTaskCount\n+  #114 = Utf8               ()I\n+  #115 = Utf8               initialize\n+  #116 = Class              #117          // java/lang/Exception\n+  #117 = Utf8               java/lang/Exception\n+  #118 = Utf8               (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n+  #119 = Class              #120          // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+  #120 = Utf8               org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+  #121 = Methodref          #119.#122     // org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+  #122 = NameAndType        #14:#123      // \"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+  #123 = Utf8               (Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+  #124 = Utf8               execDestroy\n+  #125 = Methodref          #1.#126       // org/apache/commons/lang3/concurrent/BackgroundInitializer.getTaskCount:()I\n+  #126 = NameAndType        #113:#114     // getTaskCount:()I\n+  #127 = Methodref          #128.#130     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+  #128 = Class              #129          // java/util/concurrent/Executors\n+  #129 = Utf8               java/util/concurrent/Executors\n+  #130 = NameAndType        #131:#132     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+  #131 = Utf8               newFixedThreadPool\n+  #132 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n+  #133 = Utf8               SourceFile\n+  #134 = Utf8               BackgroundInitializer.java\n+  #135 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n   #136 = Utf8               InnerClasses\n   #137 = Utf8               InitializationTask\n {\n   private java.util.concurrent.ExecutorService externalExecutor;\n     descriptor: Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.ExecutorService executor;\n     descriptor: Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.concurrent.Future<T> future;\n     descriptor: Ljava/util/concurrent/Future;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #108                         // Ljava/util/concurrent/Future<TT;>;\n+    Signature: #13                          // Ljava/util/concurrent/Future<TT;>;\n \n   protected org.apache.commons.lang3.concurrent.BackgroundInitializer();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #1                  // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+         2: invokespecial #17                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n          5: return\n       LineNumberTable:\n         line 101: 0\n         line 102: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n@@ -180,18 +180,18 @@\n \n   protected org.apache.commons.lang3.concurrent.BackgroundInitializer(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #26                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #12                 // Method setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n+         6: invokevirtual #28                 // Method setExternalExecutor:(Ljava/util/concurrent/ExecutorService;)V\n          9: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 4\n         line 116: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -203,15 +203,15 @@\n \n   public final synchronized java.util.concurrent.ExecutorService getExternalExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n+         1: getfield      #34                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n          4: areturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n@@ -220,53 +220,53 @@\n \n   public synchronized boolean isStarted();\n     descriptor: ()Z\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n-         4: ifnull        11\n+         1: getfield      #38                 // Field future:Ljava/util/concurrent/Future;\n+         4: ifnull        9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 135: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n+            0      11     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   public final synchronized void setExternalExecutor(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #23                 // Method isStarted:()Z\n+         1: invokevirtual #41                 // Method isStarted:()Z\n          4: ifeq          17\n-         7: new           #27                 // class java/lang/IllegalStateException\n+         7: new           #43                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #29                 // String Cannot set ExecutorService after start()!\n-        13: invokespecial #31                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #45                 // String Cannot set ExecutorService after start()!\n+        13: invokespecial #47                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #15                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n+        19: putfield      #34                 // Field externalExecutor:Ljava/util/concurrent/ExecutorService;\n         22: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 7\n+        line 156: 11\n+        line 155: 13\n         line 159: 17\n         line 160: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n             0      23     1 externalExecutor   Ljava/util/concurrent/ExecutorService;\n       LocalVariableTypeTable:\n@@ -277,90 +277,94 @@\n \n   public synchronized boolean start();\n     descriptor: ()Z\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #23                 // Method isStarted:()Z\n+         1: invokevirtual #41                 // Method isStarted:()Z\n          4: ifne          57\n          7: aload_0\n          8: aload_0\n-         9: invokevirtual #34                 // Method getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n-        12: putfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+         9: invokevirtual #51                 // Method getExternalExecutor:()Ljava/util/concurrent/ExecutorService;\n+        12: putfield      #53                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         15: aload_0\n-        16: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        16: getfield      #53                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         19: ifnonnull     35\n         22: aload_0\n         23: aload_0\n-        24: invokespecial #41                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;\n+        24: invokespecial #55                 // Method createExecutor:()Ljava/util/concurrent/ExecutorService;\n         27: dup\n         28: astore_1\n-        29: putfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        29: putfield      #53                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         32: goto          37\n         35: aconst_null\n         36: astore_1\n         37: aload_0\n         38: aload_0\n-        39: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+        39: getfield      #53                 // Field executor:Ljava/util/concurrent/ExecutorService;\n         42: aload_0\n         43: aload_1\n-        44: invokespecial #44                 // Method createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n-        47: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-        52: putfield      #19                 // Field future:Ljava/util/concurrent/Future;\n+        44: invokespecial #58                 // Method createTask:(Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n+        47: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+        52: putfield      #38                 // Field future:Ljava/util/concurrent/Future;\n         55: iconst_1\n         56: ireturn\n         57: iconst_0\n         58: ireturn\n       LineNumberTable:\n         line 174: 0\n         line 179: 7\n         line 180: 15\n         line 181: 22\n+        line 182: 32\n         line 183: 35\n         line 186: 37\n         line 188: 55\n         line 191: 57\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      59     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n            29       6     1 tempExec   Ljava/util/concurrent/ExecutorService;\n            37      20     1 tempExec   Ljava/util/concurrent/ExecutorService;\n-            0      59     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      59     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 35 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 1\n           locals = [ class java/util/concurrent/ExecutorService ]\n         frame_type = 250 /* chop */\n           offset_delta = 19\n \n   public T get() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.lang3.concurrent.ConcurrentException\n+    Signature: #74                          // ()TT;\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #54                 // Method getFuture:()Ljava/util/concurrent/Future;\n-         4: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+         1: invokevirtual #75                 // Method getFuture:()Ljava/util/concurrent/Future;\n+         4: invokeinterface #79,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n          9: areturn\n         10: astore_1\n         11: aload_1\n-        12: invokestatic  #66                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n+        12: invokestatic  #83                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils.handleCause:(Ljava/util/concurrent/ExecutionException;)V\n         15: aconst_null\n         16: areturn\n         17: astore_1\n-        18: invokestatic  #74                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        21: invokevirtual #80                 // Method java/lang/Thread.interrupt:()V\n-        24: new           #83                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n+        18: invokestatic  #89                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        21: invokevirtual #95                 // Method java/lang/Thread.interrupt:()V\n+        24: new           #72                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n         27: dup\n         28: aload_1\n-        29: invokespecial #85                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n+        29: invokespecial #98                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/Throwable;)V\n         32: athrow\n       Exception table:\n          from    to  target type\n              0     9    10   Class java/util/concurrent/ExecutionException\n              0     9    17   Class java/lang/InterruptedException\n       LineNumberTable:\n         line 211: 0\n@@ -368,66 +372,63 @@\n         line 213: 11\n         line 214: 15\n         line 215: 17\n         line 217: 18\n         line 218: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      33     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n            11       6     1 execex   Ljava/util/concurrent/ExecutionException;\n            18      15     1   iex   Ljava/lang/InterruptedException;\n-            0      33     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/InterruptedException ]\n-    Exceptions:\n-      throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #125                         // ()TT;\n \n   public synchronized java.util.concurrent.Future<T> getFuture();\n     descriptor: ()Ljava/util/concurrent/Future;\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Signature: #109                         // ()Ljava/util/concurrent/Future<TT;>;\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n+         1: getfield      #38                 // Field future:Ljava/util/concurrent/Future;\n          4: ifnonnull     17\n-         7: new           #27                 // class java/lang/IllegalStateException\n+         7: new           #43                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #88                 // String start() must be called first!\n-        13: invokespecial #31                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #110                // String start() must be called first!\n+        13: invokespecial #47                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #19                 // Field future:Ljava/util/concurrent/Future;\n+        18: getfield      #38                 // Field future:Ljava/util/concurrent/Future;\n         21: areturn\n       LineNumberTable:\n         line 231: 0\n         line 232: 7\n         line 235: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #126                         // ()Ljava/util/concurrent/Future<TT;>;\n \n   protected final synchronized java.util.concurrent.ExecutorService getActiveExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0034) ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field executor:Ljava/util/concurrent/ExecutorService;\n+         1: getfield      #53                 // Field executor:Ljava/util/concurrent/ExecutorService;\n          4: areturn\n       LineNumberTable:\n         line 248: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n@@ -451,53 +452,53 @@\n             0       2     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n \n   protected abstract T initialize() throws java.lang.Exception;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Exception\n-    Signature: #125                         // ()TT;\n+    Signature: #74                          // ()TT;\n \n   private java.util.concurrent.Callable<T> createTask(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable;\n     flags: (0x0002) ACC_PRIVATE\n+    Signature: #118                         // (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #90                 // class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n+         0: new           #119                // class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #92                 // Method org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n+         6: invokespecial #121                // Method org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask.\"<init>\":(Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;Ljava/util/concurrent/ExecutorService;)V\n          9: areturn\n       LineNumberTable:\n         line 290: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n             0      10     1 execDestroy   Ljava/util/concurrent/ExecutorService;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n-    Signature: #132                         // (Ljava/util/concurrent/ExecutorService;)Ljava/util/concurrent/Callable<TT;>;\n \n   private java.util.concurrent.ExecutorService createExecutor();\n     descriptor: ()Ljava/util/concurrent/ExecutorService;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #95                 // Method getTaskCount:()I\n-         4: invokestatic  #99                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+         1: invokevirtual #125                // Method getTaskCount:()I\n+         4: invokestatic  #127                // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n          7: areturn\n       LineNumberTable:\n         line 300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/concurrent/BackgroundInitializer<TT;>;\n }\n-Signature: #133                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n SourceFile: \"BackgroundInitializer.java\"\n+Signature: #135                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n InnerClasses:\n-  private #137= #90 of #2;                // InitializationTask=class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask of class org/apache/commons/lang3/concurrent/BackgroundInitializer\n+  private #137= #119 of #1;               // InitializationTask=class org/apache/commons/lang3/concurrent/BackgroundInitializer$InitializationTask of class org/apache/commons/lang3/concurrent/BackgroundInitializer\n"}]}
