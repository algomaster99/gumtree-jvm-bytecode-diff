{"diffoscope-json-version": 1, "source1": "first/FingerClient.class", "source2": "second/FingerClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum 2df9c45f0223668689a09d35a404095635b0171de734aee06af8a6f19136ed1d\n+  SHA-256 checksum 6d48f1dec1254363951789d2fba7272ea2c0ef1daf7e89faf25a0110d2787354\n   Compiled from \"FingerClient.java\"\n public class org.apache.commons.net.finger.FingerClient extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/apache/commons/net/finger/FingerClient\n   super_class: #24                        // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #24.#82       // org/apache/commons/net/SocketClient.\"<init>\":()V\n-    #2 = Fieldref           #3.#83        // org/apache/commons/net/finger/FingerClient.buffer:[C\n-    #3 = Class              #84           // org/apache/commons/net/finger/FingerClient\n-    #4 = Methodref          #3.#85        // org/apache/commons/net/finger/FingerClient.setDefaultPort:(I)V\n-    #5 = Class              #86           // java/lang/StringBuilder\n-    #6 = Methodref          #5.#87        // java/lang/StringBuilder.\"<init>\":(I)V\n-    #7 = Class              #88           // java/io/BufferedReader\n-    #8 = Class              #89           // java/io/InputStreamReader\n-    #9 = Methodref          #3.#90        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n-   #10 = Methodref          #3.#91        // org/apache/commons/net/finger/FingerClient.getCharset:()Ljava/nio/charset/Charset;\n-   #11 = Methodref          #8.#92        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #12 = Methodref          #7.#93        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #13 = Methodref          #7.#94        // java/io/BufferedReader.read:([CII)I\n-   #14 = Methodref          #5.#95        // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #7.#96        // java/io/BufferedReader.close:()V\n-   #16 = Class              #97           // java/lang/Throwable\n-   #17 = Methodref          #16.#98       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #18 = Methodref          #5.#99        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = String             #100          //\n-   #20 = Methodref          #3.#101       // org/apache/commons/net/finger/FingerClient.query:(ZLjava/lang/String;)Ljava/lang/String;\n-   #21 = Methodref          #3.#102       // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-   #22 = String             #103          // /W\n-   #23 = Methodref          #5.#104       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Class              #105          // org/apache/commons/net/SocketClient\n-   #25 = String             #106          // \\r\\n\n-   #26 = Methodref          #107.#108     // org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #27 = Methodref          #109.#110     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #28 = Methodref          #111.#112     // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #29 = Class              #113          // java/io/DataOutputStream\n-   #30 = Class              #114          // java/io/BufferedOutputStream\n-   #31 = Fieldref           #3.#115       // org/apache/commons/net/finger/FingerClient._output_:Ljava/io/OutputStream;\n-   #32 = Methodref          #30.#116      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-   #33 = Methodref          #29.#117      // java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #34 = Methodref          #29.#118      // java/io/DataOutputStream.write:([BII)V\n-   #35 = Methodref          #29.#119      // java/io/DataOutputStream.flush:()V\n-   #36 = Fieldref           #3.#120       // org/apache/commons/net/finger/FingerClient._input_:Ljava/io/InputStream;\n+    #1 = Methodref          #24.#78       // org/apache/commons/net/SocketClient.\"<init>\":()V\n+    #2 = Fieldref           #3.#79        // org/apache/commons/net/finger/FingerClient.buffer:[C\n+    #3 = Class              #80           // org/apache/commons/net/finger/FingerClient\n+    #4 = Methodref          #3.#81        // org/apache/commons/net/finger/FingerClient.setDefaultPort:(I)V\n+    #5 = Class              #82           // java/lang/StringBuilder\n+    #6 = Methodref          #5.#83        // java/lang/StringBuilder.\"<init>\":(I)V\n+    #7 = Class              #84           // java/io/BufferedReader\n+    #8 = Class              #85           // java/io/InputStreamReader\n+    #9 = Methodref          #3.#86        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+   #10 = Methodref          #3.#87        // org/apache/commons/net/finger/FingerClient.getCharset:()Ljava/nio/charset/Charset;\n+   #11 = Methodref          #8.#88        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #12 = Methodref          #7.#89        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #13 = Methodref          #7.#90        // java/io/BufferedReader.read:([CII)I\n+   #14 = Methodref          #5.#91        // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #7.#92        // java/io/BufferedReader.close:()V\n+   #16 = Class              #93           // java/lang/Throwable\n+   #17 = Methodref          #16.#94       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #18 = Methodref          #5.#95        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #19 = String             #96           //\n+   #20 = Methodref          #3.#97        // org/apache/commons/net/finger/FingerClient.query:(ZLjava/lang/String;)Ljava/lang/String;\n+   #21 = Methodref          #3.#98        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #22 = String             #99           // /W\n+   #23 = Methodref          #5.#100       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = Class              #101          // org/apache/commons/net/SocketClient\n+   #25 = String             #102          // \\r\\n\n+   #26 = Methodref          #103.#104     // org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #27 = Methodref          #105.#106     // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #28 = Methodref          #63.#107      // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #29 = Class              #108          // java/io/DataOutputStream\n+   #30 = Class              #109          // java/io/BufferedOutputStream\n+   #31 = Fieldref           #3.#110       // org/apache/commons/net/finger/FingerClient._output_:Ljava/io/OutputStream;\n+   #32 = Methodref          #30.#111      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+   #33 = Methodref          #29.#112      // java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #34 = Methodref          #29.#113      // java/io/DataOutputStream.write:([BII)V\n+   #35 = Methodref          #29.#114      // java/io/DataOutputStream.flush:()V\n+   #36 = Fieldref           #3.#115       // org/apache/commons/net/finger/FingerClient._input_:Ljava/io/InputStream;\n    #37 = Utf8               DEFAULT_PORT\n    #38 = Utf8               I\n    #39 = Utf8               ConstantValue\n    #40 = Integer            79\n    #41 = Utf8               LONG_FLAG\n    #42 = Utf8               Ljava/lang/String;\n    #43 = Utf8               buffer\n@@ -66,105 +66,100 @@\n    #56 = Utf8               Ljava/io/BufferedReader;\n    #57 = Utf8               longOutput\n    #58 = Utf8               Z\n    #59 = Utf8               username\n    #60 = Utf8               result\n    #61 = Utf8               Ljava/lang/StringBuilder;\n    #62 = Utf8               StackMapTable\n-   #63 = Class              #84           // org/apache/commons/net/finger/FingerClient\n-   #64 = Class              #121          // java/lang/String\n-   #65 = Class              #86           // java/lang/StringBuilder\n-   #66 = Class              #88           // java/io/BufferedReader\n-   #67 = Class              #97           // java/lang/Throwable\n-   #68 = Utf8               Exceptions\n-   #69 = Class              #122          // java/io/IOException\n-   #70 = Utf8               (Z)Ljava/lang/String;\n-   #71 = Utf8               getInputStream\n-   #72 = Utf8               (ZLjava/lang/String;)Ljava/io/InputStream;\n-   #73 = Utf8               (ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-   #74 = Utf8               encoding\n-   #75 = Utf8               output\n-   #76 = Utf8               Ljava/io/DataOutputStream;\n-   #77 = Utf8               encodedQuery\n-   #78 = Utf8               [B\n-   #79 = Utf8               (Z)Ljava/io/InputStream;\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               FingerClient.java\n-   #82 = NameAndType        #45:#46       // \"<init>\":()V\n-   #83 = NameAndType        #43:#44       // buffer:[C\n-   #84 = Utf8               org/apache/commons/net/finger/FingerClient\n-   #85 = NameAndType        #123:#124     // setDefaultPort:(I)V\n-   #86 = Utf8               java/lang/StringBuilder\n-   #87 = NameAndType        #45:#124      // \"<init>\":(I)V\n-   #88 = Utf8               java/io/BufferedReader\n-   #89 = Utf8               java/io/InputStreamReader\n-   #90 = NameAndType        #71:#72       // getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n-   #91 = NameAndType        #125:#126     // getCharset:()Ljava/nio/charset/Charset;\n-   #92 = NameAndType        #45:#127      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #93 = NameAndType        #45:#128      // \"<init>\":(Ljava/io/Reader;)V\n-   #94 = NameAndType        #54:#129      // read:([CII)I\n-   #95 = NameAndType        #130:#131     // append:([CII)Ljava/lang/StringBuilder;\n-   #96 = NameAndType        #132:#46      // close:()V\n-   #97 = Utf8               java/lang/Throwable\n-   #98 = NameAndType        #133:#134     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #99 = NameAndType        #135:#136     // toString:()Ljava/lang/String;\n-  #100 = Utf8\n-  #101 = NameAndType        #52:#53       // query:(ZLjava/lang/String;)Ljava/lang/String;\n-  #102 = NameAndType        #71:#73       // getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-  #103 = Utf8               /W\n-  #104 = NameAndType        #130:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #105 = Utf8               org/apache/commons/net/SocketClient\n-  #106 = Utf8               \\r\\n\n-  #107 = Class              #138          // org/apache/commons/net/util/Charsets\n-  #108 = NameAndType        #139:#140     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #109 = Class              #141          // java/nio/charset/Charset\n-  #110 = NameAndType        #142:#136     // name:()Ljava/lang/String;\n-  #111 = Class              #121          // java/lang/String\n-  #112 = NameAndType        #143:#144     // getBytes:(Ljava/lang/String;)[B\n-  #113 = Utf8               java/io/DataOutputStream\n-  #114 = Utf8               java/io/BufferedOutputStream\n-  #115 = NameAndType        #145:#146     // _output_:Ljava/io/OutputStream;\n-  #116 = NameAndType        #45:#147      // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #117 = NameAndType        #45:#148      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #118 = NameAndType        #149:#150     // write:([BII)V\n-  #119 = NameAndType        #151:#46      // flush:()V\n-  #120 = NameAndType        #152:#153     // _input_:Ljava/io/InputStream;\n-  #121 = Utf8               java/lang/String\n-  #122 = Utf8               java/io/IOException\n-  #123 = Utf8               setDefaultPort\n-  #124 = Utf8               (I)V\n-  #125 = Utf8               getCharset\n-  #126 = Utf8               ()Ljava/nio/charset/Charset;\n-  #127 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #128 = Utf8               (Ljava/io/Reader;)V\n-  #129 = Utf8               ([CII)I\n-  #130 = Utf8               append\n-  #131 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #132 = Utf8               close\n-  #133 = Utf8               addSuppressed\n-  #134 = Utf8               (Ljava/lang/Throwable;)V\n-  #135 = Utf8               toString\n-  #136 = Utf8               ()Ljava/lang/String;\n-  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #138 = Utf8               org/apache/commons/net/util/Charsets\n-  #139 = Utf8               toCharset\n-  #140 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #141 = Utf8               java/nio/charset/Charset\n-  #142 = Utf8               name\n-  #143 = Utf8               getBytes\n-  #144 = Utf8               (Ljava/lang/String;)[B\n-  #145 = Utf8               _output_\n-  #146 = Utf8               Ljava/io/OutputStream;\n-  #147 = Utf8               (Ljava/io/OutputStream;I)V\n-  #148 = Utf8               (Ljava/io/OutputStream;)V\n-  #149 = Utf8               write\n-  #150 = Utf8               ([BII)V\n-  #151 = Utf8               flush\n-  #152 = Utf8               _input_\n-  #153 = Utf8               Ljava/io/InputStream;\n+   #63 = Class              #116          // java/lang/String\n+   #64 = Utf8               Exceptions\n+   #65 = Class              #117          // java/io/IOException\n+   #66 = Utf8               (Z)Ljava/lang/String;\n+   #67 = Utf8               getInputStream\n+   #68 = Utf8               (ZLjava/lang/String;)Ljava/io/InputStream;\n+   #69 = Utf8               (ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #70 = Utf8               encoding\n+   #71 = Utf8               output\n+   #72 = Utf8               Ljava/io/DataOutputStream;\n+   #73 = Utf8               encodedQuery\n+   #74 = Utf8               [B\n+   #75 = Utf8               (Z)Ljava/io/InputStream;\n+   #76 = Utf8               SourceFile\n+   #77 = Utf8               FingerClient.java\n+   #78 = NameAndType        #45:#46       // \"<init>\":()V\n+   #79 = NameAndType        #43:#44       // buffer:[C\n+   #80 = Utf8               org/apache/commons/net/finger/FingerClient\n+   #81 = NameAndType        #118:#119     // setDefaultPort:(I)V\n+   #82 = Utf8               java/lang/StringBuilder\n+   #83 = NameAndType        #45:#119      // \"<init>\":(I)V\n+   #84 = Utf8               java/io/BufferedReader\n+   #85 = Utf8               java/io/InputStreamReader\n+   #86 = NameAndType        #67:#68       // getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+   #87 = NameAndType        #120:#121     // getCharset:()Ljava/nio/charset/Charset;\n+   #88 = NameAndType        #45:#122      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #89 = NameAndType        #45:#123      // \"<init>\":(Ljava/io/Reader;)V\n+   #90 = NameAndType        #54:#124      // read:([CII)I\n+   #91 = NameAndType        #125:#126     // append:([CII)Ljava/lang/StringBuilder;\n+   #92 = NameAndType        #127:#46      // close:()V\n+   #93 = Utf8               java/lang/Throwable\n+   #94 = NameAndType        #128:#129     // addSuppressed:(Ljava/lang/Throwable;)V\n+   #95 = NameAndType        #130:#131     // toString:()Ljava/lang/String;\n+   #96 = Utf8\n+   #97 = NameAndType        #52:#53       // query:(ZLjava/lang/String;)Ljava/lang/String;\n+   #98 = NameAndType        #67:#69       // getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #99 = Utf8               /W\n+  #100 = NameAndType        #125:#132     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #101 = Utf8               org/apache/commons/net/SocketClient\n+  #102 = Utf8               \\r\\n\n+  #103 = Class              #133          // org/apache/commons/net/util/Charsets\n+  #104 = NameAndType        #134:#135     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #105 = Class              #136          // java/nio/charset/Charset\n+  #106 = NameAndType        #137:#131     // name:()Ljava/lang/String;\n+  #107 = NameAndType        #138:#139     // getBytes:(Ljava/lang/String;)[B\n+  #108 = Utf8               java/io/DataOutputStream\n+  #109 = Utf8               java/io/BufferedOutputStream\n+  #110 = NameAndType        #140:#141     // _output_:Ljava/io/OutputStream;\n+  #111 = NameAndType        #45:#142      // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #112 = NameAndType        #45:#143      // \"<init>\":(Ljava/io/OutputStream;)V\n+  #113 = NameAndType        #144:#145     // write:([BII)V\n+  #114 = NameAndType        #146:#46      // flush:()V\n+  #115 = NameAndType        #147:#148     // _input_:Ljava/io/InputStream;\n+  #116 = Utf8               java/lang/String\n+  #117 = Utf8               java/io/IOException\n+  #118 = Utf8               setDefaultPort\n+  #119 = Utf8               (I)V\n+  #120 = Utf8               getCharset\n+  #121 = Utf8               ()Ljava/nio/charset/Charset;\n+  #122 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #123 = Utf8               (Ljava/io/Reader;)V\n+  #124 = Utf8               ([CII)I\n+  #125 = Utf8               append\n+  #126 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+  #127 = Utf8               close\n+  #128 = Utf8               addSuppressed\n+  #129 = Utf8               (Ljava/lang/Throwable;)V\n+  #130 = Utf8               toString\n+  #131 = Utf8               ()Ljava/lang/String;\n+  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #133 = Utf8               org/apache/commons/net/util/Charsets\n+  #134 = Utf8               toCharset\n+  #135 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #136 = Utf8               java/nio/charset/Charset\n+  #137 = Utf8               name\n+  #138 = Utf8               getBytes\n+  #139 = Utf8               (Ljava/lang/String;)[B\n+  #140 = Utf8               _output_\n+  #141 = Utf8               Ljava/io/OutputStream;\n+  #142 = Utf8               (Ljava/io/OutputStream;I)V\n+  #143 = Utf8               (Ljava/io/OutputStream;)V\n+  #144 = Utf8               write\n+  #145 = Utf8               ([BII)V\n+  #146 = Utf8               flush\n+  #147 = Utf8               _input_\n+  #148 = Utf8               Ljava/io/InputStream;\n {\n   public static final int DEFAULT_PORT = 79;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 79\n \n   private static final java.lang.String LONG_FLAG = \"/W \";\n@@ -200,15 +195,15 @@\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/net/finger/FingerClient;\n \n   public java.lang.String query(boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (ZLjava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=7, locals=10, args_size=3\n+      stack=7, locals=8, args_size=3\n          0: new           #5                  // class java/lang/StringBuilder\n          3: dup\n          4: aload_0\n          5: getfield      #2                  // Field buffer:[C\n          8: arraylength\n          9: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":(I)V\n         12: astore        4\n@@ -221,130 +216,92 @@\n         24: aload_2\n         25: invokevirtual #9                  // Method getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n         28: aload_0\n         29: invokevirtual #10                 // Method getCharset:()Ljava/nio/charset/Charset;\n         32: invokespecial #11                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n         35: invokespecial #12                 // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n         38: astore        5\n-        40: aconst_null\n-        41: astore        6\n-        43: aload         5\n-        45: aload_0\n-        46: getfield      #2                  // Field buffer:[C\n-        49: iconst_0\n-        50: aload_0\n-        51: getfield      #2                  // Field buffer:[C\n-        54: arraylength\n-        55: invokevirtual #13                 // Method java/io/BufferedReader.read:([CII)I\n-        58: istore_3\n-        59: iload_3\n-        60: ifgt          66\n-        63: goto          81\n-        66: aload         4\n-        68: aload_0\n-        69: getfield      #2                  // Field buffer:[C\n-        72: iconst_0\n-        73: iload_3\n-        74: invokevirtual #14                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-        77: pop\n-        78: goto          43\n-        81: aload         5\n-        83: ifnull        168\n-        86: aload         6\n-        88: ifnull        111\n-        91: aload         5\n-        93: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n-        96: goto          168\n-        99: astore        7\n-       101: aload         6\n-       103: aload         7\n-       105: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       108: goto          168\n-       111: aload         5\n-       113: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n-       116: goto          168\n-       119: astore        7\n-       121: aload         7\n-       123: astore        6\n-       125: aload         7\n-       127: athrow\n-       128: astore        8\n-       130: aload         5\n-       132: ifnull        165\n-       135: aload         6\n-       137: ifnull        160\n-       140: aload         5\n-       142: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n-       145: goto          165\n-       148: astore        9\n-       150: aload         6\n-       152: aload         9\n-       154: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       157: goto          165\n-       160: aload         5\n-       162: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n-       165: aload         8\n-       167: athrow\n-       168: aload         4\n-       170: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       173: areturn\n+        40: aload         5\n+        42: aload_0\n+        43: getfield      #2                  // Field buffer:[C\n+        46: iconst_0\n+        47: aload_0\n+        48: getfield      #2                  // Field buffer:[C\n+        51: arraylength\n+        52: invokevirtual #13                 // Method java/io/BufferedReader.read:([CII)I\n+        55: istore_3\n+        56: iload_3\n+        57: ifgt          63\n+        60: goto          78\n+        63: aload         4\n+        65: aload_0\n+        66: getfield      #2                  // Field buffer:[C\n+        69: iconst_0\n+        70: iload_3\n+        71: invokevirtual #14                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+        74: pop\n+        75: goto          40\n+        78: aload         5\n+        80: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n+        83: goto          108\n+        86: astore        6\n+        88: aload         5\n+        90: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n+        93: goto          105\n+        96: astore        7\n+        98: aload         6\n+       100: aload         7\n+       102: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       105: aload         6\n+       107: athrow\n+       108: aload         4\n+       110: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       113: areturn\n       Exception table:\n          from    to  target type\n-            91    96    99   Class java/lang/Throwable\n-            43    81   119   Class java/lang/Throwable\n-            43    81   128   any\n-           140   145   148   Class java/lang/Throwable\n-           119   130   128   any\n+            40    78    86   Class java/lang/Throwable\n+            88    93    96   Class java/lang/Throwable\n       LineNumberTable:\n         line 87: 0\n         line 89: 14\n         line 90: 25\n-        line 89: 40\n-        line 92: 43\n-        line 93: 59\n-        line 94: 63\n-        line 96: 66\n-        line 98: 81\n-        line 89: 119\n-        line 98: 128\n-        line 100: 168\n+        line 92: 40\n+        line 93: 56\n+        line 94: 60\n+        line 96: 63\n+        line 98: 78\n+        line 89: 86\n+        line 100: 108\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           59      60     3  read   I\n-           40     128     5 input   Ljava/io/BufferedReader;\n-            0     174     0  this   Lorg/apache/commons/net/finger/FingerClient;\n-            0     174     1 longOutput   Z\n-            0     174     2 username   Ljava/lang/String;\n-          168       6     3  read   I\n-           14     160     4 result   Ljava/lang/StringBuilder;\n-      StackMapTable: number_of_entries = 11\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 43\n-          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, top, class java/lang/StringBuilder, class java/io/BufferedReader, class java/lang/Throwable ]\n-          stack = []\n+           56      30     3  read   I\n+           40      68     5 input   Ljava/io/BufferedReader;\n+            0     114     0  this   Lorg/apache/commons/net/finger/FingerClient;\n+            0     114     1 longOutput   Z\n+            0     114     2 username   Ljava/lang/String;\n+          108       6     3  read   I\n+           14     100     4 result   Ljava/lang/StringBuilder;\n+      StackMapTable: number_of_entries = 7\n+        frame_type = 254 /* append */\n+          offset_delta = 40\n+          locals = [ top, class java/lang/StringBuilder, class java/io/BufferedReader ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 22\n-          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, int, class java/lang/StringBuilder, class java/io/BufferedReader, class java/lang/Throwable ]\n+          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, int, class java/lang/StringBuilder, class java/io/BufferedReader ]\n           stack = []\n         frame_type = 14 /* same */\n-        frame_type = 81 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 7\n-          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, top, class java/lang/StringBuilder, class java/io/BufferedReader, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, top, class java/lang/StringBuilder, class java/io/BufferedReader ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, top, class java/lang/StringBuilder, class java/io/BufferedReader, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, top, class java/lang/StringBuilder, class java/io/BufferedReader, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n+        frame_type = 8 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 2\n           locals = [ class org/apache/commons/net/finger/FingerClient, int, class java/lang/String, int, class java/lang/StringBuilder ]\n           stack = []\n     Exceptions:\n       throws java.io.IOException\n \n"}]}
