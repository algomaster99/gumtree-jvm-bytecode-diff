{"diffoscope-json-version": 1, "source1": "first/TeeReader.class", "source2": "second/TeeReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,110 @@\n-  SHA-256 checksum 30e4c43a9798b994c1e0157e82fdcc0377ae61a52adadfbdcb5da5e9309e227f\n+  SHA-256 checksum 26a3b5e32d1c5422338d3cc2a47b2b08ef1c7c304944f2e6dfa521cd376d875f\n   Compiled from \"TeeReader.java\"\n public class org.apache.commons.io.input.TeeReader extends org.apache.commons.io.input.ProxyReader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #19                         // org/apache/commons/io/input/TeeReader\n-  super_class: #20                        // org/apache/commons/io/input/ProxyReader\n+  this_class: #4                          // org/apache/commons/io/input/TeeReader\n+  super_class: #10                        // org/apache/commons/io/input/ProxyReader\n   interfaces: 0, fields: 2, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Class              #61            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #19.#62        // org/apache/commons/io/input/TeeReader.\"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n-   #3 = Methodref          #20.#63        // org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n-   #4 = Fieldref           #19.#64        // org/apache/commons/io/input/TeeReader.branch:Ljava/io/Writer;\n-   #5 = Fieldref           #19.#65        // org/apache/commons/io/input/TeeReader.closeBranch:Z\n-   #6 = Methodref          #20.#66        // org/apache/commons/io/input/ProxyReader.close:()V\n-   #7 = Methodref          #67.#66        // java/io/Writer.close:()V\n-   #8 = Methodref          #20.#68        // org/apache/commons/io/input/ProxyReader.read:()I\n-   #9 = Methodref          #67.#69        // java/io/Writer.write:(I)V\n-  #10 = Methodref          #20.#70        // org/apache/commons/io/input/ProxyReader.read:([C)I\n-  #11 = Methodref          #67.#71        // java/io/Writer.write:([CII)V\n-  #12 = Methodref          #20.#72        // org/apache/commons/io/input/ProxyReader.read:([CII)I\n-  #13 = Methodref          #58.#73        // java/nio/CharBuffer.position:()I\n-  #14 = Methodref          #20.#74        // org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n-  #15 = Methodref          #58.#75        // java/nio/CharBuffer.limit:()I\n-  #16 = Methodref          #58.#76        // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n-  #17 = Methodref          #58.#77        // java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n-  #18 = Methodref          #67.#78        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #19 = Class              #79            // org/apache/commons/io/input/TeeReader\n-  #20 = Class              #80            // org/apache/commons/io/input/ProxyReader\n-  #21 = Utf8               branch\n-  #22 = Utf8               Ljava/io/Writer;\n-  #23 = Utf8               closeBranch\n-  #24 = Utf8               Z\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               LocalVariableTable\n-  #30 = Utf8               this\n-  #31 = Utf8               Lorg/apache/commons/io/input/TeeReader;\n-  #32 = Utf8               input\n-  #33 = Utf8               Ljava/io/Reader;\n-  #34 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;Z)V\n-  #35 = Utf8               close\n-  #36 = Utf8               ()V\n-  #37 = Utf8               StackMapTable\n-  #38 = Class              #81            // java/lang/Throwable\n-  #39 = Utf8               Exceptions\n-  #40 = Class              #82            // java/io/IOException\n-  #41 = Utf8               read\n-  #42 = Utf8               ()I\n-  #43 = Utf8               ch\n-  #44 = Utf8               I\n-  #45 = Utf8               ([C)I\n-  #46 = Utf8               chr\n-  #47 = Utf8               [C\n-  #48 = Utf8               n\n-  #49 = Utf8               ([CII)I\n-  #50 = Utf8               st\n-  #51 = Utf8               end\n-  #52 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #53 = Utf8               newPosition\n-  #54 = Utf8               newLimit\n-  #55 = Utf8               target\n-  #56 = Utf8               Ljava/nio/CharBuffer;\n-  #57 = Utf8               originalPosition\n-  #58 = Class              #83            // java/nio/CharBuffer\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               TeeReader.java\n-  #61 = Utf8               org/apache/commons/io/IOUtils\n-  #62 = NameAndType        #25:#34        // \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n-  #63 = NameAndType        #25:#84        // \"<init>\":(Ljava/io/Reader;)V\n-  #64 = NameAndType        #21:#22        // branch:Ljava/io/Writer;\n-  #65 = NameAndType        #23:#24        // closeBranch:Z\n-  #66 = NameAndType        #35:#36        // close:()V\n-  #67 = Class              #85            // java/io/Writer\n-  #68 = NameAndType        #41:#42        // read:()I\n-  #69 = NameAndType        #86:#87        // write:(I)V\n-  #70 = NameAndType        #41:#45        // read:([C)I\n-  #71 = NameAndType        #86:#88        // write:([CII)V\n-  #72 = NameAndType        #41:#49        // read:([CII)I\n-  #73 = NameAndType        #89:#42        // position:()I\n-  #74 = NameAndType        #41:#52        // read:(Ljava/nio/CharBuffer;)I\n-  #75 = NameAndType        #90:#42        // limit:()I\n-  #76 = NameAndType        #89:#91        // position:(I)Ljava/nio/CharBuffer;\n-  #77 = NameAndType        #90:#91        // limit:(I)Ljava/nio/CharBuffer;\n-  #78 = NameAndType        #92:#93        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #79 = Utf8               org/apache/commons/io/input/TeeReader\n-  #80 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #81 = Utf8               java/lang/Throwable\n-  #82 = Utf8               java/io/IOException\n-  #83 = Utf8               java/nio/CharBuffer\n-  #84 = Utf8               (Ljava/io/Reader;)V\n-  #85 = Utf8               java/io/Writer\n-  #86 = Utf8               write\n-  #87 = Utf8               (I)V\n-  #88 = Utf8               ([CII)V\n-  #89 = Utf8               position\n-  #90 = Utf8               limit\n-  #91 = Utf8               (I)Ljava/nio/CharBuffer;\n-  #92 = Utf8               append\n-  #93 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #1 = Class              #2             // org/apache/commons/io/IOUtils\n+   #2 = Utf8               org/apache/commons/io/IOUtils\n+   #3 = Methodref          #4.#5          // org/apache/commons/io/input/TeeReader.\"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #4 = Class              #6             // org/apache/commons/io/input/TeeReader\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #6 = Utf8               org/apache/commons/io/input/TeeReader\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;Z)V\n+   #9 = Methodref          #10.#11        // org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n+  #10 = Class              #12            // org/apache/commons/io/input/ProxyReader\n+  #11 = NameAndType        #7:#13         // \"<init>\":(Ljava/io/Reader;)V\n+  #12 = Utf8               org/apache/commons/io/input/ProxyReader\n+  #13 = Utf8               (Ljava/io/Reader;)V\n+  #14 = Fieldref           #4.#15         // org/apache/commons/io/input/TeeReader.branch:Ljava/io/Writer;\n+  #15 = NameAndType        #16:#17        // branch:Ljava/io/Writer;\n+  #16 = Utf8               branch\n+  #17 = Utf8               Ljava/io/Writer;\n+  #18 = Fieldref           #4.#19         // org/apache/commons/io/input/TeeReader.closeBranch:Z\n+  #19 = NameAndType        #20:#21        // closeBranch:Z\n+  #20 = Utf8               closeBranch\n+  #21 = Utf8               Z\n+  #22 = Methodref          #10.#23        // org/apache/commons/io/input/ProxyReader.close:()V\n+  #23 = NameAndType        #24:#25        // close:()V\n+  #24 = Utf8               close\n+  #25 = Utf8               ()V\n+  #26 = Methodref          #27.#23        // java/io/Writer.close:()V\n+  #27 = Class              #28            // java/io/Writer\n+  #28 = Utf8               java/io/Writer\n+  #29 = Methodref          #10.#30        // org/apache/commons/io/input/ProxyReader.read:()I\n+  #30 = NameAndType        #31:#32        // read:()I\n+  #31 = Utf8               read\n+  #32 = Utf8               ()I\n+  #33 = Methodref          #27.#34        // java/io/Writer.write:(I)V\n+  #34 = NameAndType        #35:#36        // write:(I)V\n+  #35 = Utf8               write\n+  #36 = Utf8               (I)V\n+  #37 = Methodref          #10.#38        // org/apache/commons/io/input/ProxyReader.read:([C)I\n+  #38 = NameAndType        #31:#39        // read:([C)I\n+  #39 = Utf8               ([C)I\n+  #40 = Methodref          #27.#41        // java/io/Writer.write:([CII)V\n+  #41 = NameAndType        #35:#42        // write:([CII)V\n+  #42 = Utf8               ([CII)V\n+  #43 = Methodref          #10.#44        // org/apache/commons/io/input/ProxyReader.read:([CII)I\n+  #44 = NameAndType        #31:#45        // read:([CII)I\n+  #45 = Utf8               ([CII)I\n+  #46 = Methodref          #47.#48        // java/nio/CharBuffer.position:()I\n+  #47 = Class              #49            // java/nio/CharBuffer\n+  #48 = NameAndType        #50:#32        // position:()I\n+  #49 = Utf8               java/nio/CharBuffer\n+  #50 = Utf8               position\n+  #51 = Methodref          #10.#52        // org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n+  #52 = NameAndType        #31:#53        // read:(Ljava/nio/CharBuffer;)I\n+  #53 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #54 = Methodref          #47.#55        // java/nio/CharBuffer.limit:()I\n+  #55 = NameAndType        #56:#32        // limit:()I\n+  #56 = Utf8               limit\n+  #57 = Methodref          #47.#58        // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+  #58 = NameAndType        #50:#59        // position:(I)Ljava/nio/CharBuffer;\n+  #59 = Utf8               (I)Ljava/nio/CharBuffer;\n+  #60 = Methodref          #47.#61        // java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n+  #61 = NameAndType        #56:#59        // limit:(I)Ljava/nio/CharBuffer;\n+  #62 = Methodref          #27.#63        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #63 = NameAndType        #64:#65        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #64 = Utf8               append\n+  #65 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #66 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)V\n+  #67 = Utf8               Code\n+  #68 = Utf8               LineNumberTable\n+  #69 = Utf8               LocalVariableTable\n+  #70 = Utf8               this\n+  #71 = Utf8               Lorg/apache/commons/io/input/TeeReader;\n+  #72 = Utf8               input\n+  #73 = Utf8               Ljava/io/Reader;\n+  #74 = Utf8               StackMapTable\n+  #75 = Class              #76            // java/lang/Throwable\n+  #76 = Utf8               java/lang/Throwable\n+  #77 = Utf8               Exceptions\n+  #78 = Class              #79            // java/io/IOException\n+  #79 = Utf8               java/io/IOException\n+  #80 = Utf8               ch\n+  #81 = Utf8               I\n+  #82 = Utf8               chr\n+  #83 = Utf8               [C\n+  #84 = Utf8               n\n+  #85 = Utf8               st\n+  #86 = Utf8               end\n+  #87 = Utf8               newPosition\n+  #88 = Utf8               newLimit\n+  #89 = Utf8               target\n+  #90 = Utf8               Ljava/nio/CharBuffer;\n+  #91 = Utf8               originalPosition\n+  #92 = Utf8               SourceFile\n+  #93 = Utf8               TeeReader.java\n {\n   private final java.io.Writer branch;\n     descriptor: Ljava/io/Writer;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean closeBranch;\n     descriptor: Z\n@@ -115,15 +115,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n+         4: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/io/Writer;Z)V\n          7: return\n       LineNumberTable:\n         line 57: 0\n         line 58: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/TeeReader;\n@@ -133,21 +133,21 @@\n   public org.apache.commons.io.input.TeeReader(java.io.Reader, java.io.Writer, boolean);\n     descriptor: (Ljava/io/Reader;Ljava/io/Writer;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #9                  // Method org/apache/commons/io/input/ProxyReader.\"<init>\":(Ljava/io/Reader;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #4                  // Field branch:Ljava/io/Writer;\n+         7: putfield      #14                 // Field branch:Ljava/io/Writer;\n         10: aload_0\n         11: iload_3\n-        12: putfield      #5                  // Field closeBranch:Z\n+        12: putfield      #18                 // Field closeBranch:Z\n         15: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 5\n         line 72: 10\n         line 73: 15\n       LocalVariableTable:\n@@ -159,29 +159,29 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method org/apache/commons/io/input/ProxyReader.close:()V\n+         1: invokespecial #22                 // Method org/apache/commons/io/input/ProxyReader.close:()V\n          4: aload_0\n-         5: getfield      #5                  // Field closeBranch:Z\n+         5: getfield      #18                 // Field closeBranch:Z\n          8: ifeq          38\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/Writer;\n-        15: invokevirtual #7                  // Method java/io/Writer.close:()V\n+        12: getfield      #14                 // Field branch:Ljava/io/Writer;\n+        15: invokevirtual #26                 // Method java/io/Writer.close:()V\n         18: goto          38\n         21: astore_1\n         22: aload_0\n-        23: getfield      #5                  // Field closeBranch:Z\n+        23: getfield      #18                 // Field closeBranch:Z\n         26: ifeq          36\n         29: aload_0\n-        30: getfield      #4                  // Field branch:Ljava/io/Writer;\n-        33: invokevirtual #7                  // Method java/io/Writer.close:()V\n+        30: getfield      #14                 // Field branch:Ljava/io/Writer;\n+        33: invokevirtual #26                 // Method java/io/Writer.close:()V\n         36: aload_1\n         37: athrow\n         38: return\n       Exception table:\n          from    to  target type\n              0     4    21   any\n       LineNumberTable:\n@@ -208,23 +208,23 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/io/input/ProxyReader.read:()I\n+         1: invokespecial #29                 // Method org/apache/commons/io/input/ProxyReader.read:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpeq     18\n         10: aload_0\n-        11: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        11: getfield      #14                 // Field branch:Ljava/io/Writer;\n         14: iload_1\n-        15: invokevirtual #9                  // Method java/io/Writer.write:(I)V\n+        15: invokevirtual #33                 // Method java/io/Writer.write:(I)V\n         18: iload_1\n         19: ireturn\n       LineNumberTable:\n         line 100: 0\n         line 101: 5\n         line 102: 10\n         line 104: 18\n@@ -242,25 +242,25 @@\n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #10                 // Method org/apache/commons/io/input/ProxyReader.read:([C)I\n+         2: invokespecial #37                 // Method org/apache/commons/io/input/ProxyReader.read:([C)I\n          5: istore_2\n          6: iload_2\n          7: iconst_m1\n          8: if_icmpeq     21\n         11: aload_0\n-        12: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        12: getfield      #14                 // Field branch:Ljava/io/Writer;\n         15: aload_1\n         16: iconst_0\n         17: iload_2\n-        18: invokevirtual #11                 // Method java/io/Writer.write:([CII)V\n+        18: invokevirtual #40                 // Method java/io/Writer.write:([CII)V\n         21: iload_2\n         22: ireturn\n       LineNumberTable:\n         line 116: 0\n         line 117: 6\n         line 118: 11\n         line 120: 21\n@@ -281,25 +281,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #12                 // Method org/apache/commons/io/input/ProxyReader.read:([CII)I\n+         4: invokespecial #43                 // Method org/apache/commons/io/input/ProxyReader.read:([CII)I\n          7: istore        4\n          9: iload         4\n         11: iconst_m1\n         12: if_icmpeq     26\n         15: aload_0\n-        16: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        16: getfield      #14                 // Field branch:Ljava/io/Writer;\n         19: aload_1\n         20: iload_2\n         21: iload         4\n-        23: invokevirtual #11                 // Method java/io/Writer.write:([CII)V\n+        23: invokevirtual #40                 // Method java/io/Writer.write:([CII)V\n         26: iload         4\n         28: ireturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 9\n         line 136: 15\n         line 138: 26\n@@ -319,53 +319,53 @@\n \n   public int read(java.nio.CharBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/CharBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_1\n-         1: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I\n+         1: invokevirtual #46                 // Method java/nio/CharBuffer.position:()I\n          4: istore_2\n          5: aload_0\n          6: aload_1\n-         7: invokespecial #14                 // Method org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n+         7: invokespecial #51                 // Method org/apache/commons/io/input/ProxyReader.read:(Ljava/nio/CharBuffer;)I\n         10: istore_3\n         11: iload_3\n         12: iconst_m1\n         13: if_icmpeq     80\n         16: aload_1\n-        17: invokevirtual #13                 // Method java/nio/CharBuffer.position:()I\n+        17: invokevirtual #46                 // Method java/nio/CharBuffer.position:()I\n         20: istore        4\n         22: aload_1\n-        23: invokevirtual #15                 // Method java/nio/CharBuffer.limit:()I\n+        23: invokevirtual #54                 // Method java/nio/CharBuffer.limit:()I\n         26: istore        5\n         28: aload_1\n         29: iload_2\n-        30: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+        30: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n         33: iload         4\n-        35: invokevirtual #17                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n+        35: invokevirtual #60                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n         38: pop\n         39: aload_0\n-        40: getfield      #4                  // Field branch:Ljava/io/Writer;\n+        40: getfield      #14                 // Field branch:Ljava/io/Writer;\n         43: aload_1\n-        44: invokevirtual #18                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        44: invokevirtual #62                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         47: pop\n         48: aload_1\n         49: iload         4\n-        51: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+        51: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n         54: iload         5\n-        56: invokevirtual #17                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n+        56: invokevirtual #60                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n         59: pop\n         60: goto          80\n         63: astore        6\n         65: aload_1\n         66: iload         4\n-        68: invokevirtual #16                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+        68: invokevirtual #57                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n         71: iload         5\n-        73: invokevirtual #17                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n+        73: invokevirtual #60                 // Method java/nio/CharBuffer.limit:(I)Ljava/nio/CharBuffer;\n         76: pop\n         77: aload         6\n         79: athrow\n         80: iload_3\n         81: ireturn\n       Exception table:\n          from    to  target type\n"}]}
