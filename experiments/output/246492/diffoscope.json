{"diffoscope-json-version": 1, "source1": "first/SuppressionsLoader.class", "source2": "second/SuppressionsLoader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,15 +2,14 @@\n package com.puppycrawl.tools.checkstyle.filters;\n \n import java.util.HashMap;\n import java.io.IOException;\n import java.util.Locale;\n import java.io.FileNotFoundException;\n import com.puppycrawl.tools.checkstyle.api.CheckstyleException;\n-import java.net.URI;\n import org.xml.sax.InputSource;\n import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n import java.util.regex.PatternSyntaxException;\n import com.puppycrawl.tools.checkstyle.api.Filter;\n import org.xml.sax.Attributes;\n import org.xml.sax.SAXException;\n import javax.xml.parsers.ParserConfigurationException;\n@@ -51,114 +50,101 @@\n     \n     private SuppressionsLoader() throws ParserConfigurationException, SAXException {\n         super((Map)createIdToResourceNameMap());\n         this.filterChain = new FilterSet();\n         this.treeWalkerFilters = new HashSet<TreeWalkerFilter>();\n     }\n     \n-    public void startElement(final String namespaceUri, final String localName, final String qName, final Attributes attributes) throws SAXException {\n-        if (\"suppress\".equals(qName)) {\n-            final SuppressFilterElement suppress = getSuppressElement(attributes);\n-            this.filterChain.addFilter((Filter)suppress);\n-        }\n-        else if (\"suppress-xpath\".equals(qName)) {\n-            final XpathFilterElement filter = getXpathFilter(attributes);\n-            this.treeWalkerFilters.add((TreeWalkerFilter)filter);\n+    public void startElement(final String s, final String s2, final String s3, final Attributes attributes) throws SAXException {\n+        if (\"suppress\".equals(s3)) {\n+            this.filterChain.addFilter((Filter)getSuppressElement(attributes));\n+        }\n+        else if (\"suppress-xpath\".equals(s3)) {\n+            this.treeWalkerFilters.add((TreeWalkerFilter)getXpathFilter(attributes));\n         }\n     }\n     \n     private static SuppressFilterElement getSuppressElement(final Attributes attributes) throws SAXException {\n-        final String checks = attributes.getValue(\"checks\");\n-        final String modId = attributes.getValue(\"id\");\n-        final String message = attributes.getValue(\"message\");\n-        if (checks == null && modId == null && message == null) {\n+        final String value = attributes.getValue(\"checks\");\n+        final String value2 = attributes.getValue(\"id\");\n+        final String value3 = attributes.getValue(\"message\");\n+        if (value == null && value2 == null && value3 == null) {\n             throw new SAXException(\"missing checks or id or message attribute\");\n         }\n-        SuppressFilterElement suppress;\n+        SuppressFilterElement suppressFilterElement;\n         try {\n-            final String files = attributes.getValue(\"files\");\n-            final String lines = attributes.getValue(\"lines\");\n-            final String columns = attributes.getValue(\"columns\");\n-            suppress = new SuppressFilterElement(files, checks, message, modId, lines, columns);\n+            suppressFilterElement = new SuppressFilterElement(attributes.getValue(\"files\"), value, value3, value2, attributes.getValue(\"lines\"), attributes.getValue(\"columns\"));\n         }\n-        catch (final PatternSyntaxException ex) {\n-            throw new SAXException(\"invalid files or checks or message format\", ex);\n+        catch (final PatternSyntaxException e) {\n+            throw new SAXException(\"invalid files or checks or message format\", e);\n         }\n-        return suppress;\n+        return suppressFilterElement;\n     }\n     \n     private static XpathFilterElement getXpathFilter(final Attributes attributes) throws SAXException {\n-        final String checks = attributes.getValue(\"checks\");\n-        final String modId = attributes.getValue(\"id\");\n-        final String message = attributes.getValue(\"message\");\n-        if (checks == null && modId == null && message == null) {\n+        final String value = attributes.getValue(\"checks\");\n+        final String value2 = attributes.getValue(\"id\");\n+        final String value3 = attributes.getValue(\"message\");\n+        if (value == null && value2 == null && value3 == null) {\n             throw new SAXException(\"missing checks or id or message attribute for suppress-xpath\");\n         }\n-        XpathFilterElement filter;\n+        XpathFilterElement xpathFilterElement;\n         try {\n-            final String files = attributes.getValue(\"files\");\n-            final String xpathQuery = attributes.getValue(\"query\");\n-            filter = new XpathFilterElement(files, checks, message, modId, xpathQuery);\n+            xpathFilterElement = new XpathFilterElement(attributes.getValue(\"files\"), value, value3, value2, attributes.getValue(\"query\"));\n         }\n-        catch (final PatternSyntaxException ex) {\n-            throw new SAXException(\"invalid files or checks or message format for suppress-xpath\", ex);\n+        catch (final PatternSyntaxException e) {\n+            throw new SAXException(\"invalid files or checks or message format for suppress-xpath\", e);\n         }\n-        return filter;\n+        return xpathFilterElement;\n     }\n     \n-    public static FilterSet loadSuppressions(final String filename) throws CheckstyleException {\n-        final URI uri = CommonUtil.getUriByFilename(filename);\n-        final InputSource source = new InputSource(uri.toString());\n-        return loadSuppressions(source, filename);\n+    public static FilterSet loadSuppressions(final String s) throws CheckstyleException {\n+        return loadSuppressions(new InputSource(CommonUtil.getUriByFilename(s).toString()), s);\n     }\n     \n-    private static FilterSet loadSuppressions(final InputSource source, final String sourceName) throws CheckstyleException {\n-        return getSuppressionLoader(source, sourceName).filterChain;\n+    private static FilterSet loadSuppressions(final InputSource inputSource, final String s) throws CheckstyleException {\n+        return getSuppressionLoader(inputSource, s).filterChain;\n     }\n     \n-    public static Set<TreeWalkerFilter> loadXpathSuppressions(final String filename) throws CheckstyleException {\n-        final URI uri = CommonUtil.getUriByFilename(filename);\n-        final InputSource source = new InputSource(uri.toString());\n-        return loadXpathSuppressions(source, filename);\n+    public static Set<TreeWalkerFilter> loadXpathSuppressions(final String s) throws CheckstyleException {\n+        return loadXpathSuppressions(new InputSource(CommonUtil.getUriByFilename(s).toString()), s);\n     }\n     \n-    private static Set<TreeWalkerFilter> loadXpathSuppressions(final InputSource source, final String sourceName) throws CheckstyleException {\n-        return getSuppressionLoader(source, sourceName).treeWalkerFilters;\n+    private static Set<TreeWalkerFilter> loadXpathSuppressions(final InputSource inputSource, final String s) throws CheckstyleException {\n+        return getSuppressionLoader(inputSource, s).treeWalkerFilters;\n     }\n     \n-    private static SuppressionsLoader getSuppressionLoader(final InputSource source, final String sourceName) throws CheckstyleException {\n+    private static SuppressionsLoader getSuppressionLoader(final InputSource inputSource, final String s) throws CheckstyleException {\n         try {\n             final SuppressionsLoader suppressionsLoader = new SuppressionsLoader();\n-            suppressionsLoader.parseInputSource(source);\n+            suppressionsLoader.parseInputSource(inputSource);\n             return suppressionsLoader;\n         }\n         catch (final FileNotFoundException ex) {\n-            throw new CheckstyleException(\"Unable to find: \" + sourceName, (Throwable)ex);\n+            throw new CheckstyleException(\"Unable to find: \" + s, (Throwable)ex);\n         }\n         catch (final ParserConfigurationException | SAXException ex2) {\n-            final String message = String.format(Locale.ROOT, \"Unable to parse %s - %s\", sourceName, ex2.getMessage());\n-            throw new CheckstyleException(message, (Throwable)ex2);\n+            throw new CheckstyleException(String.format(Locale.ROOT, \"Unable to parse %s - %s\", s, ((Throwable)ex2).getMessage()), (Throwable)ex2);\n         }\n         catch (final IOException ex3) {\n-            throw new CheckstyleException(\"Unable to read \" + sourceName, (Throwable)ex3);\n+            throw new CheckstyleException(\"Unable to read \" + s, (Throwable)ex3);\n         }\n         catch (final NumberFormatException ex4) {\n-            final String message = String.format(Locale.ROOT, \"Number format exception %s - %s\", sourceName, ex4.getMessage());\n-            throw new CheckstyleException(message, (Throwable)ex4);\n+            throw new CheckstyleException(String.format(Locale.ROOT, \"Number format exception %s - %s\", s, ex4.getMessage()), (Throwable)ex4);\n         }\n     }\n     \n     private static Map<String, String> createIdToResourceNameMap() {\n-        final Map<String, String> map = new HashMap<String, String>();\n-        map.put(\"-//Puppy Crawl//DTD Suppressions 1.0//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_0.dtd\");\n-        map.put(\"-//Puppy Crawl//DTD Suppressions 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1.dtd\");\n-        map.put(\"-//Puppy Crawl//DTD Suppressions 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2.dtd\");\n-        map.put(\"-//Puppy Crawl//DTD Suppressions Xpath Experimental 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1_xpath_experimental.dtd\");\n-        map.put(\"-//Puppy Crawl//DTD Suppressions Xpath Experimental 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2_xpath_experimental.dtd\");\n-        map.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.0//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_0.dtd\");\n-        map.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1.dtd\");\n-        map.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2.dtd\");\n-        map.put(\"-//Checkstyle//DTD SuppressionXpathFilter Experimental Configuration 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1_xpath_experimental.dtd\");\n-        map.put(\"-//Checkstyle//DTD SuppressionXpathFilter Experimental Configuration 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2_xpath_experimental.dtd\");\n-        return map;\n+        final HashMap hashMap = new HashMap();\n+        hashMap.put(\"-//Puppy Crawl//DTD Suppressions 1.0//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_0.dtd\");\n+        hashMap.put(\"-//Puppy Crawl//DTD Suppressions 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1.dtd\");\n+        hashMap.put(\"-//Puppy Crawl//DTD Suppressions 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2.dtd\");\n+        hashMap.put(\"-//Puppy Crawl//DTD Suppressions Xpath Experimental 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1_xpath_experimental.dtd\");\n+        hashMap.put(\"-//Puppy Crawl//DTD Suppressions Xpath Experimental 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2_xpath_experimental.dtd\");\n+        hashMap.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.0//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_0.dtd\");\n+        hashMap.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1.dtd\");\n+        hashMap.put(\"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2.dtd\");\n+        hashMap.put(\"-//Checkstyle//DTD SuppressionXpathFilter Experimental Configuration 1.1//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_1_xpath_experimental.dtd\");\n+        hashMap.put(\"-//Checkstyle//DTD SuppressionXpathFilter Experimental Configuration 1.2//EN\", \"com/puppycrawl/tools/checkstyle/suppressions_1_2_xpath_experimental.dtd\");\n+        return hashMap;\n     }\n }\n"}]}
