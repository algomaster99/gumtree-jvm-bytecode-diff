{"diffoscope-json-version": 1, "source1": "first/DataConfiguration.class", "source2": "second/DataConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -42,444 +42,444 @@\n         return this.configuration;\n     }\n     \n     public ConversionHandler getConversionHandler() {\n         return this.dataConversionHandler;\n     }\n     \n-    protected Object getPropertyInternal(final String key) {\n-        return this.configuration.getProperty(key);\n+    protected Object getPropertyInternal(final String s) {\n+        return this.configuration.getProperty(s);\n     }\n     \n-    protected void addPropertyInternal(final String key, final Object obj) {\n-        this.configuration.addProperty(key, obj);\n+    protected void addPropertyInternal(final String s, final Object o) {\n+        this.configuration.addProperty(s, o);\n     }\n     \n-    protected void addPropertyDirect(final String key, final Object value) {\n+    protected void addPropertyDirect(final String s, final Object o) {\n         if (this.configuration instanceof AbstractConfiguration) {\n-            ((AbstractConfiguration)this.configuration).addPropertyDirect(key, value);\n+            ((AbstractConfiguration)this.configuration).addPropertyDirect(s, o);\n         }\n         else {\n-            this.configuration.addProperty(key, value);\n+            this.configuration.addProperty(s, o);\n         }\n     }\n     \n     protected boolean isEmptyInternal() {\n         return this.configuration.isEmpty();\n     }\n     \n-    protected boolean containsKeyInternal(final String key) {\n-        return this.configuration.containsKey(key);\n+    protected boolean containsKeyInternal(final String s) {\n+        return this.configuration.containsKey(s);\n     }\n     \n-    protected void clearPropertyDirect(final String key) {\n-        this.configuration.clearProperty(key);\n+    protected void clearPropertyDirect(final String s) {\n+        this.configuration.clearProperty(s);\n     }\n     \n-    protected void setPropertyInternal(final String key, final Object value) {\n-        this.configuration.setProperty(key, value);\n+    protected void setPropertyInternal(final String s, final Object o) {\n+        this.configuration.setProperty(s, o);\n     }\n     \n     protected Iterator<String> getKeysInternal() {\n         return this.configuration.getKeys();\n     }\n     \n-    public List<Boolean> getBooleanList(final String key) {\n-        return this.getBooleanList(key, new ArrayList<Boolean>());\n+    public List<Boolean> getBooleanList(final String s) {\n+        return this.getBooleanList(s, new ArrayList<Boolean>());\n     }\n     \n-    public List<Boolean> getBooleanList(final String key, final List<Boolean> defaultValue) {\n-        return this.getList((Class)Boolean.class, key, (List)defaultValue);\n+    public List<Boolean> getBooleanList(final String s, final List<Boolean> list) {\n+        return this.getList((Class)Boolean.class, s, (List)list);\n     }\n     \n-    public boolean[] getBooleanArray(final String key) {\n-        return (boolean[])this.getArray((Class)Boolean.TYPE, key);\n+    public boolean[] getBooleanArray(final String s) {\n+        return (boolean[])this.getArray((Class)Boolean.TYPE, s);\n     }\n     \n-    public boolean[] getBooleanArray(final String key, final boolean... defaultValue) {\n-        return (boolean[])this.get((Class)boolean[].class, key, (Object)defaultValue);\n+    public boolean[] getBooleanArray(final String s, final boolean... array) {\n+        return (boolean[])this.get((Class)boolean[].class, s, (Object)array);\n     }\n     \n-    public List<Byte> getByteList(final String key) {\n-        return this.getByteList(key, new ArrayList<Byte>());\n+    public List<Byte> getByteList(final String s) {\n+        return this.getByteList(s, new ArrayList<Byte>());\n     }\n     \n-    public List<Byte> getByteList(final String key, final List<Byte> defaultValue) {\n-        return this.getList((Class)Byte.class, key, (List)defaultValue);\n+    public List<Byte> getByteList(final String s, final List<Byte> list) {\n+        return this.getList((Class)Byte.class, s, (List)list);\n     }\n     \n-    public byte[] getByteArray(final String key) {\n-        return this.getByteArray(key, ArrayUtils.EMPTY_BYTE_ARRAY);\n+    public byte[] getByteArray(final String s) {\n+        return this.getByteArray(s, ArrayUtils.EMPTY_BYTE_ARRAY);\n     }\n     \n-    public byte[] getByteArray(final String key, final byte... defaultValue) {\n-        return (byte[])this.get((Class)byte[].class, key, (Object)defaultValue);\n+    public byte[] getByteArray(final String s, final byte... array) {\n+        return (byte[])this.get((Class)byte[].class, s, (Object)array);\n     }\n     \n-    public List<Short> getShortList(final String key) {\n-        return this.getShortList(key, new ArrayList<Short>());\n+    public List<Short> getShortList(final String s) {\n+        return this.getShortList(s, new ArrayList<Short>());\n     }\n     \n-    public List<Short> getShortList(final String key, final List<Short> defaultValue) {\n-        return this.getList((Class)Short.class, key, (List)defaultValue);\n+    public List<Short> getShortList(final String s, final List<Short> list) {\n+        return this.getList((Class)Short.class, s, (List)list);\n     }\n     \n-    public short[] getShortArray(final String key) {\n-        return this.getShortArray(key, ArrayUtils.EMPTY_SHORT_ARRAY);\n+    public short[] getShortArray(final String s) {\n+        return this.getShortArray(s, ArrayUtils.EMPTY_SHORT_ARRAY);\n     }\n     \n-    public short[] getShortArray(final String key, final short... defaultValue) {\n-        return (short[])this.get((Class)short[].class, key, (Object)defaultValue);\n+    public short[] getShortArray(final String s, final short... array) {\n+        return (short[])this.get((Class)short[].class, s, (Object)array);\n     }\n     \n-    public List<Integer> getIntegerList(final String key) {\n-        return this.getIntegerList(key, new ArrayList<Integer>());\n+    public List<Integer> getIntegerList(final String s) {\n+        return this.getIntegerList(s, new ArrayList<Integer>());\n     }\n     \n-    public List<Integer> getIntegerList(final String key, final List<Integer> defaultValue) {\n-        return this.getList((Class)Integer.class, key, (List)defaultValue);\n+    public List<Integer> getIntegerList(final String s, final List<Integer> list) {\n+        return this.getList((Class)Integer.class, s, (List)list);\n     }\n     \n-    public int[] getIntArray(final String key) {\n-        return this.getIntArray(key, ArrayUtils.EMPTY_INT_ARRAY);\n+    public int[] getIntArray(final String s) {\n+        return this.getIntArray(s, ArrayUtils.EMPTY_INT_ARRAY);\n     }\n     \n-    public int[] getIntArray(final String key, final int... defaultValue) {\n-        return (int[])this.get((Class)int[].class, key, (Object)defaultValue);\n+    public int[] getIntArray(final String s, final int... array) {\n+        return (int[])this.get((Class)int[].class, s, (Object)array);\n     }\n     \n-    public List<Long> getLongList(final String key) {\n-        return this.getLongList(key, new ArrayList<Long>());\n+    public List<Long> getLongList(final String s) {\n+        return this.getLongList(s, new ArrayList<Long>());\n     }\n     \n-    public List<Long> getLongList(final String key, final List<Long> defaultValue) {\n-        return this.getList((Class)Long.class, key, (List)defaultValue);\n+    public List<Long> getLongList(final String s, final List<Long> list) {\n+        return this.getList((Class)Long.class, s, (List)list);\n     }\n     \n-    public long[] getLongArray(final String key) {\n-        return this.getLongArray(key, ArrayUtils.EMPTY_LONG_ARRAY);\n+    public long[] getLongArray(final String s) {\n+        return this.getLongArray(s, ArrayUtils.EMPTY_LONG_ARRAY);\n     }\n     \n-    public long[] getLongArray(final String key, final long... defaultValue) {\n-        return (long[])this.get((Class)long[].class, key, (Object)defaultValue);\n+    public long[] getLongArray(final String s, final long... array) {\n+        return (long[])this.get((Class)long[].class, s, (Object)array);\n     }\n     \n-    public List<Float> getFloatList(final String key) {\n-        return this.getFloatList(key, new ArrayList<Float>());\n+    public List<Float> getFloatList(final String s) {\n+        return this.getFloatList(s, new ArrayList<Float>());\n     }\n     \n-    public List<Float> getFloatList(final String key, final List<Float> defaultValue) {\n-        return this.getList((Class)Float.class, key, (List)defaultValue);\n+    public List<Float> getFloatList(final String s, final List<Float> list) {\n+        return this.getList((Class)Float.class, s, (List)list);\n     }\n     \n-    public float[] getFloatArray(final String key) {\n-        return this.getFloatArray(key, ArrayUtils.EMPTY_FLOAT_ARRAY);\n+    public float[] getFloatArray(final String s) {\n+        return this.getFloatArray(s, ArrayUtils.EMPTY_FLOAT_ARRAY);\n     }\n     \n-    public float[] getFloatArray(final String key, final float... defaultValue) {\n-        return (float[])this.get((Class)float[].class, key, (Object)defaultValue);\n+    public float[] getFloatArray(final String s, final float... array) {\n+        return (float[])this.get((Class)float[].class, s, (Object)array);\n     }\n     \n-    public List<Double> getDoubleList(final String key) {\n-        return this.getDoubleList(key, new ArrayList<Double>());\n+    public List<Double> getDoubleList(final String s) {\n+        return this.getDoubleList(s, new ArrayList<Double>());\n     }\n     \n-    public List<Double> getDoubleList(final String key, final List<Double> defaultValue) {\n-        return this.getList((Class)Double.class, key, (List)defaultValue);\n+    public List<Double> getDoubleList(final String s, final List<Double> list) {\n+        return this.getList((Class)Double.class, s, (List)list);\n     }\n     \n-    public double[] getDoubleArray(final String key) {\n-        return this.getDoubleArray(key, ArrayUtils.EMPTY_DOUBLE_ARRAY);\n+    public double[] getDoubleArray(final String s) {\n+        return this.getDoubleArray(s, ArrayUtils.EMPTY_DOUBLE_ARRAY);\n     }\n     \n-    public double[] getDoubleArray(final String key, final double... defaultValue) {\n-        return (double[])this.get((Class)double[].class, key, (Object)defaultValue);\n+    public double[] getDoubleArray(final String s, final double... array) {\n+        return (double[])this.get((Class)double[].class, s, (Object)array);\n     }\n     \n-    public List<BigInteger> getBigIntegerList(final String key) {\n-        return this.getBigIntegerList(key, new ArrayList<BigInteger>());\n+    public List<BigInteger> getBigIntegerList(final String s) {\n+        return this.getBigIntegerList(s, new ArrayList<BigInteger>());\n     }\n     \n-    public List<BigInteger> getBigIntegerList(final String key, final List<BigInteger> defaultValue) {\n-        return this.getList((Class)BigInteger.class, key, (List)defaultValue);\n+    public List<BigInteger> getBigIntegerList(final String s, final List<BigInteger> list) {\n+        return this.getList((Class)BigInteger.class, s, (List)list);\n     }\n     \n-    public BigInteger[] getBigIntegerArray(final String key) {\n-        return this.getBigIntegerArray(key, DataConfiguration.EMPTY_BIG_INTEGER_ARRAY);\n+    public BigInteger[] getBigIntegerArray(final String s) {\n+        return this.getBigIntegerArray(s, DataConfiguration.EMPTY_BIG_INTEGER_ARRAY);\n     }\n     \n-    public BigInteger[] getBigIntegerArray(final String key, final BigInteger... defaultValue) {\n-        return (BigInteger[])this.get((Class)BigInteger[].class, key, (Object)defaultValue);\n+    public BigInteger[] getBigIntegerArray(final String s, final BigInteger... array) {\n+        return (BigInteger[])this.get((Class)BigInteger[].class, s, (Object)array);\n     }\n     \n-    public List<BigDecimal> getBigDecimalList(final String key) {\n-        return this.getBigDecimalList(key, new ArrayList<BigDecimal>());\n+    public List<BigDecimal> getBigDecimalList(final String s) {\n+        return this.getBigDecimalList(s, new ArrayList<BigDecimal>());\n     }\n     \n-    public List<BigDecimal> getBigDecimalList(final String key, final List<BigDecimal> defaultValue) {\n-        return this.getList((Class)BigDecimal.class, key, (List)defaultValue);\n+    public List<BigDecimal> getBigDecimalList(final String s, final List<BigDecimal> list) {\n+        return this.getList((Class)BigDecimal.class, s, (List)list);\n     }\n     \n-    public BigDecimal[] getBigDecimalArray(final String key) {\n-        return this.getBigDecimalArray(key, DataConfiguration.EMPTY_BIG_DECIMAL_ARRAY);\n+    public BigDecimal[] getBigDecimalArray(final String s) {\n+        return this.getBigDecimalArray(s, DataConfiguration.EMPTY_BIG_DECIMAL_ARRAY);\n     }\n     \n-    public BigDecimal[] getBigDecimalArray(final String key, final BigDecimal... defaultValue) {\n-        return (BigDecimal[])this.get((Class)BigDecimal[].class, key, (Object)defaultValue);\n+    public BigDecimal[] getBigDecimalArray(final String s, final BigDecimal... array) {\n+        return (BigDecimal[])this.get((Class)BigDecimal[].class, s, (Object)array);\n     }\n     \n-    public URI getURI(final String key) {\n-        return (URI)this.get((Class)URI.class, key);\n+    public URI getURI(final String s) {\n+        return (URI)this.get((Class)URI.class, s);\n     }\n     \n-    public URI getURI(final String key, final URI defaultValue) {\n-        return (URI)this.get((Class)URI.class, key, (Object)defaultValue);\n+    public URI getURI(final String s, final URI uri) {\n+        return (URI)this.get((Class)URI.class, s, (Object)uri);\n     }\n     \n-    public URI[] getURIArray(final String key) {\n-        return this.getURIArray(key, DataConfiguration.EMPTY_URI_ARRAY);\n+    public URI[] getURIArray(final String s) {\n+        return this.getURIArray(s, DataConfiguration.EMPTY_URI_ARRAY);\n     }\n     \n-    public URI[] getURIArray(final String key, final URI... defaultValue) {\n-        return (URI[])this.get((Class)URI[].class, key, (Object)defaultValue);\n+    public URI[] getURIArray(final String s, final URI... array) {\n+        return (URI[])this.get((Class)URI[].class, s, (Object)array);\n     }\n     \n-    public List<URI> getURIList(final String key) {\n-        return this.getURIList(key, new ArrayList<URI>());\n+    public List<URI> getURIList(final String s) {\n+        return this.getURIList(s, new ArrayList<URI>());\n     }\n     \n-    public List<URI> getURIList(final String key, final List<URI> defaultValue) {\n-        return this.getList((Class)URI.class, key, (List)defaultValue);\n+    public List<URI> getURIList(final String s, final List<URI> list) {\n+        return this.getList((Class)URI.class, s, (List)list);\n     }\n     \n-    public URL getURL(final String key) {\n-        return (URL)this.get((Class)URL.class, key);\n+    public URL getURL(final String s) {\n+        return (URL)this.get((Class)URL.class, s);\n     }\n     \n-    public URL getURL(final String key, final URL defaultValue) {\n-        return (URL)this.get((Class)URL.class, key, (Object)defaultValue);\n+    public URL getURL(final String s, final URL url) {\n+        return (URL)this.get((Class)URL.class, s, (Object)url);\n     }\n     \n-    public List<URL> getURLList(final String key) {\n-        return this.getURLList(key, new ArrayList<URL>());\n+    public List<URL> getURLList(final String s) {\n+        return this.getURLList(s, new ArrayList<URL>());\n     }\n     \n-    public List<URL> getURLList(final String key, final List<URL> defaultValue) {\n-        return this.getList((Class)URL.class, key, (List)defaultValue);\n+    public List<URL> getURLList(final String s, final List<URL> list) {\n+        return this.getList((Class)URL.class, s, (List)list);\n     }\n     \n-    public URL[] getURLArray(final String key) {\n-        return this.getURLArray(key, DataConfiguration.EMPTY_URL_ARRAY);\n+    public URL[] getURLArray(final String s) {\n+        return this.getURLArray(s, DataConfiguration.EMPTY_URL_ARRAY);\n     }\n     \n-    public URL[] getURLArray(final String key, final URL... defaultValue) {\n-        return (URL[])this.get((Class)URL[].class, key, (Object)defaultValue);\n+    public URL[] getURLArray(final String s, final URL... array) {\n+        return (URL[])this.get((Class)URL[].class, s, (Object)array);\n     }\n     \n-    public Date getDate(final String key) {\n-        return (Date)this.get((Class)Date.class, key);\n+    public Date getDate(final String s) {\n+        return (Date)this.get((Class)Date.class, s);\n     }\n     \n-    public Date getDate(final String key, final String format) {\n-        final Date value = this.getDate(key, null, format);\n-        if (value != null) {\n-            return value;\n+    public Date getDate(final String str, final String s) {\n+        final Date date = this.getDate(str, null, s);\n+        if (date != null) {\n+            return date;\n         }\n         if (this.isThrowExceptionOnMissing()) {\n-            throw new NoSuchElementException('\\'' + key + \"' doesn't map to an existing object\");\n+            throw new NoSuchElementException('\\'' + str + \"' doesn't map to an existing object\");\n         }\n         return null;\n     }\n     \n-    public Date getDate(final String key, final Date defaultValue) {\n-        return this.getDate(key, defaultValue, null);\n+    public Date getDate(final String s, final Date date) {\n+        return this.getDate(s, date, null);\n     }\n     \n-    public Date getDate(final String key, final Date defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public Date getDate(final String s, final Date date, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return (Date)this.get((Class)Date.class, key, (Object)defaultValue);\n+            return (Date)this.get((Class)Date.class, s, (Object)date);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n-    public List<Date> getDateList(final String key) {\n-        return this.getDateList(key, new ArrayList<Date>());\n+    public List<Date> getDateList(final String s) {\n+        return this.getDateList(s, new ArrayList<Date>());\n     }\n     \n-    public List<Date> getDateList(final String key, final String format) {\n-        return this.getDateList(key, new ArrayList<Date>(), format);\n+    public List<Date> getDateList(final String s, final String s2) {\n+        return this.getDateList(s, new ArrayList<Date>(), s2);\n     }\n     \n-    public List<Date> getDateList(final String key, final List<Date> defaultValue) {\n-        return this.getDateList(key, defaultValue, null);\n+    public List<Date> getDateList(final String s, final List<Date> list) {\n+        return this.getDateList(s, list, null);\n     }\n     \n-    public List<Date> getDateList(final String key, final List<Date> defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public List<Date> getDateList(final String s, final List<Date> list, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return this.getList((Class)Date.class, key, (List)defaultValue);\n+            return this.getList((Class)Date.class, s, (List)list);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n-    public Date[] getDateArray(final String key) {\n-        return this.getDateArray(key, DataConfiguration.EMPTY_DATE_ARRAY);\n+    public Date[] getDateArray(final String s) {\n+        return this.getDateArray(s, DataConfiguration.EMPTY_DATE_ARRAY);\n     }\n     \n-    public Date[] getDateArray(final String key, final String format) {\n-        return this.getDateArray(key, DataConfiguration.EMPTY_DATE_ARRAY, format);\n+    public Date[] getDateArray(final String s, final String s2) {\n+        return this.getDateArray(s, DataConfiguration.EMPTY_DATE_ARRAY, s2);\n     }\n     \n-    public Date[] getDateArray(final String key, final Date... defaultValue) {\n-        return this.getDateArray(key, defaultValue, null);\n+    public Date[] getDateArray(final String s, final Date... array) {\n+        return this.getDateArray(s, array, null);\n     }\n     \n-    public Date[] getDateArray(final String key, final Date[] defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public Date[] getDateArray(final String s, final Date[] array, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return (Date[])this.get((Class)Date[].class, key, (Object)defaultValue);\n+            return (Date[])this.get((Class)Date[].class, s, (Object)array);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n-    public Calendar getCalendar(final String key) {\n-        return (Calendar)this.get((Class)Calendar.class, key);\n+    public Calendar getCalendar(final String s) {\n+        return (Calendar)this.get((Class)Calendar.class, s);\n     }\n     \n-    public Calendar getCalendar(final String key, final String format) {\n-        final Calendar value = this.getCalendar(key, null, format);\n-        if (value != null) {\n-            return value;\n+    public Calendar getCalendar(final String str, final String s) {\n+        final Calendar calendar = this.getCalendar(str, null, s);\n+        if (calendar != null) {\n+            return calendar;\n         }\n         if (this.isThrowExceptionOnMissing()) {\n-            throw new NoSuchElementException('\\'' + key + \"' doesn't map to an existing object\");\n+            throw new NoSuchElementException('\\'' + str + \"' doesn't map to an existing object\");\n         }\n         return null;\n     }\n     \n-    public Calendar getCalendar(final String key, final Calendar defaultValue) {\n-        return this.getCalendar(key, defaultValue, null);\n+    public Calendar getCalendar(final String s, final Calendar calendar) {\n+        return this.getCalendar(s, calendar, null);\n     }\n     \n-    public Calendar getCalendar(final String key, final Calendar defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public Calendar getCalendar(final String s, final Calendar calendar, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return (Calendar)this.get((Class)Calendar.class, key, (Object)defaultValue);\n+            return (Calendar)this.get((Class)Calendar.class, s, (Object)calendar);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n-    public List<Calendar> getCalendarList(final String key) {\n-        return this.getCalendarList(key, new ArrayList<Calendar>());\n+    public List<Calendar> getCalendarList(final String s) {\n+        return this.getCalendarList(s, new ArrayList<Calendar>());\n     }\n     \n-    public List<Calendar> getCalendarList(final String key, final String format) {\n-        return this.getCalendarList(key, new ArrayList<Calendar>(), format);\n+    public List<Calendar> getCalendarList(final String s, final String s2) {\n+        return this.getCalendarList(s, new ArrayList<Calendar>(), s2);\n     }\n     \n-    public List<Calendar> getCalendarList(final String key, final List<Calendar> defaultValue) {\n-        return this.getCalendarList(key, defaultValue, null);\n+    public List<Calendar> getCalendarList(final String s, final List<Calendar> list) {\n+        return this.getCalendarList(s, list, null);\n     }\n     \n-    public List<Calendar> getCalendarList(final String key, final List<Calendar> defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public List<Calendar> getCalendarList(final String s, final List<Calendar> list, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return this.getList((Class)Calendar.class, key, (List)defaultValue);\n+            return this.getList((Class)Calendar.class, s, (List)list);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n-    public Calendar[] getCalendarArray(final String key) {\n-        return this.getCalendarArray(key, DataConfiguration.EMPTY_CALENDARD_ARRAY);\n+    public Calendar[] getCalendarArray(final String s) {\n+        return this.getCalendarArray(s, DataConfiguration.EMPTY_CALENDARD_ARRAY);\n     }\n     \n-    public Calendar[] getCalendarArray(final String key, final String format) {\n-        return this.getCalendarArray(key, DataConfiguration.EMPTY_CALENDARD_ARRAY, format);\n+    public Calendar[] getCalendarArray(final String s, final String s2) {\n+        return this.getCalendarArray(s, DataConfiguration.EMPTY_CALENDARD_ARRAY, s2);\n     }\n     \n-    public Calendar[] getCalendarArray(final String key, final Calendar... defaultValue) {\n-        return this.getCalendarArray(key, defaultValue, null);\n+    public Calendar[] getCalendarArray(final String s, final Calendar... array) {\n+        return this.getCalendarArray(s, array, null);\n     }\n     \n-    public Calendar[] getCalendarArray(final String key, final Calendar[] defaultValue, final String format) {\n-        DataConfiguration.TEMP_DATE_FORMAT.set(format);\n+    public Calendar[] getCalendarArray(final String s, final Calendar[] array, final String value) {\n+        DataConfiguration.TEMP_DATE_FORMAT.set(value);\n         try {\n-            return (Calendar[])this.get((Class)Calendar[].class, key, (Object)defaultValue);\n+            return (Calendar[])this.get((Class)Calendar[].class, s, (Object)array);\n         }\n         finally {\n             DataConfiguration.TEMP_DATE_FORMAT.remove();\n         }\n     }\n     \n     private String getDefaultDateFormat() {\n         return this.getString(\"org.apache.commons.configuration.format.date\", \"yyyy-MM-dd HH:mm:ss\");\n     }\n     \n-    public Locale getLocale(final String key) {\n-        return (Locale)this.get((Class)Locale.class, key);\n+    public Locale getLocale(final String s) {\n+        return (Locale)this.get((Class)Locale.class, s);\n     }\n     \n-    public Locale getLocale(final String key, final Locale defaultValue) {\n-        return (Locale)this.get((Class)Locale.class, key, (Object)defaultValue);\n+    public Locale getLocale(final String s, final Locale locale) {\n+        return (Locale)this.get((Class)Locale.class, s, (Object)locale);\n     }\n     \n-    public List<Locale> getLocaleList(final String key) {\n-        return this.getLocaleList(key, new ArrayList<Locale>());\n+    public List<Locale> getLocaleList(final String s) {\n+        return this.getLocaleList(s, new ArrayList<Locale>());\n     }\n     \n-    public List<Locale> getLocaleList(final String key, final List<Locale> defaultValue) {\n-        return this.getList((Class)Locale.class, key, (List)defaultValue);\n+    public List<Locale> getLocaleList(final String s, final List<Locale> list) {\n+        return this.getList((Class)Locale.class, s, (List)list);\n     }\n     \n-    public Locale[] getLocaleArray(final String key) {\n-        return this.getLocaleArray(key, DataConfiguration.EMPTY_LOCALE_ARRAY);\n+    public Locale[] getLocaleArray(final String s) {\n+        return this.getLocaleArray(s, DataConfiguration.EMPTY_LOCALE_ARRAY);\n     }\n     \n-    public Locale[] getLocaleArray(final String key, final Locale... defaultValue) {\n-        return (Locale[])this.get((Class)Locale[].class, key, (Object)defaultValue);\n+    public Locale[] getLocaleArray(final String s, final Locale... array) {\n+        return (Locale[])this.get((Class)Locale[].class, s, (Object)array);\n     }\n     \n-    public Color getColor(final String key) {\n-        return (Color)this.get((Class)Color.class, key);\n+    public Color getColor(final String s) {\n+        return (Color)this.get((Class)Color.class, s);\n     }\n     \n-    public Color getColor(final String key, final Color defaultValue) {\n-        return (Color)this.get((Class)Color.class, key, (Object)defaultValue);\n+    public Color getColor(final String s, final Color color) {\n+        return (Color)this.get((Class)Color.class, s, (Object)color);\n     }\n     \n-    public List<Color> getColorList(final String key) {\n-        return this.getColorList(key, new ArrayList<Color>());\n+    public List<Color> getColorList(final String s) {\n+        return this.getColorList(s, new ArrayList<Color>());\n     }\n     \n-    public List<Color> getColorList(final String key, final List<Color> defaultValue) {\n-        return this.getList((Class)Color.class, key, (List)defaultValue);\n+    public List<Color> getColorList(final String s, final List<Color> list) {\n+        return this.getList((Class)Color.class, s, (List)list);\n     }\n     \n-    public Color[] getColorArray(final String key) {\n-        return this.getColorArray(key, DataConfiguration.EMPTY_COLOR_ARRAY);\n+    public Color[] getColorArray(final String s) {\n+        return this.getColorArray(s, DataConfiguration.EMPTY_COLOR_ARRAY);\n     }\n     \n-    public Color[] getColorArray(final String key, final Color... defaultValue) {\n-        return (Color[])this.get((Class)Color[].class, key, (Object)defaultValue);\n+    public Color[] getColorArray(final String s, final Color... array) {\n+        return (Color[])this.get((Class)Color[].class, s, (Object)array);\n     }\n     \n     private DefaultConversionHandler getOriginalConversionHandler() {\n-        final ConversionHandler handler = super.getConversionHandler();\n-        return (handler instanceof DefaultConversionHandler) ? handler : null;\n+        final ConversionHandler conversionHandler = super.getConversionHandler();\n+        return (conversionHandler instanceof DefaultConversionHandler) ? conversionHandler : null;\n     }\n     \n     static {\n         EMPTY_URL_ARRAY = new URL[0];\n         EMPTY_URI_ARRAY = new URI[0];\n         EMPTY_LOCALE_ARRAY = new Locale[0];\n         EMPTY_DATE_ARRAY = new Date[0];\n"}]}
