{"diffoscope-json-version": 1, "source1": "first/JsrInstruction.class", "source2": "second/JsrInstruction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,72 +1,72 @@\n-  SHA-256 checksum ac9f0be08395e7f87d6917a2beb9e06790f402539cddb0bd198775b33fa2ce49\n+  SHA-256 checksum e4d1fc01ed0c74d7ff52257b07da62a9b024894d867be33cd062bd538f382276\n   Compiled from \"JsrInstruction.java\"\n public abstract class org.apache.bcel.generic.JsrInstruction extends org.apache.bcel.generic.BranchInstruction implements org.apache.bcel.generic.UnconditionalBranch,org.apache.bcel.generic.TypedInstruction,org.apache.bcel.generic.StackProducer\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #13                         // org/apache/bcel/generic/JsrInstruction\n-  super_class: #14                        // org/apache/bcel/generic/BranchInstruction\n+  super_class: #2                         // org/apache/bcel/generic/BranchInstruction\n   interfaces: 3, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#31        // org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n-   #2 = Methodref          #14.#32        // org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n-   #3 = Class              #33            // org/apache/bcel/generic/ReturnaddressType\n-   #4 = Methodref          #13.#34        // org/apache/bcel/generic/JsrInstruction.physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #5 = Methodref          #3.#35         // org/apache/bcel/generic/ReturnaddressType.\"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n-   #6 = Methodref          #14.#36        // org/apache/bcel/generic/BranchInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #7 = Methodref          #28.#37        // org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #8 = Methodref          #28.#38        // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-   #9 = Methodref          #28.#39        // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #10 = Class              #40            // java/lang/IllegalStateException\n-  #11 = String             #41            // physicalSuccessor() called on a shared JsrInstruction.\n-  #12 = Methodref          #10.#42        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #13 = Class              #43            // org/apache/bcel/generic/JsrInstruction\n-  #14 = Class              #44            // org/apache/bcel/generic/BranchInstruction\n-  #15 = Class              #45            // org/apache/bcel/generic/UnconditionalBranch\n-  #16 = Class              #46            // org/apache/bcel/generic/TypedInstruction\n-  #17 = Class              #47            // org/apache/bcel/generic/StackProducer\n-  #18 = Utf8               <init>\n-  #19 = Utf8               (SLorg/apache/bcel/generic/InstructionHandle;)V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               ()V\n-  #23 = Utf8               getType\n-  #24 = Utf8               (Lorg/apache/bcel/generic/ConstantPoolGen;)Lorg/apache/bcel/generic/Type;\n-  #25 = Utf8               physicalSuccessor\n-  #26 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n-  #27 = Utf8               StackMapTable\n-  #28 = Class              #48            // org/apache/bcel/generic/InstructionHandle\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               JsrInstruction.java\n-  #31 = NameAndType        #18:#19        // \"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n-  #32 = NameAndType        #18:#22        // \"<init>\":()V\n-  #33 = Utf8               org/apache/bcel/generic/ReturnaddressType\n-  #34 = NameAndType        #25:#26        // physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #35 = NameAndType        #18:#49        // \"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n-  #36 = NameAndType        #50:#26        // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #37 = NameAndType        #51:#26        // getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #38 = NameAndType        #52:#53        // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-  #39 = NameAndType        #54:#26        // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #40 = Utf8               java/lang/IllegalStateException\n-  #41 = Utf8               physicalSuccessor() called on a shared JsrInstruction.\n-  #42 = NameAndType        #18:#55        // \"<init>\":(Ljava/lang/String;)V\n-  #43 = Utf8               org/apache/bcel/generic/JsrInstruction\n-  #44 = Utf8               org/apache/bcel/generic/BranchInstruction\n-  #45 = Utf8               org/apache/bcel/generic/UnconditionalBranch\n+   #1 = Methodref          #2.#3          // org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n+   #2 = Class              #4             // org/apache/bcel/generic/BranchInstruction\n+   #3 = NameAndType        #5:#6          // \"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n+   #4 = Utf8               org/apache/bcel/generic/BranchInstruction\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (SLorg/apache/bcel/generic/InstructionHandle;)V\n+   #7 = Methodref          #2.#8          // org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n+   #8 = NameAndType        #5:#9          // \"<init>\":()V\n+   #9 = Utf8               ()V\n+  #10 = Class              #11            // org/apache/bcel/generic/ReturnaddressType\n+  #11 = Utf8               org/apache/bcel/generic/ReturnaddressType\n+  #12 = Methodref          #13.#14        // org/apache/bcel/generic/JsrInstruction.physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #13 = Class              #15            // org/apache/bcel/generic/JsrInstruction\n+  #14 = NameAndType        #16:#17        // physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #15 = Utf8               org/apache/bcel/generic/JsrInstruction\n+  #16 = Utf8               physicalSuccessor\n+  #17 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n+  #18 = Methodref          #10.#19        // org/apache/bcel/generic/ReturnaddressType.\"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n+  #19 = NameAndType        #5:#20         // \"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n+  #20 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)V\n+  #21 = Methodref          #2.#22         // org/apache/bcel/generic/BranchInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #22 = NameAndType        #23:#17        // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #23 = Utf8               getTarget\n+  #24 = Methodref          #25.#26        // org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #25 = Class              #27            // org/apache/bcel/generic/InstructionHandle\n+  #26 = NameAndType        #28:#17        // getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #27 = Utf8               org/apache/bcel/generic/InstructionHandle\n+  #28 = Utf8               getPrev\n+  #29 = Methodref          #25.#30        // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+  #30 = NameAndType        #31:#32        // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+  #31 = Utf8               getInstruction\n+  #32 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n+  #33 = Methodref          #25.#34        // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #34 = NameAndType        #35:#17        // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #35 = Utf8               getNext\n+  #36 = Class              #37            // java/lang/IllegalStateException\n+  #37 = Utf8               java/lang/IllegalStateException\n+  #38 = String             #39            // physicalSuccessor() called on a shared JsrInstruction.\n+  #39 = Utf8               physicalSuccessor() called on a shared JsrInstruction.\n+  #40 = Methodref          #36.#41        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #41 = NameAndType        #5:#42         // \"<init>\":(Ljava/lang/String;)V\n+  #42 = Utf8               (Ljava/lang/String;)V\n+  #43 = Class              #44            // org/apache/bcel/generic/UnconditionalBranch\n+  #44 = Utf8               org/apache/bcel/generic/UnconditionalBranch\n+  #45 = Class              #46            // org/apache/bcel/generic/TypedInstruction\n   #46 = Utf8               org/apache/bcel/generic/TypedInstruction\n-  #47 = Utf8               org/apache/bcel/generic/StackProducer\n-  #48 = Utf8               org/apache/bcel/generic/InstructionHandle\n-  #49 = Utf8               (Lorg/apache/bcel/generic/InstructionHandle;)V\n-  #50 = Utf8               getTarget\n-  #51 = Utf8               getPrev\n-  #52 = Utf8               getInstruction\n-  #53 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n-  #54 = Utf8               getNext\n-  #55 = Utf8               (Ljava/lang/String;)V\n+  #47 = Class              #48            // org/apache/bcel/generic/StackProducer\n+  #48 = Utf8               org/apache/bcel/generic/StackProducer\n+  #49 = Utf8               Code\n+  #50 = Utf8               LineNumberTable\n+  #51 = Utf8               getType\n+  #52 = Utf8               (Lorg/apache/bcel/generic/ConstantPoolGen;)Lorg/apache/bcel/generic/Type;\n+  #53 = Utf8               StackMapTable\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               JsrInstruction.java\n {\n   org.apache.bcel.generic.JsrInstruction(short, org.apache.bcel.generic.InstructionHandle);\n     descriptor: (SLorg/apache/bcel/generic/InstructionHandle;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -80,77 +80,77 @@\n \n   org.apache.bcel.generic.JsrInstruction();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 36: 0\n         line 37: 4\n \n   public org.apache.bcel.generic.Type getType(org.apache.bcel.generic.ConstantPoolGen);\n     descriptor: (Lorg/apache/bcel/generic/ConstantPoolGen;)Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #3                  // class org/apache/bcel/generic/ReturnaddressType\n+         0: new           #10                 // class org/apache/bcel/generic/ReturnaddressType\n          3: dup\n          4: aload_0\n-         5: invokevirtual #4                  // Method physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n-         8: invokespecial #5                  // Method org/apache/bcel/generic/ReturnaddressType.\"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n+         5: invokevirtual #12                 // Method physicalSuccessor:()Lorg/apache/bcel/generic/InstructionHandle;\n+         8: invokespecial #18                 // Method org/apache/bcel/generic/ReturnaddressType.\"<init>\":(Lorg/apache/bcel/generic/InstructionHandle;)V\n         11: areturn\n       LineNumberTable:\n         line 44: 0\n \n   public org.apache.bcel.generic.InstructionHandle physicalSuccessor();\n     descriptor: ()Lorg/apache/bcel/generic/InstructionHandle;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method org/apache/bcel/generic/BranchInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+         1: invokespecial #21                 // Method org/apache/bcel/generic/BranchInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n          4: astore_1\n          5: aload_1\n-         6: invokevirtual #7                  // Method org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n+         6: invokevirtual #24                 // Method org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n          9: ifnull        20\n         12: aload_1\n-        13: invokevirtual #7                  // Method org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n+        13: invokevirtual #24                 // Method org/apache/bcel/generic/InstructionHandle.getPrev:()Lorg/apache/bcel/generic/InstructionHandle;\n         16: astore_1\n         17: goto          5\n         20: aload_1\n-        21: invokevirtual #8                  // Method org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+        21: invokevirtual #29                 // Method org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n         24: aload_0\n         25: if_acmpeq     36\n         28: aload_1\n-        29: invokevirtual #9                  // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+        29: invokevirtual #33                 // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n         32: astore_1\n         33: goto          20\n         36: aload_1\n         37: astore_2\n         38: aload_1\n         39: ifnull        69\n         42: aload_1\n-        43: invokevirtual #9                  // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+        43: invokevirtual #33                 // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n         46: astore_1\n         47: aload_1\n         48: ifnull        38\n         51: aload_1\n-        52: invokevirtual #8                  // Method org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+        52: invokevirtual #29                 // Method org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n         55: aload_0\n         56: if_acmpne     38\n-        59: new           #10                 // class java/lang/IllegalStateException\n+        59: new           #36                 // class java/lang/IllegalStateException\n         62: dup\n-        63: ldc           #11                 // String physicalSuccessor() called on a shared JsrInstruction.\n-        65: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        63: ldc           #38                 // String physicalSuccessor() called on a shared JsrInstruction.\n+        65: invokespecial #40                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: aload_2\n-        70: invokevirtual #9                  // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+        70: invokevirtual #33                 // Method org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n         73: areturn\n       LineNumberTable:\n         line 60: 0\n         line 62: 5\n         line 63: 12\n         line 66: 20\n         line 67: 28\n"}]}
