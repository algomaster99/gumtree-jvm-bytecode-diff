{"diffoscope-json-version": 1, "source1": "first/SevenZFile$ArchiveStatistics.class", "source2": "second/SevenZFile$ArchiveStatistics.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,159 +1,153 @@\n-  SHA-256 checksum 0f2749b6c7cdacd8786b25ba93213e89d71fa550b52e38ba7d915c0a1f671866\n+  SHA-256 checksum 4bd36b9abc5e5b2d8ce0ec1bdfba604b84b2c474a3e03a87fb85f2837c35f1cd\n   Compiled from \"SevenZFile.java\"\n class org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #48                         // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n-  super_class: #49                        // java/lang/Object\n-  interfaces: 0, fields: 9, methods: 27, attributes: 2\n+  this_class: #39                         // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n+  super_class: #40                        // java/lang/Object\n+  interfaces: 0, fields: 9, methods: 26, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #48.#108      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntriesWithStream:I\n-    #2 = Fieldref           #48.#109      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntries:I\n-    #3 = Fieldref           #48.#110      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfCoders:J\n-    #4 = Fieldref           #48.#111      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfUnpackSubStreams:J\n-    #5 = Fieldref           #48.#112      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderHasCrc:Ljava/util/BitSet;\n-    #6 = Fieldref           #48.#113      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfInStreams:J\n-    #7 = Fieldref           #48.#114      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfOutStreams:J\n-    #8 = Fieldref           #48.#115      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfFolders:I\n-    #9 = Fieldref           #48.#116      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfPackedStreams:I\n-   #10 = Methodref          #48.#117      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.\"<init>\":()V\n-   #11 = Methodref          #49.#117      // java/lang/Object.\"<init>\":()V\n-   #12 = Class              #118          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#117      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #119          // Archive with\n-   #15 = Methodref          #12.#120      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#121      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = String             #122          //  entries in\n-   #18 = String             #123          //  folders. Estimated size\n-   #19 = Methodref          #48.#124      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.estimateSize:()J\n-   #20 = Long               1024l\n-   #22 = Methodref          #12.#125      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #23 = String             #126          //  kB.\n-   #24 = Methodref          #12.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Long               16l\n-   #27 = Methodref          #48.#128      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderSize:()J\n-   #28 = Methodref          #48.#129      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.coderSize:()J\n-   #29 = Methodref          #48.#130      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.bindPairSize:()J\n-   #30 = Long               8l\n-   #32 = Methodref          #48.#131      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.entrySize:()J\n-   #33 = Methodref          #48.#132      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.streamMapSize:()J\n-   #34 = Long               2l\n-   #36 = Class              #133          // java/io/IOException\n-   #37 = String             #134          // archive with entries but no folders\n-   #38 = Methodref          #36.#135      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #39 = String             #136          // archive doesn\\'t contain enough substreams for entries\n-   #40 = Class              #137          // org/apache/commons/compress/MemoryLimitException\n-   #41 = Methodref          #40.#138      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-   #42 = Long               30l\n-   #44 = Long               22l\n-   #46 = Long               100l\n-   #48 = Class              #140          // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n-   #49 = Class              #141          // java/lang/Object\n-   #50 = Utf8               numberOfPackedStreams\n-   #51 = Utf8               I\n-   #52 = Utf8               numberOfCoders\n-   #53 = Utf8               J\n-   #54 = Utf8               numberOfOutStreams\n-   #55 = Utf8               numberOfInStreams\n-   #56 = Utf8               numberOfUnpackSubStreams\n-   #57 = Utf8               numberOfFolders\n-   #58 = Utf8               folderHasCrc\n-   #59 = Utf8               Ljava/util/BitSet;\n-   #60 = Utf8               numberOfEntries\n-   #61 = Utf8               numberOfEntriesWithStream\n-   #62 = Utf8               <init>\n-   #63 = Utf8               ()V\n-   #64 = Utf8               Code\n-   #65 = Utf8               LineNumberTable\n-   #66 = Utf8               toString\n-   #67 = Utf8               ()Ljava/lang/String;\n-   #68 = Utf8               estimateSize\n-   #69 = Utf8               ()J\n-   #70 = Utf8               assertValidity\n-   #71 = Utf8               (I)V\n-   #72 = Utf8               StackMapTable\n-   #73 = Utf8               Exceptions\n-   #74 = Utf8               folderSize\n-   #75 = Utf8               coderSize\n-   #76 = Utf8               bindPairSize\n-   #77 = Utf8               entrySize\n-   #78 = Utf8               streamMapSize\n-   #79 = Class              #142          // org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n-   #80 = Utf8               InnerClasses\n-   #81 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$1;)V\n-   #82 = Utf8               access$102\n-   #83 = Utf8               ArchiveStatistics\n-   #84 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;I)I\n-   #85 = Utf8               access$100\n-   #86 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)I\n-   #87 = Utf8               access$202\n-   #88 = Utf8               access$200\n-   #89 = Utf8               access$300\n-   #90 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)J\n-   #91 = Utf8               access$400\n-   #92 = Utf8               access$502\n-   #93 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;Ljava/util/BitSet;)Ljava/util/BitSet;\n-   #94 = Utf8               access$500\n-   #95 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)Ljava/util/BitSet;\n-   #96 = Utf8               access$602\n-   #97 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n-   #98 = Utf8               access$600\n-   #99 = Utf8               access$700\n-  #100 = Utf8               access$702\n-  #101 = Utf8               access$302\n-  #102 = Utf8               access$402\n-  #103 = Utf8               access$802\n-  #104 = Utf8               access$800\n-  #105 = Utf8               access$902\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               SevenZFile.java\n-  #108 = NameAndType        #61:#51       // numberOfEntriesWithStream:I\n-  #109 = NameAndType        #60:#51       // numberOfEntries:I\n-  #110 = NameAndType        #52:#53       // numberOfCoders:J\n-  #111 = NameAndType        #56:#53       // numberOfUnpackSubStreams:J\n-  #112 = NameAndType        #58:#59       // folderHasCrc:Ljava/util/BitSet;\n-  #113 = NameAndType        #55:#53       // numberOfInStreams:J\n-  #114 = NameAndType        #54:#53       // numberOfOutStreams:J\n-  #115 = NameAndType        #57:#51       // numberOfFolders:I\n-  #116 = NameAndType        #50:#51       // numberOfPackedStreams:I\n-  #117 = NameAndType        #62:#63       // \"<init>\":()V\n-  #118 = Utf8               java/lang/StringBuilder\n-  #119 = Utf8               Archive with\n-  #120 = NameAndType        #143:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #121 = NameAndType        #143:#145     // append:(I)Ljava/lang/StringBuilder;\n-  #122 = Utf8                entries in\n-  #123 = Utf8                folders. Estimated size\n-  #124 = NameAndType        #68:#69       // estimateSize:()J\n-  #125 = NameAndType        #143:#146     // append:(J)Ljava/lang/StringBuilder;\n-  #126 = Utf8                kB.\n-  #127 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-  #128 = NameAndType        #74:#69       // folderSize:()J\n-  #129 = NameAndType        #75:#69       // coderSize:()J\n-  #130 = NameAndType        #76:#69       // bindPairSize:()J\n-  #131 = NameAndType        #77:#69       // entrySize:()J\n-  #132 = NameAndType        #78:#69       // streamMapSize:()J\n-  #133 = Utf8               java/io/IOException\n-  #134 = Utf8               archive with entries but no folders\n-  #135 = NameAndType        #62:#147      // \"<init>\":(Ljava/lang/String;)V\n-  #136 = Utf8               archive doesn\\'t contain enough substreams for entries\n-  #137 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #138 = NameAndType        #62:#148      // \"<init>\":(JI)V\n-  #139 = Class              #149          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #140 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n-  #141 = Utf8               java/lang/Object\n-  #142 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n-  #143 = Utf8               append\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #146 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #147 = Utf8               (Ljava/lang/String;)V\n-  #148 = Utf8               (JI)V\n-  #149 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+    #1 = Fieldref           #39.#98       // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntriesWithStream:I\n+    #2 = Fieldref           #39.#99       // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntries:I\n+    #3 = Fieldref           #39.#100      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfCoders:J\n+    #4 = Fieldref           #39.#101      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfUnpackSubStreams:J\n+    #5 = Fieldref           #39.#102      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderHasCrc:Ljava/util/BitSet;\n+    #6 = Fieldref           #39.#103      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfInStreams:J\n+    #7 = Fieldref           #39.#104      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfOutStreams:J\n+    #8 = Fieldref           #39.#105      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfFolders:I\n+    #9 = Fieldref           #39.#106      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfPackedStreams:I\n+   #10 = Methodref          #39.#107      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.\"<init>\":()V\n+   #11 = Methodref          #40.#107      // java/lang/Object.\"<init>\":()V\n+   #12 = Methodref          #39.#108      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.estimateSize:()J\n+   #13 = Long               1024l\n+   #15 = InvokeDynamic      #0:#112       // #0:makeConcatWithConstants:(IIJ)Ljava/lang/String;\n+   #16 = Long               16l\n+   #18 = Methodref          #39.#113      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderSize:()J\n+   #19 = Methodref          #39.#114      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.coderSize:()J\n+   #20 = Methodref          #39.#115      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.bindPairSize:()J\n+   #21 = Long               8l\n+   #23 = Methodref          #39.#116      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.entrySize:()J\n+   #24 = Methodref          #39.#117      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.streamMapSize:()J\n+   #25 = Long               2l\n+   #27 = Class              #118          // java/io/IOException\n+   #28 = String             #119          // archive with entries but no folders\n+   #29 = Methodref          #27.#120      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = String             #121          // archive doesn\\'t contain enough substreams for entries\n+   #31 = Class              #122          // org/apache/commons/compress/MemoryLimitException\n+   #32 = Methodref          #31.#123      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+   #33 = Long               30l\n+   #35 = Long               22l\n+   #37 = Long               100l\n+   #39 = Class              #125          // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n+   #40 = Class              #126          // java/lang/Object\n+   #41 = Utf8               numberOfPackedStreams\n+   #42 = Utf8               I\n+   #43 = Utf8               numberOfCoders\n+   #44 = Utf8               J\n+   #45 = Utf8               numberOfOutStreams\n+   #46 = Utf8               numberOfInStreams\n+   #47 = Utf8               numberOfUnpackSubStreams\n+   #48 = Utf8               numberOfFolders\n+   #49 = Utf8               folderHasCrc\n+   #50 = Utf8               Ljava/util/BitSet;\n+   #51 = Utf8               numberOfEntries\n+   #52 = Utf8               numberOfEntriesWithStream\n+   #53 = Utf8               <init>\n+   #54 = Utf8               ()V\n+   #55 = Utf8               Code\n+   #56 = Utf8               LineNumberTable\n+   #57 = Utf8               toString\n+   #58 = Utf8               ()Ljava/lang/String;\n+   #59 = Utf8               estimateSize\n+   #60 = Utf8               ()J\n+   #61 = Utf8               assertValidity\n+   #62 = Utf8               (I)V\n+   #63 = Utf8               StackMapTable\n+   #64 = Utf8               Exceptions\n+   #65 = Utf8               folderSize\n+   #66 = Utf8               coderSize\n+   #67 = Utf8               bindPairSize\n+   #68 = Utf8               entrySize\n+   #69 = Utf8               streamMapSize\n+   #70 = Class              #127          // org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n+   #71 = Utf8               InnerClasses\n+   #72 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$1;)V\n+   #73 = Utf8               access$102\n+   #74 = Utf8               ArchiveStatistics\n+   #75 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;I)I\n+   #76 = Utf8               access$100\n+   #77 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)I\n+   #78 = Utf8               access$202\n+   #79 = Utf8               access$200\n+   #80 = Utf8               access$300\n+   #81 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)J\n+   #82 = Utf8               access$400\n+   #83 = Utf8               access$502\n+   #84 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;Ljava/util/BitSet;)Ljava/util/BitSet;\n+   #85 = Utf8               access$500\n+   #86 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)Ljava/util/BitSet;\n+   #87 = Utf8               access$602\n+   #88 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n+   #89 = Utf8               access$600\n+   #90 = Utf8               access$714\n+   #91 = Utf8               access$314\n+   #92 = Utf8               access$414\n+   #93 = Utf8               access$802\n+   #94 = Utf8               access$800\n+   #95 = Utf8               access$902\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               SevenZFile.java\n+   #98 = NameAndType        #52:#42       // numberOfEntriesWithStream:I\n+   #99 = NameAndType        #51:#42       // numberOfEntries:I\n+  #100 = NameAndType        #43:#44       // numberOfCoders:J\n+  #101 = NameAndType        #47:#44       // numberOfUnpackSubStreams:J\n+  #102 = NameAndType        #49:#50       // folderHasCrc:Ljava/util/BitSet;\n+  #103 = NameAndType        #46:#44       // numberOfInStreams:J\n+  #104 = NameAndType        #45:#44       // numberOfOutStreams:J\n+  #105 = NameAndType        #48:#42       // numberOfFolders:I\n+  #106 = NameAndType        #41:#42       // numberOfPackedStreams:I\n+  #107 = NameAndType        #53:#54       // \"<init>\":()V\n+  #108 = NameAndType        #59:#60       // estimateSize:()J\n+  #109 = Utf8               BootstrapMethods\n+  #110 = MethodHandle       6:#128        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #111 = String             #129          // Archive with \\u0001 entries in \\u0001 folders. Estimated size \\u0001 kB.\n+  #112 = NameAndType        #130:#131     // makeConcatWithConstants:(IIJ)Ljava/lang/String;\n+  #113 = NameAndType        #65:#60       // folderSize:()J\n+  #114 = NameAndType        #66:#60       // coderSize:()J\n+  #115 = NameAndType        #67:#60       // bindPairSize:()J\n+  #116 = NameAndType        #68:#60       // entrySize:()J\n+  #117 = NameAndType        #69:#60       // streamMapSize:()J\n+  #118 = Utf8               java/io/IOException\n+  #119 = Utf8               archive with entries but no folders\n+  #120 = NameAndType        #53:#132      // \"<init>\":(Ljava/lang/String;)V\n+  #121 = Utf8               archive doesn\\'t contain enough substreams for entries\n+  #122 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #123 = NameAndType        #53:#133      // \"<init>\":(JI)V\n+  #124 = Class              #134          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #125 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n+  #126 = Utf8               java/lang/Object\n+  #127 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n+  #128 = Methodref          #135.#136     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #129 = Utf8               Archive with \\u0001 entries in \\u0001 folders. Estimated size \\u0001 kB.\n+  #130 = Utf8               makeConcatWithConstants\n+  #131 = Utf8               (IIJ)Ljava/lang/String;\n+  #132 = Utf8               (Ljava/lang/String;)V\n+  #133 = Utf8               (JI)V\n+  #134 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #135 = Class              #137          // java/lang/invoke/StringConcatFactory\n+  #136 = NameAndType        #130:#140     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #137 = Utf8               java/lang/invoke/StringConcatFactory\n+  #138 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n+  #139 = Utf8               Lookup\n+  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #141 = Class              #143          // java/lang/invoke/MethodHandles\n+  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #143 = Utf8               java/lang/invoke/MethodHandles\n {\n   private int numberOfPackedStreams;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private long numberOfCoders;\n     descriptor: J\n@@ -198,112 +192,98 @@\n       LineNumberTable:\n         line 2081: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=5, locals=1, args_size=1\n-         0: new           #12                 // class java/lang/StringBuilder\n-         3: dup\n-         4: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #14                 // String Archive with\n-         9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #2                  // Field numberOfEntries:I\n-        16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #17                 // String  entries in\n-        21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: aload_0\n-        25: getfield      #8                  // Field numberOfFolders:I\n-        28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: ldc           #18                 // String  folders. Estimated size\n-        33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        36: aload_0\n-        37: invokevirtual #19                 // Method estimateSize:()J\n-        40: ldc2_w        #20                 // long 1024l\n-        43: ldiv\n-        44: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        47: ldc           #23                 // String  kB.\n-        49: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: areturn\n+      stack=6, locals=1, args_size=1\n+         0: aload_0\n+         1: getfield      #2                  // Field numberOfEntries:I\n+         4: aload_0\n+         5: getfield      #8                  // Field numberOfFolders:I\n+         8: aload_0\n+         9: invokevirtual #12                 // Method estimateSize:()J\n+        12: ldc2_w        #13                 // long 1024l\n+        15: ldiv\n+        16: invokedynamic #15,  0             // InvokeDynamic #0:makeConcatWithConstants:(IIJ)Ljava/lang/String;\n+        21: areturn\n       LineNumberTable:\n         line 2094: 0\n-        line 2095: 37\n-        line 2094: 55\n+        line 2095: 9\n+        line 2094: 21\n \n   long estimateSize();\n     descriptor: ()J\n     flags: (0x0000)\n     Code:\n       stack=8, locals=3, args_size=1\n-         0: ldc2_w        #25                 // long 16l\n+         0: ldc2_w        #16                 // long 16l\n          3: aload_0\n          4: getfield      #9                  // Field numberOfPackedStreams:I\n          7: i2l\n          8: lmul\n          9: aload_0\n         10: getfield      #9                  // Field numberOfPackedStreams:I\n         13: bipush        8\n         15: idiv\n         16: i2l\n         17: ladd\n         18: aload_0\n         19: getfield      #8                  // Field numberOfFolders:I\n         22: i2l\n         23: aload_0\n-        24: invokespecial #27                 // Method folderSize:()J\n+        24: invokespecial #18                 // Method folderSize:()J\n         27: lmul\n         28: ladd\n         29: aload_0\n         30: getfield      #3                  // Field numberOfCoders:J\n         33: aload_0\n-        34: invokespecial #28                 // Method coderSize:()J\n+        34: invokespecial #19                 // Method coderSize:()J\n         37: lmul\n         38: ladd\n         39: aload_0\n         40: getfield      #7                  // Field numberOfOutStreams:J\n         43: aload_0\n         44: getfield      #8                  // Field numberOfFolders:I\n         47: i2l\n         48: lsub\n         49: aload_0\n-        50: invokespecial #29                 // Method bindPairSize:()J\n+        50: invokespecial #20                 // Method bindPairSize:()J\n         53: lmul\n         54: ladd\n-        55: ldc2_w        #30                 // long 8l\n+        55: ldc2_w        #21                 // long 8l\n         58: aload_0\n         59: getfield      #6                  // Field numberOfInStreams:J\n         62: aload_0\n         63: getfield      #7                  // Field numberOfOutStreams:J\n         66: lsub\n         67: aload_0\n         68: getfield      #8                  // Field numberOfFolders:I\n         71: i2l\n         72: ladd\n         73: lmul\n         74: ladd\n-        75: ldc2_w        #30                 // long 8l\n+        75: ldc2_w        #21                 // long 8l\n         78: aload_0\n         79: getfield      #7                  // Field numberOfOutStreams:J\n         82: lmul\n         83: ladd\n         84: aload_0\n         85: getfield      #2                  // Field numberOfEntries:I\n         88: i2l\n         89: aload_0\n-        90: invokespecial #32                 // Method entrySize:()J\n+        90: invokespecial #23                 // Method entrySize:()J\n         93: lmul\n         94: ladd\n         95: aload_0\n-        96: invokespecial #33                 // Method streamMapSize:()J\n+        96: invokespecial #24                 // Method streamMapSize:()J\n         99: ladd\n        100: lstore_1\n-       101: ldc2_w        #34                 // long 2l\n+       101: ldc2_w        #25                 // long 2l\n        104: lload_1\n        105: lmul\n        106: lreturn\n       LineNumberTable:\n         line 2099: 0\n         line 2101: 24\n         line 2102: 34\n@@ -319,46 +299,46 @@\n       stack=5, locals=4, args_size=2\n          0: aload_0\n          1: getfield      #1                  // Field numberOfEntriesWithStream:I\n          4: ifle          24\n          7: aload_0\n          8: getfield      #8                  // Field numberOfFolders:I\n         11: ifne          24\n-        14: new           #36                 // class java/io/IOException\n+        14: new           #27                 // class java/io/IOException\n         17: dup\n-        18: ldc           #37                 // String archive with entries but no folders\n-        20: invokespecial #38                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        18: ldc           #28                 // String archive with entries but no folders\n+        20: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: aload_0\n         25: getfield      #1                  // Field numberOfEntriesWithStream:I\n         28: i2l\n         29: aload_0\n         30: getfield      #4                  // Field numberOfUnpackSubStreams:J\n         33: lcmp\n         34: ifle          47\n-        37: new           #36                 // class java/io/IOException\n+        37: new           #27                 // class java/io/IOException\n         40: dup\n-        41: ldc           #39                 // String archive doesn\\'t contain enough substreams for entries\n-        43: invokespecial #38                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        41: ldc           #30                 // String archive doesn\\'t contain enough substreams for entries\n+        43: invokespecial #29                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         46: athrow\n         47: aload_0\n-        48: invokevirtual #19                 // Method estimateSize:()J\n-        51: ldc2_w        #20                 // long 1024l\n+        48: invokevirtual #12                 // Method estimateSize:()J\n+        51: ldc2_w        #13                 // long 1024l\n         54: ldiv\n         55: lstore_2\n         56: iload_1\n         57: i2l\n         58: lload_2\n         59: lcmp\n         60: ifge          73\n-        63: new           #40                 // class org/apache/commons/compress/MemoryLimitException\n+        63: new           #31                 // class org/apache/commons/compress/MemoryLimitException\n         66: dup\n         67: lload_2\n         68: iload_1\n-        69: invokespecial #41                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+        69: invokespecial #32                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n         72: athrow\n         73: return\n       LineNumberTable:\n         line 2113: 0\n         line 2114: 14\n         line 2116: 24\n         line 2117: 37\n@@ -376,45 +356,45 @@\n       throws java.io.IOException\n \n   private long folderSize();\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc2_w        #42                 // long 30l\n+         0: ldc2_w        #33                 // long 30l\n          3: lreturn\n       LineNumberTable:\n         line 2127: 0\n \n   private long coderSize();\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc2_w        #44                 // long 22l\n+         0: ldc2_w        #35                 // long 22l\n          3: lreturn\n       LineNumberTable:\n         line 2131: 0\n \n   private long bindPairSize();\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc2_w        #25                 // long 16l\n+         0: ldc2_w        #16                 // long 16l\n          3: lreturn\n       LineNumberTable:\n         line 2138: 0\n \n   private long entrySize();\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc2_w        #46                 // long 100l\n+         0: ldc2_w        #37                 // long 100l\n          3: lreturn\n       LineNumberTable:\n         line 2142: 0\n \n   private long streamMapSize();\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n@@ -564,61 +544,59 @@\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #4                  // Field numberOfUnpackSubStreams:J\n          4: lreturn\n       LineNumberTable:\n         line 2081: 0\n \n-  static long access$700(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);\n-    descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=1, args_size=1\n-         0: aload_0\n-         1: getfield      #3                  // Field numberOfCoders:J\n-         4: lreturn\n-      LineNumberTable:\n-        line 2081: 0\n-\n-  static long access$702(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$714(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #3                  // Field numberOfCoders:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #3                  // Field numberOfCoders:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #3                  // Field numberOfCoders:J\n+        11: lreturn\n       LineNumberTable:\n         line 2081: 0\n \n-  static long access$302(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$314(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #7                  // Field numberOfOutStreams:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #7                  // Field numberOfOutStreams:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #7                  // Field numberOfOutStreams:J\n+        11: lreturn\n       LineNumberTable:\n         line 2081: 0\n \n-  static long access$402(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$414(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #6                  // Field numberOfInStreams:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #6                  // Field numberOfInStreams:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #6                  // Field numberOfInStreams:J\n+        11: lreturn\n       LineNumberTable:\n         line 2081: 0\n \n   static int access$802(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;I)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n@@ -653,9 +631,14 @@\n          3: putfield      #1                  // Field numberOfEntriesWithStream:I\n          6: ireturn\n       LineNumberTable:\n         line 2081: 0\n }\n SourceFile: \"SevenZFile.java\"\n InnerClasses:\n-  #79;                                    // class org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n-  private static #83= #48 of #139;        // ArchiveStatistics=class org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics of class org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #70;                                    // class org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n+  private static #74= #39 of #124;        // ArchiveStatistics=class org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics of class org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  public static final #139= #138 of #141; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #110 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #111 Archive with \\u0001 entries in \\u0001 folders. Estimated size \\u0001 kB.\n"}]}
