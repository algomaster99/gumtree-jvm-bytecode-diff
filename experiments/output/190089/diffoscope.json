{"diffoscope-json-version": 1, "source1": "first/XMLPropertyListConfiguration$PListNodeBuilder.class", "source2": "second/XMLPropertyListConfiguration$PListNodeBuilder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,256 +1,256 @@\n-  SHA-256 checksum b0e731b4911bfd555529c62a7d9ffdcb0e81efa88ec9492e3ac32ff4d73a1115\n+  SHA-256 checksum ca48938bf9a6c5487d7ac3b48ca28529132e0f87c61de591824dd7e385467b3f\n   Compiled from \"XMLPropertyListConfiguration.java\"\n class org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$PListNodeBuilder\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #44                         // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n-  super_class: #21                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n+  super_class: #14                        // java/lang/Object\n   interfaces: 0, fields: 5, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Class              #128          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n-    #2 = Methodref          #44.#129      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.\"<init>\":()V\n-    #3 = Fieldref           #44.#130      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.FORMAT:Ljava/text/DateFormat;\n-    #4 = Methodref          #21.#129      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #131          // java/util/LinkedList\n-    #6 = Methodref          #5.#129       // java/util/LinkedList.\"<init>\":()V\n-    #7 = Fieldref           #44.#132      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.childBuilders:Ljava/util/Collection;\n-    #8 = Fieldref           #44.#133      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.value:Ljava/lang/Object;\n-    #9 = Class              #134          // java/util/Collection\n-   #10 = InterfaceMethodref #9.#135       // java/util/Collection.add:(Ljava/lang/Object;)Z\n-   #11 = Class              #136          // java/util/ArrayList\n-   #12 = Methodref          #11.#129      // java/util/ArrayList.\"<init>\":()V\n-   #13 = InterfaceMethodref #137.#135     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #14 = Methodref          #92.#138      // java/lang/String.indexOf:(I)I\n-   #15 = Fieldref           #44.#139      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.GNUSTEP_FORMAT:Ljava/text/DateFormat;\n-   #16 = Methodref          #140.#141     // java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n-   #17 = Methodref          #44.#142      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.addValue:(Ljava/lang/Object;)V\n-   #18 = Class              #143          // java/text/ParseException\n-   #19 = Class              #144          // java/lang/IllegalArgumentException\n-   #20 = String             #145          // \\'%s\\' cannot be parsed to a date!\n-   #21 = Class              #146          // java/lang/Object\n-   #22 = Methodref          #92.#147      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #23 = Methodref          #19.#148      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #24 = String             #149          // UTF-8\n-   #25 = Methodref          #92.#150      // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #26 = Methodref          #151.#152     // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n-   #27 = Class              #153          // java/io/UnsupportedEncodingException\n-   #28 = Class              #154          // java/lang/AssertionError\n-   #29 = Methodref          #28.#155      // java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n-   #30 = Class              #156          // java/math/BigInteger\n-   #31 = Methodref          #30.#157      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Class              #158          // java/math/BigDecimal\n-   #33 = Methodref          #32.#157      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Fieldref           #159.#160     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #35 = Fieldref           #159.#161     // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-   #36 = Methodref          #101.#162     // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder.getNodeValue:()Ljava/lang/Object;\n-   #37 = Fieldref           #44.#163      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.name:Ljava/lang/String;\n-   #38 = Class              #165          // org/apache/commons/configuration2/tree/ImmutableNode$Builder\n-   #39 = InterfaceMethodref #9.#166       // java/util/Collection.size:()I\n-   #40 = Methodref          #38.#167      // org/apache/commons/configuration2/tree/ImmutableNode$Builder.\"<init>\":(I)V\n-   #41 = InterfaceMethodref #9.#168       // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #42 = InterfaceMethodref #116.#169     // java/util/Iterator.hasNext:()Z\n-   #43 = InterfaceMethodref #116.#170     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #44 = Class              #171          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n-   #45 = Methodref          #44.#172      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-   #46 = Methodref          #38.#173      // org/apache/commons/configuration2/tree/ImmutableNode$Builder.addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-   #47 = Methodref          #38.#174      // org/apache/commons/configuration2/tree/ImmutableNode$Builder.name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-   #48 = Methodref          #44.#162      // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.getNodeValue:()Ljava/lang/Object;\n-   #49 = Methodref          #38.#175      // org/apache/commons/configuration2/tree/ImmutableNode$Builder.value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-   #50 = Methodref          #38.#176      // org/apache/commons/configuration2/tree/ImmutableNode$Builder.create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-   #51 = Class              #177          // java/text/SimpleDateFormat\n-   #52 = String             #178          // yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n-   #53 = Methodref          #51.#157      // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n-   #54 = String             #179          // UTC\n-   #55 = Methodref          #180.#181     // java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-   #56 = Methodref          #140.#182     // java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n-   #57 = String             #183          // yyyy-MM-dd HH:mm:ss Z\n-   #58 = Utf8               FORMAT\n-   #59 = Utf8               Ljava/text/DateFormat;\n-   #60 = Utf8               GNUSTEP_FORMAT\n-   #61 = Utf8               childBuilders\n-   #62 = Utf8               Ljava/util/Collection;\n-   #63 = Utf8               Signature\n-   #64 = Utf8               PListNodeBuilder\n-   #65 = Utf8               InnerClasses\n-   #66 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;>;\n-   #67 = Utf8               name\n-   #68 = Utf8               Ljava/lang/String;\n-   #69 = Utf8               value\n-   #70 = Utf8               Ljava/lang/Object;\n-   #71 = Utf8               <init>\n-   #72 = Utf8               ()V\n-   #73 = Utf8               Code\n-   #74 = Utf8               LineNumberTable\n-   #75 = Utf8               LocalVariableTable\n-   #76 = Utf8               this\n-   #77 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n-   #78 = Utf8               addValue\n-   #79 = Utf8               (Ljava/lang/Object;)V\n-   #80 = Utf8               collection\n-   #81 = Utf8               list\n-   #82 = Utf8               Ljava/util/List;\n-   #83 = Utf8               v\n-   #84 = Utf8               LocalVariableTypeTable\n-   #85 = Utf8               Ljava/util/Collection<Ljava/lang/Object;>;\n-   #86 = Utf8               Ljava/util/List<Ljava/lang/Object;>;\n-   #87 = Utf8               StackMapTable\n-   #88 = Utf8               addDateValue\n-   #89 = Utf8               (Ljava/lang/String;)V\n-   #90 = Utf8               e\n-   #91 = Utf8               Ljava/text/ParseException;\n-   #92 = Class              #184          // java/lang/String\n-   #93 = Class              #185          // java/lang/Throwable\n-   #94 = Utf8               addDataValue\n-   #95 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #96 = Utf8               addIntegerValue\n-   #97 = Utf8               addRealValue\n-   #98 = Utf8               addTrueValue\n-   #99 = Utf8               addFalseValue\n-  #100 = Utf8               addList\n-  #101 = Class              #186          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder\n-  #102 = Utf8               ArrayNodeBuilder\n-  #103 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder;)V\n-  #104 = Utf8               node\n-  #105 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder;\n-  #106 = Utf8               setName\n-  #107 = Utf8               nodeName\n-  #108 = Utf8               addChild\n-  #109 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;)V\n-  #110 = Utf8               child\n-  #111 = Utf8               createNode\n-  #112 = Utf8               ()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-  #113 = Utf8               nodeBuilder\n-  #114 = Utf8               Builder\n-  #115 = Utf8               Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #116 = Class              #187          // java/util/Iterator\n-  #117 = Utf8               getNodeValue\n-  #118 = Utf8               ()Ljava/lang/Object;\n-  #119 = Utf8               access$000\n-  #120 = Utf8               ()Ljava/text/DateFormat;\n-  #121 = Class              #188          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n-  #122 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;)V\n-  #123 = Utf8               x0\n-  #124 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;\n-  #125 = Utf8               <clinit>\n-  #126 = Utf8               SourceFile\n-  #127 = Utf8               XMLPropertyListConfiguration.java\n-  #128 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n-  #129 = NameAndType        #71:#72       // \"<init>\":()V\n-  #130 = NameAndType        #58:#59       // FORMAT:Ljava/text/DateFormat;\n-  #131 = Utf8               java/util/LinkedList\n-  #132 = NameAndType        #61:#62       // childBuilders:Ljava/util/Collection;\n-  #133 = NameAndType        #69:#70       // value:Ljava/lang/Object;\n-  #134 = Utf8               java/util/Collection\n-  #135 = NameAndType        #189:#190     // add:(Ljava/lang/Object;)Z\n-  #136 = Utf8               java/util/ArrayList\n-  #137 = Class              #191          // java/util/List\n-  #138 = NameAndType        #192:#193     // indexOf:(I)I\n-  #139 = NameAndType        #60:#59       // GNUSTEP_FORMAT:Ljava/text/DateFormat;\n-  #140 = Class              #194          // java/text/DateFormat\n-  #141 = NameAndType        #195:#196     // parse:(Ljava/lang/String;)Ljava/util/Date;\n-  #142 = NameAndType        #78:#79       // addValue:(Ljava/lang/Object;)V\n-  #143 = Utf8               java/text/ParseException\n-  #144 = Utf8               java/lang/IllegalArgumentException\n-  #145 = Utf8               \\'%s\\' cannot be parsed to a date!\n-  #146 = Utf8               java/lang/Object\n-  #147 = NameAndType        #197:#198     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #148 = NameAndType        #71:#199      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #149 = Utf8               UTF-8\n-  #150 = NameAndType        #200:#201     // getBytes:(Ljava/lang/String;)[B\n-  #151 = Class              #202          // org/apache/commons/codec/binary/Base64\n-  #152 = NameAndType        #203:#204     // decodeBase64:([B)[B\n-  #153 = Utf8               java/io/UnsupportedEncodingException\n-  #154 = Utf8               java/lang/AssertionError\n-  #155 = NameAndType        #71:#79       // \"<init>\":(Ljava/lang/Object;)V\n-  #156 = Utf8               java/math/BigInteger\n-  #157 = NameAndType        #71:#89       // \"<init>\":(Ljava/lang/String;)V\n-  #158 = Utf8               java/math/BigDecimal\n-  #159 = Class              #205          // java/lang/Boolean\n-  #160 = NameAndType        #206:#207     // TRUE:Ljava/lang/Boolean;\n-  #161 = NameAndType        #208:#207     // FALSE:Ljava/lang/Boolean;\n-  #162 = NameAndType        #117:#118     // getNodeValue:()Ljava/lang/Object;\n-  #163 = NameAndType        #67:#68       // name:Ljava/lang/String;\n-  #164 = Class              #209          // org/apache/commons/configuration2/tree/ImmutableNode\n-  #165 = Utf8               org/apache/commons/configuration2/tree/ImmutableNode$Builder\n-  #166 = NameAndType        #210:#211     // size:()I\n-  #167 = NameAndType        #71:#212      // \"<init>\":(I)V\n-  #168 = NameAndType        #213:#214     // iterator:()Ljava/util/Iterator;\n-  #169 = NameAndType        #215:#216     // hasNext:()Z\n-  #170 = NameAndType        #217:#118     // next:()Ljava/lang/Object;\n-  #171 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n-  #172 = NameAndType        #111:#112     // createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-  #173 = NameAndType        #108:#218     // addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #174 = NameAndType        #67:#219      // name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #175 = NameAndType        #69:#220      // value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #176 = NameAndType        #221:#112     // create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-  #177 = Utf8               java/text/SimpleDateFormat\n-  #178 = Utf8               yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n-  #179 = Utf8               UTC\n-  #180 = Class              #222          // java/util/TimeZone\n-  #181 = NameAndType        #223:#224     // getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-  #182 = NameAndType        #225:#226     // setTimeZone:(Ljava/util/TimeZone;)V\n-  #183 = Utf8               yyyy-MM-dd HH:mm:ss Z\n-  #184 = Utf8               java/lang/String\n-  #185 = Utf8               java/lang/Throwable\n-  #186 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder\n-  #187 = Utf8               java/util/Iterator\n-  #188 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n-  #189 = Utf8               add\n-  #190 = Utf8               (Ljava/lang/Object;)Z\n-  #191 = Utf8               java/util/List\n-  #192 = Utf8               indexOf\n-  #193 = Utf8               (I)I\n-  #194 = Utf8               java/text/DateFormat\n-  #195 = Utf8               parse\n-  #196 = Utf8               (Ljava/lang/String;)Ljava/util/Date;\n-  #197 = Utf8               format\n-  #198 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #199 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #200 = Utf8               getBytes\n-  #201 = Utf8               (Ljava/lang/String;)[B\n-  #202 = Utf8               org/apache/commons/codec/binary/Base64\n-  #203 = Utf8               decodeBase64\n-  #204 = Utf8               ([B)[B\n-  #205 = Utf8               java/lang/Boolean\n-  #206 = Utf8               TRUE\n-  #207 = Utf8               Ljava/lang/Boolean;\n-  #208 = Utf8               FALSE\n-  #209 = Utf8               org/apache/commons/configuration2/tree/ImmutableNode\n-  #210 = Utf8               size\n-  #211 = Utf8               ()I\n-  #212 = Utf8               (I)V\n-  #213 = Utf8               iterator\n-  #214 = Utf8               ()Ljava/util/Iterator;\n-  #215 = Utf8               hasNext\n-  #216 = Utf8               ()Z\n-  #217 = Utf8               next\n-  #218 = Utf8               (Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #219 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #220 = Utf8               (Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-  #221 = Utf8               create\n-  #222 = Utf8               java/util/TimeZone\n-  #223 = Utf8               getTimeZone\n-  #224 = Utf8               (Ljava/lang/String;)Ljava/util/TimeZone;\n-  #225 = Utf8               setTimeZone\n-  #226 = Utf8               (Ljava/util/TimeZone;)V\n+    #1 = Class              #2            // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n+    #2 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n+    #3 = Methodref          #4.#5         // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.\"<init>\":()V\n+    #4 = Class              #6            // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Fieldref           #4.#10        // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.FORMAT:Ljava/text/DateFormat;\n+   #10 = NameAndType        #11:#12       // FORMAT:Ljava/text/DateFormat;\n+   #11 = Utf8               FORMAT\n+   #12 = Utf8               Ljava/text/DateFormat;\n+   #13 = Methodref          #14.#5        // java/lang/Object.\"<init>\":()V\n+   #14 = Class              #15           // java/lang/Object\n+   #15 = Utf8               java/lang/Object\n+   #16 = Class              #17           // java/util/LinkedList\n+   #17 = Utf8               java/util/LinkedList\n+   #18 = Methodref          #16.#5        // java/util/LinkedList.\"<init>\":()V\n+   #19 = Fieldref           #4.#20        // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.childBuilders:Ljava/util/Collection;\n+   #20 = NameAndType        #21:#22       // childBuilders:Ljava/util/Collection;\n+   #21 = Utf8               childBuilders\n+   #22 = Utf8               Ljava/util/Collection;\n+   #23 = Fieldref           #4.#24        // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.value:Ljava/lang/Object;\n+   #24 = NameAndType        #25:#26       // value:Ljava/lang/Object;\n+   #25 = Utf8               value\n+   #26 = Utf8               Ljava/lang/Object;\n+   #27 = Class              #28           // java/util/Collection\n+   #28 = Utf8               java/util/Collection\n+   #29 = InterfaceMethodref #27.#30       // java/util/Collection.add:(Ljava/lang/Object;)Z\n+   #30 = NameAndType        #31:#32       // add:(Ljava/lang/Object;)Z\n+   #31 = Utf8               add\n+   #32 = Utf8               (Ljava/lang/Object;)Z\n+   #33 = Class              #34           // java/util/ArrayList\n+   #34 = Utf8               java/util/ArrayList\n+   #35 = Methodref          #33.#5        // java/util/ArrayList.\"<init>\":()V\n+   #36 = InterfaceMethodref #37.#30       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #37 = Class              #38           // java/util/List\n+   #38 = Utf8               java/util/List\n+   #39 = Methodref          #40.#41       // java/lang/String.indexOf:(I)I\n+   #40 = Class              #42           // java/lang/String\n+   #41 = NameAndType        #43:#44       // indexOf:(I)I\n+   #42 = Utf8               java/lang/String\n+   #43 = Utf8               indexOf\n+   #44 = Utf8               (I)I\n+   #45 = Fieldref           #4.#46        // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.GNUSTEP_FORMAT:Ljava/text/DateFormat;\n+   #46 = NameAndType        #47:#12       // GNUSTEP_FORMAT:Ljava/text/DateFormat;\n+   #47 = Utf8               GNUSTEP_FORMAT\n+   #48 = Methodref          #49.#50       // java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n+   #49 = Class              #51           // java/text/DateFormat\n+   #50 = NameAndType        #52:#53       // parse:(Ljava/lang/String;)Ljava/util/Date;\n+   #51 = Utf8               java/text/DateFormat\n+   #52 = Utf8               parse\n+   #53 = Utf8               (Ljava/lang/String;)Ljava/util/Date;\n+   #54 = Methodref          #4.#55        // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.addValue:(Ljava/lang/Object;)V\n+   #55 = NameAndType        #56:#57       // addValue:(Ljava/lang/Object;)V\n+   #56 = Utf8               addValue\n+   #57 = Utf8               (Ljava/lang/Object;)V\n+   #58 = Class              #59           // java/text/ParseException\n+   #59 = Utf8               java/text/ParseException\n+   #60 = Class              #61           // java/lang/IllegalArgumentException\n+   #61 = Utf8               java/lang/IllegalArgumentException\n+   #62 = String             #63           // \\'%s\\' cannot be parsed to a date!\n+   #63 = Utf8               \\'%s\\' cannot be parsed to a date!\n+   #64 = Methodref          #40.#65       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #65 = NameAndType        #66:#67       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #66 = Utf8               format\n+   #67 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #68 = Methodref          #60.#69       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #69 = NameAndType        #7:#70        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #70 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #71 = String             #72           // UTF-8\n+   #72 = Utf8               UTF-8\n+   #73 = Methodref          #40.#74       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #74 = NameAndType        #75:#76       // getBytes:(Ljava/lang/String;)[B\n+   #75 = Utf8               getBytes\n+   #76 = Utf8               (Ljava/lang/String;)[B\n+   #77 = Methodref          #78.#79       // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n+   #78 = Class              #80           // org/apache/commons/codec/binary/Base64\n+   #79 = NameAndType        #81:#82       // decodeBase64:([B)[B\n+   #80 = Utf8               org/apache/commons/codec/binary/Base64\n+   #81 = Utf8               decodeBase64\n+   #82 = Utf8               ([B)[B\n+   #83 = Class              #84           // java/io/UnsupportedEncodingException\n+   #84 = Utf8               java/io/UnsupportedEncodingException\n+   #85 = Class              #86           // java/lang/AssertionError\n+   #86 = Utf8               java/lang/AssertionError\n+   #87 = Methodref          #85.#88       // java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n+   #88 = NameAndType        #7:#57        // \"<init>\":(Ljava/lang/Object;)V\n+   #89 = Class              #90           // java/math/BigInteger\n+   #90 = Utf8               java/math/BigInteger\n+   #91 = Methodref          #89.#92       // java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n+   #92 = NameAndType        #7:#93        // \"<init>\":(Ljava/lang/String;)V\n+   #93 = Utf8               (Ljava/lang/String;)V\n+   #94 = Class              #95           // java/math/BigDecimal\n+   #95 = Utf8               java/math/BigDecimal\n+   #96 = Methodref          #94.#92       // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+   #97 = Fieldref           #98.#99       // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #98 = Class              #100          // java/lang/Boolean\n+   #99 = NameAndType        #101:#102     // TRUE:Ljava/lang/Boolean;\n+  #100 = Utf8               java/lang/Boolean\n+  #101 = Utf8               TRUE\n+  #102 = Utf8               Ljava/lang/Boolean;\n+  #103 = Fieldref           #98.#104      // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+  #104 = NameAndType        #105:#102     // FALSE:Ljava/lang/Boolean;\n+  #105 = Utf8               FALSE\n+  #106 = Methodref          #107.#108     // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder.getNodeValue:()Ljava/lang/Object;\n+  #107 = Class              #109          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder\n+  #108 = NameAndType        #110:#111     // getNodeValue:()Ljava/lang/Object;\n+  #109 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder\n+  #110 = Utf8               getNodeValue\n+  #111 = Utf8               ()Ljava/lang/Object;\n+  #112 = Fieldref           #4.#113       // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.name:Ljava/lang/String;\n+  #113 = NameAndType        #114:#115     // name:Ljava/lang/String;\n+  #114 = Utf8               name\n+  #115 = Utf8               Ljava/lang/String;\n+  #116 = Class              #117          // org/apache/commons/configuration2/tree/ImmutableNode$Builder\n+  #117 = Utf8               org/apache/commons/configuration2/tree/ImmutableNode$Builder\n+  #118 = InterfaceMethodref #27.#119      // java/util/Collection.size:()I\n+  #119 = NameAndType        #120:#121     // size:()I\n+  #120 = Utf8               size\n+  #121 = Utf8               ()I\n+  #122 = Methodref          #116.#123     // org/apache/commons/configuration2/tree/ImmutableNode$Builder.\"<init>\":(I)V\n+  #123 = NameAndType        #7:#124       // \"<init>\":(I)V\n+  #124 = Utf8               (I)V\n+  #125 = InterfaceMethodref #27.#126      // java/util/Collection.iterator:()Ljava/util/Iterator;\n+  #126 = NameAndType        #127:#128     // iterator:()Ljava/util/Iterator;\n+  #127 = Utf8               iterator\n+  #128 = Utf8               ()Ljava/util/Iterator;\n+  #129 = InterfaceMethodref #130.#131     // java/util/Iterator.hasNext:()Z\n+  #130 = Class              #132          // java/util/Iterator\n+  #131 = NameAndType        #133:#134     // hasNext:()Z\n+  #132 = Utf8               java/util/Iterator\n+  #133 = Utf8               hasNext\n+  #134 = Utf8               ()Z\n+  #135 = InterfaceMethodref #130.#136     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #136 = NameAndType        #137:#111     // next:()Ljava/lang/Object;\n+  #137 = Utf8               next\n+  #138 = Methodref          #4.#139       // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+  #139 = NameAndType        #140:#141     // createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+  #140 = Utf8               createNode\n+  #141 = Utf8               ()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+  #142 = Methodref          #116.#143     // org/apache/commons/configuration2/tree/ImmutableNode$Builder.addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #143 = NameAndType        #144:#145     // addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #144 = Utf8               addChild\n+  #145 = Utf8               (Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #146 = Methodref          #116.#147     // org/apache/commons/configuration2/tree/ImmutableNode$Builder.name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #147 = NameAndType        #114:#148     // name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #148 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #149 = Methodref          #4.#108       // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder.getNodeValue:()Ljava/lang/Object;\n+  #150 = Methodref          #116.#151     // org/apache/commons/configuration2/tree/ImmutableNode$Builder.value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #151 = NameAndType        #25:#152      // value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #152 = Utf8               (Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #153 = Methodref          #116.#154     // org/apache/commons/configuration2/tree/ImmutableNode$Builder.create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+  #154 = NameAndType        #155:#141     // create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+  #155 = Utf8               create\n+  #156 = Class              #157          // java/text/SimpleDateFormat\n+  #157 = Utf8               java/text/SimpleDateFormat\n+  #158 = String             #159          // yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n+  #159 = Utf8               yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n+  #160 = Methodref          #156.#92      // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n+  #161 = String             #162          // UTC\n+  #162 = Utf8               UTC\n+  #163 = Methodref          #164.#165     // java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+  #164 = Class              #166          // java/util/TimeZone\n+  #165 = NameAndType        #167:#168     // getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+  #166 = Utf8               java/util/TimeZone\n+  #167 = Utf8               getTimeZone\n+  #168 = Utf8               (Ljava/lang/String;)Ljava/util/TimeZone;\n+  #169 = Methodref          #49.#170      // java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n+  #170 = NameAndType        #171:#172     // setTimeZone:(Ljava/util/TimeZone;)V\n+  #171 = Utf8               setTimeZone\n+  #172 = Utf8               (Ljava/util/TimeZone;)V\n+  #173 = String             #174          // yyyy-MM-dd HH:mm:ss Z\n+  #174 = Utf8               yyyy-MM-dd HH:mm:ss Z\n+  #175 = Utf8               Signature\n+  #176 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;>;\n+  #177 = Utf8               Code\n+  #178 = Utf8               LineNumberTable\n+  #179 = Utf8               LocalVariableTable\n+  #180 = Utf8               this\n+  #181 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n+  #182 = Utf8               collection\n+  #183 = Utf8               list\n+  #184 = Utf8               Ljava/util/List;\n+  #185 = Utf8               v\n+  #186 = Utf8               LocalVariableTypeTable\n+  #187 = Utf8               Ljava/util/Collection<Ljava/lang/Object;>;\n+  #188 = Utf8               Ljava/util/List<Ljava/lang/Object;>;\n+  #189 = Utf8               StackMapTable\n+  #190 = Utf8               addDateValue\n+  #191 = Utf8               e\n+  #192 = Utf8               Ljava/text/ParseException;\n+  #193 = Class              #194          // java/lang/Throwable\n+  #194 = Utf8               java/lang/Throwable\n+  #195 = Utf8               addDataValue\n+  #196 = Utf8               Ljava/io/UnsupportedEncodingException;\n+  #197 = Utf8               addIntegerValue\n+  #198 = Utf8               addRealValue\n+  #199 = Utf8               addTrueValue\n+  #200 = Utf8               addFalseValue\n+  #201 = Utf8               addList\n+  #202 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder;)V\n+  #203 = Utf8               node\n+  #204 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder;\n+  #205 = Utf8               setName\n+  #206 = Utf8               nodeName\n+  #207 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;)V\n+  #208 = Utf8               child\n+  #209 = Utf8               nodeBuilder\n+  #210 = Utf8               Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+  #211 = Utf8               access$000\n+  #212 = Utf8               ()Ljava/text/DateFormat;\n+  #213 = Utf8               (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;)V\n+  #214 = Utf8               x0\n+  #215 = Utf8               Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;\n+  #216 = Utf8               <clinit>\n+  #217 = Utf8               SourceFile\n+  #218 = Utf8               XMLPropertyListConfiguration.java\n+  #219 = Utf8               InnerClasses\n+  #220 = Utf8               PListNodeBuilder\n+  #221 = Utf8               ArrayNodeBuilder\n+  #222 = Class              #223          // org/apache/commons/configuration2/tree/ImmutableNode\n+  #223 = Utf8               org/apache/commons/configuration2/tree/ImmutableNode\n+  #224 = Utf8               Builder\n+  #225 = Class              #226          // org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n+  #226 = Utf8               org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n {\n   private static final java.text.DateFormat FORMAT;\n     descriptor: Ljava/text/DateFormat;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.text.DateFormat GNUSTEP_FORMAT;\n     descriptor: Ljava/text/DateFormat;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private final java.util.Collection<org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$PListNodeBuilder> childBuilders;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #66                          // Ljava/util/Collection<Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;>;\n+    Signature: #176                         // Ljava/util/Collection<Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;>;\n \n   private java.lang.String name;\n     descriptor: Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.lang.Object value;\n     descriptor: Ljava/lang/Object;\n@@ -258,69 +258,69 @@\n \n   private org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$PListNodeBuilder();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #13                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #5                  // class java/util/LinkedList\n+         5: new           #16                 // class java/util/LinkedList\n          8: dup\n-         9: invokespecial #6                  // Method java/util/LinkedList.\"<init>\":()V\n-        12: putfield      #7                  // Field childBuilders:Ljava/util/Collection;\n+         9: invokespecial #18                 // Method java/util/LinkedList.\"<init>\":()V\n+        12: putfield      #19                 // Field childBuilders:Ljava/util/Collection;\n         15: return\n       LineNumberTable:\n         line 522: 0\n         line 539: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n \n   public void addValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field value:Ljava/lang/Object;\n+         1: getfield      #23                 // Field value:Ljava/lang/Object;\n          4: ifnonnull     15\n          7: aload_0\n          8: aload_1\n-         9: putfield      #8                  // Field value:Ljava/lang/Object;\n+         9: putfield      #23                 // Field value:Ljava/lang/Object;\n         12: goto          76\n         15: aload_0\n-        16: getfield      #8                  // Field value:Ljava/lang/Object;\n-        19: instanceof    #9                  // class java/util/Collection\n+        16: getfield      #23                 // Field value:Ljava/lang/Object;\n+        19: instanceof    #27                 // class java/util/Collection\n         22: ifeq          44\n         25: aload_0\n-        26: getfield      #8                  // Field value:Ljava/lang/Object;\n-        29: checkcast     #9                  // class java/util/Collection\n+        26: getfield      #23                 // Field value:Ljava/lang/Object;\n+        29: checkcast     #27                 // class java/util/Collection\n         32: astore_2\n         33: aload_2\n         34: aload_1\n-        35: invokeinterface #10,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n+        35: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n         40: pop\n         41: goto          76\n-        44: new           #11                 // class java/util/ArrayList\n+        44: new           #33                 // class java/util/ArrayList\n         47: dup\n-        48: invokespecial #12                 // Method java/util/ArrayList.\"<init>\":()V\n+        48: invokespecial #35                 // Method java/util/ArrayList.\"<init>\":()V\n         51: astore_2\n         52: aload_2\n         53: aload_0\n-        54: getfield      #8                  // Field value:Ljava/lang/Object;\n-        57: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        54: getfield      #23                 // Field value:Ljava/lang/Object;\n+        57: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         62: pop\n         63: aload_2\n         64: aload_1\n-        65: invokeinterface #13,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        65: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         70: pop\n         71: aload_0\n         72: aload_2\n-        73: putfield      #8                  // Field value:Ljava/lang/Object;\n+        73: putfield      #23                 // Field value:Ljava/lang/Object;\n         76: return\n       LineNumberTable:\n         line 555: 0\n         line 556: 7\n         line 557: 15\n         line 560: 25\n         line 561: 33\n@@ -348,66 +348,66 @@\n   public void addDateValue(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=5, args_size=2\n          0: aload_1\n          1: bipush        32\n-         3: invokevirtual #14                 // Method java/lang/String.indexOf:(I)I\n+         3: invokevirtual #39                 // Method java/lang/String.indexOf:(I)I\n          6: iconst_m1\n          7: if_icmpeq     40\n-        10: getstatic     #15                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n+        10: getstatic     #45                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n         13: dup\n         14: astore_2\n         15: monitorenter\n         16: aload_0\n-        17: getstatic     #15                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n+        17: getstatic     #45                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n         20: aload_1\n-        21: invokevirtual #16                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n-        24: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+        21: invokevirtual #48                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n+        24: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n         27: aload_2\n         28: monitorexit\n         29: goto          37\n         32: astore_3\n         33: aload_2\n         34: monitorexit\n         35: aload_3\n         36: athrow\n         37: goto          69\n-        40: getstatic     #3                  // Field FORMAT:Ljava/text/DateFormat;\n+        40: getstatic     #9                  // Field FORMAT:Ljava/text/DateFormat;\n         43: dup\n         44: astore_2\n         45: monitorenter\n         46: aload_0\n-        47: getstatic     #3                  // Field FORMAT:Ljava/text/DateFormat;\n+        47: getstatic     #9                  // Field FORMAT:Ljava/text/DateFormat;\n         50: aload_1\n-        51: invokevirtual #16                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n-        54: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+        51: invokevirtual #48                 // Method java/text/DateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n+        54: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n         57: aload_2\n         58: monitorexit\n         59: goto          69\n         62: astore        4\n         64: aload_2\n         65: monitorexit\n         66: aload         4\n         68: athrow\n         69: goto          95\n         72: astore_2\n-        73: new           #19                 // class java/lang/IllegalArgumentException\n+        73: new           #60                 // class java/lang/IllegalArgumentException\n         76: dup\n-        77: ldc           #20                 // String \\'%s\\' cannot be parsed to a date!\n+        77: ldc           #62                 // String \\'%s\\' cannot be parsed to a date!\n         79: iconst_1\n-        80: anewarray     #21                 // class java/lang/Object\n+        80: anewarray     #14                 // class java/lang/Object\n         83: dup\n         84: iconst_0\n         85: aload_1\n         86: aastore\n-        87: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        87: invokestatic  #64                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         90: aload_2\n-        91: invokespecial #23                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        91: invokespecial #68                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         94: athrow\n         95: return\n       Exception table:\n          from    to  target type\n             16    29    32   any\n             32    35    32   any\n             46    59    62   any\n@@ -451,24 +451,24 @@\n   public void addDataValue(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #24                 // String UTF-8\n-         4: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n-         7: invokestatic  #26                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n-        10: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         2: ldc           #71                 // String UTF-8\n+         4: invokevirtual #73                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+         7: invokestatic  #77                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n+        10: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n         13: goto          26\n         16: astore_2\n-        17: new           #28                 // class java/lang/AssertionError\n+        17: new           #85                 // class java/lang/AssertionError\n         20: dup\n         21: aload_2\n-        22: invokespecial #29                 // Method java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n+        22: invokespecial #87                 // Method java/lang/AssertionError.\"<init>\":(Ljava/lang/Object;)V\n         25: athrow\n         26: return\n       Exception table:\n          from    to  target type\n              0    13    16   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 601: 0\n@@ -488,19 +488,19 @@\n \n   public void addIntegerValue(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #30                 // class java/math/BigInteger\n+         1: new           #89                 // class java/math/BigInteger\n          4: dup\n          5: aload_1\n-         6: invokespecial #31                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n-         9: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         6: invokespecial #91                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n+         9: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n         12: return\n       LineNumberTable:\n         line 614: 0\n         line 615: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n@@ -508,19 +508,19 @@\n \n   public void addRealValue(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #32                 // class java/math/BigDecimal\n+         1: new           #94                 // class java/math/BigDecimal\n          4: dup\n          5: aload_1\n-         6: invokespecial #33                 // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-         9: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         6: invokespecial #96                 // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+         9: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n         12: return\n       LineNumberTable:\n         line 623: 0\n         line 624: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n@@ -528,32 +528,32 @@\n \n   public void addTrueValue();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #34                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-         4: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         1: getstatic     #97                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+         4: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n          7: return\n       LineNumberTable:\n         line 630: 0\n         line 631: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n \n   public void addFalseValue();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #35                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-         4: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         1: getstatic     #103                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+         4: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n          7: return\n       LineNumberTable:\n         line 637: 0\n         line 638: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n@@ -561,16 +561,16 @@\n   public void addList(org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$ArrayNodeBuilder);\n     descriptor: (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #36                 // Method org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder.getNodeValue:()Ljava/lang/Object;\n-         5: invokevirtual #17                 // Method addValue:(Ljava/lang/Object;)V\n+         2: invokevirtual #106                // Method org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder.getNodeValue:()Ljava/lang/Object;\n+         5: invokevirtual #54                 // Method addValue:(Ljava/lang/Object;)V\n          8: return\n       LineNumberTable:\n         line 646: 0\n         line 647: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n@@ -579,15 +579,15 @@\n   public void setName(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #37                 // Field name:Ljava/lang/String;\n+         2: putfield      #112                // Field name:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 655: 0\n         line 656: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n@@ -595,17 +595,17 @@\n \n   public void addChild(org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$PListNodeBuilder);\n     descriptor: (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field childBuilders:Ljava/util/Collection;\n+         1: getfield      #19                 // Field childBuilders:Ljava/util/Collection;\n          4: aload_1\n-         5: invokeinterface #10,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n+         5: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n         10: pop\n         11: return\n       LineNumberTable:\n         line 664: 0\n         line 665: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -613,46 +613,46 @@\n             0      12     1 child   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n \n   public org.apache.commons.configuration2.tree.ImmutableNode createNode();\n     descriptor: ()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n-         0: new           #38                 // class org/apache/commons/configuration2/tree/ImmutableNode$Builder\n+         0: new           #116                // class org/apache/commons/configuration2/tree/ImmutableNode$Builder\n          3: dup\n          4: aload_0\n-         5: getfield      #7                  // Field childBuilders:Ljava/util/Collection;\n-         8: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.size:()I\n-        13: invokespecial #40                 // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.\"<init>\":(I)V\n+         5: getfield      #19                 // Field childBuilders:Ljava/util/Collection;\n+         8: invokeinterface #118,  1          // InterfaceMethod java/util/Collection.size:()I\n+        13: invokespecial #122                // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.\"<init>\":(I)V\n         16: astore_1\n         17: aload_0\n-        18: getfield      #7                  // Field childBuilders:Ljava/util/Collection;\n-        21: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        18: getfield      #19                 // Field childBuilders:Ljava/util/Collection;\n+        21: invokeinterface #125,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         26: astore_2\n         27: aload_2\n-        28: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        28: invokeinterface #129,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         33: ifeq          58\n         36: aload_2\n-        37: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        42: checkcast     #44                 // class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n+        37: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        42: checkcast     #4                  // class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder\n         45: astore_3\n         46: aload_1\n         47: aload_3\n-        48: invokevirtual #45                 // Method createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n-        51: invokevirtual #46                 // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+        48: invokevirtual #138                // Method createNode:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+        51: invokevirtual #142                // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.addChild:(Lorg/apache/commons/configuration2/tree/ImmutableNode;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n         54: pop\n         55: goto          27\n         58: aload_1\n         59: aload_0\n-        60: getfield      #37                 // Field name:Ljava/lang/String;\n-        63: invokevirtual #47                 // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+        60: getfield      #112                // Field name:Ljava/lang/String;\n+        63: invokevirtual #146                // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.name:(Ljava/lang/String;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n         66: aload_0\n-        67: invokevirtual #48                 // Method getNodeValue:()Ljava/lang/Object;\n-        70: invokevirtual #49                 // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n-        73: invokevirtual #50                 // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n+        67: invokevirtual #149                // Method getNodeValue:()Ljava/lang/Object;\n+        70: invokevirtual #150                // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.value:(Ljava/lang/Object;)Lorg/apache/commons/configuration2/tree/ImmutableNode$Builder;\n+        73: invokevirtual #153                // Method org/apache/commons/configuration2/tree/ImmutableNode$Builder.create:()Lorg/apache/commons/configuration2/tree/ImmutableNode;\n         76: areturn\n       LineNumberTable:\n         line 673: 0\n         line 674: 17\n         line 675: 46\n         line 676: 55\n         line 677: 58\n@@ -670,71 +670,71 @@\n \n   protected java.lang.Object getNodeValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field value:Ljava/lang/Object;\n+         1: getfield      #23                 // Field value:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 687: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n \n   static java.text.DateFormat access$000();\n     descriptor: ()Ljava/text/DateFormat;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #3                  // Field FORMAT:Ljava/text/DateFormat;\n+         0: getstatic     #9                  // Field FORMAT:Ljava/text/DateFormat;\n          3: areturn\n       LineNumberTable:\n         line 522: 0\n \n   org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$PListNodeBuilder(org.apache.commons.configuration2.plist.XMLPropertyListConfiguration$1);\n     descriptor: (Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method \"<init>\":()V\n+         1: invokespecial #3                  // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 522: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder;\n             0       5     1    x0   Lorg/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #51                 // class java/text/SimpleDateFormat\n+         0: new           #156                // class java/text/SimpleDateFormat\n          3: dup\n-         4: ldc           #52                 // String yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n-         6: invokespecial #53                 // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n-         9: putstatic     #3                  // Field FORMAT:Ljava/text/DateFormat;\n-        12: getstatic     #3                  // Field FORMAT:Ljava/text/DateFormat;\n-        15: ldc           #54                 // String UTC\n-        17: invokestatic  #55                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-        20: invokevirtual #56                 // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n-        23: new           #51                 // class java/text/SimpleDateFormat\n+         4: ldc           #158                // String yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'\n+         6: invokespecial #160                // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n+         9: putstatic     #9                  // Field FORMAT:Ljava/text/DateFormat;\n+        12: getstatic     #9                  // Field FORMAT:Ljava/text/DateFormat;\n+        15: ldc           #161                // String UTC\n+        17: invokestatic  #163                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+        20: invokevirtual #169                // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n+        23: new           #156                // class java/text/SimpleDateFormat\n         26: dup\n-        27: ldc           #57                 // String yyyy-MM-dd HH:mm:ss Z\n-        29: invokespecial #53                 // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n-        32: putstatic     #15                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n+        27: ldc           #173                // String yyyy-MM-dd HH:mm:ss Z\n+        29: invokespecial #160                // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n+        32: putstatic     #45                 // Field GNUSTEP_FORMAT:Ljava/text/DateFormat;\n         35: return\n       LineNumberTable:\n         line 527: 0\n         line 529: 12\n         line 536: 23\n }\n SourceFile: \"XMLPropertyListConfiguration.java\"\n InnerClasses:\n-  private static #64= #44 of #1;          // PListNodeBuilder=class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder of class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n-  private static #102= #101 of #1;        // ArrayNodeBuilder=class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder of class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n-  public static final #114= #38 of #164;  // Builder=class org/apache/commons/configuration2/tree/ImmutableNode$Builder of class org/apache/commons/configuration2/tree/ImmutableNode\n-  static #121;                            // class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n+  private static #220= #4 of #1;          // PListNodeBuilder=class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$PListNodeBuilder of class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n+  private static #221= #107 of #1;        // ArrayNodeBuilder=class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$ArrayNodeBuilder of class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration\n+  public static final #224= #116 of #222; // Builder=class org/apache/commons/configuration2/tree/ImmutableNode$Builder of class org/apache/commons/configuration2/tree/ImmutableNode\n+  static #225;                            // class org/apache/commons/configuration2/plist/XMLPropertyListConfiguration$1\n"}]}
