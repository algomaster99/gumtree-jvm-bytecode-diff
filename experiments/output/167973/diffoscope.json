{"diffoscope-json-version": 1, "source1": "first/HexDump.class", "source2": "second/HexDump.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum 0ba47e709301ec561f6a99c4475a8b2761dbfccff19e5e739e315b7c7ffae50d\n+  SHA-256 checksum cd656fa2e76aacf5bca94595fcb3741d4930392cfaa3bda2adfc27fb18bc5b24\n   Compiled from \"HexDump.java\"\n public class org.apache.commons.io.HexDump\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #29                         // org/apache/commons/io/HexDump\n   super_class: #30                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-    #1 = Methodref          #30.#73       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #74           // java/lang/ArrayIndexOutOfBoundsException\n-    #3 = Class              #75           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#73        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = String             #76           // illegal index:\n-    #6 = Methodref          #3.#77        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #7 = Methodref          #3.#78        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #8 = String             #79           //  into array of length\n-    #9 = Methodref          #3.#80        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Methodref          #2.#81        // java/lang/ArrayIndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Class              #82           // java/lang/IllegalArgumentException\n-   #12 = String             #83           // cannot write to nullstream\n-   #13 = Methodref          #11.#81       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Methodref          #3.#84        // java/lang/StringBuilder.\"<init>\":(I)V\n-   #15 = Methodref          #29.#85       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #3.#86        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #29.#87       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #18 = String             #88           //\n-   #19 = Fieldref           #29.#89       // org/apache/commons/io/HexDump.EOL:Ljava/lang/String;\n-   #20 = Methodref          #90.#91       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #21 = Methodref          #92.#93       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #22 = Methodref          #94.#95       // java/io/OutputStream.write:([B)V\n-   #23 = Methodref          #94.#96       // java/io/OutputStream.flush:()V\n-   #24 = Methodref          #3.#97        // java/lang/StringBuilder.setLength:(I)V\n-   #25 = Fieldref           #29.#98       // org/apache/commons/io/HexDump._hexcodes:[C\n-   #26 = Fieldref           #29.#99       // org/apache/commons/io/HexDump._shifts:[I\n-   #27 = String             #100          // line.separator\n-   #28 = Methodref          #101.#102     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Class              #103          // org/apache/commons/io/HexDump\n-   #30 = Class              #104          // java/lang/Object\n+    #1 = Methodref          #30.#72       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #73           // java/lang/ArrayIndexOutOfBoundsException\n+    #3 = Class              #74           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#72        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = String             #75           // illegal index:\n+    #6 = Methodref          #3.#76        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #7 = Methodref          #3.#77        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+    #8 = String             #78           //  into array of length\n+    #9 = Methodref          #3.#79        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #10 = Methodref          #2.#80        // java/lang/ArrayIndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #11 = Class              #81           // java/lang/IllegalArgumentException\n+   #12 = String             #82           // cannot write to nullstream\n+   #13 = Methodref          #11.#80       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Methodref          #3.#83        // java/lang/StringBuilder.\"<init>\":(I)V\n+   #15 = Methodref          #29.#84       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #3.#85        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #29.#86       // org/apache/commons/io/HexDump.dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #18 = String             #87           //\n+   #19 = Fieldref           #29.#88       // org/apache/commons/io/HexDump.EOL:Ljava/lang/String;\n+   #20 = Methodref          #89.#90       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #21 = Methodref          #91.#92       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #22 = Methodref          #93.#94       // java/io/OutputStream.write:([B)V\n+   #23 = Methodref          #93.#95       // java/io/OutputStream.flush:()V\n+   #24 = Methodref          #3.#96        // java/lang/StringBuilder.setLength:(I)V\n+   #25 = Fieldref           #29.#97       // org/apache/commons/io/HexDump._hexcodes:[C\n+   #26 = Fieldref           #29.#98       // org/apache/commons/io/HexDump._shifts:[I\n+   #27 = String             #99           // line.separator\n+   #28 = Methodref          #100.#101     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Class              #102          // org/apache/commons/io/HexDump\n+   #30 = Class              #103          // java/lang/Object\n    #31 = Utf8               EOL\n    #32 = Utf8               Ljava/lang/String;\n    #33 = Utf8               _hexcodes\n    #34 = Utf8               [C\n    #35 = Utf8               _shifts\n    #36 = Utf8               [I\n    #37 = Utf8               <init>\n@@ -64,81 +64,80 @@\n    #54 = Utf8               stream\n    #55 = Utf8               Ljava/io/OutputStream;\n    #56 = Utf8               index\n    #57 = Utf8               display_offset\n    #58 = Utf8               buffer\n    #59 = Utf8               Ljava/lang/StringBuilder;\n    #60 = Utf8               StackMapTable\n-   #61 = Class              #75           // java/lang/StringBuilder\n-   #62 = Utf8               Exceptions\n-   #63 = Class              #105          // java/io/IOException\n-   #64 = Utf8               (Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #65 = Utf8               _lbuffer\n-   #66 = Utf8               value\n-   #67 = Utf8               (Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #68 = Utf8               _cbuffer\n-   #69 = Utf8               B\n-   #70 = Utf8               <clinit>\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               HexDump.java\n-   #73 = NameAndType        #37:#38       // \"<init>\":()V\n-   #74 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-   #75 = Utf8               java/lang/StringBuilder\n-   #76 = Utf8               illegal index:\n-   #77 = NameAndType        #106:#107     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #78 = NameAndType        #106:#108     // append:(I)Ljava/lang/StringBuilder;\n-   #79 = Utf8                into array of length\n-   #80 = NameAndType        #109:#110     // toString:()Ljava/lang/String;\n-   #81 = NameAndType        #37:#111      // \"<init>\":(Ljava/lang/String;)V\n-   #82 = Utf8               java/lang/IllegalArgumentException\n-   #83 = Utf8               cannot write to nullstream\n-   #84 = NameAndType        #37:#112      // \"<init>\":(I)V\n-   #85 = NameAndType        #44:#64       // dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #106:#113     // append:(C)Ljava/lang/StringBuilder;\n-   #87 = NameAndType        #44:#67       // dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n-   #88 = Utf8\n-   #89 = NameAndType        #31:#32       // EOL:Ljava/lang/String;\n-   #90 = Class              #114          // java/nio/charset/Charset\n-   #91 = NameAndType        #115:#116     // defaultCharset:()Ljava/nio/charset/Charset;\n-   #92 = Class              #117          // java/lang/String\n-   #93 = NameAndType        #118:#119     // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #94 = Class              #120          // java/io/OutputStream\n-   #95 = NameAndType        #121:#122     // write:([B)V\n-   #96 = NameAndType        #123:#38      // flush:()V\n-   #97 = NameAndType        #124:#112     // setLength:(I)V\n-   #98 = NameAndType        #33:#34       // _hexcodes:[C\n-   #99 = NameAndType        #35:#36       // _shifts:[I\n-  #100 = Utf8               line.separator\n-  #101 = Class              #125          // java/lang/System\n-  #102 = NameAndType        #126:#127     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #103 = Utf8               org/apache/commons/io/HexDump\n-  #104 = Utf8               java/lang/Object\n-  #105 = Utf8               java/io/IOException\n-  #106 = Utf8               append\n-  #107 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #109 = Utf8               toString\n-  #110 = Utf8               ()Ljava/lang/String;\n-  #111 = Utf8               (Ljava/lang/String;)V\n-  #112 = Utf8               (I)V\n-  #113 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #114 = Utf8               java/nio/charset/Charset\n-  #115 = Utf8               defaultCharset\n-  #116 = Utf8               ()Ljava/nio/charset/Charset;\n-  #117 = Utf8               java/lang/String\n-  #118 = Utf8               getBytes\n-  #119 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #120 = Utf8               java/io/OutputStream\n-  #121 = Utf8               write\n-  #122 = Utf8               ([B)V\n-  #123 = Utf8               flush\n-  #124 = Utf8               setLength\n-  #125 = Utf8               java/lang/System\n-  #126 = Utf8               getProperty\n-  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #61 = Utf8               Exceptions\n+   #62 = Class              #104          // java/io/IOException\n+   #63 = Utf8               (Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #64 = Utf8               _lbuffer\n+   #65 = Utf8               value\n+   #66 = Utf8               (Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #67 = Utf8               _cbuffer\n+   #68 = Utf8               B\n+   #69 = Utf8               <clinit>\n+   #70 = Utf8               SourceFile\n+   #71 = Utf8               HexDump.java\n+   #72 = NameAndType        #37:#38       // \"<init>\":()V\n+   #73 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+   #74 = Utf8               java/lang/StringBuilder\n+   #75 = Utf8               illegal index:\n+   #76 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #77 = NameAndType        #105:#107     // append:(I)Ljava/lang/StringBuilder;\n+   #78 = Utf8                into array of length\n+   #79 = NameAndType        #108:#109     // toString:()Ljava/lang/String;\n+   #80 = NameAndType        #37:#110      // \"<init>\":(Ljava/lang/String;)V\n+   #81 = Utf8               java/lang/IllegalArgumentException\n+   #82 = Utf8               cannot write to nullstream\n+   #83 = NameAndType        #37:#111      // \"<init>\":(I)V\n+   #84 = NameAndType        #44:#63       // dump:(Ljava/lang/StringBuilder;J)Ljava/lang/StringBuilder;\n+   #85 = NameAndType        #105:#112     // append:(C)Ljava/lang/StringBuilder;\n+   #86 = NameAndType        #44:#66       // dump:(Ljava/lang/StringBuilder;B)Ljava/lang/StringBuilder;\n+   #87 = Utf8\n+   #88 = NameAndType        #31:#32       // EOL:Ljava/lang/String;\n+   #89 = Class              #113          // java/nio/charset/Charset\n+   #90 = NameAndType        #114:#115     // defaultCharset:()Ljava/nio/charset/Charset;\n+   #91 = Class              #116          // java/lang/String\n+   #92 = NameAndType        #117:#118     // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #93 = Class              #119          // java/io/OutputStream\n+   #94 = NameAndType        #120:#121     // write:([B)V\n+   #95 = NameAndType        #122:#38      // flush:()V\n+   #96 = NameAndType        #123:#111     // setLength:(I)V\n+   #97 = NameAndType        #33:#34       // _hexcodes:[C\n+   #98 = NameAndType        #35:#36       // _shifts:[I\n+   #99 = Utf8               line.separator\n+  #100 = Class              #124          // java/lang/System\n+  #101 = NameAndType        #125:#126     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #102 = Utf8               org/apache/commons/io/HexDump\n+  #103 = Utf8               java/lang/Object\n+  #104 = Utf8               java/io/IOException\n+  #105 = Utf8               append\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #108 = Utf8               toString\n+  #109 = Utf8               ()Ljava/lang/String;\n+  #110 = Utf8               (Ljava/lang/String;)V\n+  #111 = Utf8               (I)V\n+  #112 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #113 = Utf8               java/nio/charset/Charset\n+  #114 = Utf8               defaultCharset\n+  #115 = Utf8               ()Ljava/nio/charset/Charset;\n+  #116 = Utf8               java/lang/String\n+  #117 = Utf8               getBytes\n+  #118 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #119 = Utf8               java/io/OutputStream\n+  #120 = Utf8               write\n+  #121 = Utf8               ([B)V\n+  #122 = Utf8               flush\n+  #123 = Utf8               setLength\n+  #124 = Utf8               java/lang/System\n+  #125 = Utf8               getProperty\n+  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n {\n   public static final java.lang.String EOL;\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final char[] _hexcodes;\n     descriptor: [C\n"}]}
