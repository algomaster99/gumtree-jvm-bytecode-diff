{"diffoscope-json-version": 1, "source1": "first/UncheckedFilterWriter.class", "source2": "second/UncheckedFilterWriter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,61 +9,61 @@\n \n public final class UncheckedFilterWriter extends FilterWriter\n {\n     public static UncheckedFilterWriter.Builder builder() {\n         return new UncheckedFilterWriter.Builder();\n     }\n     \n-    private UncheckedFilterWriter(final Writer writer) {\n-        super(writer);\n+    private UncheckedFilterWriter(final Writer out) {\n+        super(out);\n     }\n     \n     @Override\n     public Writer append(final char c) throws UncheckedIOException {\n-        return (Writer)Uncheck.apply(x$0 -> super.append(x$0), (Object)Character.valueOf(c));\n+        return (Writer)Uncheck.apply(c -> super.append(c), (Object)Character.valueOf(c));\n     }\n     \n     @Override\n-    public Writer append(final CharSequence csq) throws UncheckedIOException {\n-        return (Writer)Uncheck.apply(x$0 -> super.append(x$0), (Object)csq);\n+    public Writer append(final CharSequence charSequence) throws UncheckedIOException {\n+        return (Writer)Uncheck.apply(csq -> super.append(csq), (Object)charSequence);\n     }\n     \n     @Override\n-    public Writer append(final CharSequence csq, final int start, final int end) throws UncheckedIOException {\n-        return (Writer)Uncheck.apply((x$0, x$1, x$2) -> super.append(x$0, x$1, x$2), (Object)csq, (Object)Integer.valueOf(start), (Object)Integer.valueOf(end));\n+    public Writer append(final CharSequence charSequence, final int i, final int j) throws UncheckedIOException {\n+        return (Writer)Uncheck.apply((csq, start, end) -> super.append(csq, start, end), (Object)charSequence, (Object)Integer.valueOf(i), (Object)Integer.valueOf(j));\n     }\n     \n     @Override\n     public void close() throws UncheckedIOException {\n         Uncheck.run(() -> super.close());\n     }\n     \n     @Override\n     public void flush() throws UncheckedIOException {\n         Uncheck.run(() -> super.flush());\n     }\n     \n     @Override\n-    public void write(final char[] cbuf) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.write(x$0), (Object)cbuf);\n+    public void write(final char[] array) throws UncheckedIOException {\n+        Uncheck.accept(cbuf -> super.write(cbuf), (Object)array);\n     }\n     \n     @Override\n-    public void write(final char[] cbuf, final int off, final int len) throws UncheckedIOException {\n-        Uncheck.accept((x$0, x$1, x$2) -> super.write(x$0, x$1, x$2), (Object)cbuf, (Object)Integer.valueOf(off), (Object)Integer.valueOf(len));\n+    public void write(final char[] array, final int i, final int j) throws UncheckedIOException {\n+        Uncheck.accept((cbuf, off, len) -> super.write(cbuf, off, len), (Object)array, (Object)Integer.valueOf(i), (Object)Integer.valueOf(j));\n     }\n     \n     @Override\n-    public void write(final int c) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.write(x$0), (Object)Integer.valueOf(c));\n+    public void write(final int i) throws UncheckedIOException {\n+        Uncheck.accept(c -> super.write(c), (Object)Integer.valueOf(i));\n     }\n     \n     @Override\n-    public void write(final String str) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.write(x$0), (Object)str);\n+    public void write(final String s) throws UncheckedIOException {\n+        Uncheck.accept(str -> super.write(str), (Object)s);\n     }\n     \n     @Override\n-    public void write(final String str, final int off, final int len) throws UncheckedIOException {\n-        Uncheck.accept((x$0, x$1, x$2) -> super.write(x$0, x$1, x$2), (Object)str, (Object)Integer.valueOf(off), (Object)Integer.valueOf(len));\n+    public void write(final String s, final int i, final int j) throws UncheckedIOException {\n+        Uncheck.accept((str, off, len) -> super.write(str, off, len), (Object)s, (Object)Integer.valueOf(i), (Object)Integer.valueOf(j));\n     }\n }\n"}]}
