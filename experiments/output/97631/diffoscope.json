{"diffoscope-json-version": 1, "source1": "first/XmlMetaWriter.class", "source2": "second/XmlMetaWriter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -23,14 +23,18 @@\n public final class XmlMetaWriter\n {\n     private static final Pattern FILEPATH_CONVERSION;\n     private static final String XML_TAG_NAME = \"name\";\n     private static final String XML_TAG_DESCRIPTION = \"description\";\n     private static final String DEFAULT_FILE_SEPARATOR = \"/\";\n     \n+    static {\n+        FILEPATH_CONVERSION = Pattern.compile(\"\\\\.\");\n+    }\n+    \n     private XmlMetaWriter() {\n     }\n     \n     public static void write(final ModuleDetails moduleDetails) throws TransformerException, ParserConfigurationException {\n         final DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();\n         dbFactory.setAttribute(\"http://javax.xml.XMLConstants/property/accessExternalDTD\", \"\");\n         dbFactory.setAttribute(\"http://javax.xml.XMLConstants/property/accessExternalSchema\", \"\");\n@@ -89,35 +93,31 @@\n     \n     private static void writeToFile(final Document document, final ModuleDetails moduleDetails) throws TransformerException {\n         String fileSeparator = \"/\";\n         if (System.getProperty(\"os.name\").toLowerCase(Locale.ENGLISH).contains(\"win\")) {\n             fileSeparator = \"\\\\\" + fileSeparator;\n         }\n         final String xmlExtension = \".xml\";\n-        final String rootOutputPath = System.getProperty(\"user.dir\") + \"/src/main/resources\";\n+        final String rootOutputPath = String.valueOf(System.getProperty(\"user.dir\")) + \"/src/main/resources\";\n         String modifiedPath;\n         if (moduleDetails.getFullQualifiedName().startsWith(\"com.puppycrawl.tools.checkstyle\")) {\n             final String moduleFilePath = XmlMetaWriter.FILEPATH_CONVERSION.matcher(moduleDetails.getFullQualifiedName()).replaceAll(fileSeparator);\n             final String checkstyleString = \"checkstyle\";\n             final int indexOfCheckstyle = moduleFilePath.indexOf(\"checkstyle\") + \"checkstyle\".length();\n-            modifiedPath = rootOutputPath + \"/\" + moduleFilePath.substring(0, indexOfCheckstyle) + \"/meta/\" + moduleFilePath.substring(indexOfCheckstyle + 1) + \".xml\";\n+            modifiedPath = String.valueOf(rootOutputPath) + \"/\" + moduleFilePath.substring(0, indexOfCheckstyle) + \"/meta/\" + moduleFilePath.substring(indexOfCheckstyle + 1) + \".xml\";\n         }\n         else {\n             String moduleName = moduleDetails.getName();\n             if (moduleDetails.getModuleType() == ModuleType.CHECK) {\n-                moduleName += \"Check\";\n+                moduleName = String.valueOf(moduleName) + \"Check\";\n             }\n-            modifiedPath = rootOutputPath + \"/checkstylemeta-\" + moduleName + \".xml\";\n+            modifiedPath = String.valueOf(rootOutputPath) + \"/checkstylemeta-\" + moduleName + \".xml\";\n         }\n         final TransformerFactory transformerFactory = TransformerFactory.newInstance();\n         final Transformer transformer = transformerFactory.newTransformer();\n         transformer.setOutputProperty(\"indent\", \"yes\");\n         transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\", \"4\");\n         final DOMSource source = new DOMSource(document);\n         final StreamResult result = new StreamResult(new File(modifiedPath));\n         transformer.transform(source, result);\n     }\n-    \n-    static {\n-        FILEPATH_CONVERSION = Pattern.compile(\"\\\\.\");\n-    }\n }\n"}]}
