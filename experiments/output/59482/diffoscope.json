{"diffoscope-json-version": 1, "source1": "first/EventUtils.class", "source2": "second/EventUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,22 +8,22 @@\n \n public class EventUtils\n {\n     public static <L> void addEventListener(final Object eventSource, final Class<L> listenerType, final L listener) {\n         try {\n             MethodUtils.invokeMethod(eventSource, \"add\" + listenerType.getSimpleName(), new Object[] { listener });\n         }\n-        catch (final NoSuchMethodException e) {\n+        catch (final NoSuchMethodException ex) {\n             throw new IllegalArgumentException(\"Class \" + eventSource.getClass().getName() + \" does not have a public add\" + listenerType.getSimpleName() + \" method which takes a parameter of type \" + listenerType.getName() + \".\");\n         }\n-        catch (final IllegalAccessException e2) {\n+        catch (final IllegalAccessException ex2) {\n             throw new IllegalArgumentException(\"Class \" + eventSource.getClass().getName() + \" does not have an accessible add\" + listenerType.getSimpleName() + \" method which takes a parameter of type \" + listenerType.getName() + \".\");\n         }\n-        catch (final InvocationTargetException e3) {\n-            throw new RuntimeException(\"Unable to add listener.\", e3.getCause());\n+        catch (final InvocationTargetException e) {\n+            throw new RuntimeException(\"Unable to add listener.\", e.getCause());\n         }\n     }\n     \n     public static <L> void bindEventsToMethod(final Object target, final String methodName, final Object eventSource, final Class<L> listenerType, final String... eventTypes) {\n         final L listener = listenerType.cast(Proxy.newProxyInstance(target.getClass().getClassLoader(), (Class<?>[])new Class[] { listenerType }, (InvocationHandler)new EventUtils.EventBindingInvocationHandler(target, methodName, eventTypes)));\n         addEventListener(eventSource, listenerType, listener);\n     }\n"}]}
