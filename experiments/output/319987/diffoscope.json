{"diffoscope-json-version": 1, "source1": "first/BigIntegerParser.class", "source2": "second/BigIntegerParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,154 +1,154 @@\n-  SHA-256 checksum f62442810dbe39655c0268e2360b753f3985b4906f3e5615b992be3683e83c49\n+  SHA-256 checksum 9781a1fe49d25e607eeb58dd60e4961d423f1c8c8743dd34d19f225036cc0904\n   Compiled from \"BigIntegerParser.java\"\n public final class com.fasterxml.jackson.core.io.BigIntegerParser\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #20                         // com/fasterxml/jackson/core/io/BigIntegerParser\n-  super_class: #21                        // java/lang/Object\n+  this_class: #60                         // com/fasterxml/jackson/core/io/BigIntegerParser\n+  super_class: #4                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Class              #43            // com/fasterxml/jackson/core/io/BigDecimalParser\n-   #2 = Methodref          #21.#44        // java/lang/Object.\"<init>\":()V\n-   #3 = Methodref          #45.#46        // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n-   #4 = Class              #47            // java/lang/NumberFormatException\n-   #5 = Methodref          #37.#48        // java/lang/String.length:()I\n-   #6 = Class              #49            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#44         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = Methodref          #37.#50        // java/lang/String.substring:(II)Ljava/lang/String;\n-   #9 = Methodref          #6.#51         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #10 = String             #52            //  [truncated]\n-  #11 = Methodref          #6.#53         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #12 = String             #54            // Value \\\"\n-  #13 = String             #55            // \\\" can not be represented as `java.math.BigInteger`, reason:\n-  #14 = Methodref          #4.#56         // java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n-  #15 = Methodref          #4.#57         // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Methodref          #45.#58        // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n-  #17 = String             #59            // \\\" can not be represented as `java.math.BigInteger` with radix\n-  #18 = Methodref          #6.#60         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #19 = String             #61            // , reason:\n-  #20 = Class              #62            // com/fasterxml/jackson/core/io/BigIntegerParser\n-  #21 = Class              #63            // java/lang/Object\n-  #22 = Utf8               <init>\n-  #23 = Utf8               ()V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               LocalVariableTable\n-  #27 = Utf8               this\n-  #28 = Utf8               Lcom/fasterxml/jackson/core/io/BigIntegerParser;\n-  #29 = Utf8               parseWithFastParser\n-  #30 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #31 = Utf8               reportNum\n-  #32 = Utf8               Ljava/lang/String;\n-  #33 = Utf8               nfe\n-  #34 = Utf8               Ljava/lang/NumberFormatException;\n-  #35 = Utf8               valueStr\n-  #36 = Utf8               StackMapTable\n-  #37 = Class              #64            // java/lang/String\n-  #38 = Utf8               (Ljava/lang/String;I)Ljava/math/BigInteger;\n-  #39 = Utf8               radix\n-  #40 = Utf8               I\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               BigIntegerParser.java\n-  #43 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n-  #44 = NameAndType        #22:#23        // \"<init>\":()V\n-  #45 = Class              #65            // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser\n-  #46 = NameAndType        #66:#67        // parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n-  #47 = Utf8               java/lang/NumberFormatException\n-  #48 = NameAndType        #68:#69        // length:()I\n-  #49 = Utf8               java/lang/StringBuilder\n-  #50 = NameAndType        #70:#71        // substring:(II)Ljava/lang/String;\n-  #51 = NameAndType        #72:#73        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #52 = Utf8                [truncated]\n-  #53 = NameAndType        #74:#75        // toString:()Ljava/lang/String;\n-  #54 = Utf8               Value \\\"\n-  #55 = Utf8               \\\" can not be represented as `java.math.BigInteger`, reason:\n-  #56 = NameAndType        #76:#75        // getMessage:()Ljava/lang/String;\n-  #57 = NameAndType        #22:#77        // \"<init>\":(Ljava/lang/String;)V\n-  #58 = NameAndType        #66:#78        // parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n-  #59 = Utf8               \\\" can not be represented as `java.math.BigInteger` with radix\n-  #60 = NameAndType        #72:#79        // append:(I)Ljava/lang/StringBuilder;\n-  #61 = Utf8               , reason:\n-  #62 = Utf8               com/fasterxml/jackson/core/io/BigIntegerParser\n-  #63 = Utf8               java/lang/Object\n-  #64 = Utf8               java/lang/String\n-  #65 = Utf8               ch/randelshofer/fastdoubleparser/JavaBigIntegerParser\n-  #66 = Utf8               parseBigInteger\n-  #67 = Utf8               (Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n-  #68 = Utf8               length\n-  #69 = Utf8               ()I\n-  #70 = Utf8               substring\n-  #71 = Utf8               (II)Ljava/lang/String;\n-  #72 = Utf8               append\n-  #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #74 = Utf8               toString\n-  #75 = Utf8               ()Ljava/lang/String;\n-  #76 = Utf8               getMessage\n-  #77 = Utf8               (Ljava/lang/String;)V\n-  #78 = Utf8               (Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n-  #79 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #1 = Class              #2             // com/fasterxml/jackson/core/io/BigDecimalParser\n+   #2 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n+   #3 = Methodref          #4.#5          // java/lang/Object.\"<init>\":()V\n+   #4 = Class              #6             // java/lang/Object\n+   #5 = NameAndType        #7:#8          // \"<init>\":()V\n+   #6 = Utf8               java/lang/Object\n+   #7 = Utf8               <init>\n+   #8 = Utf8               ()V\n+   #9 = Methodref          #10.#11        // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n+  #10 = Class              #12            // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser\n+  #11 = NameAndType        #13:#14        // parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n+  #12 = Utf8               ch/randelshofer/fastdoubleparser/JavaBigIntegerParser\n+  #13 = Utf8               parseBigInteger\n+  #14 = Utf8               (Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n+  #15 = Class              #16            // java/lang/NumberFormatException\n+  #16 = Utf8               java/lang/NumberFormatException\n+  #17 = Methodref          #18.#19        // java/lang/String.length:()I\n+  #18 = Class              #20            // java/lang/String\n+  #19 = NameAndType        #21:#22        // length:()I\n+  #20 = Utf8               java/lang/String\n+  #21 = Utf8               length\n+  #22 = Utf8               ()I\n+  #23 = Class              #24            // java/lang/StringBuilder\n+  #24 = Utf8               java/lang/StringBuilder\n+  #25 = Methodref          #23.#5         // java/lang/StringBuilder.\"<init>\":()V\n+  #26 = Methodref          #18.#27        // java/lang/String.substring:(II)Ljava/lang/String;\n+  #27 = NameAndType        #28:#29        // substring:(II)Ljava/lang/String;\n+  #28 = Utf8               substring\n+  #29 = Utf8               (II)Ljava/lang/String;\n+  #30 = Methodref          #23.#31        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #31 = NameAndType        #32:#33        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #32 = Utf8               append\n+  #33 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = String             #35            //  [truncated]\n+  #35 = Utf8                [truncated]\n+  #36 = Methodref          #23.#37        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #37 = NameAndType        #38:#39        // toString:()Ljava/lang/String;\n+  #38 = Utf8               toString\n+  #39 = Utf8               ()Ljava/lang/String;\n+  #40 = String             #41            // Value \\\"\n+  #41 = Utf8               Value \\\"\n+  #42 = String             #43            // \\\" can not be represented as `java.math.BigInteger`, reason:\n+  #43 = Utf8               \\\" can not be represented as `java.math.BigInteger`, reason:\n+  #44 = Methodref          #15.#45        // java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n+  #45 = NameAndType        #46:#39        // getMessage:()Ljava/lang/String;\n+  #46 = Utf8               getMessage\n+  #47 = Methodref          #15.#48        // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #48 = NameAndType        #7:#49         // \"<init>\":(Ljava/lang/String;)V\n+  #49 = Utf8               (Ljava/lang/String;)V\n+  #50 = Methodref          #10.#51        // ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n+  #51 = NameAndType        #13:#52        // parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n+  #52 = Utf8               (Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n+  #53 = String             #54            // \\\" can not be represented as `java.math.BigInteger` with radix\n+  #54 = Utf8               \\\" can not be represented as `java.math.BigInteger` with radix\n+  #55 = Methodref          #23.#56        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #56 = NameAndType        #32:#57        // append:(I)Ljava/lang/StringBuilder;\n+  #57 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #58 = String             #59            // , reason:\n+  #59 = Utf8               , reason:\n+  #60 = Class              #61            // com/fasterxml/jackson/core/io/BigIntegerParser\n+  #61 = Utf8               com/fasterxml/jackson/core/io/BigIntegerParser\n+  #62 = Utf8               Code\n+  #63 = Utf8               LineNumberTable\n+  #64 = Utf8               LocalVariableTable\n+  #65 = Utf8               this\n+  #66 = Utf8               Lcom/fasterxml/jackson/core/io/BigIntegerParser;\n+  #67 = Utf8               parseWithFastParser\n+  #68 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #69 = Utf8               reportNum\n+  #70 = Utf8               Ljava/lang/String;\n+  #71 = Utf8               nfe\n+  #72 = Utf8               Ljava/lang/NumberFormatException;\n+  #73 = Utf8               valueStr\n+  #74 = Utf8               StackMapTable\n+  #75 = Utf8               (Ljava/lang/String;I)Ljava/math/BigInteger;\n+  #76 = Utf8               radix\n+  #77 = Utf8               I\n+  #78 = Utf8               SourceFile\n+  #79 = Utf8               BigIntegerParser.java\n {\n   private com.fasterxml.jackson.core.io.BigIntegerParser();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 17: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/io/BigIntegerParser;\n \n   public static java.math.BigInteger parseWithFastParser(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #3                  // Method ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n+         1: invokestatic  #9                  // Method ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;)Ljava/math/BigInteger;\n          4: areturn\n          5: astore_1\n          6: aload_0\n-         7: invokevirtual #5                  // Method java/lang/String.length:()I\n+         7: invokevirtual #17                 // Method java/lang/String.length:()I\n         10: sipush        1000\n         13: if_icmpgt     20\n         16: aload_0\n         17: goto          46\n-        20: new           #6                  // class java/lang/StringBuilder\n+        20: new           #23                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        24: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n         27: aload_0\n         28: iconst_0\n         29: sipush        1000\n-        32: invokevirtual #8                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        35: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: ldc           #10                 // String  [truncated]\n-        40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        43: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        32: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: ldc           #34                 // String  [truncated]\n+        40: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         46: astore_2\n-        47: new           #4                  // class java/lang/NumberFormatException\n+        47: new           #15                 // class java/lang/NumberFormatException\n         50: dup\n-        51: new           #6                  // class java/lang/StringBuilder\n+        51: new           #23                 // class java/lang/StringBuilder\n         54: dup\n-        55: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        58: ldc           #12                 // String Value \\\"\n-        60: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        58: ldc           #40                 // String Value \\\"\n+        60: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: aload_2\n-        64: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #13                 // String \\\" can not be represented as `java.math.BigInteger`, reason:\n-        69: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: ldc           #42                 // String \\\" can not be represented as `java.math.BigInteger`, reason:\n+        69: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         72: aload_1\n-        73: invokevirtual #14                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n-        76: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        79: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        82: invokespecial #15                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        73: invokevirtual #44                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n+        76: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        79: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        82: invokespecial #47                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         85: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 21: 0\n         line 22: 5\n@@ -173,55 +173,55 @@\n   public static java.math.BigInteger parseWithFastParser(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #16                 // Method ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n+         2: invokestatic  #50                 // Method ch/randelshofer/fastdoubleparser/JavaBigIntegerParser.parseBigInteger:(Ljava/lang/CharSequence;I)Ljava/math/BigInteger;\n          5: areturn\n          6: astore_2\n          7: aload_0\n-         8: invokevirtual #5                  // Method java/lang/String.length:()I\n+         8: invokevirtual #17                 // Method java/lang/String.length:()I\n         11: sipush        1000\n         14: if_icmpgt     21\n         17: aload_0\n         18: goto          47\n-        21: new           #6                  // class java/lang/StringBuilder\n+        21: new           #23                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        25: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n         28: aload_0\n         29: iconst_0\n         30: sipush        1000\n-        33: invokevirtual #8                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: ldc           #10                 // String  [truncated]\n-        41: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        44: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokevirtual #26                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        36: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        39: ldc           #34                 // String  [truncated]\n+        41: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         47: astore_3\n-        48: new           #4                  // class java/lang/NumberFormatException\n+        48: new           #15                 // class java/lang/NumberFormatException\n         51: dup\n-        52: new           #6                  // class java/lang/StringBuilder\n+        52: new           #23                 // class java/lang/StringBuilder\n         55: dup\n-        56: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        59: ldc           #12                 // String Value \\\"\n-        61: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        59: ldc           #40                 // String Value \\\"\n+        61: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         64: aload_3\n-        65: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        68: ldc           #17                 // String \\\" can not be represented as `java.math.BigInteger` with radix\n-        70: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: ldc           #53                 // String \\\" can not be represented as `java.math.BigInteger` with radix\n+        70: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         73: iload_1\n-        74: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: ldc           #19                 // String , reason:\n-        79: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        74: invokevirtual #55                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        77: ldc           #58                 // String , reason:\n+        79: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         82: aload_2\n-        83: invokevirtual #14                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n-        86: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        92: invokespecial #15                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        83: invokevirtual #44                 // Method java/lang/NumberFormatException.getMessage:()Ljava/lang/String;\n+        86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        89: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        92: invokespecial #47                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         95: athrow\n       Exception table:\n          from    to  target type\n              0     5     6   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 32: 0\n         line 33: 6\n"}]}
