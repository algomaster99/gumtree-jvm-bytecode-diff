{"diffoscope-json-version": 1, "source1": "first/Iterators.class", "source2": "second/Iterators.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum b7ee540ee577b5b43db12539a9bf109d911057a11f03cc2a5c7d42b84c7f73c6\n+  SHA-256 checksum 3b67be5d19ac89af984b93850025abf2c19a42d6aced16e8c578893f29da00de\n   Compiled from \"Iterators.java\"\n public class org.apache.commons.compress.utils.Iterators\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/compress/utils/Iterators\n-  super_class: #7                         // java/lang/Object\n+  this_class: #29                         // org/apache/commons/compress/utils/Iterators\n+  super_class: #24                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #19.#20        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #2 = InterfaceMethodref #21.#22        // java/util/Iterator.hasNext:()Z\n-   #3 = InterfaceMethodref #21.#23        // java/util/Iterator.next:()Ljava/lang/Object;\n-   #4 = InterfaceMethodref #24.#25        // java/util/Collection.add:(Ljava/lang/Object;)Z\n-   #5 = Methodref          #7.#26         // java/lang/Object.\"<init>\":()V\n-   #6 = Class              #27            // org/apache/commons/compress/utils/Iterators\n-   #7 = Class              #28            // java/lang/Object\n-   #8 = Utf8               addAll\n-   #9 = Utf8               (Ljava/util/Collection;Ljava/util/Iterator;)Z\n-  #10 = Utf8               Code\n-  #11 = Utf8               LineNumberTable\n-  #12 = Utf8               StackMapTable\n-  #13 = Utf8               Signature\n-  #14 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;Ljava/util/Iterator<+TT;>;)Z\n-  #15 = Utf8               <init>\n-  #16 = Utf8               ()V\n-  #17 = Utf8               SourceFile\n-  #18 = Utf8               Iterators.java\n-  #19 = Class              #29            // java/util/Objects\n-  #20 = NameAndType        #30:#31        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #21 = Class              #32            // java/util/Iterator\n-  #22 = NameAndType        #33:#34        // hasNext:()Z\n-  #23 = NameAndType        #35:#36        // next:()Ljava/lang/Object;\n-  #24 = Class              #37            // java/util/Collection\n-  #25 = NameAndType        #38:#39        // add:(Ljava/lang/Object;)Z\n-  #26 = NameAndType        #15:#16        // \"<init>\":()V\n-  #27 = Utf8               org/apache/commons/compress/utils/Iterators\n-  #28 = Utf8               java/lang/Object\n-  #29 = Utf8               java/util/Objects\n-  #30 = Utf8               requireNonNull\n-  #31 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #32 = Utf8               java/util/Iterator\n-  #33 = Utf8               hasNext\n-  #34 = Utf8               ()Z\n-  #35 = Utf8               next\n-  #36 = Utf8               ()Ljava/lang/Object;\n-  #37 = Utf8               java/util/Collection\n-  #38 = Utf8               add\n-  #39 = Utf8               (Ljava/lang/Object;)Z\n+   #1 = Methodref          #2.#3          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #2 = Class              #4             // java/util/Objects\n+   #3 = NameAndType        #5:#6          // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #4 = Utf8               java/util/Objects\n+   #5 = Utf8               requireNonNull\n+   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #7 = InterfaceMethodref #8.#9          // java/util/Iterator.hasNext:()Z\n+   #8 = Class              #10            // java/util/Iterator\n+   #9 = NameAndType        #11:#12        // hasNext:()Z\n+  #10 = Utf8               java/util/Iterator\n+  #11 = Utf8               hasNext\n+  #12 = Utf8               ()Z\n+  #13 = InterfaceMethodref #8.#14         // java/util/Iterator.next:()Ljava/lang/Object;\n+  #14 = NameAndType        #15:#16        // next:()Ljava/lang/Object;\n+  #15 = Utf8               next\n+  #16 = Utf8               ()Ljava/lang/Object;\n+  #17 = InterfaceMethodref #18.#19        // java/util/Collection.add:(Ljava/lang/Object;)Z\n+  #18 = Class              #20            // java/util/Collection\n+  #19 = NameAndType        #21:#22        // add:(Ljava/lang/Object;)Z\n+  #20 = Utf8               java/util/Collection\n+  #21 = Utf8               add\n+  #22 = Utf8               (Ljava/lang/Object;)Z\n+  #23 = Methodref          #24.#25        // java/lang/Object.\"<init>\":()V\n+  #24 = Class              #26            // java/lang/Object\n+  #25 = NameAndType        #27:#28        // \"<init>\":()V\n+  #26 = Utf8               java/lang/Object\n+  #27 = Utf8               <init>\n+  #28 = Utf8               ()V\n+  #29 = Class              #30            // org/apache/commons/compress/utils/Iterators\n+  #30 = Utf8               org/apache/commons/compress/utils/Iterators\n+  #31 = Utf8               addAll\n+  #32 = Utf8               (Ljava/util/Collection;Ljava/util/Iterator;)Z\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               StackMapTable\n+  #36 = Utf8               Signature\n+  #37 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;Ljava/util/Iterator<+TT;>;)Z\n+  #38 = Utf8               SourceFile\n+  #39 = Utf8               Iterators.java\n {\n   public static <T extends java.lang.Object> boolean addAll(java.util.Collection<T>, java.util.Iterator<? extends T>);\n     descriptor: (Ljava/util/Collection;Ljava/util/Iterator;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n@@ -58,21 +58,21 @@\n          4: pop\n          5: aload_1\n          6: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          9: pop\n         10: iconst_0\n         11: istore_2\n         12: aload_1\n-        13: invokeinterface #2,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        13: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n         18: ifeq          39\n         21: iload_2\n         22: aload_0\n         23: aload_1\n-        24: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        29: invokeinterface #4,  2            // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n+        24: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        29: invokeinterface #17,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z\n         34: ior\n         35: istore_2\n         36: goto          12\n         39: iload_2\n         40: ireturn\n       LineNumberTable:\n         line 49: 0\n@@ -82,22 +82,22 @@\n         line 53: 21\n         line 55: 39\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 12\n           locals = [ int ]\n         frame_type = 26 /* same */\n-    Signature: #14                          // <T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;Ljava/util/Iterator<+TT;>;)Z\n+    Signature: #37                          // <T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;Ljava/util/Iterator<+TT;>;)Z\n \n   private org.apache.commons.compress.utils.Iterators();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #23                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 58: 0\n         line 60: 4\n }\n SourceFile: \"Iterators.java\"\n"}]}
