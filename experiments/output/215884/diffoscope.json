{"diffoscope-json-version": 1, "source1": "first/LocalVariable.class", "source2": "second/LocalVariable.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,26 +12,26 @@\n     private int length;\n     private int nameIndex;\n     private int signatureIndex;\n     private int index;\n     private ConstantPool constantPool;\n     private int origIndex;\n     \n-    LocalVariable(final DataInput file, final ConstantPool constant_pool) throws IOException {\n-        this(file.readUnsignedShort(), file.readUnsignedShort(), file.readUnsignedShort(), file.readUnsignedShort(), file.readUnsignedShort(), constant_pool);\n+    LocalVariable(final DataInput dataInput, final ConstantPool constantPool) throws IOException {\n+        this(dataInput.readUnsignedShort(), dataInput.readUnsignedShort(), dataInput.readUnsignedShort(), dataInput.readUnsignedShort(), dataInput.readUnsignedShort(), constantPool);\n     }\n     \n-    public LocalVariable(final int startPc, final int length, final int nameIndex, final int signatureIndex, final int index, final ConstantPool constantPool) {\n+    public LocalVariable(final int startPc, final int length, final int nameIndex, final int signatureIndex, final int n, final ConstantPool constantPool) {\n         this.startPc = startPc;\n         this.length = length;\n         this.nameIndex = nameIndex;\n         this.signatureIndex = signatureIndex;\n-        this.index = index;\n+        this.index = n;\n         this.constantPool = constantPool;\n-        this.origIndex = index;\n+        this.origIndex = n;\n     }\n     \n     public LocalVariable(final int startPc, final int length, final int nameIndex, final int signatureIndex, final int index, final ConstantPool constantPool, final int origIndex) {\n         this.startPc = startPc;\n         this.length = length;\n         this.nameIndex = nameIndex;\n         this.signatureIndex = signatureIndex;\n@@ -41,16 +41,16 @@\n     }\n     \n     public LocalVariable(final LocalVariable localVariable) {\n         this(localVariable.getStartPC(), localVariable.getLength(), localVariable.getNameIndex(), localVariable.getSignatureIndex(), localVariable.getIndex(), localVariable.getConstantPool());\n         this.origIndex = localVariable.getOrigIndex();\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitLocalVariable(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitLocalVariable(this);\n     }\n     \n     public LocalVariable copy() {\n         try {\n             return (LocalVariable)this.clone();\n         }\n         catch (final CloneNotSupportedException ex) {\n@@ -127,14 +127,11 @@\n     }\n     \n     @Override\n     public String toString() {\n         return this.toStringShared(false);\n     }\n     \n-    String toStringShared(final boolean typeTable) {\n-        final String name = this.getName();\n-        final String signature = Utility.signatureToString(this.getSignature(), false);\n-        final String label = \"LocalVariable\" + (typeTable ? \"Types\" : \"\");\n-        return label + \"(startPc = \" + this.startPc + \", length = \" + this.length + \", index = \" + this.index + \":\" + signature + \" \" + name + \")\";\n+    String toStringShared(final boolean b) {\n+        return \"LocalVariable\" + (b ? \"Types\" : \"\") + \"(startPc = \" + this.startPc + \", length = \" + this.length + \", index = \" + this.index + \":\" + Utility.signatureToString(this.getSignature(), false) + \" \" + this.getName() + \")\";\n     }\n }\n"}]}
