{"diffoscope-json-version": 1, "source1": "first/VMSVersioningFTPEntryParser.class", "source2": "second/VMSVersioningFTPEntryParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,147 +1,138 @@\n-  SHA-256 checksum fbcf64f699ac1cdb8eb1700e1c01b10fb9e4386c05ea8e6d142384ef53824aac\n+  SHA-256 checksum 2b14c94cfdf8c0569277adec8d6bc8ba2b6ea020f1434ed967fee9fbc0e5d6fb\n   Compiled from \"VMSVersioningFTPEntryParser.java\"\n public class org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser extends org.apache.commons.net.ftp.parser.VMSFTPEntryParser\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #4                          // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n   super_class: #31                        // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n   interfaces: 0, fields: 2, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #4.#61        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #2 = Methodref          #31.#62       // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n-    #3 = Methodref          #4.#63        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #4 = Class              #64           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-    #5 = String             #65           // (.*?);([0-9]+)\\\\s*.*\n-    #6 = Methodref          #66.#67       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #7 = Fieldref           #4.#68        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n-    #8 = Class              #69           // java/util/regex/PatternSyntaxException\n-    #9 = Class              #70           // java/lang/IllegalArgumentException\n-   #10 = String             #71           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #11 = Methodref          #9.#72        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Class              #73           // java/util/HashMap\n-   #13 = Methodref          #12.#62       // java/util/HashMap.\"<init>\":()V\n-   #14 = InterfaceMethodref #74.#75       // java/util/List.listIterator:()Ljava/util/ListIterator;\n-   #15 = InterfaceMethodref #76.#77       // java/util/ListIterator.hasNext:()Z\n-   #16 = InterfaceMethodref #76.#78       // java/util/ListIterator.next:()Ljava/lang/Object;\n-   #17 = Class              #79           // java/lang/String\n-   #18 = Methodref          #17.#80       // java/lang/String.trim:()Ljava/lang/String;\n-   #19 = Methodref          #66.#81       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #20 = Methodref          #82.#83       // java/util/regex/Matcher.matches:()Z\n-   #21 = Methodref          #82.#84       // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n-   #22 = InterfaceMethodref #85.#86       // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n-   #23 = Methodref          #25.#87       // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #24 = Methodref          #12.#88       // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = Class              #89           // java/lang/Integer\n-   #26 = Methodref          #25.#90       // java/lang/Integer.intValue:()I\n-   #27 = InterfaceMethodref #76.#91       // java/util/ListIterator.remove:()V\n-   #28 = Methodref          #12.#92       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #29 = InterfaceMethodref #76.#93       // java/util/ListIterator.hasPrevious:()Z\n-   #30 = InterfaceMethodref #76.#94       // java/util/ListIterator.previous:()Ljava/lang/Object;\n-   #31 = Class              #95           // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+    #1 = Methodref          #4.#56        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #2 = Methodref          #31.#57       // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n+    #3 = Methodref          #4.#58        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #4 = Class              #59           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+    #5 = String             #60           // (.*?);([0-9]+)\\\\s*.*\n+    #6 = Methodref          #61.#62       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #7 = Fieldref           #4.#63        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n+    #8 = Class              #64           // java/util/regex/PatternSyntaxException\n+    #9 = Class              #65           // java/lang/IllegalArgumentException\n+   #10 = String             #66           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #11 = Methodref          #9.#67        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Class              #68           // java/util/HashMap\n+   #13 = Methodref          #12.#57       // java/util/HashMap.\"<init>\":()V\n+   #14 = InterfaceMethodref #47.#69       // java/util/List.listIterator:()Ljava/util/ListIterator;\n+   #15 = InterfaceMethodref #46.#70       // java/util/ListIterator.hasNext:()Z\n+   #16 = InterfaceMethodref #46.#71       // java/util/ListIterator.next:()Ljava/lang/Object;\n+   #17 = Class              #72           // java/lang/String\n+   #18 = Methodref          #17.#73       // java/lang/String.trim:()Ljava/lang/String;\n+   #19 = Methodref          #61.#74       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #20 = Methodref          #49.#75       // java/util/regex/Matcher.matches:()Z\n+   #21 = Methodref          #49.#76       // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n+   #22 = InterfaceMethodref #48.#77       // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+   #23 = Methodref          #25.#78       // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #24 = Methodref          #12.#79       // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #25 = Class              #80           // java/lang/Integer\n+   #26 = Methodref          #25.#81       // java/lang/Integer.intValue:()I\n+   #27 = InterfaceMethodref #46.#82       // java/util/ListIterator.remove:()V\n+   #28 = Methodref          #12.#83       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #29 = InterfaceMethodref #46.#84       // java/util/ListIterator.hasPrevious:()Z\n+   #30 = InterfaceMethodref #46.#85       // java/util/ListIterator.previous:()Ljava/lang/Object;\n+   #31 = Class              #86           // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n    #32 = Utf8               preparsePattern\n    #33 = Utf8               Ljava/util/regex/Pattern;\n    #34 = Utf8               PRE_PARSE_REGEX\n    #35 = Utf8               Ljava/lang/String;\n    #36 = Utf8               ConstantValue\n    #37 = Utf8               <init>\n    #38 = Utf8               ()V\n    #39 = Utf8               Code\n    #40 = Utf8               LineNumberTable\n    #41 = Utf8               (Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n    #42 = Utf8               StackMapTable\n-   #43 = Class              #64           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-   #44 = Class              #96           // org/apache/commons/net/ftp/FTPClientConfig\n-   #45 = Class              #69           // java/util/regex/PatternSyntaxException\n-   #46 = Utf8               preParse\n-   #47 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-   #48 = Class              #73           // java/util/HashMap\n-   #49 = Class              #97           // java/util/ListIterator\n-   #50 = Class              #98           // java/util/List\n-   #51 = Class              #79           // java/lang/String\n-   #52 = Class              #99           // java/util/regex/MatchResult\n-   #53 = Class              #100          // java/util/regex/Matcher\n-   #54 = Class              #89           // java/lang/Integer\n-   #55 = Utf8               Signature\n-   #56 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n-   #57 = Utf8               isVersioning\n-   #58 = Utf8               ()Z\n-   #59 = Utf8               SourceFile\n-   #60 = Utf8               VMSVersioningFTPEntryParser.java\n-   #61 = NameAndType        #37:#41       // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #62 = NameAndType        #37:#38       // \"<init>\":()V\n-   #63 = NameAndType        #101:#41      // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #64 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-   #65 = Utf8               (.*?);([0-9]+)\\\\s*.*\n-   #66 = Class              #102          // java/util/regex/Pattern\n-   #67 = NameAndType        #103:#104     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #68 = NameAndType        #32:#33       // preparsePattern:Ljava/util/regex/Pattern;\n-   #69 = Utf8               java/util/regex/PatternSyntaxException\n-   #70 = Utf8               java/lang/IllegalArgumentException\n-   #71 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #72 = NameAndType        #37:#105      // \"<init>\":(Ljava/lang/String;)V\n-   #73 = Utf8               java/util/HashMap\n-   #74 = Class              #98           // java/util/List\n-   #75 = NameAndType        #106:#107     // listIterator:()Ljava/util/ListIterator;\n-   #76 = Class              #97           // java/util/ListIterator\n-   #77 = NameAndType        #108:#58      // hasNext:()Z\n-   #78 = NameAndType        #109:#110     // next:()Ljava/lang/Object;\n-   #79 = Utf8               java/lang/String\n-   #80 = NameAndType        #111:#112     // trim:()Ljava/lang/String;\n-   #81 = NameAndType        #113:#114     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #82 = Class              #100          // java/util/regex/Matcher\n-   #83 = NameAndType        #115:#58      // matches:()Z\n-   #84 = NameAndType        #116:#117     // toMatchResult:()Ljava/util/regex/MatchResult;\n-   #85 = Class              #99           // java/util/regex/MatchResult\n-   #86 = NameAndType        #118:#119     // group:(I)Ljava/lang/String;\n-   #87 = NameAndType        #120:#121     // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #88 = NameAndType        #122:#123     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = Utf8               java/lang/Integer\n-   #90 = NameAndType        #124:#125     // intValue:()I\n-   #91 = NameAndType        #126:#38      // remove:()V\n-   #92 = NameAndType        #127:#128     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #93 = NameAndType        #129:#58      // hasPrevious:()Z\n-   #94 = NameAndType        #130:#110     // previous:()Ljava/lang/Object;\n-   #95 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n-   #96 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n-   #97 = Utf8               java/util/ListIterator\n-   #98 = Utf8               java/util/List\n-   #99 = Utf8               java/util/regex/MatchResult\n-  #100 = Utf8               java/util/regex/Matcher\n-  #101 = Utf8               configure\n-  #102 = Utf8               java/util/regex/Pattern\n-  #103 = Utf8               compile\n-  #104 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #105 = Utf8               (Ljava/lang/String;)V\n-  #106 = Utf8               listIterator\n-  #107 = Utf8               ()Ljava/util/ListIterator;\n-  #108 = Utf8               hasNext\n-  #109 = Utf8               next\n-  #110 = Utf8               ()Ljava/lang/Object;\n-  #111 = Utf8               trim\n-  #112 = Utf8               ()Ljava/lang/String;\n-  #113 = Utf8               matcher\n-  #114 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #115 = Utf8               matches\n-  #116 = Utf8               toMatchResult\n-  #117 = Utf8               ()Ljava/util/regex/MatchResult;\n-  #118 = Utf8               group\n-  #119 = Utf8               (I)Ljava/lang/String;\n-  #120 = Utf8               valueOf\n-  #121 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #122 = Utf8               get\n-  #123 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #124 = Utf8               intValue\n-  #125 = Utf8               ()I\n-  #126 = Utf8               remove\n-  #127 = Utf8               put\n-  #128 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #129 = Utf8               hasPrevious\n-  #130 = Utf8               previous\n+   #43 = Class              #87           // org/apache/commons/net/ftp/FTPClientConfig\n+   #44 = Utf8               preParse\n+   #45 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+   #46 = Class              #88           // java/util/ListIterator\n+   #47 = Class              #89           // java/util/List\n+   #48 = Class              #90           // java/util/regex/MatchResult\n+   #49 = Class              #91           // java/util/regex/Matcher\n+   #50 = Utf8               Signature\n+   #51 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+   #52 = Utf8               isVersioning\n+   #53 = Utf8               ()Z\n+   #54 = Utf8               SourceFile\n+   #55 = Utf8               VMSVersioningFTPEntryParser.java\n+   #56 = NameAndType        #37:#41       // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #57 = NameAndType        #37:#38       // \"<init>\":()V\n+   #58 = NameAndType        #92:#41       // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #59 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+   #60 = Utf8               (.*?);([0-9]+)\\\\s*.*\n+   #61 = Class              #93           // java/util/regex/Pattern\n+   #62 = NameAndType        #94:#95       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #63 = NameAndType        #32:#33       // preparsePattern:Ljava/util/regex/Pattern;\n+   #64 = Utf8               java/util/regex/PatternSyntaxException\n+   #65 = Utf8               java/lang/IllegalArgumentException\n+   #66 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #67 = NameAndType        #37:#96       // \"<init>\":(Ljava/lang/String;)V\n+   #68 = Utf8               java/util/HashMap\n+   #69 = NameAndType        #97:#98       // listIterator:()Ljava/util/ListIterator;\n+   #70 = NameAndType        #99:#53       // hasNext:()Z\n+   #71 = NameAndType        #100:#101     // next:()Ljava/lang/Object;\n+   #72 = Utf8               java/lang/String\n+   #73 = NameAndType        #102:#103     // trim:()Ljava/lang/String;\n+   #74 = NameAndType        #104:#105     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #75 = NameAndType        #106:#53      // matches:()Z\n+   #76 = NameAndType        #107:#108     // toMatchResult:()Ljava/util/regex/MatchResult;\n+   #77 = NameAndType        #109:#110     // group:(I)Ljava/lang/String;\n+   #78 = NameAndType        #111:#112     // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #79 = NameAndType        #113:#114     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #80 = Utf8               java/lang/Integer\n+   #81 = NameAndType        #115:#116     // intValue:()I\n+   #82 = NameAndType        #117:#38      // remove:()V\n+   #83 = NameAndType        #118:#119     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #84 = NameAndType        #120:#53      // hasPrevious:()Z\n+   #85 = NameAndType        #121:#101     // previous:()Ljava/lang/Object;\n+   #86 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+   #87 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n+   #88 = Utf8               java/util/ListIterator\n+   #89 = Utf8               java/util/List\n+   #90 = Utf8               java/util/regex/MatchResult\n+   #91 = Utf8               java/util/regex/Matcher\n+   #92 = Utf8               configure\n+   #93 = Utf8               java/util/regex/Pattern\n+   #94 = Utf8               compile\n+   #95 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #96 = Utf8               (Ljava/lang/String;)V\n+   #97 = Utf8               listIterator\n+   #98 = Utf8               ()Ljava/util/ListIterator;\n+   #99 = Utf8               hasNext\n+  #100 = Utf8               next\n+  #101 = Utf8               ()Ljava/lang/Object;\n+  #102 = Utf8               trim\n+  #103 = Utf8               ()Ljava/lang/String;\n+  #104 = Utf8               matcher\n+  #105 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #106 = Utf8               matches\n+  #107 = Utf8               toMatchResult\n+  #108 = Utf8               ()Ljava/util/regex/MatchResult;\n+  #109 = Utf8               group\n+  #110 = Utf8               (I)Ljava/lang/String;\n+  #111 = Utf8               valueOf\n+  #112 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #113 = Utf8               get\n+  #114 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #115 = Utf8               intValue\n+  #116 = Utf8               ()I\n+  #117 = Utf8               remove\n+  #118 = Utf8               put\n+  #119 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #120 = Utf8               hasPrevious\n+  #121 = Utf8               previous\n {\n   private final java.util.regex.Pattern preparsePattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static final java.lang.String PRE_PARSE_REGEX = \"(.*?);([0-9]+)\\\\s*.*\";\n     descriptor: Ljava/lang/String;\n@@ -363,15 +354,15 @@\n           offset_delta = 8\n           locals = [ class org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser, class java/util/List, class java/util/HashMap, class java/util/ListIterator ]\n           stack = []\n         frame_type = 2 /* same */\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 114\n         frame_type = 2 /* same */\n-    Signature: #56                          // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #51                          // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n \n   protected boolean isVersioning();\n     descriptor: ()Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iconst_1\n"}]}
