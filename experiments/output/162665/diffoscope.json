{"diffoscope-json-version": 1, "source1": "first/ArrayElementValue.class", "source2": "second/ArrayElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,117 +1,115 @@\n-  SHA-256 checksum cafaed4fb86e4487b84ac132418e334f73c92fd66439003bf8bfc7d69718c630\n+  SHA-256 checksum b6f4b8e6de28b108f6b60a3b382c44ee4939d78f39be6d9ff924c7462b11353a\n   Compiled from \"ArrayElementValue.java\"\n public class org.apache.bcel.classfile.ArrayElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/bcel/classfile/ArrayElementValue\n   super_class: #2                         // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#63        // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-    #2 = Class              #64           // org/apache/bcel/classfile/ElementValue\n-    #3 = Class              #65           // java/lang/IllegalArgumentException\n-    #4 = Class              #66           // java/lang/StringBuilder\n-    #5 = Methodref          #4.#67        // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #68           // Only element values of type array can be built with this ctor - type specified:\n-    #7 = Methodref          #4.#69        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#70        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #4.#71        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Methodref          #3.#72        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Fieldref           #23.#73       // org/apache/bcel/classfile/ArrayElementValue.elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n-   #12 = Methodref          #2.#74        // org/apache/bcel/classfile/ElementValue.getType:()I\n-   #13 = Methodref          #75.#76       // java/io/DataOutputStream.writeByte:(I)V\n-   #14 = Methodref          #75.#77       // java/io/DataOutputStream.writeShort:(I)V\n-   #15 = Methodref          #2.#78        // org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n-   #16 = String             #79           // [\n-   #17 = Methodref          #2.#80        // org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n-   #18 = String             #81           // ,\n-   #19 = String             #82           // ]\n-   #20 = String             #83           // {\n-   #21 = Methodref          #4.#84        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #22 = String             #85           // }\n-   #23 = Class              #86           // org/apache/bcel/classfile/ArrayElementValue\n-   #24 = Utf8               elementValues\n-   #25 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n-   #26 = Utf8               <init>\n-   #27 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #28 = Utf8               Code\n-   #29 = Utf8               LineNumberTable\n-   #30 = Utf8               LocalVariableTable\n-   #31 = Utf8               this\n-   #32 = Utf8               Lorg/apache/bcel/classfile/ArrayElementValue;\n-   #33 = Utf8               type\n-   #34 = Utf8               I\n-   #35 = Utf8               datums\n-   #36 = Utf8               cpool\n-   #37 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #38 = Utf8               StackMapTable\n-   #39 = Class              #86           // org/apache/bcel/classfile/ArrayElementValue\n-   #40 = Class              #25           // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n-   #41 = Class              #87           // org/apache/bcel/classfile/ConstantPool\n-   #42 = Utf8               dump\n-   #43 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #44 = Utf8               evalue\n-   #45 = Utf8               Lorg/apache/bcel/classfile/ElementValue;\n-   #46 = Utf8               dos\n-   #47 = Utf8               Ljava/io/DataOutputStream;\n-   #48 = Utf8               Exceptions\n-   #49 = Class              #88           // java/io/IOException\n-   #50 = Utf8               getElementValuesArray\n-   #51 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n-   #52 = Utf8               getElementValuesArraySize\n-   #53 = Utf8               ()I\n-   #54 = Utf8               stringifyValue\n-   #55 = Utf8               ()Ljava/lang/String;\n-   #56 = Utf8               i\n-   #57 = Utf8               sb\n-   #58 = Utf8               Ljava/lang/StringBuilder;\n-   #59 = Class              #66           // java/lang/StringBuilder\n-   #60 = Utf8               toString\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               ArrayElementValue.java\n-   #63 = NameAndType        #26:#89       // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #64 = Utf8               org/apache/bcel/classfile/ElementValue\n-   #65 = Utf8               java/lang/IllegalArgumentException\n-   #66 = Utf8               java/lang/StringBuilder\n-   #67 = NameAndType        #26:#90       // \"<init>\":()V\n-   #68 = Utf8               Only element values of type array can be built with this ctor - type specified:\n-   #69 = NameAndType        #91:#92       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #70 = NameAndType        #91:#93       // append:(I)Ljava/lang/StringBuilder;\n-   #71 = NameAndType        #60:#55       // toString:()Ljava/lang/String;\n-   #72 = NameAndType        #26:#94       // \"<init>\":(Ljava/lang/String;)V\n-   #73 = NameAndType        #24:#25       // elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n-   #74 = NameAndType        #95:#53       // getType:()I\n-   #75 = Class              #96           // java/io/DataOutputStream\n-   #76 = NameAndType        #97:#98       // writeByte:(I)V\n-   #77 = NameAndType        #99:#98       // writeShort:(I)V\n-   #78 = NameAndType        #42:#43       // dump:(Ljava/io/DataOutputStream;)V\n-   #79 = Utf8               [\n-   #80 = NameAndType        #54:#55       // stringifyValue:()Ljava/lang/String;\n-   #81 = Utf8               ,\n-   #82 = Utf8               ]\n-   #83 = Utf8               {\n-   #84 = NameAndType        #91:#100      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #85 = Utf8               }\n-   #86 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n-   #87 = Utf8               org/apache/bcel/classfile/ConstantPool\n-   #88 = Utf8               java/io/IOException\n-   #89 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #90 = Utf8               ()V\n-   #91 = Utf8               append\n-   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #93 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #94 = Utf8               (Ljava/lang/String;)V\n-   #95 = Utf8               getType\n-   #96 = Utf8               java/io/DataOutputStream\n-   #97 = Utf8               writeByte\n-   #98 = Utf8               (I)V\n-   #99 = Utf8               writeShort\n-  #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #1 = Methodref          #2.#61         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #2 = Class              #62            // org/apache/bcel/classfile/ElementValue\n+   #3 = Class              #63            // java/lang/IllegalArgumentException\n+   #4 = Class              #64            // java/lang/StringBuilder\n+   #5 = Methodref          #4.#65         // java/lang/StringBuilder.\"<init>\":()V\n+   #6 = String             #66            // Only element values of type array can be built with this ctor - type specified:\n+   #7 = Methodref          #4.#67         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #8 = Methodref          #4.#68         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #9 = Methodref          #4.#69         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #10 = Methodref          #3.#70         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = Fieldref           #23.#71        // org/apache/bcel/classfile/ArrayElementValue.elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+  #12 = Methodref          #2.#72         // org/apache/bcel/classfile/ElementValue.getType:()I\n+  #13 = Methodref          #73.#74        // java/io/DataOutputStream.writeByte:(I)V\n+  #14 = Methodref          #73.#75        // java/io/DataOutputStream.writeShort:(I)V\n+  #15 = Methodref          #2.#76         // org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n+  #16 = String             #77            // [\n+  #17 = Methodref          #2.#78         // org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n+  #18 = String             #79            // ,\n+  #19 = String             #80            // ]\n+  #20 = String             #81            // {\n+  #21 = Methodref          #4.#82         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #22 = String             #83            // }\n+  #23 = Class              #84            // org/apache/bcel/classfile/ArrayElementValue\n+  #24 = Utf8               elementValues\n+  #25 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n+  #26 = Utf8               <init>\n+  #27 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #28 = Utf8               Code\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               LocalVariableTable\n+  #31 = Utf8               this\n+  #32 = Utf8               Lorg/apache/bcel/classfile/ArrayElementValue;\n+  #33 = Utf8               type\n+  #34 = Utf8               I\n+  #35 = Utf8               datums\n+  #36 = Utf8               cpool\n+  #37 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+  #38 = Utf8               StackMapTable\n+  #39 = Class              #25            // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n+  #40 = Class              #85            // org/apache/bcel/classfile/ConstantPool\n+  #41 = Utf8               dump\n+  #42 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #43 = Utf8               evalue\n+  #44 = Utf8               Lorg/apache/bcel/classfile/ElementValue;\n+  #45 = Utf8               dos\n+  #46 = Utf8               Ljava/io/DataOutputStream;\n+  #47 = Utf8               Exceptions\n+  #48 = Class              #86            // java/io/IOException\n+  #49 = Utf8               getElementValuesArray\n+  #50 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n+  #51 = Utf8               getElementValuesArraySize\n+  #52 = Utf8               ()I\n+  #53 = Utf8               stringifyValue\n+  #54 = Utf8               ()Ljava/lang/String;\n+  #55 = Utf8               i\n+  #56 = Utf8               sb\n+  #57 = Utf8               Ljava/lang/StringBuilder;\n+  #58 = Utf8               toString\n+  #59 = Utf8               SourceFile\n+  #60 = Utf8               ArrayElementValue.java\n+  #61 = NameAndType        #26:#87        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #62 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #63 = Utf8               java/lang/IllegalArgumentException\n+  #64 = Utf8               java/lang/StringBuilder\n+  #65 = NameAndType        #26:#88        // \"<init>\":()V\n+  #66 = Utf8               Only element values of type array can be built with this ctor - type specified:\n+  #67 = NameAndType        #89:#90        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #68 = NameAndType        #89:#91        // append:(I)Ljava/lang/StringBuilder;\n+  #69 = NameAndType        #58:#54        // toString:()Ljava/lang/String;\n+  #70 = NameAndType        #26:#92        // \"<init>\":(Ljava/lang/String;)V\n+  #71 = NameAndType        #24:#25        // elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+  #72 = NameAndType        #93:#52        // getType:()I\n+  #73 = Class              #94            // java/io/DataOutputStream\n+  #74 = NameAndType        #95:#96        // writeByte:(I)V\n+  #75 = NameAndType        #97:#96        // writeShort:(I)V\n+  #76 = NameAndType        #41:#42        // dump:(Ljava/io/DataOutputStream;)V\n+  #77 = Utf8               [\n+  #78 = NameAndType        #53:#54        // stringifyValue:()Ljava/lang/String;\n+  #79 = Utf8               ,\n+  #80 = Utf8               ]\n+  #81 = Utf8               {\n+  #82 = NameAndType        #89:#98        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #83 = Utf8               }\n+  #84 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n+  #85 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #86 = Utf8               java/io/IOException\n+  #87 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #88 = Utf8               ()V\n+  #89 = Utf8               append\n+  #90 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #91 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #92 = Utf8               (Ljava/lang/String;)V\n+  #93 = Utf8               getType\n+  #94 = Utf8               java/io/DataOutputStream\n+  #95 = Utf8               writeByte\n+  #96 = Utf8               (I)V\n+  #97 = Utf8               writeShort\n+  #98 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n {\n   private final org.apache.bcel.classfile.ElementValue[] elementValues;\n     descriptor: [Lorg/apache/bcel/classfile/ElementValue;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.classfile.ArrayElementValue(int, org.apache.bcel.classfile.ElementValue[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n"}]}
