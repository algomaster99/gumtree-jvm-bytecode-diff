{"diffoscope-json-version": 1, "source1": "first/LabelHandler.class", "source2": "second/LabelHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,31 +3,28 @@\n \n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n \n public class LabelHandler extends AbstractExpressionHandler\n {\n     private static final int[] LABEL_CHILDREN;\n     \n-    public LabelHandler(final IndentationCheck indentCheck, final DetailAST expr, final AbstractExpressionHandler parent) {\n-        super(indentCheck, \"label\", expr, parent);\n+    public LabelHandler(final IndentationCheck indentationCheck, final DetailAST detailAST, final AbstractExpressionHandler abstractExpressionHandler) {\n+        super(indentationCheck, \"label\", detailAST, abstractExpressionHandler);\n     }\n     \n     protected IndentLevel getIndentImpl() {\n-        final IndentLevel level = new IndentLevel(super.getIndentImpl(), new int[] { -this.getBasicOffset() });\n-        return IndentLevel.addAcceptable(level, super.getIndentImpl());\n+        return IndentLevel.addAcceptable(new IndentLevel(super.getIndentImpl(), new int[] { -this.getBasicOffset() }), super.getIndentImpl());\n     }\n     \n     private void checkLabel() {\n         this.checkChildren(this.getMainAst(), LabelHandler.LABEL_CHILDREN, this.getIndent(), true, false);\n     }\n     \n     public void checkIndentation() {\n         this.checkLabel();\n-        final DetailAST parent = this.getMainAst().getFirstChild().getNextSibling();\n-        final IndentLevel expected = new IndentLevel(this.getIndent(), new int[] { this.getBasicOffset() });\n-        this.checkExpressionSubtree(parent, expected, true, false);\n+        this.checkExpressionSubtree(this.getMainAst().getFirstChild().getNextSibling(), new IndentLevel(this.getIndent(), new int[] { this.getBasicOffset() }), true, false);\n     }\n     \n     static {\n         LABEL_CHILDREN = new int[] { 58 };\n     }\n }\n"}]}
