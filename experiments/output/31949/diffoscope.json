{"diffoscope-json-version": 1, "source1": "first/LockableFileWriter$Builder.class", "source2": "second/LockableFileWriter$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum 7765d9dd4dcc9d8b0e26a27ae45c297fdd98024a5447fba46dc8250bc9b36c68\n+  SHA-256 checksum 6f3be86f907420a8d81a6b5ec85c271f6fecf73fd2f52fc05f9d8422c0388048\n   Compiled from \"LockableFileWriter.java\"\n public class org.apache.commons.io.output.LockableFileWriter$Builder extends org.apache.commons.io.build.AbstractStreamBuilder<org.apache.commons.io.output.LockableFileWriter, org.apache.commons.io.output.LockableFileWriter$Builder>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/output/LockableFileWriter$Builder\n-  super_class: #19                        // org/apache/commons/io/build/AbstractStreamBuilder\n+  this_class: #20                         // org/apache/commons/io/output/LockableFileWriter$Builder\n+  super_class: #2                         // org/apache/commons/io/build/AbstractStreamBuilder\n   interfaces: 0, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Methodref          #19.#53       // org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n-    #2 = Methodref          #54.#55       // org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n-    #3 = Methodref          #56.#57       // org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-    #4 = Fieldref           #18.#58       // org/apache/commons/io/output/LockableFileWriter$Builder.lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n-    #5 = Class              #59           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-    #6 = Methodref          #18.#60       // org/apache/commons/io/output/LockableFileWriter$Builder.setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n-    #7 = Methodref          #18.#61       // org/apache/commons/io/output/LockableFileWriter$Builder.setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n-    #8 = Class              #62           // org/apache/commons/io/output/LockableFileWriter\n-    #9 = Methodref          #18.#63       // org/apache/commons/io/output/LockableFileWriter$Builder.getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-   #10 = Methodref          #64.#65       // org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n-   #11 = Methodref          #18.#66       // org/apache/commons/io/output/LockableFileWriter$Builder.getCharset:()Ljava/nio/charset/Charset;\n-   #12 = Fieldref           #18.#67       // org/apache/commons/io/output/LockableFileWriter$Builder.append:Z\n-   #13 = Methodref          #45.#68       // java/io/File.toString:()Ljava/lang/String;\n-   #14 = Methodref          #8.#69        // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-   #15 = Methodref          #54.#70       // org/apache/commons/io/FileUtils.getTempDirectory:()Ljava/io/File;\n-   #16 = Methodref          #56.#71       // org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-   #17 = Methodref          #18.#72       // org/apache/commons/io/output/LockableFileWriter$Builder.get:()Lorg/apache/commons/io/output/LockableFileWriter;\n-   #18 = Class              #73           // org/apache/commons/io/output/LockableFileWriter$Builder\n-   #19 = Class              #74           // org/apache/commons/io/build/AbstractStreamBuilder\n-   #20 = Utf8               append\n-   #21 = Utf8               Z\n-   #22 = Utf8               lockDirectory\n-   #23 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin;\n-   #24 = Utf8               Signature\n-   #25 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin<**>;\n-   #26 = Utf8               <init>\n-   #27 = Utf8               ()V\n-   #28 = Utf8               Code\n-   #29 = Utf8               LineNumberTable\n-   #30 = Utf8               LocalVariableTable\n-   #31 = Utf8               this\n-   #32 = Utf8               Builder\n-   #33 = Utf8               InnerClasses\n-   #34 = Utf8               Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n-   #35 = Utf8               get\n-   #36 = Utf8               ()Lorg/apache/commons/io/output/LockableFileWriter;\n-   #37 = Utf8               Exceptions\n-   #38 = Class              #75           // java/io/IOException\n-   #39 = Utf8               setAppend\n-   #40 = Utf8               (Z)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n-   #41 = Utf8               setLockDirectory\n-   #42 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n-   #43 = Utf8               Ljava/io/File;\n-   #44 = Utf8               StackMapTable\n-   #45 = Class              #76           // java/io/File\n-   #46 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n-   #47 = Utf8               Ljava/lang/String;\n-   #48 = Class              #77           // java/lang/String\n-   #49 = Utf8               ()Ljava/lang/Object;\n-   #50 = Utf8               Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/output/LockableFileWriter;Lorg/apache/commons/io/output/LockableFileWriter$Builder;>;\n-   #51 = Utf8               SourceFile\n-   #52 = Utf8               LockableFileWriter.java\n-   #53 = NameAndType        #26:#27       // \"<init>\":()V\n-   #54 = Class              #78           // org/apache/commons/io/FileUtils\n-   #55 = NameAndType        #79:#80       // getTempDirectoryPath:()Ljava/lang/String;\n-   #56 = Class              #81           // org/apache/commons/io/build/AbstractOriginSupplier\n-   #57 = NameAndType        #82:#85       // newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-   #58 = NameAndType        #22:#23       // lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n-   #59 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #60 = NameAndType        #86:#87       // setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n-   #61 = NameAndType        #88:#87       // setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n-   #62 = Utf8               org/apache/commons/io/output/LockableFileWriter\n-   #63 = NameAndType        #89:#90       // getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-   #64 = Class              #91           // org/apache/commons/io/build/AbstractOrigin\n-   #65 = NameAndType        #92:#93       // getFile:()Ljava/io/File;\n-   #66 = NameAndType        #94:#95       // getCharset:()Ljava/nio/charset/Charset;\n-   #67 = NameAndType        #20:#21       // append:Z\n-   #68 = NameAndType        #96:#80       // toString:()Ljava/lang/String;\n-   #69 = NameAndType        #26:#97       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-   #70 = NameAndType        #98:#93       // getTempDirectory:()Ljava/io/File;\n-   #71 = NameAndType        #82:#99       // newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-   #72 = NameAndType        #35:#36       // get:()Lorg/apache/commons/io/output/LockableFileWriter;\n-   #73 = Utf8               org/apache/commons/io/output/LockableFileWriter$Builder\n-   #74 = Utf8               org/apache/commons/io/build/AbstractStreamBuilder\n-   #75 = Utf8               java/io/IOException\n-   #76 = Utf8               java/io/File\n-   #77 = Utf8               java/lang/String\n-   #78 = Utf8               org/apache/commons/io/FileUtils\n-   #79 = Utf8               getTempDirectoryPath\n-   #80 = Utf8               ()Ljava/lang/String;\n-   #81 = Utf8               org/apache/commons/io/build/AbstractOriginSupplier\n-   #82 = Utf8               newFileOrigin\n-   #83 = Class              #100          // org/apache/commons/io/build/AbstractOrigin$FileOrigin\n-   #84 = Utf8               FileOrigin\n-   #85 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-   #86 = Utf8               setBufferSizeDefault\n-   #87 = Utf8               (I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n-   #88 = Utf8               setBufferSize\n-   #89 = Utf8               getOrigin\n-   #90 = Utf8               ()Lorg/apache/commons/io/build/AbstractOrigin;\n-   #91 = Utf8               org/apache/commons/io/build/AbstractOrigin\n-   #92 = Utf8               getFile\n-   #93 = Utf8               ()Ljava/io/File;\n-   #94 = Utf8               getCharset\n-   #95 = Utf8               ()Ljava/nio/charset/Charset;\n-   #96 = Utf8               toString\n-   #97 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-   #98 = Utf8               getTempDirectory\n-   #99 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-  #100 = Utf8               org/apache/commons/io/build/AbstractOrigin$FileOrigin\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/build/AbstractStreamBuilder\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/build/AbstractStreamBuilder\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n+    #8 = Class              #10           // org/apache/commons/io/FileUtils\n+    #9 = NameAndType        #11:#12       // getTempDirectoryPath:()Ljava/lang/String;\n+   #10 = Utf8               org/apache/commons/io/FileUtils\n+   #11 = Utf8               getTempDirectoryPath\n+   #12 = Utf8               ()Ljava/lang/String;\n+   #13 = Methodref          #14.#15       // org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #14 = Class              #16           // org/apache/commons/io/build/AbstractOriginSupplier\n+   #15 = NameAndType        #17:#18       // newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #16 = Utf8               org/apache/commons/io/build/AbstractOriginSupplier\n+   #17 = Utf8               newFileOrigin\n+   #18 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #19 = Fieldref           #20.#21       // org/apache/commons/io/output/LockableFileWriter$Builder.lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+   #20 = Class              #22           // org/apache/commons/io/output/LockableFileWriter$Builder\n+   #21 = NameAndType        #23:#24       // lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+   #22 = Utf8               org/apache/commons/io/output/LockableFileWriter$Builder\n+   #23 = Utf8               lockDirectory\n+   #24 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin;\n+   #25 = Class              #26           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #26 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #27 = Methodref          #20.#28       // org/apache/commons/io/output/LockableFileWriter$Builder.setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+   #28 = NameAndType        #29:#30       // setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+   #29 = Utf8               setBufferSizeDefault\n+   #30 = Utf8               (I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+   #31 = Methodref          #20.#32       // org/apache/commons/io/output/LockableFileWriter$Builder.setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+   #32 = NameAndType        #33:#30       // setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+   #33 = Utf8               setBufferSize\n+   #34 = Class              #35           // org/apache/commons/io/output/LockableFileWriter\n+   #35 = Utf8               org/apache/commons/io/output/LockableFileWriter\n+   #36 = Methodref          #20.#37       // org/apache/commons/io/output/LockableFileWriter$Builder.getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+   #37 = NameAndType        #38:#39       // getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+   #38 = Utf8               getOrigin\n+   #39 = Utf8               ()Lorg/apache/commons/io/build/AbstractOrigin;\n+   #40 = Methodref          #41.#42       // org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n+   #41 = Class              #43           // org/apache/commons/io/build/AbstractOrigin\n+   #42 = NameAndType        #44:#45       // getFile:()Ljava/io/File;\n+   #43 = Utf8               org/apache/commons/io/build/AbstractOrigin\n+   #44 = Utf8               getFile\n+   #45 = Utf8               ()Ljava/io/File;\n+   #46 = Methodref          #20.#47       // org/apache/commons/io/output/LockableFileWriter$Builder.getCharset:()Ljava/nio/charset/Charset;\n+   #47 = NameAndType        #48:#49       // getCharset:()Ljava/nio/charset/Charset;\n+   #48 = Utf8               getCharset\n+   #49 = Utf8               ()Ljava/nio/charset/Charset;\n+   #50 = Fieldref           #20.#51       // org/apache/commons/io/output/LockableFileWriter$Builder.append:Z\n+   #51 = NameAndType        #52:#53       // append:Z\n+   #52 = Utf8               append\n+   #53 = Utf8               Z\n+   #54 = Methodref          #55.#56       // java/io/File.toString:()Ljava/lang/String;\n+   #55 = Class              #57           // java/io/File\n+   #56 = NameAndType        #58:#12       // toString:()Ljava/lang/String;\n+   #57 = Utf8               java/io/File\n+   #58 = Utf8               toString\n+   #59 = Methodref          #34.#60       // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #60 = NameAndType        #5:#61        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #61 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #62 = Methodref          #8.#63        // org/apache/commons/io/FileUtils.getTempDirectory:()Ljava/io/File;\n+   #63 = NameAndType        #64:#45       // getTempDirectory:()Ljava/io/File;\n+   #64 = Utf8               getTempDirectory\n+   #65 = Methodref          #14.#66       // org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #66 = NameAndType        #17:#67       // newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #67 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+   #68 = Methodref          #20.#69       // org/apache/commons/io/output/LockableFileWriter$Builder.get:()Lorg/apache/commons/io/output/LockableFileWriter;\n+   #69 = NameAndType        #70:#71       // get:()Lorg/apache/commons/io/output/LockableFileWriter;\n+   #70 = Utf8               get\n+   #71 = Utf8               ()Lorg/apache/commons/io/output/LockableFileWriter;\n+   #72 = Utf8               Signature\n+   #73 = Utf8               Lorg/apache/commons/io/build/AbstractOrigin<**>;\n+   #74 = Utf8               Code\n+   #75 = Utf8               LineNumberTable\n+   #76 = Utf8               LocalVariableTable\n+   #77 = Utf8               this\n+   #78 = Utf8               Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n+   #79 = Utf8               Exceptions\n+   #80 = Class              #81           // java/io/IOException\n+   #81 = Utf8               java/io/IOException\n+   #82 = Utf8               setAppend\n+   #83 = Utf8               (Z)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n+   #84 = Utf8               setLockDirectory\n+   #85 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n+   #86 = Utf8               Ljava/io/File;\n+   #87 = Utf8               StackMapTable\n+   #88 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n+   #89 = Utf8               Ljava/lang/String;\n+   #90 = Class              #91           // java/lang/String\n+   #91 = Utf8               java/lang/String\n+   #92 = Utf8               ()Ljava/lang/Object;\n+   #93 = Utf8               Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/output/LockableFileWriter;Lorg/apache/commons/io/output/LockableFileWriter$Builder;>;\n+   #94 = Utf8               SourceFile\n+   #95 = Utf8               LockableFileWriter.java\n+   #96 = Utf8               InnerClasses\n+   #97 = Class              #98           // org/apache/commons/io/build/AbstractOrigin$FileOrigin\n+   #98 = Utf8               org/apache/commons/io/build/AbstractOrigin$FileOrigin\n+   #99 = Utf8               FileOrigin\n+  #100 = Utf8               Builder\n {\n   private boolean append;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.io.build.AbstractOrigin<?, ?> lockDirectory;\n     descriptor: Lorg/apache/commons/io/build/AbstractOrigin;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #25                          // Lorg/apache/commons/io/build/AbstractOrigin<**>;\n+    Signature: #73                          // Lorg/apache/commons/io/build/AbstractOrigin<**>;\n \n   public org.apache.commons.io.output.LockableFileWriter$Builder();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n-         8: invokestatic  #3                  // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-        11: putfield      #4                  // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+         5: invokestatic  #7                  // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n+         8: invokestatic  #13                 // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+        11: putfield      #19                 // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n         14: aload_0\n         15: sipush        1024\n-        18: invokevirtual #6                  // Method setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+        18: invokevirtual #27                 // Method setBufferSizeDefault:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n         21: pop\n         22: aload_0\n         23: sipush        1024\n-        26: invokevirtual #7                  // Method setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n+        26: invokevirtual #31                 // Method setBufferSize:(I)Lorg/apache/commons/io/build/AbstractStreamBuilder;\n         29: pop\n         30: return\n       LineNumberTable:\n         line 70: 0\n         line 68: 4\n         line 71: 14\n         line 72: 22\n@@ -149,28 +149,28 @@\n             0      31     0  this   Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n \n   public org.apache.commons.io.output.LockableFileWriter get() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/io/output/LockableFileWriter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: new           #8                  // class org/apache/commons/io/output/LockableFileWriter\n+         0: new           #34                 // class org/apache/commons/io/output/LockableFileWriter\n          3: dup\n          4: aload_0\n-         5: invokevirtual #9                  // Method getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-         8: invokevirtual #10                 // Method org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n+         5: invokevirtual #36                 // Method getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+         8: invokevirtual #40                 // Method org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n         11: aload_0\n-        12: invokevirtual #11                 // Method getCharset:()Ljava/nio/charset/Charset;\n+        12: invokevirtual #46                 // Method getCharset:()Ljava/nio/charset/Charset;\n         15: aload_0\n-        16: getfield      #12                 // Field append:Z\n+        16: getfield      #50                 // Field append:Z\n         19: aload_0\n-        20: getfield      #4                  // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n-        23: invokevirtual #10                 // Method org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n-        26: invokevirtual #13                 // Method java/io/File.toString:()Ljava/lang/String;\n-        29: invokespecial #14                 // Method org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+        20: getfield      #19                 // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+        23: invokevirtual #40                 // Method org/apache/commons/io/build/AbstractOrigin.getFile:()Ljava/io/File;\n+        26: invokevirtual #54                 // Method java/io/File.toString:()Ljava/lang/String;\n+        29: invokespecial #59                 // Method org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n         32: areturn\n       LineNumberTable:\n         line 82: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0  this   Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n     Exceptions:\n@@ -179,15 +179,15 @@\n   public org.apache.commons.io.output.LockableFileWriter$Builder setAppend(boolean);\n     descriptor: (Z)Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #12                 // Field append:Z\n+         2: putfield      #50                 // Field append:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 92: 0\n         line 93: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -200,17 +200,17 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          12\n-         9: invokestatic  #15                 // Method org/apache/commons/io/FileUtils.getTempDirectory:()Ljava/io/File;\n-        12: invokestatic  #16                 // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-        15: putfield      #4                  // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+         9: invokestatic  #62                 // Method org/apache/commons/io/FileUtils.getTempDirectory:()Ljava/io/File;\n+        12: invokestatic  #65                 // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/io/File;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+        15: putfield      #19                 // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n         18: aload_0\n         19: areturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -230,17 +230,17 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          12\n-         9: invokestatic  #2                  // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n-        12: invokestatic  #3                  // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n-        15: putfield      #4                  // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n+         9: invokestatic  #7                  // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n+        12: invokestatic  #13                 // Method org/apache/commons/io/build/AbstractOriginSupplier.newFileOrigin:(Ljava/lang/String;)Lorg/apache/commons/io/build/AbstractOrigin$FileOrigin;\n+        15: putfield      #19                 // Field lockDirectory:Lorg/apache/commons/io/build/AbstractOrigin;\n         18: aload_0\n         19: areturn\n       LineNumberTable:\n         line 114: 0\n         line 115: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -256,22 +256,22 @@\n \n   public java.lang.Object get() throws java.io.IOException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #17                 // Method get:()Lorg/apache/commons/io/output/LockableFileWriter;\n+         1: invokevirtual #68                 // Method get:()Lorg/apache/commons/io/output/LockableFileWriter;\n          4: areturn\n       LineNumberTable:\n         line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/LockableFileWriter$Builder;\n     Exceptions:\n       throws java.io.IOException\n }\n-Signature: #50                          // Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/output/LockableFileWriter;Lorg/apache/commons/io/output/LockableFileWriter$Builder;>;\n+Signature: #93                          // Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/output/LockableFileWriter;Lorg/apache/commons/io/output/LockableFileWriter$Builder;>;\n SourceFile: \"LockableFileWriter.java\"\n InnerClasses:\n-  public static #32= #18 of #8;           // Builder=class org/apache/commons/io/output/LockableFileWriter$Builder of class org/apache/commons/io/output/LockableFileWriter\n-  public static #84= #83 of #64;          // FileOrigin=class org/apache/commons/io/build/AbstractOrigin$FileOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #99= #97 of #41;          // FileOrigin=class org/apache/commons/io/build/AbstractOrigin$FileOrigin of class org/apache/commons/io/build/AbstractOrigin\n+  public static #100= #20 of #34;         // Builder=class org/apache/commons/io/output/LockableFileWriter$Builder of class org/apache/commons/io/output/LockableFileWriter\n"}]}
