{"diffoscope-json-version": 1, "source1": "first/IOBaseStream.class", "source2": "second/IOBaseStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum d835e3144d844bb295fc660656963d87be765d2bfd352240bdb1ee176f971fba\n+  SHA-256 checksum ce28049e8acb5fd109ba598739d7ddae54c0fe92631afe29756aeebf6693505e\n   Compiled from \"IOBaseStream.java\"\n public interface org.apache.commons.io.function.IOBaseStream<T extends java.lang.Object, S extends org.apache.commons.io.function.IOBaseStream<T, S, B>, B extends java.util.stream.BaseStream<T, B>> extends java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #18                         // org/apache/commons/io/function/IOBaseStream\n-  super_class: #19                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/io/function/IOBaseStream\n+  super_class: #69                        // java/lang/Object\n   interfaces: 1, fields: 0, methods: 12, attributes: 4\n Constant pool:\n-    #1 = Class              #65           // org/apache/commons/io/function/UncheckedIOBaseStream\n-    #2 = Methodref          #1.#66        // org/apache/commons/io/function/UncheckedIOBaseStream.\"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n-    #3 = InterfaceMethodref #18.#67       // org/apache/commons/io/function/IOBaseStream.unwrap:()Ljava/util/stream/BaseStream;\n-    #4 = InterfaceMethodref #68.#69       // java/util/stream/BaseStream.close:()V\n-    #5 = InterfaceMethodref #68.#70       // java/util/stream/BaseStream.isParallel:()Z\n-    #6 = InterfaceMethodref #68.#71       // java/util/stream/BaseStream.iterator:()Ljava/util/Iterator;\n-    #7 = Methodref          #72.#73       // org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-    #8 = InvokeDynamic      #0:#78        // #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-    #9 = InterfaceMethodref #68.#79       // java/util/stream/BaseStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n-   #10 = InterfaceMethodref #18.#80       // org/apache/commons/io/function/IOBaseStream.wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n-   #11 = InterfaceMethodref #18.#70       // org/apache/commons/io/function/IOBaseStream.isParallel:()Z\n-   #12 = InterfaceMethodref #68.#81       // java/util/stream/BaseStream.parallel:()Ljava/util/stream/BaseStream;\n-   #13 = InterfaceMethodref #68.#82       // java/util/stream/BaseStream.sequential:()Ljava/util/stream/BaseStream;\n-   #14 = InterfaceMethodref #68.#83       // java/util/stream/BaseStream.spliterator:()Ljava/util/Spliterator;\n-   #15 = Methodref          #84.#85       // org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-   #16 = InterfaceMethodref #68.#86       // java/util/stream/BaseStream.unordered:()Ljava/util/stream/BaseStream;\n-   #17 = Methodref          #87.#88       // org/apache/commons/io/function/Erase.run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #18 = Class              #89           // org/apache/commons/io/function/IOBaseStream\n-   #19 = Class              #90           // java/lang/Object\n-   #20 = Class              #91           // java/io/Closeable\n-   #21 = Utf8               asBaseStream\n-   #22 = Utf8               ()Ljava/util/stream/BaseStream;\n-   #23 = Utf8               Code\n-   #24 = Utf8               LineNumberTable\n-   #25 = Utf8               LocalVariableTable\n-   #26 = Utf8               this\n-   #27 = Utf8               Lorg/apache/commons/io/function/IOBaseStream;\n-   #28 = Utf8               LocalVariableTypeTable\n-   #29 = Utf8               Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n-   #30 = Utf8               Signature\n-   #31 = Utf8               ()Ljava/util/stream/BaseStream<TT;TB;>;\n-   #32 = Utf8               close\n-   #33 = Utf8               ()V\n-   #34 = Utf8               isParallel\n-   #35 = Utf8               ()Z\n-   #36 = Utf8               iterator\n-   #37 = Utf8               ()Lorg/apache/commons/io/function/IOIterator;\n-   #38 = Utf8               ()Lorg/apache/commons/io/function/IOIterator<TT;>;\n+    #1 = Class              #2            // org/apache/commons/io/function/UncheckedIOBaseStream\n+    #2 = Utf8               org/apache/commons/io/function/UncheckedIOBaseStream\n+    #3 = Methodref          #1.#4         // org/apache/commons/io/function/UncheckedIOBaseStream.\"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n+    #4 = NameAndType        #5:#6         // \"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Lorg/apache/commons/io/function/IOBaseStream;)V\n+    #7 = InterfaceMethodref #8.#9         // org/apache/commons/io/function/IOBaseStream.unwrap:()Ljava/util/stream/BaseStream;\n+    #8 = Class              #10           // org/apache/commons/io/function/IOBaseStream\n+    #9 = NameAndType        #11:#12       // unwrap:()Ljava/util/stream/BaseStream;\n+   #10 = Utf8               org/apache/commons/io/function/IOBaseStream\n+   #11 = Utf8               unwrap\n+   #12 = Utf8               ()Ljava/util/stream/BaseStream;\n+   #13 = InterfaceMethodref #14.#15       // java/util/stream/BaseStream.close:()V\n+   #14 = Class              #16           // java/util/stream/BaseStream\n+   #15 = NameAndType        #17:#18       // close:()V\n+   #16 = Utf8               java/util/stream/BaseStream\n+   #17 = Utf8               close\n+   #18 = Utf8               ()V\n+   #19 = InterfaceMethodref #14.#20       // java/util/stream/BaseStream.isParallel:()Z\n+   #20 = NameAndType        #21:#22       // isParallel:()Z\n+   #21 = Utf8               isParallel\n+   #22 = Utf8               ()Z\n+   #23 = InterfaceMethodref #14.#24       // java/util/stream/BaseStream.iterator:()Ljava/util/Iterator;\n+   #24 = NameAndType        #25:#26       // iterator:()Ljava/util/Iterator;\n+   #25 = Utf8               iterator\n+   #26 = Utf8               ()Ljava/util/Iterator;\n+   #27 = Methodref          #28.#29       // org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #28 = Class              #30           // org/apache/commons/io/function/IOIteratorAdapter\n+   #29 = NameAndType        #31:#32       // adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #30 = Utf8               org/apache/commons/io/function/IOIteratorAdapter\n+   #31 = Utf8               adapt\n+   #32 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #33 = InvokeDynamic      #0:#34        // #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+   #34 = NameAndType        #35:#36       // run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+   #35 = Utf8               run\n+   #36 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+   #37 = InterfaceMethodref #14.#38       // java/util/stream/BaseStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n+   #38 = NameAndType        #39:#40       // onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n    #39 = Utf8               onClose\n-   #40 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Lorg/apache/commons/io/function/IOBaseStream;\n-   #41 = Utf8               closeHandler\n-   #42 = Utf8               Lorg/apache/commons/io/function/IORunnable;\n-   #43 = Utf8               Exceptions\n-   #44 = Class              #92           // java/io/IOException\n-   #45 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)TS;\n-   #46 = Utf8               parallel\n-   #47 = Utf8               ()Lorg/apache/commons/io/function/IOBaseStream;\n-   #48 = Utf8               StackMapTable\n-   #49 = Utf8               ()TS;\n-   #50 = Utf8               sequential\n-   #51 = Utf8               spliterator\n-   #52 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator;\n-   #53 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-   #54 = Utf8               unordered\n-   #55 = Utf8               unwrap\n-   #56 = Utf8               ()TB;\n-   #57 = Utf8               wrap\n-   #58 = Utf8               (Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n-   #59 = Utf8               (TB;)TS;\n-   #60 = Utf8               lambda$onClose$0\n-   #61 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n-   #62 = Utf8               <T:Ljava/lang/Object;S::Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;B::Ljava/util/stream/BaseStream<TT;TB;>;>Ljava/lang/Object;Ljava/io/Closeable;\n-   #63 = Utf8               SourceFile\n-   #64 = Utf8               IOBaseStream.java\n-   #65 = Utf8               org/apache/commons/io/function/UncheckedIOBaseStream\n-   #66 = NameAndType        #93:#94       // \"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n-   #67 = NameAndType        #55:#22       // unwrap:()Ljava/util/stream/BaseStream;\n-   #68 = Class              #95           // java/util/stream/BaseStream\n-   #69 = NameAndType        #32:#33       // close:()V\n-   #70 = NameAndType        #34:#35       // isParallel:()Z\n-   #71 = NameAndType        #36:#96       // iterator:()Ljava/util/Iterator;\n-   #72 = Class              #97           // org/apache/commons/io/function/IOIteratorAdapter\n-   #73 = NameAndType        #98:#99       // adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-   #74 = Utf8               BootstrapMethods\n-   #75 = MethodHandle       6:#100        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #76 = MethodType         #33           //  ()V\n-   #77 = MethodHandle       6:#101        // REF_invokeStatic org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #78 = NameAndType        #102:#103     // run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-   #79 = NameAndType        #39:#104      // onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n-   #80 = NameAndType        #57:#58       // wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n-   #81 = NameAndType        #46:#22       // parallel:()Ljava/util/stream/BaseStream;\n-   #82 = NameAndType        #50:#22       // sequential:()Ljava/util/stream/BaseStream;\n-   #83 = NameAndType        #51:#105      // spliterator:()Ljava/util/Spliterator;\n-   #84 = Class              #106          // org/apache/commons/io/function/IOSpliteratorAdapter\n-   #85 = NameAndType        #98:#107      // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-   #86 = NameAndType        #54:#22       // unordered:()Ljava/util/stream/BaseStream;\n-   #87 = Class              #108          // org/apache/commons/io/function/Erase\n-   #88 = NameAndType        #102:#61      // run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #89 = Utf8               org/apache/commons/io/function/IOBaseStream\n-   #90 = Utf8               java/lang/Object\n-   #91 = Utf8               java/io/Closeable\n-   #92 = Utf8               java/io/IOException\n-   #93 = Utf8               <init>\n-   #94 = Utf8               (Lorg/apache/commons/io/function/IOBaseStream;)V\n-   #95 = Utf8               java/util/stream/BaseStream\n-   #96 = Utf8               ()Ljava/util/Iterator;\n-   #97 = Utf8               org/apache/commons/io/function/IOIteratorAdapter\n-   #98 = Utf8               adapt\n-   #99 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-  #100 = Methodref          #109.#110     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #101 = InterfaceMethodref #18.#111      // org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n-  #102 = Utf8               run\n-  #103 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-  #104 = Utf8               (Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n-  #105 = Utf8               ()Ljava/util/Spliterator;\n-  #106 = Utf8               org/apache/commons/io/function/IOSpliteratorAdapter\n-  #107 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-  #108 = Utf8               org/apache/commons/io/function/Erase\n-  #109 = Class              #112          // java/lang/invoke/LambdaMetafactory\n-  #110 = NameAndType        #113:#117     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #111 = NameAndType        #60:#61       // lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n-  #112 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #113 = Utf8               metafactory\n-  #114 = Class              #119          // java/lang/invoke/MethodHandles$Lookup\n-  #115 = Utf8               Lookup\n-  #116 = Utf8               InnerClasses\n-  #117 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #118 = Class              #120          // java/lang/invoke/MethodHandles\n-  #119 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #120 = Utf8               java/lang/invoke/MethodHandles\n+   #40 = Utf8               (Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n+   #41 = InterfaceMethodref #8.#42        // org/apache/commons/io/function/IOBaseStream.wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+   #42 = NameAndType        #43:#44       // wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+   #43 = Utf8               wrap\n+   #44 = Utf8               (Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+   #45 = InterfaceMethodref #8.#20        // org/apache/commons/io/function/IOBaseStream.isParallel:()Z\n+   #46 = InterfaceMethodref #14.#47       // java/util/stream/BaseStream.parallel:()Ljava/util/stream/BaseStream;\n+   #47 = NameAndType        #48:#12       // parallel:()Ljava/util/stream/BaseStream;\n+   #48 = Utf8               parallel\n+   #49 = InterfaceMethodref #14.#50       // java/util/stream/BaseStream.sequential:()Ljava/util/stream/BaseStream;\n+   #50 = NameAndType        #51:#12       // sequential:()Ljava/util/stream/BaseStream;\n+   #51 = Utf8               sequential\n+   #52 = InterfaceMethodref #14.#53       // java/util/stream/BaseStream.spliterator:()Ljava/util/Spliterator;\n+   #53 = NameAndType        #54:#55       // spliterator:()Ljava/util/Spliterator;\n+   #54 = Utf8               spliterator\n+   #55 = Utf8               ()Ljava/util/Spliterator;\n+   #56 = Methodref          #57.#58       // org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #57 = Class              #59           // org/apache/commons/io/function/IOSpliteratorAdapter\n+   #58 = NameAndType        #31:#60       // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #59 = Utf8               org/apache/commons/io/function/IOSpliteratorAdapter\n+   #60 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #61 = InterfaceMethodref #14.#62       // java/util/stream/BaseStream.unordered:()Ljava/util/stream/BaseStream;\n+   #62 = NameAndType        #63:#12       // unordered:()Ljava/util/stream/BaseStream;\n+   #63 = Utf8               unordered\n+   #64 = Methodref          #65.#66       // org/apache/commons/io/function/Erase.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+   #65 = Class              #67           // org/apache/commons/io/function/Erase\n+   #66 = NameAndType        #35:#68       // run:(Lorg/apache/commons/io/function/IORunnable;)V\n+   #67 = Utf8               org/apache/commons/io/function/Erase\n+   #68 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n+   #69 = Class              #70           // java/lang/Object\n+   #70 = Utf8               java/lang/Object\n+   #71 = Class              #72           // java/io/Closeable\n+   #72 = Utf8               java/io/Closeable\n+   #73 = Utf8               asBaseStream\n+   #74 = Utf8               Code\n+   #75 = Utf8               LineNumberTable\n+   #76 = Utf8               LocalVariableTable\n+   #77 = Utf8               this\n+   #78 = Utf8               Lorg/apache/commons/io/function/IOBaseStream;\n+   #79 = Utf8               LocalVariableTypeTable\n+   #80 = Utf8               Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n+   #81 = Utf8               Signature\n+   #82 = Utf8               ()Ljava/util/stream/BaseStream<TT;TB;>;\n+   #83 = Utf8               ()Lorg/apache/commons/io/function/IOIterator;\n+   #84 = Utf8               ()Lorg/apache/commons/io/function/IOIterator<TT;>;\n+   #85 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Lorg/apache/commons/io/function/IOBaseStream;\n+   #86 = Utf8               closeHandler\n+   #87 = Utf8               Lorg/apache/commons/io/function/IORunnable;\n+   #88 = Utf8               Exceptions\n+   #89 = Class              #90           // java/io/IOException\n+   #90 = Utf8               java/io/IOException\n+   #91 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)TS;\n+   #92 = Utf8               ()Lorg/apache/commons/io/function/IOBaseStream;\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               ()TS;\n+   #95 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator;\n+   #96 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n+   #97 = Utf8               ()TB;\n+   #98 = Utf8               (TB;)TS;\n+   #99 = Utf8               lambda$onClose$0\n+  #100 = Utf8               <T:Ljava/lang/Object;S::Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;B::Ljava/util/stream/BaseStream<TT;TB;>;>Ljava/lang/Object;Ljava/io/Closeable;\n+  #101 = Utf8               SourceFile\n+  #102 = Utf8               IOBaseStream.java\n+  #103 = Utf8               BootstrapMethods\n+  #104 = MethodHandle       6:#105        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #105 = Methodref          #106.#107     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #106 = Class              #108          // java/lang/invoke/LambdaMetafactory\n+  #107 = NameAndType        #109:#110     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #108 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #109 = Utf8               metafactory\n+  #110 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #111 = MethodType         #18           //  ()V\n+  #112 = MethodHandle       6:#113        // REF_invokeStatic org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n+  #113 = InterfaceMethodref #8.#114       // org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n+  #114 = NameAndType        #99:#68       // lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n+  #115 = Utf8               InnerClasses\n+  #116 = Class              #117          // java/lang/invoke/MethodHandles$Lookup\n+  #117 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #118 = Class              #119          // java/lang/invoke/MethodHandles\n+  #119 = Utf8               java/lang/invoke/MethodHandles\n+  #120 = Utf8               Lookup\n {\n   public default java.util.stream.BaseStream<T, B> asBaseStream();\n     descriptor: ()Ljava/util/stream/BaseStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #1                  // class org/apache/commons/io/function/UncheckedIOBaseStream\n          3: dup\n          4: aload_0\n-         5: invokespecial #2                  // Method org/apache/commons/io/function/UncheckedIOBaseStream.\"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n+         5: invokespecial #3                  // Method org/apache/commons/io/function/UncheckedIOBaseStream.\"<init>\":(Lorg/apache/commons/io/function/IOBaseStream;)V\n          8: areturn\n       LineNumberTable:\n         line 44: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n-    Signature: #31                          // ()Ljava/util/stream/BaseStream<TT;TB;>;\n+    Signature: #82                          // ()Ljava/util/stream/BaseStream<TT;TB;>;\n \n   public default void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-         6: invokeinterface #4,  1            // InterfaceMethod java/util/stream/BaseStream.close:()V\n+         1: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         6: invokeinterface #13,  1           // InterfaceMethod java/util/stream/BaseStream.close:()V\n         11: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n@@ -170,16 +170,16 @@\n \n   public default boolean isParallel();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-         6: invokeinterface #5,  1            // InterfaceMethod java/util/stream/BaseStream.isParallel:()Z\n+         1: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         6: invokeinterface #19,  1           // InterfaceMethod java/util/stream/BaseStream.isParallel:()Z\n         11: ireturn\n       LineNumberTable:\n         line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n@@ -188,97 +188,97 @@\n \n   public default org.apache.commons.io.function.IOIterator<T> iterator();\n     descriptor: ()Lorg/apache/commons/io/function/IOIterator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-         6: invokeinterface #6,  1            // InterfaceMethod java/util/stream/BaseStream.iterator:()Ljava/util/Iterator;\n-        11: invokestatic  #7                  // Method org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+         1: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         6: invokeinterface #23,  1           // InterfaceMethod java/util/stream/BaseStream.iterator:()Ljava/util/Iterator;\n+        11: invokestatic  #27                 // Method org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n         14: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n-    Signature: #38                          // ()Lorg/apache/commons/io/function/IOIterator<TT;>;\n+    Signature: #84                          // ()Lorg/apache/commons/io/function/IOIterator<TT;>;\n \n   public default S onClose(org.apache.commons.io.function.IORunnable) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IORunnable;)Lorg/apache/commons/io/function/IOBaseStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         2: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n          7: aload_1\n-         8: invokedynamic #8,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-        13: invokeinterface #9,  2            // InterfaceMethod java/util/stream/BaseStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n-        18: invokeinterface #10,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+         8: invokedynamic #33,  0             // InvokeDynamic #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+        13: invokeinterface #37,  2           // InterfaceMethod java/util/stream/BaseStream.onClose:(Ljava/lang/Runnable;)Ljava/util/stream/BaseStream;\n+        18: invokeinterface #41,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n         23: areturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n             0      24     1 closeHandler   Lorg/apache/commons/io/function/IORunnable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #45                          // (Lorg/apache/commons/io/function/IORunnable;)TS;\n+    Signature: #91                          // (Lorg/apache/commons/io/function/IORunnable;)TS;\n \n   public default S parallel();\n     descriptor: ()Lorg/apache/commons/io/function/IOBaseStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #11,  1           // InterfaceMethod isParallel:()Z\n+         1: invokeinterface #45,  1           // InterfaceMethod isParallel:()Z\n          6: ifeq          13\n          9: aload_0\n         10: goto          30\n         13: aload_0\n         14: aload_0\n-        15: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-        20: invokeinterface #12,  1           // InterfaceMethod java/util/stream/BaseStream.parallel:()Ljava/util/stream/BaseStream;\n-        25: invokeinterface #10,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+        15: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+        20: invokeinterface #46,  1           // InterfaceMethod java/util/stream/BaseStream.parallel:()Ljava/util/stream/BaseStream;\n+        25: invokeinterface #41,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n         30: areturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 80 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/function/IOBaseStream ]\n-    Signature: #49                          // ()TS;\n+    Signature: #94                          // ()TS;\n \n   public default S sequential();\n     descriptor: ()Lorg/apache/commons/io/function/IOBaseStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #11,  1           // InterfaceMethod isParallel:()Z\n+         1: invokeinterface #45,  1           // InterfaceMethod isParallel:()Z\n          6: ifeq          29\n          9: aload_0\n         10: aload_0\n-        11: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-        16: invokeinterface #13,  1           // InterfaceMethod java/util/stream/BaseStream.sequential:()Ljava/util/stream/BaseStream;\n-        21: invokeinterface #10,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+        11: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+        16: invokeinterface #49,  1           // InterfaceMethod java/util/stream/BaseStream.sequential:()Ljava/util/stream/BaseStream;\n+        21: invokeinterface #41,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n         26: goto          30\n         29: aload_0\n         30: areturn\n       LineNumberTable:\n         line 111: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -286,84 +286,84 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 29 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/function/IOBaseStream ]\n-    Signature: #49                          // ()TS;\n+    Signature: #94                          // ()TS;\n \n   public default org.apache.commons.io.function.IOSpliterator<T> spliterator();\n     descriptor: ()Lorg/apache/commons/io/function/IOSpliterator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-         6: invokeinterface #14,  1           // InterfaceMethod java/util/stream/BaseStream.spliterator:()Ljava/util/Spliterator;\n-        11: invokestatic  #15                 // Method org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+         1: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         6: invokeinterface #52,  1           // InterfaceMethod java/util/stream/BaseStream.spliterator:()Ljava/util/Spliterator;\n+        11: invokestatic  #56                 // Method org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n         14: areturn\n       LineNumberTable:\n         line 122: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n-    Signature: #53                          // ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n+    Signature: #96                          // ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n \n   public default S unordered();\n     descriptor: ()Lorg/apache/commons/io/function/IOBaseStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokeinterface #3,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n-         7: invokeinterface #16,  1           // InterfaceMethod java/util/stream/BaseStream.unordered:()Ljava/util/stream/BaseStream;\n-        12: invokeinterface #10,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n+         2: invokeinterface #7,  1            // InterfaceMethod unwrap:()Ljava/util/stream/BaseStream;\n+         7: invokeinterface #61,  1           // InterfaceMethod java/util/stream/BaseStream.unordered:()Ljava/util/stream/BaseStream;\n+        12: invokeinterface #41,  2           // InterfaceMethod wrap:(Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n         17: areturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/function/IOBaseStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;\n-    Signature: #49                          // ()TS;\n+    Signature: #94                          // ()TS;\n \n   public abstract B unwrap();\n     descriptor: ()Ljava/util/stream/BaseStream;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #56                          // ()TB;\n+    Signature: #97                          // ()TB;\n \n   public abstract S wrap(B);\n     descriptor: (Ljava/util/stream/BaseStream;)Lorg/apache/commons/io/function/IOBaseStream;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #59                          // (TB;)TS;\n+    Signature: #98                          // (TB;)TS;\n \n   private static void lambda$onClose$0(org.apache.commons.io.function.IORunnable);\n     descriptor: (Lorg/apache/commons/io/function/IORunnable;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #17                 // Method org/apache/commons/io/function/Erase.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+         1: invokestatic  #64                 // Method org/apache/commons/io/function/Erase.run:(Lorg/apache/commons/io/function/IORunnable;)V\n          4: return\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 closeHandler   Lorg/apache/commons/io/function/IORunnable;\n }\n-Signature: #62                          // <T:Ljava/lang/Object;S::Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;B::Ljava/util/stream/BaseStream<TT;TB;>;>Ljava/lang/Object;Ljava/io/Closeable;\n+Signature: #100                         // <T:Ljava/lang/Object;S::Lorg/apache/commons/io/function/IOBaseStream<TT;TS;TB;>;B::Ljava/util/stream/BaseStream<TT;TB;>;>Ljava/lang/Object;Ljava/io/Closeable;\n SourceFile: \"IOBaseStream.java\"\n-InnerClasses:\n-  public static final #115= #114 of #118; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #75 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #104 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #76 ()V\n-      #77 REF_invokeStatic org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n-      #76 ()V\n+      #111 ()V\n+      #112 REF_invokeStatic org/apache/commons/io/function/IOBaseStream.lambda$onClose$0:(Lorg/apache/commons/io/function/IORunnable;)V\n+      #111 ()V\n+InnerClasses:\n+  public static final #120= #116 of #118; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
