{"diffoscope-json-version": 1, "source1": "first/UnicodeUnescaper.class", "source2": "second/UnicodeUnescaper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,30 +3,29 @@\n \n import java.io.IOException;\n import java.io.Writer;\n \n @Deprecated\n public class UnicodeUnescaper extends CharSequenceTranslator\n {\n-    public int translate(final CharSequence input, final int index, final Writer out) throws IOException {\n-        if (input.charAt(index) != '\\\\' || index + 1 >= input.length() || input.charAt(index + 1) != 'u') {\n+    public int translate(final CharSequence charSequence, final int n, final Writer writer) throws IOException {\n+        if (charSequence.charAt(n) != '\\\\' || n + 1 >= charSequence.length() || charSequence.charAt(n + 1) != 'u') {\n             return 0;\n         }\n-        int i;\n-        for (i = 2; index + i < input.length() && input.charAt(index + i) == 'u'; ++i) {}\n-        if (index + i < input.length() && input.charAt(index + i) == '+') {\n-            ++i;\n+        int n2;\n+        for (n2 = 2; n + n2 < charSequence.length() && charSequence.charAt(n + n2) == 'u'; ++n2) {}\n+        if (n + n2 < charSequence.length() && charSequence.charAt(n + n2) == '+') {\n+            ++n2;\n         }\n-        if (index + i + 4 <= input.length()) {\n-            final CharSequence unicode = input.subSequence(index + i, index + i + 4);\n+        if (n + n2 + 4 <= charSequence.length()) {\n+            final CharSequence subSequence = charSequence.subSequence(n + n2, n + n2 + 4);\n             try {\n-                final int value = Integer.parseInt(unicode.toString(), 16);\n-                out.write(value);\n+                writer.write(Integer.parseInt(subSequence.toString(), 16));\n             }\n-            catch (final NumberFormatException nfe) {\n-                throw new IllegalArgumentException(\"Unable to parse unicode value: \" + (Object)unicode, nfe);\n+            catch (final NumberFormatException cause) {\n+                throw new IllegalArgumentException(\"Unable to parse unicode value: \" + (Object)subSequence, cause);\n             }\n-            return i + 4;\n+            return n2 + 4;\n         }\n-        throw new IllegalArgumentException(\"Less than 4 hex digits in unicode value: '\" + (Object)input.subSequence(index, input.length()) + \"' due to end of CharSequence\");\n+        throw new IllegalArgumentException(\"Less than 4 hex digits in unicode value: '\" + (Object)charSequence.subSequence(n, charSequence.length()) + \"' due to end of CharSequence\");\n     }\n }\n"}]}
