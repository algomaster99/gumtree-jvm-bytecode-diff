{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,57 +1,57 @@\n-  SHA-256 checksum 16ccbe77832308ab875f42b96b02ed8c1abc0811c5859a6d6d32d918f94d4148\n+  SHA-256 checksum 1cf110751ca1bfbd40c847461883ad161a7c30cc4c6de08ea455fb526972483e\n   Compiled from \"IOCase.java\"\n public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n   this_class: #4                          // org/apache/commons/io/IOCase\n   super_class: #40                        // java/lang/Enum\n   interfaces: 0, fields: 7, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#92        // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #93.#94       // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+    #1 = Fieldref           #4.#91        // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #92.#93       // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n     #3 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n-    #4 = Class              #95           // org/apache/commons/io/IOCase\n-    #5 = Methodref          #40.#96       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Methodref          #4.#97        // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n-    #7 = Methodref          #4.#98        // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n-    #8 = Methodref          #99.#100      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #9 = Class              #101          // java/lang/IllegalArgumentException\n-   #10 = Class              #102          // java/lang/StringBuilder\n-   #11 = Methodref          #10.#103      // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #104          // Invalid IOCase name:\n-   #13 = Methodref          #10.#105      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#106      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #15 = Methodref          #9.#107       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #40.#108      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #17 = Fieldref           #4.#109       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n-   #18 = Fieldref           #4.#110       // org/apache/commons/io/IOCase.sensitive:Z\n-   #19 = Methodref          #4.#111       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-   #20 = String             #112          // str1\n-   #21 = Methodref          #113.#114     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #22 = String             #115          // str2\n-   #23 = Methodref          #99.#116      // java/lang/String.compareTo:(Ljava/lang/String;)I\n-   #24 = Methodref          #99.#117      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n-   #25 = Methodref          #99.#118      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #26 = Methodref          #99.#119      // java/lang/String.length:()I\n-   #27 = Methodref          #99.#120      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #28 = Methodref          #4.#121       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+    #4 = Class              #94           // org/apache/commons/io/IOCase\n+    #5 = Methodref          #40.#95       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+    #6 = Methodref          #4.#96        // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n+    #7 = Methodref          #4.#97        // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n+    #8 = Methodref          #79.#98       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+    #9 = Class              #99           // java/lang/IllegalArgumentException\n+   #10 = Class              #100          // java/lang/StringBuilder\n+   #11 = Methodref          #10.#101      // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #102          // Invalid IOCase name:\n+   #13 = Methodref          #10.#103      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #15 = Methodref          #9.#105       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Methodref          #40.#106      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #17 = Fieldref           #4.#107       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n+   #18 = Fieldref           #4.#108       // org/apache/commons/io/IOCase.sensitive:Z\n+   #19 = Methodref          #4.#109       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+   #20 = String             #110          // str1\n+   #21 = Methodref          #111.#112     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #22 = String             #113          // str2\n+   #23 = Methodref          #79.#114      // java/lang/String.compareTo:(Ljava/lang/String;)I\n+   #24 = Methodref          #79.#115      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+   #25 = Methodref          #79.#116      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #26 = Methodref          #79.#117      // java/lang/String.length:()I\n+   #27 = Methodref          #79.#118      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+   #28 = Methodref          #4.#119       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n    #29 = String             #41           // SENSITIVE\n-   #30 = String             #122          // Sensitive\n-   #31 = Methodref          #4.#123       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-   #32 = Fieldref           #4.#124       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #30 = String             #120          // Sensitive\n+   #31 = Methodref          #4.#121       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+   #32 = Fieldref           #4.#122       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n    #33 = String             #43           // INSENSITIVE\n-   #34 = String             #125          // Insensitive\n-   #35 = Fieldref           #4.#126       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #34 = String             #123          // Insensitive\n+   #35 = Fieldref           #4.#124       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n    #36 = String             #44           // SYSTEM\n-   #37 = String             #127          // System\n-   #38 = Methodref          #128.#129     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #39 = Fieldref           #4.#130       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #40 = Class              #131          // java/lang/Enum\n+   #37 = String             #125          // System\n+   #38 = Methodref          #126.#127     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+   #39 = Fieldref           #4.#128       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #40 = Class              #129          // java/lang/Enum\n    #41 = Utf8               SENSITIVE\n    #42 = Utf8               Lorg/apache/commons/io/IOCase;\n    #43 = Utf8               INSENSITIVE\n    #44 = Utf8               SYSTEM\n    #45 = Utf8               serialVersionUID\n    #46 = Utf8               J\n    #47 = Utf8               ConstantValue\n@@ -81,90 +81,88 @@\n    #72 = Utf8               isCaseSensitive\n    #73 = Utf8               ()Z\n    #74 = Utf8               checkCompareTo\n    #75 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n    #76 = Utf8               checkEquals\n    #77 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n    #78 = Utf8               checkStartsWith\n-   #79 = Class              #132          // java/lang/String\n-   #80 = Class              #95           // org/apache/commons/io/IOCase\n-   #81 = Utf8               checkEndsWith\n-   #82 = Utf8               checkIndexOf\n-   #83 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-   #84 = Utf8               checkRegionMatches\n-   #85 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-   #86 = Utf8               toString\n-   #87 = Utf8               <clinit>\n-   #88 = Utf8               ()V\n-   #89 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n-   #90 = Utf8               SourceFile\n-   #91 = Utf8               IOCase.java\n-   #92 = NameAndType        #54:#55       // $VALUES:[Lorg/apache/commons/io/IOCase;\n-   #93 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n-   #94 = NameAndType        #133:#69      // clone:()Ljava/lang/Object;\n-   #95 = Utf8               org/apache/commons/io/IOCase\n-   #96 = NameAndType        #60:#134      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-   #97 = NameAndType        #56:#57       // values:()[Lorg/apache/commons/io/IOCase;\n-   #98 = NameAndType        #70:#71       // getName:()Ljava/lang/String;\n-   #99 = Class              #132          // java/lang/String\n-  #100 = NameAndType        #135:#136     // equals:(Ljava/lang/Object;)Z\n-  #101 = Utf8               java/lang/IllegalArgumentException\n-  #102 = Utf8               java/lang/StringBuilder\n-  #103 = NameAndType        #64:#88       // \"<init>\":()V\n-  #104 = Utf8               Invalid IOCase name:\n-  #105 = NameAndType        #137:#138     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #106 = NameAndType        #86:#71       // toString:()Ljava/lang/String;\n-  #107 = NameAndType        #64:#139      // \"<init>\":(Ljava/lang/String;)V\n-  #108 = NameAndType        #64:#140      // \"<init>\":(Ljava/lang/String;I)V\n-  #109 = NameAndType        #50:#51       // name:Ljava/lang/String;\n-  #110 = NameAndType        #52:#53       // sensitive:Z\n-  #111 = NameAndType        #62:#61       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-  #112 = Utf8               str1\n-  #113 = Class              #141          // java/util/Objects\n-  #114 = NameAndType        #142:#143     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #115 = Utf8               str2\n-  #116 = NameAndType        #144:#145     // compareTo:(Ljava/lang/String;)I\n-  #117 = NameAndType        #146:#145     // compareToIgnoreCase:(Ljava/lang/String;)I\n-  #118 = NameAndType        #147:#148     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #119 = NameAndType        #149:#150     // length:()I\n-  #120 = NameAndType        #151:#152     // regionMatches:(ZILjava/lang/String;II)Z\n-  #121 = NameAndType        #84:#85       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #122 = Utf8               Sensitive\n-  #123 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-  #124 = NameAndType        #41:#42       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #125 = Utf8               Insensitive\n-  #126 = NameAndType        #43:#42       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #127 = Utf8               System\n-  #128 = Class              #153          // org/apache/commons/io/FilenameUtils\n-  #129 = NameAndType        #154:#73      // isSystemWindows:()Z\n-  #130 = NameAndType        #44:#42       // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #131 = Utf8               java/lang/Enum\n-  #132 = Utf8               java/lang/String\n-  #133 = Utf8               clone\n-  #134 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #135 = Utf8               equals\n-  #136 = Utf8               (Ljava/lang/Object;)Z\n-  #137 = Utf8               append\n-  #138 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #139 = Utf8               (Ljava/lang/String;)V\n-  #140 = Utf8               (Ljava/lang/String;I)V\n-  #141 = Utf8               java/util/Objects\n-  #142 = Utf8               requireNonNull\n-  #143 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #144 = Utf8               compareTo\n-  #145 = Utf8               (Ljava/lang/String;)I\n-  #146 = Utf8               compareToIgnoreCase\n-  #147 = Utf8               equalsIgnoreCase\n-  #148 = Utf8               (Ljava/lang/String;)Z\n-  #149 = Utf8               length\n-  #150 = Utf8               ()I\n-  #151 = Utf8               regionMatches\n-  #152 = Utf8               (ZILjava/lang/String;II)Z\n-  #153 = Utf8               org/apache/commons/io/FilenameUtils\n-  #154 = Utf8               isSystemWindows\n+   #79 = Class              #130          // java/lang/String\n+   #80 = Utf8               checkEndsWith\n+   #81 = Utf8               checkIndexOf\n+   #82 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+   #83 = Utf8               checkRegionMatches\n+   #84 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+   #85 = Utf8               toString\n+   #86 = Utf8               <clinit>\n+   #87 = Utf8               ()V\n+   #88 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+   #89 = Utf8               SourceFile\n+   #90 = Utf8               IOCase.java\n+   #91 = NameAndType        #54:#55       // $VALUES:[Lorg/apache/commons/io/IOCase;\n+   #92 = Class              #55           // \"[Lorg/apache/commons/io/IOCase;\"\n+   #93 = NameAndType        #131:#69      // clone:()Ljava/lang/Object;\n+   #94 = Utf8               org/apache/commons/io/IOCase\n+   #95 = NameAndType        #60:#132      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #96 = NameAndType        #56:#57       // values:()[Lorg/apache/commons/io/IOCase;\n+   #97 = NameAndType        #70:#71       // getName:()Ljava/lang/String;\n+   #98 = NameAndType        #133:#134     // equals:(Ljava/lang/Object;)Z\n+   #99 = Utf8               java/lang/IllegalArgumentException\n+  #100 = Utf8               java/lang/StringBuilder\n+  #101 = NameAndType        #64:#87       // \"<init>\":()V\n+  #102 = Utf8               Invalid IOCase name:\n+  #103 = NameAndType        #135:#136     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #104 = NameAndType        #85:#71       // toString:()Ljava/lang/String;\n+  #105 = NameAndType        #64:#137      // \"<init>\":(Ljava/lang/String;)V\n+  #106 = NameAndType        #64:#138      // \"<init>\":(Ljava/lang/String;I)V\n+  #107 = NameAndType        #50:#51       // name:Ljava/lang/String;\n+  #108 = NameAndType        #52:#53       // sensitive:Z\n+  #109 = NameAndType        #62:#61       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+  #110 = Utf8               str1\n+  #111 = Class              #139          // java/util/Objects\n+  #112 = NameAndType        #140:#141     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #113 = Utf8               str2\n+  #114 = NameAndType        #142:#143     // compareTo:(Ljava/lang/String;)I\n+  #115 = NameAndType        #144:#143     // compareToIgnoreCase:(Ljava/lang/String;)I\n+  #116 = NameAndType        #145:#146     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #117 = NameAndType        #147:#148     // length:()I\n+  #118 = NameAndType        #149:#150     // regionMatches:(ZILjava/lang/String;II)Z\n+  #119 = NameAndType        #83:#84       // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #120 = Utf8               Sensitive\n+  #121 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #122 = NameAndType        #41:#42       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #123 = Utf8               Insensitive\n+  #124 = NameAndType        #43:#42       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #125 = Utf8               System\n+  #126 = Class              #151          // org/apache/commons/io/FilenameUtils\n+  #127 = NameAndType        #152:#73      // isSystemWindows:()Z\n+  #128 = NameAndType        #44:#42       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+  #129 = Utf8               java/lang/Enum\n+  #130 = Utf8               java/lang/String\n+  #131 = Utf8               clone\n+  #132 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #133 = Utf8               equals\n+  #134 = Utf8               (Ljava/lang/Object;)Z\n+  #135 = Utf8               append\n+  #136 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #137 = Utf8               (Ljava/lang/String;)V\n+  #138 = Utf8               (Ljava/lang/String;I)V\n+  #139 = Utf8               java/util/Objects\n+  #140 = Utf8               requireNonNull\n+  #141 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #142 = Utf8               compareTo\n+  #143 = Utf8               (Ljava/lang/String;)I\n+  #144 = Utf8               compareToIgnoreCase\n+  #145 = Utf8               equalsIgnoreCase\n+  #146 = Utf8               (Ljava/lang/String;)Z\n+  #147 = Utf8               length\n+  #148 = Utf8               ()I\n+  #149 = Utf8               regionMatches\n+  #150 = Utf8               (ZILjava/lang/String;II)Z\n+  #151 = Utf8               org/apache/commons/io/FilenameUtils\n+  #152 = Utf8               isSystemWindows\n {\n   public static final org.apache.commons.io.IOCase SENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.IOCase INSENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n@@ -606,9 +604,9 @@\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String, int ]\n }\n-Signature: #89                          // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+Signature: #88                          // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n SourceFile: \"IOCase.java\"\n"}]}
