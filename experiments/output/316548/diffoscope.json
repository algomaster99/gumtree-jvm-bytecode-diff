{"diffoscope-json-version": 1, "source1": "first/CharSequenceTranslator.class", "source2": "second/CharSequenceTranslator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,134 +1,134 @@\n-  SHA-256 checksum df42035ff751f7e41095b64b722bdcffeafb9b98fe51c8a72910dac9cbfed230\n+  SHA-256 checksum 232a5d89d4ba32407128c6367a934dbe63e002e29781fe9e77eb9899debe6c9c\n   Compiled from \"CharSequenceTranslator.java\"\n public abstract class org.apache.commons.lang3.text.translate.CharSequenceTranslator\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #20                         // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n-  super_class: #28                        // java/lang/Object\n+  this_class: #19                         // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 7, attributes: 3\n Constant pool:\n-    #1 = Methodref          #28.#51       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #52           // java/io/StringWriter\n-    #3 = InterfaceMethodref #53.#54       // java/lang/CharSequence.length:()I\n-    #4 = Methodref          #2.#55        // java/io/StringWriter.\"<init>\":(I)V\n-    #5 = Methodref          #20.#56       // org/apache/commons/lang3/text/translate/CharSequenceTranslator.translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-    #6 = Methodref          #2.#57        // java/io/StringWriter.toString:()Ljava/lang/String;\n-    #7 = Class              #58           // java/io/IOException\n-    #8 = Class              #59           // java/lang/RuntimeException\n-    #9 = Methodref          #8.#60        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #10 = Class              #61           // java/lang/IllegalArgumentException\n-   #11 = String             #62           // The Writer must not be null\n-   #12 = Methodref          #10.#63       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #20.#64       // org/apache/commons/lang3/text/translate/CharSequenceTranslator.translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n-   #14 = InterfaceMethodref #53.#65       // java/lang/CharSequence.charAt:(I)C\n-   #15 = Methodref          #66.#67       // java/io/Writer.write:(I)V\n-   #16 = Methodref          #68.#69       // java/lang/Character.isHighSurrogate:(C)Z\n-   #17 = Methodref          #68.#70       // java/lang/Character.isLowSurrogate:(C)Z\n-   #18 = Methodref          #68.#71       // java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n-   #19 = Methodref          #68.#72       // java/lang/Character.charCount:(I)I\n-   #20 = Class              #73           // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n-   #21 = Methodref          #74.#75       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #22 = Class              #76           // org/apache/commons/lang3/text/translate/AggregateTranslator\n-   #23 = Methodref          #22.#77       // org/apache/commons/lang3/text/translate/AggregateTranslator.\"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n-   #24 = Methodref          #78.#79       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #25 = Fieldref           #80.#81       // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-   #26 = Methodref          #82.#83       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #27 = Fieldref           #20.#84       // org/apache/commons/lang3/text/translate/CharSequenceTranslator.HEX_DIGITS:[C\n-   #28 = Class              #85           // java/lang/Object\n-   #29 = Utf8               HEX_DIGITS\n-   #30 = Utf8               [C\n-   #31 = Utf8               <init>\n-   #32 = Utf8               ()V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               translate\n-   #36 = Utf8               (Ljava/lang/CharSequence;ILjava/io/Writer;)I\n-   #37 = Utf8               Exceptions\n-   #38 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/String;\n-   #39 = Utf8               StackMapTable\n-   #40 = Utf8               (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-   #41 = Utf8               with\n-   #42 = Utf8               ([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;\n-   #43 = Utf8               hex\n-   #44 = Utf8               (I)Ljava/lang/String;\n-   #45 = Utf8               <clinit>\n-   #46 = Utf8               SourceFile\n-   #47 = Utf8               CharSequenceTranslator.java\n-   #48 = Utf8               Deprecated\n-   #49 = Utf8               RuntimeVisibleAnnotations\n-   #50 = Utf8               Ljava/lang/Deprecated;\n-   #51 = NameAndType        #31:#32       // \"<init>\":()V\n-   #52 = Utf8               java/io/StringWriter\n-   #53 = Class              #86           // java/lang/CharSequence\n-   #54 = NameAndType        #87:#88       // length:()I\n-   #55 = NameAndType        #31:#89       // \"<init>\":(I)V\n-   #56 = NameAndType        #35:#40       // translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-   #57 = NameAndType        #90:#91       // toString:()Ljava/lang/String;\n-   #58 = Utf8               java/io/IOException\n-   #59 = Utf8               java/lang/RuntimeException\n-   #60 = NameAndType        #31:#92       // \"<init>\":(Ljava/lang/Throwable;)V\n-   #61 = Utf8               java/lang/IllegalArgumentException\n-   #62 = Utf8               The Writer must not be null\n-   #63 = NameAndType        #31:#93       // \"<init>\":(Ljava/lang/String;)V\n-   #64 = NameAndType        #35:#36       // translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n-   #65 = NameAndType        #94:#95       // charAt:(I)C\n-   #66 = Class              #96           // java/io/Writer\n-   #67 = NameAndType        #97:#89       // write:(I)V\n-   #68 = Class              #98           // java/lang/Character\n-   #69 = NameAndType        #99:#100      // isHighSurrogate:(C)Z\n-   #70 = NameAndType        #101:#100     // isLowSurrogate:(C)Z\n-   #71 = NameAndType        #102:#103     // codePointAt:(Ljava/lang/CharSequence;I)I\n-   #72 = NameAndType        #104:#105     // charCount:(I)I\n-   #73 = Utf8               org/apache/commons/lang3/text/translate/CharSequenceTranslator\n-   #74 = Class              #106          // java/lang/System\n-   #75 = NameAndType        #107:#108     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #76 = Utf8               org/apache/commons/lang3/text/translate/AggregateTranslator\n-   #77 = NameAndType        #31:#109      // \"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n-   #78 = Class              #110          // java/lang/Integer\n-   #79 = NameAndType        #111:#44      // toHexString:(I)Ljava/lang/String;\n-   #80 = Class              #112          // java/util/Locale\n-   #81 = NameAndType        #113:#114     // ENGLISH:Ljava/util/Locale;\n-   #82 = Class              #115          // java/lang/String\n-   #83 = NameAndType        #116:#117     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #84 = NameAndType        #29:#30       // HEX_DIGITS:[C\n-   #85 = Utf8               java/lang/Object\n-   #86 = Utf8               java/lang/CharSequence\n-   #87 = Utf8               length\n-   #88 = Utf8               ()I\n-   #89 = Utf8               (I)V\n-   #90 = Utf8               toString\n-   #91 = Utf8               ()Ljava/lang/String;\n-   #92 = Utf8               (Ljava/lang/Throwable;)V\n-   #93 = Utf8               (Ljava/lang/String;)V\n-   #94 = Utf8               charAt\n-   #95 = Utf8               (I)C\n-   #96 = Utf8               java/io/Writer\n-   #97 = Utf8               write\n-   #98 = Utf8               java/lang/Character\n-   #99 = Utf8               isHighSurrogate\n-  #100 = Utf8               (C)Z\n-  #101 = Utf8               isLowSurrogate\n-  #102 = Utf8               codePointAt\n-  #103 = Utf8               (Ljava/lang/CharSequence;I)I\n-  #104 = Utf8               charCount\n-  #105 = Utf8               (I)I\n-  #106 = Utf8               java/lang/System\n-  #107 = Utf8               arraycopy\n-  #108 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #109 = Utf8               ([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n-  #110 = Utf8               java/lang/Integer\n-  #111 = Utf8               toHexString\n-  #112 = Utf8               java/util/Locale\n-  #113 = Utf8               ENGLISH\n-  #114 = Utf8               Ljava/util/Locale;\n-  #115 = Utf8               java/lang/String\n-  #116 = Utf8               toUpperCase\n-  #117 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/io/StringWriter\n+    #8 = Utf8               java/io/StringWriter\n+    #9 = InterfaceMethodref #10.#11       // java/lang/CharSequence.length:()I\n+   #10 = Class              #12           // java/lang/CharSequence\n+   #11 = NameAndType        #13:#14       // length:()I\n+   #12 = Utf8               java/lang/CharSequence\n+   #13 = Utf8               length\n+   #14 = Utf8               ()I\n+   #15 = Methodref          #7.#16        // java/io/StringWriter.\"<init>\":(I)V\n+   #16 = NameAndType        #5:#17        // \"<init>\":(I)V\n+   #17 = Utf8               (I)V\n+   #18 = Methodref          #19.#20       // org/apache/commons/lang3/text/translate/CharSequenceTranslator.translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+   #19 = Class              #21           // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+   #20 = NameAndType        #22:#23       // translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+   #21 = Utf8               org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+   #22 = Utf8               translate\n+   #23 = Utf8               (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+   #24 = Methodref          #7.#25        // java/io/StringWriter.toString:()Ljava/lang/String;\n+   #25 = NameAndType        #26:#27       // toString:()Ljava/lang/String;\n+   #26 = Utf8               toString\n+   #27 = Utf8               ()Ljava/lang/String;\n+   #28 = Class              #29           // java/io/IOException\n+   #29 = Utf8               java/io/IOException\n+   #30 = Class              #31           // java/lang/RuntimeException\n+   #31 = Utf8               java/lang/RuntimeException\n+   #32 = Methodref          #30.#33       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #33 = NameAndType        #5:#34        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #34 = Utf8               (Ljava/lang/Throwable;)V\n+   #35 = Class              #36           // java/lang/IllegalArgumentException\n+   #36 = Utf8               java/lang/IllegalArgumentException\n+   #37 = String             #38           // The Writer must not be null\n+   #38 = Utf8               The Writer must not be null\n+   #39 = Methodref          #35.#40       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #40 = NameAndType        #5:#41        // \"<init>\":(Ljava/lang/String;)V\n+   #41 = Utf8               (Ljava/lang/String;)V\n+   #42 = Methodref          #19.#43       // org/apache/commons/lang3/text/translate/CharSequenceTranslator.translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n+   #43 = NameAndType        #22:#44       // translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n+   #44 = Utf8               (Ljava/lang/CharSequence;ILjava/io/Writer;)I\n+   #45 = InterfaceMethodref #10.#46       // java/lang/CharSequence.charAt:(I)C\n+   #46 = NameAndType        #47:#48       // charAt:(I)C\n+   #47 = Utf8               charAt\n+   #48 = Utf8               (I)C\n+   #49 = Methodref          #50.#51       // java/io/Writer.write:(I)V\n+   #50 = Class              #52           // java/io/Writer\n+   #51 = NameAndType        #53:#17       // write:(I)V\n+   #52 = Utf8               java/io/Writer\n+   #53 = Utf8               write\n+   #54 = Methodref          #55.#56       // java/lang/Character.isHighSurrogate:(C)Z\n+   #55 = Class              #57           // java/lang/Character\n+   #56 = NameAndType        #58:#59       // isHighSurrogate:(C)Z\n+   #57 = Utf8               java/lang/Character\n+   #58 = Utf8               isHighSurrogate\n+   #59 = Utf8               (C)Z\n+   #60 = Methodref          #55.#61       // java/lang/Character.isLowSurrogate:(C)Z\n+   #61 = NameAndType        #62:#59       // isLowSurrogate:(C)Z\n+   #62 = Utf8               isLowSurrogate\n+   #63 = Methodref          #55.#64       // java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n+   #64 = NameAndType        #65:#66       // codePointAt:(Ljava/lang/CharSequence;I)I\n+   #65 = Utf8               codePointAt\n+   #66 = Utf8               (Ljava/lang/CharSequence;I)I\n+   #67 = Methodref          #55.#68       // java/lang/Character.charCount:(I)I\n+   #68 = NameAndType        #69:#70       // charCount:(I)I\n+   #69 = Utf8               charCount\n+   #70 = Utf8               (I)I\n+   #71 = Methodref          #72.#73       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #72 = Class              #74           // java/lang/System\n+   #73 = NameAndType        #75:#76       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #74 = Utf8               java/lang/System\n+   #75 = Utf8               arraycopy\n+   #76 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #77 = Class              #78           // org/apache/commons/lang3/text/translate/AggregateTranslator\n+   #78 = Utf8               org/apache/commons/lang3/text/translate/AggregateTranslator\n+   #79 = Methodref          #77.#80       // org/apache/commons/lang3/text/translate/AggregateTranslator.\"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n+   #80 = NameAndType        #5:#81        // \"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n+   #81 = Utf8               ([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n+   #82 = Methodref          #83.#84       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #83 = Class              #85           // java/lang/Integer\n+   #84 = NameAndType        #86:#87       // toHexString:(I)Ljava/lang/String;\n+   #85 = Utf8               java/lang/Integer\n+   #86 = Utf8               toHexString\n+   #87 = Utf8               (I)Ljava/lang/String;\n+   #88 = Fieldref           #89.#90       // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+   #89 = Class              #91           // java/util/Locale\n+   #90 = NameAndType        #92:#93       // ENGLISH:Ljava/util/Locale;\n+   #91 = Utf8               java/util/Locale\n+   #92 = Utf8               ENGLISH\n+   #93 = Utf8               Ljava/util/Locale;\n+   #94 = Methodref          #95.#96       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #95 = Class              #97           // java/lang/String\n+   #96 = NameAndType        #98:#99       // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #97 = Utf8               java/lang/String\n+   #98 = Utf8               toUpperCase\n+   #99 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #100 = Fieldref           #19.#101      // org/apache/commons/lang3/text/translate/CharSequenceTranslator.HEX_DIGITS:[C\n+  #101 = NameAndType        #102:#103     // HEX_DIGITS:[C\n+  #102 = Utf8               HEX_DIGITS\n+  #103 = Utf8               [C\n+  #104 = Utf8               Code\n+  #105 = Utf8               LineNumberTable\n+  #106 = Utf8               Exceptions\n+  #107 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/String;\n+  #108 = Utf8               StackMapTable\n+  #109 = Utf8               with\n+  #110 = Utf8               ([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;\n+  #111 = Utf8               hex\n+  #112 = Utf8               <clinit>\n+  #113 = Utf8               SourceFile\n+  #114 = Utf8               CharSequenceTranslator.java\n+  #115 = Utf8               Deprecated\n+  #116 = Utf8               RuntimeVisibleAnnotations\n+  #117 = Utf8               Ljava/lang/Deprecated;\n {\n   static final char[] HEX_DIGITS;\n     descriptor: [C\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.lang3.text.translate.CharSequenceTranslator();\n     descriptor: ()V\n@@ -152,34 +152,34 @@\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #2                  // class java/io/StringWriter\n+         6: new           #7                  // class java/io/StringWriter\n          9: dup\n         10: aload_1\n-        11: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n+        11: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n         16: iconst_2\n         17: imul\n-        18: invokespecial #4                  // Method java/io/StringWriter.\"<init>\":(I)V\n+        18: invokespecial #15                 // Method java/io/StringWriter.\"<init>\":(I)V\n         21: astore_2\n         22: aload_0\n         23: aload_1\n         24: aload_2\n-        25: invokevirtual #5                  // Method translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+        25: invokevirtual #18                 // Method translate:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n         28: aload_2\n-        29: invokevirtual #6                  // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        29: invokevirtual #24                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n         32: areturn\n         33: astore_2\n-        34: new           #8                  // class java/lang/RuntimeException\n+        34: new           #30                 // class java/lang/RuntimeException\n         37: dup\n         38: aload_2\n-        39: invokespecial #9                  // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        39: invokespecial #32                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         42: athrow\n       Exception table:\n          from    to  target type\n              6    32    33   Class java/io/IOException\n       LineNumberTable:\n         line 59: 0\n         line 60: 4\n@@ -196,74 +196,74 @@\n   public final void translate(java.lang.CharSequence, java.io.Writer) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=8, args_size=3\n          0: aload_2\n          1: ifnonnull     14\n-         4: new           #10                 // class java/lang/IllegalArgumentException\n+         4: new           #35                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #11                 // String The Writer must not be null\n-        10: invokespecial #12                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #37                 // String The Writer must not be null\n+        10: invokespecial #39                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_1\n         15: ifnonnull     19\n         18: return\n         19: iconst_0\n         20: istore_3\n         21: aload_1\n-        22: invokeinterface #3,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n+        22: invokeinterface #9,  1            // InterfaceMethod java/lang/CharSequence.length:()I\n         27: istore        4\n         29: iload_3\n         30: iload         4\n         32: if_icmpge     140\n         35: aload_0\n         36: aload_1\n         37: iload_3\n         38: aload_2\n-        39: invokevirtual #13                 // Method translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n+        39: invokevirtual #42                 // Method translate:(Ljava/lang/CharSequence;ILjava/io/Writer;)I\n         42: istore        5\n         44: iload         5\n         46: ifne          110\n         49: aload_1\n         50: iload_3\n-        51: invokeinterface #14,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        51: invokeinterface #45,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         56: istore        6\n         58: aload_2\n         59: iload         6\n-        61: invokevirtual #15                 // Method java/io/Writer.write:(I)V\n+        61: invokevirtual #49                 // Method java/io/Writer.write:(I)V\n         64: iinc          3, 1\n         67: iload         6\n-        69: invokestatic  #16                 // Method java/lang/Character.isHighSurrogate:(C)Z\n+        69: invokestatic  #54                 // Method java/lang/Character.isHighSurrogate:(C)Z\n         72: ifeq          29\n         75: iload_3\n         76: iload         4\n         78: if_icmpge     29\n         81: aload_1\n         82: iload_3\n-        83: invokeinterface #14,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        83: invokeinterface #45,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         88: istore        7\n         90: iload         7\n-        92: invokestatic  #17                 // Method java/lang/Character.isLowSurrogate:(C)Z\n+        92: invokestatic  #60                 // Method java/lang/Character.isLowSurrogate:(C)Z\n         95: ifeq          107\n         98: aload_2\n         99: iload         7\n-       101: invokevirtual #15                 // Method java/io/Writer.write:(I)V\n+       101: invokevirtual #49                 // Method java/io/Writer.write:(I)V\n        104: iinc          3, 1\n        107: goto          29\n        110: iconst_0\n        111: istore        6\n        113: iload         6\n        115: iload         5\n        117: if_icmpge     137\n        120: iload_3\n        121: aload_1\n        122: iload_3\n-       123: invokestatic  #18                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n-       126: invokestatic  #19                 // Method java/lang/Character.charCount:(I)I\n+       123: invokestatic  #63                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n+       126: invokestatic  #67                 // Method java/lang/Character.charCount:(I)I\n        129: iadd\n        130: istore_3\n        131: iinc          6, 1\n        134: goto          113\n        137: goto          29\n        140: return\n       LineNumberTable:\n@@ -315,47 +315,47 @@\n     flags: (0x0091) ACC_PUBLIC, ACC_FINAL, ACC_VARARGS\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n          1: arraylength\n          2: iconst_1\n          3: iadd\n-         4: anewarray     #20                 // class org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+         4: anewarray     #19                 // class org/apache/commons/lang3/text/translate/CharSequenceTranslator\n          7: astore_2\n          8: aload_2\n          9: iconst_0\n         10: aload_0\n         11: aastore\n         12: aload_1\n         13: iconst_0\n         14: aload_2\n         15: iconst_1\n         16: aload_1\n         17: arraylength\n-        18: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        21: new           #22                 // class org/apache/commons/lang3/text/translate/AggregateTranslator\n+        18: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        21: new           #77                 // class org/apache/commons/lang3/text/translate/AggregateTranslator\n         24: dup\n         25: aload_2\n-        26: invokespecial #23                 // Method org/apache/commons/lang3/text/translate/AggregateTranslator.\"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n+        26: invokespecial #79                 // Method org/apache/commons/lang3/text/translate/AggregateTranslator.\"<init>\":([Lorg/apache/commons/lang3/text/translate/CharSequenceTranslator;)V\n         29: areturn\n       LineNumberTable:\n         line 122: 0\n         line 123: 8\n         line 124: 12\n         line 125: 21\n \n   public static java.lang.String hex(int);\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iload_0\n-         1: invokestatic  #24                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-         4: getstatic     #25                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;\n-         7: invokevirtual #26                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         1: invokestatic  #82                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+         4: getstatic     #88                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;\n+         7: invokevirtual #94                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n         10: areturn\n       LineNumberTable:\n         line 136: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n@@ -423,17 +423,17 @@\n         83: bipush        14\n         85: bipush        69\n         87: castore\n         88: dup\n         89: bipush        15\n         91: bipush        70\n         93: castore\n-        94: putstatic     #27                 // Field HEX_DIGITS:[C\n+        94: putstatic     #100                // Field HEX_DIGITS:[C\n         97: return\n       LineNumberTable:\n         line 37: 0\n }\n SourceFile: \"CharSequenceTranslator.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #50()\n+  0: #117()\n     java.lang.Deprecated\n"}]}
