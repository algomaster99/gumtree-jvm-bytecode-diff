{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIOutputStream.class", "source2": "second/FromNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,124 +1,126 @@\n-  SHA-256 checksum f5d430538371aa91da60f26aa9faab339b9cf0da8052feca11208c03a939f770\n+  SHA-256 checksum 00dda6c68bfea85c15f212a0ee7b012c4736241e16142623c4cac1bd82bc6fae\n   Compiled from \"FromNetASCIIOutputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  super_class: #2                         // java/io/FilterOutputStream\n+  this_class: #1                          // org/apache/commons/net/io/FromNetASCIIOutputStream\n+  super_class: #3                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Class              #4             // java/io/FilterOutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #1 = Class              #2             // org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #2 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #3 = Class              #4             // java/io/FilterOutputStream\n    #4 = Utf8               java/io/FilterOutputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/io/OutputStream;)V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n-   #8 = Class              #10            // org/apache/commons/net/io/FromNetASCIIOutputStream\n-   #9 = NameAndType        #11:#12        // lastWasCR:Z\n-  #10 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #11 = Utf8               lastWasCR\n-  #12 = Utf8               Z\n-  #13 = Fieldref           #14.#15        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-  #14 = Class              #16            // org/apache/commons/net/io/FromNetASCIIInputStream\n-  #15 = NameAndType        #17:#12        // _noConversionRequired:Z\n-  #16 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #17 = Utf8               _noConversionRequired\n-  #18 = Methodref          #2.#19         // java/io/FilterOutputStream.close:()V\n-  #19 = NameAndType        #20:#21        // close:()V\n+   #5 = Utf8               lastWasCR\n+   #6 = Utf8               Z\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/OutputStream;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/OutputStream;)V\n+  #12 = Fieldref           #1.#13         // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n+  #13 = NameAndType        #5:#6          // lastWasCR:Z\n+  #14 = Utf8               LineNumberTable\n+  #15 = Utf8               LocalVariableTable\n+  #16 = Utf8               this\n+  #17 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+  #18 = Utf8               output\n+  #19 = Utf8               Ljava/io/OutputStream;\n   #20 = Utf8               close\n   #21 = Utf8               ()V\n-  #22 = Fieldref           #8.#23         // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n-  #23 = NameAndType        #24:#25        // out:Ljava/io/OutputStream;\n-  #24 = Utf8               out\n-  #25 = Utf8               Ljava/io/OutputStream;\n-  #26 = Methodref          #27.#28        // java/io/OutputStream.write:(I)V\n-  #27 = Class              #29            // java/io/OutputStream\n-  #28 = NameAndType        #30:#31        // write:(I)V\n-  #29 = Utf8               java/io/OutputStream\n-  #30 = Utf8               write\n-  #31 = Utf8               (I)V\n-  #32 = Methodref          #8.#33         // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n-  #33 = NameAndType        #30:#34        // write:([BII)V\n-  #34 = Utf8               ([BII)V\n-  #35 = Methodref          #27.#33        // java/io/OutputStream.write:([BII)V\n-  #36 = Methodref          #8.#37         // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n-  #37 = NameAndType        #38:#31        // writeInt:(I)V\n-  #38 = Utf8               writeInt\n-  #39 = Fieldref           #14.#40        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-  #40 = NameAndType        #41:#42        // _lineSeparatorBytes:[B\n-  #41 = Utf8               _lineSeparatorBytes\n-  #42 = Utf8               [B\n-  #43 = Methodref          #27.#44        // java/io/OutputStream.write:([B)V\n-  #44 = NameAndType        #30:#45        // write:([B)V\n-  #45 = Utf8               ([B)V\n-  #46 = Utf8               Code\n-  #47 = Utf8               LineNumberTable\n-  #48 = Utf8               LocalVariableTable\n-  #49 = Utf8               this\n-  #50 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-  #51 = Utf8               output\n-  #52 = Utf8               StackMapTable\n-  #53 = Utf8               Exceptions\n-  #54 = Class              #55            // java/io/IOException\n-  #55 = Utf8               java/io/IOException\n-  #56 = Utf8               buffer\n-  #57 = Utf8               offset\n-  #58 = Utf8               I\n-  #59 = Utf8               length\n-  #60 = Utf8               ch\n+  #22 = Utf8               Exceptions\n+  #23 = Class              #24            // java/io/IOException\n+  #24 = Utf8               java/io/IOException\n+  #25 = Fieldref           #26.#28        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+  #26 = Class              #27            // org/apache/commons/net/io/FromNetASCIIInputStream\n+  #27 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+  #28 = NameAndType        #29:#6         // _noConversionRequired:Z\n+  #29 = Utf8               _noConversionRequired\n+  #30 = Methodref          #3.#31         // java/io/FilterOutputStream.close:()V\n+  #31 = NameAndType        #20:#21        // close:()V\n+  #32 = Fieldref           #1.#33         // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n+  #33 = NameAndType        #34:#19        // out:Ljava/io/OutputStream;\n+  #34 = Utf8               out\n+  #35 = Methodref          #36.#38        // java/io/OutputStream.write:(I)V\n+  #36 = Class              #37            // java/io/OutputStream\n+  #37 = Utf8               java/io/OutputStream\n+  #38 = NameAndType        #39:#40        // write:(I)V\n+  #39 = Utf8               write\n+  #40 = Utf8               (I)V\n+  #41 = Utf8               StackMapTable\n+  #42 = Utf8               ([B)V\n+  #43 = Methodref          #1.#44         // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n+  #44 = NameAndType        #39:#45        // write:([BII)V\n+  #45 = Utf8               ([BII)V\n+  #46 = Utf8               buffer\n+  #47 = Utf8               [B\n+  #48 = Methodref          #36.#44        // java/io/OutputStream.write:([BII)V\n+  #49 = Methodref          #1.#50         // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n+  #50 = NameAndType        #51:#40        // writeInt:(I)V\n+  #51 = Utf8               writeInt\n+  #52 = Utf8               offset\n+  #53 = Utf8               I\n+  #54 = Utf8               length\n+  #55 = Utf8               ch\n+  #56 = Fieldref           #26.#57        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+  #57 = NameAndType        #58:#47        // _lineSeparatorBytes:[B\n+  #58 = Utf8               _lineSeparatorBytes\n+  #59 = Methodref          #36.#60        // java/io/OutputStream.write:([B)V\n+  #60 = NameAndType        #39:#42        // write:([B)V\n   #61 = Utf8               SourceFile\n   #62 = Utf8               FromNetASCIIOutputStream.java\n {\n   private boolean lastWasCR;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.net.io.FromNetASCIIOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #10                 // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #7                  // Field lastWasCR:Z\n+         7: putfield      #12                 // Field lastWasCR:Z\n         10: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 5\n         line 46: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0      11     1 output   Ljava/io/OutputStream;\n \n   public synchronized void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #25                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          11\n          6: aload_0\n-         7: invokespecial #18                 // Method java/io/FilterOutputStream.close:()V\n+         7: invokespecial #30                 // Method java/io/FilterOutputStream.close:()V\n         10: return\n         11: aload_0\n-        12: getfield      #7                  // Field lastWasCR:Z\n+        12: getfield      #12                 // Field lastWasCR:Z\n         15: ifeq          27\n         18: aload_0\n-        19: getfield      #22                 // Field out:Ljava/io/OutputStream;\n+        19: getfield      #32                 // Field out:Ljava/io/OutputStream;\n         22: bipush        13\n-        24: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        24: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V\n         27: aload_0\n-        28: invokespecial #18                 // Method java/io/FilterOutputStream.close:()V\n+        28: invokespecial #30                 // Method java/io/FilterOutputStream.close:()V\n         31: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 6\n         line 57: 10\n         line 60: 11\n         line 61: 18\n@@ -126,183 +128,182 @@\n         line 64: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void write(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #32                 // Method write:([BII)V\n+         5: invokevirtual #43                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 74: 0\n         line 75: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0       9     1 buffer   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n-         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-         3: ifeq          17\n+         0: getstatic     #25                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         3: ifeq          27\n          6: aload_0\n-         7: getfield      #22                 // Field out:Ljava/io/OutputStream;\n+         7: getfield      #32                 // Field out:Ljava/io/OutputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V\n+        13: invokevirtual #48                 // Method java/io/OutputStream.write:([BII)V\n         16: return\n-        17: iload_3\n-        18: iinc          3, -1\n-        21: ifle          37\n-        24: aload_0\n-        25: aload_1\n-        26: iload_2\n-        27: iinc          2, 1\n-        30: baload\n-        31: invokespecial #36                 // Method writeInt:(I)V\n-        34: goto          17\n-        37: return\n+        17: aload_0\n+        18: aload_1\n+        19: iload_2\n+        20: iinc          2, 1\n+        23: baload\n+        24: invokespecial #49                 // Method writeInt:(I)V\n+        27: iload_3\n+        28: iinc          3, -1\n+        31: ifgt          17\n+        34: return\n       LineNumberTable:\n         line 87: 0\n         line 90: 6\n         line 91: 16\n-        line 94: 17\n-        line 95: 24\n-        line 97: 37\n+        line 95: 17\n+        line 94: 27\n+        line 97: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      38     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-            0      38     1 buffer   [B\n-            0      38     2 offset   I\n-            0      38     3 length   I\n+            0      35     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+            0      35     1 buffer   [B\n+            0      35     2 offset   I\n+            0      35     3 length   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n-        frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 9 /* same */\n \n   public synchronized void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #25                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          15\n          6: aload_0\n-         7: getfield      #22                 // Field out:Ljava/io/OutputStream;\n+         7: getfield      #32                 // Field out:Ljava/io/OutputStream;\n         10: iload_1\n-        11: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V\n         14: return\n         15: aload_0\n         16: iload_1\n-        17: invokespecial #36                 // Method writeInt:(I)V\n+        17: invokespecial #49                 // Method writeInt:(I)V\n         20: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 6\n         line 111: 14\n         line 114: 15\n         line 115: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0      21     1    ch   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeInt(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n-         1: lookupswitch  { // 2\n-                      10: 36\n-                      13: 28\n-                 default: 73\n+         1: tableswitch   { // 10 to 13\n+                      10: 40\n+                      11: 77\n+                      12: 77\n+                      13: 32\n+                 default: 77\n             }\n-        28: aload_0\n-        29: iconst_1\n-        30: putfield      #7                  // Field lastWasCR:Z\n-        33: goto          102\n-        36: aload_0\n-        37: getfield      #7                  // Field lastWasCR:Z\n-        40: ifeq          61\n-        43: aload_0\n-        44: getfield      #22                 // Field out:Ljava/io/OutputStream;\n-        47: getstatic     #39                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-        50: invokevirtual #43                 // Method java/io/OutputStream.write:([B)V\n-        53: aload_0\n-        54: iconst_0\n-        55: putfield      #7                  // Field lastWasCR:Z\n-        58: goto          102\n-        61: aload_0\n-        62: getfield      #22                 // Field out:Ljava/io/OutputStream;\n-        65: bipush        10\n-        67: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n-        70: goto          102\n-        73: aload_0\n-        74: getfield      #7                  // Field lastWasCR:Z\n-        77: ifeq          94\n-        80: aload_0\n-        81: getfield      #22                 // Field out:Ljava/io/OutputStream;\n-        84: bipush        13\n-        86: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n-        89: aload_0\n-        90: iconst_0\n-        91: putfield      #7                  // Field lastWasCR:Z\n-        94: aload_0\n-        95: getfield      #22                 // Field out:Ljava/io/OutputStream;\n-        98: iload_1\n-        99: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n-       102: return\n+        32: aload_0\n+        33: iconst_1\n+        34: putfield      #12                 // Field lastWasCR:Z\n+        37: goto          106\n+        40: aload_0\n+        41: getfield      #12                 // Field lastWasCR:Z\n+        44: ifeq          65\n+        47: aload_0\n+        48: getfield      #32                 // Field out:Ljava/io/OutputStream;\n+        51: getstatic     #56                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+        54: invokevirtual #59                 // Method java/io/OutputStream.write:([B)V\n+        57: aload_0\n+        58: iconst_0\n+        59: putfield      #12                 // Field lastWasCR:Z\n+        62: goto          106\n+        65: aload_0\n+        66: getfield      #32                 // Field out:Ljava/io/OutputStream;\n+        69: bipush        10\n+        71: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V\n+        74: goto          106\n+        77: aload_0\n+        78: getfield      #12                 // Field lastWasCR:Z\n+        81: ifeq          98\n+        84: aload_0\n+        85: getfield      #32                 // Field out:Ljava/io/OutputStream;\n+        88: bipush        13\n+        90: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V\n+        93: aload_0\n+        94: iconst_0\n+        95: putfield      #12                 // Field lastWasCR:Z\n+        98: aload_0\n+        99: getfield      #32                 // Field out:Ljava/io/OutputStream;\n+       102: iload_1\n+       103: invokevirtual #35                 // Method java/io/OutputStream.write:(I)V\n+       106: return\n       LineNumberTable:\n         line 118: 0\n-        line 120: 28\n-        line 122: 33\n-        line 124: 36\n-        line 125: 43\n-        line 126: 53\n-        line 127: 58\n-        line 129: 61\n-        line 130: 70\n-        line 132: 73\n-        line 133: 80\n-        line 134: 89\n-        line 136: 94\n-        line 139: 102\n+        line 120: 32\n+        line 122: 37\n+        line 124: 40\n+        line 125: 47\n+        line 126: 57\n+        line 127: 62\n+        line 129: 65\n+        line 130: 74\n+        line 132: 77\n+        line 133: 84\n+        line 134: 93\n+        line 136: 98\n+        line 139: 106\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     103     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-            0     103     1    ch   I\n+            0     107     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+            0     107     1    ch   I\n       StackMapTable: number_of_entries = 6\n-        frame_type = 28 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 7 /* same */\n         frame_type = 24 /* same */\n         frame_type = 11 /* same */\n         frame_type = 20 /* same */\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"FromNetASCIIOutputStream.java\"\n"}]}
