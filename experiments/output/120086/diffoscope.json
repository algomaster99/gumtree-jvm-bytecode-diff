{"diffoscope-json-version": 1, "source1": "first/SuppressionsStringPrinter.class", "source2": "second/SuppressionsStringPrinter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,14 +16,19 @@\n import java.util.regex.Pattern;\n \n public final class SuppressionsStringPrinter\n {\n     private static final Pattern VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX;\n     private static final String LINE_SEPARATOR;\n     \n+    static {\n+        VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX = Pattern.compile(\"^(\\\\d+):(\\\\d+)$\");\n+        LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+    }\n+    \n     private SuppressionsStringPrinter() {\n     }\n     \n     public static String printSuppressions(final File file, final String suppressionLineColumnNumber, final int tabWidth) throws IOException, CheckstyleException {\n         final Matcher matcher = SuppressionsStringPrinter.VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX.matcher(suppressionLineColumnNumber);\n         if (!matcher.matches()) {\n             final String exceptionMsg = String.format(Locale.ROOT, \"%s does not match valid format 'line:column'.\", suppressionLineColumnNumber);\n@@ -37,13 +42,8 @@\n     }\n     \n     private static String generate(final FileText fileText, final DetailAST detailAST, final int lineNumber, final int columnNumber, final int tabWidth) {\n         final XpathQueryGenerator queryGenerator = new XpathQueryGenerator(detailAST, lineNumber, columnNumber, fileText, tabWidth);\n         final List<String> suppressions = queryGenerator.generate();\n         return suppressions.stream().collect((Collector<? super Object, ?, String>)Collectors.joining(SuppressionsStringPrinter.LINE_SEPARATOR, \"\", SuppressionsStringPrinter.LINE_SEPARATOR));\n     }\n-    \n-    static {\n-        VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX = Pattern.compile(\"^(\\\\d+):(\\\\d+)$\");\n-        LINE_SEPARATOR = System.getProperty(\"line.separator\");\n-    }\n }\n"}]}
