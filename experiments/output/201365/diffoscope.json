{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic$CologneOutputBuffer.class", "source2": "second/ColognePhonetic$CologneOutputBuffer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,26 +1,26 @@\n \n package org.apache.commons.codec.language;\n \n private class CologneOutputBuffer extends ColognePhonetic.CologneBuffer\n {\n     private char lastCode;\n     \n-    public CologneOutputBuffer(final ColognePhonetic this$0, final int buffSize) {\n-        super(this.this$0 = this$0, buffSize);\n+    public CologneOutputBuffer(final ColognePhonetic this$0, final int n) {\n+        super(this.this$0 = this$0, n);\n         this.lastCode = '/';\n     }\n     \n-    public void put(final char code) {\n-        if (code != '-' && this.lastCode != code && (code != '0' || this.length == 0)) {\n-            this.data[this.length] = code;\n+    public void put(final char lastCode) {\n+        if (lastCode != '-' && this.lastCode != lastCode && (lastCode != '0' || this.length == 0)) {\n+            this.data[this.length] = lastCode;\n             ++this.length;\n         }\n-        this.lastCode = code;\n+        this.lastCode = lastCode;\n     }\n     \n-    protected char[] copyData(final int start, final int length) {\n-        final char[] newData = new char[length];\n-        System.arraycopy(this.data, start, newData, 0, length);\n-        return newData;\n+    protected char[] copyData(final int n, final int n2) {\n+        final char[] array = new char[n2];\n+        System.arraycopy(this.data, n, array, 0, n2);\n+        return array;\n     }\n }\n"}]}
