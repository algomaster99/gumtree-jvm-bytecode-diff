{"diffoscope-json-version": 1, "source1": "first/ByteUtils.class", "source2": "second/ByteUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,100 +1,100 @@\n-  SHA-256 checksum 26c32bf1bae65e291d87728c639463d5461305f899b5e53afe6711da5afd39dc\n+  SHA-256 checksum 4de642c3d20f10d92810c0fb5cd0a45b3d8aec024136961a9b942f57dbc78cc2\n   Compiled from \"ByteUtils.java\"\n public final class org.apache.commons.compress.utils.ByteUtils\n   minor version: 0\n   major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/compress/utils/ByteUtils\n-  super_class: #21                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/utils/ByteUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 11, attributes: 2\n Constant pool:\n-   #1 = Methodref          #21.#52        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #20.#53        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #3 = Methodref          #20.#54        // org/apache/commons/compress/utils/ByteUtils.checkReadLength:(I)V\n-   #4 = Long               255l\n-   #6 = Methodref          #55.#56        // java/io/InputStream.read:()I\n-   #7 = Long               -1l\n-   #9 = Class              #57            // java/io/IOException\n-  #10 = String             #58            // Premature end of data\n-  #11 = Methodref          #9.#59         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = InterfaceMethodref #29.#60        // org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n-  #13 = InterfaceMethodref #61.#62        // java/io/DataInput.readUnsignedByte:()I\n-  #14 = Methodref          #63.#64        // java/io/OutputStream.write:(I)V\n-  #15 = InterfaceMethodref #27.#65        // org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n-  #16 = InterfaceMethodref #66.#64        // java/io/DataOutput.write:(I)V\n-  #17 = Class              #67            // java/lang/IllegalArgumentException\n-  #18 = String             #68            // Can\\'t read more than eight bytes into a long value\n-  #19 = Methodref          #17.#59        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #20 = Class              #69            // org/apache/commons/compress/utils/ByteUtils\n-  #21 = Class              #70            // java/lang/Object\n-  #22 = Class              #71            // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-  #23 = Utf8               OutputStreamByteConsumer\n-  #24 = Utf8               InnerClasses\n-  #25 = Class              #72            // org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n-  #26 = Utf8               InputStreamByteSupplier\n-  #27 = Class              #73            // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-  #28 = Utf8               ByteConsumer\n-  #29 = Class              #74            // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #30 = Utf8               ByteSupplier\n-  #31 = Utf8               <init>\n-  #32 = Utf8               ()V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               fromLittleEndian\n-  #36 = Utf8               ([B)J\n-  #37 = Utf8               ([BII)J\n-  #38 = Utf8               StackMapTable\n-  #39 = Utf8               (Ljava/io/InputStream;I)J\n-  #40 = Utf8               Exceptions\n-  #41 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #42 = Utf8               (Ljava/io/DataInput;I)J\n-  #43 = Utf8               toLittleEndian\n-  #44 = Utf8               ([BJII)V\n-  #45 = Utf8               (Ljava/io/OutputStream;JI)V\n-  #46 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #47 = Utf8               (Ljava/io/DataOutput;JI)V\n-  #48 = Utf8               checkReadLength\n-  #49 = Utf8               (I)V\n-  #50 = Utf8               SourceFile\n-  #51 = Utf8               ByteUtils.java\n-  #52 = NameAndType        #31:#32        // \"<init>\":()V\n-  #53 = NameAndType        #35:#37        // fromLittleEndian:([BII)J\n-  #54 = NameAndType        #48:#49        // checkReadLength:(I)V\n-  #55 = Class              #75            // java/io/InputStream\n-  #56 = NameAndType        #76:#77        // read:()I\n-  #57 = Utf8               java/io/IOException\n-  #58 = Utf8               Premature end of data\n-  #59 = NameAndType        #31:#78        // \"<init>\":(Ljava/lang/String;)V\n-  #60 = NameAndType        #79:#77        // getAsByte:()I\n-  #61 = Class              #80            // java/io/DataInput\n-  #62 = NameAndType        #81:#77        // readUnsignedByte:()I\n-  #63 = Class              #82            // java/io/OutputStream\n-  #64 = NameAndType        #83:#49        // write:(I)V\n-  #65 = NameAndType        #84:#49        // accept:(I)V\n-  #66 = Class              #85            // java/io/DataOutput\n-  #67 = Utf8               java/lang/IllegalArgumentException\n-  #68 = Utf8               Can\\'t read more than eight bytes into a long value\n-  #69 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #70 = Utf8               java/lang/Object\n-  #71 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-  #72 = Utf8               org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n-  #73 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-  #74 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #75 = Utf8               java/io/InputStream\n-  #76 = Utf8               read\n-  #77 = Utf8               ()I\n-  #78 = Utf8               (Ljava/lang/String;)V\n-  #79 = Utf8               getAsByte\n-  #80 = Utf8               java/io/DataInput\n-  #81 = Utf8               readUnsignedByte\n-  #82 = Utf8               java/io/OutputStream\n-  #83 = Utf8               write\n-  #84 = Utf8               accept\n-  #85 = Utf8               java/io/DataOutput\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #8 = Class              #10            // org/apache/commons/compress/utils/ByteUtils\n+   #9 = NameAndType        #11:#12        // fromLittleEndian:([BII)J\n+  #10 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #11 = Utf8               fromLittleEndian\n+  #12 = Utf8               ([BII)J\n+  #13 = Methodref          #8.#14         // org/apache/commons/compress/utils/ByteUtils.checkReadLength:(I)V\n+  #14 = NameAndType        #15:#16        // checkReadLength:(I)V\n+  #15 = Utf8               checkReadLength\n+  #16 = Utf8               (I)V\n+  #17 = Long               255l\n+  #19 = Methodref          #20.#21        // java/io/InputStream.read:()I\n+  #20 = Class              #22            // java/io/InputStream\n+  #21 = NameAndType        #23:#24        // read:()I\n+  #22 = Utf8               java/io/InputStream\n+  #23 = Utf8               read\n+  #24 = Utf8               ()I\n+  #25 = Long               -1l\n+  #27 = Class              #28            // java/io/IOException\n+  #28 = Utf8               java/io/IOException\n+  #29 = String             #30            // Premature end of data\n+  #30 = Utf8               Premature end of data\n+  #31 = Methodref          #27.#32        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #32 = NameAndType        #5:#33         // \"<init>\":(Ljava/lang/String;)V\n+  #33 = Utf8               (Ljava/lang/String;)V\n+  #34 = InterfaceMethodref #35.#36        // org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n+  #35 = Class              #37            // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #36 = NameAndType        #38:#24        // getAsByte:()I\n+  #37 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #38 = Utf8               getAsByte\n+  #39 = InterfaceMethodref #40.#41        // java/io/DataInput.readUnsignedByte:()I\n+  #40 = Class              #42            // java/io/DataInput\n+  #41 = NameAndType        #43:#24        // readUnsignedByte:()I\n+  #42 = Utf8               java/io/DataInput\n+  #43 = Utf8               readUnsignedByte\n+  #44 = Methodref          #45.#46        // java/io/OutputStream.write:(I)V\n+  #45 = Class              #47            // java/io/OutputStream\n+  #46 = NameAndType        #48:#16        // write:(I)V\n+  #47 = Utf8               java/io/OutputStream\n+  #48 = Utf8               write\n+  #49 = InterfaceMethodref #50.#51        // org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n+  #50 = Class              #52            // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #51 = NameAndType        #53:#16        // accept:(I)V\n+  #52 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #53 = Utf8               accept\n+  #54 = InterfaceMethodref #55.#46        // java/io/DataOutput.write:(I)V\n+  #55 = Class              #56            // java/io/DataOutput\n+  #56 = Utf8               java/io/DataOutput\n+  #57 = Class              #58            // java/lang/IllegalArgumentException\n+  #58 = Utf8               java/lang/IllegalArgumentException\n+  #59 = String             #60            // Can\\'t read more than eight bytes into a long value\n+  #60 = Utf8               Can\\'t read more than eight bytes into a long value\n+  #61 = Methodref          #57.#32        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #62 = Utf8               Code\n+  #63 = Utf8               LineNumberTable\n+  #64 = Utf8               ([B)J\n+  #65 = Utf8               StackMapTable\n+  #66 = Utf8               (Ljava/io/InputStream;I)J\n+  #67 = Utf8               Exceptions\n+  #68 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #69 = Utf8               (Ljava/io/DataInput;I)J\n+  #70 = Utf8               toLittleEndian\n+  #71 = Utf8               ([BJII)V\n+  #72 = Utf8               (Ljava/io/OutputStream;JI)V\n+  #73 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #74 = Utf8               (Ljava/io/DataOutput;JI)V\n+  #75 = Utf8               SourceFile\n+  #76 = Utf8               ByteUtils.java\n+  #77 = Utf8               InnerClasses\n+  #78 = Utf8               ByteSupplier\n+  #79 = Utf8               ByteConsumer\n+  #80 = Class              #81            // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+  #81 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+  #82 = Utf8               OutputStreamByteConsumer\n+  #83 = Class              #84            // org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n+  #84 = Utf8               org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier\n+  #85 = Utf8               InputStreamByteSupplier\n {\n   private org.apache.commons.compress.utils.ByteUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -108,41 +108,41 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: invokestatic  #2                  // Method fromLittleEndian:([BII)J\n+         4: invokestatic  #7                  // Method fromLittleEndian:([BII)J\n          7: lreturn\n       LineNumberTable:\n         line 68: 0\n \n   public static long fromLittleEndian(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=3\n          0: iload_2\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #13                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_3\n          6: iconst_0\n          7: istore        5\n          9: iload         5\n         11: iload_2\n         12: if_icmpge     41\n         15: lload_3\n         16: aload_0\n         17: iload_1\n         18: iload         5\n         20: iadd\n         21: baload\n         22: i2l\n-        23: ldc2_w        #4                  // long 255l\n+        23: ldc2_w        #17                 // long 255l\n         26: land\n         27: bipush        8\n         29: iload         5\n         31: imul\n         32: lshl\n         33: lor\n         34: lstore_3\n@@ -166,34 +166,34 @@\n \n   public static long fromLittleEndian(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #13                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n          9: iload         4\n         11: iload_1\n         12: if_icmpge     58\n         15: aload_0\n-        16: invokevirtual #6                  // Method java/io/InputStream.read:()I\n+        16: invokevirtual #19                 // Method java/io/InputStream.read:()I\n         19: i2l\n         20: lstore        5\n         22: lload         5\n-        24: ldc2_w        #7                  // long -1l\n+        24: ldc2_w        #25                 // long -1l\n         27: lcmp\n         28: ifne          41\n-        31: new           #9                  // class java/io/IOException\n+        31: new           #27                 // class java/io/IOException\n         34: dup\n-        35: ldc           #10                 // String Premature end of data\n-        37: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        35: ldc           #29                 // String Premature end of data\n+        37: invokespecial #31                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n         41: lload_2\n         42: lload         5\n         44: iload         4\n         46: bipush        8\n         48: imul\n         49: lshl\n@@ -227,34 +227,34 @@\n \n   public static long fromLittleEndian(org.apache.commons.compress.utils.ByteUtils$ByteSupplier, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #13                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n          9: iload         4\n         11: iload_1\n         12: if_icmpge     60\n         15: aload_0\n-        16: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n+        16: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteSupplier.getAsByte:()I\n         21: i2l\n         22: lstore        5\n         24: lload         5\n-        26: ldc2_w        #7                  // long -1l\n+        26: ldc2_w        #25                 // long -1l\n         29: lcmp\n         30: ifne          43\n-        33: new           #9                  // class java/io/IOException\n+        33: new           #27                 // class java/io/IOException\n         36: dup\n-        37: ldc           #10                 // String Premature end of data\n-        39: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        37: ldc           #29                 // String Premature end of data\n+        39: invokespecial #31                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         42: athrow\n         43: lload_2\n         44: lload         5\n         46: iload         4\n         48: bipush        8\n         50: imul\n         51: lshl\n@@ -288,24 +288,24 @@\n \n   public static long fromLittleEndian(java.io.DataInput, int) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=7, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method checkReadLength:(I)V\n+         1: invokestatic  #13                 // Method checkReadLength:(I)V\n          4: lconst_0\n          5: lstore_2\n          6: iconst_0\n          7: istore        4\n          9: iload         4\n         11: iload_1\n         12: if_icmpge     41\n         15: aload_0\n-        16: invokeinterface #13,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n+        16: invokeinterface #39,  1           // InterfaceMethod java/io/DataInput.readUnsignedByte:()I\n         21: i2l\n         22: lstore        5\n         24: lload_2\n         25: lload         5\n         27: iload         4\n         29: bipush        8\n         31: imul\n@@ -346,15 +346,15 @@\n          8: iload         4\n         10: if_icmpge     40\n         13: aload_0\n         14: iload_3\n         15: iload         7\n         17: iadd\n         18: lload         5\n-        20: ldc2_w        #4                  // long 255l\n+        20: ldc2_w        #17                 // long 255l\n         23: land\n         24: l2i\n         25: i2b\n         26: bastore\n         27: lload         5\n         29: bipush        8\n         31: lshr\n@@ -386,18 +386,18 @@\n          3: iconst_0\n          4: istore        6\n          6: iload         6\n          8: iload_3\n          9: if_icmpge     36\n         12: aload_0\n         13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n+        15: ldc2_w        #17                 // long 255l\n         18: land\n         19: l2i\n-        20: invokevirtual #14                 // Method java/io/OutputStream.write:(I)V\n+        20: invokevirtual #44                 // Method java/io/OutputStream.write:(I)V\n         23: lload         4\n         25: bipush        8\n         27: lshr\n         28: lstore        4\n         30: iinc          6, 1\n         33: goto          6\n         36: return\n@@ -427,18 +427,18 @@\n          3: iconst_0\n          4: istore        6\n          6: iload         6\n          8: iload_3\n          9: if_icmpge     38\n         12: aload_0\n         13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n+        15: ldc2_w        #17                 // long 255l\n         18: land\n         19: l2i\n-        20: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n+        20: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/compress/utils/ByteUtils$ByteConsumer.accept:(I)V\n         25: lload         4\n         27: bipush        8\n         29: lshr\n         30: lstore        4\n         32: iinc          6, 1\n         35: goto          6\n         38: return\n@@ -468,18 +468,18 @@\n          3: iconst_0\n          4: istore        6\n          6: iload         6\n          8: iload_3\n          9: if_icmpge     38\n         12: aload_0\n         13: lload         4\n-        15: ldc2_w        #4                  // long 255l\n+        15: ldc2_w        #17                 // long 255l\n         18: land\n         19: l2i\n-        20: invokeinterface #16,  2           // InterfaceMethod java/io/DataOutput.write:(I)V\n+        20: invokeinterface #54,  2           // InterfaceMethod java/io/DataOutput.write:(I)V\n         25: lload         4\n         27: bipush        8\n         29: lshr\n         30: lstore        4\n         32: iinc          6, 1\n         35: goto          6\n         38: return\n@@ -503,26 +503,26 @@\n     descriptor: (I)V\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iload_0\n          1: bipush        8\n          3: if_icmple     16\n-         6: new           #17                 // class java/lang/IllegalArgumentException\n+         6: new           #57                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #18                 // String Can\\'t read more than eight bytes into a long value\n-        12: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: ldc           #59                 // String Can\\'t read more than eight bytes into a long value\n+        12: invokespecial #61                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         15: athrow\n         16: return\n       LineNumberTable:\n         line 257: 0\n         line 258: 6\n         line 260: 16\n       StackMapTable: number_of_entries = 1\n         frame_type = 16 /* same */\n }\n SourceFile: \"ByteUtils.java\"\n InnerClasses:\n-  public static #23= #22 of #20;          // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #26= #25 of #20;          // InputStreamByteSupplier=class org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static #28= #27 of #20;          // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #30= #29 of #20;          // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #78= #35 of #8;           // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #79= #50 of #8;           // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #82= #80 of #8;           // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #85= #83 of #8;           // InputStreamByteSupplier=class org/apache/commons/compress/utils/ByteUtils$InputStreamByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n"}]}
