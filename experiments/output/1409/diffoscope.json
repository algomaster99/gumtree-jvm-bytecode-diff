{"diffoscope-json-version": 1, "source1": "first/MatchRatingApproachEncoder.class", "source2": "second/MatchRatingApproachEncoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum 07e6d726ce0181e8df32c448116dc4aa7a51fc8cfa7d8d12583cf45775be3fb7\n+  SHA-256 checksum 4ecd5d728c8e0e08a2705d51ce45678c57ff3ee9be3bb6a432558d5d6a684e97\n   Compiled from \"MatchRatingApproachEncoder.java\"\n public class org.apache.commons.codec.language.MatchRatingApproachEncoder implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #10                         // org/apache/commons/codec/language/MatchRatingApproachEncoder\n   super_class: #73                        // java/lang/Object\n   interfaces: 1, fields: 14, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #73.#173      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #174.#175     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-    #3 = Methodref          #4.#176       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-    #4 = Class              #177          // java/lang/String\n-    #5 = String             #178          // \\\\-\n-    #6 = String             #179          // [&]\n-    #7 = String             #180          // \\\\\\'\n-    #8 = String             #181          // \\\\.\n-    #9 = String             #182          // [\\\\,]\n-   #10 = Class              #183          // org/apache/commons/codec/language/MatchRatingApproachEncoder\n-   #11 = String             #184          //\n-   #12 = Methodref          #4.#185       // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #13 = Methodref          #10.#186      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeAccents:(Ljava/lang/String;)Ljava/lang/String;\n-   #14 = String             #187          // \\\\s+\n-   #15 = Class              #188          // org/apache/commons/codec/EncoderException\n-   #16 = String             #189          // Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\n-   #17 = Methodref          #15.#190      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #18 = Methodref          #10.#191      // org/apache/commons/codec/language/MatchRatingApproachEncoder.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #19 = Methodref          #4.#192       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #20 = String             #193          //\n-   #21 = Methodref          #4.#194       // java/lang/String.length:()I\n-   #22 = Methodref          #10.#195      // org/apache/commons/codec/language/MatchRatingApproachEncoder.cleanName:(Ljava/lang/String;)Ljava/lang/String;\n-   #23 = Methodref          #10.#196      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeVowels:(Ljava/lang/String;)Ljava/lang/String;\n-   #24 = Methodref          #10.#197      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeDoubleConsonants:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Methodref          #10.#198      // org/apache/commons/codec/language/MatchRatingApproachEncoder.getFirst3Last3:(Ljava/lang/String;)Ljava/lang/String;\n-   #26 = Methodref          #4.#199       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #27 = Class              #200          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#173      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = Methodref          #27.#201      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #27.#202      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #203.#204     // java/lang/Math.abs:(I)I\n-   #32 = Methodref          #10.#205      // org/apache/commons/codec/language/MatchRatingApproachEncoder.getMinRating:(I)I\n-   #33 = Methodref          #10.#206      // org/apache/commons/codec/language/MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing:(Ljava/lang/String;Ljava/lang/String;)I\n-   #34 = String             #207          // E\n-   #35 = String             #208          // A\n-   #36 = String             #209          // O\n+    #1 = Methodref          #73.#170      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #171.#172     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+    #3 = Methodref          #4.#173       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+    #4 = Class              #174          // java/lang/String\n+    #5 = String             #175          // \\\\-\n+    #6 = String             #176          // [&]\n+    #7 = String             #177          // \\\\\\'\n+    #8 = String             #178          // \\\\.\n+    #9 = String             #179          // [\\\\,]\n+   #10 = Class              #180          // org/apache/commons/codec/language/MatchRatingApproachEncoder\n+   #11 = String             #181          //\n+   #12 = Methodref          #4.#182       // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #13 = Methodref          #10.#183      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeAccents:(Ljava/lang/String;)Ljava/lang/String;\n+   #14 = String             #184          // \\\\s+\n+   #15 = Class              #185          // org/apache/commons/codec/EncoderException\n+   #16 = String             #186          // Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\n+   #17 = Methodref          #15.#187      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #18 = Methodref          #10.#188      // org/apache/commons/codec/language/MatchRatingApproachEncoder.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #19 = Methodref          #4.#189       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #20 = String             #190          //\n+   #21 = Methodref          #4.#191       // java/lang/String.length:()I\n+   #22 = Methodref          #10.#192      // org/apache/commons/codec/language/MatchRatingApproachEncoder.cleanName:(Ljava/lang/String;)Ljava/lang/String;\n+   #23 = Methodref          #10.#193      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeVowels:(Ljava/lang/String;)Ljava/lang/String;\n+   #24 = Methodref          #10.#194      // org/apache/commons/codec/language/MatchRatingApproachEncoder.removeDoubleConsonants:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Methodref          #10.#195      // org/apache/commons/codec/language/MatchRatingApproachEncoder.getFirst3Last3:(Ljava/lang/String;)Ljava/lang/String;\n+   #26 = Methodref          #4.#196       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #27 = Class              #197          // java/lang/StringBuilder\n+   #28 = Methodref          #27.#170      // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = Methodref          #27.#198      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #30 = Methodref          #27.#199      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #31 = Methodref          #200.#201     // java/lang/Math.abs:(I)I\n+   #32 = Methodref          #10.#202      // org/apache/commons/codec/language/MatchRatingApproachEncoder.getMinRating:(I)I\n+   #33 = Methodref          #10.#203      // org/apache/commons/codec/language/MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing:(Ljava/lang/String;Ljava/lang/String;)I\n+   #34 = String             #204          // E\n+   #35 = String             #205          // A\n+   #36 = String             #206          // O\n    #37 = String             #80           // I\n-   #38 = String             #210          // U\n-   #39 = Methodref          #4.#211       // java/lang/String.toCharArray:()[C\n-   #40 = Methodref          #4.#212       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #41 = Methodref          #4.#213       // java/lang/String.\"<init>\":([C)V\n-   #42 = Methodref          #4.#214       // java/lang/String.charAt:(I)C\n-   #43 = String             #215          // \u00c0\u00e0\u00c8\u00e8\u00cc\u00ec\u00d2\u00f2\u00d9\u00f9\u00c1\u00e1\u00c9\u00e9\u00cd\u00ed\u00d3\u00f3\u00da\u00fa\u00dd\u00fd\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb\u0176\u0177\u00c3\u00e3\u00d5\u00f5\u00d1\u00f1\u00c4\u00e4\u00cb\u00eb\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc\u0178\u00ff\u00c5\u00e5\u00c7\u00e7\u0150\u0151\u0170\u0171\n-   #44 = Methodref          #4.#216       // java/lang/String.indexOf:(I)I\n-   #45 = String             #217          // AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaOoNnAaEeIiOoUuYyAaCcOoUu\n-   #46 = Methodref          #27.#218      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #47 = Fieldref           #10.#219      // org/apache/commons/codec/language/MatchRatingApproachEncoder.DOUBLE_CONSONANT:[Ljava/lang/String;\n-   #48 = Methodref          #4.#220       // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #49 = Methodref          #4.#221       // java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n-   #50 = String             #222          // \\\\s{2,}\\\\b\n-   #51 = Methodref          #10.#223      // org/apache/commons/codec/language/MatchRatingApproachEncoder.isVowel:(Ljava/lang/String;)Z\n-   #52 = String             #224          // BB\n-   #53 = String             #225          // CC\n-   #54 = String             #226          // DD\n-   #55 = String             #227          // FF\n-   #56 = String             #228          // GG\n-   #57 = String             #229          // HH\n-   #58 = String             #230          // JJ\n-   #59 = String             #231          // KK\n-   #60 = String             #232          // LL\n-   #61 = String             #233          // MM\n-   #62 = String             #234          // NN\n-   #63 = String             #235          // PP\n-   #64 = String             #236          // QQ\n-   #65 = String             #237          // RR\n-   #66 = String             #238          // SS\n-   #67 = String             #239          // TT\n-   #68 = String             #240          // VV\n-   #69 = String             #241          // WW\n-   #70 = String             #242          // XX\n-   #71 = String             #243          // YY\n-   #72 = String             #244          // ZZ\n-   #73 = Class              #245          // java/lang/Object\n-   #74 = Class              #246          // org/apache/commons/codec/StringEncoder\n+   #38 = String             #207          // U\n+   #39 = Methodref          #4.#208       // java/lang/String.toCharArray:()[C\n+   #40 = Methodref          #4.#209       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #41 = Methodref          #4.#210       // java/lang/String.\"<init>\":([C)V\n+   #42 = Methodref          #4.#211       // java/lang/String.charAt:(I)C\n+   #43 = String             #212          // \u00c0\u00e0\u00c8\u00e8\u00cc\u00ec\u00d2\u00f2\u00d9\u00f9\u00c1\u00e1\u00c9\u00e9\u00cd\u00ed\u00d3\u00f3\u00da\u00fa\u00dd\u00fd\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb\u0176\u0177\u00c3\u00e3\u00d5\u00f5\u00d1\u00f1\u00c4\u00e4\u00cb\u00eb\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc\u0178\u00ff\u00c5\u00e5\u00c7\u00e7\u0150\u0151\u0170\u0171\n+   #44 = Methodref          #4.#213       // java/lang/String.indexOf:(I)I\n+   #45 = String             #214          // AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaOoNnAaEeIiOoUuYyAaCcOoUu\n+   #46 = Methodref          #27.#215      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #47 = Fieldref           #10.#216      // org/apache/commons/codec/language/MatchRatingApproachEncoder.DOUBLE_CONSONANT:[Ljava/lang/String;\n+   #48 = Methodref          #4.#217       // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #49 = Methodref          #4.#218       // java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n+   #50 = String             #219          // \\\\s{2,}\\\\b\n+   #51 = Methodref          #10.#220      // org/apache/commons/codec/language/MatchRatingApproachEncoder.isVowel:(Ljava/lang/String;)Z\n+   #52 = String             #221          // BB\n+   #53 = String             #222          // CC\n+   #54 = String             #223          // DD\n+   #55 = String             #224          // FF\n+   #56 = String             #225          // GG\n+   #57 = String             #226          // HH\n+   #58 = String             #227          // JJ\n+   #59 = String             #228          // KK\n+   #60 = String             #229          // LL\n+   #61 = String             #230          // MM\n+   #62 = String             #231          // NN\n+   #63 = String             #232          // PP\n+   #64 = String             #233          // QQ\n+   #65 = String             #234          // RR\n+   #66 = String             #235          // SS\n+   #67 = String             #236          // TT\n+   #68 = String             #237          // VV\n+   #69 = String             #238          // WW\n+   #70 = String             #239          // XX\n+   #71 = String             #240          // YY\n+   #72 = String             #241          // ZZ\n+   #73 = Class              #242          // java/lang/Object\n+   #74 = Class              #243          // org/apache/commons/codec/StringEncoder\n    #75 = Utf8               SPACE\n    #76 = Utf8               Ljava/lang/String;\n    #77 = Utf8               ConstantValue\n    #78 = Utf8               EMPTY\n    #79 = Utf8               ONE\n    #80 = Utf8               I\n    #81 = Integer            1\n@@ -119,177 +119,174 @@\n   #109 = Utf8               cleanName\n   #110 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #111 = Utf8               str\n   #112 = Utf8               name\n   #113 = Utf8               upperName\n   #114 = Utf8               charsToTrim\n   #115 = Utf8               StackMapTable\n-  #116 = Class              #183          // org/apache/commons/codec/language/MatchRatingApproachEncoder\n-  #117 = Class              #177          // java/lang/String\n-  #118 = Class              #101          // \"[Ljava/lang/String;\"\n-  #119 = Utf8               encode\n-  #120 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #121 = Utf8               pObject\n-  #122 = Utf8               Ljava/lang/Object;\n-  #123 = Utf8               Exceptions\n-  #124 = Utf8               getFirst3Last3\n-  #125 = Utf8               firstThree\n-  #126 = Utf8               lastThree\n-  #127 = Utf8               nameLength\n-  #128 = Utf8               getMinRating\n-  #129 = Utf8               (I)I\n-  #130 = Utf8               sumLength\n-  #131 = Utf8               minRating\n-  #132 = Utf8               isEncodeEquals\n-  #133 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #134 = Utf8               name1\n-  #135 = Utf8               name2\n-  #136 = Utf8               count\n-  #137 = Utf8               isVowel\n-  #138 = Utf8               (Ljava/lang/String;)Z\n-  #139 = Utf8               letter\n-  #140 = Utf8               leftToRightThenRightToLeftProcessing\n-  #141 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #142 = Utf8               i\n-  #143 = Utf8               name1Char\n-  #144 = Utf8               [C\n-  #145 = Utf8               name2Char\n-  #146 = Utf8               name1Size\n-  #147 = Utf8               name2Size\n-  #148 = Utf8               name1LtRStart\n-  #149 = Utf8               name1LtREnd\n-  #150 = Utf8               name2RtLStart\n-  #151 = Utf8               name2RtLEnd\n-  #152 = Utf8               strA\n-  #153 = Utf8               strB\n-  #154 = Class              #144          // \"[C\"\n-  #155 = Utf8               removeAccents\n-  #156 = Utf8               c\n-  #157 = Utf8               C\n-  #158 = Utf8               pos\n-  #159 = Utf8               accentedWord\n-  #160 = Utf8               sb\n-  #161 = Utf8               Ljava/lang/StringBuilder;\n-  #162 = Utf8               n\n-  #163 = Class              #200          // java/lang/StringBuilder\n-  #164 = Utf8               removeDoubleConsonants\n-  #165 = Utf8               singleLetter\n-  #166 = Utf8               dc\n-  #167 = Utf8               replacedName\n-  #168 = Utf8               removeVowels\n-  #169 = Utf8               firstLetter\n-  #170 = Utf8               <clinit>\n-  #171 = Utf8               SourceFile\n-  #172 = Utf8               MatchRatingApproachEncoder.java\n-  #173 = NameAndType        #102:#103     // \"<init>\":()V\n-  #174 = Class              #247          // java/util/Locale\n-  #175 = NameAndType        #248:#249     // ENGLISH:Ljava/util/Locale;\n-  #176 = NameAndType        #250:#251     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #177 = Utf8               java/lang/String\n-  #178 = Utf8               \\\\-\n-  #179 = Utf8               [&]\n-  #180 = Utf8               \\\\\\'\n-  #181 = Utf8               \\\\.\n-  #182 = Utf8               [\\\\,]\n-  #183 = Utf8               org/apache/commons/codec/language/MatchRatingApproachEncoder\n-  #184 = Utf8\n-  #185 = NameAndType        #252:#253     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #186 = NameAndType        #155:#110     // removeAccents:(Ljava/lang/String;)Ljava/lang/String;\n-  #187 = Utf8               \\\\s+\n-  #188 = Utf8               org/apache/commons/codec/EncoderException\n-  #189 = Utf8               Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\n-  #190 = NameAndType        #102:#254     // \"<init>\":(Ljava/lang/String;)V\n-  #191 = NameAndType        #119:#110     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #192 = NameAndType        #255:#138     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #193 = Utf8\n-  #194 = NameAndType        #256:#257     // length:()I\n-  #195 = NameAndType        #109:#110     // cleanName:(Ljava/lang/String;)Ljava/lang/String;\n-  #196 = NameAndType        #168:#110     // removeVowels:(Ljava/lang/String;)Ljava/lang/String;\n-  #197 = NameAndType        #164:#110     // removeDoubleConsonants:(Ljava/lang/String;)Ljava/lang/String;\n-  #198 = NameAndType        #124:#110     // getFirst3Last3:(Ljava/lang/String;)Ljava/lang/String;\n-  #199 = NameAndType        #258:#259     // substring:(II)Ljava/lang/String;\n-  #200 = Utf8               java/lang/StringBuilder\n-  #201 = NameAndType        #260:#261     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #202 = NameAndType        #262:#263     // toString:()Ljava/lang/String;\n-  #203 = Class              #264          // java/lang/Math\n-  #204 = NameAndType        #265:#129     // abs:(I)I\n-  #205 = NameAndType        #128:#129     // getMinRating:(I)I\n-  #206 = NameAndType        #140:#141     // leftToRightThenRightToLeftProcessing:(Ljava/lang/String;Ljava/lang/String;)I\n-  #207 = Utf8               E\n-  #208 = Utf8               A\n-  #209 = Utf8               O\n-  #210 = Utf8               U\n-  #211 = NameAndType        #266:#267     // toCharArray:()[C\n-  #212 = NameAndType        #268:#269     // equals:(Ljava/lang/Object;)Z\n-  #213 = NameAndType        #102:#270     // \"<init>\":([C)V\n-  #214 = NameAndType        #271:#272     // charAt:(I)C\n-  #215 = Utf8               \u00c0\u00e0\u00c8\u00e8\u00cc\u00ec\u00d2\u00f2\u00d9\u00f9\u00c1\u00e1\u00c9\u00e9\u00cd\u00ed\u00d3\u00f3\u00da\u00fa\u00dd\u00fd\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb\u0176\u0177\u00c3\u00e3\u00d5\u00f5\u00d1\u00f1\u00c4\u00e4\u00cb\u00eb\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc\u0178\u00ff\u00c5\u00e5\u00c7\u00e7\u0150\u0151\u0170\u0171\n-  #216 = NameAndType        #273:#129     // indexOf:(I)I\n-  #217 = Utf8               AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaOoNnAaEeIiOoUuYyAaCcOoUu\n-  #218 = NameAndType        #260:#274     // append:(C)Ljava/lang/StringBuilder;\n-  #219 = NameAndType        #100:#101     // DOUBLE_CONSONANT:[Ljava/lang/String;\n-  #220 = NameAndType        #275:#276     // contains:(Ljava/lang/CharSequence;)Z\n-  #221 = NameAndType        #277:#278     // replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n-  #222 = Utf8               \\\\s{2,}\\\\b\n-  #223 = NameAndType        #137:#138     // isVowel:(Ljava/lang/String;)Z\n-  #224 = Utf8               BB\n-  #225 = Utf8               CC\n-  #226 = Utf8               DD\n-  #227 = Utf8               FF\n-  #228 = Utf8               GG\n-  #229 = Utf8               HH\n-  #230 = Utf8               JJ\n-  #231 = Utf8               KK\n-  #232 = Utf8               LL\n-  #233 = Utf8               MM\n-  #234 = Utf8               NN\n-  #235 = Utf8               PP\n-  #236 = Utf8               QQ\n-  #237 = Utf8               RR\n-  #238 = Utf8               SS\n-  #239 = Utf8               TT\n-  #240 = Utf8               VV\n-  #241 = Utf8               WW\n-  #242 = Utf8               XX\n-  #243 = Utf8               YY\n-  #244 = Utf8               ZZ\n-  #245 = Utf8               java/lang/Object\n-  #246 = Utf8               org/apache/commons/codec/StringEncoder\n-  #247 = Utf8               java/util/Locale\n-  #248 = Utf8               ENGLISH\n-  #249 = Utf8               Ljava/util/Locale;\n-  #250 = Utf8               toUpperCase\n-  #251 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #252 = Utf8               replaceAll\n-  #253 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #254 = Utf8               (Ljava/lang/String;)V\n-  #255 = Utf8               equalsIgnoreCase\n-  #256 = Utf8               length\n-  #257 = Utf8               ()I\n-  #258 = Utf8               substring\n-  #259 = Utf8               (II)Ljava/lang/String;\n-  #260 = Utf8               append\n-  #261 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #262 = Utf8               toString\n-  #263 = Utf8               ()Ljava/lang/String;\n-  #264 = Utf8               java/lang/Math\n-  #265 = Utf8               abs\n-  #266 = Utf8               toCharArray\n-  #267 = Utf8               ()[C\n-  #268 = Utf8               equals\n-  #269 = Utf8               (Ljava/lang/Object;)Z\n-  #270 = Utf8               ([C)V\n-  #271 = Utf8               charAt\n-  #272 = Utf8               (I)C\n-  #273 = Utf8               indexOf\n-  #274 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #275 = Utf8               contains\n-  #276 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #277 = Utf8               replace\n-  #278 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n+  #116 = Class              #101          // \"[Ljava/lang/String;\"\n+  #117 = Utf8               encode\n+  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #119 = Utf8               pObject\n+  #120 = Utf8               Ljava/lang/Object;\n+  #121 = Utf8               Exceptions\n+  #122 = Utf8               getFirst3Last3\n+  #123 = Utf8               firstThree\n+  #124 = Utf8               lastThree\n+  #125 = Utf8               nameLength\n+  #126 = Utf8               getMinRating\n+  #127 = Utf8               (I)I\n+  #128 = Utf8               sumLength\n+  #129 = Utf8               minRating\n+  #130 = Utf8               isEncodeEquals\n+  #131 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #132 = Utf8               name1\n+  #133 = Utf8               name2\n+  #134 = Utf8               count\n+  #135 = Utf8               isVowel\n+  #136 = Utf8               (Ljava/lang/String;)Z\n+  #137 = Utf8               letter\n+  #138 = Utf8               leftToRightThenRightToLeftProcessing\n+  #139 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #140 = Utf8               i\n+  #141 = Utf8               name1Char\n+  #142 = Utf8               [C\n+  #143 = Utf8               name2Char\n+  #144 = Utf8               name1Size\n+  #145 = Utf8               name2Size\n+  #146 = Utf8               name1LtRStart\n+  #147 = Utf8               name1LtREnd\n+  #148 = Utf8               name2RtLStart\n+  #149 = Utf8               name2RtLEnd\n+  #150 = Utf8               strA\n+  #151 = Utf8               strB\n+  #152 = Class              #142          // \"[C\"\n+  #153 = Utf8               removeAccents\n+  #154 = Utf8               c\n+  #155 = Utf8               C\n+  #156 = Utf8               pos\n+  #157 = Utf8               accentedWord\n+  #158 = Utf8               sb\n+  #159 = Utf8               Ljava/lang/StringBuilder;\n+  #160 = Utf8               n\n+  #161 = Utf8               removeDoubleConsonants\n+  #162 = Utf8               singleLetter\n+  #163 = Utf8               dc\n+  #164 = Utf8               replacedName\n+  #165 = Utf8               removeVowels\n+  #166 = Utf8               firstLetter\n+  #167 = Utf8               <clinit>\n+  #168 = Utf8               SourceFile\n+  #169 = Utf8               MatchRatingApproachEncoder.java\n+  #170 = NameAndType        #102:#103     // \"<init>\":()V\n+  #171 = Class              #244          // java/util/Locale\n+  #172 = NameAndType        #245:#246     // ENGLISH:Ljava/util/Locale;\n+  #173 = NameAndType        #247:#248     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #174 = Utf8               java/lang/String\n+  #175 = Utf8               \\\\-\n+  #176 = Utf8               [&]\n+  #177 = Utf8               \\\\\\'\n+  #178 = Utf8               \\\\.\n+  #179 = Utf8               [\\\\,]\n+  #180 = Utf8               org/apache/commons/codec/language/MatchRatingApproachEncoder\n+  #181 = Utf8\n+  #182 = NameAndType        #249:#250     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #183 = NameAndType        #153:#110     // removeAccents:(Ljava/lang/String;)Ljava/lang/String;\n+  #184 = Utf8               \\\\s+\n+  #185 = Utf8               org/apache/commons/codec/EncoderException\n+  #186 = Utf8               Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\n+  #187 = NameAndType        #102:#251     // \"<init>\":(Ljava/lang/String;)V\n+  #188 = NameAndType        #117:#110     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #189 = NameAndType        #252:#136     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #190 = Utf8\n+  #191 = NameAndType        #253:#254     // length:()I\n+  #192 = NameAndType        #109:#110     // cleanName:(Ljava/lang/String;)Ljava/lang/String;\n+  #193 = NameAndType        #165:#110     // removeVowels:(Ljava/lang/String;)Ljava/lang/String;\n+  #194 = NameAndType        #161:#110     // removeDoubleConsonants:(Ljava/lang/String;)Ljava/lang/String;\n+  #195 = NameAndType        #122:#110     // getFirst3Last3:(Ljava/lang/String;)Ljava/lang/String;\n+  #196 = NameAndType        #255:#256     // substring:(II)Ljava/lang/String;\n+  #197 = Utf8               java/lang/StringBuilder\n+  #198 = NameAndType        #257:#258     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #199 = NameAndType        #259:#260     // toString:()Ljava/lang/String;\n+  #200 = Class              #261          // java/lang/Math\n+  #201 = NameAndType        #262:#127     // abs:(I)I\n+  #202 = NameAndType        #126:#127     // getMinRating:(I)I\n+  #203 = NameAndType        #138:#139     // leftToRightThenRightToLeftProcessing:(Ljava/lang/String;Ljava/lang/String;)I\n+  #204 = Utf8               E\n+  #205 = Utf8               A\n+  #206 = Utf8               O\n+  #207 = Utf8               U\n+  #208 = NameAndType        #263:#264     // toCharArray:()[C\n+  #209 = NameAndType        #265:#266     // equals:(Ljava/lang/Object;)Z\n+  #210 = NameAndType        #102:#267     // \"<init>\":([C)V\n+  #211 = NameAndType        #268:#269     // charAt:(I)C\n+  #212 = Utf8               \u00c0\u00e0\u00c8\u00e8\u00cc\u00ec\u00d2\u00f2\u00d9\u00f9\u00c1\u00e1\u00c9\u00e9\u00cd\u00ed\u00d3\u00f3\u00da\u00fa\u00dd\u00fd\u00c2\u00e2\u00ca\u00ea\u00ce\u00ee\u00d4\u00f4\u00db\u00fb\u0176\u0177\u00c3\u00e3\u00d5\u00f5\u00d1\u00f1\u00c4\u00e4\u00cb\u00eb\u00cf\u00ef\u00d6\u00f6\u00dc\u00fc\u0178\u00ff\u00c5\u00e5\u00c7\u00e7\u0150\u0151\u0170\u0171\n+  #213 = NameAndType        #270:#127     // indexOf:(I)I\n+  #214 = Utf8               AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaOoNnAaEeIiOoUuYyAaCcOoUu\n+  #215 = NameAndType        #257:#271     // append:(C)Ljava/lang/StringBuilder;\n+  #216 = NameAndType        #100:#101     // DOUBLE_CONSONANT:[Ljava/lang/String;\n+  #217 = NameAndType        #272:#273     // contains:(Ljava/lang/CharSequence;)Z\n+  #218 = NameAndType        #274:#275     // replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n+  #219 = Utf8               \\\\s{2,}\\\\b\n+  #220 = NameAndType        #135:#136     // isVowel:(Ljava/lang/String;)Z\n+  #221 = Utf8               BB\n+  #222 = Utf8               CC\n+  #223 = Utf8               DD\n+  #224 = Utf8               FF\n+  #225 = Utf8               GG\n+  #226 = Utf8               HH\n+  #227 = Utf8               JJ\n+  #228 = Utf8               KK\n+  #229 = Utf8               LL\n+  #230 = Utf8               MM\n+  #231 = Utf8               NN\n+  #232 = Utf8               PP\n+  #233 = Utf8               QQ\n+  #234 = Utf8               RR\n+  #235 = Utf8               SS\n+  #236 = Utf8               TT\n+  #237 = Utf8               VV\n+  #238 = Utf8               WW\n+  #239 = Utf8               XX\n+  #240 = Utf8               YY\n+  #241 = Utf8               ZZ\n+  #242 = Utf8               java/lang/Object\n+  #243 = Utf8               org/apache/commons/codec/StringEncoder\n+  #244 = Utf8               java/util/Locale\n+  #245 = Utf8               ENGLISH\n+  #246 = Utf8               Ljava/util/Locale;\n+  #247 = Utf8               toUpperCase\n+  #248 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #249 = Utf8               replaceAll\n+  #250 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #251 = Utf8               (Ljava/lang/String;)V\n+  #252 = Utf8               equalsIgnoreCase\n+  #253 = Utf8               length\n+  #254 = Utf8               ()I\n+  #255 = Utf8               substring\n+  #256 = Utf8               (II)Ljava/lang/String;\n+  #257 = Utf8               append\n+  #258 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #259 = Utf8               toString\n+  #260 = Utf8               ()Ljava/lang/String;\n+  #261 = Utf8               java/lang/Math\n+  #262 = Utf8               abs\n+  #263 = Utf8               toCharArray\n+  #264 = Utf8               ()[C\n+  #265 = Utf8               equals\n+  #266 = Utf8               (Ljava/lang/Object;)Z\n+  #267 = Utf8               ([C)V\n+  #268 = Utf8               charAt\n+  #269 = Utf8               (I)C\n+  #270 = Utf8               indexOf\n+  #271 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #272 = Utf8               contains\n+  #273 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #274 = Utf8               replace\n+  #275 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;\n {\n   private static final java.lang.String SPACE = \" \";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String\n \n   private static final java.lang.String EMPTY = \"\";\n"}]}
