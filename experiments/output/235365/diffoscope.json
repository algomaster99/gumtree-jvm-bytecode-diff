{"diffoscope-json-version": 1, "source1": "first/FileEqualsFileFilter.class", "source2": "second/FileEqualsFileFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,20 +8,20 @@\n import java.io.File;\n \n public class FileEqualsFileFilter extends AbstractFileFilter\n {\n     private final File file;\n     private final Path path;\n     \n-    public FileEqualsFileFilter(final File file) {\n-        this.file = Objects.requireNonNull(file, \"file\");\n-        this.path = file.toPath();\n+    public FileEqualsFileFilter(final File obj) {\n+        this.file = Objects.requireNonNull(obj, \"file\");\n+        this.path = obj.toPath();\n     }\n     \n-    public boolean accept(final File file) {\n-        return Objects.equals(this.file, file);\n+    public boolean accept(final File b) {\n+        return Objects.equals(this.file, b);\n     }\n     \n-    public FileVisitResult accept(final Path path, final BasicFileAttributes attributes) {\n-        return this.toFileVisitResult(Objects.equals((Object)this.path, (Object)path));\n+    public FileVisitResult accept(final Path b, final BasicFileAttributes basicFileAttributes) {\n+        return this.toFileVisitResult(Objects.equals((Object)this.path, (Object)b));\n     }\n }\n"}]}
