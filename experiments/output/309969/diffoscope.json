{"diffoscope-json-version": 1, "source1": "first/ZipArchiveOutputStream$CurrentEntry.class", "source2": "second/ZipArchiveOutputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,76 +1,76 @@\n-  SHA-256 checksum 2d781f280fd92a50d5231080e47d88da7ec4e98dcd314df2ab11001bc003e955\n+  SHA-256 checksum aeae0394999e5942df3041d4d1c66251129c0a4ab5561ced54e2a10125372e13\n   Compiled from \"ZipArchiveOutputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry\n   minor version: 0\n   major version: 53\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #9                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-  super_class: #10                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+  super_class: #29                        // java/lang/Object\n   interfaces: 0, fields: 6, methods: 13, attributes: 2\n Constant pool:\n-   #1 = Methodref          #9.#46         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #2 = Fieldref           #9.#47         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.causedUseOfZip64:Z\n-   #3 = Fieldref           #9.#48         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.localDataStart:J\n-   #4 = Fieldref           #9.#49         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.hasWritten:Z\n-   #5 = Fieldref           #9.#50         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #6 = Fieldref           #9.#51         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.bytesRead:J\n-   #7 = Fieldref           #9.#52         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.dataStart:J\n-   #8 = Methodref          #10.#53        // java/lang/Object.\"<init>\":()V\n-   #9 = Class              #55            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-  #10 = Class              #56            // java/lang/Object\n-  #11 = Utf8               entry\n-  #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+   #7 = Fieldref           #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.causedUseOfZip64:Z\n+   #8 = NameAndType        #9:#10         // causedUseOfZip64:Z\n+   #9 = Utf8               causedUseOfZip64\n+  #10 = Utf8               Z\n+  #11 = Fieldref           #2.#12         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.localDataStart:J\n+  #12 = NameAndType        #13:#14        // localDataStart:J\n   #13 = Utf8               localDataStart\n   #14 = Utf8               J\n-  #15 = Utf8               dataStart\n-  #16 = Utf8               bytesRead\n-  #17 = Utf8               causedUseOfZip64\n-  #18 = Utf8               Z\n-  #19 = Utf8               hasWritten\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               access$000\n-  #25 = Utf8               CurrentEntry\n-  #26 = Utf8               InnerClasses\n-  #27 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n-  #28 = Utf8               access$102\n-  #29 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n-  #30 = Utf8               access$200\n-  #31 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #32 = Utf8               access$300\n-  #33 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n-  #34 = Utf8               access$100\n-  #35 = Utf8               access$400\n-  #36 = Utf8               access$500\n-  #37 = Class              #57            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n-  #38 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n-  #39 = Utf8               access$302\n-  #40 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n-  #41 = Utf8               access$402\n-  #42 = Utf8               access$002\n-  #43 = Utf8               access$502\n-  #44 = Utf8               SourceFile\n-  #45 = Utf8               ZipArchiveOutputStream.java\n-  #46 = NameAndType        #20:#21        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #47 = NameAndType        #17:#18        // causedUseOfZip64:Z\n-  #48 = NameAndType        #13:#14        // localDataStart:J\n-  #49 = NameAndType        #19:#18        // hasWritten:Z\n-  #50 = NameAndType        #11:#12        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #51 = NameAndType        #16:#14        // bytesRead:J\n-  #52 = NameAndType        #15:#14        // dataStart:J\n-  #53 = NameAndType        #20:#58        // \"<init>\":()V\n-  #54 = Class              #59            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #55 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-  #56 = Utf8               java/lang/Object\n-  #57 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n-  #58 = Utf8               ()V\n-  #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #15 = Fieldref           #2.#16         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.hasWritten:Z\n+  #16 = NameAndType        #17:#10        // hasWritten:Z\n+  #17 = Utf8               hasWritten\n+  #18 = Fieldref           #2.#19         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #19 = NameAndType        #20:#21        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #20 = Utf8               entry\n+  #21 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #22 = Fieldref           #2.#23         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.bytesRead:J\n+  #23 = NameAndType        #24:#14        // bytesRead:J\n+  #24 = Utf8               bytesRead\n+  #25 = Fieldref           #2.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.dataStart:J\n+  #26 = NameAndType        #27:#14        // dataStart:J\n+  #27 = Utf8               dataStart\n+  #28 = Methodref          #29.#30        // java/lang/Object.\"<init>\":()V\n+  #29 = Class              #31            // java/lang/Object\n+  #30 = NameAndType        #5:#32         // \"<init>\":()V\n+  #31 = Utf8               java/lang/Object\n+  #32 = Utf8               ()V\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               access$000\n+  #36 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n+  #37 = Utf8               access$102\n+  #38 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n+  #39 = Utf8               access$200\n+  #40 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #41 = Utf8               access$300\n+  #42 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n+  #43 = Utf8               access$100\n+  #44 = Utf8               access$400\n+  #45 = Utf8               access$500\n+  #46 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n+  #47 = Utf8               access$302\n+  #48 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n+  #49 = Utf8               access$402\n+  #50 = Utf8               access$002\n+  #51 = Utf8               access$502\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               ZipArchiveOutputStream.java\n+  #54 = Utf8               InnerClasses\n+  #55 = Class              #56            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #56 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #57 = Utf8               CurrentEntry\n+  #58 = Class              #59            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long localDataStart;\n     descriptor: J\n@@ -94,30 +94,30 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #28                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: lconst_0\n-         6: putfield      #3                  // Field localDataStart:J\n+         6: putfield      #11                 // Field localDataStart:J\n          9: aload_0\n         10: lconst_0\n-        11: putfield      #7                  // Field dataStart:J\n+        11: putfield      #25                 // Field dataStart:J\n         14: aload_0\n         15: lconst_0\n-        16: putfield      #6                  // Field bytesRead:J\n+        16: putfield      #22                 // Field bytesRead:J\n         19: aload_0\n         20: iconst_0\n-        21: putfield      #2                  // Field causedUseOfZip64:Z\n+        21: putfield      #7                  // Field causedUseOfZip64:Z\n         24: aload_0\n         25: aload_1\n-        26: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        26: putfield      #18                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         29: return\n       LineNumberTable:\n         line 1884: 0\n         line 1895: 4\n         line 1899: 9\n         line 1904: 14\n         line 1908: 19\n@@ -126,83 +126,83 @@\n \n   static long access$000(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field dataStart:J\n+         1: getfield      #25                 // Field dataStart:J\n          4: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static long access$102(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n-         3: putfield      #6                  // Field bytesRead:J\n+         3: putfield      #22                 // Field bytesRead:J\n          6: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$200(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #18                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 1883: 0\n \n   static boolean access$300(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field hasWritten:Z\n+         1: getfield      #15                 // Field hasWritten:Z\n          4: ireturn\n       LineNumberTable:\n         line 1883: 0\n \n   static long access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field bytesRead:J\n+         1: getfield      #22                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static long access$400(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field localDataStart:J\n+         1: getfield      #11                 // Field localDataStart:J\n          4: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static boolean access$500(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field causedUseOfZip64:Z\n+         1: getfield      #7                  // Field causedUseOfZip64:Z\n          4: ireturn\n       LineNumberTable:\n         line 1883: 0\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n@@ -219,55 +219,55 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n-         3: putfield      #4                  // Field hasWritten:Z\n+         3: putfield      #15                 // Field hasWritten:Z\n          6: ireturn\n       LineNumberTable:\n         line 1883: 0\n \n   static long access$402(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n-         3: putfield      #3                  // Field localDataStart:J\n+         3: putfield      #11                 // Field localDataStart:J\n          6: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static long access$002(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n-         3: putfield      #7                  // Field dataStart:J\n+         3: putfield      #25                 // Field dataStart:J\n          6: lreturn\n       LineNumberTable:\n         line 1883: 0\n \n   static boolean access$502(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n-         3: putfield      #2                  // Field causedUseOfZip64:Z\n+         3: putfield      #7                  // Field causedUseOfZip64:Z\n          6: ireturn\n       LineNumberTable:\n         line 1883: 0\n }\n SourceFile: \"ZipArchiveOutputStream.java\"\n InnerClasses:\n-  private static final #25= #9 of #54;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  static #37;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  private static final #57= #2 of #55;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  static #58;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n"}]}
