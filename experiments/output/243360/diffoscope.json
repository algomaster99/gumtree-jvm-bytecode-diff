{"diffoscope-json-version": 1, "source1": "first/ClassPath$JrtModules.class", "source2": "second/ClassPath$JrtModules.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,48 +17,52 @@\n         super((ClassPath.ClassPath$1)null);\n         this.modularRuntimeImage = new ModularRuntimeImage();\n         this.modules = (ClassPath.JrtModule[])this.modularRuntimeImage.list(path).stream().map(ClassPath.JrtModule::new).toArray(JrtModules::lambda$new$0);\n     }\n     \n     public void close() throws IOException {\n         if (this.modules != null) {\n-            for (final ClassPath.JrtModule module : this.modules) {\n-                module.close();\n+            final ClassPath.JrtModule[] modules = this.modules;\n+            for (int length = modules.length, i = 0; i < length; ++i) {\n+                modules[i].close();\n             }\n         }\n         if (this.modularRuntimeImage != null) {\n             this.modularRuntimeImage.close();\n         }\n     }\n     \n     ClassPath.ClassFile getClassFile(final String name, final String suffix) {\n-        for (final ClassPath.JrtModule module : this.modules) {\n-            final ClassPath.ClassFile classFile = module.getClassFile(name, suffix);\n+        final ClassPath.JrtModule[] modules = this.modules;\n+        for (int length = modules.length, i = 0; i < length; ++i) {\n+            final ClassPath.ClassFile classFile = modules[i].getClassFile(name, suffix);\n             if (classFile != null) {\n                 return classFile;\n             }\n         }\n         return null;\n     }\n     \n     URL getResource(final String name) {\n-        for (final ClassPath.JrtModule module : this.modules) {\n-            final URL url = module.getResource(name);\n-            if (url != null) {\n-                return url;\n+        final ClassPath.JrtModule[] modules = this.modules;\n+        for (int length = modules.length, i = 0; i < length; ++i) {\n+            final URL resource = modules[i].getResource(name);\n+            if (resource != null) {\n+                return resource;\n             }\n         }\n         return null;\n     }\n     \n     InputStream getResourceAsStream(final String name) {\n-        for (final ClassPath.JrtModule module : this.modules) {\n-            final InputStream inputStream = module.getResourceAsStream(name);\n-            if (inputStream != null) {\n-                return inputStream;\n+        final ClassPath.JrtModule[] modules = this.modules;\n+        for (int length = modules.length, i = 0; i < length; ++i) {\n+            final InputStream resourceAsStream = modules[i].getResourceAsStream(name);\n+            if (resourceAsStream != null) {\n+                return resourceAsStream;\n             }\n         }\n         return null;\n     }\n     \n     public String toString() {\n         return Arrays.toString(this.modules);\n"}]}
