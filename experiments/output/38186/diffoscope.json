{"diffoscope-json-version": 1, "source1": "first/HmacUtils.class", "source2": "second/HmacUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,25 +21,25 @@\n     private final Mac mac;\n     \n     public static boolean isAvailable(final String name) {\n         try {\n             Mac.getInstance(name);\n             return true;\n         }\n-        catch (final NoSuchAlgorithmException e) {\n+        catch (final NoSuchAlgorithmException ex) {\n             return false;\n         }\n     }\n     \n     public static boolean isAvailable(final HmacAlgorithms name) {\n         try {\n             Mac.getInstance(name.getName());\n             return true;\n         }\n-        catch (final NoSuchAlgorithmException e) {\n+        catch (final NoSuchAlgorithmException ex) {\n             return false;\n         }\n     }\n     \n     @Deprecated\n     public static Mac getHmacMd5(final byte[] key) {\n         return getInitializedMac(HmacAlgorithms.HMAC_MD5, key);\n@@ -318,16 +318,37 @@\n     }\n     \n     public String hmacHex(final InputStream valueToDigest) throws IOException {\n         return Hex.encodeHexString(this.hmac(valueToDigest));\n     }\n     \n     public byte[] hmac(final File valueToDigest) throws IOException {\n-        try (final BufferedInputStream stream = new BufferedInputStream(new FileInputStream(valueToDigest))) {\n-            return this.hmac(stream);\n+        Throwable t = null;\n+        try {\n+            final BufferedInputStream stream = new BufferedInputStream(new FileInputStream(valueToDigest));\n+            try {\n+                return this.hmac(stream);\n+            }\n+            finally {\n+                if (stream != null) {\n+                    stream.close();\n+                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n+            }\n+            else {\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n+            }\n         }\n     }\n     \n     public String hmacHex(final File valueToDigest) throws IOException {\n         return Hex.encodeHexString(this.hmac(valueToDigest));\n     }\n }\n"}]}
