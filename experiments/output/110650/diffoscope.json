{"diffoscope-json-version": 1, "source1": "first/JsonParser.class", "source2": "second/JsonParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,34 +1,38 @@\n \n package com.fasterxml.jackson.core;\n \n-import com.fasterxml.jackson.core.util.JacksonFeature;\n import java.util.Iterator;\n import com.fasterxml.jackson.core.type.TypeReference;\n import java.math.BigDecimal;\n import java.math.BigInteger;\n import com.fasterxml.jackson.core.exc.InputCoercionException;\n import java.io.Writer;\n import java.io.OutputStream;\n import java.io.IOException;\n import com.fasterxml.jackson.core.async.NonBlockingInputFeeder;\n+import com.fasterxml.jackson.core.util.JacksonFeature;\n import com.fasterxml.jackson.core.util.RequestPayload;\n import com.fasterxml.jackson.core.util.JacksonFeatureSet;\n import java.io.Closeable;\n \n public abstract class JsonParser implements Closeable, Versioned\n {\n     private static final int MIN_BYTE_I = -128;\n     private static final int MAX_BYTE_I = 255;\n     private static final int MIN_SHORT_I = -32768;\n     private static final int MAX_SHORT_I = 32767;\n     protected static final JacksonFeatureSet<StreamReadCapability> DEFAULT_READ_CAPABILITIES;\n     protected int _features;\n     protected transient RequestPayload _requestPayload;\n     \n+    static {\n+        DEFAULT_READ_CAPABILITIES = JacksonFeatureSet.fromDefaults((JacksonFeature[])StreamReadCapability.values());\n+    }\n+    \n     protected JsonParser() {\n         this._features = JsonFactory.DEFAULT_PARSER_FEATURE_FLAGS;\n     }\n     \n     protected JsonParser(final int features) {\n         this._features = features;\n     }\n@@ -462,12 +466,8 @@\n     protected JsonParseException _constructReadException(final String msg, final Throwable t) {\n         JsonParseException e = new JsonParseException(this, msg, t);\n         if (this._requestPayload != null) {\n             e = e.withRequestPayload(this._requestPayload);\n         }\n         return e;\n     }\n-    \n-    static {\n-        DEFAULT_READ_CAPABILITIES = JacksonFeatureSet.fromDefaults((JacksonFeature[])StreamReadCapability.values());\n-    }\n }\n"}]}
