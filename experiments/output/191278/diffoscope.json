{"diffoscope-json-version": 1, "source1": "first/ReaderInputStream.class", "source2": "second/ReaderInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,234 +1,234 @@\n-  SHA-256 checksum 912ffa070bb47f7e974de866c3b0aa850d142a1228b871ae26e23a837b2f7ac3\n+  SHA-256 checksum 7a7947a272f2ca04d0c52573528c609ea82ab72dc8e02239170aed75e5f2a8e5\n   Compiled from \"ReaderInputStream.java\"\n public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/io/input/ReaderInputStream\n-  super_class: #53                        // java/io/InputStream\n+  this_class: #3                          // org/apache/commons/io/input/ReaderInputStream\n+  super_class: #10                        // java/io/InputStream\n   interfaces: 0, fields: 7, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Class              #110          // org/apache/commons/io/IOUtils\n-    #2 = Class              #111          // org/apache/commons/io/input/ReaderInputStream\n-    #3 = Methodref          #2.#112       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-    #4 = Methodref          #53.#113      // java/io/InputStream.\"<init>\":()V\n-    #5 = Fieldref           #2.#114       // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n-    #6 = Fieldref           #2.#115       // org/apache/commons/io/input/ReaderInputStream.encoder:Ljava/nio/charset/CharsetEncoder;\n-    #7 = Methodref          #116.#117     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-    #8 = Fieldref           #2.#118       // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n-    #9 = Methodref          #116.#119     // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n-   #10 = Methodref          #120.#121     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #11 = Fieldref           #2.#122       // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n-   #12 = Methodref          #120.#123     // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n-   #13 = Methodref          #124.#125     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #14 = Fieldref           #126.#127     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-   #15 = Methodref          #128.#129     // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #16 = Methodref          #128.#130     // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #17 = Methodref          #2.#131       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #18 = Methodref          #124.#132     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #19 = Methodref          #2.#133       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-   #20 = Methodref          #124.#134     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #21 = Methodref          #2.#135       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #22 = Fieldref           #2.#136       // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n-   #23 = Fieldref           #2.#137       // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n-   #24 = Methodref          #138.#139     // java/nio/charset/CoderResult.isUnderflow:()Z\n-   #25 = Methodref          #116.#140     // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n-   #26 = Methodref          #116.#141     // java/nio/CharBuffer.position:()I\n-   #27 = Methodref          #116.#142     // java/nio/CharBuffer.array:()[C\n-   #28 = Methodref          #116.#143     // java/nio/CharBuffer.remaining:()I\n-   #29 = Methodref          #144.#145     // java/io/Reader.read:([CII)I\n-   #30 = Methodref          #116.#146     // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n-   #31 = Methodref          #120.#147     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n-   #32 = Methodref          #128.#148     // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-   #33 = String             #100          // array\n-   #34 = Methodref          #149.#150     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #35 = Class              #151          // java/lang/IndexOutOfBoundsException\n-   #36 = Class              #152          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#113      // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = String             #153          // Array Size=\n-   #39 = Methodref          #36.#154      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #36.#155      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #41 = String             #156          // , offset=\n-   #42 = String             #157          // , length=\n-   #43 = Methodref          #36.#158      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #35.#159      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #120.#160     // java/nio/ByteBuffer.hasRemaining:()Z\n-   #46 = Methodref          #120.#143     // java/nio/ByteBuffer.remaining:()I\n-   #47 = Methodref          #161.#162     // java/lang/Math.min:(II)I\n-   #48 = Methodref          #120.#163     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n-   #49 = Methodref          #2.#164       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n-   #50 = Methodref          #2.#165       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n-   #51 = Methodref          #120.#166     // java/nio/ByteBuffer.get:()B\n-   #52 = Methodref          #144.#167     // java/io/Reader.close:()V\n-   #53 = Class              #168          // java/io/InputStream\n-   #54 = Utf8               DEFAULT_BUFFER_SIZE\n-   #55 = Utf8               I\n-   #56 = Utf8               ConstantValue\n-   #57 = Integer            1024\n-   #58 = Utf8               reader\n-   #59 = Utf8               Ljava/io/Reader;\n-   #60 = Utf8               encoder\n-   #61 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-   #62 = Utf8               encoderIn\n-   #63 = Utf8               Ljava/nio/CharBuffer;\n-   #64 = Utf8               encoderOut\n-   #65 = Utf8               Ljava/nio/ByteBuffer;\n-   #66 = Utf8               lastCoderResult\n-   #67 = Utf8               Ljava/nio/charset/CoderResult;\n-   #68 = Utf8               endOfInput\n-   #69 = Utf8               Z\n-   #70 = Utf8               <init>\n-   #71 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n-   #72 = Utf8               Code\n-   #73 = Utf8               LineNumberTable\n-   #74 = Utf8               LocalVariableTable\n-   #75 = Utf8               this\n-   #76 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n-   #77 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-   #78 = Utf8               bufferSize\n-   #79 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #80 = Utf8               charset\n-   #81 = Utf8               Ljava/nio/charset/Charset;\n-   #82 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #83 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n-   #84 = Utf8               charsetName\n-   #85 = Utf8               Ljava/lang/String;\n-   #86 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n-   #87 = Utf8               (Ljava/io/Reader;)V\n-   #88 = Utf8               Deprecated\n-   #89 = Utf8               RuntimeVisibleAnnotations\n-   #90 = Utf8               Ljava/lang/Deprecated;\n-   #91 = Utf8               fillBuffer\n-   #92 = Utf8               ()V\n-   #93 = Utf8               position\n-   #94 = Utf8               c\n-   #95 = Utf8               StackMapTable\n-   #96 = Utf8               Exceptions\n-   #97 = Class              #169          // java/io/IOException\n-   #98 = Utf8               read\n-   #99 = Utf8               ([BII)I\n-  #100 = Utf8               array\n-  #101 = Utf8               [B\n-  #102 = Utf8               off\n-  #103 = Utf8               len\n-  #104 = Utf8               ([B)I\n-  #105 = Utf8               b\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Class              #4            // org/apache/commons/io/input/ReaderInputStream\n+    #4 = Utf8               org/apache/commons/io/input/ReaderInputStream\n+    #5 = Methodref          #3.#6         // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+    #6 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+    #9 = Methodref          #10.#11       // java/io/InputStream.\"<init>\":()V\n+   #10 = Class              #12           // java/io/InputStream\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/io/InputStream\n+   #13 = Utf8               ()V\n+   #14 = Fieldref           #3.#15        // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n+   #15 = NameAndType        #16:#17       // reader:Ljava/io/Reader;\n+   #16 = Utf8               reader\n+   #17 = Utf8               Ljava/io/Reader;\n+   #18 = Fieldref           #3.#19        // org/apache/commons/io/input/ReaderInputStream.encoder:Ljava/nio/charset/CharsetEncoder;\n+   #19 = NameAndType        #20:#21       // encoder:Ljava/nio/charset/CharsetEncoder;\n+   #20 = Utf8               encoder\n+   #21 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+   #22 = Methodref          #23.#24       // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+   #23 = Class              #25           // java/nio/CharBuffer\n+   #24 = NameAndType        #26:#27       // allocate:(I)Ljava/nio/CharBuffer;\n+   #25 = Utf8               java/nio/CharBuffer\n+   #26 = Utf8               allocate\n+   #27 = Utf8               (I)Ljava/nio/CharBuffer;\n+   #28 = Fieldref           #3.#29        // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n+   #29 = NameAndType        #30:#31       // encoderIn:Ljava/nio/CharBuffer;\n+   #30 = Utf8               encoderIn\n+   #31 = Utf8               Ljava/nio/CharBuffer;\n+   #32 = Methodref          #23.#33       // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+   #33 = NameAndType        #34:#35       // flip:()Ljava/nio/CharBuffer;\n+   #34 = Utf8               flip\n+   #35 = Utf8               ()Ljava/nio/CharBuffer;\n+   #36 = Methodref          #37.#38       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #37 = Class              #39           // java/nio/ByteBuffer\n+   #38 = NameAndType        #26:#40       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #39 = Utf8               java/nio/ByteBuffer\n+   #40 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #41 = Fieldref           #3.#42        // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n+   #42 = NameAndType        #43:#44       // encoderOut:Ljava/nio/ByteBuffer;\n+   #43 = Utf8               encoderOut\n+   #44 = Utf8               Ljava/nio/ByteBuffer;\n+   #45 = Methodref          #37.#46       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #46 = NameAndType        #34:#47       // flip:()Ljava/nio/ByteBuffer;\n+   #47 = Utf8               ()Ljava/nio/ByteBuffer;\n+   #48 = Methodref          #49.#50       // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #49 = Class              #51           // java/nio/charset/Charset\n+   #50 = NameAndType        #52:#53       // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #51 = Utf8               java/nio/charset/Charset\n+   #52 = Utf8               newEncoder\n+   #53 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+   #54 = Fieldref           #55.#56       // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+   #55 = Class              #57           // java/nio/charset/CodingErrorAction\n+   #56 = NameAndType        #58:#59       // REPLACE:Ljava/nio/charset/CodingErrorAction;\n+   #57 = Utf8               java/nio/charset/CodingErrorAction\n+   #58 = Utf8               REPLACE\n+   #59 = Utf8               Ljava/nio/charset/CodingErrorAction;\n+   #60 = Methodref          #61.#62       // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #61 = Class              #63           // java/nio/charset/CharsetEncoder\n+   #62 = NameAndType        #64:#65       // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #63 = Utf8               java/nio/charset/CharsetEncoder\n+   #64 = Utf8               onMalformedInput\n+   #65 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #66 = Methodref          #61.#67       // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #67 = NameAndType        #68:#65       // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #68 = Utf8               onUnmappableCharacter\n+   #69 = Methodref          #3.#70        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #70 = NameAndType        #7:#71        // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #71 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #72 = Methodref          #49.#73       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #73 = NameAndType        #74:#75       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #74 = Utf8               forName\n+   #75 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #76 = Methodref          #3.#77        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+   #77 = NameAndType        #7:#78        // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+   #78 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n+   #79 = Methodref          #49.#80       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #80 = NameAndType        #81:#82       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #81 = Utf8               defaultCharset\n+   #82 = Utf8               ()Ljava/nio/charset/Charset;\n+   #83 = Methodref          #3.#84        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #84 = NameAndType        #7:#85        // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #85 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #86 = Fieldref           #3.#87        // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n+   #87 = NameAndType        #88:#89       // endOfInput:Z\n+   #88 = Utf8               endOfInput\n+   #89 = Utf8               Z\n+   #90 = Fieldref           #3.#91        // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n+   #91 = NameAndType        #92:#93       // lastCoderResult:Ljava/nio/charset/CoderResult;\n+   #92 = Utf8               lastCoderResult\n+   #93 = Utf8               Ljava/nio/charset/CoderResult;\n+   #94 = Methodref          #95.#96       // java/nio/charset/CoderResult.isUnderflow:()Z\n+   #95 = Class              #97           // java/nio/charset/CoderResult\n+   #96 = NameAndType        #98:#99       // isUnderflow:()Z\n+   #97 = Utf8               java/nio/charset/CoderResult\n+   #98 = Utf8               isUnderflow\n+   #99 = Utf8               ()Z\n+  #100 = Methodref          #23.#101      // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+  #101 = NameAndType        #102:#35      // compact:()Ljava/nio/CharBuffer;\n+  #102 = Utf8               compact\n+  #103 = Methodref          #23.#104      // java/nio/CharBuffer.position:()I\n+  #104 = NameAndType        #105:#106     // position:()I\n+  #105 = Utf8               position\n   #106 = Utf8               ()I\n-  #107 = Utf8               close\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               ReaderInputStream.java\n-  #110 = Utf8               org/apache/commons/io/IOUtils\n-  #111 = Utf8               org/apache/commons/io/input/ReaderInputStream\n-  #112 = NameAndType        #70:#77       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-  #113 = NameAndType        #70:#92       // \"<init>\":()V\n-  #114 = NameAndType        #58:#59       // reader:Ljava/io/Reader;\n-  #115 = NameAndType        #60:#61       // encoder:Ljava/nio/charset/CharsetEncoder;\n-  #116 = Class              #170          // java/nio/CharBuffer\n-  #117 = NameAndType        #171:#172     // allocate:(I)Ljava/nio/CharBuffer;\n-  #118 = NameAndType        #62:#63       // encoderIn:Ljava/nio/CharBuffer;\n-  #119 = NameAndType        #173:#174     // flip:()Ljava/nio/CharBuffer;\n-  #120 = Class              #175          // java/nio/ByteBuffer\n-  #121 = NameAndType        #171:#176     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #122 = NameAndType        #64:#65       // encoderOut:Ljava/nio/ByteBuffer;\n-  #123 = NameAndType        #173:#177     // flip:()Ljava/nio/ByteBuffer;\n-  #124 = Class              #178          // java/nio/charset/Charset\n-  #125 = NameAndType        #179:#180     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-  #126 = Class              #181          // java/nio/charset/CodingErrorAction\n-  #127 = NameAndType        #182:#183     // REPLACE:Ljava/nio/charset/CodingErrorAction;\n-  #128 = Class              #184          // java/nio/charset/CharsetEncoder\n-  #129 = NameAndType        #185:#186     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #130 = NameAndType        #187:#186     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #131 = NameAndType        #70:#79       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-  #132 = NameAndType        #188:#189     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #133 = NameAndType        #70:#83       // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-  #134 = NameAndType        #190:#191     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #135 = NameAndType        #70:#82       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-  #136 = NameAndType        #68:#69       // endOfInput:Z\n-  #137 = NameAndType        #66:#67       // lastCoderResult:Ljava/nio/charset/CoderResult;\n-  #138 = Class              #192          // java/nio/charset/CoderResult\n-  #139 = NameAndType        #193:#194     // isUnderflow:()Z\n-  #140 = NameAndType        #195:#174     // compact:()Ljava/nio/CharBuffer;\n-  #141 = NameAndType        #93:#106      // position:()I\n-  #142 = NameAndType        #100:#196     // array:()[C\n-  #143 = NameAndType        #197:#106     // remaining:()I\n-  #144 = Class              #198          // java/io/Reader\n-  #145 = NameAndType        #98:#199      // read:([CII)I\n-  #146 = NameAndType        #93:#172      // position:(I)Ljava/nio/CharBuffer;\n-  #147 = NameAndType        #195:#177     // compact:()Ljava/nio/ByteBuffer;\n-  #148 = NameAndType        #200:#201     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #149 = Class              #202          // java/util/Objects\n-  #150 = NameAndType        #203:#204     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #151 = Utf8               java/lang/IndexOutOfBoundsException\n-  #152 = Utf8               java/lang/StringBuilder\n-  #153 = Utf8               Array Size=\n-  #154 = NameAndType        #205:#206     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #155 = NameAndType        #205:#207     // append:(I)Ljava/lang/StringBuilder;\n-  #156 = Utf8               , offset=\n-  #157 = Utf8               , length=\n-  #158 = NameAndType        #208:#209     // toString:()Ljava/lang/String;\n-  #159 = NameAndType        #70:#210      // \"<init>\":(Ljava/lang/String;)V\n-  #160 = NameAndType        #211:#194     // hasRemaining:()Z\n-  #161 = Class              #212          // java/lang/Math\n-  #162 = NameAndType        #213:#214     // min:(II)I\n-  #163 = NameAndType        #215:#216     // get:([BII)Ljava/nio/ByteBuffer;\n-  #164 = NameAndType        #91:#92       // fillBuffer:()V\n-  #165 = NameAndType        #98:#99       // read:([BII)I\n-  #166 = NameAndType        #215:#217     // get:()B\n-  #167 = NameAndType        #107:#92      // close:()V\n-  #168 = Utf8               java/io/InputStream\n-  #169 = Utf8               java/io/IOException\n-  #170 = Utf8               java/nio/CharBuffer\n-  #171 = Utf8               allocate\n-  #172 = Utf8               (I)Ljava/nio/CharBuffer;\n-  #173 = Utf8               flip\n-  #174 = Utf8               ()Ljava/nio/CharBuffer;\n-  #175 = Utf8               java/nio/ByteBuffer\n-  #176 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #177 = Utf8               ()Ljava/nio/ByteBuffer;\n-  #178 = Utf8               java/nio/charset/Charset\n-  #179 = Utf8               newEncoder\n-  #180 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-  #181 = Utf8               java/nio/charset/CodingErrorAction\n-  #182 = Utf8               REPLACE\n-  #183 = Utf8               Ljava/nio/charset/CodingErrorAction;\n-  #184 = Utf8               java/nio/charset/CharsetEncoder\n-  #185 = Utf8               onMalformedInput\n-  #186 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #187 = Utf8               onUnmappableCharacter\n-  #188 = Utf8               forName\n-  #189 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #190 = Utf8               defaultCharset\n-  #191 = Utf8               ()Ljava/nio/charset/Charset;\n-  #192 = Utf8               java/nio/charset/CoderResult\n-  #193 = Utf8               isUnderflow\n-  #194 = Utf8               ()Z\n-  #195 = Utf8               compact\n-  #196 = Utf8               ()[C\n-  #197 = Utf8               remaining\n-  #198 = Utf8               java/io/Reader\n-  #199 = Utf8               ([CII)I\n-  #200 = Utf8               encode\n-  #201 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #202 = Utf8               java/util/Objects\n-  #203 = Utf8               requireNonNull\n-  #204 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #205 = Utf8               append\n-  #206 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #207 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #208 = Utf8               toString\n-  #209 = Utf8               ()Ljava/lang/String;\n-  #210 = Utf8               (Ljava/lang/String;)V\n-  #211 = Utf8               hasRemaining\n-  #212 = Utf8               java/lang/Math\n-  #213 = Utf8               min\n-  #214 = Utf8               (II)I\n-  #215 = Utf8               get\n-  #216 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n-  #217 = Utf8               ()B\n+  #107 = Methodref          #23.#108      // java/nio/CharBuffer.array:()[C\n+  #108 = NameAndType        #109:#110     // array:()[C\n+  #109 = Utf8               array\n+  #110 = Utf8               ()[C\n+  #111 = Methodref          #23.#112      // java/nio/CharBuffer.remaining:()I\n+  #112 = NameAndType        #113:#106     // remaining:()I\n+  #113 = Utf8               remaining\n+  #114 = Methodref          #115.#116     // java/io/Reader.read:([CII)I\n+  #115 = Class              #117          // java/io/Reader\n+  #116 = NameAndType        #118:#119     // read:([CII)I\n+  #117 = Utf8               java/io/Reader\n+  #118 = Utf8               read\n+  #119 = Utf8               ([CII)I\n+  #120 = Methodref          #23.#121      // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+  #121 = NameAndType        #105:#27      // position:(I)Ljava/nio/CharBuffer;\n+  #122 = Methodref          #37.#123      // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+  #123 = NameAndType        #102:#47      // compact:()Ljava/nio/ByteBuffer;\n+  #124 = Methodref          #61.#125      // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #125 = NameAndType        #126:#127     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #126 = Utf8               encode\n+  #127 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #128 = String             #109          // array\n+  #129 = Methodref          #130.#131     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #130 = Class              #132          // java/util/Objects\n+  #131 = NameAndType        #133:#134     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #132 = Utf8               java/util/Objects\n+  #133 = Utf8               requireNonNull\n+  #134 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #135 = Class              #136          // java/lang/IndexOutOfBoundsException\n+  #136 = Utf8               java/lang/IndexOutOfBoundsException\n+  #137 = Class              #138          // java/lang/StringBuilder\n+  #138 = Utf8               java/lang/StringBuilder\n+  #139 = Methodref          #137.#11      // java/lang/StringBuilder.\"<init>\":()V\n+  #140 = String             #141          // Array Size=\n+  #141 = Utf8               Array Size=\n+  #142 = Methodref          #137.#143     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #143 = NameAndType        #144:#145     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #144 = Utf8               append\n+  #145 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #146 = Methodref          #137.#147     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #147 = NameAndType        #144:#148     // append:(I)Ljava/lang/StringBuilder;\n+  #148 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #149 = String             #150          // , offset=\n+  #150 = Utf8               , offset=\n+  #151 = String             #152          // , length=\n+  #152 = Utf8               , length=\n+  #153 = Methodref          #137.#154     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #154 = NameAndType        #155:#156     // toString:()Ljava/lang/String;\n+  #155 = Utf8               toString\n+  #156 = Utf8               ()Ljava/lang/String;\n+  #157 = Methodref          #135.#158     // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #158 = NameAndType        #7:#159       // \"<init>\":(Ljava/lang/String;)V\n+  #159 = Utf8               (Ljava/lang/String;)V\n+  #160 = Methodref          #37.#161      // java/nio/ByteBuffer.hasRemaining:()Z\n+  #161 = NameAndType        #162:#99      // hasRemaining:()Z\n+  #162 = Utf8               hasRemaining\n+  #163 = Methodref          #37.#112      // java/nio/ByteBuffer.remaining:()I\n+  #164 = Methodref          #165.#166     // java/lang/Math.min:(II)I\n+  #165 = Class              #167          // java/lang/Math\n+  #166 = NameAndType        #168:#169     // min:(II)I\n+  #167 = Utf8               java/lang/Math\n+  #168 = Utf8               min\n+  #169 = Utf8               (II)I\n+  #170 = Methodref          #37.#171      // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+  #171 = NameAndType        #172:#173     // get:([BII)Ljava/nio/ByteBuffer;\n+  #172 = Utf8               get\n+  #173 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+  #174 = Methodref          #3.#175       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n+  #175 = NameAndType        #176:#13      // fillBuffer:()V\n+  #176 = Utf8               fillBuffer\n+  #177 = Methodref          #3.#178       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n+  #178 = NameAndType        #118:#179     // read:([BII)I\n+  #179 = Utf8               ([BII)I\n+  #180 = Methodref          #37.#181      // java/nio/ByteBuffer.get:()B\n+  #181 = NameAndType        #172:#182     // get:()B\n+  #182 = Utf8               ()B\n+  #183 = Methodref          #115.#184     // java/io/Reader.close:()V\n+  #184 = NameAndType        #185:#13      // close:()V\n+  #185 = Utf8               close\n+  #186 = Utf8               DEFAULT_BUFFER_SIZE\n+  #187 = Utf8               I\n+  #188 = Utf8               ConstantValue\n+  #189 = Integer            1024\n+  #190 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n+  #191 = Utf8               Code\n+  #192 = Utf8               LineNumberTable\n+  #193 = Utf8               LocalVariableTable\n+  #194 = Utf8               this\n+  #195 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n+  #196 = Utf8               bufferSize\n+  #197 = Utf8               charset\n+  #198 = Utf8               Ljava/nio/charset/Charset;\n+  #199 = Utf8               charsetName\n+  #200 = Utf8               Ljava/lang/String;\n+  #201 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n+  #202 = Utf8               (Ljava/io/Reader;)V\n+  #203 = Utf8               Deprecated\n+  #204 = Utf8               RuntimeVisibleAnnotations\n+  #205 = Utf8               Ljava/lang/Deprecated;\n+  #206 = Utf8               c\n+  #207 = Utf8               StackMapTable\n+  #208 = Utf8               Exceptions\n+  #209 = Class              #210          // java/io/IOException\n+  #210 = Utf8               java/io/IOException\n+  #211 = Utf8               [B\n+  #212 = Utf8               off\n+  #213 = Utf8               len\n+  #214 = Utf8               ([B)I\n+  #215 = Utf8               b\n+  #216 = Utf8               SourceFile\n+  #217 = Utf8               ReaderInputStream.java\n {\n   private static final int DEFAULT_BUFFER_SIZE = 1024;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1024\n \n   private final java.io.Reader reader;\n@@ -260,15 +260,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+         6: invokespecial #5                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n          9: return\n       LineNumberTable:\n         line 113: 0\n         line 114: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -277,36 +277,36 @@\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #4                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #5                  // Field reader:Ljava/io/Reader;\n+         6: putfield      #14                 // Field reader:Ljava/io/Reader;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;\n+        11: putfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;\n         14: aload_0\n         15: iload_3\n-        16: invokestatic  #7                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-        19: putfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+        16: invokestatic  #22                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+        19: putfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n         22: aload_0\n-        23: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        26: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+        23: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        26: invokevirtual #32                 // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n         29: pop\n         30: aload_0\n         31: sipush        128\n-        34: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-        37: putfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        34: invokestatic  #36                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        37: putfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n         40: aload_0\n-        41: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        44: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+        41: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        44: invokevirtual #45                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n         47: pop\n         48: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 4\n         line 126: 9\n         line 127: 14\n@@ -325,21 +325,21 @@\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #13                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-         6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-         9: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-        12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        15: invokevirtual #16                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+         3: invokevirtual #48                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+         6: getstatic     #54                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+         9: invokevirtual #60                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+        12: getstatic     #54                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        15: invokevirtual #66                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n         18: iload_3\n-        19: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+        19: invokespecial #5                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n         22: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 3\n         line 143: 9\n         line 144: 15\n         line 141: 19\n@@ -356,15 +356,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #17                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         6: invokespecial #69                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n          9: return\n       LineNumberTable:\n         line 156: 0\n         line 157: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -375,17 +375,17 @@\n     descriptor: (Ljava/io/Reader;Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         3: invokestatic  #72                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n          6: iload_3\n-         7: invokespecial #17                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         7: invokespecial #69                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n         10: return\n       LineNumberTable:\n         line 167: 0\n         line 168: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -398,15 +398,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #19                 // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+         6: invokespecial #76                 // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n          9: return\n       LineNumberTable:\n         line 178: 0\n         line 179: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -416,99 +416,99 @@\n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #20                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-         5: invokespecial #21                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+         2: invokestatic  #79                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         5: invokespecial #83                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n          8: return\n       LineNumberTable:\n         line 190: 0\n         line 191: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1 reader   Ljava/io/Reader;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #90()\n+      0: #205()\n         java.lang.Deprecated\n \n   private void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field endOfInput:Z\n+         1: getfield      #86                 // Field endOfInput:Z\n          4: ifne          95\n          7: aload_0\n-         8: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+         8: getfield      #90                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n         11: ifnull        24\n         14: aload_0\n-        15: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n-        18: invokevirtual #24                 // Method java/nio/charset/CoderResult.isUnderflow:()Z\n+        15: getfield      #90                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+        18: invokevirtual #94                 // Method java/nio/charset/CoderResult.isUnderflow:()Z\n         21: ifeq          95\n         24: aload_0\n-        25: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        28: invokevirtual #25                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+        25: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        28: invokevirtual #100                // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n         31: pop\n         32: aload_0\n-        33: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        36: invokevirtual #26                 // Method java/nio/CharBuffer.position:()I\n+        33: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        36: invokevirtual #103                // Method java/nio/CharBuffer.position:()I\n         39: istore_1\n         40: aload_0\n-        41: getfield      #5                  // Field reader:Ljava/io/Reader;\n+        41: getfield      #14                 // Field reader:Ljava/io/Reader;\n         44: aload_0\n-        45: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        48: invokevirtual #27                 // Method java/nio/CharBuffer.array:()[C\n+        45: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        48: invokevirtual #107                // Method java/nio/CharBuffer.array:()[C\n         51: iload_1\n         52: aload_0\n-        53: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        56: invokevirtual #28                 // Method java/nio/CharBuffer.remaining:()I\n-        59: invokevirtual #29                 // Method java/io/Reader.read:([CII)I\n+        53: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        56: invokevirtual #111                // Method java/nio/CharBuffer.remaining:()I\n+        59: invokevirtual #114                // Method java/io/Reader.read:([CII)I\n         62: istore_2\n         63: iload_2\n         64: iconst_m1\n         65: if_icmpne     76\n         68: aload_0\n         69: iconst_1\n-        70: putfield      #22                 // Field endOfInput:Z\n+        70: putfield      #86                 // Field endOfInput:Z\n         73: goto          87\n         76: aload_0\n-        77: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+        77: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n         80: iload_1\n         81: iload_2\n         82: iadd\n-        83: invokevirtual #30                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+        83: invokevirtual #120                // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n         86: pop\n         87: aload_0\n-        88: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        91: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+        88: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        91: invokevirtual #32                 // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n         94: pop\n         95: aload_0\n-        96: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        99: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+        96: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        99: invokevirtual #122                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n        102: pop\n        103: aload_0\n        104: aload_0\n-       105: getfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;\n+       105: getfield      #18                 // Field encoder:Ljava/nio/charset/CharsetEncoder;\n        108: aload_0\n-       109: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+       109: getfield      #28                 // Field encoderIn:Ljava/nio/CharBuffer;\n        112: aload_0\n-       113: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       113: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n        116: aload_0\n-       117: getfield      #22                 // Field endOfInput:Z\n-       120: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-       123: putfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       117: getfield      #86                 // Field endOfInput:Z\n+       120: invokevirtual #124                // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+       123: putfield      #90                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n        126: aload_0\n-       127: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-       130: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+       127: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       130: invokevirtual #45                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        133: pop\n        134: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 24\n         line 202: 32\n         line 206: 40\n@@ -538,72 +538,72 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #33                 // String array\n-         3: invokestatic  #34                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #128                // String array\n+         3: invokestatic  #129                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n         20: if_icmple     69\n-        23: new           #35                 // class java/lang/IndexOutOfBoundsException\n+        23: new           #135                // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #36                 // class java/lang/StringBuilder\n+        27: new           #137                // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #38                 // String Array Size=\n-        36: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokespecial #139                // Method java/lang/StringBuilder.\"<init>\":()V\n+        34: ldc           #140                // String Array Size=\n+        36: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         39: aload_1\n         40: arraylength\n-        41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #41                 // String , offset=\n-        46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #146                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        44: ldc           #149                // String , offset=\n+        46: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: iload_2\n-        50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #42                 // String , length=\n-        55: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #146                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        53: ldc           #151                // String , length=\n+        55: invokevirtual #142                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: iload_3\n-        59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        59: invokevirtual #146                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        62: invokevirtual #153                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        65: invokespecial #157                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: iconst_0\n         70: istore        4\n         72: iload_3\n         73: ifne          78\n         76: iconst_0\n         77: ireturn\n         78: iload_3\n         79: ifle          161\n         82: aload_0\n-        83: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        86: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        83: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        86: invokevirtual #160                // Method java/nio/ByteBuffer.hasRemaining:()Z\n         89: ifeq          137\n         92: aload_0\n-        93: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        96: invokevirtual #46                 // Method java/nio/ByteBuffer.remaining:()I\n+        93: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        96: invokevirtual #163                // Method java/nio/ByteBuffer.remaining:()I\n         99: iload_3\n-       100: invokestatic  #47                 // Method java/lang/Math.min:(II)I\n+       100: invokestatic  #164                // Method java/lang/Math.min:(II)I\n        103: istore        5\n        105: aload_0\n-       106: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       106: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n        109: aload_1\n        110: iload_2\n        111: iload         5\n-       113: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+       113: invokevirtual #170                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n        116: pop\n        117: iload_2\n        118: iload         5\n        120: iadd\n        121: istore_2\n        122: iload_3\n        123: iload         5\n@@ -611,27 +611,27 @@\n        126: istore_3\n        127: iload         4\n        129: iload         5\n        131: iadd\n        132: istore        4\n        134: goto          78\n        137: aload_0\n-       138: invokespecial #49                 // Method fillBuffer:()V\n+       138: invokespecial #174                // Method fillBuffer:()V\n        141: aload_0\n-       142: getfield      #22                 // Field endOfInput:Z\n+       142: getfield      #86                 // Field endOfInput:Z\n        145: ifeq          78\n        148: aload_0\n-       149: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-       152: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+       149: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       152: invokevirtual #160                // Method java/nio/ByteBuffer.hasRemaining:()Z\n        155: ifne          78\n        158: goto          161\n        161: iload         4\n        163: ifne          177\n        166: aload_0\n-       167: getfield      #22                 // Field endOfInput:Z\n+       167: getfield      #86                 // Field endOfInput:Z\n        170: ifeq          177\n        173: iconst_m1\n        174: goto          179\n        177: iload         4\n        179: ireturn\n       LineNumberTable:\n         line 231: 0\n@@ -680,15 +680,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #50                 // Method read:([BII)I\n+         5: invokevirtual #177                // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 267: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1     b   [B\n@@ -697,31 +697,31 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-         4: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+         1: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+         4: invokevirtual #160                // Method java/nio/ByteBuffer.hasRemaining:()Z\n          7: ifeq          22\n         10: aload_0\n-        11: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        14: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B\n+        11: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        14: invokevirtual #180                // Method java/nio/ByteBuffer.get:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n         22: aload_0\n-        23: invokespecial #49                 // Method fillBuffer:()V\n+        23: invokespecial #174                // Method fillBuffer:()V\n         26: aload_0\n-        27: getfield      #22                 // Field endOfInput:Z\n+        27: getfield      #86                 // Field endOfInput:Z\n         30: ifeq          0\n         33: aload_0\n-        34: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        37: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        34: getfield      #41                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        37: invokevirtual #160                // Method java/nio/ByteBuffer.hasRemaining:()Z\n         40: ifne          0\n         43: iconst_m1\n         44: ireturn\n       LineNumberTable:\n         line 280: 0\n         line 281: 10\n         line 283: 22\n@@ -738,16 +738,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field reader:Ljava/io/Reader;\n-         4: invokevirtual #52                 // Method java/io/Reader.close:()V\n+         1: getfield      #14                 // Field reader:Ljava/io/Reader;\n+         4: invokevirtual #183                // Method java/io/Reader.close:()V\n          7: return\n       LineNumberTable:\n         line 297: 0\n         line 298: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n"}]}
