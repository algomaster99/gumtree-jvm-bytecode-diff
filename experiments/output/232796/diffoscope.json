{"diffoscope-json-version": 1, "source1": "first/CatalogResolver$CatalogManager.class", "source2": "second/CatalogResolver$CatalogManager.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,16 +12,16 @@\n     private String baseDir;\n     private ConfigurationInterpolator interpolator;\n     \n     public CatalogManager() {\n         this.baseDir = System.getProperty(\"user.dir\");\n     }\n     \n-    public void setFileSystem(final FileSystem fileSystem) {\n-        this.fs = fileSystem;\n+    public void setFileSystem(final FileSystem fs) {\n+        this.fs = fs;\n     }\n     \n     public FileSystem getFileSystem() {\n         return this.fs;\n     }\n     \n     public void setBaseDir(final String baseDir) {\n@@ -30,41 +30,41 @@\n         }\n     }\n     \n     public String getBaseDir() {\n         return this.baseDir;\n     }\n     \n-    public void setInterpolator(final ConfigurationInterpolator configurationInterpolator) {\n-        this.interpolator = configurationInterpolator;\n+    public void setInterpolator(final ConfigurationInterpolator interpolator) {\n+        this.interpolator = interpolator;\n     }\n     \n     public ConfigurationInterpolator getInterpolator() {\n         return this.interpolator;\n     }\n     \n     public Catalog getPrivateCatalog() {\n-        Catalog catalog = CatalogManager.staticCatalog;\n-        if (catalog != null) {\n+        Object staticCatalog = CatalogManager.staticCatalog;\n+        if (staticCatalog != null) {\n             if (this.getUseStaticCatalog()) {\n-                return catalog;\n+                return (Catalog)staticCatalog;\n             }\n         }\n         try {\n-            catalog = (Catalog)new CatalogResolver.Catalog();\n-            catalog.setCatalogManager((org.apache.xml.resolver.CatalogManager)this);\n-            catalog.setupReaders();\n-            catalog.loadSystemCatalogs();\n+            staticCatalog = new CatalogResolver.Catalog();\n+            ((Catalog)staticCatalog).setCatalogManager((org.apache.xml.resolver.CatalogManager)this);\n+            ((Catalog)staticCatalog).setupReaders();\n+            ((Catalog)staticCatalog).loadSystemCatalogs();\n         }\n         catch (final Exception ex) {\n             ex.printStackTrace();\n         }\n         if (this.getUseStaticCatalog()) {\n-            CatalogManager.staticCatalog = catalog;\n+            CatalogManager.staticCatalog = (Catalog)staticCatalog;\n         }\n-        return catalog;\n+        return (Catalog)staticCatalog;\n     }\n     \n     public Catalog getCatalog() {\n         return this.getPrivateCatalog();\n     }\n }\n"}]}
