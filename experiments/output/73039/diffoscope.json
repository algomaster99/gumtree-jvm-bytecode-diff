{"diffoscope-json-version": 1, "source1": "first/StreamCompressor$ScatterGatherBackingStoreCompressor.class", "source2": "second/StreamCompressor$ScatterGatherBackingStoreCompressor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,51 +1,51 @@\n-  SHA-256 checksum c19ccb40c10bce51b86b953af2c7cf45169cc36787300ff8e570948e21145ea6\n+  SHA-256 checksum 616cee4e7dc55106f47a540f38522e4fc417b44a288cdc681a5b1d93293ff3d6\n   Compiled from \"StreamCompressor.java\"\n final class org.apache.commons.compress.archivers.zip.StreamCompressor$ScatterGatherBackingStoreCompressor extends org.apache.commons.compress.archivers.zip.StreamCompressor\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n-  super_class: #2                         // org/apache/commons/compress/archivers/zip/StreamCompressor\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n+  super_class: #3                         // org/apache/commons/compress/archivers/zip/StreamCompressor\n   interfaces: 0, fields: 1, methods: 2, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/StreamCompressor.\"<init>\":(Ljava/util/zip/Deflater;)V\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/StreamCompressor\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/util/zip/Deflater;)V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n+   #3 = Class              #4             // org/apache/commons/compress/archivers/zip/StreamCompressor\n    #4 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/util/zip/Deflater;)V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor.bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n-   #9 = NameAndType        #11:#12        // bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #10 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor\n-  #11 = Utf8               bs\n-  #12 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #13 = InterfaceMethodref #14.#15        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.writeOut:([BII)V\n-  #14 = Class              #16            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #15 = NameAndType        #17:#18        // writeOut:([BII)V\n-  #16 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #17 = Utf8               writeOut\n-  #18 = Utf8               ([BII)V\n-  #19 = Utf8               (Ljava/util/zip/Deflater;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lorg/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor;\n-  #25 = Utf8               deflater\n-  #26 = Utf8               Ljava/util/zip/Deflater;\n-  #27 = Utf8               data\n-  #28 = Utf8               [B\n-  #29 = Utf8               offset\n-  #30 = Utf8               I\n-  #31 = Utf8               length\n-  #32 = Utf8               Exceptions\n-  #33 = Class              #34            // java/io/IOException\n-  #34 = Utf8               java/io/IOException\n+   #5 = Utf8               bs\n+   #6 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/util/zip/Deflater;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // org/apache/commons/compress/archivers/zip/StreamCompressor.\"<init>\":(Ljava/util/zip/Deflater;)V\n+  #11 = NameAndType        #7:#12         // \"<init>\":(Ljava/util/zip/Deflater;)V\n+  #12 = Utf8               (Ljava/util/zip/Deflater;)V\n+  #13 = Fieldref           #1.#14         // org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor.bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #14 = NameAndType        #5:#6          // bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               LocalVariableTable\n+  #17 = Utf8               this\n+  #18 = Utf8               Lorg/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor;\n+  #19 = Utf8               deflater\n+  #20 = Utf8               Ljava/util/zip/Deflater;\n+  #21 = Utf8               writeOut\n+  #22 = Utf8               ([BII)V\n+  #23 = Utf8               Exceptions\n+  #24 = Class              #25            // java/io/IOException\n+  #25 = Utf8               java/io/IOException\n+  #26 = InterfaceMethodref #27.#29        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.writeOut:([BII)V\n+  #27 = Class              #28            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #28 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #29 = NameAndType        #21:#22        // writeOut:([BII)V\n+  #30 = Utf8               data\n+  #31 = Utf8               [B\n+  #32 = Utf8               offset\n+  #33 = Utf8               I\n+  #34 = Utf8               length\n   #35 = Utf8               SourceFile\n   #36 = Utf8               StreamCompressor.java\n   #37 = Utf8               InnerClasses\n   #38 = Utf8               ScatterGatherBackingStoreCompressor\n {\n   private final org.apache.commons.compress.parallel.ScatterGatherBackingStore bs;\n     descriptor: Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n@@ -54,49 +54,49 @@\n   public org.apache.commons.compress.archivers.zip.StreamCompressor$ScatterGatherBackingStoreCompressor(java.util.zip.Deflater, org.apache.commons.compress.parallel.ScatterGatherBackingStore);\n     descriptor: (Ljava/util/zip/Deflater;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method org/apache/commons/compress/archivers/zip/StreamCompressor.\"<init>\":(Ljava/util/zip/Deflater;)V\n+         2: invokespecial #10                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.\"<init>\":(Ljava/util/zip/Deflater;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #7                  // Field bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+         7: putfield      #13                 // Field bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n         10: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 5\n         line 78: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor;\n             0      11     1 deflater   Ljava/util/zip/Deflater;\n             0      11     2    bs   Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n \n   protected void writeOut(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #7                  // Field bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+         1: getfield      #13                 // Field bs:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokeinterface #13,  4           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.writeOut:([BII)V\n+         7: invokeinterface #26,  4           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.writeOut:([BII)V\n         12: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor;\n             0      13     1  data   [B\n             0      13     2 offset   I\n             0      13     3 length   I\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"StreamCompressor.java\"\n InnerClasses:\n-  private static final #38= #8 of #2;     // ScatterGatherBackingStoreCompressor=class org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor of class org/apache/commons/compress/archivers/zip/StreamCompressor\n+  private static final #38= #1 of #3;     // ScatterGatherBackingStoreCompressor=class org/apache/commons/compress/archivers/zip/StreamCompressor$ScatterGatherBackingStoreCompressor of class org/apache/commons/compress/archivers/zip/StreamCompressor\n"}]}
