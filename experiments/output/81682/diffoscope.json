{"diffoscope-json-version": 1, "source1": "first/Codec.class", "source2": "second/Codec.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,14 +13,26 @@\n     public static final BHSDCodec DELTA5;\n     public static final BHSDCodec MDELTA5;\n     public static final BHSDCodec SIGNED5;\n     public static final BHSDCodec UDELTA5;\n     public static final BHSDCodec UNSIGNED5;\n     public int lastBandLength;\n     \n+    static {\n+        BCI5 = new BHSDCodec(5, 4);\n+        BRANCH5 = new BHSDCodec(5, 4, 2);\n+        BYTE1 = new BHSDCodec(1, 256);\n+        CHAR3 = new BHSDCodec(3, 128);\n+        DELTA5 = new BHSDCodec(5, 64, 1, 1);\n+        MDELTA5 = new BHSDCodec(5, 64, 2, 1);\n+        SIGNED5 = new BHSDCodec(5, 64, 1);\n+        UDELTA5 = new BHSDCodec(5, 64, 0, 1);\n+        UNSIGNED5 = new BHSDCodec(5, 64);\n+    }\n+    \n     public abstract int decode(final InputStream p0) throws IOException, Pack200Exception;\n     \n     public abstract byte[] encode(final int p0, final int p1) throws Pack200Exception;\n     \n     public abstract byte[] encode(final int p0) throws Pack200Exception;\n     \n     public abstract int decode(final InputStream p0, final long p1) throws IOException, Pack200Exception;\n@@ -50,26 +62,16 @@\n         final byte[][] bytes = new byte[ints.length][];\n         for (int i = 0; i < ints.length; ++i) {\n             bytes[i] = this.encode(ints[i], (i > 0) ? ints[i - 1] : 0);\n             total += bytes[i].length;\n         }\n         final byte[] encoded = new byte[total];\n         int index = 0;\n-        for (final byte[] element : bytes) {\n+        byte[][] array;\n+        for (int length = (array = bytes).length, j = 0; j < length; ++j) {\n+            final byte[] element = array[j];\n             System.arraycopy(element, 0, encoded, index, element.length);\n             index += element.length;\n         }\n         return encoded;\n     }\n-    \n-    static {\n-        BCI5 = new BHSDCodec(5, 4);\n-        BRANCH5 = new BHSDCodec(5, 4, 2);\n-        BYTE1 = new BHSDCodec(1, 256);\n-        CHAR3 = new BHSDCodec(3, 128);\n-        DELTA5 = new BHSDCodec(5, 64, 1, 1);\n-        MDELTA5 = new BHSDCodec(5, 64, 2, 1);\n-        SIGNED5 = new BHSDCodec(5, 64, 1);\n-        UDELTA5 = new BHSDCodec(5, 64, 0, 1);\n-        UNSIGNED5 = new BHSDCodec(5, 64);\n-    }\n }\n"}]}
