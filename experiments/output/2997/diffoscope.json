{"diffoscope-json-version": 1, "source1": "first/LZ77Compressor.class", "source2": "second/LZ77Compressor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,81 +1,81 @@\n-  SHA-256 checksum af2265dd8f492e5e07d30adcd3f601037cf7f5b07d92b78f40a837a385365931\n+  SHA-256 checksum fbcdaf2fdc53ea497707290179a9d7978ef2ae8f711ee92de4e05fabbfcf66cf\n   Compiled from \"LZ77Compressor.java\"\n public class org.apache.commons.compress.compressors.lz77support.LZ77Compressor\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n   super_class: #57                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 18, attributes: 2\n Constant pool:\n-    #1 = Class              #164          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-    #2 = Methodref          #57.#165      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #1.#166       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.matchStart:I\n+    #1 = Class              #163          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+    #2 = Methodref          #57.#164      // java/lang/Object.\"<init>\":()V\n+    #3 = Fieldref           #1.#165       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.matchStart:I\n     #4 = String             #74           // params\n-    #5 = Methodref          #167.#168     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #5 = Methodref          #166.#167     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n     #6 = String             #76           // callback\n-    #7 = Fieldref           #1.#169       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-    #8 = Fieldref           #1.#170       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-    #9 = Methodref          #171.#172     // org/apache/commons/compress/compressors/lz77support/Parameters.getWindowSize:()I\n-   #10 = Fieldref           #1.#173       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.window:[B\n-   #11 = Fieldref           #1.#174       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.wMask:I\n+    #7 = Fieldref           #1.#168       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+    #8 = Fieldref           #1.#169       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+    #9 = Methodref          #170.#171     // org/apache/commons/compress/compressors/lz77support/Parameters.getWindowSize:()I\n+   #10 = Fieldref           #1.#172       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.window:[B\n+   #11 = Fieldref           #1.#173       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.wMask:I\n    #12 = Integer            32768\n-   #13 = Fieldref           #1.#175       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.head:[I\n-   #14 = Methodref          #176.#177     // java/util/Arrays.fill:([II)V\n-   #15 = Fieldref           #1.#178       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.prev:[I\n-   #16 = Methodref          #1.#179       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n-   #17 = Methodref          #1.#180       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.doCompress:([BII)V\n-   #18 = Fieldref           #1.#181       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.blockStart:I\n-   #19 = Fieldref           #1.#182       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.currentPosition:I\n-   #20 = Fieldref           #1.#183       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.lookahead:I\n-   #21 = Methodref          #1.#184       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushLiteralBlock:()V\n-   #22 = Fieldref           #1.#185       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n-   #23 = InterfaceMethodref #58.#186      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback.accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-   #24 = Class              #187          // java/lang/IllegalStateException\n-   #25 = String             #188          // The compressor has already started to accept data, can\\'t prefill anymore\n-   #26 = Methodref          #24.#189      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #190.#191     // java/lang/Math.min:(II)I\n-   #28 = Methodref          #192.#193     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #29 = Methodref          #1.#194       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialize:()V\n-   #30 = Methodref          #1.#195       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertString:(I)I\n-   #31 = Fieldref           #1.#196       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.missedInserts:I\n-   #32 = Methodref          #1.#197       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.slide:()V\n-   #33 = Fieldref           #1.#198       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialized:Z\n-   #34 = Methodref          #171.#199     // org/apache/commons/compress/compressors/lz77support/Parameters.getMinBackReferenceLength:()I\n-   #35 = Methodref          #1.#200       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:()V\n-   #36 = Fieldref           #1.#201       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertHash:I\n-   #37 = Methodref          #1.#202       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.nextHash:(IB)I\n-   #38 = Methodref          #171.#203     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatching:()Z\n-   #39 = Methodref          #171.#204     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatchingThreshold:()I\n-   #40 = Methodref          #1.#205       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.catchUpMissedInserts:()V\n-   #41 = Methodref          #171.#206     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxOffset:()I\n-   #42 = Methodref          #1.#207       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatch:(I)I\n-   #43 = Methodref          #1.#208       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatchForNextPosition:(I)I\n-   #44 = Methodref          #1.#209       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushBackReference:(I)V\n-   #45 = Methodref          #1.#210       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertStringsInMatch:(I)V\n-   #46 = Methodref          #171.#211     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxLiteralLength:()I\n-   #47 = Class              #212          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-   #48 = Methodref          #47.#213      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.\"<init>\":(II)V\n-   #49 = Class              #214          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-   #50 = Methodref          #49.#215      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.\"<init>\":([BII)V\n-   #51 = Methodref          #171.#216     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxBackReferenceLength:()I\n-   #52 = Methodref          #190.#217     // java/lang/Math.max:(II)I\n-   #53 = Methodref          #171.#218     // org/apache/commons/compress/compressors/lz77support/Parameters.getNiceBackReferenceLength:()I\n-   #54 = Methodref          #171.#219     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxCandidates:()I\n-   #55 = Class              #220          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n-   #56 = Methodref          #55.#165      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD.\"<init>\":()V\n-   #57 = Class              #221          // java/lang/Object\n-   #58 = Class              #222          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+   #13 = Fieldref           #1.#174       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.head:[I\n+   #14 = Methodref          #175.#176     // java/util/Arrays.fill:([II)V\n+   #15 = Fieldref           #1.#177       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.prev:[I\n+   #16 = Methodref          #1.#178       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+   #17 = Methodref          #1.#179       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.doCompress:([BII)V\n+   #18 = Fieldref           #1.#180       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.blockStart:I\n+   #19 = Fieldref           #1.#181       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.currentPosition:I\n+   #20 = Fieldref           #1.#182       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.lookahead:I\n+   #21 = Methodref          #1.#183       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushLiteralBlock:()V\n+   #22 = Fieldref           #1.#184       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n+   #23 = InterfaceMethodref #58.#185      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback.accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+   #24 = Class              #186          // java/lang/IllegalStateException\n+   #25 = String             #187          // The compressor has already started to accept data, can\\'t prefill anymore\n+   #26 = Methodref          #24.#188      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = Methodref          #189.#190     // java/lang/Math.min:(II)I\n+   #28 = Methodref          #191.#192     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #29 = Methodref          #1.#193       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialize:()V\n+   #30 = Methodref          #1.#194       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertString:(I)I\n+   #31 = Fieldref           #1.#195       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.missedInserts:I\n+   #32 = Methodref          #1.#196       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.slide:()V\n+   #33 = Fieldref           #1.#197       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialized:Z\n+   #34 = Methodref          #170.#198     // org/apache/commons/compress/compressors/lz77support/Parameters.getMinBackReferenceLength:()I\n+   #35 = Methodref          #1.#199       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:()V\n+   #36 = Fieldref           #1.#200       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertHash:I\n+   #37 = Methodref          #1.#201       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.nextHash:(IB)I\n+   #38 = Methodref          #170.#202     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatching:()Z\n+   #39 = Methodref          #170.#203     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatchingThreshold:()I\n+   #40 = Methodref          #1.#204       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.catchUpMissedInserts:()V\n+   #41 = Methodref          #170.#205     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxOffset:()I\n+   #42 = Methodref          #1.#206       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatch:(I)I\n+   #43 = Methodref          #1.#207       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatchForNextPosition:(I)I\n+   #44 = Methodref          #1.#208       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushBackReference:(I)V\n+   #45 = Methodref          #1.#209       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertStringsInMatch:(I)V\n+   #46 = Methodref          #170.#210     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxLiteralLength:()I\n+   #47 = Class              #211          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+   #48 = Methodref          #47.#212      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.\"<init>\":(II)V\n+   #49 = Class              #213          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #50 = Methodref          #49.#214      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.\"<init>\":([BII)V\n+   #51 = Methodref          #170.#215     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxBackReferenceLength:()I\n+   #52 = Methodref          #189.#216     // java/lang/Math.max:(II)I\n+   #53 = Methodref          #170.#217     // org/apache/commons/compress/compressors/lz77support/Parameters.getNiceBackReferenceLength:()I\n+   #54 = Methodref          #170.#218     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxCandidates:()I\n+   #55 = Class              #219          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n+   #56 = Methodref          #55.#164      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD.\"<init>\":()V\n+   #57 = Class              #220          // java/lang/Object\n+   #58 = Class              #221          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n    #59 = Utf8               Callback\n    #60 = Utf8               InnerClasses\n    #61 = Utf8               EOD\n    #62 = Utf8               BackReference\n    #63 = Utf8               LiteralBlock\n-   #64 = Class              #223          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+   #64 = Class              #222          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n    #65 = Utf8               Block\n    #66 = Utf8               THE_EOD\n    #67 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n    #68 = Utf8               NUMBER_OF_BYTES_IN_HASH\n    #69 = Utf8               I\n    #70 = Utf8               ConstantValue\n    #71 = Integer            3\n@@ -112,15 +112,15 @@\n   #102 = Utf8               this\n   #103 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n   #104 = Utf8               wSize\n   #105 = Utf8               compress\n   #106 = Utf8               ([B)V\n   #107 = Utf8               data\n   #108 = Utf8               Exceptions\n-  #109 = Class              #224          // java/io/IOException\n+  #109 = Class              #223          // java/io/IOException\n   #110 = Utf8               ([BII)V\n   #111 = Utf8               off\n   #112 = Utf8               len\n   #113 = Utf8               StackMapTable\n   #114 = Utf8               finish\n   #115 = Utf8               ()V\n   #116 = Utf8               prefill\n@@ -133,138 +133,137 @@\n   #123 = Utf8               B\n   #124 = Utf8               nextVal\n   #125 = Utf8               doCompress\n   #126 = Utf8               spaceLeft\n   #127 = Utf8               slide\n   #128 = Utf8               h\n   #129 = Utf8               p\n-  #130 = Class              #164          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #131 = Class              #81           // \"[I\"\n-  #132 = Utf8               initialize\n-  #133 = Utf8               matchLength\n-  #134 = Utf8               hashHead\n-  #135 = Utf8               minMatch\n-  #136 = Utf8               lazy\n-  #137 = Utf8               lazyThreshold\n-  #138 = Utf8               insertString\n-  #139 = Utf8               (I)I\n-  #140 = Utf8               pos\n-  #141 = Utf8               longestMatchForNextPosition\n-  #142 = Utf8               prevMatchLength\n-  #143 = Utf8               prevMatchStart\n-  #144 = Utf8               prevInsertHash\n-  #145 = Utf8               prevHashHead\n-  #146 = Utf8               insertStringsInMatch\n-  #147 = Utf8               (I)V\n-  #148 = Utf8               catchUpMissedInserts\n-  #149 = Utf8               flushBackReference\n-  #150 = Utf8               flushLiteralBlock\n-  #151 = Utf8               longestMatch\n-  #152 = Utf8               currentLength\n-  #153 = Utf8               candidates\n-  #154 = Utf8               matchHead\n-  #155 = Utf8               minLength\n-  #156 = Utf8               longestMatchLength\n-  #157 = Utf8               maxPossibleLength\n-  #158 = Utf8               minIndex\n-  #159 = Utf8               niceBackReferenceLength\n-  #160 = Utf8               maxCandidates\n-  #161 = Utf8               <clinit>\n-  #162 = Utf8               SourceFile\n-  #163 = Utf8               LZ77Compressor.java\n-  #164 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #165 = NameAndType        #97:#115      // \"<init>\":()V\n-  #166 = NameAndType        #90:#69       // matchStart:I\n-  #167 = Class              #225          // java/util/Objects\n-  #168 = NameAndType        #226:#227     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #169 = NameAndType        #74:#75       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #170 = NameAndType        #76:#77       // callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-  #171 = Class              #228          // org/apache/commons/compress/compressors/lz77support/Parameters\n-  #172 = NameAndType        #229:#230     // getWindowSize:()I\n-  #173 = NameAndType        #78:#79       // window:[B\n-  #174 = NameAndType        #83:#69       // wMask:I\n-  #175 = NameAndType        #80:#81       // head:[I\n-  #176 = Class              #231          // java/util/Arrays\n-  #177 = NameAndType        #232:#233     // fill:([II)V\n-  #178 = NameAndType        #82:#81       // prev:[I\n-  #179 = NameAndType        #105:#110     // compress:([BII)V\n-  #180 = NameAndType        #125:#110     // doCompress:([BII)V\n-  #181 = NameAndType        #89:#69       // blockStart:I\n-  #182 = NameAndType        #86:#69       // currentPosition:I\n-  #183 = NameAndType        #87:#69       // lookahead:I\n-  #184 = NameAndType        #150:#115     // flushLiteralBlock:()V\n-  #185 = NameAndType        #66:#67       // THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n-  #186 = NameAndType        #234:#235     // accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #187 = Utf8               java/lang/IllegalStateException\n-  #188 = Utf8               The compressor has already started to accept data, can\\'t prefill anymore\n-  #189 = NameAndType        #97:#236      // \"<init>\":(Ljava/lang/String;)V\n-  #190 = Class              #237          // java/lang/Math\n-  #191 = NameAndType        #238:#239     // min:(II)I\n-  #192 = Class              #240          // java/lang/System\n-  #193 = NameAndType        #241:#242     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #194 = NameAndType        #132:#115     // initialize:()V\n-  #195 = NameAndType        #138:#139     // insertString:(I)I\n-  #196 = NameAndType        #91:#69       // missedInserts:I\n-  #197 = NameAndType        #127:#115     // slide:()V\n-  #198 = NameAndType        #84:#85       // initialized:Z\n-  #199 = NameAndType        #243:#230     // getMinBackReferenceLength:()I\n-  #200 = NameAndType        #105:#115     // compress:()V\n-  #201 = NameAndType        #88:#69       // insertHash:I\n-  #202 = NameAndType        #119:#120     // nextHash:(IB)I\n-  #203 = NameAndType        #244:#245     // getLazyMatching:()Z\n-  #204 = NameAndType        #246:#230     // getLazyMatchingThreshold:()I\n-  #205 = NameAndType        #148:#115     // catchUpMissedInserts:()V\n-  #206 = NameAndType        #247:#230     // getMaxOffset:()I\n-  #207 = NameAndType        #151:#139     // longestMatch:(I)I\n-  #208 = NameAndType        #141:#139     // longestMatchForNextPosition:(I)I\n-  #209 = NameAndType        #149:#147     // flushBackReference:(I)V\n-  #210 = NameAndType        #146:#147     // insertStringsInMatch:(I)V\n-  #211 = NameAndType        #248:#230     // getMaxLiteralLength:()I\n-  #212 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #213 = NameAndType        #97:#249      // \"<init>\":(II)V\n-  #214 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #215 = NameAndType        #97:#110      // \"<init>\":([BII)V\n-  #216 = NameAndType        #250:#230     // getMaxBackReferenceLength:()I\n-  #217 = NameAndType        #251:#239     // max:(II)I\n-  #218 = NameAndType        #252:#230     // getNiceBackReferenceLength:()I\n-  #219 = NameAndType        #253:#230     // getMaxCandidates:()I\n-  #220 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n-  #221 = Utf8               java/lang/Object\n-  #222 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n-  #223 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n-  #224 = Utf8               java/io/IOException\n-  #225 = Utf8               java/util/Objects\n-  #226 = Utf8               requireNonNull\n-  #227 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #228 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n-  #229 = Utf8               getWindowSize\n-  #230 = Utf8               ()I\n-  #231 = Utf8               java/util/Arrays\n-  #232 = Utf8               fill\n-  #233 = Utf8               ([II)V\n-  #234 = Utf8               accept\n-  #235 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #236 = Utf8               (Ljava/lang/String;)V\n-  #237 = Utf8               java/lang/Math\n-  #238 = Utf8               min\n-  #239 = Utf8               (II)I\n-  #240 = Utf8               java/lang/System\n-  #241 = Utf8               arraycopy\n-  #242 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #243 = Utf8               getMinBackReferenceLength\n-  #244 = Utf8               getLazyMatching\n-  #245 = Utf8               ()Z\n-  #246 = Utf8               getLazyMatchingThreshold\n-  #247 = Utf8               getMaxOffset\n-  #248 = Utf8               getMaxLiteralLength\n-  #249 = Utf8               (II)V\n-  #250 = Utf8               getMaxBackReferenceLength\n-  #251 = Utf8               max\n-  #252 = Utf8               getNiceBackReferenceLength\n-  #253 = Utf8               getMaxCandidates\n+  #130 = Class              #81           // \"[I\"\n+  #131 = Utf8               initialize\n+  #132 = Utf8               matchLength\n+  #133 = Utf8               hashHead\n+  #134 = Utf8               minMatch\n+  #135 = Utf8               lazy\n+  #136 = Utf8               lazyThreshold\n+  #137 = Utf8               insertString\n+  #138 = Utf8               (I)I\n+  #139 = Utf8               pos\n+  #140 = Utf8               longestMatchForNextPosition\n+  #141 = Utf8               prevMatchLength\n+  #142 = Utf8               prevMatchStart\n+  #143 = Utf8               prevInsertHash\n+  #144 = Utf8               prevHashHead\n+  #145 = Utf8               insertStringsInMatch\n+  #146 = Utf8               (I)V\n+  #147 = Utf8               catchUpMissedInserts\n+  #148 = Utf8               flushBackReference\n+  #149 = Utf8               flushLiteralBlock\n+  #150 = Utf8               longestMatch\n+  #151 = Utf8               currentLength\n+  #152 = Utf8               candidates\n+  #153 = Utf8               matchHead\n+  #154 = Utf8               minLength\n+  #155 = Utf8               longestMatchLength\n+  #156 = Utf8               maxPossibleLength\n+  #157 = Utf8               minIndex\n+  #158 = Utf8               niceBackReferenceLength\n+  #159 = Utf8               maxCandidates\n+  #160 = Utf8               <clinit>\n+  #161 = Utf8               SourceFile\n+  #162 = Utf8               LZ77Compressor.java\n+  #163 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  #164 = NameAndType        #97:#115      // \"<init>\":()V\n+  #165 = NameAndType        #90:#69       // matchStart:I\n+  #166 = Class              #224          // java/util/Objects\n+  #167 = NameAndType        #225:#226     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #168 = NameAndType        #74:#75       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+  #169 = NameAndType        #76:#77       // callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+  #170 = Class              #227          // org/apache/commons/compress/compressors/lz77support/Parameters\n+  #171 = NameAndType        #228:#229     // getWindowSize:()I\n+  #172 = NameAndType        #78:#79       // window:[B\n+  #173 = NameAndType        #83:#69       // wMask:I\n+  #174 = NameAndType        #80:#81       // head:[I\n+  #175 = Class              #230          // java/util/Arrays\n+  #176 = NameAndType        #231:#232     // fill:([II)V\n+  #177 = NameAndType        #82:#81       // prev:[I\n+  #178 = NameAndType        #105:#110     // compress:([BII)V\n+  #179 = NameAndType        #125:#110     // doCompress:([BII)V\n+  #180 = NameAndType        #89:#69       // blockStart:I\n+  #181 = NameAndType        #86:#69       // currentPosition:I\n+  #182 = NameAndType        #87:#69       // lookahead:I\n+  #183 = NameAndType        #149:#115     // flushLiteralBlock:()V\n+  #184 = NameAndType        #66:#67       // THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n+  #185 = NameAndType        #233:#234     // accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #186 = Utf8               java/lang/IllegalStateException\n+  #187 = Utf8               The compressor has already started to accept data, can\\'t prefill anymore\n+  #188 = NameAndType        #97:#235      // \"<init>\":(Ljava/lang/String;)V\n+  #189 = Class              #236          // java/lang/Math\n+  #190 = NameAndType        #237:#238     // min:(II)I\n+  #191 = Class              #239          // java/lang/System\n+  #192 = NameAndType        #240:#241     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #193 = NameAndType        #131:#115     // initialize:()V\n+  #194 = NameAndType        #137:#138     // insertString:(I)I\n+  #195 = NameAndType        #91:#69       // missedInserts:I\n+  #196 = NameAndType        #127:#115     // slide:()V\n+  #197 = NameAndType        #84:#85       // initialized:Z\n+  #198 = NameAndType        #242:#229     // getMinBackReferenceLength:()I\n+  #199 = NameAndType        #105:#115     // compress:()V\n+  #200 = NameAndType        #88:#69       // insertHash:I\n+  #201 = NameAndType        #119:#120     // nextHash:(IB)I\n+  #202 = NameAndType        #243:#244     // getLazyMatching:()Z\n+  #203 = NameAndType        #245:#229     // getLazyMatchingThreshold:()I\n+  #204 = NameAndType        #147:#115     // catchUpMissedInserts:()V\n+  #205 = NameAndType        #246:#229     // getMaxOffset:()I\n+  #206 = NameAndType        #150:#138     // longestMatch:(I)I\n+  #207 = NameAndType        #140:#138     // longestMatchForNextPosition:(I)I\n+  #208 = NameAndType        #148:#146     // flushBackReference:(I)V\n+  #209 = NameAndType        #145:#146     // insertStringsInMatch:(I)V\n+  #210 = NameAndType        #247:#229     // getMaxLiteralLength:()I\n+  #211 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #212 = NameAndType        #97:#248      // \"<init>\":(II)V\n+  #213 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+  #214 = NameAndType        #97:#110      // \"<init>\":([BII)V\n+  #215 = NameAndType        #249:#229     // getMaxBackReferenceLength:()I\n+  #216 = NameAndType        #250:#238     // max:(II)I\n+  #217 = NameAndType        #251:#229     // getNiceBackReferenceLength:()I\n+  #218 = NameAndType        #252:#229     // getMaxCandidates:()I\n+  #219 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n+  #220 = Utf8               java/lang/Object\n+  #221 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #222 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+  #223 = Utf8               java/io/IOException\n+  #224 = Utf8               java/util/Objects\n+  #225 = Utf8               requireNonNull\n+  #226 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #227 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+  #228 = Utf8               getWindowSize\n+  #229 = Utf8               ()I\n+  #230 = Utf8               java/util/Arrays\n+  #231 = Utf8               fill\n+  #232 = Utf8               ([II)V\n+  #233 = Utf8               accept\n+  #234 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #235 = Utf8               (Ljava/lang/String;)V\n+  #236 = Utf8               java/lang/Math\n+  #237 = Utf8               min\n+  #238 = Utf8               (II)I\n+  #239 = Utf8               java/lang/System\n+  #240 = Utf8               arraycopy\n+  #241 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #242 = Utf8               getMinBackReferenceLength\n+  #243 = Utf8               getLazyMatching\n+  #244 = Utf8               ()Z\n+  #245 = Utf8               getLazyMatchingThreshold\n+  #246 = Utf8               getMaxOffset\n+  #247 = Utf8               getMaxLiteralLength\n+  #248 = Utf8               (II)V\n+  #249 = Utf8               getMaxBackReferenceLength\n+  #250 = Utf8               max\n+  #251 = Utf8               getNiceBackReferenceLength\n+  #252 = Utf8               getMaxCandidates\n {\n   private static final org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block THE_EOD;\n     descriptor: Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   static final int NUMBER_OF_BYTES_IN_HASH = 3;\n     descriptor: I\n"}]}
