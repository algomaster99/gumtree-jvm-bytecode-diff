{"diffoscope-json-version": 1, "source1": "first/FailableIntUnaryOperator.class", "source2": "second/FailableIntUnaryOperator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,197 +1,197 @@\n-  SHA-256 checksum bcd37830144a99063afaccf3ef797b414c526c987dffce1f3d27279310cbbc76\n+  SHA-256 checksum e8cfe6cca096c96275d5a15897836186c47d44ad3ce330833995d399716e7d8e\n   Compiled from \"FailableIntUnaryOperator.java\"\n public interface org.apache.commons.lang3.function.FailableIntUnaryOperator<E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/lang3/function/FailableIntUnaryOperator\n-  super_class: #9                         // java/lang/Object\n+  this_class: #6                          // org/apache/commons/lang3/function/FailableIntUnaryOperator\n+  super_class: #25                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 10, attributes: 4\n Constant pool:\n-   #1 = InvokeDynamic      #0:#51         // #0:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-   #2 = Fieldref           #8.#52         // org/apache/commons/lang3/function/FailableIntUnaryOperator.NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-   #3 = Methodref          #53.#54        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #4 = InvokeDynamic      #1:#56         // #1:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-   #5 = InvokeDynamic      #2:#56         // #2:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-   #6 = InterfaceMethodref #8.#58         // org/apache/commons/lang3/function/FailableIntUnaryOperator.applyAsInt:(I)I\n-   #7 = InvokeDynamic      #3:#51         // #3:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-   #8 = Class              #60            // org/apache/commons/lang3/function/FailableIntUnaryOperator\n-   #9 = Class              #61            // java/lang/Object\n-  #10 = Utf8               NOP\n-  #11 = Utf8               Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #12 = Utf8               identity\n-  #13 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               Signature\n-  #17 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n-  #18 = Utf8               nop\n-  #19 = Utf8               andThen\n-  #20 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               after\n-  #24 = Utf8               LocalVariableTypeTable\n-  #25 = Utf8               Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n-  #26 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n-  #27 = Utf8               applyAsInt\n-  #28 = Utf8               (I)I\n-  #29 = Utf8               Exceptions\n-  #30 = Class              #62            // java/lang/Throwable\n-  #31 = Utf8               (I)I^TE;\n-  #32 = Utf8               compose\n-  #33 = Utf8               before\n-  #34 = Utf8               lambda$compose$3\n-  #35 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #36 = Utf8               v\n-  #37 = Utf8               I\n-  #38 = Utf8               lambda$andThen$2\n-  #39 = Utf8               t\n-  #40 = Utf8               lambda$identity$1\n-  #41 = Utf8               lambda$static$0\n-  #42 = Utf8               <clinit>\n-  #43 = Utf8               ()V\n-  #44 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               FailableIntUnaryOperator.java\n-  #47 = Utf8               BootstrapMethods\n-  #48 = MethodHandle       6:#63          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #49 = MethodType         #28            //  (I)I\n-  #50 = MethodHandle       6:#64          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n-  #51 = NameAndType        #27:#13        // applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #52 = NameAndType        #10:#11        // NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #53 = Class              #65            // java/util/Objects\n-  #54 = NameAndType        #66:#67        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #55 = MethodHandle       7:#68          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #56 = NameAndType        #27:#69        // applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #57 = MethodHandle       7:#70          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #58 = NameAndType        #27:#28        // applyAsInt:(I)I\n-  #59 = MethodHandle       6:#71          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n-  #60 = Utf8               org/apache/commons/lang3/function/FailableIntUnaryOperator\n-  #61 = Utf8               java/lang/Object\n-  #62 = Utf8               java/lang/Throwable\n-  #63 = Methodref          #72.#73        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #64 = InterfaceMethodref #8.#74         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n-  #65 = Utf8               java/util/Objects\n-  #66 = Utf8               requireNonNull\n-  #67 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #68 = InterfaceMethodref #8.#75         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #69 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-  #70 = InterfaceMethodref #8.#76         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #71 = InterfaceMethodref #8.#77         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n-  #72 = Class              #78            // java/lang/invoke/LambdaMetafactory\n-  #73 = NameAndType        #79:#83        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #74 = NameAndType        #40:#28        // lambda$identity$1:(I)I\n-  #75 = NameAndType        #38:#35        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #76 = NameAndType        #34:#35        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-  #77 = NameAndType        #41:#28        // lambda$static$0:(I)I\n-  #78 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #79 = Utf8               metafactory\n-  #80 = Class              #85            // java/lang/invoke/MethodHandles$Lookup\n-  #81 = Utf8               Lookup\n-  #82 = Utf8               InnerClasses\n-  #83 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #84 = Class              #86            // java/lang/invoke/MethodHandles\n-  #85 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #86 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = InvokeDynamic      #0:#2          // #0:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+   #2 = NameAndType        #3:#4          // applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+   #3 = Utf8               applyAsInt\n+   #4 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+   #5 = Fieldref           #6.#7          // org/apache/commons/lang3/function/FailableIntUnaryOperator.NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+   #6 = Class              #8             // org/apache/commons/lang3/function/FailableIntUnaryOperator\n+   #7 = NameAndType        #9:#10         // NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+   #8 = Utf8               org/apache/commons/lang3/function/FailableIntUnaryOperator\n+   #9 = Utf8               NOP\n+  #10 = Utf8               Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #11 = Methodref          #12.#13        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #12 = Class              #14            // java/util/Objects\n+  #13 = NameAndType        #15:#16        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #14 = Utf8               java/util/Objects\n+  #15 = Utf8               requireNonNull\n+  #16 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #17 = InvokeDynamic      #1:#18         // #1:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #18 = NameAndType        #3:#19         // applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #19 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #20 = InvokeDynamic      #2:#18         // #2:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #21 = InterfaceMethodref #6.#22         // org/apache/commons/lang3/function/FailableIntUnaryOperator.applyAsInt:(I)I\n+  #22 = NameAndType        #3:#23         // applyAsInt:(I)I\n+  #23 = Utf8               (I)I\n+  #24 = InvokeDynamic      #3:#2          // #3:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #25 = Class              #26            // java/lang/Object\n+  #26 = Utf8               java/lang/Object\n+  #27 = Utf8               identity\n+  #28 = Utf8               Code\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               Signature\n+  #31 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+  #32 = Utf8               nop\n+  #33 = Utf8               andThen\n+  #34 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+  #35 = Utf8               LocalVariableTable\n+  #36 = Utf8               this\n+  #37 = Utf8               after\n+  #38 = Utf8               LocalVariableTypeTable\n+  #39 = Utf8               Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+  #40 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+  #41 = Utf8               Exceptions\n+  #42 = Class              #43            // java/lang/Throwable\n+  #43 = Utf8               java/lang/Throwable\n+  #44 = Utf8               (I)I^TE;\n+  #45 = Utf8               compose\n+  #46 = Utf8               before\n+  #47 = Utf8               lambda$compose$3\n+  #48 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #49 = Utf8               v\n+  #50 = Utf8               I\n+  #51 = Utf8               lambda$andThen$2\n+  #52 = Utf8               t\n+  #53 = Utf8               lambda$identity$1\n+  #54 = Utf8               lambda$static$0\n+  #55 = Utf8               <clinit>\n+  #56 = Utf8               ()V\n+  #57 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               FailableIntUnaryOperator.java\n+  #60 = Utf8               BootstrapMethods\n+  #61 = MethodHandle       6:#62          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #62 = Methodref          #63.#64        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #63 = Class              #65            // java/lang/invoke/LambdaMetafactory\n+  #64 = NameAndType        #66:#67        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #65 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #66 = Utf8               metafactory\n+  #67 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #68 = MethodType         #23            //  (I)I\n+  #69 = MethodHandle       6:#70          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n+  #70 = InterfaceMethodref #6.#71         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n+  #71 = NameAndType        #53:#23        // lambda$identity$1:(I)I\n+  #72 = MethodHandle       7:#73          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #73 = InterfaceMethodref #6.#74         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #74 = NameAndType        #51:#48        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #75 = MethodHandle       7:#76          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #76 = InterfaceMethodref #6.#77         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #77 = NameAndType        #47:#48        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+  #78 = MethodHandle       6:#79          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n+  #79 = InterfaceMethodref #6.#80         // org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n+  #80 = NameAndType        #54:#23        // lambda$static$0:(I)I\n+  #81 = Utf8               InnerClasses\n+  #82 = Class              #83            // java/lang/invoke/MethodHandles$Lookup\n+  #83 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #84 = Class              #85            // java/lang/invoke/MethodHandles\n+  #85 = Utf8               java/lang/invoke/MethodHandles\n+  #86 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableIntUnaryOperator NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableIntUnaryOperator<E> identity();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokedynamic #1,  0              // InvokeDynamic #0:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n          5: areturn\n       LineNumberTable:\n         line 42: 0\n-    Signature: #17                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+    Signature: #31                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n \n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableIntUnaryOperator<E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+         0: getstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n          3: areturn\n       LineNumberTable:\n         line 52: 0\n-    Signature: #17                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+    Signature: #31                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n \n   public default org.apache.commons.lang3.function.FailableIntUnaryOperator<E> andThen(org.apache.commons.lang3.function.FailableIntUnaryOperator<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #4,  0              // InvokeDynamic #1:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+         7: invokedynamic #17,  0             // InvokeDynamic #1:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n         12: areturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n             0      13     1 after   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n             0      13     1 after   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n-    Signature: #26                          // (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+    Signature: #40                          // (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n \n   public abstract int applyAsInt(int) throws E;\n     descriptor: (I)I\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #31                          // (I)I^TE;\n+    Signature: #44                          // (I)I^TE;\n \n   public default org.apache.commons.lang3.function.FailableIntUnaryOperator<E> compose(org.apache.commons.lang3.function.FailableIntUnaryOperator<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #5,  0              // InvokeDynamic #2:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+         7: invokedynamic #20,  0             // InvokeDynamic #2:applyAsInt:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n         12: areturn\n       LineNumberTable:\n         line 86: 0\n         line 87: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n             0      13     1 before   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n             0      13     1 before   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n-    Signature: #26                          // (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n+    Signature: #40                          // (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;)Lorg/apache/commons/lang3/function/FailableIntUnaryOperator<TE;>;\n \n   private int lambda$compose$3(org.apache.commons.lang3.function.FailableIntUnaryOperator, int) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokeinterface #6,  2            // InterfaceMethod applyAsInt:(I)I\n-         8: invokeinterface #6,  2            // InterfaceMethod applyAsInt:(I)I\n+         3: invokeinterface #21,  2           // InterfaceMethod applyAsInt:(I)I\n+         8: invokeinterface #21,  2           // InterfaceMethod applyAsInt:(I)I\n         13: ireturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n             0      14     1 before   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n@@ -206,16 +206,16 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n          1: aload_0\n          2: iload_2\n-         3: invokeinterface #6,  2            // InterfaceMethod applyAsInt:(I)I\n-         8: invokeinterface #6,  2            // InterfaceMethod applyAsInt:(I)I\n+         3: invokeinterface #21,  2           // InterfaceMethod applyAsInt:(I)I\n+         8: invokeinterface #21,  2           // InterfaceMethod applyAsInt:(I)I\n         13: ireturn\n       LineNumberTable:\n         line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n             0      14     1 after   Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n@@ -257,38 +257,38 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #7,  0              // InvokeDynamic #3:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n-         5: putstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+         0: invokedynamic #24,  0             // InvokeDynamic #3:applyAsInt:()Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n+         5: putstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;\n          8: return\n       LineNumberTable:\n         line 33: 0\n }\n-Signature: #44                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #57                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableIntUnaryOperator.java\"\n-InnerClasses:\n-  public static final #81= #80 of #84;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #61 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (I)I\n-      #50 REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n-      #49 (I)I\n-  1: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #68 (I)I\n+      #69 REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$identity$1:(I)I\n+      #68 (I)I\n+  1: #61 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (I)I\n-      #55 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-      #49 (I)I\n-  2: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #68 (I)I\n+      #72 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+      #68 (I)I\n+  2: #61 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (I)I\n-      #57 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n-      #49 (I)I\n-  3: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #68 (I)I\n+      #75 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableIntUnaryOperator;I)I\n+      #68 (I)I\n+  3: #61 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (I)I\n-      #59 REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n-      #49 (I)I\n+      #68 (I)I\n+      #78 REF_invokeStatic org/apache/commons/lang3/function/FailableIntUnaryOperator.lambda$static$0:(I)I\n+      #68 (I)I\n+InnerClasses:\n+  public static final #86= #82 of #84;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
