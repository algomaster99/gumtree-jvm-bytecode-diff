{"diffoscope-json-version": 1, "source1": "first/IMAP.class", "source2": "second/IMAP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,381 +1,381 @@\n-  SHA-256 checksum 11a78cc8fa536242bb96071f45e3a7d50145001297fb8d300f82fbbacbd3f504\n+  SHA-256 checksum da98f776f069dafc117ccd9e9801fa486480d5b9de5c9fb6c09dfcbe4cc065c1\n   Compiled from \"IMAP.java\"\n public class org.apache.commons.net.imap.IMAP extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/net/imap/IMAP\n-  super_class: #75                        // org/apache/commons/net/SocketClient\n+  this_class: #54                         // org/apache/commons/net/imap/IMAP\n+  super_class: #51                        // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 10, methods: 23, attributes: 3\n Constant pool:\n-    #1 = Methodref          #55.#188      // java/lang/String.isEmpty:()Z\n-    #2 = String             #189          // \\\"\\\"\n-    #3 = Methodref          #55.#190      // java/lang/String.length:()I\n-    #4 = String             #191          // \\\"\n-    #5 = Methodref          #55.#192      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #6 = Methodref          #55.#193      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-    #7 = String             #194          //\n-    #8 = Methodref          #55.#195      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-    #9 = Class              #196          // java/lang/StringBuilder\n-   #10 = Methodref          #9.#197       // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = Methodref          #9.#198       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #12 = String             #199          // ([\\\\\\\\\\\"])\n-   #13 = String             #200          // \\\\\\\\$1\n-   #14 = Methodref          #55.#201      // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #9.#202       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #75.#197      // org/apache/commons/net/SocketClient.\"<init>\":()V\n-   #17 = Fieldref           #18.#203      // org/apache/commons/net/imap/IMAP.initialID:[C\n-   #18 = Class              #204          // org/apache/commons/net/imap/IMAP\n-   #19 = Methodref          #18.#205      // org/apache/commons/net/imap/IMAP.setDefaultPort:(I)V\n-   #20 = Fieldref           #91.#206      // org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-   #21 = Fieldref           #18.#207      // org/apache/commons/net/imap/IMAP.state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-   #22 = Fieldref           #18.#208      // org/apache/commons/net/imap/IMAP._reader:Ljava/io/BufferedReader;\n-   #23 = Fieldref           #18.#209      // org/apache/commons/net/imap/IMAP.__writer:Ljava/io/BufferedWriter;\n-   #24 = Class              #210          // java/util/ArrayList\n-   #25 = Methodref          #24.#197      // java/util/ArrayList.\"<init>\":()V\n-   #26 = Fieldref           #18.#211      // org/apache/commons/net/imap/IMAP.replyLines:Ljava/util/List;\n-   #27 = Methodref          #18.#212      // org/apache/commons/net/imap/IMAP.createCommandSupport:()V\n-   #28 = Methodref          #75.#213      // org/apache/commons/net/SocketClient._connectAction_:()V\n-   #29 = Class              #214          // org/apache/commons/net/io/CRLFLineReader\n-   #30 = Class              #215          // java/io/InputStreamReader\n-   #31 = Fieldref           #18.#216      // org/apache/commons/net/imap/IMAP._input_:Ljava/io/InputStream;\n-   #32 = String             #217          // ISO-8859-1\n-   #33 = Methodref          #30.#218      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #34 = Methodref          #29.#219      // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-   #35 = Class              #220          // java/io/BufferedWriter\n-   #36 = Class              #221          // java/io/OutputStreamWriter\n-   #37 = Fieldref           #18.#222      // org/apache/commons/net/imap/IMAP._output_:Ljava/io/OutputStream;\n-   #38 = Methodref          #36.#223      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #39 = Methodref          #35.#224      // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #40 = Methodref          #18.#225      // org/apache/commons/net/imap/IMAP.getSoTimeout:()I\n-   #41 = Fieldref           #18.#226      // org/apache/commons/net/imap/IMAP.connectTimeout:I\n-   #42 = Methodref          #18.#227      // org/apache/commons/net/imap/IMAP.setSoTimeout:(I)V\n-   #43 = Methodref          #18.#228      // org/apache/commons/net/imap/IMAP.getReply:(Z)V\n-   #44 = Fieldref           #91.#229      // org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-   #45 = Methodref          #18.#230      // org/apache/commons/net/imap/IMAP.setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-   #46 = Methodref          #75.#231      // org/apache/commons/net/SocketClient.disconnect:()V\n-   #47 = InterfaceMethodref #232.#233     // java/util/List.clear:()V\n-   #48 = Methodref          #18.#234      // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-   #49 = Methodref          #66.#235      // org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n-   #50 = Methodref          #18.#236      // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-   #51 = Methodref          #18.#237      // org/apache/commons/net/imap/IMAP.getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-   #52 = Methodref          #238.#239     // org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n-   #53 = Methodref          #18.#240      // org/apache/commons/net/imap/IMAP.getReplyString:()Ljava/lang/String;\n-   #54 = Methodref          #238.#241     // org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n-   #55 = Class              #242          // java/lang/String\n-   #56 = Methodref          #55.#243      // java/lang/String.\"<init>\":([C)V\n-   #57 = Methodref          #244.#245     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #58 = Class              #246          // java/io/EOFException\n-   #59 = String             #247          // Connection closed without indication.\n-   #60 = Methodref          #58.#248      // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n-   #61 = InterfaceMethodref #232.#249     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #62 = Methodref          #66.#250      // org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n-   #63 = Methodref          #66.#251      // org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n-   #64 = Fieldref           #18.#252      // org/apache/commons/net/imap/IMAP.chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-   #65 = InterfaceMethodref #94.#253      // org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n-   #66 = Class              #254          // org/apache/commons/net/imap/IMAPReply\n-   #67 = Methodref          #18.#241      // org/apache/commons/net/imap/IMAP.fireReplyReceived:(ILjava/lang/String;)V\n-   #68 = Methodref          #66.#255      // org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n-   #69 = Fieldref           #18.#256      // org/apache/commons/net/imap/IMAP.replyCode:I\n-   #70 = Methodref          #66.#257      // org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n-   #71 = Methodref          #9.#258       // java/lang/StringBuilder.\"<init>\":(I)V\n-   #72 = InterfaceMethodref #232.#259     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #73 = InterfaceMethodref #161.#260     // java/util/Iterator.hasNext:()Z\n-   #74 = InterfaceMethodref #161.#261     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #75 = Class              #262          // org/apache/commons/net/SocketClient\n-   #76 = String             #263          // \\r\\n\n-   #77 = Fieldref           #264.#265     // org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #78 = InterfaceMethodref #232.#266     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #79 = Class              #267          // \"[Ljava/lang/String;\"\n-   #80 = Methodref          #268.#269     // org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n-   #81 = Methodref          #18.#270      // org/apache/commons/net/imap/IMAP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #82 = Methodref          #18.#271      // org/apache/commons/net/imap/IMAP.generateCommandID:()Ljava/lang/String;\n-   #83 = Methodref          #18.#272      // org/apache/commons/net/imap/IMAP.sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-   #84 = Methodref          #9.#273       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #85 = Methodref          #35.#274      // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n-   #86 = Methodref          #35.#275      // java/io/BufferedWriter.flush:()V\n-   #87 = Methodref          #18.#276      // org/apache/commons/net/imap/IMAP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-   #88 = Methodref          #18.#277      // org/apache/commons/net/imap/IMAP.getReply:()V\n-   #89 = InvokeDynamic      #0:#282       // #0:chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-   #90 = Fieldref           #18.#283      // org/apache/commons/net/imap/IMAP.TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-   #91 = Class              #284          // org/apache/commons/net/imap/IMAP$IMAPState\n-   #92 = Utf8               IMAPState\n-   #93 = Utf8               InnerClasses\n-   #94 = Class              #285          // org/apache/commons/net/imap/IMAP$IMAPChunkListener\n-   #95 = Utf8               IMAPChunkListener\n-   #96 = Utf8               DEFAULT_PORT\n-   #97 = Utf8               I\n-   #98 = Utf8               ConstantValue\n-   #99 = Integer            143\n-  #100 = Utf8               __DEFAULT_ENCODING\n-  #101 = Utf8               Ljava/lang/String;\n-  #102 = Utf8               TRUE_CHUNK_LISTENER\n-  #103 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #104 = Utf8               state\n-  #105 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #106 = Utf8               __writer\n-  #107 = Utf8               Ljava/io/BufferedWriter;\n-  #108 = Utf8               _reader\n-  #109 = Utf8               Ljava/io/BufferedReader;\n-  #110 = Utf8               replyCode\n-  #111 = Utf8               replyLines\n-  #112 = Utf8               Ljava/util/List;\n-  #113 = Utf8               Signature\n-  #114 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #115 = Utf8               chunkListener\n-  #116 = Utf8               initialID\n-  #117 = Utf8               [C\n-  #118 = Utf8               quoteMailboxName\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Utf8               Code\n-  #121 = Utf8               LineNumberTable\n-  #122 = Utf8               LocalVariableTable\n-  #123 = Utf8               input\n-  #124 = Utf8               StackMapTable\n-  #125 = Utf8               <init>\n-  #126 = Utf8               ()V\n-  #127 = Utf8               this\n-  #128 = Utf8               Lorg/apache/commons/net/imap/IMAP;\n-  #129 = Utf8               _connectAction_\n-  #130 = Utf8               tmo\n-  #131 = Utf8               Exceptions\n-  #132 = Class              #286          // java/io/IOException\n-  #133 = Utf8               disconnect\n-  #134 = Utf8               doCommand\n-  #135 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n-  #136 = Utf8               command\n-  #137 = Utf8               Lorg/apache/commons/net/imap/IMAPCommand;\n-  #138 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n-  #139 = Utf8               args\n-  #140 = Utf8               fireReplyReceived\n-  #141 = Utf8               (ILjava/lang/String;)V\n-  #142 = Utf8               ignored\n-  #143 = Utf8               generateCommandID\n-  #144 = Utf8               ()Ljava/lang/String;\n-  #145 = Utf8               i\n-  #146 = Utf8               res\n-  #147 = Utf8               carry\n-  #148 = Utf8               Z\n-  #149 = Utf8               getReply\n-  #150 = Utf8               (Z)V\n+    #1 = Methodref          #2.#3         // java/lang/String.isEmpty:()Z\n+    #2 = Class              #4            // java/lang/String\n+    #3 = NameAndType        #5:#6         // isEmpty:()Z\n+    #4 = Utf8               java/lang/String\n+    #5 = Utf8               isEmpty\n+    #6 = Utf8               ()Z\n+    #7 = String             #8            // \\\"\\\"\n+    #8 = Utf8               \\\"\\\"\n+    #9 = Methodref          #2.#10        // java/lang/String.length:()I\n+   #10 = NameAndType        #11:#12       // length:()I\n+   #11 = Utf8               length\n+   #12 = Utf8               ()I\n+   #13 = String             #14           // \\\"\n+   #14 = Utf8               \\\"\n+   #15 = Methodref          #2.#16        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #16 = NameAndType        #17:#18       // startsWith:(Ljava/lang/String;)Z\n+   #17 = Utf8               startsWith\n+   #18 = Utf8               (Ljava/lang/String;)Z\n+   #19 = Methodref          #2.#20        // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #20 = NameAndType        #21:#18       // endsWith:(Ljava/lang/String;)Z\n+   #21 = Utf8               endsWith\n+   #22 = String             #23           //\n+   #23 = Utf8\n+   #24 = Methodref          #2.#25        // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #25 = NameAndType        #26:#27       // contains:(Ljava/lang/CharSequence;)Z\n+   #26 = Utf8               contains\n+   #27 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #28 = Class              #29           // java/lang/StringBuilder\n+   #29 = Utf8               java/lang/StringBuilder\n+   #30 = Methodref          #28.#31       // java/lang/StringBuilder.\"<init>\":()V\n+   #31 = NameAndType        #32:#33       // \"<init>\":()V\n+   #32 = Utf8               <init>\n+   #33 = Utf8               ()V\n+   #34 = Methodref          #28.#35       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #35 = NameAndType        #36:#37       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #36 = Utf8               append\n+   #37 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #38 = String             #39           // ([\\\\\\\\\\\"])\n+   #39 = Utf8               ([\\\\\\\\\\\"])\n+   #40 = String             #41           // \\\\\\\\$1\n+   #41 = Utf8               \\\\\\\\$1\n+   #42 = Methodref          #2.#43        // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #43 = NameAndType        #44:#45       // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #44 = Utf8               replaceAll\n+   #45 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #46 = Methodref          #28.#47       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #47 = NameAndType        #48:#49       // toString:()Ljava/lang/String;\n+   #48 = Utf8               toString\n+   #49 = Utf8               ()Ljava/lang/String;\n+   #50 = Methodref          #51.#31       // org/apache/commons/net/SocketClient.\"<init>\":()V\n+   #51 = Class              #52           // org/apache/commons/net/SocketClient\n+   #52 = Utf8               org/apache/commons/net/SocketClient\n+   #53 = Fieldref           #54.#55       // org/apache/commons/net/imap/IMAP.initialID:[C\n+   #54 = Class              #56           // org/apache/commons/net/imap/IMAP\n+   #55 = NameAndType        #57:#58       // initialID:[C\n+   #56 = Utf8               org/apache/commons/net/imap/IMAP\n+   #57 = Utf8               initialID\n+   #58 = Utf8               [C\n+   #59 = Methodref          #54.#60       // org/apache/commons/net/imap/IMAP.setDefaultPort:(I)V\n+   #60 = NameAndType        #61:#62       // setDefaultPort:(I)V\n+   #61 = Utf8               setDefaultPort\n+   #62 = Utf8               (I)V\n+   #63 = Fieldref           #64.#65       // org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #64 = Class              #66           // org/apache/commons/net/imap/IMAP$IMAPState\n+   #65 = NameAndType        #67:#68       // DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #66 = Utf8               org/apache/commons/net/imap/IMAP$IMAPState\n+   #67 = Utf8               DISCONNECTED_STATE\n+   #68 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #69 = Fieldref           #54.#70       // org/apache/commons/net/imap/IMAP.state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #70 = NameAndType        #71:#68       // state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #71 = Utf8               state\n+   #72 = Fieldref           #54.#73       // org/apache/commons/net/imap/IMAP._reader:Ljava/io/BufferedReader;\n+   #73 = NameAndType        #74:#75       // _reader:Ljava/io/BufferedReader;\n+   #74 = Utf8               _reader\n+   #75 = Utf8               Ljava/io/BufferedReader;\n+   #76 = Fieldref           #54.#77       // org/apache/commons/net/imap/IMAP.__writer:Ljava/io/BufferedWriter;\n+   #77 = NameAndType        #78:#79       // __writer:Ljava/io/BufferedWriter;\n+   #78 = Utf8               __writer\n+   #79 = Utf8               Ljava/io/BufferedWriter;\n+   #80 = Class              #81           // java/util/ArrayList\n+   #81 = Utf8               java/util/ArrayList\n+   #82 = Methodref          #80.#31       // java/util/ArrayList.\"<init>\":()V\n+   #83 = Fieldref           #54.#84       // org/apache/commons/net/imap/IMAP.replyLines:Ljava/util/List;\n+   #84 = NameAndType        #85:#86       // replyLines:Ljava/util/List;\n+   #85 = Utf8               replyLines\n+   #86 = Utf8               Ljava/util/List;\n+   #87 = Methodref          #54.#88       // org/apache/commons/net/imap/IMAP.createCommandSupport:()V\n+   #88 = NameAndType        #89:#33       // createCommandSupport:()V\n+   #89 = Utf8               createCommandSupport\n+   #90 = Methodref          #51.#91       // org/apache/commons/net/SocketClient._connectAction_:()V\n+   #91 = NameAndType        #92:#33       // _connectAction_:()V\n+   #92 = Utf8               _connectAction_\n+   #93 = Class              #94           // org/apache/commons/net/io/CRLFLineReader\n+   #94 = Utf8               org/apache/commons/net/io/CRLFLineReader\n+   #95 = Class              #96           // java/io/InputStreamReader\n+   #96 = Utf8               java/io/InputStreamReader\n+   #97 = Fieldref           #54.#98       // org/apache/commons/net/imap/IMAP._input_:Ljava/io/InputStream;\n+   #98 = NameAndType        #99:#100      // _input_:Ljava/io/InputStream;\n+   #99 = Utf8               _input_\n+  #100 = Utf8               Ljava/io/InputStream;\n+  #101 = String             #102          // ISO-8859-1\n+  #102 = Utf8               ISO-8859-1\n+  #103 = Methodref          #95.#104      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #104 = NameAndType        #32:#105      // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #105 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #106 = Methodref          #93.#107      // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+  #107 = NameAndType        #32:#108      // \"<init>\":(Ljava/io/Reader;)V\n+  #108 = Utf8               (Ljava/io/Reader;)V\n+  #109 = Class              #110          // java/io/BufferedWriter\n+  #110 = Utf8               java/io/BufferedWriter\n+  #111 = Class              #112          // java/io/OutputStreamWriter\n+  #112 = Utf8               java/io/OutputStreamWriter\n+  #113 = Fieldref           #54.#114      // org/apache/commons/net/imap/IMAP._output_:Ljava/io/OutputStream;\n+  #114 = NameAndType        #115:#116     // _output_:Ljava/io/OutputStream;\n+  #115 = Utf8               _output_\n+  #116 = Utf8               Ljava/io/OutputStream;\n+  #117 = Methodref          #111.#118     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #118 = NameAndType        #32:#119      // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #119 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #120 = Methodref          #109.#121     // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+  #121 = NameAndType        #32:#122      // \"<init>\":(Ljava/io/Writer;)V\n+  #122 = Utf8               (Ljava/io/Writer;)V\n+  #123 = Methodref          #54.#124      // org/apache/commons/net/imap/IMAP.getSoTimeout:()I\n+  #124 = NameAndType        #125:#12      // getSoTimeout:()I\n+  #125 = Utf8               getSoTimeout\n+  #126 = Fieldref           #54.#127      // org/apache/commons/net/imap/IMAP.connectTimeout:I\n+  #127 = NameAndType        #128:#129     // connectTimeout:I\n+  #128 = Utf8               connectTimeout\n+  #129 = Utf8               I\n+  #130 = Methodref          #54.#131      // org/apache/commons/net/imap/IMAP.setSoTimeout:(I)V\n+  #131 = NameAndType        #132:#62      // setSoTimeout:(I)V\n+  #132 = Utf8               setSoTimeout\n+  #133 = Methodref          #54.#134      // org/apache/commons/net/imap/IMAP.getReply:(Z)V\n+  #134 = NameAndType        #135:#136     // getReply:(Z)V\n+  #135 = Utf8               getReply\n+  #136 = Utf8               (Z)V\n+  #137 = Fieldref           #64.#138      // org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #138 = NameAndType        #139:#68      // NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #139 = Utf8               NOT_AUTH_STATE\n+  #140 = Methodref          #54.#141      // org/apache/commons/net/imap/IMAP.setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #141 = NameAndType        #142:#143     // setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #142 = Utf8               setState\n+  #143 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #144 = Methodref          #51.#145      // org/apache/commons/net/SocketClient.disconnect:()V\n+  #145 = NameAndType        #146:#33      // disconnect:()V\n+  #146 = Utf8               disconnect\n+  #147 = InterfaceMethodref #148.#149     // java/util/List.clear:()V\n+  #148 = Class              #150          // java/util/List\n+  #149 = NameAndType        #151:#33      // clear:()V\n+  #150 = Utf8               java/util/List\n   #151 = Utf8               clear\n-  #152 = Utf8               il\n-  #153 = Utf8               literalCount\n-  #154 = Utf8               isMultiLine\n-  #155 = Utf8               wantTag\n-  #156 = Utf8               line\n-  #157 = Utf8               getReplyString\n-  #158 = Utf8               s\n-  #159 = Utf8               buffer\n-  #160 = Utf8               Ljava/lang/StringBuilder;\n-  #161 = Class              #287          // java/util/Iterator\n-  #162 = Utf8               getReplyStrings\n-  #163 = Utf8               ()[Ljava/lang/String;\n-  #164 = Utf8               getState\n-  #165 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #166 = Utf8               sendCommand\n-  #167 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)I\n-  #168 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-  #169 = Utf8               (Ljava/lang/String;)I\n-  #170 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #171 = Utf8               sendCommandWithID\n-  #172 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-  #173 = Utf8               commandID\n-  #174 = Utf8               __commandBuffer\n-  #175 = Utf8               message\n-  #176 = Utf8               sendData\n-  #177 = Utf8               setChunkListener\n-  #178 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n-  #179 = Utf8               listener\n-  #180 = Utf8               setState\n-  #181 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-  #182 = Utf8               lambda$static$0\n-  #183 = Utf8               (Lorg/apache/commons/net/imap/IMAP;)Z\n-  #184 = Utf8               imap\n-  #185 = Utf8               <clinit>\n-  #186 = Utf8               SourceFile\n-  #187 = Utf8               IMAP.java\n-  #188 = NameAndType        #288:#289     // isEmpty:()Z\n-  #189 = Utf8               \\\"\\\"\n-  #190 = NameAndType        #290:#291     // length:()I\n-  #191 = Utf8               \\\"\n-  #192 = NameAndType        #292:#293     // startsWith:(Ljava/lang/String;)Z\n-  #193 = NameAndType        #294:#293     // endsWith:(Ljava/lang/String;)Z\n-  #194 = Utf8\n-  #195 = NameAndType        #295:#296     // contains:(Ljava/lang/CharSequence;)Z\n-  #196 = Utf8               java/lang/StringBuilder\n-  #197 = NameAndType        #125:#126     // \"<init>\":()V\n-  #198 = NameAndType        #297:#298     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #199 = Utf8               ([\\\\\\\\\\\"])\n-  #200 = Utf8               \\\\\\\\$1\n-  #201 = NameAndType        #299:#300     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #202 = NameAndType        #301:#144     // toString:()Ljava/lang/String;\n-  #203 = NameAndType        #116:#117     // initialID:[C\n-  #204 = Utf8               org/apache/commons/net/imap/IMAP\n-  #205 = NameAndType        #302:#303     // setDefaultPort:(I)V\n-  #206 = NameAndType        #304:#105     // DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #207 = NameAndType        #104:#105     // state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #208 = NameAndType        #108:#109     // _reader:Ljava/io/BufferedReader;\n-  #209 = NameAndType        #106:#107     // __writer:Ljava/io/BufferedWriter;\n-  #210 = Utf8               java/util/ArrayList\n-  #211 = NameAndType        #111:#112     // replyLines:Ljava/util/List;\n-  #212 = NameAndType        #305:#126     // createCommandSupport:()V\n-  #213 = NameAndType        #129:#126     // _connectAction_:()V\n-  #214 = Utf8               org/apache/commons/net/io/CRLFLineReader\n-  #215 = Utf8               java/io/InputStreamReader\n-  #216 = NameAndType        #306:#307     // _input_:Ljava/io/InputStream;\n-  #217 = Utf8               ISO-8859-1\n-  #218 = NameAndType        #125:#308     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #219 = NameAndType        #125:#309     // \"<init>\":(Ljava/io/Reader;)V\n-  #220 = Utf8               java/io/BufferedWriter\n-  #221 = Utf8               java/io/OutputStreamWriter\n-  #222 = NameAndType        #310:#311     // _output_:Ljava/io/OutputStream;\n-  #223 = NameAndType        #125:#312     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #224 = NameAndType        #125:#313     // \"<init>\":(Ljava/io/Writer;)V\n-  #225 = NameAndType        #314:#291     // getSoTimeout:()I\n-  #226 = NameAndType        #315:#97      // connectTimeout:I\n-  #227 = NameAndType        #316:#303     // setSoTimeout:(I)V\n-  #228 = NameAndType        #149:#150     // getReply:(Z)V\n-  #229 = NameAndType        #317:#105     // NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #230 = NameAndType        #180:#181     // setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-  #231 = NameAndType        #133:#126     // disconnect:()V\n-  #232 = Class              #318          // java/util/List\n-  #233 = NameAndType        #151:#126     // clear:()V\n-  #234 = NameAndType        #166:#167     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-  #235 = NameAndType        #319:#320     // isSuccess:(I)Z\n-  #236 = NameAndType        #166:#168     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-  #237 = NameAndType        #321:#322     // getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #238 = Class              #323          // org/apache/commons/net/ProtocolCommandSupport\n-  #239 = NameAndType        #324:#291     // getListenerCount:()I\n-  #240 = NameAndType        #157:#144     // getReplyString:()Ljava/lang/String;\n-  #241 = NameAndType        #140:#141     // fireReplyReceived:(ILjava/lang/String;)V\n-  #242 = Utf8               java/lang/String\n-  #243 = NameAndType        #125:#325     // \"<init>\":([C)V\n-  #244 = Class              #326          // java/io/BufferedReader\n-  #245 = NameAndType        #327:#144     // readLine:()Ljava/lang/String;\n-  #246 = Utf8               java/io/EOFException\n-  #247 = Utf8               Connection closed without indication.\n-  #248 = NameAndType        #125:#328     // \"<init>\":(Ljava/lang/String;)V\n-  #249 = NameAndType        #329:#330     // add:(Ljava/lang/Object;)Z\n-  #250 = NameAndType        #331:#293     // isUntagged:(Ljava/lang/String;)Z\n-  #251 = NameAndType        #153:#169     // literalCount:(Ljava/lang/String;)I\n-  #252 = NameAndType        #115:#103     // chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #253 = NameAndType        #332:#183     // chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n-  #254 = Utf8               org/apache/commons/net/imap/IMAPReply\n-  #255 = NameAndType        #333:#169     // getReplyCode:(Ljava/lang/String;)I\n-  #256 = NameAndType        #110:#97      // replyCode:I\n-  #257 = NameAndType        #334:#169     // getUntaggedReplyCode:(Ljava/lang/String;)I\n-  #258 = NameAndType        #125:#303     // \"<init>\":(I)V\n-  #259 = NameAndType        #335:#336     // iterator:()Ljava/util/Iterator;\n-  #260 = NameAndType        #337:#289     // hasNext:()Z\n-  #261 = NameAndType        #338:#339     // next:()Ljava/lang/Object;\n-  #262 = Utf8               org/apache/commons/net/SocketClient\n-  #263 = Utf8               \\r\\n\n-  #264 = Class              #340          // org/apache/commons/net/util/NetConstants\n-  #265 = NameAndType        #341:#267     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #266 = NameAndType        #342:#343     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #267 = Utf8               [Ljava/lang/String;\n-  #268 = Class              #344          // org/apache/commons/net/imap/IMAPCommand\n-  #269 = NameAndType        #345:#144     // getIMAPCommand:()Ljava/lang/String;\n-  #270 = NameAndType        #166:#170     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-  #271 = NameAndType        #143:#144     // generateCommandID:()Ljava/lang/String;\n-  #272 = NameAndType        #171:#172     // sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-  #273 = NameAndType        #297:#346     // append:(C)Ljava/lang/StringBuilder;\n-  #274 = NameAndType        #347:#328     // write:(Ljava/lang/String;)V\n-  #275 = NameAndType        #348:#126     // flush:()V\n-  #276 = NameAndType        #349:#350     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-  #277 = NameAndType        #149:#126     // getReply:()V\n-  #278 = Utf8               BootstrapMethods\n-  #279 = MethodHandle       6:#351        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #280 = MethodType         #183          //  (Lorg/apache/commons/net/imap/IMAP;)Z\n-  #281 = MethodHandle       6:#352        // REF_invokeStatic org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n-  #282 = NameAndType        #332:#353     // chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #283 = NameAndType        #102:#103     // TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #284 = Utf8               org/apache/commons/net/imap/IMAP$IMAPState\n-  #285 = Utf8               org/apache/commons/net/imap/IMAP$IMAPChunkListener\n-  #286 = Utf8               java/io/IOException\n-  #287 = Utf8               java/util/Iterator\n-  #288 = Utf8               isEmpty\n-  #289 = Utf8               ()Z\n-  #290 = Utf8               length\n-  #291 = Utf8               ()I\n-  #292 = Utf8               startsWith\n-  #293 = Utf8               (Ljava/lang/String;)Z\n-  #294 = Utf8               endsWith\n-  #295 = Utf8               contains\n-  #296 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #297 = Utf8               append\n-  #298 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #299 = Utf8               replaceAll\n-  #300 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #301 = Utf8               toString\n-  #302 = Utf8               setDefaultPort\n-  #303 = Utf8               (I)V\n-  #304 = Utf8               DISCONNECTED_STATE\n-  #305 = Utf8               createCommandSupport\n-  #306 = Utf8               _input_\n-  #307 = Utf8               Ljava/io/InputStream;\n-  #308 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #309 = Utf8               (Ljava/io/Reader;)V\n-  #310 = Utf8               _output_\n-  #311 = Utf8               Ljava/io/OutputStream;\n-  #312 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #313 = Utf8               (Ljava/io/Writer;)V\n-  #314 = Utf8               getSoTimeout\n-  #315 = Utf8               connectTimeout\n-  #316 = Utf8               setSoTimeout\n-  #317 = Utf8               NOT_AUTH_STATE\n-  #318 = Utf8               java/util/List\n-  #319 = Utf8               isSuccess\n-  #320 = Utf8               (I)Z\n-  #321 = Utf8               getCommandSupport\n-  #322 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #323 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n-  #324 = Utf8               getListenerCount\n-  #325 = Utf8               ([C)V\n-  #326 = Utf8               java/io/BufferedReader\n-  #327 = Utf8               readLine\n-  #328 = Utf8               (Ljava/lang/String;)V\n-  #329 = Utf8               add\n-  #330 = Utf8               (Ljava/lang/Object;)Z\n-  #331 = Utf8               isUntagged\n-  #332 = Utf8               chunkReceived\n-  #333 = Utf8               getReplyCode\n-  #334 = Utf8               getUntaggedReplyCode\n-  #335 = Utf8               iterator\n-  #336 = Utf8               ()Ljava/util/Iterator;\n-  #337 = Utf8               hasNext\n-  #338 = Utf8               next\n-  #339 = Utf8               ()Ljava/lang/Object;\n-  #340 = Utf8               org/apache/commons/net/util/NetConstants\n-  #341 = Utf8               EMPTY_STRING_ARRAY\n-  #342 = Utf8               toArray\n-  #343 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #344 = Utf8               org/apache/commons/net/imap/IMAPCommand\n-  #345 = Utf8               getIMAPCommand\n-  #346 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #347 = Utf8               write\n-  #348 = Utf8               flush\n-  #349 = Utf8               fireCommandSent\n-  #350 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #351 = Methodref          #354.#355     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #352 = Methodref          #18.#356      // org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n-  #353 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #354 = Class              #357          // java/lang/invoke/LambdaMetafactory\n-  #355 = NameAndType        #358:#361     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #356 = NameAndType        #182:#183     // lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n-  #357 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #358 = Utf8               metafactory\n-  #359 = Class              #363          // java/lang/invoke/MethodHandles$Lookup\n-  #360 = Utf8               Lookup\n-  #361 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #362 = Class              #364          // java/lang/invoke/MethodHandles\n-  #363 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #364 = Utf8               java/lang/invoke/MethodHandles\n+  #152 = Methodref          #54.#153      // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #153 = NameAndType        #154:#155     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #154 = Utf8               sendCommand\n+  #155 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #156 = Methodref          #157.#158     // org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+  #157 = Class              #159          // org/apache/commons/net/imap/IMAPReply\n+  #158 = NameAndType        #160:#161     // isSuccess:(I)Z\n+  #159 = Utf8               org/apache/commons/net/imap/IMAPReply\n+  #160 = Utf8               isSuccess\n+  #161 = Utf8               (I)Z\n+  #162 = Methodref          #54.#163      // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #163 = NameAndType        #154:#164     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #164 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #165 = Methodref          #54.#166      // org/apache/commons/net/imap/IMAP.getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #166 = NameAndType        #167:#168     // getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #167 = Utf8               getCommandSupport\n+  #168 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #169 = Methodref          #170.#171     // org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n+  #170 = Class              #172          // org/apache/commons/net/ProtocolCommandSupport\n+  #171 = NameAndType        #173:#12      // getListenerCount:()I\n+  #172 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n+  #173 = Utf8               getListenerCount\n+  #174 = Methodref          #54.#175      // org/apache/commons/net/imap/IMAP.getReplyString:()Ljava/lang/String;\n+  #175 = NameAndType        #176:#49      // getReplyString:()Ljava/lang/String;\n+  #176 = Utf8               getReplyString\n+  #177 = Methodref          #170.#178     // org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n+  #178 = NameAndType        #179:#180     // fireReplyReceived:(ILjava/lang/String;)V\n+  #179 = Utf8               fireReplyReceived\n+  #180 = Utf8               (ILjava/lang/String;)V\n+  #181 = Methodref          #2.#182       // java/lang/String.\"<init>\":([C)V\n+  #182 = NameAndType        #32:#183      // \"<init>\":([C)V\n+  #183 = Utf8               ([C)V\n+  #184 = Methodref          #185.#186     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+  #185 = Class              #187          // java/io/BufferedReader\n+  #186 = NameAndType        #188:#49      // readLine:()Ljava/lang/String;\n+  #187 = Utf8               java/io/BufferedReader\n+  #188 = Utf8               readLine\n+  #189 = Class              #190          // java/io/EOFException\n+  #190 = Utf8               java/io/EOFException\n+  #191 = String             #192          // Connection closed without indication.\n+  #192 = Utf8               Connection closed without indication.\n+  #193 = Methodref          #189.#194     // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+  #194 = NameAndType        #32:#195      // \"<init>\":(Ljava/lang/String;)V\n+  #195 = Utf8               (Ljava/lang/String;)V\n+  #196 = InterfaceMethodref #148.#197     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #197 = NameAndType        #198:#199     // add:(Ljava/lang/Object;)Z\n+  #198 = Utf8               add\n+  #199 = Utf8               (Ljava/lang/Object;)Z\n+  #200 = Methodref          #157.#201     // org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n+  #201 = NameAndType        #202:#18      // isUntagged:(Ljava/lang/String;)Z\n+  #202 = Utf8               isUntagged\n+  #203 = Methodref          #157.#204     // org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n+  #204 = NameAndType        #205:#206     // literalCount:(Ljava/lang/String;)I\n+  #205 = Utf8               literalCount\n+  #206 = Utf8               (Ljava/lang/String;)I\n+  #207 = Fieldref           #54.#208      // org/apache/commons/net/imap/IMAP.chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #208 = NameAndType        #209:#210     // chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #209 = Utf8               chunkListener\n+  #210 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #211 = InterfaceMethodref #212.#213     // org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+  #212 = Class              #214          // org/apache/commons/net/imap/IMAP$IMAPChunkListener\n+  #213 = NameAndType        #215:#216     // chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+  #214 = Utf8               org/apache/commons/net/imap/IMAP$IMAPChunkListener\n+  #215 = Utf8               chunkReceived\n+  #216 = Utf8               (Lorg/apache/commons/net/imap/IMAP;)Z\n+  #217 = Methodref          #54.#178      // org/apache/commons/net/imap/IMAP.fireReplyReceived:(ILjava/lang/String;)V\n+  #218 = Methodref          #157.#219     // org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n+  #219 = NameAndType        #220:#206     // getReplyCode:(Ljava/lang/String;)I\n+  #220 = Utf8               getReplyCode\n+  #221 = Fieldref           #54.#222      // org/apache/commons/net/imap/IMAP.replyCode:I\n+  #222 = NameAndType        #223:#129     // replyCode:I\n+  #223 = Utf8               replyCode\n+  #224 = Methodref          #157.#225     // org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n+  #225 = NameAndType        #226:#206     // getUntaggedReplyCode:(Ljava/lang/String;)I\n+  #226 = Utf8               getUntaggedReplyCode\n+  #227 = Methodref          #28.#228      // java/lang/StringBuilder.\"<init>\":(I)V\n+  #228 = NameAndType        #32:#62       // \"<init>\":(I)V\n+  #229 = InterfaceMethodref #148.#230     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #230 = NameAndType        #231:#232     // iterator:()Ljava/util/Iterator;\n+  #231 = Utf8               iterator\n+  #232 = Utf8               ()Ljava/util/Iterator;\n+  #233 = InterfaceMethodref #234.#235     // java/util/Iterator.hasNext:()Z\n+  #234 = Class              #236          // java/util/Iterator\n+  #235 = NameAndType        #237:#6       // hasNext:()Z\n+  #236 = Utf8               java/util/Iterator\n+  #237 = Utf8               hasNext\n+  #238 = InterfaceMethodref #234.#239     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #239 = NameAndType        #240:#241     // next:()Ljava/lang/Object;\n+  #240 = Utf8               next\n+  #241 = Utf8               ()Ljava/lang/Object;\n+  #242 = String             #243          // \\r\\n\n+  #243 = Utf8               \\r\\n\n+  #244 = Fieldref           #245.#246     // org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #245 = Class              #247          // org/apache/commons/net/util/NetConstants\n+  #246 = NameAndType        #248:#249     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #247 = Utf8               org/apache/commons/net/util/NetConstants\n+  #248 = Utf8               EMPTY_STRING_ARRAY\n+  #249 = Utf8               [Ljava/lang/String;\n+  #250 = InterfaceMethodref #148.#251     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #251 = NameAndType        #252:#253     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #252 = Utf8               toArray\n+  #253 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #254 = Class              #249          // \"[Ljava/lang/String;\"\n+  #255 = Methodref          #256.#257     // org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n+  #256 = Class              #258          // org/apache/commons/net/imap/IMAPCommand\n+  #257 = NameAndType        #259:#49      // getIMAPCommand:()Ljava/lang/String;\n+  #258 = Utf8               org/apache/commons/net/imap/IMAPCommand\n+  #259 = Utf8               getIMAPCommand\n+  #260 = Methodref          #54.#261      // org/apache/commons/net/imap/IMAP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #261 = NameAndType        #154:#262     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #262 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #263 = Methodref          #54.#264      // org/apache/commons/net/imap/IMAP.generateCommandID:()Ljava/lang/String;\n+  #264 = NameAndType        #265:#49      // generateCommandID:()Ljava/lang/String;\n+  #265 = Utf8               generateCommandID\n+  #266 = Methodref          #54.#267      // org/apache/commons/net/imap/IMAP.sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #267 = NameAndType        #268:#269     // sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #268 = Utf8               sendCommandWithID\n+  #269 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #270 = Methodref          #28.#271      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #271 = NameAndType        #36:#272      // append:(C)Ljava/lang/StringBuilder;\n+  #272 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #273 = Methodref          #109.#274     // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+  #274 = NameAndType        #275:#195     // write:(Ljava/lang/String;)V\n+  #275 = Utf8               write\n+  #276 = Methodref          #109.#277     // java/io/BufferedWriter.flush:()V\n+  #277 = NameAndType        #278:#33      // flush:()V\n+  #278 = Utf8               flush\n+  #279 = Methodref          #54.#280      // org/apache/commons/net/imap/IMAP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #280 = NameAndType        #281:#282     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #281 = Utf8               fireCommandSent\n+  #282 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #283 = Methodref          #54.#284      // org/apache/commons/net/imap/IMAP.getReply:()V\n+  #284 = NameAndType        #135:#33      // getReply:()V\n+  #285 = InvokeDynamic      #0:#286       // #0:chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #286 = NameAndType        #215:#287     // chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #287 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #288 = Fieldref           #54.#289      // org/apache/commons/net/imap/IMAP.TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #289 = NameAndType        #290:#210     // TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #290 = Utf8               TRUE_CHUNK_LISTENER\n+  #291 = Utf8               DEFAULT_PORT\n+  #292 = Utf8               ConstantValue\n+  #293 = Integer            143\n+  #294 = Utf8               __DEFAULT_ENCODING\n+  #295 = Utf8               Ljava/lang/String;\n+  #296 = Utf8               Signature\n+  #297 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #298 = Utf8               quoteMailboxName\n+  #299 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #300 = Utf8               Code\n+  #301 = Utf8               LineNumberTable\n+  #302 = Utf8               LocalVariableTable\n+  #303 = Utf8               input\n+  #304 = Utf8               StackMapTable\n+  #305 = Utf8               this\n+  #306 = Utf8               Lorg/apache/commons/net/imap/IMAP;\n+  #307 = Utf8               tmo\n+  #308 = Utf8               Exceptions\n+  #309 = Class              #310          // java/io/IOException\n+  #310 = Utf8               java/io/IOException\n+  #311 = Utf8               doCommand\n+  #312 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n+  #313 = Utf8               command\n+  #314 = Utf8               Lorg/apache/commons/net/imap/IMAPCommand;\n+  #315 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n+  #316 = Utf8               args\n+  #317 = Utf8               ignored\n+  #318 = Utf8               i\n+  #319 = Utf8               res\n+  #320 = Utf8               carry\n+  #321 = Utf8               Z\n+  #322 = Utf8               il\n+  #323 = Utf8               isMultiLine\n+  #324 = Utf8               wantTag\n+  #325 = Utf8               line\n+  #326 = Utf8               s\n+  #327 = Utf8               buffer\n+  #328 = Utf8               Ljava/lang/StringBuilder;\n+  #329 = Utf8               getReplyStrings\n+  #330 = Utf8               ()[Ljava/lang/String;\n+  #331 = Utf8               getState\n+  #332 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #333 = Utf8               commandID\n+  #334 = Utf8               __commandBuffer\n+  #335 = Utf8               message\n+  #336 = Utf8               sendData\n+  #337 = Utf8               setChunkListener\n+  #338 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n+  #339 = Utf8               listener\n+  #340 = Utf8               lambda$static$0\n+  #341 = Utf8               imap\n+  #342 = Utf8               <clinit>\n+  #343 = Utf8               SourceFile\n+  #344 = Utf8               IMAP.java\n+  #345 = Utf8               BootstrapMethods\n+  #346 = MethodHandle       6:#347        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #347 = Methodref          #348.#349     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #348 = Class              #350          // java/lang/invoke/LambdaMetafactory\n+  #349 = NameAndType        #351:#352     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #350 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #351 = Utf8               metafactory\n+  #352 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #353 = MethodType         #216          //  (Lorg/apache/commons/net/imap/IMAP;)Z\n+  #354 = MethodHandle       6:#355        // REF_invokeStatic org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n+  #355 = Methodref          #54.#356      // org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n+  #356 = NameAndType        #340:#216     // lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n+  #357 = Utf8               InnerClasses\n+  #358 = Utf8               IMAPState\n+  #359 = Utf8               IMAPChunkListener\n+  #360 = Class              #361          // java/lang/invoke/MethodHandles$Lookup\n+  #361 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #362 = Class              #363          // java/lang/invoke/MethodHandles\n+  #363 = Utf8               java/lang/invoke/MethodHandles\n+  #364 = Utf8               Lookup\n {\n   public static final int DEFAULT_PORT = 143;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 143\n \n   protected static final java.lang.String __DEFAULT_ENCODING = \"ISO-8859-1\";\n@@ -402,15 +402,15 @@\n   private int replyCode;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private final java.util.List<java.lang.String> replyLines;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #114                         // Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #297                         // Ljava/util/List<Ljava/lang/String;>;\n \n   private volatile org.apache.commons.net.imap.IMAP$IMAPChunkListener chunkListener;\n     descriptor: Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n \n   private final char[] initialID;\n     descriptor: [C\n@@ -424,47 +424,47 @@\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: invokevirtual #1                  // Method java/lang/String.isEmpty:()Z\n         10: ifeq          16\n-        13: ldc           #2                  // String \\\"\\\"\n+        13: ldc           #7                  // String \\\"\\\"\n         15: areturn\n         16: aload_0\n-        17: invokevirtual #3                  // Method java/lang/String.length:()I\n+        17: invokevirtual #9                  // Method java/lang/String.length:()I\n         20: iconst_1\n         21: if_icmple     44\n         24: aload_0\n-        25: ldc           #4                  // String \\\"\n-        27: invokevirtual #5                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        25: ldc           #13                 // String \\\"\n+        27: invokevirtual #15                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         30: ifeq          44\n         33: aload_0\n-        34: ldc           #4                  // String \\\"\n-        36: invokevirtual #6                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        34: ldc           #13                 // String \\\"\n+        36: invokevirtual #19                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         39: ifeq          44\n         42: aload_0\n         43: areturn\n         44: aload_0\n-        45: ldc           #7                  // String\n-        47: invokevirtual #8                  // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        45: ldc           #22                 // String\n+        47: invokevirtual #24                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n         50: ifeq          85\n-        53: new           #9                  // class java/lang/StringBuilder\n+        53: new           #28                 // class java/lang/StringBuilder\n         56: dup\n-        57: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        60: ldc           #4                  // String \\\"\n-        62: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: invokespecial #30                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        60: ldc           #13                 // String \\\"\n+        62: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: aload_0\n-        66: ldc           #12                 // String ([\\\\\\\\\\\"])\n-        68: ldc           #13                 // String \\\\\\\\$1\n-        70: invokevirtual #14                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        73: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        76: ldc           #4                  // String \\\"\n-        78: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        81: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        66: ldc           #38                 // String ([\\\\\\\\\\\"])\n+        68: ldc           #40                 // String \\\\\\\\$1\n+        70: invokevirtual #42                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        73: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        76: ldc           #13                 // String \\\"\n+        78: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        81: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         84: areturn\n         85: aload_0\n         86: areturn\n       LineNumberTable:\n         line 96: 0\n         line 97: 4\n         line 99: 6\n@@ -485,15 +485,15 @@\n \n   public org.apache.commons.net.imap.IMAP();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #16                 // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n+         1: invokespecial #50                 // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n          4: aload_0\n          5: iconst_4\n          6: newarray       char\n          8: dup\n          9: iconst_0\n         10: bipush        65\n         12: castore\n@@ -505,34 +505,34 @@\n         19: iconst_2\n         20: bipush        65\n         22: castore\n         23: dup\n         24: iconst_3\n         25: bipush        65\n         27: castore\n-        28: putfield      #17                 // Field initialID:[C\n+        28: putfield      #53                 // Field initialID:[C\n         31: aload_0\n         32: sipush        143\n-        35: invokevirtual #19                 // Method setDefaultPort:(I)V\n+        35: invokevirtual #59                 // Method setDefaultPort:(I)V\n         38: aload_0\n-        39: getstatic     #20                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        42: putfield      #21                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        39: getstatic     #63                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        42: putfield      #69                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n         45: aload_0\n         46: aconst_null\n-        47: putfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n+        47: putfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n         50: aload_0\n         51: aconst_null\n-        52: putfield      #23                 // Field __writer:Ljava/io/BufferedWriter;\n+        52: putfield      #76                 // Field __writer:Ljava/io/BufferedWriter;\n         55: aload_0\n-        56: new           #24                 // class java/util/ArrayList\n+        56: new           #80                 // class java/util/ArrayList\n         59: dup\n-        60: invokespecial #25                 // Method java/util/ArrayList.\"<init>\":()V\n-        63: putfield      #26                 // Field replyLines:Ljava/util/List;\n+        60: invokespecial #82                 // Method java/util/ArrayList.\"<init>\":()V\n+        63: putfield      #83                 // Field replyLines:Ljava/util/List;\n         66: aload_0\n-        67: invokevirtual #27                 // Method createCommandSupport:()V\n+        67: invokevirtual #87                 // Method createCommandSupport:()V\n         70: return\n       LineNumberTable:\n         line 129: 0\n         line 124: 4\n         line 130: 31\n         line 131: 38\n         line 132: 45\n@@ -546,57 +546,57 @@\n \n   protected void _connectAction_() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=7, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #28                 // Method org/apache/commons/net/SocketClient._connectAction_:()V\n+         1: invokespecial #90                 // Method org/apache/commons/net/SocketClient._connectAction_:()V\n          4: aload_0\n-         5: new           #29                 // class org/apache/commons/net/io/CRLFLineReader\n+         5: new           #93                 // class org/apache/commons/net/io/CRLFLineReader\n          8: dup\n-         9: new           #30                 // class java/io/InputStreamReader\n+         9: new           #95                 // class java/io/InputStreamReader\n         12: dup\n         13: aload_0\n-        14: getfield      #31                 // Field _input_:Ljava/io/InputStream;\n-        17: ldc           #32                 // String ISO-8859-1\n-        19: invokespecial #33                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-        22: invokespecial #34                 // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-        25: putfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n+        14: getfield      #97                 // Field _input_:Ljava/io/InputStream;\n+        17: ldc           #101                // String ISO-8859-1\n+        19: invokespecial #103                // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        22: invokespecial #106                // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+        25: putfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n         28: aload_0\n-        29: new           #35                 // class java/io/BufferedWriter\n+        29: new           #109                // class java/io/BufferedWriter\n         32: dup\n-        33: new           #36                 // class java/io/OutputStreamWriter\n+        33: new           #111                // class java/io/OutputStreamWriter\n         36: dup\n         37: aload_0\n-        38: getfield      #37                 // Field _output_:Ljava/io/OutputStream;\n-        41: ldc           #32                 // String ISO-8859-1\n-        43: invokespecial #38                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-        46: invokespecial #39                 // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-        49: putfield      #23                 // Field __writer:Ljava/io/BufferedWriter;\n+        38: getfield      #113                // Field _output_:Ljava/io/OutputStream;\n+        41: ldc           #101                // String ISO-8859-1\n+        43: invokespecial #117                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        46: invokespecial #120                // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+        49: putfield      #76                 // Field __writer:Ljava/io/BufferedWriter;\n         52: aload_0\n-        53: invokevirtual #40                 // Method getSoTimeout:()I\n+        53: invokevirtual #123                // Method getSoTimeout:()I\n         56: istore_1\n         57: iload_1\n         58: ifgt          69\n         61: aload_0\n         62: aload_0\n-        63: getfield      #41                 // Field connectTimeout:I\n-        66: invokevirtual #42                 // Method setSoTimeout:(I)V\n+        63: getfield      #126                // Field connectTimeout:I\n+        66: invokevirtual #130                // Method setSoTimeout:(I)V\n         69: aload_0\n         70: iconst_0\n-        71: invokespecial #43                 // Method getReply:(Z)V\n+        71: invokespecial #133                // Method getReply:(Z)V\n         74: iload_1\n         75: ifgt          83\n         78: aload_0\n         79: iload_1\n-        80: invokevirtual #42                 // Method setSoTimeout:(I)V\n+        80: invokevirtual #130                // Method setSoTimeout:(I)V\n         83: aload_0\n-        84: getstatic     #44                 // Field org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        87: invokevirtual #45                 // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+        84: getstatic     #137                // Field org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        87: invokevirtual #140                // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n         90: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 4\n         line 145: 28\n         line 146: 52\n         line 147: 57\n@@ -620,27 +620,27 @@\n \n   public void disconnect() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #46                 // Method org/apache/commons/net/SocketClient.disconnect:()V\n+         1: invokespecial #144                // Method org/apache/commons/net/SocketClient.disconnect:()V\n          4: aload_0\n          5: aconst_null\n-         6: putfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n+         6: putfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n          9: aload_0\n         10: aconst_null\n-        11: putfield      #23                 // Field __writer:Ljava/io/BufferedWriter;\n+        11: putfield      #76                 // Field __writer:Ljava/io/BufferedWriter;\n         14: aload_0\n-        15: getfield      #26                 // Field replyLines:Ljava/util/List;\n-        18: invokeinterface #47,  1           // InterfaceMethod java/util/List.clear:()V\n+        15: getfield      #83                 // Field replyLines:Ljava/util/List;\n+        18: invokeinterface #147,  1          // InterfaceMethod java/util/List.clear:()V\n         23: aload_0\n-        24: getstatic     #20                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        27: invokevirtual #45                 // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+        24: getstatic     #63                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        27: invokevirtual #140                // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n         30: return\n       LineNumberTable:\n         line 165: 0\n         line 166: 4\n         line 167: 9\n         line 168: 14\n         line 169: 23\n@@ -654,16 +654,16 @@\n   public boolean doCommand(org.apache.commons.net.imap.IMAPCommand) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #48                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-         5: invokestatic  #49                 // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+         2: invokevirtual #152                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+         5: invokestatic  #156                // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n          8: ireturn\n       LineNumberTable:\n         line 180: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0       9     1 command   Lorg/apache/commons/net/imap/IMAPCommand;\n@@ -674,16 +674,16 @@\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #50                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-         6: invokestatic  #49                 // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+         3: invokevirtual #162                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+         6: invokestatic  #156                // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n          9: ireturn\n       LineNumberTable:\n         line 192: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0      10     1 command   Lorg/apache/commons/net/imap/IMAPCommand;\n@@ -693,23 +693,23 @@\n \n   protected void fireReplyReceived(int, java.lang.String);\n     descriptor: (ILjava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #51                 // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-         4: invokevirtual #52                 // Method org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n+         1: invokevirtual #165                // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+         4: invokevirtual #169                // Method org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n          7: ifle          22\n         10: aload_0\n-        11: invokevirtual #51                 // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+        11: invokevirtual #165                // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n         14: iload_1\n         15: aload_0\n-        16: invokevirtual #53                 // Method getReplyString:()Ljava/lang/String;\n-        19: invokevirtual #54                 // Method org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n+        16: invokevirtual #174                // Method getReplyString:()Ljava/lang/String;\n+        19: invokevirtual #177                // Method org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n         22: return\n       LineNumberTable:\n         line 205: 0\n         line 206: 10\n         line 208: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -720,46 +720,46 @@\n         frame_type = 22 /* same */\n \n   protected java.lang.String generateCommandID();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=1\n-         0: new           #55                 // class java/lang/String\n+         0: new           #2                  // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #17                 // Field initialID:[C\n-         8: invokespecial #56                 // Method java/lang/String.\"<init>\":([C)V\n+         5: getfield      #53                 // Field initialID:[C\n+         8: invokespecial #181                // Method java/lang/String.\"<init>\":([C)V\n         11: astore_1\n         12: iconst_1\n         13: istore_2\n         14: aload_0\n-        15: getfield      #17                 // Field initialID:[C\n+        15: getfield      #53                 // Field initialID:[C\n         18: arraylength\n         19: iconst_1\n         20: isub\n         21: istore_3\n         22: iload_2\n         23: ifeq          71\n         26: iload_3\n         27: iflt          71\n         30: aload_0\n-        31: getfield      #17                 // Field initialID:[C\n+        31: getfield      #53                 // Field initialID:[C\n         34: iload_3\n         35: caload\n         36: bipush        90\n         38: if_icmpne     52\n         41: aload_0\n-        42: getfield      #17                 // Field initialID:[C\n+        42: getfield      #53                 // Field initialID:[C\n         45: iload_3\n         46: bipush        65\n         48: castore\n         49: goto          65\n         52: aload_0\n-        53: getfield      #17                 // Field initialID:[C\n+        53: getfield      #53                 // Field initialID:[C\n         56: iload_3\n         57: dup2\n         58: caload\n         59: iconst_1\n         60: iadd\n         61: i2c\n         62: castore\n@@ -797,15 +797,15 @@\n   private void getReply() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #43                 // Method getReply:(Z)V\n+         2: invokespecial #133                // Method getReply:(Z)V\n          5: return\n       LineNumberTable:\n         line 236: 0\n         line 237: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/imap/IMAP;\n@@ -814,125 +814,125 @@\n \n   private void getReply(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #26                 // Field replyLines:Ljava/util/List;\n-         4: invokeinterface #47,  1           // InterfaceMethod java/util/List.clear:()V\n+         1: getfield      #83                 // Field replyLines:Ljava/util/List;\n+         4: invokeinterface #147,  1          // InterfaceMethod java/util/List.clear:()V\n          9: aload_0\n-        10: getfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n-        13: invokevirtual #57                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+        10: getfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n+        13: invokevirtual #184                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n         16: astore_2\n         17: aload_2\n         18: ifnonnull     31\n-        21: new           #58                 // class java/io/EOFException\n+        21: new           #189                // class java/io/EOFException\n         24: dup\n-        25: ldc           #59                 // String Connection closed without indication.\n-        27: invokespecial #60                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+        25: ldc           #191                // String Connection closed without indication.\n+        27: invokespecial #193                // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: aload_0\n-        32: getfield      #26                 // Field replyLines:Ljava/util/List;\n+        32: getfield      #83                 // Field replyLines:Ljava/util/List;\n         35: aload_2\n-        36: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        36: invokeinterface #196,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         41: pop\n         42: iload_1\n         43: ifeq          214\n         46: aload_2\n-        47: invokestatic  #62                 // Method org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n+        47: invokestatic  #200                // Method org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n         50: ifeq          203\n         53: aload_2\n-        54: invokestatic  #63                 // Method org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n+        54: invokestatic  #203                // Method org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n         57: istore_3\n         58: iload_3\n         59: iflt          66\n         62: iconst_1\n         63: goto          67\n         66: iconst_0\n         67: istore        4\n         69: iload_3\n         70: iflt          118\n         73: aload_0\n-        74: getfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n-        77: invokevirtual #57                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+        74: getfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n+        77: invokevirtual #184                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n         80: astore_2\n         81: aload_2\n         82: ifnonnull     95\n-        85: new           #58                 // class java/io/EOFException\n+        85: new           #189                // class java/io/EOFException\n         88: dup\n-        89: ldc           #59                 // String Connection closed without indication.\n-        91: invokespecial #60                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+        89: ldc           #191                // String Connection closed without indication.\n+        91: invokespecial #193                // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n         94: athrow\n         95: aload_0\n-        96: getfield      #26                 // Field replyLines:Ljava/util/List;\n+        96: getfield      #83                 // Field replyLines:Ljava/util/List;\n         99: aload_2\n-       100: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       100: invokeinterface #196,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        105: pop\n        106: iload_3\n        107: aload_2\n-       108: invokevirtual #3                  // Method java/lang/String.length:()I\n+       108: invokevirtual #9                  // Method java/lang/String.length:()I\n        111: iconst_2\n        112: iadd\n        113: isub\n        114: istore_3\n        115: goto          69\n        118: iload         4\n        120: ifeq          167\n        123: aload_0\n-       124: getfield      #64                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+       124: getfield      #207                // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n        127: astore        5\n        129: aload         5\n        131: ifnull        167\n        134: aload         5\n        136: aload_0\n-       137: invokeinterface #65,  2           // InterfaceMethod org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+       137: invokeinterface #211,  2          // InterfaceMethod org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n        142: istore        6\n        144: iload         6\n        146: ifeq          167\n        149: aload_0\n        150: iconst_3\n        151: aload_0\n-       152: invokevirtual #53                 // Method getReplyString:()Ljava/lang/String;\n-       155: invokevirtual #67                 // Method fireReplyReceived:(ILjava/lang/String;)V\n+       152: invokevirtual #174                // Method getReplyString:()Ljava/lang/String;\n+       155: invokevirtual #217                // Method fireReplyReceived:(ILjava/lang/String;)V\n        158: aload_0\n-       159: getfield      #26                 // Field replyLines:Ljava/util/List;\n-       162: invokeinterface #47,  1           // InterfaceMethod java/util/List.clear:()V\n+       159: getfield      #83                 // Field replyLines:Ljava/util/List;\n+       162: invokeinterface #147,  1          // InterfaceMethod java/util/List.clear:()V\n        167: aload_0\n-       168: getfield      #22                 // Field _reader:Ljava/io/BufferedReader;\n-       171: invokevirtual #57                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+       168: getfield      #72                 // Field _reader:Ljava/io/BufferedReader;\n+       171: invokevirtual #184                // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n        174: astore_2\n        175: aload_2\n        176: ifnonnull     189\n-       179: new           #58                 // class java/io/EOFException\n+       179: new           #189                // class java/io/EOFException\n        182: dup\n-       183: ldc           #59                 // String Connection closed without indication.\n-       185: invokespecial #60                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+       183: ldc           #191                // String Connection closed without indication.\n+       185: invokespecial #193                // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n        188: athrow\n        189: aload_0\n-       190: getfield      #26                 // Field replyLines:Ljava/util/List;\n+       190: getfield      #83                 // Field replyLines:Ljava/util/List;\n        193: aload_2\n-       194: invokeinterface #61,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       194: invokeinterface #196,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        199: pop\n        200: goto          46\n        203: aload_0\n        204: aload_2\n-       205: invokestatic  #68                 // Method org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n-       208: putfield      #69                 // Field replyCode:I\n+       205: invokestatic  #218                // Method org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n+       208: putfield      #221                // Field replyCode:I\n        211: goto          222\n        214: aload_0\n        215: aload_2\n-       216: invokestatic  #70                 // Method org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n-       219: putfield      #69                 // Field replyCode:I\n+       216: invokestatic  #224                // Method org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n+       219: putfield      #221                // Field replyCode:I\n        222: aload_0\n        223: aload_0\n-       224: getfield      #69                 // Field replyCode:I\n+       224: getfield      #221                // Field replyCode:I\n        227: aload_0\n-       228: invokevirtual #53                 // Method getReplyString:()Ljava/lang/String;\n-       231: invokevirtual #67                 // Method fireReplyReceived:(ILjava/lang/String;)V\n+       228: invokevirtual #174                // Method getReplyString:()Ljava/lang/String;\n+       231: invokevirtual #217                // Method fireReplyReceived:(ILjava/lang/String;)V\n        234: return\n       LineNumberTable:\n         line 246: 0\n         line 247: 9\n         line 249: 17\n         line 250: 21\n         line 253: 31\n@@ -996,41 +996,41 @@\n       throws java.io.IOException\n \n   public java.lang.String getReplyString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n-         0: new           #9                  // class java/lang/StringBuilder\n+         0: new           #28                 // class java/lang/StringBuilder\n          3: dup\n          4: sipush        256\n-         7: invokespecial #71                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         7: invokespecial #227                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         10: astore_1\n         11: aload_0\n-        12: getfield      #26                 // Field replyLines:Ljava/util/List;\n-        15: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        12: getfield      #83                 // Field replyLines:Ljava/util/List;\n+        15: invokeinterface #229,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         20: astore_2\n         21: aload_2\n-        22: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        22: invokeinterface #233,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         27: ifeq          56\n         30: aload_2\n-        31: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        36: checkcast     #55                 // class java/lang/String\n+        31: invokeinterface #238,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        36: checkcast     #2                  // class java/lang/String\n         39: astore_3\n         40: aload_1\n         41: aload_3\n-        42: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: pop\n         46: aload_1\n-        47: ldc           #76                 // String \\r\\n\n-        49: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: ldc           #242                // String \\r\\n\n+        49: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         52: pop\n         53: goto          21\n         56: aload_1\n-        57: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         60: areturn\n       LineNumberTable:\n         line 298: 0\n         line 299: 11\n         line 300: 40\n         line 301: 46\n         line 302: 53\n@@ -1049,32 +1049,32 @@\n \n   public java.lang.String[] getReplyStrings();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field replyLines:Ljava/util/List;\n-         4: getstatic     #77                 // Field org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-         7: invokeinterface #78,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        12: checkcast     #79                 // class \"[Ljava/lang/String;\"\n+         1: getfield      #83                 // Field replyLines:Ljava/util/List;\n+         4: getstatic     #244                // Field org/apache/commons/net/util/NetConstants.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         7: invokeinterface #250,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        12: checkcast     #254                // class \"[Ljava/lang/String;\"\n         15: areturn\n       LineNumberTable:\n         line 313: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/net/imap/IMAP;\n \n   public org.apache.commons.net.imap.IMAP$IMAPState getState();\n     descriptor: ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+         1: getfield      #69                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n          4: areturn\n       LineNumberTable:\n         line 322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/imap/IMAP;\n \n@@ -1082,15 +1082,15 @@\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokevirtual #50                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+         3: invokevirtual #162                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 333: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0       7     1 command   Lorg/apache/commons/net/imap/IMAPCommand;\n@@ -1100,17 +1100,17 @@\n   public int sendCommand(org.apache.commons.net.imap.IMAPCommand, java.lang.String) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #80                 // Method org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n+         2: invokevirtual #255                // Method org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n          5: aload_2\n-         6: invokevirtual #81                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         6: invokevirtual #260                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 345: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0      10     1 command   Lorg/apache/commons/net/imap/IMAPCommand;\n@@ -1122,15 +1122,15 @@\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokevirtual #81                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         3: invokevirtual #260                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 356: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0       7     1 command   Ljava/lang/String;\n@@ -1140,18 +1140,18 @@\n   public int sendCommand(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n-         2: invokevirtual #82                 // Method generateCommandID:()Ljava/lang/String;\n+         2: invokevirtual #263                // Method generateCommandID:()Ljava/lang/String;\n          5: aload_1\n          6: aload_2\n-         7: invokespecial #83                 // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+         7: invokespecial #266                // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n         10: ireturn\n       LineNumberTable:\n         line 368: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0      11     1 command   Ljava/lang/String;\n@@ -1160,64 +1160,64 @@\n       throws java.io.IOException\n \n   private int sendCommandWithID(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=6, args_size=4\n-         0: new           #9                  // class java/lang/StringBuilder\n+         0: new           #28                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore        4\n          9: aload_1\n         10: ifnull        28\n         13: aload         4\n         15: aload_1\n-        16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: pop\n         20: aload         4\n         22: bipush        32\n-        24: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        24: invokevirtual #270                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         27: pop\n         28: aload         4\n         30: aload_2\n-        31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         34: pop\n         35: aload_3\n         36: ifnull        54\n         39: aload         4\n         41: bipush        32\n-        43: invokevirtual #84                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        43: invokevirtual #270                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         46: pop\n         47: aload         4\n         49: aload_3\n-        50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         53: pop\n         54: aload         4\n-        56: ldc           #76                 // String \\r\\n\n-        58: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: ldc           #242                // String \\r\\n\n+        58: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         61: pop\n         62: aload         4\n-        64: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        64: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         67: astore        5\n         69: aload_0\n-        70: getfield      #23                 // Field __writer:Ljava/io/BufferedWriter;\n+        70: getfield      #76                 // Field __writer:Ljava/io/BufferedWriter;\n         73: aload         5\n-        75: invokevirtual #85                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+        75: invokevirtual #273                // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n         78: aload_0\n-        79: getfield      #23                 // Field __writer:Ljava/io/BufferedWriter;\n-        82: invokevirtual #86                 // Method java/io/BufferedWriter.flush:()V\n+        79: getfield      #76                 // Field __writer:Ljava/io/BufferedWriter;\n+        82: invokevirtual #276                // Method java/io/BufferedWriter.flush:()V\n         85: aload_0\n         86: aload_2\n         87: aload         5\n-        89: invokevirtual #87                 // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+        89: invokevirtual #279                // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n         92: aload_0\n-        93: invokespecial #88                 // Method getReply:()V\n+        93: invokespecial #283                // Method getReply:()V\n         96: aload_0\n-        97: getfield      #69                 // Field replyCode:I\n+        97: getfield      #221                // Field replyCode:I\n        100: ireturn\n       LineNumberTable:\n         line 380: 0\n         line 381: 9\n         line 382: 13\n         line 383: 20\n         line 385: 28\n@@ -1252,15 +1252,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n          3: aconst_null\n-         4: invokespecial #83                 // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+         4: invokespecial #266                // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n          7: ireturn\n       LineNumberTable:\n         line 411: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/imap/IMAP;\n             0       8     1 command   Ljava/lang/String;\n@@ -1270,15 +1270,15 @@\n   public void setChunkListener(org.apache.commons.net.imap.IMAP$IMAPChunkListener);\n     descriptor: (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #64                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+         2: putfield      #207                // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n          5: return\n       LineNumberTable:\n         line 424: 0\n         line 425: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/imap/IMAP;\n@@ -1287,15 +1287,15 @@\n   protected void setState(org.apache.commons.net.imap.IMAP$IMAPState);\n     descriptor: (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #21                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+         2: putfield      #69                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n          5: return\n       LineNumberTable:\n         line 433: 0\n         line 434: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/imap/IMAP;\n@@ -1315,24 +1315,24 @@\n             0       2     0  imap   Lorg/apache/commons/net/imap/IMAP;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #89,  0             // InvokeDynamic #0:chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-         5: putstatic     #90                 // Field TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+         0: invokedynamic #285,  0            // InvokeDynamic #0:chunkReceived:()Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+         5: putstatic     #288                // Field TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n          8: return\n       LineNumberTable:\n         line 86: 0\n }\n SourceFile: \"IMAP.java\"\n-InnerClasses:\n-  public static final #92= #91 of #18;    // IMAPState=class org/apache/commons/net/imap/IMAP$IMAPState of class org/apache/commons/net/imap/IMAP\n-  public static #95= #94 of #18;          // IMAPChunkListener=class org/apache/commons/net/imap/IMAP$IMAPChunkListener of class org/apache/commons/net/imap/IMAP\n-  public static final #360= #359 of #362; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #279 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #346 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #280 (Lorg/apache/commons/net/imap/IMAP;)Z\n-      #281 REF_invokeStatic org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n-      #280 (Lorg/apache/commons/net/imap/IMAP;)Z\n+      #353 (Lorg/apache/commons/net/imap/IMAP;)Z\n+      #354 REF_invokeStatic org/apache/commons/net/imap/IMAP.lambda$static$0:(Lorg/apache/commons/net/imap/IMAP;)Z\n+      #353 (Lorg/apache/commons/net/imap/IMAP;)Z\n+InnerClasses:\n+  public static final #358= #64 of #54;   // IMAPState=class org/apache/commons/net/imap/IMAP$IMAPState of class org/apache/commons/net/imap/IMAP\n+  public static #359= #212 of #54;        // IMAPChunkListener=class org/apache/commons/net/imap/IMAP$IMAPChunkListener of class org/apache/commons/net/imap/IMAP\n+  public static final #364= #360 of #362; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
