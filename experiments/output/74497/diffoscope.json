{"diffoscope-json-version": 1, "source1": "first/ImmutableNode$Builder.class", "source2": "second/ImmutableNode$Builder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -74,15 +74,15 @@\n             this.ensureAttributesExist();\n             this.attributes.putAll(attrs);\n         }\n         return this;\n     }\n     \n     public ImmutableNode create() {\n-        final ImmutableNode newNode = new ImmutableNode(this, (ImmutableNode.ImmutableNode$1)null);\n+        final ImmutableNode newNode = new ImmutableNode(this, (ImmutableNode)null);\n         this.children = null;\n         this.attributes = null;\n         return newNode;\n     }\n     \n     List<ImmutableNode> createChildren() {\n         if (this.directChildren != null) {\n@@ -120,11 +120,11 @@\n         if (childCount > 0) {\n             this.children = new ArrayList(childCount);\n         }\n     }\n     \n     private static Collection<? extends ImmutableNode> filterNull(final Collection<? extends ImmutableNode> children) {\n         final List<ImmutableNode> result = new ArrayList<ImmutableNode>(children.size());\n-        children.forEach(Builder::lambda$filterNull$0);\n+        children.forEach(Builder::lambda$0);\n         return result;\n     }\n }\n"}]}
