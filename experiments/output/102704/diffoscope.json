{"diffoscope-json-version": 1, "source1": "first/ZipArchiveOutputStream$CurrentEntry.class", "source2": "second/ZipArchiveOutputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,82 +1,77 @@\n-  SHA-256 checksum 35e7c588758d671a4292b029d4993172e7a1ed07c1726d23630a4475410b2e7a\n+  SHA-256 checksum e4a3bf0411b40cc9a4421de0009d09228295385f63f06cbe442732e438351821\n   Compiled from \"ZipArchiveOutputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-  super_class: #29                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 6, methods: 13, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #7 = Fieldref           #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.causedUseOfZip64:Z\n-   #8 = NameAndType        #9:#10         // causedUseOfZip64:Z\n-   #9 = Utf8               causedUseOfZip64\n-  #10 = Utf8               Z\n-  #11 = Fieldref           #2.#12         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.localDataStart:J\n-  #12 = NameAndType        #13:#14        // localDataStart:J\n-  #13 = Utf8               localDataStart\n-  #14 = Utf8               J\n-  #15 = Fieldref           #2.#16         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.hasWritten:Z\n-  #16 = NameAndType        #17:#10        // hasWritten:Z\n-  #17 = Utf8               hasWritten\n-  #18 = Fieldref           #2.#19         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #19 = NameAndType        #20:#21        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #20 = Utf8               entry\n-  #21 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #22 = Fieldref           #2.#23         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.bytesRead:J\n-  #23 = NameAndType        #24:#14        // bytesRead:J\n-  #24 = Utf8               bytesRead\n-  #25 = Fieldref           #2.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.dataStart:J\n-  #26 = NameAndType        #27:#14        // dataStart:J\n-  #27 = Utf8               dataStart\n-  #28 = Methodref          #29.#30        // java/lang/Object.\"<init>\":()V\n-  #29 = Class              #31            // java/lang/Object\n-  #30 = NameAndType        #5:#32         // \"<init>\":()V\n-  #31 = Utf8               java/lang/Object\n-  #32 = Utf8               ()V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               LocalVariableTable\n-  #36 = Utf8               this\n-  #37 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-  #38 = Utf8               access$000\n-  #39 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n-  #40 = Utf8               x0\n-  #41 = Utf8               access$102\n-  #42 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n-  #43 = Utf8               x1\n-  #44 = Utf8               access$200\n-  #45 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #46 = Utf8               access$300\n-  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n-  #48 = Utf8               access$100\n-  #49 = Utf8               access$400\n-  #50 = Utf8               access$500\n-  #51 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n-  #52 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n-  #53 = Utf8               access$302\n-  #54 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n-  #55 = Utf8               access$402\n-  #56 = Utf8               access$002\n-  #57 = Utf8               access$502\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               ZipArchiveOutputStream.java\n-  #60 = Utf8               InnerClasses\n-  #61 = Class              #62            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #62 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #63 = Utf8               CurrentEntry\n-  #64 = Class              #65            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n-  #65 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               entry\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #7 = Utf8               localDataStart\n+   #8 = Utf8               J\n+   #9 = Utf8               dataStart\n+  #10 = Utf8               bytesRead\n+  #11 = Utf8               causedUseOfZip64\n+  #12 = Utf8               Z\n+  #13 = Utf8               hasWritten\n+  #14 = Utf8               <init>\n+  #15 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/lang/Object.\"<init>\":()V\n+  #18 = NameAndType        #14:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #21 = NameAndType        #5:#6          // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n+  #26 = Utf8               access$0\n+  #27 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n+  #28 = Fieldref           #1.#29         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.dataStart:J\n+  #29 = NameAndType        #9:#8          // dataStart:J\n+  #30 = Utf8               access$1\n+  #31 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)V\n+  #32 = Fieldref           #1.#33         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.bytesRead:J\n+  #33 = NameAndType        #10:#8         // bytesRead:J\n+  #34 = Utf8               access$2\n+  #35 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #36 = Utf8               access$3\n+  #37 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n+  #38 = Fieldref           #1.#39         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.hasWritten:Z\n+  #39 = NameAndType        #13:#12        // hasWritten:Z\n+  #40 = Utf8               access$4\n+  #41 = Utf8               access$5\n+  #42 = Fieldref           #1.#43         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.localDataStart:J\n+  #43 = NameAndType        #7:#8          // localDataStart:J\n+  #44 = Utf8               access$6\n+  #45 = Fieldref           #1.#46         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.causedUseOfZip64:Z\n+  #46 = NameAndType        #11:#12        // causedUseOfZip64:Z\n+  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)V\n+  #48 = Methodref          #1.#49         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #49 = NameAndType        #14:#15        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #50 = Utf8               access$8\n+  #51 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)V\n+  #52 = Utf8               access$9\n+  #53 = Utf8               access$10\n+  #54 = Utf8               access$11\n+  #55 = Utf8               SourceFile\n+  #56 = Utf8               ZipArchiveOutputStream.java\n+  #57 = Utf8               InnerClasses\n+  #58 = Class              #59            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #60 = Utf8               CurrentEntry\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long localDataStart;\n     descriptor: J\n@@ -100,211 +95,186 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #28                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #18                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         6: putfield      #20                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          9: return\n       LineNumberTable:\n         line 1991: 0\n         line 1992: 4\n         line 1993: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n             0      10     1 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n-  static long access$000(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static long access$0(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field dataStart:J\n+         1: getfield      #28                 // Field dataStart:J\n          4: lreturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 2006: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  static long access$102(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n+  static void access$1(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=5, locals=3, args_size=2\n+      stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: dup2_x1\n-         3: putfield      #22                 // Field bytesRead:J\n-         6: lreturn\n+         2: putfield      #32                 // Field bytesRead:J\n+         5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 2011: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n \n-  static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$200(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$2(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #20                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 1997: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  static boolean access$300(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static boolean access$3(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field hasWritten:Z\n+         1: getfield      #38                 // Field hasWritten:Z\n          4: ireturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 2024: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  static long access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static long access$4(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field bytesRead:J\n+         1: getfield      #32                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 2011: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  static long access$400(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static long access$5(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field localDataStart:J\n+         1: getfield      #42                 // Field localDataStart:J\n          4: lreturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 2002: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  static boolean access$500(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+  static boolean access$6(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field causedUseOfZip64:Z\n+         1: getfield      #45                 // Field causedUseOfZip64:Z\n          4: ireturn\n       LineNumberTable:\n-        line 1990: 0\n+        line 2015: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n-  org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n+  org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+         2: invokespecial #48                 // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n          5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 1991: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       6     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-            0       6     2    x1   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n \n-  static boolean access$302(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n+  static void access$8(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: dup_x1\n-         3: putfield      #15                 // Field hasWritten:Z\n-         6: ireturn\n+         2: putfield      #38                 // Field hasWritten:Z\n+         5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 2024: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n-  static long access$402(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n+  static void access$9(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=5, locals=3, args_size=2\n+      stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: dup2_x1\n-         3: putfield      #11                 // Field localDataStart:J\n-         6: lreturn\n+         2: putfield      #42                 // Field localDataStart:J\n+         5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 2002: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n \n-  static long access$002(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n+  static void access$10(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=5, locals=3, args_size=2\n+      stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: dup2_x1\n-         3: putfield      #25                 // Field dataStart:J\n-         6: lreturn\n+         2: putfield      #28                 // Field dataStart:J\n+         5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 2006: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n \n-  static boolean access$502(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n+  static void access$11(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: dup_x1\n-         3: putfield      #7                  // Field causedUseOfZip64:Z\n-         6: ireturn\n+         2: putfield      #45                 // Field causedUseOfZip64:Z\n+         5: return\n       LineNumberTable:\n-        line 1990: 0\n+        line 2015: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   Z\n }\n SourceFile: \"ZipArchiveOutputStream.java\"\n InnerClasses:\n-  private static final #63= #2 of #61;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  static #64;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  private static final #60= #1 of #58;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n"}]}
