{"diffoscope-json-version": 1, "source1": "first/FramedSnappyCompressorInputStream.class", "source2": "second/FramedSnappyCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,323 +1,323 @@\n-  SHA-256 checksum 73371ec0e4c73f43917cb6def491314344164928eb759dcbbcfcedfc19649eac\n+  SHA-256 checksum aec74ae6d030916d9ff8a8696c02bb6ad08374f2d74e1bdf8416043a93c42769\n   Compiled from \"FramedSnappyCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #52                         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  super_class: #89                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #2                          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+  super_class: #24                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 22, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Methodref          #52.#171      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n-    #2 = Fieldref           #143.#172     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-    #3 = Methodref          #52.#173      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-    #4 = Class              #174          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-    #5 = Integer            32768\n-    #6 = Methodref          #52.#175      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-    #7 = Methodref          #89.#176      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #8 = Fieldref           #52.#177      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.oneByte:[B\n-    #9 = Long               -1l\n-   #11 = Fieldref           #52.#178      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.expectedChecksum:J\n-   #12 = Class              #179          // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-   #13 = Methodref          #12.#176      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-   #14 = Fieldref           #52.#180      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-   #15 = Class              #181          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n-   #16 = Methodref          #15.#182      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n-   #17 = Fieldref           #52.#183      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #18 = Class              #184          // java/lang/IllegalArgumentException\n-   #19 = String             #185          // blockSize must be bigger than 0\n-   #20 = Methodref          #18.#186      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Class              #187          // org/apache/commons/compress/utils/CountingInputStream\n-   #22 = Methodref          #21.#188      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #23 = Fieldref           #52.#189      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #24 = Class              #190          // java/io/PushbackInputStream\n-   #25 = Methodref          #24.#191      // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #26 = Fieldref           #52.#192      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inputStream:Ljava/io/PushbackInputStream;\n-   #27 = Fieldref           #52.#193      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.blockSize:I\n-   #28 = Fieldref           #52.#194      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-   #29 = Methodref          #143.#195     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n-   #30 = Methodref          #52.#196      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readStreamIdentifier:()V\n-   #31 = Methodref          #52.#197      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.read:([BII)I\n-   #32 = Fieldref           #52.#198      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-   #33 = Methodref          #4.#199       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n-   #34 = Methodref          #24.#199      // java/io/PushbackInputStream.close:()V\n-   #35 = Methodref          #52.#200      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOnce:([BII)I\n-   #36 = Methodref          #52.#201      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readNextBlock:()V\n-   #37 = Fieldref           #52.#202      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.endReached:Z\n-   #38 = Fieldref           #52.#203      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inUncompressedChunk:Z\n-   #39 = Fieldref           #52.#204      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.uncompressedBytesRemaining:I\n-   #40 = Methodref          #24.#205      // java/io/PushbackInputStream.available:()I\n-   #41 = Methodref          #206.#207     // java/lang/Math.min:(II)I\n-   #42 = Methodref          #4.#205       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n-   #43 = Methodref          #21.#208      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #44 = Fieldref           #52.#209      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unreadBytes:J\n-   #45 = Methodref          #24.#197      // java/io/PushbackInputStream.read:([BII)I\n-   #46 = Methodref          #52.#210      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(I)V\n-   #47 = Methodref          #4.#208       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n-   #48 = Methodref          #4.#197       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n-   #49 = Methodref          #52.#211      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(J)V\n-   #50 = Methodref          #12.#212      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n-   #51 = Methodref          #52.#213      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.verifyLastChecksumAndReset:()V\n-   #52 = Class              #214          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-   #53 = Methodref          #24.#215      // java/io/PushbackInputStream.unread:(I)V\n-   #54 = Methodref          #52.#216      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.pushedBackBytes:(J)V\n-   #55 = Methodref          #52.#217      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.skipBlock:()V\n-   #56 = Class              #218          // java/io/IOException\n-   #57 = Methodref          #219.#220     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #58 = InvokeDynamic      #0:#224       // #0:makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n-   #59 = Methodref          #56.#186      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #60 = Methodref          #52.#225      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readSize:()I\n-   #61 = String             #226          // Found illegal chunk with negative size\n-   #62 = Methodref          #52.#227      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readCrc:()J\n-   #63 = Methodref          #52.#228      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unmask:(J)J\n-   #64 = Methodref          #143.#229     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n-   #65 = Long               4l\n-   #67 = Class              #230          // org/apache/commons/compress/utils/BoundedInputStream\n-   #68 = Methodref          #67.#231      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #69 = Methodref          #4.#191       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #70 = InvokeDynamic      #1:#233       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #71 = Methodref          #234.#235     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #72 = String             #236          // Premature end of stream\n-   #73 = Methodref          #237.#238     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #74 = Long               2726488792l\n-   #76 = Long               4294967295l\n-   #78 = Methodref          #237.#239     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #79 = Methodref          #234.#240     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #80 = Methodref          #52.#241      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n-   #81 = String             #242          // Not a framed Snappy stream\n-   #82 = Methodref          #24.#243      // java/io/PushbackInputStream.read:()I\n-   #83 = Methodref          #12.#244      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n-   #84 = String             #245          // Checksum verification failed\n-   #85 = Methodref          #12.#246      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n-   #86 = Fieldref           #52.#247      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n-   #87 = Methodref          #248.#249     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #88 = Methodref          #250.#251     // java/util/Arrays.equals:([B[B)Z\n-   #89 = Class              #252          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #90 = Class              #253          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #91 = Utf8               InnerClasses\n-   #92 = Utf8               MASK_OFFSET\n-   #93 = Utf8               J\n-   #94 = Utf8               ConstantValue\n-   #95 = Utf8               STREAM_IDENTIFIER_TYPE\n-   #96 = Utf8               I\n-   #97 = Integer            255\n-   #98 = Utf8               COMPRESSED_CHUNK_TYPE\n-   #99 = Integer            0\n-  #100 = Utf8               UNCOMPRESSED_CHUNK_TYPE\n-  #101 = Integer            1\n-  #102 = Utf8               PADDING_CHUNK_TYPE\n-  #103 = Integer            254\n-  #104 = Utf8               MIN_UNSKIPPABLE_TYPE\n-  #105 = Integer            2\n-  #106 = Utf8               MAX_UNSKIPPABLE_TYPE\n-  #107 = Integer            127\n-  #108 = Utf8               MAX_SKIPPABLE_TYPE\n-  #109 = Integer            253\n-  #110 = Utf8               SZ_SIGNATURE\n-  #111 = Utf8               [B\n-  #112 = Utf8               unreadBytes\n-  #113 = Utf8               countingStream\n-  #114 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #115 = Utf8               inputStream\n-  #116 = Utf8               Ljava/io/PushbackInputStream;\n-  #117 = Utf8               dialect\n-  #118 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #119 = Utf8               currentCompressedChunk\n-  #120 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-  #121 = Utf8               oneByte\n-  #122 = Utf8               endReached\n-  #123 = Utf8               Z\n-  #124 = Utf8               inUncompressedChunk\n-  #125 = Utf8               uncompressedBytesRemaining\n-  #126 = Utf8               expectedChecksum\n-  #127 = Utf8               blockSize\n-  #128 = Utf8               checksum\n-  #129 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-  #130 = Utf8               supplier\n-  #131 = Class              #254          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #132 = Utf8               ByteSupplier\n-  #133 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #134 = Utf8               <init>\n-  #135 = Utf8               (Ljava/io/InputStream;)V\n-  #136 = Utf8               Code\n-  #137 = Utf8               LineNumberTable\n-  #138 = Utf8               Exceptions\n-  #139 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #140 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #141 = Utf8               StackMapTable\n-  #142 = Class              #255          // java/io/InputStream\n-  #143 = Class              #256          // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n-  #144 = Utf8               read\n-  #145 = Utf8               ()I\n-  #146 = Utf8               close\n-  #147 = Utf8               ()V\n-  #148 = Class              #257          // java/lang/Throwable\n-  #149 = Utf8               ([BII)I\n-  #150 = Utf8               available\n-  #151 = Utf8               getCompressedCount\n-  #152 = Utf8               ()J\n-  #153 = Utf8               readOnce\n-  #154 = Utf8               readNextBlock\n-  #155 = Utf8               readCrc\n-  #156 = Class              #111          // \"[B\"\n-  #157 = Utf8               unmask\n-  #158 = Utf8               (J)J\n-  #159 = Utf8               readSize\n-  #160 = Utf8               skipBlock\n-  #161 = Utf8               readStreamIdentifier\n-  #162 = Utf8               readOneByte\n-  #163 = Utf8               verifyLastChecksumAndReset\n-  #164 = Utf8               matches\n-  #165 = Utf8               ([BI)Z\n-  #166 = Utf8               access$000\n-  #167 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)I\n-  #168 = Utf8               <clinit>\n-  #169 = Utf8               SourceFile\n-  #170 = Utf8               FramedSnappyCompressorInputStream.java\n-  #171 = NameAndType        #162:#145     // readOneByte:()I\n-  #172 = NameAndType        #258:#118     // STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #173 = NameAndType        #134:#139     // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #174 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #175 = NameAndType        #134:#140     // \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #176 = NameAndType        #134:#147     // \"<init>\":()V\n-  #177 = NameAndType        #121:#111     // oneByte:[B\n-  #178 = NameAndType        #126:#93      // expectedChecksum:J\n-  #179 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-  #180 = NameAndType        #128:#129     // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-  #181 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n-  #182 = NameAndType        #134:#259     // \"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n-  #183 = NameAndType        #130:#133     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #184 = Utf8               java/lang/IllegalArgumentException\n-  #185 = Utf8               blockSize must be bigger than 0\n-  #186 = NameAndType        #134:#260     // \"<init>\":(Ljava/lang/String;)V\n-  #187 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #188 = NameAndType        #134:#135     // \"<init>\":(Ljava/io/InputStream;)V\n-  #189 = NameAndType        #113:#114     // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #190 = Utf8               java/io/PushbackInputStream\n-  #191 = NameAndType        #134:#261     // \"<init>\":(Ljava/io/InputStream;I)V\n-  #192 = NameAndType        #115:#116     // inputStream:Ljava/io/PushbackInputStream;\n-  #193 = NameAndType        #127:#96      // blockSize:I\n-  #194 = NameAndType        #117:#118     // dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #195 = NameAndType        #262:#263     // hasStreamIdentifier:()Z\n-  #196 = NameAndType        #161:#147     // readStreamIdentifier:()V\n-  #197 = NameAndType        #144:#149     // read:([BII)I\n-  #198 = NameAndType        #119:#120     // currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-  #199 = NameAndType        #146:#147     // close:()V\n-  #200 = NameAndType        #153:#149     // readOnce:([BII)I\n-  #201 = NameAndType        #154:#147     // readNextBlock:()V\n-  #202 = NameAndType        #122:#123     // endReached:Z\n-  #203 = NameAndType        #124:#123     // inUncompressedChunk:Z\n-  #204 = NameAndType        #125:#96      // uncompressedBytesRemaining:I\n-  #205 = NameAndType        #150:#145     // available:()I\n-  #206 = Class              #264          // java/lang/Math\n-  #207 = NameAndType        #265:#266     // min:(II)I\n-  #208 = NameAndType        #267:#152     // getBytesRead:()J\n-  #209 = NameAndType        #112:#93      // unreadBytes:J\n-  #210 = NameAndType        #268:#269     // count:(I)V\n-  #211 = NameAndType        #268:#270     // count:(J)V\n-  #212 = NameAndType        #271:#272     // update:([BII)V\n-  #213 = NameAndType        #163:#147     // verifyLastChecksumAndReset:()V\n-  #214 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  #215 = NameAndType        #273:#269     // unread:(I)V\n-  #216 = NameAndType        #274:#270     // pushedBackBytes:(J)V\n-  #217 = NameAndType        #160:#147     // skipBlock:()V\n-  #218 = Utf8               java/io/IOException\n-  #219 = Class              #275          // java/lang/Integer\n-  #220 = NameAndType        #276:#277     // toHexString:(I)Ljava/lang/String;\n-  #221 = Utf8               BootstrapMethods\n-  #222 = MethodHandle       6:#278        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #223 = String             #279          // Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n-  #224 = NameAndType        #280:#281     // makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n-  #225 = NameAndType        #159:#145     // readSize:()I\n-  #226 = Utf8               Found illegal chunk with negative size\n-  #227 = NameAndType        #155:#152     // readCrc:()J\n-  #228 = NameAndType        #157:#158     // unmask:(J)J\n-  #229 = NameAndType        #282:#263     // usesChecksumWithCompressedChunks:()Z\n-  #230 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #231 = NameAndType        #134:#283     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #232 = String             #284          // Unknown chunk type \\u0001 detected.\n-  #233 = NameAndType        #280:#277     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #234 = Class              #285          // org/apache/commons/compress/utils/IOUtils\n-  #235 = NameAndType        #286:#287     // readFully:(Ljava/io/InputStream;[B)I\n-  #236 = Utf8               Premature end of stream\n-  #237 = Class              #288          // org/apache/commons/compress/utils/ByteUtils\n-  #238 = NameAndType        #289:#290     // fromLittleEndian:([B)J\n-  #239 = NameAndType        #289:#291     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #240 = NameAndType        #292:#293     // skip:(Ljava/io/InputStream;J)J\n-  #241 = NameAndType        #164:#165     // matches:([BI)Z\n-  #242 = Utf8               Not a framed Snappy stream\n-  #243 = NameAndType        #144:#145     // read:()I\n-  #244 = NameAndType        #294:#152     // getValue:()J\n-  #245 = Utf8               Checksum verification failed\n-  #246 = NameAndType        #295:#147     // reset:()V\n-  #247 = NameAndType        #110:#111     // SZ_SIGNATURE:[B\n-  #248 = Class              #296          // java/lang/System\n-  #249 = NameAndType        #297:#298     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #250 = Class              #299          // java/util/Arrays\n-  #251 = NameAndType        #300:#301     // equals:([B[B)Z\n-  #252 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #253 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #254 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #255 = Utf8               java/io/InputStream\n-  #256 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n-  #257 = Utf8               java/lang/Throwable\n-  #258 = Utf8               STANDARD\n-  #259 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n-  #260 = Utf8               (Ljava/lang/String;)V\n-  #261 = Utf8               (Ljava/io/InputStream;I)V\n-  #262 = Utf8               hasStreamIdentifier\n-  #263 = Utf8               ()Z\n-  #264 = Utf8               java/lang/Math\n-  #265 = Utf8               min\n-  #266 = Utf8               (II)I\n-  #267 = Utf8               getBytesRead\n-  #268 = Utf8               count\n-  #269 = Utf8               (I)V\n-  #270 = Utf8               (J)V\n-  #271 = Utf8               update\n-  #272 = Utf8               ([BII)V\n-  #273 = Utf8               unread\n-  #274 = Utf8               pushedBackBytes\n-  #275 = Utf8               java/lang/Integer\n-  #276 = Utf8               toHexString\n-  #277 = Utf8               (I)Ljava/lang/String;\n-  #278 = Methodref          #302.#303     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #279 = Utf8               Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n-  #280 = Utf8               makeConcatWithConstants\n-  #281 = Utf8               (ILjava/lang/String;)Ljava/lang/String;\n-  #282 = Utf8               usesChecksumWithCompressedChunks\n-  #283 = Utf8               (Ljava/io/InputStream;J)V\n-  #284 = Utf8               Unknown chunk type \\u0001 detected.\n-  #285 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #286 = Utf8               readFully\n-  #287 = Utf8               (Ljava/io/InputStream;[B)I\n-  #288 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #289 = Utf8               fromLittleEndian\n-  #290 = Utf8               ([B)J\n-  #291 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #292 = Utf8               skip\n-  #293 = Utf8               (Ljava/io/InputStream;J)J\n-  #294 = Utf8               getValue\n-  #295 = Utf8               reset\n-  #296 = Utf8               java/lang/System\n-  #297 = Utf8               arraycopy\n-  #298 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #299 = Utf8               java/util/Arrays\n-  #300 = Utf8               equals\n-  #301 = Utf8               ([B[B)Z\n-  #302 = Class              #304          // java/lang/invoke/StringConcatFactory\n-  #303 = NameAndType        #280:#307     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #304 = Utf8               java/lang/invoke/StringConcatFactory\n-  #305 = Class              #309          // java/lang/invoke/MethodHandles$Lookup\n-  #306 = Utf8               Lookup\n-  #307 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #308 = Class              #310          // java/lang/invoke/MethodHandles\n-  #309 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #310 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+    #3 = NameAndType        #5:#6         // readOneByte:()I\n+    #4 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+    #5 = Utf8               readOneByte\n+    #6 = Utf8               ()I\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n+    #9 = NameAndType        #11:#12       // STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #10 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n+   #11 = Utf8               STANDARD\n+   #12 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #13 = Methodref          #2.#14        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #14 = NameAndType        #15:#16       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #17 = Class              #18           // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #18 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #19 = Integer            32768\n+   #20 = Methodref          #2.#21        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #21 = NameAndType        #15:#22       // \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #22 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #23 = Methodref          #24.#25       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #24 = Class              #26           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #25 = NameAndType        #15:#27       // \"<init>\":()V\n+   #26 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #27 = Utf8               ()V\n+   #28 = Fieldref           #2.#29        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.oneByte:[B\n+   #29 = NameAndType        #30:#31       // oneByte:[B\n+   #30 = Utf8               oneByte\n+   #31 = Utf8               [B\n+   #32 = Long               -1l\n+   #34 = Fieldref           #2.#35        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.expectedChecksum:J\n+   #35 = NameAndType        #36:#37       // expectedChecksum:J\n+   #36 = Utf8               expectedChecksum\n+   #37 = Utf8               J\n+   #38 = Class              #39           // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #39 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #40 = Methodref          #38.#25       // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+   #41 = Fieldref           #2.#42        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #42 = NameAndType        #43:#44       // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #43 = Utf8               checksum\n+   #44 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #45 = Class              #46           // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n+   #46 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n+   #47 = Methodref          #45.#48       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n+   #48 = NameAndType        #15:#49       // \"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n+   #49 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n+   #50 = Fieldref           #2.#51        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #51 = NameAndType        #52:#53       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #52 = Utf8               supplier\n+   #53 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #54 = Class              #55           // java/lang/IllegalArgumentException\n+   #55 = Utf8               java/lang/IllegalArgumentException\n+   #56 = String             #57           // blockSize must be bigger than 0\n+   #57 = Utf8               blockSize must be bigger than 0\n+   #58 = Methodref          #54.#59       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = NameAndType        #15:#60       // \"<init>\":(Ljava/lang/String;)V\n+   #60 = Utf8               (Ljava/lang/String;)V\n+   #61 = Class              #62           // org/apache/commons/compress/utils/CountingInputStream\n+   #62 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #63 = Methodref          #61.#64       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #64 = NameAndType        #15:#65       // \"<init>\":(Ljava/io/InputStream;)V\n+   #65 = Utf8               (Ljava/io/InputStream;)V\n+   #66 = Fieldref           #2.#67        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #67 = NameAndType        #68:#69       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #68 = Utf8               countingStream\n+   #69 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #70 = Class              #71           // java/io/PushbackInputStream\n+   #71 = Utf8               java/io/PushbackInputStream\n+   #72 = Methodref          #70.#73       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #73 = NameAndType        #15:#74       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #74 = Utf8               (Ljava/io/InputStream;I)V\n+   #75 = Fieldref           #2.#76        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inputStream:Ljava/io/PushbackInputStream;\n+   #76 = NameAndType        #77:#78       // inputStream:Ljava/io/PushbackInputStream;\n+   #77 = Utf8               inputStream\n+   #78 = Utf8               Ljava/io/PushbackInputStream;\n+   #79 = Fieldref           #2.#80        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.blockSize:I\n+   #80 = NameAndType        #81:#82       // blockSize:I\n+   #81 = Utf8               blockSize\n+   #82 = Utf8               I\n+   #83 = Fieldref           #2.#84        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #84 = NameAndType        #85:#12       // dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #85 = Utf8               dialect\n+   #86 = Methodref          #8.#87        // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n+   #87 = NameAndType        #88:#89       // hasStreamIdentifier:()Z\n+   #88 = Utf8               hasStreamIdentifier\n+   #89 = Utf8               ()Z\n+   #90 = Methodref          #2.#91        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readStreamIdentifier:()V\n+   #91 = NameAndType        #92:#27       // readStreamIdentifier:()V\n+   #92 = Utf8               readStreamIdentifier\n+   #93 = Methodref          #2.#94        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.read:([BII)I\n+   #94 = NameAndType        #95:#96       // read:([BII)I\n+   #95 = Utf8               read\n+   #96 = Utf8               ([BII)I\n+   #97 = Fieldref           #2.#98        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+   #98 = NameAndType        #99:#100      // currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+   #99 = Utf8               currentCompressedChunk\n+  #100 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+  #101 = Methodref          #17.#102      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+  #102 = NameAndType        #103:#27      // close:()V\n+  #103 = Utf8               close\n+  #104 = Methodref          #70.#102      // java/io/PushbackInputStream.close:()V\n+  #105 = Methodref          #2.#106       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOnce:([BII)I\n+  #106 = NameAndType        #107:#96      // readOnce:([BII)I\n+  #107 = Utf8               readOnce\n+  #108 = Methodref          #2.#109       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readNextBlock:()V\n+  #109 = NameAndType        #110:#27      // readNextBlock:()V\n+  #110 = Utf8               readNextBlock\n+  #111 = Fieldref           #2.#112       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.endReached:Z\n+  #112 = NameAndType        #113:#114     // endReached:Z\n+  #113 = Utf8               endReached\n+  #114 = Utf8               Z\n+  #115 = Fieldref           #2.#116       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inUncompressedChunk:Z\n+  #116 = NameAndType        #117:#114     // inUncompressedChunk:Z\n+  #117 = Utf8               inUncompressedChunk\n+  #118 = Fieldref           #2.#119       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.uncompressedBytesRemaining:I\n+  #119 = NameAndType        #120:#82      // uncompressedBytesRemaining:I\n+  #120 = Utf8               uncompressedBytesRemaining\n+  #121 = Methodref          #70.#122      // java/io/PushbackInputStream.available:()I\n+  #122 = NameAndType        #123:#6       // available:()I\n+  #123 = Utf8               available\n+  #124 = Methodref          #125.#126     // java/lang/Math.min:(II)I\n+  #125 = Class              #127          // java/lang/Math\n+  #126 = NameAndType        #128:#129     // min:(II)I\n+  #127 = Utf8               java/lang/Math\n+  #128 = Utf8               min\n+  #129 = Utf8               (II)I\n+  #130 = Methodref          #17.#122      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n+  #131 = Methodref          #61.#132      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #132 = NameAndType        #133:#134     // getBytesRead:()J\n+  #133 = Utf8               getBytesRead\n+  #134 = Utf8               ()J\n+  #135 = Fieldref           #2.#136       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unreadBytes:J\n+  #136 = NameAndType        #137:#37      // unreadBytes:J\n+  #137 = Utf8               unreadBytes\n+  #138 = Methodref          #70.#94       // java/io/PushbackInputStream.read:([BII)I\n+  #139 = Methodref          #2.#140       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(I)V\n+  #140 = NameAndType        #141:#142     // count:(I)V\n+  #141 = Utf8               count\n+  #142 = Utf8               (I)V\n+  #143 = Methodref          #17.#132      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+  #144 = Methodref          #17.#94       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n+  #145 = Methodref          #2.#146       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(J)V\n+  #146 = NameAndType        #141:#147     // count:(J)V\n+  #147 = Utf8               (J)V\n+  #148 = Methodref          #38.#149      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+  #149 = NameAndType        #150:#151     // update:([BII)V\n+  #150 = Utf8               update\n+  #151 = Utf8               ([BII)V\n+  #152 = Methodref          #2.#153       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.verifyLastChecksumAndReset:()V\n+  #153 = NameAndType        #154:#27      // verifyLastChecksumAndReset:()V\n+  #154 = Utf8               verifyLastChecksumAndReset\n+  #155 = Methodref          #70.#156      // java/io/PushbackInputStream.unread:(I)V\n+  #156 = NameAndType        #157:#142     // unread:(I)V\n+  #157 = Utf8               unread\n+  #158 = Methodref          #2.#159       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.pushedBackBytes:(J)V\n+  #159 = NameAndType        #160:#147     // pushedBackBytes:(J)V\n+  #160 = Utf8               pushedBackBytes\n+  #161 = Methodref          #2.#162       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.skipBlock:()V\n+  #162 = NameAndType        #163:#27      // skipBlock:()V\n+  #163 = Utf8               skipBlock\n+  #164 = Class              #165          // java/io/IOException\n+  #165 = Utf8               java/io/IOException\n+  #166 = Methodref          #167.#168     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #167 = Class              #169          // java/lang/Integer\n+  #168 = NameAndType        #170:#171     // toHexString:(I)Ljava/lang/String;\n+  #169 = Utf8               java/lang/Integer\n+  #170 = Utf8               toHexString\n+  #171 = Utf8               (I)Ljava/lang/String;\n+  #172 = InvokeDynamic      #0:#173       // #0:makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n+  #173 = NameAndType        #174:#175     // makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n+  #174 = Utf8               makeConcatWithConstants\n+  #175 = Utf8               (ILjava/lang/String;)Ljava/lang/String;\n+  #176 = Methodref          #164.#59      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #177 = Methodref          #2.#178       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readSize:()I\n+  #178 = NameAndType        #179:#6       // readSize:()I\n+  #179 = Utf8               readSize\n+  #180 = String             #181          // Found illegal chunk with negative size\n+  #181 = Utf8               Found illegal chunk with negative size\n+  #182 = Methodref          #2.#183       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readCrc:()J\n+  #183 = NameAndType        #184:#134     // readCrc:()J\n+  #184 = Utf8               readCrc\n+  #185 = Methodref          #2.#186       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unmask:(J)J\n+  #186 = NameAndType        #187:#188     // unmask:(J)J\n+  #187 = Utf8               unmask\n+  #188 = Utf8               (J)J\n+  #189 = Methodref          #8.#190       // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n+  #190 = NameAndType        #191:#89      // usesChecksumWithCompressedChunks:()Z\n+  #191 = Utf8               usesChecksumWithCompressedChunks\n+  #192 = Long               4l\n+  #194 = Class              #195          // org/apache/commons/compress/utils/BoundedInputStream\n+  #195 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #196 = Methodref          #194.#197     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #197 = NameAndType        #15:#198      // \"<init>\":(Ljava/io/InputStream;J)V\n+  #198 = Utf8               (Ljava/io/InputStream;J)V\n+  #199 = Methodref          #17.#73       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+  #200 = InvokeDynamic      #1:#201       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #201 = NameAndType        #174:#171     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #202 = Methodref          #203.#204     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #203 = Class              #205          // org/apache/commons/compress/utils/IOUtils\n+  #204 = NameAndType        #206:#207     // readFully:(Ljava/io/InputStream;[B)I\n+  #205 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #206 = Utf8               readFully\n+  #207 = Utf8               (Ljava/io/InputStream;[B)I\n+  #208 = String             #209          // Premature end of stream\n+  #209 = Utf8               Premature end of stream\n+  #210 = Methodref          #211.#212     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #211 = Class              #213          // org/apache/commons/compress/utils/ByteUtils\n+  #212 = NameAndType        #214:#215     // fromLittleEndian:([B)J\n+  #213 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #214 = Utf8               fromLittleEndian\n+  #215 = Utf8               ([B)J\n+  #216 = Long               2726488792l\n+  #218 = Long               4294967295l\n+  #220 = Methodref          #211.#221     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #221 = NameAndType        #214:#222     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #222 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #223 = Methodref          #203.#224     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #224 = NameAndType        #225:#226     // skip:(Ljava/io/InputStream;J)J\n+  #225 = Utf8               skip\n+  #226 = Utf8               (Ljava/io/InputStream;J)J\n+  #227 = Methodref          #2.#228       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n+  #228 = NameAndType        #229:#230     // matches:([BI)Z\n+  #229 = Utf8               matches\n+  #230 = Utf8               ([BI)Z\n+  #231 = String             #232          // Not a framed Snappy stream\n+  #232 = Utf8               Not a framed Snappy stream\n+  #233 = Methodref          #70.#234      // java/io/PushbackInputStream.read:()I\n+  #234 = NameAndType        #95:#6        // read:()I\n+  #235 = Methodref          #38.#236      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+  #236 = NameAndType        #237:#134     // getValue:()J\n+  #237 = Utf8               getValue\n+  #238 = String             #239          // Checksum verification failed\n+  #239 = Utf8               Checksum verification failed\n+  #240 = Methodref          #38.#241      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+  #241 = NameAndType        #242:#27      // reset:()V\n+  #242 = Utf8               reset\n+  #243 = Fieldref           #2.#244       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n+  #244 = NameAndType        #245:#31      // SZ_SIGNATURE:[B\n+  #245 = Utf8               SZ_SIGNATURE\n+  #246 = Methodref          #247.#248     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #247 = Class              #249          // java/lang/System\n+  #248 = NameAndType        #250:#251     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #249 = Utf8               java/lang/System\n+  #250 = Utf8               arraycopy\n+  #251 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #252 = Methodref          #253.#254     // java/util/Arrays.equals:([B[B)Z\n+  #253 = Class              #255          // java/util/Arrays\n+  #254 = NameAndType        #256:#257     // equals:([B[B)Z\n+  #255 = Utf8               java/util/Arrays\n+  #256 = Utf8               equals\n+  #257 = Utf8               ([B[B)Z\n+  #258 = Class              #259          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #259 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #260 = Utf8               MASK_OFFSET\n+  #261 = Utf8               ConstantValue\n+  #262 = Utf8               STREAM_IDENTIFIER_TYPE\n+  #263 = Integer            255\n+  #264 = Utf8               COMPRESSED_CHUNK_TYPE\n+  #265 = Integer            0\n+  #266 = Utf8               UNCOMPRESSED_CHUNK_TYPE\n+  #267 = Integer            1\n+  #268 = Utf8               PADDING_CHUNK_TYPE\n+  #269 = Integer            254\n+  #270 = Utf8               MIN_UNSKIPPABLE_TYPE\n+  #271 = Integer            2\n+  #272 = Utf8               MAX_UNSKIPPABLE_TYPE\n+  #273 = Integer            127\n+  #274 = Utf8               MAX_SKIPPABLE_TYPE\n+  #275 = Integer            253\n+  #276 = Utf8               Code\n+  #277 = Utf8               LineNumberTable\n+  #278 = Utf8               Exceptions\n+  #279 = Utf8               StackMapTable\n+  #280 = Class              #281          // java/io/InputStream\n+  #281 = Utf8               java/io/InputStream\n+  #282 = Class              #283          // java/lang/Throwable\n+  #283 = Utf8               java/lang/Throwable\n+  #284 = Utf8               getCompressedCount\n+  #285 = Class              #31           // \"[B\"\n+  #286 = Utf8               access$000\n+  #287 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)I\n+  #288 = Utf8               <clinit>\n+  #289 = Utf8               SourceFile\n+  #290 = Utf8               FramedSnappyCompressorInputStream.java\n+  #291 = Utf8               BootstrapMethods\n+  #292 = MethodHandle       6:#293        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #293 = Methodref          #294.#295     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #294 = Class              #296          // java/lang/invoke/StringConcatFactory\n+  #295 = NameAndType        #174:#297     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #296 = Utf8               java/lang/invoke/StringConcatFactory\n+  #297 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #298 = String             #299          // Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n+  #299 = Utf8               Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n+  #300 = String             #301          // Unknown chunk type \\u0001 detected.\n+  #301 = Utf8               Unknown chunk type \\u0001 detected.\n+  #302 = Utf8               InnerClasses\n+  #303 = Class              #304          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #304 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #305 = Utf8               ByteSupplier\n+  #306 = Class              #307          // java/lang/invoke/MethodHandles$Lookup\n+  #307 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #308 = Class              #309          // java/lang/invoke/MethodHandles\n+  #309 = Utf8               java/lang/invoke/MethodHandles\n+  #310 = Utf8               Lookup\n {\n   static final long MASK_OFFSET = 2726488792l;\n     descriptor: J\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2726488792l\n \n   private static final int STREAM_IDENTIFIER_TYPE = 255;\n@@ -414,97 +414,97 @@\n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #2                  // Field org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-         5: invokespecial #3                  // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+         2: getstatic     #7                  // Field org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+         5: invokespecial #13                 // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n          8: return\n       LineNumberTable:\n         line 100: 0\n         line 101: 8\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream(java.io.InputStream, org.apache.commons.compress.compressors.snappy.FramedSnappyDialect) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: ldc           #5                  // int 32768\n+         2: ldc           #19                 // int 32768\n          4: aload_2\n-         5: invokespecial #6                  // Method \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+         5: invokespecial #20                 // Method \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n          8: return\n       LineNumberTable:\n         line 113: 0\n         line 114: 8\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream(java.io.InputStream, int, org.apache.commons.compress.compressors.snappy.FramedSnappyDialect) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #7                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #23                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #8                  // Field oneByte:[B\n+         8: putfield      #28                 // Field oneByte:[B\n         11: aload_0\n-        12: ldc2_w        #9                  // long -1l\n-        15: putfield      #11                 // Field expectedChecksum:J\n+        12: ldc2_w        #32                 // long -1l\n+        15: putfield      #34                 // Field expectedChecksum:J\n         18: aload_0\n-        19: new           #12                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+        19: new           #38                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n         22: dup\n-        23: invokespecial #13                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-        26: putfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        23: invokespecial #40                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+        26: putfield      #41                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n         29: aload_0\n-        30: new           #15                 // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n+        30: new           #45                 // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n         33: dup\n         34: aload_0\n-        35: invokespecial #16                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n-        38: putfield      #17                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        35: invokespecial #47                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)V\n+        38: putfield      #50                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         41: iload_2\n         42: ifgt          55\n-        45: new           #18                 // class java/lang/IllegalArgumentException\n+        45: new           #54                 // class java/lang/IllegalArgumentException\n         48: dup\n-        49: ldc           #19                 // String blockSize must be bigger than 0\n-        51: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        49: ldc           #56                 // String blockSize must be bigger than 0\n+        51: invokespecial #58                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         54: athrow\n         55: aload_0\n-        56: new           #21                 // class org/apache/commons/compress/utils/CountingInputStream\n+        56: new           #61                 // class org/apache/commons/compress/utils/CountingInputStream\n         59: dup\n         60: aload_1\n-        61: invokespecial #22                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        64: putfield      #23                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        61: invokespecial #63                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        64: putfield      #66                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         67: aload_0\n-        68: new           #24                 // class java/io/PushbackInputStream\n+        68: new           #70                 // class java/io/PushbackInputStream\n         71: dup\n         72: aload_0\n-        73: getfield      #23                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        73: getfield      #66                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: iconst_1\n-        77: invokespecial #25                 // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-        80: putfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        77: invokespecial #72                 // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+        80: putfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n         83: aload_0\n         84: iload_2\n-        85: putfield      #27                 // Field blockSize:I\n+        85: putfield      #79                 // Field blockSize:I\n         88: aload_0\n         89: aload_3\n-        90: putfield      #28                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+        90: putfield      #83                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n         93: aload_3\n-        94: invokevirtual #29                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n+        94: invokevirtual #86                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n         97: ifeq          104\n        100: aload_0\n-       101: invokespecial #30                 // Method readStreamIdentifier:()V\n+       101: invokespecial #90                 // Method readStreamIdentifier:()V\n        104: return\n       LineNumberTable:\n         line 129: 0\n         line 76: 4\n         line 81: 11\n         line 83: 18\n         line 85: 29\n@@ -529,24 +529,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field oneByte:[B\n+         2: getfield      #28                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #31                 // Method read:([BII)I\n+         7: invokevirtual #93                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #8                  // Field oneByte:[B\n+        19: getfield      #28                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 145: 0\n@@ -559,30 +559,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+         1: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        11: invokevirtual #33                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+         8: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        11: invokevirtual #101                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        16: putfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         19: aload_0\n-        20: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        23: invokevirtual #34                 // Method java/io/PushbackInputStream.close:()V\n+        20: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        23: invokevirtual #104                // Method java/io/PushbackInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        34: invokevirtual #34                 // Method java/io/PushbackInputStream.close:()V\n+        31: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        34: invokevirtual #104                // Method java/io/PushbackInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -611,31 +611,31 @@\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n          8: iload_2\n          9: iload_3\n-        10: invokespecial #35                 // Method readOnce:([BII)I\n+        10: invokespecial #105                // Method readOnce:([BII)I\n         13: istore        4\n         15: iload         4\n         17: iconst_m1\n         18: if_icmpne     43\n         21: aload_0\n-        22: invokespecial #36                 // Method readNextBlock:()V\n+        22: invokespecial #108                // Method readNextBlock:()V\n         25: aload_0\n-        26: getfield      #37                 // Field endReached:Z\n+        26: getfield      #111                // Field endReached:Z\n         29: ifeq          34\n         32: iconst_m1\n         33: ireturn\n         34: aload_0\n         35: aload_1\n         36: iload_2\n         37: iload_3\n-        38: invokespecial #35                 // Method readOnce:([BII)I\n+        38: invokespecial #105                // Method readOnce:([BII)I\n         41: istore        4\n         43: iload         4\n         45: ireturn\n       LineNumberTable:\n         line 164: 0\n         line 165: 4\n         line 167: 6\n@@ -656,29 +656,29 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field inUncompressedChunk:Z\n+         1: getfield      #115                // Field inUncompressedChunk:Z\n          4: ifeq          22\n          7: aload_0\n-         8: getfield      #39                 // Field uncompressedBytesRemaining:I\n+         8: getfield      #118                // Field uncompressedBytesRemaining:I\n         11: aload_0\n-        12: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        15: invokevirtual #40                 // Method java/io/PushbackInputStream.available:()I\n-        18: invokestatic  #41                 // Method java/lang/Math.min:(II)I\n+        12: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        15: invokevirtual #121                // Method java/io/PushbackInputStream.available:()I\n+        18: invokestatic  #124                // Method java/lang/Math.min:(II)I\n         21: ireturn\n         22: aload_0\n-        23: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        23: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         26: ifnull        37\n         29: aload_0\n-        30: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        33: invokevirtual #42                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n+        30: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        33: invokevirtual #130                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n         36: ireturn\n         37: iconst_0\n         38: ireturn\n       LineNumberTable:\n         line 181: 0\n         line 182: 7\n         line 183: 15\n@@ -694,101 +694,101 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #43                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #66                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #131                // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: aload_0\n-         8: getfield      #44                 // Field unreadBytes:J\n+         8: getfield      #135                // Field unreadBytes:J\n         11: lsub\n         12: lreturn\n       LineNumberTable:\n         line 195: 0\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=4\n          0: iconst_m1\n          1: istore        4\n          3: aload_0\n-         4: getfield      #38                 // Field inUncompressedChunk:Z\n+         4: getfield      #115                // Field inUncompressedChunk:Z\n          7: ifeq          66\n         10: aload_0\n-        11: getfield      #39                 // Field uncompressedBytesRemaining:I\n+        11: getfield      #118                // Field uncompressedBytesRemaining:I\n         14: iload_3\n-        15: invokestatic  #41                 // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #124                // Method java/lang/Math.min:(II)I\n         18: istore        5\n         20: iload         5\n         22: ifne          27\n         25: iconst_m1\n         26: ireturn\n         27: aload_0\n-        28: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        28: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n         31: aload_1\n         32: iload_2\n         33: iload         5\n-        35: invokevirtual #45                 // Method java/io/PushbackInputStream.read:([BII)I\n+        35: invokevirtual #138                // Method java/io/PushbackInputStream.read:([BII)I\n         38: istore        4\n         40: iload         4\n         42: iconst_m1\n         43: if_icmpeq     63\n         46: aload_0\n         47: dup\n-        48: getfield      #39                 // Field uncompressedBytesRemaining:I\n+        48: getfield      #118                // Field uncompressedBytesRemaining:I\n         51: iload         4\n         53: isub\n-        54: putfield      #39                 // Field uncompressedBytesRemaining:I\n+        54: putfield      #118                // Field uncompressedBytesRemaining:I\n         57: aload_0\n         58: iload         4\n-        60: invokevirtual #46                 // Method count:(I)V\n+        60: invokevirtual #139                // Method count:(I)V\n         63: goto          129\n         66: aload_0\n-        67: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        67: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         70: ifnull        129\n         73: aload_0\n-        74: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        77: invokevirtual #47                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+        74: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        77: invokevirtual #143                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n         80: lstore        5\n         82: aload_0\n-        83: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        83: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         86: aload_1\n         87: iload_2\n         88: iload_3\n-        89: invokevirtual #48                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n+        89: invokevirtual #144                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n         92: istore        4\n         94: iload         4\n         96: iconst_m1\n         97: if_icmpne     115\n        100: aload_0\n-       101: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       104: invokevirtual #33                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+       101: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       104: invokevirtual #101                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n        107: aload_0\n        108: aconst_null\n-       109: putfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       109: putfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n        112: goto          129\n        115: aload_0\n        116: aload_0\n-       117: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       120: invokevirtual #47                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+       117: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       120: invokevirtual #143                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n        123: lload         5\n        125: lsub\n-       126: invokevirtual #49                 // Method count:(J)V\n+       126: invokevirtual #145                // Method count:(J)V\n        129: iload         4\n        131: ifle          145\n        134: aload_0\n-       135: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+       135: getfield      #41                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n        138: aload_1\n        139: iload_2\n        140: iload         4\n-       142: invokevirtual #50                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+       142: invokevirtual #148                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n        145: iload         4\n        147: ireturn\n       LineNumberTable:\n         line 206: 0\n         line 207: 3\n         line 208: 10\n         line 209: 20\n@@ -825,163 +825,163 @@\n \n   private void readNextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=8, locals=5, args_size=1\n          0: aload_0\n-         1: invokespecial #51                 // Method verifyLastChecksumAndReset:()V\n+         1: invokespecial #152                // Method verifyLastChecksumAndReset:()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #38                 // Field inUncompressedChunk:Z\n+         6: putfield      #115                // Field inUncompressedChunk:Z\n          9: aload_0\n         10: invokespecial #1                  // Method readOneByte:()I\n         13: istore_1\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpne     27\n         19: aload_0\n         20: iconst_1\n-        21: putfield      #37                 // Field endReached:Z\n+        21: putfield      #111                // Field endReached:Z\n         24: goto          305\n         27: iload_1\n         28: sipush        255\n         31: if_icmpne     68\n         34: aload_0\n-        35: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        35: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n         38: iload_1\n-        39: invokevirtual #53                 // Method java/io/PushbackInputStream.unread:(I)V\n+        39: invokevirtual #155                // Method java/io/PushbackInputStream.unread:(I)V\n         42: aload_0\n         43: dup\n-        44: getfield      #44                 // Field unreadBytes:J\n+        44: getfield      #135                // Field unreadBytes:J\n         47: lconst_1\n         48: ladd\n-        49: putfield      #44                 // Field unreadBytes:J\n+        49: putfield      #135                // Field unreadBytes:J\n         52: aload_0\n         53: lconst_1\n-        54: invokevirtual #54                 // Method pushedBackBytes:(J)V\n+        54: invokevirtual #158                // Method pushedBackBytes:(J)V\n         57: aload_0\n-        58: invokespecial #30                 // Method readStreamIdentifier:()V\n+        58: invokespecial #90                 // Method readStreamIdentifier:()V\n         61: aload_0\n-        62: invokespecial #36                 // Method readNextBlock:()V\n+        62: invokespecial #108                // Method readNextBlock:()V\n         65: goto          305\n         68: iload_1\n         69: sipush        254\n         72: if_icmpeq     88\n         75: iload_1\n         76: bipush        127\n         78: if_icmple     99\n         81: iload_1\n         82: sipush        253\n         85: if_icmpgt     99\n         88: aload_0\n-        89: invokespecial #55                 // Method skipBlock:()V\n+        89: invokespecial #161                // Method skipBlock:()V\n         92: aload_0\n-        93: invokespecial #36                 // Method readNextBlock:()V\n+        93: invokespecial #108                // Method readNextBlock:()V\n         96: goto          305\n         99: iload_1\n        100: iconst_2\n        101: if_icmplt     128\n        104: iload_1\n        105: bipush        127\n        107: if_icmpgt     128\n-       110: new           #56                 // class java/io/IOException\n+       110: new           #164                // class java/io/IOException\n        113: dup\n        114: iload_1\n        115: iload_1\n-       116: invokestatic  #57                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-       119: invokedynamic #58,  0             // InvokeDynamic #0:makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n-       124: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       116: invokestatic  #166                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+       119: invokedynamic #172,  0            // InvokeDynamic #0:makeConcatWithConstants:(ILjava/lang/String;)Ljava/lang/String;\n+       124: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        127: athrow\n        128: iload_1\n        129: iconst_1\n        130: if_icmpne     179\n        133: aload_0\n        134: iconst_1\n-       135: putfield      #38                 // Field inUncompressedChunk:Z\n+       135: putfield      #115                // Field inUncompressedChunk:Z\n        138: aload_0\n        139: aload_0\n-       140: invokespecial #60                 // Method readSize:()I\n+       140: invokespecial #177                // Method readSize:()I\n        143: iconst_4\n        144: isub\n-       145: putfield      #39                 // Field uncompressedBytesRemaining:I\n+       145: putfield      #118                // Field uncompressedBytesRemaining:I\n        148: aload_0\n-       149: getfield      #39                 // Field uncompressedBytesRemaining:I\n+       149: getfield      #118                // Field uncompressedBytesRemaining:I\n        152: ifge          165\n-       155: new           #56                 // class java/io/IOException\n+       155: new           #164                // class java/io/IOException\n        158: dup\n-       159: ldc           #61                 // String Found illegal chunk with negative size\n-       161: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       159: ldc           #180                // String Found illegal chunk with negative size\n+       161: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        164: athrow\n        165: aload_0\n        166: aload_0\n-       167: invokespecial #62                 // Method readCrc:()J\n-       170: invokestatic  #63                 // Method unmask:(J)J\n-       173: putfield      #11                 // Field expectedChecksum:J\n+       167: invokespecial #182                // Method readCrc:()J\n+       170: invokestatic  #185                // Method unmask:(J)J\n+       173: putfield      #34                 // Field expectedChecksum:J\n        176: goto          305\n        179: iload_1\n        180: ifne          291\n        183: aload_0\n-       184: getfield      #28                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-       187: invokevirtual #64                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n+       184: getfield      #83                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+       187: invokevirtual #189                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n        190: istore_2\n        191: aload_0\n-       192: invokespecial #60                 // Method readSize:()I\n+       192: invokespecial #177                // Method readSize:()I\n        195: i2l\n        196: iload_2\n        197: ifeq          206\n-       200: ldc2_w        #65                 // long 4l\n+       200: ldc2_w        #192                // long 4l\n        203: goto          207\n        206: lconst_0\n        207: lsub\n        208: lstore_3\n        209: lload_3\n        210: lconst_0\n        211: lcmp\n        212: ifge          225\n-       215: new           #56                 // class java/io/IOException\n+       215: new           #164                // class java/io/IOException\n        218: dup\n-       219: ldc           #61                 // String Found illegal chunk with negative size\n-       221: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       219: ldc           #180                // String Found illegal chunk with negative size\n+       221: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        224: athrow\n        225: iload_2\n        226: ifeq          243\n        229: aload_0\n        230: aload_0\n-       231: invokespecial #62                 // Method readCrc:()J\n-       234: invokestatic  #63                 // Method unmask:(J)J\n-       237: putfield      #11                 // Field expectedChecksum:J\n+       231: invokespecial #182                // Method readCrc:()J\n+       234: invokestatic  #185                // Method unmask:(J)J\n+       237: putfield      #34                 // Field expectedChecksum:J\n        240: goto          250\n        243: aload_0\n-       244: ldc2_w        #9                  // long -1l\n-       247: putfield      #11                 // Field expectedChecksum:J\n+       244: ldc2_w        #32                 // long -1l\n+       247: putfield      #34                 // Field expectedChecksum:J\n        250: aload_0\n-       251: new           #4                  // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+       251: new           #17                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n        254: dup\n-       255: new           #67                 // class org/apache/commons/compress/utils/BoundedInputStream\n+       255: new           #194                // class org/apache/commons/compress/utils/BoundedInputStream\n        258: dup\n        259: aload_0\n-       260: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+       260: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n        263: lload_3\n-       264: invokespecial #68                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+       264: invokespecial #196                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n        267: aload_0\n-       268: getfield      #27                 // Field blockSize:I\n-       271: invokespecial #69                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-       274: putfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       268: getfield      #79                 // Field blockSize:I\n+       271: invokespecial #199                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+       274: putfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n        277: aload_0\n        278: aload_0\n-       279: getfield      #32                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       282: invokevirtual #47                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n-       285: invokevirtual #49                 // Method count:(J)V\n+       279: getfield      #97                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       282: invokevirtual #143                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+       285: invokevirtual #145                // Method count:(J)V\n        288: goto          305\n-       291: new           #56                 // class java/io/IOException\n+       291: new           #164                // class java/io/IOException\n        294: dup\n        295: iload_1\n-       296: invokedynamic #70,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-       301: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       296: invokedynamic #200,  0            // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+       301: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        304: athrow\n        305: return\n       LineNumberTable:\n         line 234: 0\n         line 235: 4\n         line 236: 9\n         line 237: 14\n@@ -1051,31 +1051,31 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=1\n          0: iconst_4\n          1: newarray       byte\n          3: astore_1\n          4: aload_0\n-         5: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         5: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n          8: aload_1\n-         9: invokestatic  #71                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #202                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore_2\n         13: aload_0\n         14: iload_2\n-        15: invokevirtual #46                 // Method count:(I)V\n+        15: invokevirtual #139                // Method count:(I)V\n         18: iload_2\n         19: iconst_4\n         20: if_icmpeq     33\n-        23: new           #56                 // class java/io/IOException\n+        23: new           #164                // class java/io/IOException\n         26: dup\n-        27: ldc           #72                 // String Premature end of stream\n-        29: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        27: ldc           #208                // String Premature end of stream\n+        29: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: aload_1\n-        34: invokestatic  #73                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        34: invokestatic  #210                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n         37: lreturn\n       LineNumberTable:\n         line 283: 0\n         line 284: 4\n         line 285: 13\n         line 286: 18\n         line 287: 23\n@@ -1089,85 +1089,85 @@\n \n   static long unmask(long);\n     descriptor: (J)J\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: lload_0\n-         1: ldc2_w        #74                 // long 2726488792l\n+         1: ldc2_w        #216                // long 2726488792l\n          4: lsub\n          5: lstore_0\n          6: lload_0\n-         7: ldc2_w        #76                 // long 4294967295l\n+         7: ldc2_w        #218                // long 4294967295l\n         10: land\n         11: lstore_0\n         12: lload_0\n         13: bipush        17\n         15: lshr\n         16: lload_0\n         17: bipush        15\n         19: lshl\n         20: lor\n-        21: ldc2_w        #76                 // long 4294967295l\n+        21: ldc2_w        #218                // long 4294967295l\n         24: land\n         25: lreturn\n       LineNumberTable:\n         line 295: 0\n         line 296: 6\n         line 297: 12\n \n   private int readSize() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         1: getfield      #50                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          4: iconst_3\n-         5: invokestatic  #78                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         5: invokestatic  #220                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n          8: l2i\n          9: ireturn\n       LineNumberTable:\n         line 301: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private void skipBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokespecial #60                 // Method readSize:()I\n+         1: invokespecial #177                // Method readSize:()I\n          4: istore_1\n          5: iload_1\n          6: ifge          19\n-         9: new           #56                 // class java/io/IOException\n+         9: new           #164                // class java/io/IOException\n         12: dup\n-        13: ldc           #61                 // String Found illegal chunk with negative size\n-        15: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #180                // String Found illegal chunk with negative size\n+        15: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_0\n-        20: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        20: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n         23: iload_1\n         24: i2l\n-        25: invokestatic  #79                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        25: invokestatic  #223                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         28: lstore_2\n         29: aload_0\n         30: lload_2\n-        31: invokevirtual #49                 // Method count:(J)V\n+        31: invokevirtual #145                // Method count:(J)V\n         34: lload_2\n         35: iload_1\n         36: i2l\n         37: lcmp\n         38: ifeq          51\n-        41: new           #56                 // class java/io/IOException\n+        41: new           #164                // class java/io/IOException\n         44: dup\n-        45: ldc           #72                 // String Premature end of stream\n-        47: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        45: ldc           #208                // String Premature end of stream\n+        47: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         50: athrow\n         51: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 5\n         line 307: 9\n         line 309: 19\n@@ -1190,32 +1190,32 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=1\n          0: bipush        10\n          2: newarray       byte\n          4: astore_1\n          5: aload_0\n-         6: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         6: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n          9: aload_1\n-        10: invokestatic  #71                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        10: invokestatic  #202                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         13: istore_2\n         14: aload_0\n         15: iload_2\n-        16: invokevirtual #46                 // Method count:(I)V\n+        16: invokevirtual #139                // Method count:(I)V\n         19: bipush        10\n         21: iload_2\n         22: if_icmpne     34\n         25: aload_1\n         26: bipush        10\n-        28: invokestatic  #80                 // Method matches:([BI)Z\n+        28: invokestatic  #227                // Method matches:([BI)Z\n         31: ifne          44\n-        34: new           #56                 // class java/io/IOException\n+        34: new           #164                // class java/io/IOException\n         37: dup\n-        38: ldc           #81                 // String Not a framed Snappy stream\n-        40: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        38: ldc           #231                // String Not a framed Snappy stream\n+        40: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: return\n       LineNumberTable:\n         line 317: 0\n         line 318: 5\n         line 319: 14\n         line 320: 19\n@@ -1231,23 +1231,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field inputStream:Ljava/io/PushbackInputStream;\n-         4: invokevirtual #82                 // Method java/io/PushbackInputStream.read:()I\n+         1: getfield      #75                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         4: invokevirtual #233                // Method java/io/PushbackInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #46                 // Method count:(I)V\n+        15: invokevirtual #139                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1265,36 +1265,36 @@\n \n   private void verifyLastChecksumAndReset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field expectedChecksum:J\n+         1: getfield      #34                 // Field expectedChecksum:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          34\n          9: aload_0\n-        10: getfield      #11                 // Field expectedChecksum:J\n+        10: getfield      #34                 // Field expectedChecksum:J\n         13: aload_0\n-        14: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        17: invokevirtual #83                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+        14: getfield      #41                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        17: invokevirtual #235                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n         20: lcmp\n         21: ifeq          34\n-        24: new           #56                 // class java/io/IOException\n+        24: new           #164                // class java/io/IOException\n         27: dup\n-        28: ldc           #84                 // String Checksum verification failed\n-        30: invokespecial #59                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        28: ldc           #238                // String Checksum verification failed\n+        30: invokespecial #176                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: aload_0\n-        35: ldc2_w        #9                  // long -1l\n-        38: putfield      #11                 // Field expectedChecksum:J\n+        35: ldc2_w        #32                 // long -1l\n+        38: putfield      #34                 // Field expectedChecksum:J\n         41: aload_0\n-        42: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        45: invokevirtual #85                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+        42: getfield      #41                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        45: invokevirtual #240                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n         48: return\n       LineNumberTable:\n         line 335: 0\n         line 336: 24\n         line 338: 34\n         line 339: 41\n         line 340: 48\n@@ -1305,40 +1305,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #86                 // Field SZ_SIGNATURE:[B\n+         1: getstatic     #243                // Field SZ_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #86                 // Field SZ_SIGNATURE:[B\n+        14: getstatic     #243                // Field SZ_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #86                 // Field SZ_SIGNATURE:[B\n+        21: getstatic     #243                // Field SZ_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #86                 // Field SZ_SIGNATURE:[B\n+        32: getstatic     #243                // Field SZ_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #246                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #86                 // Field SZ_SIGNATURE:[B\n-        43: invokestatic  #88                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #243                // Field SZ_SIGNATURE:[B\n+        43: invokestatic  #252                // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 353: 0\n         line 354: 8\n         line 357: 10\n         line 358: 12\n         line 359: 21\n@@ -1406,24 +1406,24 @@\n         44: bipush        8\n         46: bipush        112\n         48: bastore\n         49: dup\n         50: bipush        9\n         52: bipush        89\n         54: bastore\n-        55: putstatic     #86                 // Field SZ_SIGNATURE:[B\n+        55: putstatic     #243                // Field SZ_SIGNATURE:[B\n         58: return\n       LineNumberTable:\n         line 58: 0\n }\n SourceFile: \"FramedSnappyCompressorInputStream.java\"\n-InnerClasses:\n-  #15;                                    // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n-  public static #132= #131 of #237;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #306= #305 of #308; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #222 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #292 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #223 Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n-  1: #222 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #298 Unskippable chunk with type \\u0001 (hex \\u0001) detected.\n+  1: #292 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #232 Unknown chunk type \\u0001 detected.\n+      #300 Unknown chunk type \\u0001 detected.\n+InnerClasses:\n+  #45;                                    // class org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream$1\n+  public static #305= #303 of #211;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #310= #306 of #308; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
