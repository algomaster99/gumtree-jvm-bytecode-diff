{"diffoscope-json-version": 1, "source1": "first/ProxyReader.class", "source2": "second/ProxyReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,101 +1,101 @@\n-  SHA-256 checksum f1e2845002f739793a1e15226025821519191433ac94f688a294435a4cd9b6bc\n+  SHA-256 checksum 01b53840dd01467e84b3d510f665986395f8b27e33fecc3a1ae29f83ea68e60d\n   Compiled from \"ProxyReader.java\"\n public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #20                         // org/apache/commons/io/input/ProxyReader\n-  super_class: #21                        // java/io/FilterReader\n+  this_class: #10                         // org/apache/commons/io/input/ProxyReader\n+  super_class: #4                         // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Class              #49            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #21.#50        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #3 = Fieldref           #20.#51        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n-   #4 = Methodref          #52.#53        // java/io/Reader.close:()V\n-   #5 = Class              #54            // java/io/IOException\n-   #6 = Methodref          #20.#55        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n-   #7 = Methodref          #52.#56        // java/io/Reader.mark:(I)V\n-   #8 = Methodref          #52.#57        // java/io/Reader.markSupported:()Z\n-   #9 = Methodref          #20.#58        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n-  #10 = Methodref          #52.#59        // java/io/Reader.read:()I\n-  #11 = Methodref          #20.#60        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n-  #12 = Methodref          #1.#61         // org/apache/commons/io/IOUtils.length:([C)I\n-  #13 = Methodref          #52.#62        // java/io/Reader.read:([C)I\n-  #14 = Methodref          #52.#63        // java/io/Reader.read:([CII)I\n-  #15 = Methodref          #1.#64         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-  #16 = Methodref          #52.#65        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n-  #17 = Methodref          #52.#66        // java/io/Reader.ready:()Z\n-  #18 = Methodref          #52.#67        // java/io/Reader.reset:()V\n-  #19 = Methodref          #52.#68        // java/io/Reader.skip:(J)J\n-  #20 = Class              #69            // org/apache/commons/io/input/ProxyReader\n-  #21 = Class              #70            // java/io/FilterReader\n-  #22 = Utf8               <init>\n-  #23 = Utf8               (Ljava/io/Reader;)V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               afterRead\n-  #27 = Utf8               (I)V\n-  #28 = Utf8               Exceptions\n-  #29 = Utf8               beforeRead\n-  #30 = Utf8               close\n-  #31 = Utf8               ()V\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               handleIOException\n-  #34 = Utf8               (Ljava/io/IOException;)V\n-  #35 = Utf8               mark\n-  #36 = Utf8               markSupported\n-  #37 = Utf8               ()Z\n-  #38 = Utf8               read\n-  #39 = Utf8               ()I\n-  #40 = Utf8               ([C)I\n-  #41 = Utf8               ([CII)I\n-  #42 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #43 = Utf8               ready\n-  #44 = Utf8               reset\n-  #45 = Utf8               skip\n-  #46 = Utf8               (J)J\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               ProxyReader.java\n-  #49 = Utf8               org/apache/commons/io/IOUtils\n-  #50 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n-  #51 = NameAndType        #71:#72        // in:Ljava/io/Reader;\n-  #52 = Class              #73            // java/io/Reader\n-  #53 = NameAndType        #30:#31        // close:()V\n-  #54 = Utf8               java/io/IOException\n-  #55 = NameAndType        #33:#34        // handleIOException:(Ljava/io/IOException;)V\n-  #56 = NameAndType        #35:#27        // mark:(I)V\n-  #57 = NameAndType        #36:#37        // markSupported:()Z\n-  #58 = NameAndType        #29:#27        // beforeRead:(I)V\n-  #59 = NameAndType        #38:#39        // read:()I\n-  #60 = NameAndType        #26:#27        // afterRead:(I)V\n-  #61 = NameAndType        #74:#40        // length:([C)I\n-  #62 = NameAndType        #38:#40        // read:([C)I\n-  #63 = NameAndType        #38:#41        // read:([CII)I\n-  #64 = NameAndType        #74:#75        // length:(Ljava/lang/CharSequence;)I\n-  #65 = NameAndType        #38:#42        // read:(Ljava/nio/CharBuffer;)I\n-  #66 = NameAndType        #43:#37        // ready:()Z\n-  #67 = NameAndType        #44:#31        // reset:()V\n-  #68 = NameAndType        #45:#46        // skip:(J)J\n-  #69 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #70 = Utf8               java/io/FilterReader\n-  #71 = Utf8               in\n-  #72 = Utf8               Ljava/io/Reader;\n-  #73 = Utf8               java/io/Reader\n-  #74 = Utf8               length\n-  #75 = Utf8               (Ljava/lang/CharSequence;)I\n+   #1 = Class              #2             // org/apache/commons/io/IOUtils\n+   #2 = Utf8               org/apache/commons/io/IOUtils\n+   #3 = Methodref          #4.#5          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #4 = Class              #6             // java/io/FilterReader\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/Reader;)V\n+   #6 = Utf8               java/io/FilterReader\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/Reader;)V\n+   #9 = Fieldref           #10.#11        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n+  #10 = Class              #12            // org/apache/commons/io/input/ProxyReader\n+  #11 = NameAndType        #13:#14        // in:Ljava/io/Reader;\n+  #12 = Utf8               org/apache/commons/io/input/ProxyReader\n+  #13 = Utf8               in\n+  #14 = Utf8               Ljava/io/Reader;\n+  #15 = Methodref          #16.#17        // java/io/Reader.close:()V\n+  #16 = Class              #18            // java/io/Reader\n+  #17 = NameAndType        #19:#20        // close:()V\n+  #18 = Utf8               java/io/Reader\n+  #19 = Utf8               close\n+  #20 = Utf8               ()V\n+  #21 = Class              #22            // java/io/IOException\n+  #22 = Utf8               java/io/IOException\n+  #23 = Methodref          #10.#24        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n+  #24 = NameAndType        #25:#26        // handleIOException:(Ljava/io/IOException;)V\n+  #25 = Utf8               handleIOException\n+  #26 = Utf8               (Ljava/io/IOException;)V\n+  #27 = Methodref          #16.#28        // java/io/Reader.mark:(I)V\n+  #28 = NameAndType        #29:#30        // mark:(I)V\n+  #29 = Utf8               mark\n+  #30 = Utf8               (I)V\n+  #31 = Methodref          #16.#32        // java/io/Reader.markSupported:()Z\n+  #32 = NameAndType        #33:#34        // markSupported:()Z\n+  #33 = Utf8               markSupported\n+  #34 = Utf8               ()Z\n+  #35 = Methodref          #10.#36        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n+  #36 = NameAndType        #37:#30        // beforeRead:(I)V\n+  #37 = Utf8               beforeRead\n+  #38 = Methodref          #16.#39        // java/io/Reader.read:()I\n+  #39 = NameAndType        #40:#41        // read:()I\n+  #40 = Utf8               read\n+  #41 = Utf8               ()I\n+  #42 = Methodref          #10.#43        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n+  #43 = NameAndType        #44:#30        // afterRead:(I)V\n+  #44 = Utf8               afterRead\n+  #45 = Methodref          #1.#46         // org/apache/commons/io/IOUtils.length:([C)I\n+  #46 = NameAndType        #47:#48        // length:([C)I\n+  #47 = Utf8               length\n+  #48 = Utf8               ([C)I\n+  #49 = Methodref          #16.#50        // java/io/Reader.read:([C)I\n+  #50 = NameAndType        #40:#48        // read:([C)I\n+  #51 = Methodref          #16.#52        // java/io/Reader.read:([CII)I\n+  #52 = NameAndType        #40:#53        // read:([CII)I\n+  #53 = Utf8               ([CII)I\n+  #54 = Methodref          #1.#55         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+  #55 = NameAndType        #47:#56        // length:(Ljava/lang/CharSequence;)I\n+  #56 = Utf8               (Ljava/lang/CharSequence;)I\n+  #57 = Methodref          #16.#58        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+  #58 = NameAndType        #40:#59        // read:(Ljava/nio/CharBuffer;)I\n+  #59 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #60 = Methodref          #16.#61        // java/io/Reader.ready:()Z\n+  #61 = NameAndType        #62:#34        // ready:()Z\n+  #62 = Utf8               ready\n+  #63 = Methodref          #16.#64        // java/io/Reader.reset:()V\n+  #64 = NameAndType        #65:#20        // reset:()V\n+  #65 = Utf8               reset\n+  #66 = Methodref          #16.#67        // java/io/Reader.skip:(J)J\n+  #67 = NameAndType        #68:#69        // skip:(J)J\n+  #68 = Utf8               skip\n+  #69 = Utf8               (J)J\n+  #70 = Utf8               Code\n+  #71 = Utf8               LineNumberTable\n+  #72 = Utf8               Exceptions\n+  #73 = Utf8               StackMapTable\n+  #74 = Utf8               SourceFile\n+  #75 = Utf8               ProxyReader.java\n {\n   public org.apache.commons.io.input.ProxyReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #3                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n          5: return\n       LineNumberTable:\n         line 46: 0\n         line 48: 5\n \n   protected void afterRead(int) throws java.io.IOException;\n     descriptor: (I)V\n@@ -121,21 +121,21 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #4                  // Method java/io/Reader.close:()V\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         4: invokevirtual #15                 // Method java/io/Reader.close:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 102: 0\n         line 105: 7\n@@ -163,22 +163,22 @@\n \n   public synchronized void mark(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n          4: iload_1\n-         5: invokevirtual #7                  // Method java/io/Reader.mark:(I)V\n+         5: invokevirtual #27                 // Method java/io/Reader.mark:(I)V\n          8: goto          17\n         11: astore_2\n         12: aload_0\n         13: aload_2\n-        14: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        14: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         17: return\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/io/IOException\n       LineNumberTable:\n         line 129: 0\n         line 132: 8\n@@ -194,46 +194,46 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #8                  // Method java/io/Reader.markSupported:()Z\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         4: invokevirtual #31                 // Method java/io/Reader.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 141: 0\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #9                  // Method beforeRead:(I)V\n+         2: invokevirtual #35                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field in:Ljava/io/Reader;\n-         9: invokevirtual #10                 // Method java/io/Reader.read:()I\n+         6: getfield      #9                  // Field in:Ljava/io/Reader;\n+         9: invokevirtual #38                 // Method java/io/Reader.read:()I\n         12: istore_1\n         13: aload_0\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_m1\n-        24: invokevirtual #11                 // Method afterRead:(I)V\n+        24: invokevirtual #42                 // Method afterRead:(I)V\n         27: iload_1\n         28: ireturn\n         29: astore_1\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        32: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         35: iconst_m1\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0    28    29   Class java/io/IOException\n       LineNumberTable:\n         line 152: 0\n@@ -262,30 +262,30 @@\n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #12                 // Method org/apache/commons/io/IOUtils.length:([C)I\n-         5: invokevirtual #9                  // Method beforeRead:(I)V\n+         2: invokestatic  #45                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         5: invokevirtual #35                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #3                  // Field in:Ljava/io/Reader;\n+         9: getfield      #9                  // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #13                 // Method java/io/Reader.read:([C)I\n+        13: invokevirtual #49                 // Method java/io/Reader.read:([C)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #11                 // Method afterRead:(I)V\n+        19: invokevirtual #42                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 171: 0\n@@ -304,31 +304,31 @@\n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #9                  // Method beforeRead:(I)V\n+         2: invokevirtual #35                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field in:Ljava/io/Reader;\n+         6: getfield      #9                  // Field in:Ljava/io/Reader;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #14                 // Method java/io/Reader.read:([CII)I\n+        12: invokevirtual #51                 // Method java/io/Reader.read:([CII)I\n         15: istore        4\n         17: aload_0\n         18: iload         4\n-        20: invokevirtual #11                 // Method afterRead:(I)V\n+        20: invokevirtual #42                 // Method afterRead:(I)V\n         23: iload         4\n         25: ireturn\n         26: astore        4\n         28: aload_0\n         29: aload         4\n-        31: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        31: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         34: iconst_m1\n         35: ireturn\n       Exception table:\n          from    to  target type\n              0    25    26   Class java/io/IOException\n       LineNumberTable:\n         line 192: 0\n@@ -347,30 +347,30 @@\n   public int read(java.nio.CharBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/CharBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #15                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-         5: invokevirtual #9                  // Method beforeRead:(I)V\n+         2: invokestatic  #54                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         5: invokevirtual #35                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #3                  // Field in:Ljava/io/Reader;\n+         9: getfield      #9                  // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #16                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+        13: invokevirtual #57                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #11                 // Method afterRead:(I)V\n+        19: invokevirtual #42                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 212: 0\n@@ -388,21 +388,21 @@\n \n   public boolean ready() throws java.io.IOException;\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #17                 // Method java/io/Reader.ready:()Z\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         4: invokevirtual #60                 // Method java/io/Reader.ready:()Z\n          7: ireturn\n          8: astore_1\n          9: aload_0\n         10: aload_1\n-        11: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        11: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         14: iconst_0\n         15: ireturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 230: 0\n@@ -417,21 +417,21 @@\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #18                 // Method java/io/Reader.reset:()V\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         4: invokevirtual #63                 // Method java/io/Reader.reset:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 244: 0\n         line 247: 7\n@@ -447,22 +447,22 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/Reader;\n+         1: getfield      #9                  // Field in:Ljava/io/Reader;\n          4: lload_1\n-         5: invokevirtual #19                 // Method java/io/Reader.skip:(J)J\n+         5: invokevirtual #66                 // Method java/io/Reader.skip:(J)J\n          8: lreturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #6                  // Method handleIOException:(Ljava/io/IOException;)V\n+        12: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n         15: lconst_0\n         16: lreturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 259: 0\n"}]}
