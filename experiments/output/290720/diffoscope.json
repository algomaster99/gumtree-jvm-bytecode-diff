{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,33 +1,33 @@\n-  SHA-256 checksum 6337a48ea96661f88a063334f08312def3ea7c433013f8f2fc0a3b3fdcf43ed5\n+  SHA-256 checksum 0e01371896ae29d57cd6ce6e98a234941c7e8064ff60eefda80b965cf1e69744\n   Compiled from \"ThresholdingOutputStream.java\"\n public abstract class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #15                         // org/apache/commons/io/output/ThresholdingOutputStream\n   super_class: #16                        // java/io/OutputStream\n   interfaces: 0, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Methodref          #16.#51        // java/io/OutputStream.\"<init>\":()V\n-   #2 = Fieldref           #15.#52        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-   #3 = Methodref          #15.#53        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-   #4 = Methodref          #15.#54        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-   #5 = Methodref          #16.#55        // java/io/OutputStream.write:(I)V\n-   #6 = Fieldref           #15.#56        // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-   #7 = Methodref          #16.#57        // java/io/OutputStream.write:([B)V\n-   #8 = Methodref          #16.#58        // java/io/OutputStream.write:([BII)V\n-   #9 = Methodref          #16.#59        // java/io/OutputStream.flush:()V\n-  #10 = Methodref          #15.#59        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-  #11 = Class              #60            // java/io/IOException\n-  #12 = Methodref          #16.#61        // java/io/OutputStream.close:()V\n-  #13 = Fieldref           #15.#62        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-  #14 = Methodref          #15.#63        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-  #15 = Class              #64            // org/apache/commons/io/output/ThresholdingOutputStream\n-  #16 = Class              #65            // java/io/OutputStream\n+   #1 = Methodref          #16.#50        // java/io/OutputStream.\"<init>\":()V\n+   #2 = Fieldref           #15.#51        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+   #3 = Methodref          #15.#52        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+   #4 = Methodref          #15.#53        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+   #5 = Methodref          #16.#54        // java/io/OutputStream.write:(I)V\n+   #6 = Fieldref           #15.#55        // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+   #7 = Methodref          #16.#56        // java/io/OutputStream.write:([B)V\n+   #8 = Methodref          #16.#57        // java/io/OutputStream.write:([BII)V\n+   #9 = Methodref          #16.#58        // java/io/OutputStream.flush:()V\n+  #10 = Methodref          #15.#58        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+  #11 = Class              #59            // java/io/IOException\n+  #12 = Methodref          #16.#60        // java/io/OutputStream.close:()V\n+  #13 = Fieldref           #15.#61        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+  #14 = Methodref          #15.#62        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+  #15 = Class              #63            // org/apache/commons/io/output/ThresholdingOutputStream\n+  #16 = Class              #64            // java/io/OutputStream\n   #17 = Utf8               threshold\n   #18 = Utf8               I\n   #19 = Utf8               written\n   #20 = Utf8               J\n   #21 = Utf8               thresholdExceeded\n   #22 = Utf8               Z\n   #23 = Utf8               <init>\n@@ -38,45 +38,44 @@\n   #28 = Utf8               Exceptions\n   #29 = Utf8               ([B)V\n   #30 = Utf8               ([BII)V\n   #31 = Utf8               flush\n   #32 = Utf8               ()V\n   #33 = Utf8               close\n   #34 = Utf8               StackMapTable\n-  #35 = Class              #60            // java/io/IOException\n-  #36 = Utf8               getThreshold\n-  #37 = Utf8               ()I\n-  #38 = Utf8               getByteCount\n-  #39 = Utf8               ()J\n-  #40 = Utf8               isThresholdExceeded\n-  #41 = Utf8               ()Z\n-  #42 = Utf8               checkThreshold\n-  #43 = Utf8               resetByteCount\n-  #44 = Utf8               setByteCount\n-  #45 = Utf8               (J)V\n-  #46 = Utf8               getStream\n-  #47 = Utf8               ()Ljava/io/OutputStream;\n-  #48 = Utf8               thresholdReached\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               ThresholdingOutputStream.java\n-  #51 = NameAndType        #23:#32        // \"<init>\":()V\n-  #52 = NameAndType        #17:#18        // threshold:I\n-  #53 = NameAndType        #42:#24        // checkThreshold:(I)V\n-  #54 = NameAndType        #46:#47        // getStream:()Ljava/io/OutputStream;\n-  #55 = NameAndType        #27:#24        // write:(I)V\n-  #56 = NameAndType        #19:#20        // written:J\n-  #57 = NameAndType        #27:#29        // write:([B)V\n-  #58 = NameAndType        #27:#30        // write:([BII)V\n-  #59 = NameAndType        #31:#32        // flush:()V\n-  #60 = Utf8               java/io/IOException\n-  #61 = NameAndType        #33:#32        // close:()V\n-  #62 = NameAndType        #21:#22        // thresholdExceeded:Z\n-  #63 = NameAndType        #48:#32        // thresholdReached:()V\n-  #64 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #65 = Utf8               java/io/OutputStream\n+  #35 = Utf8               getThreshold\n+  #36 = Utf8               ()I\n+  #37 = Utf8               getByteCount\n+  #38 = Utf8               ()J\n+  #39 = Utf8               isThresholdExceeded\n+  #40 = Utf8               ()Z\n+  #41 = Utf8               checkThreshold\n+  #42 = Utf8               resetByteCount\n+  #43 = Utf8               setByteCount\n+  #44 = Utf8               (J)V\n+  #45 = Utf8               getStream\n+  #46 = Utf8               ()Ljava/io/OutputStream;\n+  #47 = Utf8               thresholdReached\n+  #48 = Utf8               SourceFile\n+  #49 = Utf8               ThresholdingOutputStream.java\n+  #50 = NameAndType        #23:#32        // \"<init>\":()V\n+  #51 = NameAndType        #17:#18        // threshold:I\n+  #52 = NameAndType        #41:#24        // checkThreshold:(I)V\n+  #53 = NameAndType        #45:#46        // getStream:()Ljava/io/OutputStream;\n+  #54 = NameAndType        #27:#24        // write:(I)V\n+  #55 = NameAndType        #19:#20        // written:J\n+  #56 = NameAndType        #27:#29        // write:([B)V\n+  #57 = NameAndType        #27:#30        // write:([BII)V\n+  #58 = NameAndType        #31:#32        // flush:()V\n+  #59 = Utf8               java/io/IOException\n+  #60 = NameAndType        #33:#32        // close:()V\n+  #61 = NameAndType        #21:#22        // thresholdExceeded:Z\n+  #62 = NameAndType        #47:#32        // thresholdReached:()V\n+  #63 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+  #64 = Utf8               java/io/OutputStream\n {\n   private final int threshold;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long written;\n     descriptor: J\n"}]}
