{"diffoscope-json-version": 1, "source1": "first/ReversedLinesFileReader.class", "source2": "second/ReversedLinesFileReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum 2292b43b22c9699b90980b4c69e1a8477431e5f0b72643bfbd0d4120b244c8ce\n+  SHA-256 checksum 78a9eda423ca079be3053c17e6fffaeb23aab5be9239edefb3f877751e2d7e57\n   Compiled from \"ReversedLinesFileReader.java\"\n public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/io/input/ReversedLinesFileReader\n   super_class: #72                        // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #167          // org/apache/commons/io/IOUtils\n-    #2 = Fieldref           #8.#168       // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n-    #3 = Fieldref           #8.#169       // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n-    #4 = Fieldref           #8.#170       // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n-    #5 = Fieldref           #8.#171       // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n-    #6 = Fieldref           #8.#172       // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n-    #7 = Fieldref           #8.#173       // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n-    #8 = Class              #174          // org/apache/commons/io/input/ReversedLinesFileReader\n-    #9 = Methodref          #175.#176     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #10 = Methodref          #8.#177       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-   #11 = Methodref          #178.#179     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #12 = Methodref          #8.#180       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #8.#181       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-   #14 = Methodref          #8.#182       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-   #15 = Methodref          #72.#183      // java/lang/Object.\"<init>\":()V\n-   #16 = Methodref          #184.#185     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #17 = Methodref          #175.#186     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #18 = Methodref          #187.#188     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n-   #19 = Fieldref           #189.#190     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #20 = String             #191          // Shift_JIS\n-   #21 = Methodref          #175.#192     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #22 = String             #193          // windows-31j\n-   #23 = String             #194          // x-windows-949\n-   #24 = String             #195          // gbk\n-   #25 = String             #196          // x-windows-950\n-   #26 = Fieldref           #189.#197     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #27 = Fieldref           #189.#198     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #28 = Fieldref           #189.#199     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #29 = Class              #200          // java/io/UnsupportedEncodingException\n-   #30 = String             #201          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-   #31 = Methodref          #29.#202      // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Class              #203          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#183      // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #204          // Encoding\n-   #35 = Methodref          #32.#205      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = Methodref          #32.#206      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #37 = String             #207          //  is not supported yet (feel free to submit a patch)\n-   #38 = Methodref          #32.#208      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #39 = Class              #209          // \"[B\"\n-   #40 = Fieldref           #210.#211     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #41 = Methodref          #210.#212     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #42 = Fieldref           #210.#213     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #43 = Fieldref           #210.#214     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n-   #44 = Class              #215          // java/nio/file/OpenOption\n-   #45 = Fieldref           #216.#217     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n-   #46 = Methodref          #218.#219     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-   #47 = InterfaceMethodref #220.#221     // java/nio/channels/SeekableByteChannel.size:()J\n-   #48 = Fieldref           #8.#222       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n-   #49 = Fieldref           #8.#223       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n-   #50 = Class              #224          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-   #51 = Methodref          #50.#225      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-   #52 = Fieldref           #8.#226       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #53 = Methodref          #184.#227     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #54 = InterfaceMethodref #220.#228     // java/nio/channels/SeekableByteChannel.close:()V\n-   #55 = Methodref          #50.#229      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-   #56 = Methodref          #50.#230      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #57 = String             #231          //\n-   #58 = Methodref          #232.#233     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = Fieldref           #8.#234       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n-   #60 = Methodref          #8.#235       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n-   #61 = Class              #236          // java/lang/IllegalArgumentException\n-   #62 = String             #237          // lineCount < 0\n-   #63 = Methodref          #61.#202      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #64 = Class              #238          // java/util/ArrayList\n-   #65 = Methodref          #64.#239      // java/util/ArrayList.\"<init>\":(I)V\n-   #66 = Methodref          #64.#240      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #67 = Methodref          #8.#241       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n-   #68 = Methodref          #242.#243     // java/util/Collections.reverse:(Ljava/util/List;)V\n-   #69 = InterfaceMethodref #244.#245     // java/util/List.isEmpty:()Z\n-   #70 = Methodref          #246.#247     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #71 = Methodref          #232.#248     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-   #72 = Class              #249          // java/lang/Object\n-   #73 = Class              #250          // java/io/Closeable\n-   #74 = Class              #251          // org/apache/commons/io/input/ReversedLinesFileReader$1\n+    #1 = Class              #165          // org/apache/commons/io/IOUtils\n+    #2 = Fieldref           #8.#166       // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n+    #3 = Fieldref           #8.#167       // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n+    #4 = Fieldref           #8.#168       // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n+    #5 = Fieldref           #8.#169       // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n+    #6 = Fieldref           #8.#170       // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n+    #7 = Fieldref           #8.#171       // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n+    #8 = Class              #172          // org/apache/commons/io/input/ReversedLinesFileReader\n+    #9 = Methodref          #127.#173     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #10 = Methodref          #8.#174       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+   #11 = Methodref          #175.#176     // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #12 = Methodref          #8.#177       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+   #13 = Methodref          #8.#178       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+   #14 = Methodref          #8.#179       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+   #15 = Methodref          #72.#180      // java/lang/Object.\"<init>\":()V\n+   #16 = Methodref          #181.#182     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #17 = Methodref          #127.#183     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #18 = Methodref          #128.#184     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+   #19 = Fieldref           #185.#186     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #20 = String             #187          // Shift_JIS\n+   #21 = Methodref          #127.#188     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #22 = String             #189          // windows-31j\n+   #23 = String             #190          // x-windows-949\n+   #24 = String             #191          // gbk\n+   #25 = String             #192          // x-windows-950\n+   #26 = Fieldref           #185.#193     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #27 = Fieldref           #185.#194     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #28 = Fieldref           #185.#195     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #29 = Class              #196          // java/io/UnsupportedEncodingException\n+   #30 = String             #197          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+   #31 = Methodref          #29.#198      // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Class              #199          // java/lang/StringBuilder\n+   #33 = Methodref          #32.#180      // java/lang/StringBuilder.\"<init>\":()V\n+   #34 = String             #200          // Encoding\n+   #35 = Methodref          #32.#201      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #36 = Methodref          #32.#202      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #37 = String             #203          //  is not supported yet (feel free to submit a patch)\n+   #38 = Methodref          #32.#204      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #39 = Class              #205          // \"[B\"\n+   #40 = Fieldref           #206.#207     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+   #41 = Methodref          #206.#208     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #42 = Fieldref           #206.#209     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n+   #43 = Fieldref           #206.#210     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n+   #44 = Class              #211          // java/nio/file/OpenOption\n+   #45 = Fieldref           #212.#213     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+   #46 = Methodref          #214.#215     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+   #47 = InterfaceMethodref #216.#217     // java/nio/channels/SeekableByteChannel.size:()J\n+   #48 = Fieldref           #8.#218       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n+   #49 = Fieldref           #8.#219       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n+   #50 = Class              #220          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+   #51 = Methodref          #50.#221      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+   #52 = Fieldref           #8.#222       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+   #53 = Methodref          #181.#223     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #54 = InterfaceMethodref #216.#224     // java/nio/channels/SeekableByteChannel.close:()V\n+   #55 = Methodref          #50.#225      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+   #56 = Methodref          #50.#226      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+   #57 = String             #227          //\n+   #58 = Methodref          #135.#228     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #59 = Fieldref           #8.#229       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n+   #60 = Methodref          #8.#230       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n+   #61 = Class              #231          // java/lang/IllegalArgumentException\n+   #62 = String             #232          // lineCount < 0\n+   #63 = Methodref          #61.#198      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = Class              #233          // java/util/ArrayList\n+   #65 = Methodref          #64.#234      // java/util/ArrayList.\"<init>\":(I)V\n+   #66 = Methodref          #64.#235      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+   #67 = Methodref          #8.#236       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n+   #68 = Methodref          #237.#238     // java/util/Collections.reverse:(Ljava/util/List;)V\n+   #69 = InterfaceMethodref #151.#239     // java/util/List.isEmpty:()Z\n+   #70 = Methodref          #240.#241     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #71 = Methodref          #135.#242     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+   #72 = Class              #243          // java/lang/Object\n+   #73 = Class              #244          // java/io/Closeable\n+   #74 = Class              #245          // org/apache/commons/io/input/ReversedLinesFileReader$1\n    #75 = Utf8               InnerClasses\n    #76 = Utf8               FilePart\n    #77 = Utf8               EMPTY_STRING\n    #78 = Utf8               Ljava/lang/String;\n    #79 = Utf8               ConstantValue\n    #80 = Utf8               DEFAULT_BLOCK_SIZE\n    #81 = Utf8               I\n@@ -112,15 +112,15 @@\n   #102 = Utf8               LineNumberTable\n   #103 = Utf8               LocalVariableTable\n   #104 = Utf8               this\n   #105 = Utf8               Lorg/apache/commons/io/input/ReversedLinesFileReader;\n   #106 = Utf8               file\n   #107 = Utf8               Ljava/io/File;\n   #108 = Utf8               Exceptions\n-  #109 = Class              #252          // java/io/IOException\n+  #109 = Class              #246          // java/io/IOException\n   #110 = Utf8               Deprecated\n   #111 = Utf8               RuntimeVisibleAnnotations\n   #112 = Utf8               Ljava/lang/Deprecated;\n   #113 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n   #114 = Utf8               (Ljava/io/File;ILjava/nio/charset/Charset;)V\n   #115 = Utf8               (Ljava/io/File;ILjava/lang/String;)V\n   #116 = Utf8               charsetName\n@@ -129,202 +129,196 @@\n   #119 = Utf8               (Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n   #120 = Utf8               charsetEncoder\n   #121 = Utf8               Ljava/nio/charset/CharsetEncoder;\n   #122 = Utf8               maxBytesPerChar\n   #123 = Utf8               F\n   #124 = Utf8               lastBlockLength\n   #125 = Utf8               StackMapTable\n-  #126 = Class              #174          // org/apache/commons/io/input/ReversedLinesFileReader\n-  #127 = Class              #253          // java/nio/file/Path\n-  #128 = Class              #254          // java/nio/charset/Charset\n-  #129 = Class              #255          // java/nio/charset/CharsetEncoder\n-  #130 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #131 = Utf8               close\n-  #132 = Utf8               ()V\n-  #133 = Utf8               readLine\n-  #134 = Utf8               ()Ljava/lang/String;\n-  #135 = Utf8               line\n-  #136 = Class              #256          // java/lang/String\n-  #137 = Utf8               readLines\n-  #138 = Utf8               (I)Ljava/util/List;\n-  #139 = Utf8               i\n-  #140 = Utf8               lineCount\n-  #141 = Utf8               arrayList\n-  #142 = Utf8               Ljava/util/ArrayList;\n-  #143 = Utf8               LocalVariableTypeTable\n-  #144 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n-  #145 = Class              #238          // java/util/ArrayList\n-  #146 = Utf8               Signature\n-  #147 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n-  #148 = Utf8               toString\n-  #149 = Utf8               (I)Ljava/lang/String;\n-  #150 = Utf8               lines\n-  #151 = Utf8               Ljava/util/List;\n-  #152 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #153 = Class              #257          // java/util/List\n-  #154 = Utf8               access$000\n-  #155 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n-  #156 = Utf8               x0\n-  #157 = Utf8               access$100\n-  #158 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n-  #159 = Utf8               access$200\n-  #160 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n-  #161 = Utf8               access$300\n-  #162 = Utf8               access$400\n-  #163 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n-  #164 = Utf8               access$500\n-  #165 = Utf8               SourceFile\n-  #166 = Utf8               ReversedLinesFileReader.java\n-  #167 = Utf8               org/apache/commons/io/IOUtils\n-  #168 = NameAndType        #94:#81       // byteDecrement:I\n-  #169 = NameAndType        #84:#85       // charset:Ljava/nio/charset/Charset;\n-  #170 = NameAndType        #93:#81       // avoidNewlineSplitBufferSize:I\n-  #171 = NameAndType        #91:#92       // newLineSequences:[[B\n-  #172 = NameAndType        #86:#87       // channel:Ljava/nio/channels/SeekableByteChannel;\n-  #173 = NameAndType        #83:#81       // blockSize:I\n-  #174 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n-  #175 = Class              #254          // java/nio/charset/Charset\n-  #176 = NameAndType        #258:#259     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #177 = NameAndType        #99:#114      // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-  #178 = Class              #260          // java/io/File\n-  #179 = NameAndType        #261:#262     // toPath:()Ljava/nio/file/Path;\n-  #180 = NameAndType        #99:#117      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-  #181 = NameAndType        #99:#119      // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-  #182 = NameAndType        #99:#130      // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #183 = NameAndType        #99:#132      // \"<init>\":()V\n-  #184 = Class              #263          // org/apache/commons/io/Charsets\n-  #185 = NameAndType        #264:#265     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #186 = NameAndType        #266:#267     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-  #187 = Class              #255          // java/nio/charset/CharsetEncoder\n-  #188 = NameAndType        #122:#268     // maxBytesPerChar:()F\n-  #189 = Class              #269          // java/nio/charset/StandardCharsets\n-  #190 = NameAndType        #270:#85      // UTF_8:Ljava/nio/charset/Charset;\n-  #191 = Utf8               Shift_JIS\n-  #192 = NameAndType        #271:#272     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #193 = Utf8               windows-31j\n-  #194 = Utf8               x-windows-949\n-  #195 = Utf8               gbk\n-  #196 = Utf8               x-windows-950\n-  #197 = NameAndType        #273:#85      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #198 = NameAndType        #274:#85      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #199 = NameAndType        #275:#85      // UTF_16:Ljava/nio/charset/Charset;\n-  #200 = Utf8               java/io/UnsupportedEncodingException\n-  #201 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-  #202 = NameAndType        #99:#276      // \"<init>\":(Ljava/lang/String;)V\n-  #203 = Utf8               java/lang/StringBuilder\n-  #204 = Utf8               Encoding\n-  #205 = NameAndType        #277:#278     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #206 = NameAndType        #277:#279     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #207 = Utf8                is not supported yet (feel free to submit a patch)\n-  #208 = NameAndType        #148:#134     // toString:()Ljava/lang/String;\n-  #209 = Utf8               [B\n-  #210 = Class              #280          // org/apache/commons/io/StandardLineSeparator\n-  #211 = NameAndType        #281:#282     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #212 = NameAndType        #283:#284     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #213 = NameAndType        #285:#282     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #214 = NameAndType        #286:#282     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n-  #215 = Utf8               java/nio/file/OpenOption\n-  #216 = Class              #287          // java/nio/file/StandardOpenOption\n-  #217 = NameAndType        #288:#289     // READ:Ljava/nio/file/StandardOpenOption;\n-  #218 = Class              #290          // java/nio/file/Files\n-  #219 = NameAndType        #291:#292     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #220 = Class              #293          // java/nio/channels/SeekableByteChannel\n-  #221 = NameAndType        #294:#295     // size:()J\n-  #222 = NameAndType        #88:#89       // totalByteLength:J\n-  #223 = NameAndType        #90:#89       // totalBlockCount:J\n-  #224 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-  #225 = NameAndType        #99:#296      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #226 = NameAndType        #95:#96       // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #227 = NameAndType        #264:#272     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #228 = NameAndType        #131:#132     // close:()V\n-  #229 = NameAndType        #297:#298     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #230 = NameAndType        #299:#300     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #231 = Utf8\n-  #232 = Class              #256          // java/lang/String\n-  #233 = NameAndType        #301:#302     // equals:(Ljava/lang/Object;)Z\n-  #234 = NameAndType        #97:#98       // trailingNewlineOfFileSkipped:Z\n-  #235 = NameAndType        #133:#134     // readLine:()Ljava/lang/String;\n-  #236 = Utf8               java/lang/IllegalArgumentException\n-  #237 = Utf8               lineCount < 0\n-  #238 = Utf8               java/util/ArrayList\n-  #239 = NameAndType        #99:#303      // \"<init>\":(I)V\n-  #240 = NameAndType        #304:#302     // add:(Ljava/lang/Object;)Z\n-  #241 = NameAndType        #137:#138     // readLines:(I)Ljava/util/List;\n-  #242 = Class              #305          // java/util/Collections\n-  #243 = NameAndType        #306:#307     // reverse:(Ljava/util/List;)V\n-  #244 = Class              #257          // java/util/List\n-  #245 = NameAndType        #308:#309     // isEmpty:()Z\n-  #246 = Class              #310          // java/lang/System\n-  #247 = NameAndType        #311:#134     // lineSeparator:()Ljava/lang/String;\n-  #248 = NameAndType        #312:#313     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-  #249 = Utf8               java/lang/Object\n-  #250 = Utf8               java/io/Closeable\n-  #251 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n-  #252 = Utf8               java/io/IOException\n-  #253 = Utf8               java/nio/file/Path\n-  #254 = Utf8               java/nio/charset/Charset\n-  #255 = Utf8               java/nio/charset/CharsetEncoder\n-  #256 = Utf8               java/lang/String\n-  #257 = Utf8               java/util/List\n-  #258 = Utf8               defaultCharset\n-  #259 = Utf8               ()Ljava/nio/charset/Charset;\n-  #260 = Utf8               java/io/File\n-  #261 = Utf8               toPath\n-  #262 = Utf8               ()Ljava/nio/file/Path;\n-  #263 = Utf8               org/apache/commons/io/Charsets\n-  #264 = Utf8               toCharset\n-  #265 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #266 = Utf8               newEncoder\n-  #267 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-  #268 = Utf8               ()F\n-  #269 = Utf8               java/nio/charset/StandardCharsets\n-  #270 = Utf8               UTF_8\n-  #271 = Utf8               forName\n-  #272 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #273 = Utf8               UTF_16BE\n-  #274 = Utf8               UTF_16LE\n-  #275 = Utf8               UTF_16\n-  #276 = Utf8               (Ljava/lang/String;)V\n-  #277 = Utf8               append\n-  #278 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #279 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #280 = Utf8               org/apache/commons/io/StandardLineSeparator\n-  #281 = Utf8               CRLF\n-  #282 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n-  #283 = Utf8               getBytes\n-  #284 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #285 = Utf8               LF\n-  #286 = Utf8               CR\n-  #287 = Utf8               java/nio/file/StandardOpenOption\n-  #288 = Utf8               READ\n-  #289 = Utf8               Ljava/nio/file/StandardOpenOption;\n-  #290 = Utf8               java/nio/file/Files\n-  #291 = Utf8               newByteChannel\n-  #292 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #293 = Utf8               java/nio/channels/SeekableByteChannel\n-  #294 = Utf8               size\n-  #295 = Utf8               ()J\n-  #296 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #297 = Utf8               access$700\n-  #298 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #299 = Utf8               access$800\n-  #300 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #301 = Utf8               equals\n-  #302 = Utf8               (Ljava/lang/Object;)Z\n-  #303 = Utf8               (I)V\n-  #304 = Utf8               add\n-  #305 = Utf8               java/util/Collections\n-  #306 = Utf8               reverse\n-  #307 = Utf8               (Ljava/util/List;)V\n-  #308 = Utf8               isEmpty\n-  #309 = Utf8               ()Z\n-  #310 = Utf8               java/lang/System\n-  #311 = Utf8               lineSeparator\n-  #312 = Utf8               join\n-  #313 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #126 = Class              #247          // java/nio/file/Path\n+  #127 = Class              #248          // java/nio/charset/Charset\n+  #128 = Class              #249          // java/nio/charset/CharsetEncoder\n+  #129 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n+  #130 = Utf8               close\n+  #131 = Utf8               ()V\n+  #132 = Utf8               readLine\n+  #133 = Utf8               ()Ljava/lang/String;\n+  #134 = Utf8               line\n+  #135 = Class              #250          // java/lang/String\n+  #136 = Utf8               readLines\n+  #137 = Utf8               (I)Ljava/util/List;\n+  #138 = Utf8               i\n+  #139 = Utf8               lineCount\n+  #140 = Utf8               arrayList\n+  #141 = Utf8               Ljava/util/ArrayList;\n+  #142 = Utf8               LocalVariableTypeTable\n+  #143 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n+  #144 = Utf8               Signature\n+  #145 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n+  #146 = Utf8               toString\n+  #147 = Utf8               (I)Ljava/lang/String;\n+  #148 = Utf8               lines\n+  #149 = Utf8               Ljava/util/List;\n+  #150 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #151 = Class              #251          // java/util/List\n+  #152 = Utf8               access$000\n+  #153 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n+  #154 = Utf8               x0\n+  #155 = Utf8               access$100\n+  #156 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n+  #157 = Utf8               access$200\n+  #158 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n+  #159 = Utf8               access$300\n+  #160 = Utf8               access$400\n+  #161 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n+  #162 = Utf8               access$500\n+  #163 = Utf8               SourceFile\n+  #164 = Utf8               ReversedLinesFileReader.java\n+  #165 = Utf8               org/apache/commons/io/IOUtils\n+  #166 = NameAndType        #94:#81       // byteDecrement:I\n+  #167 = NameAndType        #84:#85       // charset:Ljava/nio/charset/Charset;\n+  #168 = NameAndType        #93:#81       // avoidNewlineSplitBufferSize:I\n+  #169 = NameAndType        #91:#92       // newLineSequences:[[B\n+  #170 = NameAndType        #86:#87       // channel:Ljava/nio/channels/SeekableByteChannel;\n+  #171 = NameAndType        #83:#81       // blockSize:I\n+  #172 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n+  #173 = NameAndType        #252:#253     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #174 = NameAndType        #99:#114      // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+  #175 = Class              #254          // java/io/File\n+  #176 = NameAndType        #255:#256     // toPath:()Ljava/nio/file/Path;\n+  #177 = NameAndType        #99:#117      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+  #178 = NameAndType        #99:#119      // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+  #179 = NameAndType        #99:#129      // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+  #180 = NameAndType        #99:#131      // \"<init>\":()V\n+  #181 = Class              #257          // org/apache/commons/io/Charsets\n+  #182 = NameAndType        #258:#259     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #183 = NameAndType        #260:#261     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+  #184 = NameAndType        #122:#262     // maxBytesPerChar:()F\n+  #185 = Class              #263          // java/nio/charset/StandardCharsets\n+  #186 = NameAndType        #264:#85      // UTF_8:Ljava/nio/charset/Charset;\n+  #187 = Utf8               Shift_JIS\n+  #188 = NameAndType        #265:#266     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #189 = Utf8               windows-31j\n+  #190 = Utf8               x-windows-949\n+  #191 = Utf8               gbk\n+  #192 = Utf8               x-windows-950\n+  #193 = NameAndType        #267:#85      // UTF_16BE:Ljava/nio/charset/Charset;\n+  #194 = NameAndType        #268:#85      // UTF_16LE:Ljava/nio/charset/Charset;\n+  #195 = NameAndType        #269:#85      // UTF_16:Ljava/nio/charset/Charset;\n+  #196 = Utf8               java/io/UnsupportedEncodingException\n+  #197 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+  #198 = NameAndType        #99:#270      // \"<init>\":(Ljava/lang/String;)V\n+  #199 = Utf8               java/lang/StringBuilder\n+  #200 = Utf8               Encoding\n+  #201 = NameAndType        #271:#272     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #202 = NameAndType        #271:#273     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #203 = Utf8                is not supported yet (feel free to submit a patch)\n+  #204 = NameAndType        #146:#133     // toString:()Ljava/lang/String;\n+  #205 = Utf8               [B\n+  #206 = Class              #274          // org/apache/commons/io/StandardLineSeparator\n+  #207 = NameAndType        #275:#276     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #208 = NameAndType        #277:#278     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #209 = NameAndType        #279:#276     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #210 = NameAndType        #280:#276     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n+  #211 = Utf8               java/nio/file/OpenOption\n+  #212 = Class              #281          // java/nio/file/StandardOpenOption\n+  #213 = NameAndType        #282:#283     // READ:Ljava/nio/file/StandardOpenOption;\n+  #214 = Class              #284          // java/nio/file/Files\n+  #215 = NameAndType        #285:#286     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #216 = Class              #287          // java/nio/channels/SeekableByteChannel\n+  #217 = NameAndType        #288:#289     // size:()J\n+  #218 = NameAndType        #88:#89       // totalByteLength:J\n+  #219 = NameAndType        #90:#89       // totalBlockCount:J\n+  #220 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+  #221 = NameAndType        #99:#290      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #222 = NameAndType        #95:#96       // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #223 = NameAndType        #258:#266     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #224 = NameAndType        #130:#131     // close:()V\n+  #225 = NameAndType        #291:#292     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #226 = NameAndType        #293:#294     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #227 = Utf8\n+  #228 = NameAndType        #295:#296     // equals:(Ljava/lang/Object;)Z\n+  #229 = NameAndType        #97:#98       // trailingNewlineOfFileSkipped:Z\n+  #230 = NameAndType        #132:#133     // readLine:()Ljava/lang/String;\n+  #231 = Utf8               java/lang/IllegalArgumentException\n+  #232 = Utf8               lineCount < 0\n+  #233 = Utf8               java/util/ArrayList\n+  #234 = NameAndType        #99:#297      // \"<init>\":(I)V\n+  #235 = NameAndType        #298:#296     // add:(Ljava/lang/Object;)Z\n+  #236 = NameAndType        #136:#137     // readLines:(I)Ljava/util/List;\n+  #237 = Class              #299          // java/util/Collections\n+  #238 = NameAndType        #300:#301     // reverse:(Ljava/util/List;)V\n+  #239 = NameAndType        #302:#303     // isEmpty:()Z\n+  #240 = Class              #304          // java/lang/System\n+  #241 = NameAndType        #305:#133     // lineSeparator:()Ljava/lang/String;\n+  #242 = NameAndType        #306:#307     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #243 = Utf8               java/lang/Object\n+  #244 = Utf8               java/io/Closeable\n+  #245 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n+  #246 = Utf8               java/io/IOException\n+  #247 = Utf8               java/nio/file/Path\n+  #248 = Utf8               java/nio/charset/Charset\n+  #249 = Utf8               java/nio/charset/CharsetEncoder\n+  #250 = Utf8               java/lang/String\n+  #251 = Utf8               java/util/List\n+  #252 = Utf8               defaultCharset\n+  #253 = Utf8               ()Ljava/nio/charset/Charset;\n+  #254 = Utf8               java/io/File\n+  #255 = Utf8               toPath\n+  #256 = Utf8               ()Ljava/nio/file/Path;\n+  #257 = Utf8               org/apache/commons/io/Charsets\n+  #258 = Utf8               toCharset\n+  #259 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #260 = Utf8               newEncoder\n+  #261 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+  #262 = Utf8               ()F\n+  #263 = Utf8               java/nio/charset/StandardCharsets\n+  #264 = Utf8               UTF_8\n+  #265 = Utf8               forName\n+  #266 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #267 = Utf8               UTF_16BE\n+  #268 = Utf8               UTF_16LE\n+  #269 = Utf8               UTF_16\n+  #270 = Utf8               (Ljava/lang/String;)V\n+  #271 = Utf8               append\n+  #272 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #273 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #274 = Utf8               org/apache/commons/io/StandardLineSeparator\n+  #275 = Utf8               CRLF\n+  #276 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n+  #277 = Utf8               getBytes\n+  #278 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #279 = Utf8               LF\n+  #280 = Utf8               CR\n+  #281 = Utf8               java/nio/file/StandardOpenOption\n+  #282 = Utf8               READ\n+  #283 = Utf8               Ljava/nio/file/StandardOpenOption;\n+  #284 = Utf8               java/nio/file/Files\n+  #285 = Utf8               newByteChannel\n+  #286 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #287 = Utf8               java/nio/channels/SeekableByteChannel\n+  #288 = Utf8               size\n+  #289 = Utf8               ()J\n+  #290 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #291 = Utf8               access$700\n+  #292 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #293 = Utf8               access$800\n+  #294 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #295 = Utf8               equals\n+  #296 = Utf8               (Ljava/lang/Object;)Z\n+  #297 = Utf8               (I)V\n+  #298 = Utf8               add\n+  #299 = Utf8               java/util/Collections\n+  #300 = Utf8               reverse\n+  #301 = Utf8               (Ljava/util/List;)V\n+  #302 = Utf8               isEmpty\n+  #303 = Utf8               ()Z\n+  #304 = Utf8               java/lang/System\n+  #305 = Utf8               lineSeparator\n+  #306 = Utf8               join\n+  #307 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n {\n   private static final java.lang.String EMPTY_STRING = \"\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String\n \n   private static final int DEFAULT_BLOCK_SIZE = 8192;\n@@ -919,15 +913,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 12\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #147                         // (I)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #145                         // (I)Ljava/util/List<Ljava/lang/String;>;\n \n   public java.lang.String toString(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n"}]}
