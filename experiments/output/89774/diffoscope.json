{"diffoscope-json-version": 1, "source1": "first/VersionUtil.class", "source2": "second/VersionUtil.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,26 +9,30 @@\n import com.fasterxml.jackson.core.Version;\n import java.util.regex.Pattern;\n \n public class VersionUtil\n {\n     private static final Pattern V_SEP;\n     \n+    static {\n+        V_SEP = Pattern.compile(\"[-_./;:]\");\n+    }\n+    \n     protected VersionUtil() {\n     }\n     \n     @Deprecated\n     public Version version() {\n         return Version.unknownVersion();\n     }\n     \n     public static Version versionFor(final Class<?> cls) {\n         Version v = null;\n         try {\n-            final String versionInfoClassName = cls.getPackage().getName() + \".PackageVersion\";\n+            final String versionInfoClassName = String.valueOf(cls.getPackage().getName()) + \".PackageVersion\";\n             final Class<?> vClass = Class.forName(versionInfoClassName, true, cls.getClassLoader());\n             try {\n                 v = ((Versioned)vClass.getDeclaredConstructor((Class<?>[])new Class[0]).newInstance(new Object[0])).version();\n             }\n             catch (final Exception e) {\n                 throw new IllegalArgumentException(\"Failed to get Versioned out of \" + vClass);\n             }\n@@ -91,12 +95,8 @@\n         }\n         catch (final IOException ex) {}\n     }\n     \n     public static final void throwInternal() {\n         throw new RuntimeException(\"Internal error: this code path should never get executed\");\n     }\n-    \n-    static {\n-        V_SEP = Pattern.compile(\"[-_./;:]\");\n-    }\n }\n"}]}
