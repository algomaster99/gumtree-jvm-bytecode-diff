{"diffoscope-json-version": 1, "source1": "first/JsonToken.class", "source2": "second/JsonToken.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,37 @@\n \n package com.fasterxml.jackson.core;\n \n public enum JsonToken\n {\n-    NOT_AVAILABLE((String)null, -1), \n-    START_OBJECT(\"{\", 1), \n-    END_OBJECT(\"}\", 2), \n-    START_ARRAY(\"[\", 3), \n-    END_ARRAY(\"]\", 4), \n-    FIELD_NAME((String)null, 5), \n-    VALUE_EMBEDDED_OBJECT((String)null, 12), \n-    VALUE_STRING((String)null, 6), \n-    VALUE_NUMBER_INT((String)null, 7), \n-    VALUE_NUMBER_FLOAT((String)null, 8), \n-    VALUE_TRUE(\"true\", 9), \n-    VALUE_FALSE(\"false\", 10), \n-    VALUE_NULL(\"null\", 11);\n+    NOT_AVAILABLE(\"NOT_AVAILABLE\", 0, (String)null, -1), \n+    START_OBJECT(\"START_OBJECT\", 1, \"{\", 1), \n+    END_OBJECT(\"END_OBJECT\", 2, \"}\", 2), \n+    START_ARRAY(\"START_ARRAY\", 3, \"[\", 3), \n+    END_ARRAY(\"END_ARRAY\", 4, \"]\", 4), \n+    FIELD_NAME(\"FIELD_NAME\", 5, (String)null, 5), \n+    VALUE_EMBEDDED_OBJECT(\"VALUE_EMBEDDED_OBJECT\", 6, (String)null, 12), \n+    VALUE_STRING(\"VALUE_STRING\", 7, (String)null, 6), \n+    VALUE_NUMBER_INT(\"VALUE_NUMBER_INT\", 8, (String)null, 7), \n+    VALUE_NUMBER_FLOAT(\"VALUE_NUMBER_FLOAT\", 9, (String)null, 8), \n+    VALUE_TRUE(\"VALUE_TRUE\", 10, \"true\", 9), \n+    VALUE_FALSE(\"VALUE_FALSE\", 11, \"false\", 10), \n+    VALUE_NULL(\"VALUE_NULL\", 12, \"null\", 11);\n     \n     final String _serialized;\n     final char[] _serializedChars;\n     final byte[] _serializedBytes;\n     final int _id;\n     final boolean _isStructStart;\n     final boolean _isStructEnd;\n     final boolean _isNumber;\n     final boolean _isBoolean;\n     final boolean _isScalar;\n     \n-    private JsonToken(final String token, final int id) {\n+    private JsonToken(final String name, final int ordinal, final String token, final int id) {\n         if (token == null) {\n             this._serialized = null;\n             this._serializedChars = null;\n             this._serializedBytes = null;\n         }\n         else {\n             this._serialized = token;\n"}]}
