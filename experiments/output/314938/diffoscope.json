{"diffoscope-json-version": 1, "source1": "first/NullInputStream.class", "source2": "second/NullInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,138 +1,138 @@\n-  SHA-256 checksum 0051db01b561705511b55f43c5b438ddd91f8a3567faa3b0c0e330dcf270da39\n+  SHA-256 checksum 9f5246f800128aa04b220a01fd9be21f6af3c11a53e63f0b8c1595d561569b4c\n   Compiled from \"NullInputStream.java\"\n public class org.apache.commons.io.input.NullInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #38                         // org/apache/commons/io/input/NullInputStream\n-  super_class: #41                        // java/io/InputStream\n+  this_class: #4                          // org/apache/commons/io/input/NullInputStream\n+  super_class: #10                        // java/io/InputStream\n   interfaces: 0, fields: 8, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Class              #82           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #38.#83       // org/apache/commons/io/input/NullInputStream.\"<init>\":(JZZ)V\n-    #3 = Methodref          #41.#84       // java/io/InputStream.\"<init>\":()V\n-    #4 = Long               -1l\n-    #6 = Fieldref           #38.#85       // org/apache/commons/io/input/NullInputStream.mark:J\n-    #7 = Fieldref           #38.#86       // org/apache/commons/io/input/NullInputStream.size:J\n-    #8 = Fieldref           #38.#87       // org/apache/commons/io/input/NullInputStream.markSupported:Z\n-    #9 = Fieldref           #38.#88       // org/apache/commons/io/input/NullInputStream.throwEofException:Z\n-   #10 = Fieldref           #38.#89       // org/apache/commons/io/input/NullInputStream.position:J\n-   #11 = Class              #90           // java/lang/Integer\n-   #12 = Long               2147483647l\n-   #14 = Integer            2147483647\n-   #15 = Fieldref           #38.#91       // org/apache/commons/io/input/NullInputStream.eof:Z\n-   #16 = Class              #92           // java/io/EOFException\n-   #17 = Methodref          #16.#84       // java/io/EOFException.\"<init>\":()V\n-   #18 = Methodref          #93.#94       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-   #19 = Fieldref           #38.#95       // org/apache/commons/io/input/NullInputStream.readlimit:J\n-   #20 = Class              #96           // java/io/IOException\n-   #21 = String             #97           // Read after end of file\n-   #22 = Methodref          #20.#98       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #38.#99       // org/apache/commons/io/input/NullInputStream.doEndOfFile:()I\n-   #24 = Methodref          #38.#100      // org/apache/commons/io/input/NullInputStream.processByte:()I\n-   #25 = Methodref          #38.#101      // org/apache/commons/io/input/NullInputStream.read:([BII)I\n-   #26 = Methodref          #38.#102      // org/apache/commons/io/input/NullInputStream.processBytes:([BII)V\n-   #27 = Methodref          #93.#103      // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n-   #28 = String             #104          // No position has been marked\n-   #29 = Class              #105          // java/lang/StringBuilder\n-   #30 = Methodref          #29.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #31 = String             #106          // Marked position [\n-   #32 = Methodref          #29.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #33 = Methodref          #29.#108      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #34 = String             #109          // ] is no longer valid - passed the read limit [\n-   #35 = String             #110          // ]\n-   #36 = Methodref          #29.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #37 = String             #112          // Skip after end of file\n-   #38 = Class              #113          // org/apache/commons/io/input/NullInputStream\n-   #39 = Methodref          #38.#84       // org/apache/commons/io/input/NullInputStream.\"<init>\":()V\n-   #40 = Fieldref           #38.#114      // org/apache/commons/io/input/NullInputStream.INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n-   #41 = Class              #115          // java/io/InputStream\n-   #42 = Utf8               INSTANCE\n-   #43 = Utf8               Lorg/apache/commons/io/input/NullInputStream;\n-   #44 = Utf8               size\n-   #45 = Utf8               J\n-   #46 = Utf8               position\n-   #47 = Utf8               mark\n-   #48 = Utf8               readlimit\n-   #49 = Utf8               eof\n-   #50 = Utf8               Z\n-   #51 = Utf8               throwEofException\n-   #52 = Utf8               markSupported\n-   #53 = Utf8               <init>\n-   #54 = Utf8               ()V\n-   #55 = Utf8               Code\n-   #56 = Utf8               LineNumberTable\n-   #57 = Utf8               (J)V\n-   #58 = Utf8               (JZZ)V\n-   #59 = Utf8               available\n-   #60 = Utf8               ()I\n-   #61 = Utf8               StackMapTable\n-   #62 = Utf8               close\n-   #63 = Utf8               Exceptions\n-   #64 = Utf8               doEndOfFile\n-   #65 = Utf8               getPosition\n-   #66 = Utf8               ()J\n-   #67 = Utf8               getSize\n-   #68 = Utf8               (I)V\n-   #69 = Utf8               ()Z\n-   #70 = Utf8               processByte\n-   #71 = Utf8               processBytes\n-   #72 = Utf8               ([BII)V\n-   #73 = Utf8               read\n-   #74 = Utf8               ([B)I\n-   #75 = Utf8               ([BII)I\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/NullInputStream.\"<init>\":(JZZ)V\n+    #4 = Class              #6            // org/apache/commons/io/input/NullInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(JZZ)V\n+    #6 = Utf8               org/apache/commons/io/input/NullInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (JZZ)V\n+    #9 = Methodref          #10.#11       // java/io/InputStream.\"<init>\":()V\n+   #10 = Class              #12           // java/io/InputStream\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/io/InputStream\n+   #13 = Utf8               ()V\n+   #14 = Long               -1l\n+   #16 = Fieldref           #4.#17        // org/apache/commons/io/input/NullInputStream.mark:J\n+   #17 = NameAndType        #18:#19       // mark:J\n+   #18 = Utf8               mark\n+   #19 = Utf8               J\n+   #20 = Fieldref           #4.#21        // org/apache/commons/io/input/NullInputStream.size:J\n+   #21 = NameAndType        #22:#19       // size:J\n+   #22 = Utf8               size\n+   #23 = Fieldref           #4.#24        // org/apache/commons/io/input/NullInputStream.markSupported:Z\n+   #24 = NameAndType        #25:#26       // markSupported:Z\n+   #25 = Utf8               markSupported\n+   #26 = Utf8               Z\n+   #27 = Fieldref           #4.#28        // org/apache/commons/io/input/NullInputStream.throwEofException:Z\n+   #28 = NameAndType        #29:#26       // throwEofException:Z\n+   #29 = Utf8               throwEofException\n+   #30 = Fieldref           #4.#31        // org/apache/commons/io/input/NullInputStream.position:J\n+   #31 = NameAndType        #32:#19       // position:J\n+   #32 = Utf8               position\n+   #33 = Class              #34           // java/lang/Integer\n+   #34 = Utf8               java/lang/Integer\n+   #35 = Long               2147483647l\n+   #37 = Integer            2147483647\n+   #38 = Fieldref           #4.#39        // org/apache/commons/io/input/NullInputStream.eof:Z\n+   #39 = NameAndType        #40:#26       // eof:Z\n+   #40 = Utf8               eof\n+   #41 = Class              #42           // java/io/EOFException\n+   #42 = Utf8               java/io/EOFException\n+   #43 = Methodref          #41.#11       // java/io/EOFException.\"<init>\":()V\n+   #44 = Methodref          #45.#46       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+   #45 = Class              #47           // org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #46 = NameAndType        #18:#48       // mark:()Ljava/lang/UnsupportedOperationException;\n+   #47 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #48 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+   #49 = Fieldref           #4.#50        // org/apache/commons/io/input/NullInputStream.readlimit:J\n+   #50 = NameAndType        #51:#19       // readlimit:J\n+   #51 = Utf8               readlimit\n+   #52 = Class              #53           // java/io/IOException\n+   #53 = Utf8               java/io/IOException\n+   #54 = String             #55           // Read after end of file\n+   #55 = Utf8               Read after end of file\n+   #56 = Methodref          #52.#57       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #57 = NameAndType        #7:#58        // \"<init>\":(Ljava/lang/String;)V\n+   #58 = Utf8               (Ljava/lang/String;)V\n+   #59 = Methodref          #4.#60        // org/apache/commons/io/input/NullInputStream.doEndOfFile:()I\n+   #60 = NameAndType        #61:#62       // doEndOfFile:()I\n+   #61 = Utf8               doEndOfFile\n+   #62 = Utf8               ()I\n+   #63 = Methodref          #4.#64        // org/apache/commons/io/input/NullInputStream.processByte:()I\n+   #64 = NameAndType        #65:#62       // processByte:()I\n+   #65 = Utf8               processByte\n+   #66 = Methodref          #4.#67        // org/apache/commons/io/input/NullInputStream.read:([BII)I\n+   #67 = NameAndType        #68:#69       // read:([BII)I\n+   #68 = Utf8               read\n+   #69 = Utf8               ([BII)I\n+   #70 = Methodref          #4.#71        // org/apache/commons/io/input/NullInputStream.processBytes:([BII)V\n+   #71 = NameAndType        #72:#73       // processBytes:([BII)V\n+   #72 = Utf8               processBytes\n+   #73 = Utf8               ([BII)V\n+   #74 = Methodref          #45.#75       // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+   #75 = NameAndType        #76:#48       // reset:()Ljava/lang/UnsupportedOperationException;\n    #76 = Utf8               reset\n-   #77 = Utf8               skip\n-   #78 = Utf8               (J)J\n-   #79 = Utf8               <clinit>\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               NullInputStream.java\n-   #82 = Utf8               org/apache/commons/io/IOUtils\n-   #83 = NameAndType        #53:#58       // \"<init>\":(JZZ)V\n-   #84 = NameAndType        #53:#54       // \"<init>\":()V\n-   #85 = NameAndType        #47:#45       // mark:J\n-   #86 = NameAndType        #44:#45       // size:J\n-   #87 = NameAndType        #52:#50       // markSupported:Z\n-   #88 = NameAndType        #51:#50       // throwEofException:Z\n-   #89 = NameAndType        #46:#45       // position:J\n-   #90 = Utf8               java/lang/Integer\n-   #91 = NameAndType        #49:#50       // eof:Z\n-   #92 = Utf8               java/io/EOFException\n-   #93 = Class              #116          // org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #94 = NameAndType        #47:#117      // mark:()Ljava/lang/UnsupportedOperationException;\n-   #95 = NameAndType        #48:#45       // readlimit:J\n-   #96 = Utf8               java/io/IOException\n-   #97 = Utf8               Read after end of file\n-   #98 = NameAndType        #53:#118      // \"<init>\":(Ljava/lang/String;)V\n-   #99 = NameAndType        #64:#60       // doEndOfFile:()I\n-  #100 = NameAndType        #70:#60       // processByte:()I\n-  #101 = NameAndType        #73:#75       // read:([BII)I\n-  #102 = NameAndType        #71:#72       // processBytes:([BII)V\n-  #103 = NameAndType        #76:#117      // reset:()Ljava/lang/UnsupportedOperationException;\n-  #104 = Utf8               No position has been marked\n-  #105 = Utf8               java/lang/StringBuilder\n-  #106 = Utf8               Marked position [\n-  #107 = NameAndType        #119:#120     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = NameAndType        #119:#121     // append:(J)Ljava/lang/StringBuilder;\n-  #109 = Utf8               ] is no longer valid - passed the read limit [\n-  #110 = Utf8               ]\n-  #111 = NameAndType        #122:#123     // toString:()Ljava/lang/String;\n-  #112 = Utf8               Skip after end of file\n-  #113 = Utf8               org/apache/commons/io/input/NullInputStream\n-  #114 = NameAndType        #42:#43       // INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n-  #115 = Utf8               java/io/InputStream\n-  #116 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #117 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #118 = Utf8               (Ljava/lang/String;)V\n-  #119 = Utf8               append\n-  #120 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #121 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #122 = Utf8               toString\n-  #123 = Utf8               ()Ljava/lang/String;\n+   #77 = String             #78           // No position has been marked\n+   #78 = Utf8               No position has been marked\n+   #79 = Class              #80           // java/lang/StringBuilder\n+   #80 = Utf8               java/lang/StringBuilder\n+   #81 = Methodref          #79.#11       // java/lang/StringBuilder.\"<init>\":()V\n+   #82 = String             #83           // Marked position [\n+   #83 = Utf8               Marked position [\n+   #84 = Methodref          #79.#85       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #85 = NameAndType        #86:#87       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = Utf8               append\n+   #87 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #88 = Methodref          #79.#89       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #89 = NameAndType        #86:#90       // append:(J)Ljava/lang/StringBuilder;\n+   #90 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #91 = String             #92           // ] is no longer valid - passed the read limit [\n+   #92 = Utf8               ] is no longer valid - passed the read limit [\n+   #93 = String             #94           // ]\n+   #94 = Utf8               ]\n+   #95 = Methodref          #79.#96       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #96 = NameAndType        #97:#98       // toString:()Ljava/lang/String;\n+   #97 = Utf8               toString\n+   #98 = Utf8               ()Ljava/lang/String;\n+   #99 = String             #100          // Skip after end of file\n+  #100 = Utf8               Skip after end of file\n+  #101 = Methodref          #4.#11        // org/apache/commons/io/input/NullInputStream.\"<init>\":()V\n+  #102 = Fieldref           #4.#103       // org/apache/commons/io/input/NullInputStream.INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n+  #103 = NameAndType        #104:#105     // INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n+  #104 = Utf8               INSTANCE\n+  #105 = Utf8               Lorg/apache/commons/io/input/NullInputStream;\n+  #106 = Utf8               Code\n+  #107 = Utf8               LineNumberTable\n+  #108 = Utf8               (J)V\n+  #109 = Utf8               available\n+  #110 = Utf8               StackMapTable\n+  #111 = Utf8               close\n+  #112 = Utf8               Exceptions\n+  #113 = Utf8               getPosition\n+  #114 = Utf8               ()J\n+  #115 = Utf8               getSize\n+  #116 = Utf8               (I)V\n+  #117 = Utf8               ()Z\n+  #118 = Utf8               ([B)I\n+  #119 = Utf8               skip\n+  #120 = Utf8               (J)J\n+  #121 = Utf8               <clinit>\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               NullInputStream.java\n {\n   public static final org.apache.commons.io.input.NullInputStream INSTANCE;\n     descriptor: Lorg/apache/commons/io/input/NullInputStream;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private final long size;\n     descriptor: J\n@@ -167,54 +167,54 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 7\n \n   public org.apache.commons.io.input.NullInputStream(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 101: 0\n         line 102: 7\n \n   public org.apache.commons.io.input.NullInputStream(long, boolean, boolean);\n     descriptor: (JZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n-         5: ldc2_w        #4                  // long -1l\n-         8: putfield      #6                  // Field mark:J\n+         5: ldc2_w        #14                 // long -1l\n+         8: putfield      #16                 // Field mark:J\n         11: aload_0\n         12: lload_1\n-        13: putfield      #7                  // Field size:J\n+        13: putfield      #20                 // Field size:J\n         16: aload_0\n         17: iload_3\n-        18: putfield      #8                  // Field markSupported:Z\n+        18: putfield      #23                 // Field markSupported:Z\n         21: aload_0\n         22: iload         4\n-        24: putfield      #9                  // Field throwEofException:Z\n+        24: putfield      #27                 // Field throwEofException:Z\n         27: return\n       LineNumberTable:\n         line 115: 0\n         line 78: 4\n         line 116: 11\n         line 117: 16\n         line 118: 21\n@@ -222,30 +222,30 @@\n \n   public int available();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #20                 // Field size:J\n          4: aload_0\n-         5: getfield      #10                 // Field position:J\n+         5: getfield      #30                 // Field position:J\n          8: lsub\n          9: lstore_1\n         10: lload_1\n         11: lconst_0\n         12: lcmp\n         13: ifgt          18\n         16: iconst_0\n         17: ireturn\n         18: lload_1\n-        19: ldc2_w        #12                 // long 2147483647l\n+        19: ldc2_w        #35                 // long 2147483647l\n         22: lcmp\n         23: ifle          29\n-        26: ldc           #14                 // int 2147483647\n+        26: ldc           #37                 // int 2147483647\n         28: ireturn\n         29: lload_1\n         30: l2i\n         31: ireturn\n       LineNumberTable:\n         line 128: 0\n         line 129: 10\n@@ -262,21 +262,21 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #15                 // Field eof:Z\n+         2: putfield      #38                 // Field eof:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #10                 // Field position:J\n+         7: putfield      #30                 // Field position:J\n         10: aload_0\n-        11: ldc2_w        #4                  // long -1l\n-        14: putfield      #6                  // Field mark:J\n+        11: ldc2_w        #14                 // long -1l\n+        14: putfield      #16                 // Field mark:J\n         17: return\n       LineNumberTable:\n         line 146: 0\n         line 147: 5\n         line 148: 10\n         line 149: 17\n     Exceptions:\n@@ -285,21 +285,21 @@\n   private int doEndOfFile() throws java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #15                 // Field eof:Z\n+         2: putfield      #38                 // Field eof:Z\n          5: aload_0\n-         6: getfield      #9                  // Field throwEofException:Z\n+         6: getfield      #27                 // Field throwEofException:Z\n          9: ifeq          20\n-        12: new           #16                 // class java/io/EOFException\n+        12: new           #41                 // class java/io/EOFException\n         15: dup\n-        16: invokespecial #17                 // Method java/io/EOFException.\"<init>\":()V\n+        16: invokespecial #43                 // Method java/io/EOFException.\"<init>\":()V\n         19: athrow\n         20: iconst_m1\n         21: ireturn\n       LineNumberTable:\n         line 160: 0\n         line 161: 5\n         line 162: 12\n@@ -311,48 +311,48 @@\n \n   public long getPosition();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field position:J\n+         1: getfield      #30                 // Field position:J\n          4: lreturn\n       LineNumberTable:\n         line 173: 0\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #20                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 182: 0\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #18                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #44                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n         12: aload_0\n-        13: getfield      #10                 // Field position:J\n-        16: putfield      #6                  // Field mark:J\n+        13: getfield      #30                 // Field position:J\n+        16: putfield      #16                 // Field mark:J\n         19: aload_0\n         20: iload_1\n         21: i2l\n-        22: putfield      #19                 // Field readlimit:J\n+        22: putfield      #49                 // Field readlimit:J\n         25: return\n       LineNumberTable:\n         line 194: 0\n         line 195: 7\n         line 197: 11\n         line 198: 19\n         line 199: 25\n@@ -361,15 +361,15 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ireturn\n       LineNumberTable:\n         line 208: 0\n \n   protected int processByte();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n@@ -391,38 +391,38 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #20                 // class java/io/IOException\n+         7: new           #52                 // class java/io/IOException\n         10: dup\n-        11: ldc           #21                 // String Read after end of file\n-        13: invokespecial #22                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #54                 // String Read after end of file\n+        13: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #23                 // Method doEndOfFile:()I\n+        30: invokespecial #59                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #30                 // Field position:J\n         39: lconst_1\n         40: ladd\n-        41: putfield      #10                 // Field position:J\n+        41: putfield      #30                 // Field position:J\n         44: aload_0\n-        45: invokevirtual #24                 // Method processByte:()I\n+        45: invokevirtual #63                 // Method processByte:()I\n         48: ireturn\n       LineNumberTable:\n         line 249: 0\n         line 250: 7\n         line 252: 17\n         line 253: 29\n         line 255: 34\n@@ -439,76 +439,76 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #25                 // Method read:([BII)I\n+         5: invokevirtual #66                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 272: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #20                 // class java/io/IOException\n+         7: new           #52                 // class java/io/IOException\n         10: dup\n-        11: ldc           #21                 // String Read after end of file\n-        13: invokespecial #22                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #54                 // String Read after end of file\n+        13: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #23                 // Method doEndOfFile:()I\n+        30: invokespecial #59                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #30                 // Field position:J\n         39: iload_3\n         40: i2l\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #30                 // Field position:J\n         45: iload_3\n         46: istore        4\n         48: aload_0\n-        49: getfield      #10                 // Field position:J\n+        49: getfield      #30                 // Field position:J\n         52: aload_0\n-        53: getfield      #7                  // Field size:J\n+        53: getfield      #20                 // Field size:J\n         56: lcmp\n         57: ifle          82\n         60: iload_3\n         61: aload_0\n-        62: getfield      #10                 // Field position:J\n+        62: getfield      #30                 // Field position:J\n         65: aload_0\n-        66: getfield      #7                  // Field size:J\n+        66: getfield      #20                 // Field size:J\n         69: lsub\n         70: l2i\n         71: isub\n         72: istore        4\n         74: aload_0\n         75: aload_0\n-        76: getfield      #7                  // Field size:J\n-        79: putfield      #10                 // Field position:J\n+        76: getfield      #20                 // Field size:J\n+        79: putfield      #30                 // Field position:J\n         82: aload_0\n         83: aload_1\n         84: iload_2\n         85: iload         4\n-        87: invokevirtual #26                 // Method processBytes:([BII)V\n+        87: invokevirtual #70                 // Method processBytes:([BII)V\n         90: iload         4\n         92: ireturn\n       LineNumberTable:\n         line 290: 0\n         line 291: 7\n         line 293: 17\n         line 294: 29\n@@ -530,64 +530,64 @@\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #27                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #74                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n-        12: getfield      #6                  // Field mark:J\n+        12: getfield      #16                 // Field mark:J\n         15: lconst_0\n         16: lcmp\n         17: ifge          30\n-        20: new           #20                 // class java/io/IOException\n+        20: new           #52                 // class java/io/IOException\n         23: dup\n-        24: ldc           #28                 // String No position has been marked\n-        26: invokespecial #22                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #77                 // String No position has been marked\n+        26: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #10                 // Field position:J\n+        31: getfield      #30                 // Field position:J\n         34: aload_0\n-        35: getfield      #6                  // Field mark:J\n+        35: getfield      #16                 // Field mark:J\n         38: aload_0\n-        39: getfield      #19                 // Field readlimit:J\n+        39: getfield      #49                 // Field readlimit:J\n         42: ladd\n         43: lcmp\n         44: ifle          94\n-        47: new           #20                 // class java/io/IOException\n+        47: new           #52                 // class java/io/IOException\n         50: dup\n-        51: new           #29                 // class java/lang/StringBuilder\n+        51: new           #79                 // class java/lang/StringBuilder\n         54: dup\n-        55: invokespecial #30                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        58: ldc           #31                 // String Marked position [\n-        60: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        58: ldc           #82                 // String Marked position [\n+        60: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: aload_0\n-        64: getfield      #6                  // Field mark:J\n-        67: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        70: ldc           #34                 // String ] is no longer valid - passed the read limit [\n-        72: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: getfield      #16                 // Field mark:J\n+        67: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        70: ldc           #91                 // String ] is no longer valid - passed the read limit [\n+        72: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         75: aload_0\n-        76: getfield      #19                 // Field readlimit:J\n-        79: invokevirtual #33                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        82: ldc           #35                 // String ]\n-        84: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        87: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        90: invokespecial #22                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        76: getfield      #49                 // Field readlimit:J\n+        79: invokevirtual #88                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        82: ldc           #93                 // String ]\n+        84: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        90: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         93: athrow\n         94: aload_0\n         95: aload_0\n-        96: getfield      #6                  // Field mark:J\n-        99: putfield      #10                 // Field position:J\n+        96: getfield      #16                 // Field mark:J\n+        99: putfield      #30                 // Field position:J\n        102: aload_0\n        103: iconst_0\n-       104: putfield      #15                 // Field eof:Z\n+       104: putfield      #38                 // Field eof:Z\n        107: return\n       LineNumberTable:\n         line 316: 0\n         line 317: 7\n         line 319: 11\n         line 320: 20\n         line 322: 30\n@@ -604,57 +604,57 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #15                 // Field eof:Z\n+         1: getfield      #38                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #20                 // class java/io/IOException\n+         7: new           #52                 // class java/io/IOException\n         10: dup\n-        11: ldc           #37                 // String Skip after end of file\n-        13: invokespecial #22                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #99                 // String Skip after end of file\n+        13: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #30                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          35\n         29: aload_0\n-        30: invokespecial #23                 // Method doEndOfFile:()I\n+        30: invokespecial #59                 // Method doEndOfFile:()I\n         33: i2l\n         34: lreturn\n         35: aload_0\n         36: dup\n-        37: getfield      #10                 // Field position:J\n+        37: getfield      #30                 // Field position:J\n         40: lload_1\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #30                 // Field position:J\n         45: lload_1\n         46: lstore_3\n         47: aload_0\n-        48: getfield      #10                 // Field position:J\n+        48: getfield      #30                 // Field position:J\n         51: aload_0\n-        52: getfield      #7                  // Field size:J\n+        52: getfield      #20                 // Field size:J\n         55: lcmp\n         56: ifle          79\n         59: lload_1\n         60: aload_0\n-        61: getfield      #10                 // Field position:J\n+        61: getfield      #30                 // Field position:J\n         64: aload_0\n-        65: getfield      #7                  // Field size:J\n+        65: getfield      #20                 // Field size:J\n         68: lsub\n         69: lsub\n         70: lstore_3\n         71: aload_0\n         72: aload_0\n-        73: getfield      #7                  // Field size:J\n-        76: putfield      #10                 // Field position:J\n+        73: getfield      #20                 // Field size:J\n+        76: putfield      #30                 // Field position:J\n         79: lload_3\n         80: lreturn\n       LineNumberTable:\n         line 344: 0\n         line 345: 7\n         line 347: 17\n         line 348: 29\n@@ -674,16 +674,16 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #38                 // class org/apache/commons/io/input/NullInputStream\n+         0: new           #4                  // class org/apache/commons/io/input/NullInputStream\n          3: dup\n-         4: invokespecial #39                 // Method \"<init>\":()V\n-         7: putstatic     #40                 // Field INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n+         4: invokespecial #101                // Method \"<init>\":()V\n+         7: putstatic     #102                // Field INSTANCE:Lorg/apache/commons/io/input/NullInputStream;\n         10: return\n       LineNumberTable:\n         line 74: 0\n }\n SourceFile: \"NullInputStream.java\"\n"}]}
