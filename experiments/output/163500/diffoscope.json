{"diffoscope-json-version": 1, "source1": "first/X5455_ExtendedTimestamp.class", "source2": "second/X5455_ExtendedTimestamp.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,83 +1,83 @@\n-  SHA-256 checksum 3ad45ab7dec827c0a54ee3fb16b7f1bd730239f39c0eeacbecd5b1baaf4f20a6\n+  SHA-256 checksum 07774cb29373fc52193e4752cfedfe860206de6a2162ed78013e82aa91606844\n   Compiled from \"X5455_ExtendedTimestamp.java\"\n public class org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp implements org.apache.commons.compress.archivers.zip.ZipExtraField,java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #12                         // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n   super_class: #66                        // java/lang/Object\n   interfaces: 3, fields: 12, methods: 34, attributes: 1\n Constant pool:\n-    #1 = Methodref          #66.#184      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #12.#185      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #3 = Class              #186          // org/apache/commons/compress/archivers/zip/ZipShort\n-    #4 = Fieldref           #12.#187      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit0_modifyTimePresent:Z\n-    #5 = Fieldref           #12.#188      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit1_accessTimePresent:Z\n-    #6 = Fieldref           #12.#189      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-    #7 = Fieldref           #12.#190      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit2_createTimePresent:Z\n-    #8 = Fieldref           #12.#191      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.createTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-    #9 = Methodref          #3.#192       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #10 = Methodref          #12.#193      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #11 = Methodref          #3.#194       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #12 = Class              #195          // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n-   #13 = Fieldref           #12.#196      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #14 = Methodref          #20.#197      // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B\n-   #15 = Methodref          #198.#199     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #16 = Methodref          #12.#200      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #17 = Methodref          #12.#201      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getLocalFileDataData:()[B\n-   #18 = Methodref          #12.#202      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.reset:()V\n-   #19 = Methodref          #12.#203      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setFlags:(B)V\n-   #20 = Class              #204          // org/apache/commons/compress/archivers/zip/ZipLong\n-   #21 = Methodref          #20.#205      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n-   #22 = Methodref          #12.#206      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.parseFromLocalFileData:([BII)V\n-   #23 = Fieldref           #12.#207      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.flags:B\n-   #24 = Methodref          #12.#208      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.zipLongToDate:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n-   #25 = Methodref          #12.#209      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.dateToZipLong:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #26 = Methodref          #12.#210      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-   #27 = Methodref          #12.#211      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-   #28 = Methodref          #12.#212      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-   #29 = Methodref          #53.#213      // java/util/Date.getTime:()J\n+    #1 = Methodref          #66.#180      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #12.#181      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #3 = Class              #182          // org/apache/commons/compress/archivers/zip/ZipShort\n+    #4 = Fieldref           #12.#183      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit0_modifyTimePresent:Z\n+    #5 = Fieldref           #12.#184      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit1_accessTimePresent:Z\n+    #6 = Fieldref           #12.#185      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+    #7 = Fieldref           #12.#186      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.bit2_createTimePresent:Z\n+    #8 = Fieldref           #12.#187      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.createTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+    #9 = Methodref          #3.#188       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #10 = Methodref          #12.#189      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #11 = Methodref          #3.#190       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #12 = Class              #191          // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n+   #13 = Fieldref           #12.#192      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #14 = Methodref          #20.#193      // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:()[B\n+   #15 = Methodref          #194.#195     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #16 = Methodref          #12.#196      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #17 = Methodref          #12.#197      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getLocalFileDataData:()[B\n+   #18 = Methodref          #12.#198      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.reset:()V\n+   #19 = Methodref          #12.#199      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setFlags:(B)V\n+   #20 = Class              #200          // org/apache/commons/compress/archivers/zip/ZipLong\n+   #21 = Methodref          #20.#201      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n+   #22 = Methodref          #12.#202      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.parseFromLocalFileData:([BII)V\n+   #23 = Fieldref           #12.#203      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.flags:B\n+   #24 = Methodref          #12.#204      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.zipLongToDate:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n+   #25 = Methodref          #12.#205      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.dateToZipLong:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #26 = Methodref          #12.#206      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+   #27 = Methodref          #12.#207      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+   #28 = Methodref          #12.#208      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+   #29 = Methodref          #53.#209      // java/util/Date.getTime:()J\n    #30 = Long               1000l\n-   #32 = Methodref          #12.#214      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.unixTimeToZipLong:(J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #33 = Class              #215          // java/lang/StringBuilder\n-   #34 = Methodref          #33.#184      // java/lang/StringBuilder.\"<init>\":()V\n-   #35 = String             #216          // 0x5455 Zip Extra Field: Flags=\n-   #36 = Methodref          #33.#217      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #37 = Methodref          #218.#219     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n-   #38 = Methodref          #56.#220      // java/lang/Integer.toBinaryString:(I)Ljava/lang/String;\n-   #39 = String             #221          //\n-   #40 = Methodref          #12.#222      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getModifyJavaTime:()Ljava/util/Date;\n-   #41 = String             #223          //  Modify:[\n-   #42 = Methodref          #33.#224      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #43 = String             #225          // ]\n-   #44 = Methodref          #12.#226      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getAccessJavaTime:()Ljava/util/Date;\n-   #45 = String             #227          //  Access:[\n-   #46 = Methodref          #12.#228      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getCreateJavaTime:()Ljava/util/Date;\n-   #47 = String             #229          //  Create:[\n-   #48 = Methodref          #33.#230      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #49 = Methodref          #66.#231      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #50 = Methodref          #20.#232      // org/apache/commons/compress/archivers/zip/ZipLong.equals:(Ljava/lang/Object;)Z\n-   #51 = Methodref          #20.#233      // org/apache/commons/compress/archivers/zip/ZipLong.hashCode:()I\n-   #52 = Methodref          #56.#234      // java/lang/Integer.rotateLeft:(II)I\n-   #53 = Class              #235          // java/util/Date\n-   #54 = Methodref          #20.#236      // org/apache/commons/compress/archivers/zip/ZipLong.getIntValue:()I\n-   #55 = Methodref          #53.#237      // java/util/Date.\"<init>\":(J)V\n-   #56 = Class              #238          // java/lang/Integer\n+   #32 = Methodref          #12.#210      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.unixTimeToZipLong:(J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #33 = Class              #211          // java/lang/StringBuilder\n+   #34 = Methodref          #33.#180      // java/lang/StringBuilder.\"<init>\":()V\n+   #35 = String             #212          // 0x5455 Zip Extra Field: Flags=\n+   #36 = Methodref          #33.#213      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #37 = Methodref          #214.#215     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n+   #38 = Methodref          #56.#216      // java/lang/Integer.toBinaryString:(I)Ljava/lang/String;\n+   #39 = String             #217          //\n+   #40 = Methodref          #12.#218      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getModifyJavaTime:()Ljava/util/Date;\n+   #41 = String             #219          //  Modify:[\n+   #42 = Methodref          #33.#220      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #43 = String             #221          // ]\n+   #44 = Methodref          #12.#222      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getAccessJavaTime:()Ljava/util/Date;\n+   #45 = String             #223          //  Access:[\n+   #46 = Methodref          #12.#224      // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp.getCreateJavaTime:()Ljava/util/Date;\n+   #47 = String             #225          //  Create:[\n+   #48 = Methodref          #33.#226      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #49 = Methodref          #66.#227      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #50 = Methodref          #20.#228      // org/apache/commons/compress/archivers/zip/ZipLong.equals:(Ljava/lang/Object;)Z\n+   #51 = Methodref          #20.#229      // org/apache/commons/compress/archivers/zip/ZipLong.hashCode:()I\n+   #52 = Methodref          #56.#230      // java/lang/Integer.rotateLeft:(II)I\n+   #53 = Class              #231          // java/util/Date\n+   #54 = Methodref          #20.#232      // org/apache/commons/compress/archivers/zip/ZipLong.getIntValue:()I\n+   #55 = Methodref          #53.#233      // java/util/Date.\"<init>\":(J)V\n+   #56 = Class              #234          // java/lang/Integer\n    #57 = Long               -2147483648l\n    #59 = Long               2147483647l\n-   #61 = Class              #239          // java/lang/IllegalArgumentException\n-   #62 = String             #240          // X5455 timestamps must fit in a signed 32 bit integer:\n-   #63 = Methodref          #33.#241      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #64 = Methodref          #61.#242      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #65 = Methodref          #20.#237      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n-   #66 = Class              #243          // java/lang/Object\n-   #67 = Class              #244          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #68 = Class              #245          // java/lang/Cloneable\n-   #69 = Class              #246          // java/io/Serializable\n+   #61 = Class              #235          // java/lang/IllegalArgumentException\n+   #62 = String             #236          // X5455 timestamps must fit in a signed 32 bit integer:\n+   #63 = Methodref          #33.#237      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #64 = Methodref          #61.#238      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #65 = Methodref          #20.#233      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n+   #66 = Class              #239          // java/lang/Object\n+   #67 = Class              #240          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #68 = Class              #241          // java/lang/Cloneable\n+   #69 = Class              #242          // java/io/Serializable\n    #70 = Utf8               HEADER_ID\n    #71 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n    #72 = Utf8               serialVersionUID\n    #73 = Utf8               J\n    #74 = Utf8               ConstantValue\n    #75 = Long               1l\n    #77 = Utf8               MODIFY_TIME_BIT\n@@ -103,182 +103,178 @@\n    #97 = Utf8               LocalVariableTable\n    #98 = Utf8               this\n    #99 = Utf8               Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n   #100 = Utf8               getHeaderId\n   #101 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n   #102 = Utf8               getLocalFileDataLength\n   #103 = Utf8               StackMapTable\n-  #104 = Class              #195          // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n-  #105 = Utf8               getCentralDirectoryLength\n-  #106 = Utf8               getLocalFileDataData\n-  #107 = Utf8               ()[B\n-  #108 = Utf8               data\n-  #109 = Utf8               [B\n-  #110 = Utf8               pos\n-  #111 = Utf8               I\n-  #112 = Class              #109          // \"[B\"\n-  #113 = Utf8               getCentralDirectoryData\n-  #114 = Utf8               centralData\n-  #115 = Utf8               localData\n-  #116 = Utf8               parseFromLocalFileData\n-  #117 = Utf8               ([BII)V\n-  #118 = Utf8               offset\n-  #119 = Utf8               length\n-  #120 = Utf8               len\n-  #121 = Utf8               Exceptions\n-  #122 = Class              #247          // java/util/zip/ZipException\n-  #123 = Utf8               parseFromCentralDirectoryData\n-  #124 = Utf8               buffer\n-  #125 = Utf8               reset\n-  #126 = Utf8               setFlags\n-  #127 = Utf8               (B)V\n-  #128 = Utf8               getFlags\n-  #129 = Utf8               ()B\n-  #130 = Utf8               isBit0_modifyTimePresent\n-  #131 = Utf8               ()Z\n-  #132 = Utf8               isBit1_accessTimePresent\n-  #133 = Utf8               isBit2_createTimePresent\n-  #134 = Utf8               getModifyTime\n-  #135 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #136 = Utf8               getAccessTime\n-  #137 = Utf8               getCreateTime\n-  #138 = Utf8               getModifyJavaTime\n-  #139 = Utf8               ()Ljava/util/Date;\n-  #140 = Utf8               getAccessJavaTime\n-  #141 = Utf8               getCreateJavaTime\n-  #142 = Utf8               setModifyTime\n-  #143 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-  #144 = Utf8               l\n-  #145 = Class              #204          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #146 = Utf8               setAccessTime\n-  #147 = Utf8               setCreateTime\n-  #148 = Utf8               setModifyJavaTime\n-  #149 = Utf8               (Ljava/util/Date;)V\n-  #150 = Utf8               d\n-  #151 = Utf8               Ljava/util/Date;\n-  #152 = Utf8               setAccessJavaTime\n-  #153 = Utf8               setCreateJavaTime\n-  #154 = Utf8               dateToZipLong\n-  #155 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #156 = Utf8               toString\n-  #157 = Utf8               ()Ljava/lang/String;\n-  #158 = Utf8               m\n-  #159 = Utf8               a\n-  #160 = Utf8               c\n-  #161 = Utf8               buf\n-  #162 = Utf8               Ljava/lang/StringBuilder;\n-  #163 = Class              #215          // java/lang/StringBuilder\n-  #164 = Utf8               clone\n-  #165 = Utf8               ()Ljava/lang/Object;\n-  #166 = Class              #248          // java/lang/CloneNotSupportedException\n-  #167 = Utf8               equals\n-  #168 = Utf8               (Ljava/lang/Object;)Z\n-  #169 = Utf8               xf\n-  #170 = Utf8               o\n-  #171 = Utf8               Ljava/lang/Object;\n-  #172 = Utf8               hashCode\n-  #173 = Utf8               ()I\n-  #174 = Utf8               hc\n-  #175 = Utf8               zipLongToDate\n-  #176 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n-  #177 = Utf8               unixTime\n-  #178 = Class              #235          // java/util/Date\n-  #179 = Utf8               unixTimeToZipLong\n-  #180 = Utf8               (J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #181 = Utf8               <clinit>\n-  #182 = Utf8               SourceFile\n-  #183 = Utf8               X5455_ExtendedTimestamp.java\n-  #184 = NameAndType        #93:#94       // \"<init>\":()V\n-  #185 = NameAndType        #70:#71       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #186 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #187 = NameAndType        #85:#86       // bit0_modifyTimePresent:Z\n-  #188 = NameAndType        #87:#86       // bit1_accessTimePresent:Z\n-  #189 = NameAndType        #91:#90       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #190 = NameAndType        #88:#86       // bit2_createTimePresent:Z\n-  #191 = NameAndType        #92:#90       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #192 = NameAndType        #93:#249      // \"<init>\":(I)V\n-  #193 = NameAndType        #102:#101     // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #194 = NameAndType        #250:#173     // getValue:()I\n-  #195 = Utf8               org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n-  #196 = NameAndType        #89:#90       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #197 = NameAndType        #251:#107     // getBytes:()[B\n-  #198 = Class              #252          // java/lang/System\n-  #199 = NameAndType        #253:#254     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #200 = NameAndType        #105:#101     // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #201 = NameAndType        #106:#107     // getLocalFileDataData:()[B\n-  #202 = NameAndType        #125:#94      // reset:()V\n-  #203 = NameAndType        #126:#127     // setFlags:(B)V\n-  #204 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #205 = NameAndType        #93:#255      // \"<init>\":([BI)V\n-  #206 = NameAndType        #116:#117     // parseFromLocalFileData:([BII)V\n-  #207 = NameAndType        #84:#78       // flags:B\n-  #208 = NameAndType        #175:#176     // zipLongToDate:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n-  #209 = NameAndType        #154:#155     // dateToZipLong:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #210 = NameAndType        #142:#143     // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-  #211 = NameAndType        #146:#143     // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-  #212 = NameAndType        #147:#143     // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n-  #213 = NameAndType        #256:#257     // getTime:()J\n-  #214 = NameAndType        #179:#180     // unixTimeToZipLong:(J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #215 = Utf8               java/lang/StringBuilder\n-  #216 = Utf8               0x5455 Zip Extra Field: Flags=\n-  #217 = NameAndType        #258:#259     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #218 = Class              #260          // org/apache/commons/compress/archivers/zip/ZipUtil\n-  #219 = NameAndType        #261:#262     // unsignedIntToSignedByte:(I)B\n-  #220 = NameAndType        #263:#264     // toBinaryString:(I)Ljava/lang/String;\n-  #221 = Utf8\n-  #222 = NameAndType        #138:#139     // getModifyJavaTime:()Ljava/util/Date;\n-  #223 = Utf8                Modify:[\n-  #224 = NameAndType        #258:#265     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #225 = Utf8               ]\n-  #226 = NameAndType        #140:#139     // getAccessJavaTime:()Ljava/util/Date;\n-  #227 = Utf8                Access:[\n-  #228 = NameAndType        #141:#139     // getCreateJavaTime:()Ljava/util/Date;\n-  #229 = Utf8                Create:[\n-  #230 = NameAndType        #156:#157     // toString:()Ljava/lang/String;\n-  #231 = NameAndType        #164:#165     // clone:()Ljava/lang/Object;\n-  #232 = NameAndType        #167:#168     // equals:(Ljava/lang/Object;)Z\n-  #233 = NameAndType        #172:#173     // hashCode:()I\n-  #234 = NameAndType        #266:#267     // rotateLeft:(II)I\n-  #235 = Utf8               java/util/Date\n-  #236 = NameAndType        #268:#173     // getIntValue:()I\n-  #237 = NameAndType        #93:#269      // \"<init>\":(J)V\n-  #238 = Utf8               java/lang/Integer\n-  #239 = Utf8               java/lang/IllegalArgumentException\n-  #240 = Utf8               X5455 timestamps must fit in a signed 32 bit integer:\n-  #241 = NameAndType        #258:#270     // append:(J)Ljava/lang/StringBuilder;\n-  #242 = NameAndType        #93:#271      // \"<init>\":(Ljava/lang/String;)V\n-  #243 = Utf8               java/lang/Object\n-  #244 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #245 = Utf8               java/lang/Cloneable\n-  #246 = Utf8               java/io/Serializable\n-  #247 = Utf8               java/util/zip/ZipException\n-  #248 = Utf8               java/lang/CloneNotSupportedException\n-  #249 = Utf8               (I)V\n-  #250 = Utf8               getValue\n-  #251 = Utf8               getBytes\n-  #252 = Utf8               java/lang/System\n-  #253 = Utf8               arraycopy\n-  #254 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #255 = Utf8               ([BI)V\n-  #256 = Utf8               getTime\n-  #257 = Utf8               ()J\n-  #258 = Utf8               append\n-  #259 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #260 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-  #261 = Utf8               unsignedIntToSignedByte\n-  #262 = Utf8               (I)B\n-  #263 = Utf8               toBinaryString\n-  #264 = Utf8               (I)Ljava/lang/String;\n-  #265 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #266 = Utf8               rotateLeft\n-  #267 = Utf8               (II)I\n-  #268 = Utf8               getIntValue\n-  #269 = Utf8               (J)V\n-  #270 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #271 = Utf8               (Ljava/lang/String;)V\n+  #104 = Utf8               getCentralDirectoryLength\n+  #105 = Utf8               getLocalFileDataData\n+  #106 = Utf8               ()[B\n+  #107 = Utf8               data\n+  #108 = Utf8               [B\n+  #109 = Utf8               pos\n+  #110 = Utf8               I\n+  #111 = Class              #108          // \"[B\"\n+  #112 = Utf8               getCentralDirectoryData\n+  #113 = Utf8               centralData\n+  #114 = Utf8               localData\n+  #115 = Utf8               parseFromLocalFileData\n+  #116 = Utf8               ([BII)V\n+  #117 = Utf8               offset\n+  #118 = Utf8               length\n+  #119 = Utf8               len\n+  #120 = Utf8               Exceptions\n+  #121 = Class              #243          // java/util/zip/ZipException\n+  #122 = Utf8               parseFromCentralDirectoryData\n+  #123 = Utf8               buffer\n+  #124 = Utf8               reset\n+  #125 = Utf8               setFlags\n+  #126 = Utf8               (B)V\n+  #127 = Utf8               getFlags\n+  #128 = Utf8               ()B\n+  #129 = Utf8               isBit0_modifyTimePresent\n+  #130 = Utf8               ()Z\n+  #131 = Utf8               isBit1_accessTimePresent\n+  #132 = Utf8               isBit2_createTimePresent\n+  #133 = Utf8               getModifyTime\n+  #134 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #135 = Utf8               getAccessTime\n+  #136 = Utf8               getCreateTime\n+  #137 = Utf8               getModifyJavaTime\n+  #138 = Utf8               ()Ljava/util/Date;\n+  #139 = Utf8               getAccessJavaTime\n+  #140 = Utf8               getCreateJavaTime\n+  #141 = Utf8               setModifyTime\n+  #142 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+  #143 = Utf8               l\n+  #144 = Utf8               setAccessTime\n+  #145 = Utf8               setCreateTime\n+  #146 = Utf8               setModifyJavaTime\n+  #147 = Utf8               (Ljava/util/Date;)V\n+  #148 = Utf8               d\n+  #149 = Utf8               Ljava/util/Date;\n+  #150 = Utf8               setAccessJavaTime\n+  #151 = Utf8               setCreateJavaTime\n+  #152 = Utf8               dateToZipLong\n+  #153 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #154 = Utf8               toString\n+  #155 = Utf8               ()Ljava/lang/String;\n+  #156 = Utf8               m\n+  #157 = Utf8               a\n+  #158 = Utf8               c\n+  #159 = Utf8               buf\n+  #160 = Utf8               Ljava/lang/StringBuilder;\n+  #161 = Utf8               clone\n+  #162 = Utf8               ()Ljava/lang/Object;\n+  #163 = Class              #244          // java/lang/CloneNotSupportedException\n+  #164 = Utf8               equals\n+  #165 = Utf8               (Ljava/lang/Object;)Z\n+  #166 = Utf8               xf\n+  #167 = Utf8               o\n+  #168 = Utf8               Ljava/lang/Object;\n+  #169 = Utf8               hashCode\n+  #170 = Utf8               ()I\n+  #171 = Utf8               hc\n+  #172 = Utf8               zipLongToDate\n+  #173 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n+  #174 = Utf8               unixTime\n+  #175 = Utf8               unixTimeToZipLong\n+  #176 = Utf8               (J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #177 = Utf8               <clinit>\n+  #178 = Utf8               SourceFile\n+  #179 = Utf8               X5455_ExtendedTimestamp.java\n+  #180 = NameAndType        #93:#94       // \"<init>\":()V\n+  #181 = NameAndType        #70:#71       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #182 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #183 = NameAndType        #85:#86       // bit0_modifyTimePresent:Z\n+  #184 = NameAndType        #87:#86       // bit1_accessTimePresent:Z\n+  #185 = NameAndType        #91:#90       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #186 = NameAndType        #88:#86       // bit2_createTimePresent:Z\n+  #187 = NameAndType        #92:#90       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #188 = NameAndType        #93:#245      // \"<init>\":(I)V\n+  #189 = NameAndType        #102:#101     // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #190 = NameAndType        #246:#170     // getValue:()I\n+  #191 = Utf8               org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n+  #192 = NameAndType        #89:#90       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #193 = NameAndType        #247:#106     // getBytes:()[B\n+  #194 = Class              #248          // java/lang/System\n+  #195 = NameAndType        #249:#250     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #196 = NameAndType        #104:#101     // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #197 = NameAndType        #105:#106     // getLocalFileDataData:()[B\n+  #198 = NameAndType        #124:#94      // reset:()V\n+  #199 = NameAndType        #125:#126     // setFlags:(B)V\n+  #200 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #201 = NameAndType        #93:#251      // \"<init>\":([BI)V\n+  #202 = NameAndType        #115:#116     // parseFromLocalFileData:([BII)V\n+  #203 = NameAndType        #84:#78       // flags:B\n+  #204 = NameAndType        #172:#173     // zipLongToDate:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)Ljava/util/Date;\n+  #205 = NameAndType        #152:#153     // dateToZipLong:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #206 = NameAndType        #141:#142     // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+  #207 = NameAndType        #144:#142     // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+  #208 = NameAndType        #145:#142     // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipLong;)V\n+  #209 = NameAndType        #252:#253     // getTime:()J\n+  #210 = NameAndType        #175:#176     // unixTimeToZipLong:(J)Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+  #211 = Utf8               java/lang/StringBuilder\n+  #212 = Utf8               0x5455 Zip Extra Field: Flags=\n+  #213 = NameAndType        #254:#255     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #214 = Class              #256          // org/apache/commons/compress/archivers/zip/ZipUtil\n+  #215 = NameAndType        #257:#258     // unsignedIntToSignedByte:(I)B\n+  #216 = NameAndType        #259:#260     // toBinaryString:(I)Ljava/lang/String;\n+  #217 = Utf8\n+  #218 = NameAndType        #137:#138     // getModifyJavaTime:()Ljava/util/Date;\n+  #219 = Utf8                Modify:[\n+  #220 = NameAndType        #254:#261     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #221 = Utf8               ]\n+  #222 = NameAndType        #139:#138     // getAccessJavaTime:()Ljava/util/Date;\n+  #223 = Utf8                Access:[\n+  #224 = NameAndType        #140:#138     // getCreateJavaTime:()Ljava/util/Date;\n+  #225 = Utf8                Create:[\n+  #226 = NameAndType        #154:#155     // toString:()Ljava/lang/String;\n+  #227 = NameAndType        #161:#162     // clone:()Ljava/lang/Object;\n+  #228 = NameAndType        #164:#165     // equals:(Ljava/lang/Object;)Z\n+  #229 = NameAndType        #169:#170     // hashCode:()I\n+  #230 = NameAndType        #262:#263     // rotateLeft:(II)I\n+  #231 = Utf8               java/util/Date\n+  #232 = NameAndType        #264:#170     // getIntValue:()I\n+  #233 = NameAndType        #93:#265      // \"<init>\":(J)V\n+  #234 = Utf8               java/lang/Integer\n+  #235 = Utf8               java/lang/IllegalArgumentException\n+  #236 = Utf8               X5455 timestamps must fit in a signed 32 bit integer:\n+  #237 = NameAndType        #254:#266     // append:(J)Ljava/lang/StringBuilder;\n+  #238 = NameAndType        #93:#267      // \"<init>\":(Ljava/lang/String;)V\n+  #239 = Utf8               java/lang/Object\n+  #240 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #241 = Utf8               java/lang/Cloneable\n+  #242 = Utf8               java/io/Serializable\n+  #243 = Utf8               java/util/zip/ZipException\n+  #244 = Utf8               java/lang/CloneNotSupportedException\n+  #245 = Utf8               (I)V\n+  #246 = Utf8               getValue\n+  #247 = Utf8               getBytes\n+  #248 = Utf8               java/lang/System\n+  #249 = Utf8               arraycopy\n+  #250 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #251 = Utf8               ([BI)V\n+  #252 = Utf8               getTime\n+  #253 = Utf8               ()J\n+  #254 = Utf8               append\n+  #255 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #256 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+  #257 = Utf8               unsignedIntToSignedByte\n+  #258 = Utf8               (I)B\n+  #259 = Utf8               toBinaryString\n+  #260 = Utf8               (I)Ljava/lang/String;\n+  #261 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #262 = Utf8               rotateLeft\n+  #263 = Utf8               (II)I\n+  #264 = Utf8               getIntValue\n+  #265 = Utf8               (J)V\n+  #266 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #267 = Utf8               (Ljava/lang/String;)V\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 1l;\n     descriptor: J\n@@ -390,14 +386,18 @@\n         53: goto          57\n         56: iconst_0\n         57: iadd\n         58: invokespecial #9                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         61: areturn\n       LineNumberTable:\n         line 142: 0\n+        line 143: 5\n+        line 144: 18\n+        line 145: 38\n+        line 142: 61\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      62     0  this   Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n       StackMapTable: number_of_entries = 6\n         frame_type = 255 /* full_frame */\n           offset_delta = 16\n           locals = [ class org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp ]\n@@ -438,14 +438,16 @@\n         13: goto          17\n         16: iconst_0\n         17: iadd\n         18: invokespecial #9                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         21: areturn\n       LineNumberTable:\n         line 161: 0\n+        line 162: 5\n+        line 161: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 16\n           locals = [ class org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp ]\n@@ -988,14 +990,15 @@\n         38: aload_0\n         39: aload_1\n         40: putfield      #13                 // Field modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         43: return\n       LineNumberTable:\n         line 419: 0\n         line 420: 13\n+        line 421: 27\n         line 422: 38\n         line 423: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      44     0  this   Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n             0      44     1     l   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n       StackMapTable: number_of_entries = 4\n@@ -1041,14 +1044,15 @@\n         38: aload_0\n         39: aload_1\n         40: putfield      #6                  // Field accessTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         43: return\n       LineNumberTable:\n         line 438: 0\n         line 439: 13\n+        line 440: 27\n         line 441: 38\n         line 442: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      44     0  this   Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n             0      44     1     l   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n       StackMapTable: number_of_entries = 4\n@@ -1094,14 +1098,15 @@\n         38: aload_0\n         39: aload_1\n         40: putfield      #8                  // Field createTime:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         43: return\n       LineNumberTable:\n         line 457: 0\n         line 458: 13\n+        line 459: 27\n         line 460: 38\n         line 461: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      44     0  this   Lorg/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp;\n             0      44     1     l   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n       StackMapTable: number_of_entries = 4\n"}]}
