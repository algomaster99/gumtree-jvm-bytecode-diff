{"diffoscope-json-version": 1, "source1": "first/TypeNameCheck.class", "source2": "second/TypeNameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,52 +1,49 @@\n-  SHA-256 checksum 5f228863dcfb72cd18afc67a2a5c14771799914ef5fe76c5eec2c6fc4b6a0af1\n+  SHA-256 checksum 313a26f74ae34cd3d58ee615b1fbe098dece1890fb23d1628167d8528194f0bc\n   Compiled from \"TypeNameCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheck extends com.puppycrawl.tools.checkstyle.checks.naming.AbstractAccessControlNameCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck\n   super_class: #7                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck\n   interfaces: 0, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Class              #24            // com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck\n-   #2 = String             #25            // ^[A-Z][a-zA-Z0-9]*$\n-   #3 = Methodref          #7.#26         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.\"<init>\":(Ljava/lang/String;)V\n-   #4 = Methodref          #1.#27         // com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.getAcceptableTokens:()[I\n-   #5 = Class              #28            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #6 = Fieldref           #29.#30        // com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n-   #7 = Class              #31            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck\n+   #1 = Class              #21            // com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck\n+   #2 = String             #22            // ^[A-Z][a-zA-Z0-9]*$\n+   #3 = Methodref          #7.#23         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.\"<init>\":(Ljava/lang/String;)V\n+   #4 = Methodref          #1.#24         // com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck.getAcceptableTokens:()[I\n+   #5 = Class              #25            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+   #6 = Fieldref           #26.#27        // com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n+   #7 = Class              #28            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck\n    #8 = Utf8               DEFAULT_PATTERN\n    #9 = Utf8               Ljava/lang/String;\n   #10 = Utf8               ConstantValue\n   #11 = Utf8               <init>\n   #12 = Utf8               ()V\n   #13 = Utf8               Code\n   #14 = Utf8               LineNumberTable\n-  #15 = Utf8               LocalVariableTable\n-  #16 = Utf8               this\n-  #17 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck;\n-  #18 = Utf8               getDefaultTokens\n-  #19 = Utf8               ()[I\n-  #20 = Utf8               getAcceptableTokens\n-  #21 = Utf8               getRequiredTokens\n-  #22 = Utf8               SourceFile\n-  #23 = Utf8               TypeNameCheck.java\n-  #24 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck\n-  #25 = Utf8               ^[A-Z][a-zA-Z0-9]*$\n-  #26 = NameAndType        #11:#32        // \"<init>\":(Ljava/lang/String;)V\n-  #27 = NameAndType        #20:#19        // getAcceptableTokens:()[I\n-  #28 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-  #29 = Class              #33            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #30 = NameAndType        #34:#35        // EMPTY_INT_ARRAY:[I\n-  #31 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck\n-  #32 = Utf8               (Ljava/lang/String;)V\n-  #33 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #34 = Utf8               EMPTY_INT_ARRAY\n-  #35 = Utf8               [I\n+  #15 = Utf8               getDefaultTokens\n+  #16 = Utf8               ()[I\n+  #17 = Utf8               getAcceptableTokens\n+  #18 = Utf8               getRequiredTokens\n+  #19 = Utf8               SourceFile\n+  #20 = Utf8               TypeNameCheck.java\n+  #21 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck\n+  #22 = Utf8               ^[A-Z][a-zA-Z0-9]*$\n+  #23 = NameAndType        #11:#29        // \"<init>\":(Ljava/lang/String;)V\n+  #24 = NameAndType        #17:#16        // getAcceptableTokens:()[I\n+  #25 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #26 = Class              #30            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+  #27 = NameAndType        #31:#32        // EMPTY_INT_ARRAY:[I\n+  #28 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck\n+  #29 = Utf8               (Ljava/lang/String;)V\n+  #30 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+  #31 = Utf8               EMPTY_INT_ARRAY\n+  #32 = Utf8               [I\n {\n   public static final java.lang.String DEFAULT_PATTERN = \"^[A-Z][a-zA-Z0-9]*$\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String ^[A-Z][a-zA-Z0-9]*$\n \n   public com.puppycrawl.tools.checkstyle.checks.naming.TypeNameCheck();\n@@ -57,31 +54,25 @@\n          0: aload_0\n          1: ldc           #2                  // String ^[A-Z][a-zA-Z0-9]*$\n          3: invokespecial #3                  // Method com/puppycrawl/tools/checkstyle/checks/naming/AbstractAccessControlNameCheck.\"<init>\":(Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 150: 0\n         line 151: 6\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck;\n \n   public int[] getDefaultTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokevirtual #4                  // Method getAcceptableTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 155: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck;\n \n   public int[] getAcceptableTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_5\n@@ -105,25 +96,19 @@\n         25: dup\n         26: iconst_4\n         27: sipush        199\n         30: iastore\n         31: areturn\n       LineNumberTable:\n         line 160: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      32     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck;\n \n   public int[] getRequiredTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: getstatic     #6                  // Field com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n          3: areturn\n       LineNumberTable:\n         line 171: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       4     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/TypeNameCheck;\n }\n SourceFile: \"TypeNameCheck.java\"\n"}]}
