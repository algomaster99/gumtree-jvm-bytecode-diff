{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIInputStream.class", "source2": "second/FromNetASCIIInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 260a561e558be607b1fad6228055d21a608214640b8e6a249f47440283216396\n+  SHA-256 checksum 6721f23c8bfeb55e3a6ca9b4faea66a0ce9e7d0d0b829150953771a217d1039e\n   Compiled from \"FromNetASCIIInputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIInputStream extends java.io.PushbackInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #30                         // org/apache/commons/net/io/FromNetASCIIInputStream\n   super_class: #31                        // java/io/PushbackInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #30.#72       // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-    #2 = Fieldref           #30.#73       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-    #3 = Methodref          #31.#74       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #30.#75       // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n-    #5 = Methodref          #31.#76       // java/io/PushbackInputStream.read:()I\n-    #6 = Methodref          #30.#77       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n-    #7 = Methodref          #30.#78       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n-    #8 = Methodref          #30.#79       // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n-    #9 = Methodref          #30.#80       // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n-   #10 = Methodref          #31.#80       // java/io/PushbackInputStream.read:([BII)I\n-   #11 = Methodref          #30.#81       // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n-   #12 = Fieldref           #30.#82       // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n-   #13 = Class              #83           // java/io/IOException\n-   #14 = String             #84           // Stream closed\n-   #15 = Methodref          #13.#85       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Fieldref           #30.#86       // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n-   #17 = Fieldref           #30.#87       // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n-   #18 = Methodref          #88.#81       // java/io/InputStream.available:()I\n-   #19 = String             #89           // line.separator\n-   #20 = Methodref          #90.#91       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Fieldref           #30.#92       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n-   #22 = String             #93           // \\r\\n\n-   #23 = Methodref          #94.#95       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #24 = String             #96           // US-ASCII\n-   #25 = Methodref          #94.#97       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #26 = Class              #98           // java/io/UnsupportedEncodingException\n-   #27 = Class              #99           // java/lang/RuntimeException\n-   #28 = String             #100          // Broken JVM - cannot find US-ASCII charset!\n-   #29 = Methodref          #27.#101      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #30 = Class              #102          // org/apache/commons/net/io/FromNetASCIIInputStream\n-   #31 = Class              #103          // java/io/PushbackInputStream\n+    #1 = Fieldref           #30.#70       // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+    #2 = Fieldref           #30.#71       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+    #3 = Methodref          #31.#72       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Fieldref           #30.#73       // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n+    #5 = Methodref          #31.#74       // java/io/PushbackInputStream.read:()I\n+    #6 = Methodref          #30.#75       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n+    #7 = Methodref          #30.#76       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n+    #8 = Methodref          #30.#77       // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n+    #9 = Methodref          #30.#78       // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n+   #10 = Methodref          #31.#78       // java/io/PushbackInputStream.read:([BII)I\n+   #11 = Methodref          #30.#79       // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n+   #12 = Fieldref           #30.#80       // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n+   #13 = Class              #81           // java/io/IOException\n+   #14 = String             #82           // Stream closed\n+   #15 = Methodref          #13.#83       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Fieldref           #30.#84       // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n+   #17 = Fieldref           #30.#85       // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n+   #18 = Methodref          #86.#79       // java/io/InputStream.available:()I\n+   #19 = String             #87           // line.separator\n+   #20 = Methodref          #88.#89       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #21 = Fieldref           #30.#90       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n+   #22 = String             #91           // \\r\\n\n+   #23 = Methodref          #92.#93       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #24 = String             #94           // US-ASCII\n+   #25 = Methodref          #92.#95       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #26 = Class              #96           // java/io/UnsupportedEncodingException\n+   #27 = Class              #97           // java/lang/RuntimeException\n+   #28 = String             #98           // Broken JVM - cannot find US-ASCII charset!\n+   #29 = Methodref          #27.#99       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #30 = Class              #100          // org/apache/commons/net/io/FromNetASCIIInputStream\n+   #31 = Class              #101          // java/io/PushbackInputStream\n    #32 = Utf8               _noConversionRequired\n    #33 = Utf8               Z\n    #34 = Utf8               _lineSeparator\n    #35 = Utf8               Ljava/lang/String;\n    #36 = Utf8               _lineSeparatorBytes\n    #37 = Utf8               [B\n    #38 = Utf8               length\n@@ -65,74 +65,72 @@\n    #55 = Utf8               Exceptions\n    #56 = Utf8               read\n    #57 = Utf8               ([B)I\n    #58 = Utf8               buffer\n    #59 = Utf8               ([BII)I\n    #60 = Utf8               offset\n    #61 = Utf8               off\n-   #62 = Class              #102          // org/apache/commons/net/io/FromNetASCIIInputStream\n-   #63 = Class              #37           // \"[B\"\n-   #64 = Utf8               available\n-   #65 = Utf8               <clinit>\n-   #66 = Utf8               ()V\n-   #67 = Utf8               e\n-   #68 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #69 = Class              #98           // java/io/UnsupportedEncodingException\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               FromNetASCIIInputStream.java\n-   #72 = NameAndType        #32:#33       // _noConversionRequired:Z\n-   #73 = NameAndType        #36:#37       // _lineSeparatorBytes:[B\n-   #74 = NameAndType        #45:#104      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #75 = NameAndType        #38:#39       // length:I\n-   #76 = NameAndType        #56:#53       // read:()I\n-   #77 = NameAndType        #105:#106     // unread:([B)V\n-   #78 = NameAndType        #105:#107     // unread:(I)V\n-   #79 = NameAndType        #52:#53       // __read:()I\n-   #80 = NameAndType        #56:#59       // read:([BII)I\n-   #81 = NameAndType        #64:#53       // available:()I\n-   #82 = NameAndType        #108:#51      // in:Ljava/io/InputStream;\n-   #83 = Utf8               java/io/IOException\n-   #84 = Utf8               Stream closed\n-   #85 = NameAndType        #45:#109      // \"<init>\":(Ljava/lang/String;)V\n-   #86 = NameAndType        #110:#37      // buf:[B\n-   #87 = NameAndType        #111:#39      // pos:I\n-   #88 = Class              #112          // java/io/InputStream\n-   #89 = Utf8               line.separator\n-   #90 = Class              #113          // java/lang/System\n-   #91 = NameAndType        #114:#115     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #92 = NameAndType        #34:#35       // _lineSeparator:Ljava/lang/String;\n-   #93 = Utf8               \\r\\n\n-   #94 = Class              #116          // java/lang/String\n-   #95 = NameAndType        #117:#118     // equals:(Ljava/lang/Object;)Z\n-   #96 = Utf8               US-ASCII\n-   #97 = NameAndType        #119:#120     // getBytes:(Ljava/lang/String;)[B\n-   #98 = Utf8               java/io/UnsupportedEncodingException\n-   #99 = Utf8               java/lang/RuntimeException\n-  #100 = Utf8               Broken JVM - cannot find US-ASCII charset!\n-  #101 = NameAndType        #45:#121      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #102 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #103 = Utf8               java/io/PushbackInputStream\n-  #104 = Utf8               (Ljava/io/InputStream;I)V\n-  #105 = Utf8               unread\n-  #106 = Utf8               ([B)V\n-  #107 = Utf8               (I)V\n-  #108 = Utf8               in\n-  #109 = Utf8               (Ljava/lang/String;)V\n-  #110 = Utf8               buf\n-  #111 = Utf8               pos\n-  #112 = Utf8               java/io/InputStream\n-  #113 = Utf8               java/lang/System\n-  #114 = Utf8               getProperty\n-  #115 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #116 = Utf8               java/lang/String\n-  #117 = Utf8               equals\n-  #118 = Utf8               (Ljava/lang/Object;)Z\n-  #119 = Utf8               getBytes\n-  #120 = Utf8               (Ljava/lang/String;)[B\n-  #121 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #62 = Class              #37           // \"[B\"\n+   #63 = Utf8               available\n+   #64 = Utf8               <clinit>\n+   #65 = Utf8               ()V\n+   #66 = Utf8               e\n+   #67 = Utf8               Ljava/io/UnsupportedEncodingException;\n+   #68 = Utf8               SourceFile\n+   #69 = Utf8               FromNetASCIIInputStream.java\n+   #70 = NameAndType        #32:#33       // _noConversionRequired:Z\n+   #71 = NameAndType        #36:#37       // _lineSeparatorBytes:[B\n+   #72 = NameAndType        #45:#102      // \"<init>\":(Ljava/io/InputStream;I)V\n+   #73 = NameAndType        #38:#39       // length:I\n+   #74 = NameAndType        #56:#53       // read:()I\n+   #75 = NameAndType        #103:#104     // unread:([B)V\n+   #76 = NameAndType        #103:#105     // unread:(I)V\n+   #77 = NameAndType        #52:#53       // __read:()I\n+   #78 = NameAndType        #56:#59       // read:([BII)I\n+   #79 = NameAndType        #63:#53       // available:()I\n+   #80 = NameAndType        #106:#51      // in:Ljava/io/InputStream;\n+   #81 = Utf8               java/io/IOException\n+   #82 = Utf8               Stream closed\n+   #83 = NameAndType        #45:#107      // \"<init>\":(Ljava/lang/String;)V\n+   #84 = NameAndType        #108:#37      // buf:[B\n+   #85 = NameAndType        #109:#39      // pos:I\n+   #86 = Class              #110          // java/io/InputStream\n+   #87 = Utf8               line.separator\n+   #88 = Class              #111          // java/lang/System\n+   #89 = NameAndType        #112:#113     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #90 = NameAndType        #34:#35       // _lineSeparator:Ljava/lang/String;\n+   #91 = Utf8               \\r\\n\n+   #92 = Class              #114          // java/lang/String\n+   #93 = NameAndType        #115:#116     // equals:(Ljava/lang/Object;)Z\n+   #94 = Utf8               US-ASCII\n+   #95 = NameAndType        #117:#118     // getBytes:(Ljava/lang/String;)[B\n+   #96 = Utf8               java/io/UnsupportedEncodingException\n+   #97 = Utf8               java/lang/RuntimeException\n+   #98 = Utf8               Broken JVM - cannot find US-ASCII charset!\n+   #99 = NameAndType        #45:#119      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #100 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+  #101 = Utf8               java/io/PushbackInputStream\n+  #102 = Utf8               (Ljava/io/InputStream;I)V\n+  #103 = Utf8               unread\n+  #104 = Utf8               ([B)V\n+  #105 = Utf8               (I)V\n+  #106 = Utf8               in\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Utf8               buf\n+  #109 = Utf8               pos\n+  #110 = Utf8               java/io/InputStream\n+  #111 = Utf8               java/lang/System\n+  #112 = Utf8               getProperty\n+  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #114 = Utf8               java/lang/String\n+  #115 = Utf8               equals\n+  #116 = Utf8               (Ljava/lang/Object;)Z\n+  #117 = Utf8               getBytes\n+  #118 = Utf8               (Ljava/lang/String;)[B\n+  #119 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n {\n   static final boolean _noConversionRequired;\n     descriptor: Z\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   static final java.lang.String _lineSeparator;\n     descriptor: Ljava/lang/String;\n"}]}
