{"diffoscope-json-version": 1, "source1": "first/SnappyCompressorInputStream.class", "source2": "second/SnappyCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -30,27 +30,27 @@\n     public int read(final byte[] b, final int off, final int len) throws IOException {\n         if (len == 0) {\n             return 0;\n         }\n         if (this.endReached) {\n             return -1;\n         }\n-        switch (SnappyCompressorInputStream.SnappyCompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$snappy$SnappyCompressorInputStream$State[this.state.ordinal()]) {\n-            case 1: {\n+        switch (this.state) {\n+            case NO_BLOCK: {\n                 this.fill();\n                 return this.read(b, off, len);\n             }\n-            case 2: {\n+            case IN_LITERAL: {\n                 final int litLen = this.readLiteral(b, off, len);\n                 if (!this.hasMoreDataInBlock()) {\n                     this.state = SnappyCompressorInputStream.State.NO_BLOCK;\n                 }\n                 return (litLen > 0) ? litLen : this.read(b, off, len);\n             }\n-            case 3: {\n+            case IN_BACK_REFERENCE: {\n                 final int backReferenceLen = this.readBackReference(b, off, len);\n                 if (!this.hasMoreDataInBlock()) {\n                     this.state = SnappyCompressorInputStream.State.NO_BLOCK;\n                 }\n                 return (backReferenceLen > 0) ? backReferenceLen : this.read(b, off, len);\n             }\n             default: {\n@@ -173,15 +173,15 @@\n         int b = 0;\n         do {\n             b = this.readOneByte();\n             if (b == -1) {\n                 throw new IOException(\"Premature end of stream reading size\");\n             }\n             sz |= (b & 0x7F) << index++ * 7;\n-        } while (0x0 != (b & 0x80));\n+        } while ((b & 0x80) != 0x0);\n         return sz;\n     }\n     \n     public int getSize() {\n         return this.size;\n     }\n }\n"}]}
