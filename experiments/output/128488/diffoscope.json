{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,193 +1,195 @@\n-  SHA-256 checksum d30e7b131a659911f4f6e1a3fc579163a22e15209c38d027f8934b32119d6314\n+  SHA-256 checksum fbc14bc7f87ddcddb180696d2be0b6934194d74bee5a9a8f03b3c4220bab3cc5\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n-  super_class: #23                        // org/apache/commons/io/file/CountingPathVisitor\n+  super_class: #3                         // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 16, attributes: 2\n Constant pool:\n     #1 = Class              #2            // org/apache/commons/io/file/AccumulatorPathVisitor\n     #2 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-    #3 = Methodref          #4.#5         // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #4 = Class              #6            // org/apache/commons/io/file/Counters\n-    #5 = NameAndType        #7:#8         // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Utf8               org/apache/commons/io/file/Counters\n-    #7 = Utf8               bigIntegerPathCounters\n-    #8 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #9 = Methodref          #1.#10        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #10 = NameAndType        #11:#12       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #11 = Utf8               <init>\n-   #12 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #13 = Methodref          #1.#14        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #14 = NameAndType        #11:#15       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #15 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #16 = Methodref          #4.#17        // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #17 = NameAndType        #18:#8        // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #18 = Utf8               longPathCounters\n-   #19 = Methodref          #4.#20        // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #20 = NameAndType        #21:#8        // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #21 = Utf8               noopPathCounters\n-   #22 = Methodref          #23.#10       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #23 = Class              #24           // org/apache/commons/io/file/CountingPathVisitor\n-   #24 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-   #25 = Class              #26           // java/util/ArrayList\n-   #26 = Utf8               java/util/ArrayList\n-   #27 = Methodref          #25.#28       // java/util/ArrayList.\"<init>\":()V\n-   #28 = NameAndType        #11:#29       // \"<init>\":()V\n-   #29 = Utf8               ()V\n-   #30 = Fieldref           #1.#31        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n-   #31 = NameAndType        #32:#33       // dirList:Ljava/util/List;\n-   #32 = Utf8               dirList\n-   #33 = Utf8               Ljava/util/List;\n-   #34 = Fieldref           #1.#35        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n-   #35 = NameAndType        #36:#33       // fileList:Ljava/util/List;\n-   #36 = Utf8               fileList\n-   #37 = Methodref          #23.#14       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #38 = InterfaceMethodref #39.#40       // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #39 = Class              #41           // java/nio/file/Path\n-   #40 = NameAndType        #42:#43       // normalize:()Ljava/nio/file/Path;\n-   #41 = Utf8               java/nio/file/Path\n-   #42 = Utf8               normalize\n-   #43 = Utf8               ()Ljava/nio/file/Path;\n-   #44 = InterfaceMethodref #45.#46       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #45 = Class              #47           // java/util/List\n-   #46 = NameAndType        #48:#49       // add:(Ljava/lang/Object;)Z\n-   #47 = Utf8               java/util/List\n-   #48 = Utf8               add\n-   #49 = Utf8               (Ljava/lang/Object;)Z\n-   #50 = Methodref          #23.#51       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #51 = NameAndType        #52:#49       // equals:(Ljava/lang/Object;)Z\n-   #52 = Utf8               equals\n-   #53 = Methodref          #54.#55       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #54 = Class              #56           // java/util/Objects\n-   #55 = NameAndType        #52:#57       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #56 = Utf8               java/util/Objects\n-   #57 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #58 = Methodref          #23.#59       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #59 = NameAndType        #60:#61       // hashCode:()I\n-   #60 = Utf8               hashCode\n-   #61 = Utf8               ()I\n-   #62 = Class              #63           // java/lang/Object\n-   #63 = Utf8               java/lang/Object\n-   #64 = Methodref          #54.#65       // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #65 = NameAndType        #66:#67       // hash:([Ljava/lang/Object;)I\n-   #66 = Utf8               hash\n-   #67 = Utf8               ([Ljava/lang/Object;)I\n-   #68 = Methodref          #1.#69        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n-   #69 = NameAndType        #70:#71       // getDirList:()Ljava/util/List;\n-   #70 = Utf8               getDirList\n-   #71 = Utf8               ()Ljava/util/List;\n-   #72 = Methodref          #73.#74       // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #73 = Class              #75           // org/apache/commons/io/file/PathUtils\n-   #74 = NameAndType        #76:#77       // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #75 = Utf8               org/apache/commons/io/file/PathUtils\n-   #76 = Utf8               relativize\n-   #77 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #78 = Methodref          #1.#79        // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n-   #79 = NameAndType        #80:#71       // getFileList:()Ljava/util/List;\n-   #80 = Utf8               getFileList\n-   #81 = Methodref          #23.#82       // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #82 = NameAndType        #83:#84       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #83 = Utf8               updateDirCounter\n-   #84 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #85 = Methodref          #1.#86        // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-   #86 = NameAndType        #48:#87       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-   #87 = Utf8               (Ljava/util/List;Ljava/nio/file/Path;)V\n-   #88 = Methodref          #23.#89       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #89 = NameAndType        #90:#91       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #90 = Utf8               updateFileCounters\n-   #91 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #92 = Utf8               Signature\n-   #93 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n-   #94 = Utf8               withBigIntegerCounters\n-   #95 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #96 = Utf8               Code\n-   #97 = Utf8               LineNumberTable\n-   #98 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #99 = Utf8               LocalVariableTable\n-  #100 = Utf8               fileFilter\n-  #101 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n-  #102 = Utf8               dirFilter\n-  #103 = Utf8               withLongCounters\n-  #104 = Utf8               this\n-  #105 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #106 = Utf8               pathCounter\n-  #107 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #108 = Utf8               list\n-  #109 = Utf8               dir\n-  #110 = Utf8               Ljava/nio/file/Path;\n-  #111 = Utf8               LocalVariableTypeTable\n-  #112 = Utf8               (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n-  #113 = Utf8               obj\n-  #114 = Utf8               Ljava/lang/Object;\n-  #115 = Utf8               other\n-  #116 = Utf8               StackMapTable\n-  #117 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-  #118 = Utf8               prime\n-  #119 = Utf8               I\n-  #120 = Utf8               result\n-  #121 = Utf8               relativizeDirectories\n-  #122 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #123 = Utf8               parent\n-  #124 = Utf8               sort\n-  #125 = Utf8               Z\n-  #126 = Utf8               comparator\n-  #127 = Utf8               Ljava/util/Comparator;\n-  #128 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-  #129 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-  #130 = Utf8               relativizeFiles\n-  #131 = Utf8               exc\n-  #132 = Utf8               Ljava/io/IOException;\n+    #3 = Class              #4            // org/apache/commons/io/file/CountingPathVisitor\n+    #4 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+    #5 = Utf8               dirList\n+    #6 = Utf8               Ljava/util/List;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+    #9 = Utf8               fileList\n+   #10 = Utf8               withBigIntegerCounters\n+   #11 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #12 = Utf8               Code\n+   #13 = Methodref          #14.#16       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #14 = Class              #15           // org/apache/commons/io/file/Counters\n+   #15 = Utf8               org/apache/commons/io/file/Counters\n+   #16 = NameAndType        #17:#18       // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #17 = Utf8               bigIntegerPathCounters\n+   #18 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #19 = Methodref          #1.#20        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #20 = NameAndType        #21:#22       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #21 = Utf8               <init>\n+   #22 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #23 = Utf8               LineNumberTable\n+   #24 = Utf8               LocalVariableTable\n+   #25 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #26 = Methodref          #1.#27        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #27 = NameAndType        #21:#28       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #28 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #29 = Utf8               fileFilter\n+   #30 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n+   #31 = Utf8               dirFilter\n+   #32 = Utf8               withLongCounters\n+   #33 = Methodref          #14.#34       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #34 = NameAndType        #35:#18       // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #35 = Utf8               longPathCounters\n+   #36 = Utf8               ()V\n+   #37 = Methodref          #14.#38       // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #38 = NameAndType        #39:#18       // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #39 = Utf8               noopPathCounters\n+   #40 = Methodref          #3.#20        // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #41 = Class              #42           // java/util/ArrayList\n+   #42 = Utf8               java/util/ArrayList\n+   #43 = Methodref          #41.#44       // java/util/ArrayList.\"<init>\":()V\n+   #44 = NameAndType        #21:#36       // \"<init>\":()V\n+   #45 = Fieldref           #1.#46        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n+   #46 = NameAndType        #5:#6         // dirList:Ljava/util/List;\n+   #47 = Fieldref           #1.#48        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n+   #48 = NameAndType        #9:#6         // fileList:Ljava/util/List;\n+   #49 = Utf8               this\n+   #50 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #51 = Utf8               pathCounter\n+   #52 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #53 = Methodref          #3.#27        // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #54 = Utf8               add\n+   #55 = Utf8               (Ljava/util/List;Ljava/nio/file/Path;)V\n+   #56 = Utf8               (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n+   #57 = InterfaceMethodref #58.#60       // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #58 = Class              #59           // java/nio/file/Path\n+   #59 = Utf8               java/nio/file/Path\n+   #60 = NameAndType        #61:#62       // normalize:()Ljava/nio/file/Path;\n+   #61 = Utf8               normalize\n+   #62 = Utf8               ()Ljava/nio/file/Path;\n+   #63 = InterfaceMethodref #64.#66       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #64 = Class              #65           // java/util/List\n+   #65 = Utf8               java/util/List\n+   #66 = NameAndType        #54:#67       // add:(Ljava/lang/Object;)Z\n+   #67 = Utf8               (Ljava/lang/Object;)Z\n+   #68 = Utf8               list\n+   #69 = Utf8               dir\n+   #70 = Utf8               Ljava/nio/file/Path;\n+   #71 = Utf8               LocalVariableTypeTable\n+   #72 = Utf8               equals\n+   #73 = Methodref          #3.#74        // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #74 = NameAndType        #72:#67       // equals:(Ljava/lang/Object;)Z\n+   #75 = Methodref          #76.#78       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #76 = Class              #77           // java/util/Objects\n+   #77 = Utf8               java/util/Objects\n+   #78 = NameAndType        #72:#79       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #79 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #80 = Utf8               obj\n+   #81 = Utf8               Ljava/lang/Object;\n+   #82 = Utf8               other\n+   #83 = Utf8               StackMapTable\n+   #84 = Utf8               getDirList\n+   #85 = Utf8               ()Ljava/util/List;\n+   #86 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+   #87 = Utf8               getFileList\n+   #88 = Utf8               hashCode\n+   #89 = Utf8               ()I\n+   #90 = Methodref          #3.#91        // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #91 = NameAndType        #88:#89       // hashCode:()I\n+   #92 = Class              #93           // java/lang/Object\n+   #93 = Utf8               java/lang/Object\n+   #94 = Methodref          #76.#95       // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #95 = NameAndType        #96:#97       // hash:([Ljava/lang/Object;)I\n+   #96 = Utf8               hash\n+   #97 = Utf8               ([Ljava/lang/Object;)I\n+   #98 = Utf8               prime\n+   #99 = Utf8               I\n+  #100 = Utf8               result\n+  #101 = Utf8               relativizeDirectories\n+  #102 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #103 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #104 = Methodref          #1.#105       // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n+  #105 = NameAndType        #84:#85       // getDirList:()Ljava/util/List;\n+  #106 = Methodref          #107.#109     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #107 = Class              #108          // org/apache/commons/io/file/PathUtils\n+  #108 = Utf8               org/apache/commons/io/file/PathUtils\n+  #109 = NameAndType        #110:#111     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #110 = Utf8               relativize\n+  #111 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #112 = Utf8               parent\n+  #113 = Utf8               sort\n+  #114 = Utf8               Z\n+  #115 = Utf8               comparator\n+  #116 = Utf8               Ljava/util/Comparator;\n+  #117 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+  #118 = Utf8               relativizeFiles\n+  #119 = Methodref          #1.#120       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n+  #120 = NameAndType        #87:#85       // getFileList:()Ljava/util/List;\n+  #121 = Utf8               updateDirCounter\n+  #122 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n+  #123 = Methodref          #3.#124       // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+  #124 = NameAndType        #121:#122     // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+  #125 = Methodref          #1.#126       // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+  #126 = NameAndType        #54:#55       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+  #127 = Utf8               exc\n+  #128 = Utf8               Ljava/io/IOException;\n+  #129 = Utf8               updateFileCounters\n+  #130 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #131 = Methodref          #3.#132       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #132 = NameAndType        #129:#130     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n   #133 = Utf8               file\n   #134 = Utf8               attributes\n   #135 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n   #136 = Utf8               SourceFile\n   #137 = Utf8               AccumulatorPathVisitor.java\n   #138 = Utf8               InnerClasses\n   #139 = Class              #140          // org/apache/commons/io/file/Counters$PathCounters\n   #140 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n   #141 = Utf8               PathCounters\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #93                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #8                           // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #93                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #8                           // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #13                 // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #19                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 67: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters(org.apache.commons.io.file.PathFilter, org.apache.commons.io.file.PathFilter);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #13                 // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokespecial #26                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n         12: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 fileFilter   Lorg/apache/commons/io/file/PathFilter;\n             0      13     1 dirFilter   Lorg/apache/commons/io/file/PathFilter;\n@@ -195,57 +197,59 @@\n   public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #16                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #33                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #19                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 89: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters(org.apache.commons.io.file.PathFilter, org.apache.commons.io.file.PathFilter);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #16                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #33                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokespecial #26                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n         12: areturn\n       LineNumberTable:\n         line 101: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 fileFilter   Lorg/apache/commons/io/file/PathFilter;\n             0      13     1 dirFilter   Lorg/apache/commons/io/file/PathFilter;\n \n   public org.apache.commons.io.file.AccumulatorPathVisitor();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #19                 // Method org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         1: invokestatic  #37                 // Method org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokespecial #40                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          7: aload_0\n-         8: new           #25                 // class java/util/ArrayList\n+         8: new           #41                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #30                 // Field dirList:Ljava/util/List;\n+        12: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #45                 // Field dirList:Ljava/util/List;\n         18: aload_0\n-        19: new           #25                 // class java/util/ArrayList\n+        19: new           #41                 // class java/util/ArrayList\n         22: dup\n-        23: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        26: putfield      #34                 // Field fileList:Ljava/util/List;\n+        23: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        26: putfield      #47                 // Field fileList:Ljava/util/List;\n         29: return\n       LineNumberTable:\n         line 114: 0\n         line 104: 7\n         line 106: 18\n         line 115: 29\n       LocalVariableTable:\n@@ -255,25 +259,25 @@\n   public org.apache.commons.io.file.AccumulatorPathVisitor(org.apache.commons.io.file.Counters$PathCounters);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         2: invokespecial #40                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          5: aload_0\n-         6: new           #25                 // class java/util/ArrayList\n+         6: new           #41                 // class java/util/ArrayList\n          9: dup\n-        10: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        13: putfield      #30                 // Field dirList:Ljava/util/List;\n+        10: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        13: putfield      #45                 // Field dirList:Ljava/util/List;\n         16: aload_0\n-        17: new           #25                 // class java/util/ArrayList\n+        17: new           #41                 // class java/util/ArrayList\n         20: dup\n-        21: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        24: putfield      #34                 // Field fileList:Ljava/util/List;\n+        21: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        24: putfield      #47                 // Field fileList:Ljava/util/List;\n         27: return\n       LineNumberTable:\n         line 123: 0\n         line 104: 5\n         line 106: 16\n         line 124: 27\n       LocalVariableTable:\n@@ -286,25 +290,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_3\n-         4: invokespecial #37                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         4: invokespecial #53                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n          7: aload_0\n-         8: new           #25                 // class java/util/ArrayList\n+         8: new           #41                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #30                 // Field dirList:Ljava/util/List;\n+        12: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #45                 // Field dirList:Ljava/util/List;\n         18: aload_0\n-        19: new           #25                 // class java/util/ArrayList\n+        19: new           #41                 // class java/util/ArrayList\n         22: dup\n-        23: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n-        26: putfield      #34                 // Field fileList:Ljava/util/List;\n+        23: invokespecial #43                 // Method java/util/ArrayList.\"<init>\":()V\n+        26: putfield      #47                 // Field fileList:Ljava/util/List;\n         29: return\n       LineNumberTable:\n         line 136: 0\n         line 104: 7\n         line 106: 18\n         line 137: 29\n       LocalVariableTable:\n@@ -313,155 +317,153 @@\n             0      30     1 pathCounter   Lorg/apache/commons/io/file/Counters$PathCounters;\n             0      30     2 fileFilter   Lorg/apache/commons/io/file/PathFilter;\n             0      30     3 dirFilter   Lorg/apache/commons/io/file/PathFilter;\n \n   private void add(java.util.List<java.nio.file.Path>, java.nio.file.Path);\n     descriptor: (Ljava/util/List;Ljava/nio/file/Path;)V\n     flags: (0x0002) ACC_PRIVATE\n+    Signature: #56                          // (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n          1: aload_2\n-         2: invokeinterface #38,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-         7: invokeinterface #44,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         2: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+         7: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         12: pop\n         13: return\n       LineNumberTable:\n         line 140: 0\n         line 141: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      14     1  list   Ljava/util/List;\n             0      14     2   dir   Ljava/nio/file/Path;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     1  list   Ljava/util/List<Ljava/nio/file/Path;>;\n-    Signature: #112                         // (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #50                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #73                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_1\n         18: instanceof    #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         21: ifne          26\n         24: iconst_0\n         25: ireturn\n         26: aload_1\n         27: checkcast     #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         30: astore_2\n         31: aload_0\n-        32: getfield      #30                 // Field dirList:Ljava/util/List;\n+        32: getfield      #45                 // Field dirList:Ljava/util/List;\n         35: aload_2\n-        36: getfield      #30                 // Field dirList:Ljava/util/List;\n-        39: invokestatic  #53                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-        42: ifeq          63\n+        36: getfield      #45                 // Field dirList:Ljava/util/List;\n+        39: invokestatic  #75                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        42: ifeq          61\n         45: aload_0\n-        46: getfield      #34                 // Field fileList:Ljava/util/List;\n+        46: getfield      #47                 // Field fileList:Ljava/util/List;\n         49: aload_2\n-        50: getfield      #34                 // Field fileList:Ljava/util/List;\n-        53: invokestatic  #53                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-        56: ifeq          63\n+        50: getfield      #47                 // Field fileList:Ljava/util/List;\n+        53: invokestatic  #75                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        56: ifeq          61\n         59: iconst_1\n-        60: goto          64\n-        63: iconst_0\n-        64: ireturn\n+        60: ireturn\n+        61: iconst_0\n+        62: ireturn\n       LineNumberTable:\n         line 145: 0\n         line 146: 5\n         line 148: 7\n         line 149: 15\n         line 151: 17\n         line 152: 24\n         line 154: 26\n         line 155: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      65     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-            0      65     1   obj   Ljava/lang/Object;\n-           31      34     2 other   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-      StackMapTable: number_of_entries = 5\n+            0      63     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+            0      63     1   obj   Ljava/lang/Object;\n+           31      32     2 other   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+      StackMapTable: number_of_entries = 4\n         frame_type = 7 /* same */\n         frame_type = 9 /* same */\n         frame_type = 8 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 36\n+          offset_delta = 34\n           locals = [ class org/apache/commons/io/file/AccumulatorPathVisitor ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   public java.util.List<java.nio.file.Path> getDirList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #86                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field dirList:Ljava/util/List;\n+         1: getfield      #45                 // Field dirList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 164: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #117                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> getFileList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #86                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #34                 // Field fileList:Ljava/util/List;\n+         1: getfield      #47                 // Field fileList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #117                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: bipush        31\n          2: istore_1\n          3: aload_0\n-         4: invokespecial #58                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+         4: invokespecial #90                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n          7: istore_2\n          8: bipush        31\n         10: iload_2\n         11: imul\n         12: iconst_2\n-        13: anewarray     #62                 // class java/lang/Object\n+        13: anewarray     #92                 // class java/lang/Object\n         16: dup\n         17: iconst_0\n         18: aload_0\n-        19: getfield      #30                 // Field dirList:Ljava/util/List;\n+        19: getfield      #45                 // Field dirList:Ljava/util/List;\n         22: aastore\n         23: dup\n         24: iconst_1\n         25: aload_0\n-        26: getfield      #34                 // Field fileList:Ljava/util/List;\n+        26: getfield      #47                 // Field fileList:Ljava/util/List;\n         29: aastore\n-        30: invokestatic  #64                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        30: invokestatic  #94                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         33: iadd\n         34: istore_2\n         35: iload_2\n         36: ireturn\n       LineNumberTable:\n         line 178: 0\n         line 179: 3\n@@ -472,75 +474,75 @@\n             0      37     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             3      34     1 prime   I\n             8      29     2 result   I\n \n   public java.util.List<java.nio.file.Path> relativizeDirectories(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #103                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #68                 // Method getDirList:()Ljava/util/List;\n+         1: invokevirtual #104                // Method getDirList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #72                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #106                // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 195: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #129                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #103                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #78                 // Method getFileList:()Ljava/util/List;\n+         1: invokevirtual #119                // Method getFileList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #72                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #106                // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 209: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #129                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   protected void updateDirCounter(java.nio.file.Path, java.io.IOException);\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #81                 // Method org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+         3: invokespecial #123                // Method org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n          6: aload_0\n          7: aload_0\n-         8: getfield      #30                 // Field dirList:Ljava/util/List;\n+         8: getfield      #45                 // Field dirList:Ljava/util/List;\n         11: aload_1\n-        12: invokespecial #85                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+        12: invokespecial #125                // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n         15: return\n       LineNumberTable:\n         line 214: 0\n         line 215: 6\n         line 216: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -552,27 +554,27 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #88                 // Method org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+         3: invokespecial #131                // Method org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n          6: aload_0\n          7: aload_0\n-         8: getfield      #34                 // Field fileList:Ljava/util/List;\n+         8: getfield      #47                 // Field fileList:Ljava/util/List;\n         11: aload_1\n-        12: invokespecial #85                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+        12: invokespecial #125                // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n         15: return\n       LineNumberTable:\n         line 220: 0\n         line 221: 6\n         line 222: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      16     1  file   Ljava/nio/file/Path;\n             0      16     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #141= #139 of #4;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #141= #139 of #14;        // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
