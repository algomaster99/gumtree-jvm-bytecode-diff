{"diffoscope-json-version": 1, "source1": "first/AbstractByteArrayOutputStream.class", "source2": "second/AbstractByteArrayOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum af878381041eab6ab567a3d22c4782ad7f9bddd14cb2fd0b79d7ae14e55ec9a6\n+  SHA-256 checksum a69f2e5c11fa8ae383c9f7c482e8745305f78fe6e35138dbaff6bd075431c20d\n   Compiled from \"AbstractByteArrayOutputStream.java\"\n public abstract class org.apache.commons.io.output.AbstractByteArrayOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #38                         // org/apache/commons/io/output/AbstractByteArrayOutputStream\n   super_class: #39                        // java/io/OutputStream\n@@ -11,47 +11,47 @@\n     #1 = Class              #129          // org/apache/commons/io/IOUtils\n     #2 = Methodref          #39.#130      // java/io/OutputStream.\"<init>\":()V\n     #3 = Class              #131          // java/util/ArrayList\n     #4 = Methodref          #3.#130       // java/util/ArrayList.\"<init>\":()V\n     #5 = Fieldref           #38.#132      // org/apache/commons/io/output/AbstractByteArrayOutputStream.buffers:Ljava/util/List;\n     #6 = Fieldref           #38.#133      // org/apache/commons/io/output/AbstractByteArrayOutputStream.reuseBuffers:Z\n     #7 = Fieldref           #38.#134      // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBufferIndex:I\n-    #8 = InterfaceMethodref #135.#136     // java/util/List.size:()I\n-    #9 = Fieldref           #38.#137      // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n-   #10 = Fieldref           #38.#138      // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n-   #11 = InterfaceMethodref #135.#139     // java/util/List.get:(I)Ljava/lang/Object;\n+    #8 = InterfaceMethodref #108.#135     // java/util/List.size:()I\n+    #9 = Fieldref           #38.#136      // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n+   #10 = Fieldref           #38.#137      // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n+   #11 = InterfaceMethodref #108.#138     // java/util/List.get:(I)Ljava/lang/Object;\n    #12 = Class              #54           // \"[B\"\n-   #13 = Methodref          #140.#141     // java/lang/Math.max:(II)I\n-   #14 = Methodref          #1.#142       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #15 = InterfaceMethodref #135.#143     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #16 = Fieldref           #38.#144      // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n-   #17 = Methodref          #140.#145     // java/lang/Math.min:(II)I\n-   #18 = Methodref          #146.#147     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #38.#148      // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n-   #20 = Methodref          #149.#150     // java/io/InputStream.read:([BII)I\n-   #21 = InterfaceMethodref #135.#151     // java/util/List.clear:()V\n-   #22 = InterfaceMethodref #135.#152     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #23 = InterfaceMethodref #153.#154     // java/util/Iterator.hasNext:()Z\n-   #24 = InterfaceMethodref #153.#155     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #25 = Methodref          #39.#156      // java/io/OutputStream.write:([BII)V\n-   #26 = Fieldref           #157.#158     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-   #27 = Methodref          #3.#159       // java/util/ArrayList.\"<init>\":(I)V\n-   #28 = InterfaceMethodref #40.#160      // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n-   #29 = Class              #161          // java/io/SequenceInputStream\n-   #30 = Methodref          #162.#163     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-   #31 = Methodref          #29.#164      // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n-   #32 = Fieldref           #1.#165       // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n-   #33 = Class              #166          // java/lang/String\n-   #34 = Methodref          #38.#167      // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n-   #35 = Methodref          #168.#169     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #36 = Methodref          #33.#170      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #37 = Methodref          #33.#171      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #38 = Class              #172          // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #39 = Class              #173          // java/io/OutputStream\n-   #40 = Class              #174          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+   #13 = Methodref          #139.#140     // java/lang/Math.max:(II)I\n+   #14 = Methodref          #1.#141       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #15 = InterfaceMethodref #108.#142     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #16 = Fieldref           #38.#143      // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n+   #17 = Methodref          #139.#144     // java/lang/Math.min:(II)I\n+   #18 = Methodref          #145.#146     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #19 = Methodref          #38.#147      // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n+   #20 = Methodref          #148.#149     // java/io/InputStream.read:([BII)I\n+   #21 = InterfaceMethodref #108.#150     // java/util/List.clear:()V\n+   #22 = InterfaceMethodref #108.#151     // java/util/List.iterator:()Ljava/util/Iterator;\n+   #23 = InterfaceMethodref #98.#152      // java/util/Iterator.hasNext:()Z\n+   #24 = InterfaceMethodref #98.#153      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #25 = Methodref          #39.#154      // java/io/OutputStream.write:([BII)V\n+   #26 = Fieldref           #155.#156     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+   #27 = Methodref          #3.#157       // java/util/ArrayList.\"<init>\":(I)V\n+   #28 = InterfaceMethodref #40.#158      // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n+   #29 = Class              #159          // java/io/SequenceInputStream\n+   #30 = Methodref          #160.#161     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+   #31 = Methodref          #29.#162      // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n+   #32 = Fieldref           #1.#163       // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n+   #33 = Class              #164          // java/lang/String\n+   #34 = Methodref          #38.#165      // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n+   #35 = Methodref          #166.#167     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #36 = Methodref          #33.#168      // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+   #37 = Methodref          #33.#169      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #38 = Class              #170          // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #39 = Class              #171          // java/io/OutputStream\n+   #40 = Class              #172          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n    #41 = Utf8               InputStreamConstructor\n    #42 = Utf8               InnerClasses\n    #43 = Utf8               DEFAULT_SIZE\n    #44 = Utf8               I\n    #45 = Utf8               ConstantValue\n    #46 = Integer            1024\n    #47 = Utf8               buffers\n@@ -84,15 +84,15 @@\n    #74 = Utf8               b\n    #75 = Utf8               off\n    #76 = Utf8               len\n    #77 = Utf8               remaining\n    #78 = Utf8               inBufferPos\n    #79 = Utf8               (Ljava/io/InputStream;)I\n    #80 = Utf8               Exceptions\n-   #81 = Class              #175          // java/io/IOException\n+   #81 = Class              #173          // java/io/IOException\n    #82 = Utf8               in\n    #83 = Utf8               Ljava/io/InputStream;\n    #84 = Utf8               readCount\n    #85 = Utf8               n\n    #86 = Utf8               size\n    #87 = Utf8               ()I\n    #88 = Utf8               close\n@@ -101,133 +101,131 @@\n    #91 = Utf8               writeTo\n    #92 = Utf8               (Ljava/io/OutputStream;)V\n    #93 = Utf8               writeToImpl\n    #94 = Utf8               c\n    #95 = Utf8               buf\n    #96 = Utf8               out\n    #97 = Utf8               Ljava/io/OutputStream;\n-   #98 = Class              #176          // java/util/Iterator\n+   #98 = Class              #174          // java/util/Iterator\n    #99 = Utf8               toInputStream\n   #100 = Utf8               ()Ljava/io/InputStream;\n   #101 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n   #102 = Utf8               isConstructor\n   #103 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n   #104 = Utf8               list\n   #105 = Utf8               LocalVariableTypeTable\n   #106 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n   #107 = Utf8               Ljava/util/List<TT;>;\n-  #108 = Class              #177          // java/util/List\n+  #108 = Class              #175          // java/util/List\n   #109 = Utf8               <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n   #110 = Utf8               toByteArray\n   #111 = Utf8               ()[B\n   #112 = Utf8               toByteArrayImpl\n   #113 = Utf8               newbuf\n   #114 = Utf8               pos\n   #115 = Utf8               toString\n   #116 = Utf8               ()Ljava/lang/String;\n   #117 = Utf8               Deprecated\n   #118 = Utf8               RuntimeVisibleAnnotations\n   #119 = Utf8               Ljava/lang/Deprecated;\n   #120 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #121 = Utf8               enc\n   #122 = Utf8               Ljava/lang/String;\n-  #123 = Class              #178          // java/io/UnsupportedEncodingException\n+  #123 = Class              #176          // java/io/UnsupportedEncodingException\n   #124 = Utf8               (Ljava/nio/charset/Charset;)Ljava/lang/String;\n   #125 = Utf8               charset\n   #126 = Utf8               Ljava/nio/charset/Charset;\n   #127 = Utf8               SourceFile\n   #128 = Utf8               AbstractByteArrayOutputStream.java\n   #129 = Utf8               org/apache/commons/io/IOUtils\n   #130 = NameAndType        #58:#59       // \"<init>\":()V\n   #131 = Utf8               java/util/ArrayList\n   #132 = NameAndType        #47:#48       // buffers:Ljava/util/List;\n   #133 = NameAndType        #56:#57       // reuseBuffers:Z\n   #134 = NameAndType        #51:#44       // currentBufferIndex:I\n-  #135 = Class              #177          // java/util/List\n-  #136 = NameAndType        #86:#87       // size:()I\n-  #137 = NameAndType        #52:#44       // filledBufferSum:I\n-  #138 = NameAndType        #53:#54       // currentBuffer:[B\n-  #139 = NameAndType        #179:#180     // get:(I)Ljava/lang/Object;\n-  #140 = Class              #181          // java/lang/Math\n-  #141 = NameAndType        #182:#183     // max:(II)I\n-  #142 = NameAndType        #184:#185     // byteArray:(I)[B\n-  #143 = NameAndType        #186:#187     // add:(Ljava/lang/Object;)Z\n-  #144 = NameAndType        #55:#44       // count:I\n-  #145 = NameAndType        #188:#183     // min:(II)I\n-  #146 = Class              #189          // java/lang/System\n-  #147 = NameAndType        #190:#191     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #148 = NameAndType        #65:#66       // needNewBuffer:(I)V\n-  #149 = Class              #192          // java/io/InputStream\n-  #150 = NameAndType        #193:#194     // read:([BII)I\n-  #151 = NameAndType        #195:#59      // clear:()V\n-  #152 = NameAndType        #196:#197     // iterator:()Ljava/util/Iterator;\n-  #153 = Class              #176          // java/util/Iterator\n-  #154 = NameAndType        #198:#199     // hasNext:()Z\n-  #155 = NameAndType        #200:#201     // next:()Ljava/lang/Object;\n-  #156 = NameAndType        #70:#71       // write:([BII)V\n-  #157 = Class              #202          // org/apache/commons/io/input/ClosedInputStream\n-  #158 = NameAndType        #203:#204     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-  #159 = NameAndType        #58:#66       // \"<init>\":(I)V\n-  #160 = NameAndType        #205:#206     // construct:([BII)Ljava/io/InputStream;\n-  #161 = Utf8               java/io/SequenceInputStream\n-  #162 = Class              #207          // java/util/Collections\n-  #163 = NameAndType        #208:#209     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #164 = NameAndType        #58:#210      // \"<init>\":(Ljava/util/Enumeration;)V\n-  #165 = NameAndType        #211:#54      // EMPTY_BYTE_ARRAY:[B\n-  #166 = Utf8               java/lang/String\n-  #167 = NameAndType        #110:#111     // toByteArray:()[B\n-  #168 = Class              #212          // java/nio/charset/Charset\n-  #169 = NameAndType        #213:#214     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #170 = NameAndType        #58:#215      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #171 = NameAndType        #58:#216      // \"<init>\":([BLjava/lang/String;)V\n-  #172 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  #173 = Utf8               java/io/OutputStream\n-  #174 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #175 = Utf8               java/io/IOException\n-  #176 = Utf8               java/util/Iterator\n-  #177 = Utf8               java/util/List\n-  #178 = Utf8               java/io/UnsupportedEncodingException\n-  #179 = Utf8               get\n-  #180 = Utf8               (I)Ljava/lang/Object;\n-  #181 = Utf8               java/lang/Math\n-  #182 = Utf8               max\n-  #183 = Utf8               (II)I\n-  #184 = Utf8               byteArray\n-  #185 = Utf8               (I)[B\n-  #186 = Utf8               add\n-  #187 = Utf8               (Ljava/lang/Object;)Z\n-  #188 = Utf8               min\n-  #189 = Utf8               java/lang/System\n-  #190 = Utf8               arraycopy\n-  #191 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #192 = Utf8               java/io/InputStream\n-  #193 = Utf8               read\n-  #194 = Utf8               ([BII)I\n-  #195 = Utf8               clear\n-  #196 = Utf8               iterator\n-  #197 = Utf8               ()Ljava/util/Iterator;\n-  #198 = Utf8               hasNext\n-  #199 = Utf8               ()Z\n-  #200 = Utf8               next\n-  #201 = Utf8               ()Ljava/lang/Object;\n-  #202 = Utf8               org/apache/commons/io/input/ClosedInputStream\n-  #203 = Utf8               CLOSED_INPUT_STREAM\n-  #204 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n-  #205 = Utf8               construct\n-  #206 = Utf8               ([BII)Ljava/io/InputStream;\n-  #207 = Utf8               java/util/Collections\n-  #208 = Utf8               enumeration\n-  #209 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #210 = Utf8               (Ljava/util/Enumeration;)V\n-  #211 = Utf8               EMPTY_BYTE_ARRAY\n-  #212 = Utf8               java/nio/charset/Charset\n-  #213 = Utf8               defaultCharset\n-  #214 = Utf8               ()Ljava/nio/charset/Charset;\n-  #215 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #216 = Utf8               ([BLjava/lang/String;)V\n+  #135 = NameAndType        #86:#87       // size:()I\n+  #136 = NameAndType        #52:#44       // filledBufferSum:I\n+  #137 = NameAndType        #53:#54       // currentBuffer:[B\n+  #138 = NameAndType        #177:#178     // get:(I)Ljava/lang/Object;\n+  #139 = Class              #179          // java/lang/Math\n+  #140 = NameAndType        #180:#181     // max:(II)I\n+  #141 = NameAndType        #182:#183     // byteArray:(I)[B\n+  #142 = NameAndType        #184:#185     // add:(Ljava/lang/Object;)Z\n+  #143 = NameAndType        #55:#44       // count:I\n+  #144 = NameAndType        #186:#181     // min:(II)I\n+  #145 = Class              #187          // java/lang/System\n+  #146 = NameAndType        #188:#189     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #147 = NameAndType        #65:#66       // needNewBuffer:(I)V\n+  #148 = Class              #190          // java/io/InputStream\n+  #149 = NameAndType        #191:#192     // read:([BII)I\n+  #150 = NameAndType        #193:#59      // clear:()V\n+  #151 = NameAndType        #194:#195     // iterator:()Ljava/util/Iterator;\n+  #152 = NameAndType        #196:#197     // hasNext:()Z\n+  #153 = NameAndType        #198:#199     // next:()Ljava/lang/Object;\n+  #154 = NameAndType        #70:#71       // write:([BII)V\n+  #155 = Class              #200          // org/apache/commons/io/input/ClosedInputStream\n+  #156 = NameAndType        #201:#202     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+  #157 = NameAndType        #58:#66       // \"<init>\":(I)V\n+  #158 = NameAndType        #203:#204     // construct:([BII)Ljava/io/InputStream;\n+  #159 = Utf8               java/io/SequenceInputStream\n+  #160 = Class              #205          // java/util/Collections\n+  #161 = NameAndType        #206:#207     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #162 = NameAndType        #58:#208      // \"<init>\":(Ljava/util/Enumeration;)V\n+  #163 = NameAndType        #209:#54      // EMPTY_BYTE_ARRAY:[B\n+  #164 = Utf8               java/lang/String\n+  #165 = NameAndType        #110:#111     // toByteArray:()[B\n+  #166 = Class              #210          // java/nio/charset/Charset\n+  #167 = NameAndType        #211:#212     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #168 = NameAndType        #58:#213      // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #169 = NameAndType        #58:#214      // \"<init>\":([BLjava/lang/String;)V\n+  #170 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  #171 = Utf8               java/io/OutputStream\n+  #172 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #173 = Utf8               java/io/IOException\n+  #174 = Utf8               java/util/Iterator\n+  #175 = Utf8               java/util/List\n+  #176 = Utf8               java/io/UnsupportedEncodingException\n+  #177 = Utf8               get\n+  #178 = Utf8               (I)Ljava/lang/Object;\n+  #179 = Utf8               java/lang/Math\n+  #180 = Utf8               max\n+  #181 = Utf8               (II)I\n+  #182 = Utf8               byteArray\n+  #183 = Utf8               (I)[B\n+  #184 = Utf8               add\n+  #185 = Utf8               (Ljava/lang/Object;)Z\n+  #186 = Utf8               min\n+  #187 = Utf8               java/lang/System\n+  #188 = Utf8               arraycopy\n+  #189 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #190 = Utf8               java/io/InputStream\n+  #191 = Utf8               read\n+  #192 = Utf8               ([BII)I\n+  #193 = Utf8               clear\n+  #194 = Utf8               iterator\n+  #195 = Utf8               ()Ljava/util/Iterator;\n+  #196 = Utf8               hasNext\n+  #197 = Utf8               ()Z\n+  #198 = Utf8               next\n+  #199 = Utf8               ()Ljava/lang/Object;\n+  #200 = Utf8               org/apache/commons/io/input/ClosedInputStream\n+  #201 = Utf8               CLOSED_INPUT_STREAM\n+  #202 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n+  #203 = Utf8               construct\n+  #204 = Utf8               ([BII)Ljava/io/InputStream;\n+  #205 = Utf8               java/util/Collections\n+  #206 = Utf8               enumeration\n+  #207 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #208 = Utf8               (Ljava/util/Enumeration;)V\n+  #209 = Utf8               EMPTY_BYTE_ARRAY\n+  #210 = Utf8               java/nio/charset/Charset\n+  #211 = Utf8               defaultCharset\n+  #212 = Utf8               ()Ljava/nio/charset/Charset;\n+  #213 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #214 = Utf8               ([BLjava/lang/String;)V\n {\n   static final int DEFAULT_SIZE = 1024;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1024\n \n   private final java.util.List<byte[]> buffers;\n"}]}
