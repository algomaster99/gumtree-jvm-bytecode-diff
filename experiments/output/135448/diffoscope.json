{"diffoscope-json-version": 1, "source1": "first/IfInstruction.class", "source2": "second/IfInstruction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,35 +1,35 @@\n-  SHA-256 checksum 2ba8eb480c37cee80385d59aae3678a3b0d6a4834d2331221a43a4d714535ad5\n+  SHA-256 checksum f4389486fddea3c142368acb333fe0294302b3fcad645aa89b2ecea007b73f15\n   Compiled from \"IfInstruction.java\"\n public abstract class org.apache.bcel.generic.IfInstruction extends org.apache.bcel.generic.BranchInstruction implements org.apache.bcel.generic.StackConsumer\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/bcel/generic/IfInstruction\n-  super_class: #2                         // org/apache/bcel/generic/BranchInstruction\n+  this_class: #1                          // org/apache/bcel/generic/IfInstruction\n+  super_class: #3                         // org/apache/bcel/generic/BranchInstruction\n   interfaces: 1, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/bcel/generic/BranchInstruction\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/bcel/generic/IfInstruction\n+   #2 = Utf8               org/apache/bcel/generic/IfInstruction\n+   #3 = Class              #4             // org/apache/bcel/generic/BranchInstruction\n    #4 = Utf8               org/apache/bcel/generic/BranchInstruction\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #2.#8          // org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n-   #8 = NameAndType        #5:#9          // \"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n-   #9 = Utf8               (SLorg/apache/bcel/generic/InstructionHandle;)V\n-  #10 = Class              #11            // org/apache/bcel/generic/IfInstruction\n-  #11 = Utf8               org/apache/bcel/generic/IfInstruction\n-  #12 = Class              #13            // org/apache/bcel/generic/StackConsumer\n-  #13 = Utf8               org/apache/bcel/generic/StackConsumer\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               LocalVariableTable\n-  #17 = Utf8               this\n-  #18 = Utf8               Lorg/apache/bcel/generic/IfInstruction;\n+   #5 = Class              #6             // org/apache/bcel/generic/StackConsumer\n+   #6 = Utf8               org/apache/bcel/generic/StackConsumer\n+   #7 = Utf8               <init>\n+   #8 = Utf8               ()V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n+  #11 = NameAndType        #7:#8          // \"<init>\":()V\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/bcel/generic/IfInstruction;\n+  #16 = Utf8               (SLorg/apache/bcel/generic/InstructionHandle;)V\n+  #17 = Methodref          #3.#18         // org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n+  #18 = NameAndType        #7:#16         // \"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n   #19 = Utf8               opcode\n   #20 = Utf8               S\n   #21 = Utf8               target\n   #22 = Utf8               Lorg/apache/bcel/generic/InstructionHandle;\n   #23 = Utf8               negate\n   #24 = Utf8               ()Lorg/apache/bcel/generic/IfInstruction;\n   #25 = Utf8               SourceFile\n@@ -37,15 +37,15 @@\n {\n   org.apache.bcel.generic.IfInstruction();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n+         1: invokespecial #10                 // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 29: 0\n         line 30: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/generic/IfInstruction;\n@@ -54,15 +54,15 @@\n     descriptor: (SLorg/apache/bcel/generic/InstructionHandle;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n-         3: invokespecial #7                  // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n+         3: invokespecial #17                 // Method org/apache/bcel/generic/BranchInstruction.\"<init>\":(SLorg/apache/bcel/generic/InstructionHandle;)V\n          6: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/bcel/generic/IfInstruction;\n"}]}
