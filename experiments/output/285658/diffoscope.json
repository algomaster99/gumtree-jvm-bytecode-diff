{"diffoscope-json-version": 1, "source1": "first/BaseNCodec.class", "source2": "second/BaseNCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,60 +1,60 @@\n-  SHA-256 checksum 77eb02199e160cb7289343a249f7c0000ee3dcaa288c0d8c6389a1dc57b574e7\n+  SHA-256 checksum b954c45248a09e915c927fb897e962004797a21cd8dbac5ec063e6b73cbcd2c2\n   Compiled from \"BaseNCodec.java\"\n public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 50\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/codec/binary/BaseNCodec\n   super_class: #41                        // java/lang/Object\n   interfaces: 2, fields: 13, methods: 24, attributes: 2\n Constant pool:\n-    #1 = Class              #113          // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #1.#114       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n-    #3 = Methodref          #41.#115      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #1.#116       // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n-    #5 = Fieldref           #1.#117       // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n-    #6 = Fieldref           #1.#118       // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n-    #7 = Fieldref           #1.#119       // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n-    #8 = Fieldref           #1.#120       // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n-    #9 = Fieldref           #1.#121       // org/apache/commons/codec/binary/BaseNCodec.pad:B\n-   #10 = Fieldref           #32.#122      // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #11 = Fieldref           #32.#123      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #12 = Fieldref           #32.#124      // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-   #13 = Methodref          #1.#125       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n-   #14 = Methodref          #126.#127     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #15 = Methodref          #1.#128       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #16 = Methodref          #1.#129       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #17 = Methodref          #130.#131     // java/lang/Math.min:(II)I\n-   #18 = Fieldref           #32.#132      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #19 = Class              #133          // \"[B\"\n-   #20 = Class              #134          // org/apache/commons/codec/EncoderException\n-   #21 = String             #135          // Parameter supplied to Base-N encode is not a byte[]\n-   #22 = Methodref          #20.#136      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #1.#137       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n-   #24 = Methodref          #138.#139     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-   #25 = Methodref          #1.#140       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n-   #26 = Class              #141          // java/lang/String\n-   #27 = Methodref          #1.#142       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n-   #28 = Class              #143          // org/apache/commons/codec/DecoderException\n-   #29 = String             #144          // Parameter supplied to Base-N decode is not a byte[] or a String\n-   #30 = Methodref          #28.#136      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #31 = Methodref          #138.#145     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #32 = Class              #146          // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #33 = Methodref          #32.#115      // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-   #34 = Methodref          #1.#147       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #35 = Methodref          #1.#148       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #36 = Methodref          #1.#149       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n-   #37 = Methodref          #1.#150       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #38 = Methodref          #1.#151       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n-   #39 = Methodref          #1.#152       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n-   #40 = Methodref          #1.#153       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n-   #41 = Class              #154          // java/lang/Object\n-   #42 = Class              #155          // org/apache/commons/codec/BinaryEncoder\n-   #43 = Class              #156          // org/apache/commons/codec/BinaryDecoder\n+    #1 = Class              #112          // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Methodref          #1.#113       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n+    #3 = Methodref          #41.#114      // java/lang/Object.\"<init>\":()V\n+    #4 = Fieldref           #1.#115       // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n+    #5 = Fieldref           #1.#116       // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n+    #6 = Fieldref           #1.#117       // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n+    #7 = Fieldref           #1.#118       // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n+    #8 = Fieldref           #1.#119       // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n+    #9 = Fieldref           #1.#120       // org/apache/commons/codec/binary/BaseNCodec.pad:B\n+   #10 = Fieldref           #32.#121      // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #11 = Fieldref           #32.#122      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #12 = Fieldref           #32.#123      // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+   #13 = Methodref          #1.#124       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n+   #14 = Methodref          #125.#126     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #15 = Methodref          #1.#127       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #16 = Methodref          #1.#128       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #17 = Methodref          #129.#130     // java/lang/Math.min:(II)I\n+   #18 = Fieldref           #32.#131      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #19 = Class              #132          // \"[B\"\n+   #20 = Class              #133          // org/apache/commons/codec/EncoderException\n+   #21 = String             #134          // Parameter supplied to Base-N encode is not a byte[]\n+   #22 = Methodref          #20.#135      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Methodref          #1.#136       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n+   #24 = Methodref          #137.#138     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+   #25 = Methodref          #1.#139       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n+   #26 = Class              #140          // java/lang/String\n+   #27 = Methodref          #1.#141       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n+   #28 = Class              #142          // org/apache/commons/codec/DecoderException\n+   #29 = String             #143          // Parameter supplied to Base-N decode is not a byte[] or a String\n+   #30 = Methodref          #28.#135      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #31 = Methodref          #137.#144     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+   #32 = Class              #145          // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #33 = Methodref          #32.#114      // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #34 = Methodref          #1.#146       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #35 = Methodref          #1.#147       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #36 = Methodref          #1.#148       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n+   #37 = Methodref          #1.#149       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #38 = Methodref          #1.#150       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n+   #39 = Methodref          #1.#151       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n+   #40 = Methodref          #1.#152       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n+   #41 = Class              #153          // java/lang/Object\n+   #42 = Class              #154          // org/apache/commons/codec/BinaryEncoder\n+   #43 = Class              #155          // org/apache/commons/codec/BinaryDecoder\n    #44 = Utf8               Context\n    #45 = Utf8               InnerClasses\n    #46 = Utf8               EOF\n    #47 = Utf8               I\n    #48 = Utf8               ConstantValue\n    #49 = Integer            -1\n    #50 = Utf8               MIME_CHUNK_SIZE\n@@ -81,109 +81,108 @@\n    #71 = Utf8               chunkSeparatorLength\n    #72 = Utf8               <init>\n    #73 = Utf8               (IIII)V\n    #74 = Utf8               Code\n    #75 = Utf8               LineNumberTable\n    #76 = Utf8               (IIIIB)V\n    #77 = Utf8               StackMapTable\n-   #78 = Class              #113          // org/apache/commons/codec/binary/BaseNCodec\n-   #79 = Utf8               hasData\n-   #80 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #81 = Utf8               available\n-   #82 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #83 = Utf8               getDefaultBufferSize\n-   #84 = Utf8               ()I\n-   #85 = Utf8               resizeBuffer\n-   #86 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #87 = Utf8               ensureBufferSize\n-   #88 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #89 = Utf8               readResults\n-   #90 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #91 = Utf8               isWhiteSpace\n-   #92 = Utf8               (B)Z\n-   #93 = Utf8               encode\n-   #94 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = Utf8               Exceptions\n-   #96 = Utf8               encodeToString\n-   #97 = Utf8               ([B)Ljava/lang/String;\n-   #98 = Utf8               encodeAsString\n-   #99 = Utf8               decode\n-  #100 = Utf8               (Ljava/lang/String;)[B\n-  #101 = Utf8               ([B)[B\n-  #102 = Utf8               ([BII)[B\n-  #103 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #104 = Utf8               isInAlphabet\n-  #105 = Utf8               ([BZ)Z\n-  #106 = Utf8               (Ljava/lang/String;)Z\n-  #107 = Utf8               containsAlphabetOrPad\n-  #108 = Utf8               ([B)Z\n-  #109 = Utf8               getEncodedLength\n-  #110 = Utf8               ([B)J\n-  #111 = Utf8               SourceFile\n-  #112 = Utf8               BaseNCodec.java\n-  #113 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #114 = NameAndType        #72:#76       // \"<init>\":(IIIIB)V\n-  #115 = NameAndType        #72:#157      // \"<init>\":()V\n-  #116 = NameAndType        #63:#61       // PAD:B\n-  #117 = NameAndType        #68:#47       // unencodedBlockSize:I\n-  #118 = NameAndType        #69:#47       // encodedBlockSize:I\n-  #119 = NameAndType        #70:#47       // lineLength:I\n-  #120 = NameAndType        #71:#47       // chunkSeparatorLength:I\n-  #121 = NameAndType        #67:#61       // pad:B\n-  #122 = NameAndType        #158:#133     // buffer:[B\n-  #123 = NameAndType        #159:#47      // pos:I\n-  #124 = NameAndType        #160:#47      // readPos:I\n-  #125 = NameAndType        #83:#84       // getDefaultBufferSize:()I\n-  #126 = Class              #161          // java/lang/System\n-  #127 = NameAndType        #162:#163     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #128 = NameAndType        #85:#86       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #129 = NameAndType        #81:#82       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #130 = Class              #164          // java/lang/Math\n-  #131 = NameAndType        #165:#166     // min:(II)I\n-  #132 = NameAndType        #167:#168     // eof:Z\n-  #133 = Utf8               [B\n-  #134 = Utf8               org/apache/commons/codec/EncoderException\n-  #135 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n-  #136 = NameAndType        #72:#169      // \"<init>\":(Ljava/lang/String;)V\n-  #137 = NameAndType        #93:#101      // encode:([B)[B\n-  #138 = Class              #170          // org/apache/commons/codec/binary/StringUtils\n-  #139 = NameAndType        #171:#97      // newStringUtf8:([B)Ljava/lang/String;\n-  #140 = NameAndType        #99:#101      // decode:([B)[B\n-  #141 = Utf8               java/lang/String\n-  #142 = NameAndType        #99:#100      // decode:(Ljava/lang/String;)[B\n-  #143 = Utf8               org/apache/commons/codec/DecoderException\n-  #144 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n-  #145 = NameAndType        #172:#100     // getBytesUtf8:(Ljava/lang/String;)[B\n-  #146 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #147 = NameAndType        #99:#103      // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #148 = NameAndType        #89:#90       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #149 = NameAndType        #93:#102      // encode:([BII)[B\n-  #150 = NameAndType        #93:#103      // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #151 = NameAndType        #104:#92      // isInAlphabet:(B)Z\n-  #152 = NameAndType        #91:#92       // isWhiteSpace:(B)Z\n-  #153 = NameAndType        #104:#105     // isInAlphabet:([BZ)Z\n-  #154 = Utf8               java/lang/Object\n-  #155 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #156 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #157 = Utf8               ()V\n-  #158 = Utf8               buffer\n-  #159 = Utf8               pos\n-  #160 = Utf8               readPos\n-  #161 = Utf8               java/lang/System\n-  #162 = Utf8               arraycopy\n-  #163 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #164 = Utf8               java/lang/Math\n-  #165 = Utf8               min\n-  #166 = Utf8               (II)I\n-  #167 = Utf8               eof\n-  #168 = Utf8               Z\n-  #169 = Utf8               (Ljava/lang/String;)V\n-  #170 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #171 = Utf8               newStringUtf8\n-  #172 = Utf8               getBytesUtf8\n+   #78 = Utf8               hasData\n+   #79 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #80 = Utf8               available\n+   #81 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #82 = Utf8               getDefaultBufferSize\n+   #83 = Utf8               ()I\n+   #84 = Utf8               resizeBuffer\n+   #85 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #86 = Utf8               ensureBufferSize\n+   #87 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #88 = Utf8               readResults\n+   #89 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #90 = Utf8               isWhiteSpace\n+   #91 = Utf8               (B)Z\n+   #92 = Utf8               encode\n+   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = Utf8               Exceptions\n+   #95 = Utf8               encodeToString\n+   #96 = Utf8               ([B)Ljava/lang/String;\n+   #97 = Utf8               encodeAsString\n+   #98 = Utf8               decode\n+   #99 = Utf8               (Ljava/lang/String;)[B\n+  #100 = Utf8               ([B)[B\n+  #101 = Utf8               ([BII)[B\n+  #102 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #103 = Utf8               isInAlphabet\n+  #104 = Utf8               ([BZ)Z\n+  #105 = Utf8               (Ljava/lang/String;)Z\n+  #106 = Utf8               containsAlphabetOrPad\n+  #107 = Utf8               ([B)Z\n+  #108 = Utf8               getEncodedLength\n+  #109 = Utf8               ([B)J\n+  #110 = Utf8               SourceFile\n+  #111 = Utf8               BaseNCodec.java\n+  #112 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+  #113 = NameAndType        #72:#76       // \"<init>\":(IIIIB)V\n+  #114 = NameAndType        #72:#156      // \"<init>\":()V\n+  #115 = NameAndType        #63:#61       // PAD:B\n+  #116 = NameAndType        #68:#47       // unencodedBlockSize:I\n+  #117 = NameAndType        #69:#47       // encodedBlockSize:I\n+  #118 = NameAndType        #70:#47       // lineLength:I\n+  #119 = NameAndType        #71:#47       // chunkSeparatorLength:I\n+  #120 = NameAndType        #67:#61       // pad:B\n+  #121 = NameAndType        #157:#132     // buffer:[B\n+  #122 = NameAndType        #158:#47      // pos:I\n+  #123 = NameAndType        #159:#47      // readPos:I\n+  #124 = NameAndType        #82:#83       // getDefaultBufferSize:()I\n+  #125 = Class              #160          // java/lang/System\n+  #126 = NameAndType        #161:#162     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #127 = NameAndType        #84:#85       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #128 = NameAndType        #80:#81       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #129 = Class              #163          // java/lang/Math\n+  #130 = NameAndType        #164:#165     // min:(II)I\n+  #131 = NameAndType        #166:#167     // eof:Z\n+  #132 = Utf8               [B\n+  #133 = Utf8               org/apache/commons/codec/EncoderException\n+  #134 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n+  #135 = NameAndType        #72:#168      // \"<init>\":(Ljava/lang/String;)V\n+  #136 = NameAndType        #92:#100      // encode:([B)[B\n+  #137 = Class              #169          // org/apache/commons/codec/binary/StringUtils\n+  #138 = NameAndType        #170:#96      // newStringUtf8:([B)Ljava/lang/String;\n+  #139 = NameAndType        #98:#100      // decode:([B)[B\n+  #140 = Utf8               java/lang/String\n+  #141 = NameAndType        #98:#99       // decode:(Ljava/lang/String;)[B\n+  #142 = Utf8               org/apache/commons/codec/DecoderException\n+  #143 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n+  #144 = NameAndType        #171:#99      // getBytesUtf8:(Ljava/lang/String;)[B\n+  #145 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+  #146 = NameAndType        #98:#102      // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #147 = NameAndType        #88:#89       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #148 = NameAndType        #92:#101      // encode:([BII)[B\n+  #149 = NameAndType        #92:#102      // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #150 = NameAndType        #103:#91      // isInAlphabet:(B)Z\n+  #151 = NameAndType        #90:#91       // isWhiteSpace:(B)Z\n+  #152 = NameAndType        #103:#104     // isInAlphabet:([BZ)Z\n+  #153 = Utf8               java/lang/Object\n+  #154 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #155 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #156 = Utf8               ()V\n+  #157 = Utf8               buffer\n+  #158 = Utf8               pos\n+  #159 = Utf8               readPos\n+  #160 = Utf8               java/lang/System\n+  #161 = Utf8               arraycopy\n+  #162 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #163 = Utf8               java/lang/Math\n+  #164 = Utf8               min\n+  #165 = Utf8               (II)I\n+  #166 = Utf8               eof\n+  #167 = Utf8               Z\n+  #168 = Utf8               (Ljava/lang/String;)V\n+  #169 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #170 = Utf8               newStringUtf8\n+  #171 = Utf8               getBytesUtf8\n {\n   static final int EOF = -1;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   public static final int MIME_CHUNK_SIZE = 76;\n@@ -569,17 +568,16 @@\n         10: dup\n         11: ldc           #21                 // String Parameter supplied to Base-N encode is not a byte[]\n         13: invokespecial #22                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n         19: checkcast     #19                 // class \"[B\"\n-        22: checkcast     #19                 // class \"[B\"\n-        25: invokevirtual #23                 // Method encode:([B)[B\n-        28: areturn\n+        22: invokevirtual #23                 // Method encode:([B)[B\n+        25: areturn\n       LineNumberTable:\n         line 335: 0\n         line 336: 7\n         line 338: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Exceptions:\n@@ -614,42 +612,41 @@\n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: instanceof    #19                 // class \"[B\"\n-         4: ifeq          19\n+         4: ifeq          16\n          7: aload_0\n          8: aload_1\n          9: checkcast     #19                 // class \"[B\"\n-        12: checkcast     #19                 // class \"[B\"\n-        15: invokevirtual #25                 // Method decode:([B)[B\n-        18: areturn\n-        19: aload_1\n-        20: instanceof    #26                 // class java/lang/String\n-        23: ifeq          35\n-        26: aload_0\n-        27: aload_1\n-        28: checkcast     #26                 // class java/lang/String\n-        31: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B\n-        34: areturn\n-        35: new           #28                 // class org/apache/commons/codec/DecoderException\n-        38: dup\n-        39: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String\n-        41: invokespecial #30                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n+        12: invokevirtual #25                 // Method decode:([B)[B\n+        15: areturn\n+        16: aload_1\n+        17: instanceof    #26                 // class java/lang/String\n+        20: ifeq          32\n+        23: aload_0\n+        24: aload_1\n+        25: checkcast     #26                 // class java/lang/String\n+        28: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B\n+        31: areturn\n+        32: new           #28                 // class org/apache/commons/codec/DecoderException\n+        35: dup\n+        36: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String\n+        38: invokespecial #30                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n-        line 381: 19\n-        line 382: 26\n-        line 384: 35\n+        line 381: 16\n+        line 382: 23\n+        line 384: 32\n       StackMapTable: number_of_entries = 2\n-        frame_type = 19 /* same */\n+        frame_type = 16 /* same */\n         frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.DecoderException\n \n   public byte[] decode(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n"}]}
