{"diffoscope-json-version": 1, "source1": "first/LineIterator.class", "source2": "second/LineIterator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,162 +1,162 @@\n-  SHA-256 checksum e1132d3ac5c51982aa1fb6f6f622c827402f5a073b43b1f23f4c77417b52ae96\n+  SHA-256 checksum 413323c4bc391d5c053bb54228fcd4ca1a2c69667935d24a49063ddbc5b09bec\n   Compiled from \"LineIterator.java\"\n public class org.apache.commons.io.LineIterator extends java.lang.Object implements java.util.Iterator<java.lang.String>, java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #29                         // org/apache/commons/io/LineIterator\n-  super_class: #30                        // java/lang/Object\n+  this_class: #17                         // org/apache/commons/io/LineIterator\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 3, methods: 9, attributes: 4\n Constant pool:\n-    #1 = Methodref          #30.#77       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #78           // java/lang/IllegalArgumentException\n-    #3 = String             #79           // Reader must not be null\n-    #4 = Methodref          #2.#80        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Class              #81           // java/io/BufferedReader\n-    #6 = Fieldref           #29.#82       // org/apache/commons/io/LineIterator.bufferedReader:Ljava/io/BufferedReader;\n-    #7 = Methodref          #5.#83        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-    #8 = Fieldref           #29.#84       // org/apache/commons/io/LineIterator.cachedLine:Ljava/lang/String;\n-    #9 = Fieldref           #29.#85       // org/apache/commons/io/LineIterator.finished:Z\n-   #10 = Methodref          #5.#86        // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #11 = Methodref          #29.#87       // org/apache/commons/io/LineIterator.isValidLine:(Ljava/lang/String;)Z\n-   #12 = Class              #88           // java/io/IOException\n-   #13 = Methodref          #89.#90       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #14 = InvokeDynamic      #0:#96        // #0:accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n-   #15 = Methodref          #97.#98       // org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n-   #16 = Class              #99           // java/lang/IllegalStateException\n-   #17 = Methodref          #16.#100      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #18 = Methodref          #29.#101      // org/apache/commons/io/LineIterator.nextLine:()Ljava/lang/String;\n-   #19 = Methodref          #29.#102      // org/apache/commons/io/LineIterator.hasNext:()Z\n-   #20 = Class              #103          // java/util/NoSuchElementException\n-   #21 = String             #104          // No more lines\n-   #22 = Methodref          #20.#80       // java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #97.#105      // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n-   #24 = Class              #106          // java/lang/UnsupportedOperationException\n-   #25 = String             #107          // remove not supported\n-   #26 = Methodref          #24.#80       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #97.#108      // org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-   #28 = Methodref          #29.#109      // org/apache/commons/io/LineIterator.next:()Ljava/lang/String;\n-   #29 = Class              #110          // org/apache/commons/io/LineIterator\n-   #30 = Class              #111          // java/lang/Object\n-   #31 = Class              #112          // java/util/Iterator\n-   #32 = Class              #113          // java/io/Closeable\n-   #33 = Utf8               bufferedReader\n-   #34 = Utf8               Ljava/io/BufferedReader;\n-   #35 = Utf8               cachedLine\n-   #36 = Utf8               Ljava/lang/String;\n-   #37 = Utf8               finished\n-   #38 = Utf8               Z\n-   #39 = Utf8               <init>\n-   #40 = Utf8               (Ljava/io/Reader;)V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Lorg/apache/commons/io/LineIterator;\n-   #46 = Utf8               reader\n-   #47 = Utf8               Ljava/io/Reader;\n-   #48 = Utf8               StackMapTable\n-   #49 = Class              #114          // java/io/Reader\n-   #50 = Utf8               Exceptions\n-   #51 = Utf8               hasNext\n-   #52 = Utf8               ()Z\n-   #53 = Utf8               line\n-   #54 = Utf8               ioe\n-   #55 = Utf8               Ljava/io/IOException;\n-   #56 = Class              #115          // java/lang/String\n-   #57 = Utf8               isValidLine\n-   #58 = Utf8               (Ljava/lang/String;)Z\n-   #59 = Utf8               next\n-   #60 = Utf8               ()Ljava/lang/String;\n-   #61 = Utf8               nextLine\n-   #62 = Utf8               currentLine\n-   #63 = Utf8               close\n-   #64 = Utf8               ()V\n-   #65 = Utf8               remove\n-   #66 = Utf8               closeQuietly\n-   #67 = Utf8               (Lorg/apache/commons/io/LineIterator;)V\n-   #68 = Utf8               iterator\n-   #69 = Utf8               Deprecated\n-   #70 = Utf8               RuntimeVisibleAnnotations\n-   #71 = Utf8               Ljava/lang/Deprecated;\n-   #72 = Utf8               ()Ljava/lang/Object;\n-   #73 = Utf8               Signature\n-   #74 = Utf8               Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;Ljava/io/Closeable;\n-   #75 = Utf8               SourceFile\n-   #76 = Utf8               LineIterator.java\n-   #77 = NameAndType        #39:#64       // \"<init>\":()V\n-   #78 = Utf8               java/lang/IllegalArgumentException\n-   #79 = Utf8               Reader must not be null\n-   #80 = NameAndType        #39:#116      // \"<init>\":(Ljava/lang/String;)V\n-   #81 = Utf8               java/io/BufferedReader\n-   #82 = NameAndType        #33:#34       // bufferedReader:Ljava/io/BufferedReader;\n-   #83 = NameAndType        #39:#40       // \"<init>\":(Ljava/io/Reader;)V\n-   #84 = NameAndType        #35:#36       // cachedLine:Ljava/lang/String;\n-   #85 = NameAndType        #37:#38       // finished:Z\n-   #86 = NameAndType        #117:#60      // readLine:()Ljava/lang/String;\n-   #87 = NameAndType        #57:#58       // isValidLine:(Ljava/lang/String;)Z\n-   #88 = Utf8               java/io/IOException\n-   #89 = Class              #118          // java/util/Objects\n-   #90 = NameAndType        #119:#120     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Utf8               BootstrapMethods\n-   #92 = MethodHandle       6:#121        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #93 = MethodType         #122          //  (Ljava/lang/Object;)V\n-   #94 = MethodHandle       5:#123        // REF_invokeVirtual java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #95 = MethodType         #124          //  (Ljava/io/IOException;)V\n-   #96 = NameAndType        #125:#126     // accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n-   #97 = Class              #127          // org/apache/commons/io/IOUtils\n-   #98 = NameAndType        #66:#128      // closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n-   #99 = Utf8               java/lang/IllegalStateException\n-  #100 = NameAndType        #39:#129      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #101 = NameAndType        #61:#60       // nextLine:()Ljava/lang/String;\n-  #102 = NameAndType        #51:#52       // hasNext:()Z\n-  #103 = Utf8               java/util/NoSuchElementException\n-  #104 = Utf8               No more lines\n-  #105 = NameAndType        #63:#130      // close:(Ljava/io/Closeable;)V\n-  #106 = Utf8               java/lang/UnsupportedOperationException\n-  #107 = Utf8               remove not supported\n-  #108 = NameAndType        #66:#130      // closeQuietly:(Ljava/io/Closeable;)V\n-  #109 = NameAndType        #59:#60       // next:()Ljava/lang/String;\n-  #110 = Utf8               org/apache/commons/io/LineIterator\n-  #111 = Utf8               java/lang/Object\n-  #112 = Utf8               java/util/Iterator\n-  #113 = Utf8               java/io/Closeable\n-  #114 = Utf8               java/io/Reader\n-  #115 = Utf8               java/lang/String\n-  #116 = Utf8               (Ljava/lang/String;)V\n-  #117 = Utf8               readLine\n-  #118 = Utf8               java/util/Objects\n-  #119 = Utf8               requireNonNull\n-  #120 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #121 = Methodref          #131.#132     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #122 = Utf8               (Ljava/lang/Object;)V\n-  #123 = Methodref          #133.#134     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #124 = Utf8               (Ljava/io/IOException;)V\n-  #125 = Utf8               accept\n-  #126 = Utf8               (Ljava/io/IOException;)Ljava/util/function/Consumer;\n-  #127 = Utf8               org/apache/commons/io/IOUtils\n-  #128 = Utf8               (Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n-  #129 = Utf8               (Ljava/lang/Throwable;)V\n-  #130 = Utf8               (Ljava/io/Closeable;)V\n-  #131 = Class              #135          // java/lang/invoke/LambdaMetafactory\n-  #132 = NameAndType        #136:#140     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #133 = Class              #141          // java/lang/Throwable\n-  #134 = NameAndType        #142:#129     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #135 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #136 = Utf8               metafactory\n-  #137 = Class              #144          // java/lang/invoke/MethodHandles$Lookup\n-  #138 = Utf8               Lookup\n-  #139 = Utf8               InnerClasses\n-  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #141 = Utf8               java/lang/Throwable\n-  #142 = Utf8               addSuppressed\n-  #143 = Class              #145          // java/lang/invoke/MethodHandles\n-  #144 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #145 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/IllegalArgumentException\n+    #8 = Utf8               java/lang/IllegalArgumentException\n+    #9 = String             #10           // Reader must not be null\n+   #10 = Utf8               Reader must not be null\n+   #11 = Methodref          #7.#12        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = NameAndType        #5:#13        // \"<init>\":(Ljava/lang/String;)V\n+   #13 = Utf8               (Ljava/lang/String;)V\n+   #14 = Class              #15           // java/io/BufferedReader\n+   #15 = Utf8               java/io/BufferedReader\n+   #16 = Fieldref           #17.#18       // org/apache/commons/io/LineIterator.bufferedReader:Ljava/io/BufferedReader;\n+   #17 = Class              #19           // org/apache/commons/io/LineIterator\n+   #18 = NameAndType        #20:#21       // bufferedReader:Ljava/io/BufferedReader;\n+   #19 = Utf8               org/apache/commons/io/LineIterator\n+   #20 = Utf8               bufferedReader\n+   #21 = Utf8               Ljava/io/BufferedReader;\n+   #22 = Methodref          #14.#23       // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #23 = NameAndType        #5:#24        // \"<init>\":(Ljava/io/Reader;)V\n+   #24 = Utf8               (Ljava/io/Reader;)V\n+   #25 = Fieldref           #17.#26       // org/apache/commons/io/LineIterator.cachedLine:Ljava/lang/String;\n+   #26 = NameAndType        #27:#28       // cachedLine:Ljava/lang/String;\n+   #27 = Utf8               cachedLine\n+   #28 = Utf8               Ljava/lang/String;\n+   #29 = Fieldref           #17.#30       // org/apache/commons/io/LineIterator.finished:Z\n+   #30 = NameAndType        #31:#32       // finished:Z\n+   #31 = Utf8               finished\n+   #32 = Utf8               Z\n+   #33 = Methodref          #14.#34       // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+   #34 = NameAndType        #35:#36       // readLine:()Ljava/lang/String;\n+   #35 = Utf8               readLine\n+   #36 = Utf8               ()Ljava/lang/String;\n+   #37 = Methodref          #17.#38       // org/apache/commons/io/LineIterator.isValidLine:(Ljava/lang/String;)Z\n+   #38 = NameAndType        #39:#40       // isValidLine:(Ljava/lang/String;)Z\n+   #39 = Utf8               isValidLine\n+   #40 = Utf8               (Ljava/lang/String;)Z\n+   #41 = Class              #42           // java/io/IOException\n+   #42 = Utf8               java/io/IOException\n+   #43 = Methodref          #44.#45       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #44 = Class              #46           // java/util/Objects\n+   #45 = NameAndType        #47:#48       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #46 = Utf8               java/util/Objects\n+   #47 = Utf8               requireNonNull\n+   #48 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #49 = InvokeDynamic      #0:#50        // #0:accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n+   #50 = NameAndType        #51:#52       // accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n+   #51 = Utf8               accept\n+   #52 = Utf8               (Ljava/io/IOException;)Ljava/util/function/Consumer;\n+   #53 = Methodref          #54.#55       // org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n+   #54 = Class              #56           // org/apache/commons/io/IOUtils\n+   #55 = NameAndType        #57:#58       // closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n+   #56 = Utf8               org/apache/commons/io/IOUtils\n+   #57 = Utf8               closeQuietly\n+   #58 = Utf8               (Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n+   #59 = Class              #60           // java/lang/IllegalStateException\n+   #60 = Utf8               java/lang/IllegalStateException\n+   #61 = Methodref          #59.#62       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #62 = NameAndType        #5:#63        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #63 = Utf8               (Ljava/lang/Throwable;)V\n+   #64 = Methodref          #17.#65       // org/apache/commons/io/LineIterator.nextLine:()Ljava/lang/String;\n+   #65 = NameAndType        #66:#36       // nextLine:()Ljava/lang/String;\n+   #66 = Utf8               nextLine\n+   #67 = Methodref          #17.#68       // org/apache/commons/io/LineIterator.hasNext:()Z\n+   #68 = NameAndType        #69:#70       // hasNext:()Z\n+   #69 = Utf8               hasNext\n+   #70 = Utf8               ()Z\n+   #71 = Class              #72           // java/util/NoSuchElementException\n+   #72 = Utf8               java/util/NoSuchElementException\n+   #73 = String             #74           // No more lines\n+   #74 = Utf8               No more lines\n+   #75 = Methodref          #71.#12       // java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n+   #76 = Methodref          #54.#77       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+   #77 = NameAndType        #78:#79       // close:(Ljava/io/Closeable;)V\n+   #78 = Utf8               close\n+   #79 = Utf8               (Ljava/io/Closeable;)V\n+   #80 = Class              #81           // java/lang/UnsupportedOperationException\n+   #81 = Utf8               java/lang/UnsupportedOperationException\n+   #82 = String             #83           // remove not supported\n+   #83 = Utf8               remove not supported\n+   #84 = Methodref          #80.#12       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #85 = Methodref          #54.#86       // org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+   #86 = NameAndType        #57:#79       // closeQuietly:(Ljava/io/Closeable;)V\n+   #87 = Methodref          #17.#88       // org/apache/commons/io/LineIterator.next:()Ljava/lang/String;\n+   #88 = NameAndType        #89:#36       // next:()Ljava/lang/String;\n+   #89 = Utf8               next\n+   #90 = Class              #91           // java/util/Iterator\n+   #91 = Utf8               java/util/Iterator\n+   #92 = Class              #93           // java/io/Closeable\n+   #93 = Utf8               java/io/Closeable\n+   #94 = Utf8               Code\n+   #95 = Utf8               LineNumberTable\n+   #96 = Utf8               LocalVariableTable\n+   #97 = Utf8               this\n+   #98 = Utf8               Lorg/apache/commons/io/LineIterator;\n+   #99 = Utf8               reader\n+  #100 = Utf8               Ljava/io/Reader;\n+  #101 = Utf8               StackMapTable\n+  #102 = Class              #103          // java/io/Reader\n+  #103 = Utf8               java/io/Reader\n+  #104 = Utf8               Exceptions\n+  #105 = Utf8               line\n+  #106 = Utf8               ioe\n+  #107 = Utf8               Ljava/io/IOException;\n+  #108 = Class              #109          // java/lang/String\n+  #109 = Utf8               java/lang/String\n+  #110 = Utf8               currentLine\n+  #111 = Utf8               remove\n+  #112 = Utf8               (Lorg/apache/commons/io/LineIterator;)V\n+  #113 = Utf8               iterator\n+  #114 = Utf8               Deprecated\n+  #115 = Utf8               RuntimeVisibleAnnotations\n+  #116 = Utf8               Ljava/lang/Deprecated;\n+  #117 = Utf8               ()Ljava/lang/Object;\n+  #118 = Utf8               Signature\n+  #119 = Utf8               Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;Ljava/io/Closeable;\n+  #120 = Utf8               SourceFile\n+  #121 = Utf8               LineIterator.java\n+  #122 = Utf8               BootstrapMethods\n+  #123 = MethodHandle       6:#124        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #124 = Methodref          #125.#126     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #125 = Class              #127          // java/lang/invoke/LambdaMetafactory\n+  #126 = NameAndType        #128:#129     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #127 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #128 = Utf8               metafactory\n+  #129 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #130 = MethodType         #131          //  (Ljava/lang/Object;)V\n+  #131 = Utf8               (Ljava/lang/Object;)V\n+  #132 = MethodHandle       5:#133        // REF_invokeVirtual java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #133 = Methodref          #134.#135     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #134 = Class              #136          // java/lang/Throwable\n+  #135 = NameAndType        #137:#63      // addSuppressed:(Ljava/lang/Throwable;)V\n+  #136 = Utf8               java/lang/Throwable\n+  #137 = Utf8               addSuppressed\n+  #138 = MethodType         #139          //  (Ljava/io/IOException;)V\n+  #139 = Utf8               (Ljava/io/IOException;)V\n+  #140 = Utf8               InnerClasses\n+  #141 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n+  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #143 = Class              #144          // java/lang/invoke/MethodHandles\n+  #144 = Utf8               java/lang/invoke/MethodHandles\n+  #145 = Utf8               Lookup\n {\n   private final java.io.BufferedReader bufferedReader;\n     descriptor: Ljava/io/BufferedReader;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private java.lang.String cachedLine;\n     descriptor: Ljava/lang/String;\n@@ -171,33 +171,33 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #3                  // String Reader must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #9                  // String Reader must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_1\n-        19: instanceof    #5                  // class java/io/BufferedReader\n+        19: instanceof    #14                 // class java/io/BufferedReader\n         22: ifeq          36\n         25: aload_0\n         26: aload_1\n-        27: checkcast     #5                  // class java/io/BufferedReader\n-        30: putfield      #6                  // Field bufferedReader:Ljava/io/BufferedReader;\n+        27: checkcast     #14                 // class java/io/BufferedReader\n+        30: putfield      #16                 // Field bufferedReader:Ljava/io/BufferedReader;\n         33: goto          48\n         36: aload_0\n-        37: new           #5                  // class java/io/BufferedReader\n+        37: new           #14                 // class java/io/BufferedReader\n         40: dup\n         41: aload_1\n-        42: invokespecial #7                  // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-        45: putfield      #6                  // Field bufferedReader:Ljava/io/BufferedReader;\n+        42: invokespecial #22                 // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+        45: putfield      #16                 // Field bufferedReader:Ljava/io/BufferedReader;\n         48: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 8\n         line 71: 18\n         line 72: 25\n@@ -219,56 +219,56 @@\n \n   public boolean hasNext();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field cachedLine:Ljava/lang/String;\n+         1: getfield      #25                 // Field cachedLine:Ljava/lang/String;\n          4: ifnull        9\n          7: iconst_1\n          8: ireturn\n          9: aload_0\n-        10: getfield      #9                  // Field finished:Z\n+        10: getfield      #29                 // Field finished:Z\n         13: ifeq          18\n         16: iconst_0\n         17: ireturn\n         18: aload_0\n-        19: getfield      #6                  // Field bufferedReader:Ljava/io/BufferedReader;\n-        22: invokevirtual #10                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+        19: getfield      #16                 // Field bufferedReader:Ljava/io/BufferedReader;\n+        22: invokevirtual #33                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n         25: astore_1\n         26: aload_1\n         27: ifnonnull     37\n         30: aload_0\n         31: iconst_1\n-        32: putfield      #9                  // Field finished:Z\n+        32: putfield      #29                 // Field finished:Z\n         35: iconst_0\n         36: ireturn\n         37: aload_0\n         38: aload_1\n-        39: invokevirtual #11                 // Method isValidLine:(Ljava/lang/String;)Z\n+        39: invokevirtual #37                 // Method isValidLine:(Ljava/lang/String;)Z\n         42: ifeq          52\n         45: aload_0\n         46: aload_1\n-        47: putfield      #8                  // Field cachedLine:Ljava/lang/String;\n+        47: putfield      #25                 // Field cachedLine:Ljava/lang/String;\n         50: iconst_1\n         51: ireturn\n         52: goto          18\n         55: astore_1\n         56: aload_0\n         57: aload_1\n         58: dup\n-        59: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        59: invokestatic  #43                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         62: pop\n-        63: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n-        68: invokestatic  #15                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n-        71: new           #16                 // class java/lang/IllegalStateException\n+        63: invokedynamic #49,  0             // InvokeDynamic #0:accept:(Ljava/io/IOException;)Ljava/util/function/Consumer;\n+        68: invokestatic  #53                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;Ljava/util/function/Consumer;)V\n+        71: new           #59                 // class java/lang/IllegalStateException\n         74: dup\n         75: aload_1\n-        76: invokespecial #17                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+        76: invokespecial #61                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n         79: athrow\n       Exception table:\n          from    to  target type\n             18    36    55   Class java/io/IOException\n             37    51    55   Class java/io/IOException\n             52    55    55   Class java/io/IOException\n       LineNumberTable:\n@@ -319,41 +319,41 @@\n \n   public java.lang.String next();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #18                 // Method nextLine:()Ljava/lang/String;\n+         1: invokevirtual #64                 // Method nextLine:()Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 131: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/LineIterator;\n \n   public java.lang.String nextLine();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #19                 // Method hasNext:()Z\n+         1: invokevirtual #67                 // Method hasNext:()Z\n          4: ifne          17\n-         7: new           #20                 // class java/util/NoSuchElementException\n+         7: new           #71                 // class java/util/NoSuchElementException\n         10: dup\n-        11: ldc           #21                 // String No more lines\n-        13: invokespecial #22                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #73                 // String No more lines\n+        13: invokespecial #75                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #8                  // Field cachedLine:Ljava/lang/String;\n+        18: getfield      #25                 // Field cachedLine:Ljava/lang/String;\n         21: astore_1\n         22: aload_0\n         23: aconst_null\n-        24: putfield      #8                  // Field cachedLine:Ljava/lang/String;\n+        24: putfield      #25                 // Field cachedLine:Ljava/lang/String;\n         27: aload_1\n         28: areturn\n       LineNumberTable:\n         line 141: 0\n         line 142: 7\n         line 144: 17\n         line 145: 22\n@@ -368,21 +368,21 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #9                  // Field finished:Z\n+         2: putfield      #29                 // Field finished:Z\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #8                  // Field cachedLine:Ljava/lang/String;\n+         7: putfield      #25                 // Field cachedLine:Ljava/lang/String;\n         10: aload_0\n-        11: getfield      #6                  // Field bufferedReader:Ljava/io/BufferedReader;\n-        14: invokestatic  #23                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+        11: getfield      #16                 // Field bufferedReader:Ljava/io/BufferedReader;\n+        14: invokestatic  #76                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n         17: return\n       LineNumberTable:\n         line 160: 0\n         line 161: 5\n         line 162: 10\n         line 163: 17\n       LocalVariableTable:\n@@ -392,61 +392,61 @@\n       throws java.io.IOException\n \n   public void remove();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #24                 // class java/lang/UnsupportedOperationException\n+         0: new           #80                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #25                 // String remove not supported\n-         6: invokespecial #26                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #82                 // String remove not supported\n+         6: invokespecial #84                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 172: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/LineIterator;\n \n   public static void closeQuietly(org.apache.commons.io.LineIterator);\n     descriptor: (Lorg/apache/commons/io/LineIterator;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #27                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+         1: invokestatic  #85                 // Method org/apache/commons/io/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n          4: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 iterator   Lorg/apache/commons/io/LineIterator;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #71()\n+      0: #116()\n         java.lang.Deprecated\n \n   public java.lang.Object next();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #28                 // Method next:()Ljava/lang/String;\n+         1: invokevirtual #87                 // Method next:()Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 50: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/LineIterator;\n }\n-Signature: #74                          // Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;Ljava/io/Closeable;\n+Signature: #119                         // Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;Ljava/io/Closeable;\n SourceFile: \"LineIterator.java\"\n-InnerClasses:\n-  public static final #138= #137 of #143; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #92 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #123 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #93 (Ljava/lang/Object;)V\n-      #94 REF_invokeVirtual java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-      #95 (Ljava/io/IOException;)V\n+      #130 (Ljava/lang/Object;)V\n+      #132 REF_invokeVirtual java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+      #138 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #145= #141 of #143; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
