{"diffoscope-json-version": 1, "source1": "first/JarArchiveEntry.class", "source2": "second/JarArchiveEntry.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,46 +9,46 @@\n import org.apache.commons.compress.archivers.zip.ZipArchiveEntry;\n \n public class JarArchiveEntry extends ZipArchiveEntry\n {\n     private final Attributes manifestAttributes;\n     private final Certificate[] certificates;\n     \n-    public JarArchiveEntry(final ZipEntry entry) throws ZipException {\n-        super(entry);\n+    public JarArchiveEntry(final ZipEntry zipEntry) throws ZipException {\n+        super(zipEntry);\n         this.manifestAttributes = null;\n         this.certificates = null;\n     }\n     \n-    public JarArchiveEntry(final String name) {\n-        super(name);\n+    public JarArchiveEntry(final String s) {\n+        super(s);\n         this.manifestAttributes = null;\n         this.certificates = null;\n     }\n     \n-    public JarArchiveEntry(final ZipArchiveEntry entry) throws ZipException {\n-        super(entry);\n+    public JarArchiveEntry(final ZipArchiveEntry zipArchiveEntry) throws ZipException {\n+        super(zipArchiveEntry);\n         this.manifestAttributes = null;\n         this.certificates = null;\n     }\n     \n-    public JarArchiveEntry(final JarEntry entry) throws ZipException {\n-        super((ZipEntry)entry);\n+    public JarArchiveEntry(final JarEntry jarEntry) throws ZipException {\n+        super((ZipEntry)jarEntry);\n         this.manifestAttributes = null;\n         this.certificates = null;\n     }\n     \n     @Deprecated\n     public Attributes getManifestAttributes() {\n         return this.manifestAttributes;\n     }\n     \n     @Deprecated\n     public Certificate[] getCertificates() {\n         if (this.certificates != null) {\n-            final Certificate[] certs = new Certificate[this.certificates.length];\n-            System.arraycopy(this.certificates, 0, certs, 0, certs.length);\n-            return certs;\n+            final Certificate[] array = new Certificate[this.certificates.length];\n+            System.arraycopy(this.certificates, 0, array, 0, array.length);\n+            return array;\n         }\n         return null;\n     }\n }\n"}]}
