{"diffoscope-json-version": 1, "source1": "first/CharSequenceReader.class", "source2": "second/CharSequenceReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,183 +1,183 @@\n-  SHA-256 checksum 07e0e9cedcf69ec9f6db4a6c121ba449f13a00d7290164af81936ef33414278c\n+  SHA-256 checksum e91f0d02a2516afbbeb8dbe966d7605a14efc5ddaaa3fdcbb04e692e5a9f032b\n   Compiled from \"CharSequenceReader.java\"\n public class org.apache.commons.io.input.CharSequenceReader extends java.io.Reader implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #48                         // org/apache/commons/io/input/CharSequenceReader\n-  super_class: #49                        // java/io/Reader\n+  this_class: #4                          // org/apache/commons/io/input/CharSequenceReader\n+  super_class: #16                        // java/io/Reader\n   interfaces: 1, fields: 6, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Class              #102          // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #48.#103      // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;I)V\n-    #3 = Class              #104          // java/lang/Integer\n-    #4 = Integer            2147483647\n-    #5 = Methodref          #48.#105      // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;II)V\n-    #6 = Methodref          #49.#106      // java/io/Reader.\"<init>\":()V\n-    #7 = Class              #107          // java/lang/IllegalArgumentException\n-    #8 = Class              #108          // java/lang/StringBuilder\n-    #9 = Methodref          #8.#106       // java/lang/StringBuilder.\"<init>\":()V\n-   #10 = String             #109          // Start index is less than zero:\n-   #11 = Methodref          #8.#110       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #12 = Methodref          #8.#111       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #8.#112       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #14 = Methodref          #7.#113       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = String             #114          // End index is less than start\n-   #16 = String             #115          // :\n-   #17 = String             #116          //\n-   #18 = Fieldref           #48.#117      // org/apache/commons/io/input/CharSequenceReader.charSequence:Ljava/lang/CharSequence;\n-   #19 = Fieldref           #48.#118      // org/apache/commons/io/input/CharSequenceReader.start:I\n-   #20 = Methodref          #3.#119       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #21 = Fieldref           #48.#120      // org/apache/commons/io/input/CharSequenceReader.end:Ljava/lang/Integer;\n-   #22 = Fieldref           #48.#121      // org/apache/commons/io/input/CharSequenceReader.idx:I\n-   #23 = Fieldref           #48.#122      // org/apache/commons/io/input/CharSequenceReader.mark:I\n-   #24 = InterfaceMethodref #74.#123      // java/lang/CharSequence.length:()I\n-   #25 = Methodref          #124.#125     // java/lang/Math.min:(II)I\n-   #26 = Methodref          #3.#126       // java/lang/Integer.intValue:()I\n-   #27 = Methodref          #48.#127      // org/apache/commons/io/input/CharSequenceReader.end:()I\n-   #28 = InterfaceMethodref #74.#128      // java/lang/CharSequence.charAt:(I)C\n-   #29 = String             #88           // array\n-   #30 = Methodref          #129.#130     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #31 = Class              #131          // java/lang/IndexOutOfBoundsException\n-   #32 = String             #132          // Array Size=\n-   #33 = String             #133          // , offset=\n-   #34 = String             #134          // , length=\n-   #35 = Methodref          #31.#113      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Class              #135          // java/lang/String\n-   #37 = Methodref          #36.#136      // java/lang/String.getChars:(II[CI)V\n-   #38 = Methodref          #8.#136       // java/lang/StringBuilder.getChars:(II[CI)V\n-   #39 = Class              #137          // java/lang/StringBuffer\n-   #40 = Methodref          #39.#136      // java/lang/StringBuffer.getChars:(II[CI)V\n-   #41 = Methodref          #48.#138      // org/apache/commons/io/input/CharSequenceReader.read:()I\n-   #42 = String             #139          // Number of characters to skip is less than zero:\n-   #43 = Methodref          #8.#140       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #44 = Methodref          #124.#141     // java/lang/Math.min:(JJ)J\n-   #45 = Methodref          #48.#142      // org/apache/commons/io/input/CharSequenceReader.start:()I\n-   #46 = InterfaceMethodref #74.#143      // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-   #47 = InterfaceMethodref #74.#112      // java/lang/CharSequence.toString:()Ljava/lang/String;\n-   #48 = Class              #144          // org/apache/commons/io/input/CharSequenceReader\n-   #49 = Class              #145          // java/io/Reader\n-   #50 = Class              #146          // java/io/Serializable\n-   #51 = Utf8               serialVersionUID\n-   #52 = Utf8               J\n-   #53 = Utf8               ConstantValue\n-   #54 = Long               3724187752191401220l\n-   #56 = Utf8               charSequence\n-   #57 = Utf8               Ljava/lang/CharSequence;\n-   #58 = Utf8               idx\n-   #59 = Utf8               I\n-   #60 = Utf8               mark\n-   #61 = Utf8               start\n-   #62 = Utf8               end\n-   #63 = Utf8               Ljava/lang/Integer;\n-   #64 = Utf8               <init>\n-   #65 = Utf8               (Ljava/lang/CharSequence;)V\n-   #66 = Utf8               Code\n-   #67 = Utf8               LineNumberTable\n-   #68 = Utf8               LocalVariableTable\n-   #69 = Utf8               this\n-   #70 = Utf8               Lorg/apache/commons/io/input/CharSequenceReader;\n-   #71 = Utf8               (Ljava/lang/CharSequence;I)V\n-   #72 = Utf8               (Ljava/lang/CharSequence;II)V\n-   #73 = Utf8               StackMapTable\n-   #74 = Class              #147          // java/lang/CharSequence\n-   #75 = Utf8               ()I\n-   #76 = Utf8               close\n-   #77 = Utf8               ()V\n-   #78 = Utf8               ready\n-   #79 = Utf8               ()Z\n-   #80 = Utf8               (I)V\n-   #81 = Utf8               readAheadLimit\n-   #82 = Utf8               markSupported\n-   #83 = Utf8               read\n-   #84 = Utf8               ([CII)I\n-   #85 = Utf8               count\n-   #86 = Utf8               c\n-   #87 = Utf8               i\n-   #88 = Utf8               array\n-   #89 = Utf8               [C\n-   #90 = Utf8               offset\n-   #91 = Utf8               length\n-   #92 = Utf8               reset\n-   #93 = Utf8               skip\n-   #94 = Utf8               (J)J\n-   #95 = Utf8               n\n-   #96 = Utf8               dest\n-   #97 = Utf8               toString\n-   #98 = Utf8               ()Ljava/lang/String;\n-   #99 = Utf8               subSequence\n-  #100 = Utf8               SourceFile\n-  #101 = Utf8               CharSequenceReader.java\n-  #102 = Utf8               org/apache/commons/io/IOUtils\n-  #103 = NameAndType        #64:#71       // \"<init>\":(Ljava/lang/CharSequence;I)V\n-  #104 = Utf8               java/lang/Integer\n-  #105 = NameAndType        #64:#72       // \"<init>\":(Ljava/lang/CharSequence;II)V\n-  #106 = NameAndType        #64:#77       // \"<init>\":()V\n-  #107 = Utf8               java/lang/IllegalArgumentException\n-  #108 = Utf8               java/lang/StringBuilder\n-  #109 = Utf8               Start index is less than zero:\n-  #110 = NameAndType        #148:#149     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #148:#150     // append:(I)Ljava/lang/StringBuilder;\n-  #112 = NameAndType        #97:#98       // toString:()Ljava/lang/String;\n-  #113 = NameAndType        #64:#151      // \"<init>\":(Ljava/lang/String;)V\n-  #114 = Utf8               End index is less than start\n-  #115 = Utf8               :\n-  #116 = Utf8\n-  #117 = NameAndType        #56:#57       // charSequence:Ljava/lang/CharSequence;\n-  #118 = NameAndType        #61:#59       // start:I\n-  #119 = NameAndType        #152:#153     // valueOf:(I)Ljava/lang/Integer;\n-  #120 = NameAndType        #62:#63       // end:Ljava/lang/Integer;\n-  #121 = NameAndType        #58:#59       // idx:I\n-  #122 = NameAndType        #60:#59       // mark:I\n-  #123 = NameAndType        #91:#75       // length:()I\n-  #124 = Class              #154          // java/lang/Math\n-  #125 = NameAndType        #155:#156     // min:(II)I\n-  #126 = NameAndType        #157:#75      // intValue:()I\n-  #127 = NameAndType        #62:#75       // end:()I\n-  #128 = NameAndType        #158:#159     // charAt:(I)C\n-  #129 = Class              #160          // java/util/Objects\n-  #130 = NameAndType        #161:#162     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #131 = Utf8               java/lang/IndexOutOfBoundsException\n-  #132 = Utf8               Array Size=\n-  #133 = Utf8               , offset=\n-  #134 = Utf8               , length=\n-  #135 = Utf8               java/lang/String\n-  #136 = NameAndType        #163:#164     // getChars:(II[CI)V\n-  #137 = Utf8               java/lang/StringBuffer\n-  #138 = NameAndType        #83:#75       // read:()I\n-  #139 = Utf8               Number of characters to skip is less than zero:\n-  #140 = NameAndType        #148:#165     // append:(J)Ljava/lang/StringBuilder;\n-  #141 = NameAndType        #155:#166     // min:(JJ)J\n-  #142 = NameAndType        #61:#75       // start:()I\n-  #143 = NameAndType        #99:#167      // subSequence:(II)Ljava/lang/CharSequence;\n-  #144 = Utf8               org/apache/commons/io/input/CharSequenceReader\n-  #145 = Utf8               java/io/Reader\n-  #146 = Utf8               java/io/Serializable\n-  #147 = Utf8               java/lang/CharSequence\n-  #148 = Utf8               append\n-  #149 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #150 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #151 = Utf8               (Ljava/lang/String;)V\n-  #152 = Utf8               valueOf\n-  #153 = Utf8               (I)Ljava/lang/Integer;\n-  #154 = Utf8               java/lang/Math\n-  #155 = Utf8               min\n-  #156 = Utf8               (II)I\n-  #157 = Utf8               intValue\n-  #158 = Utf8               charAt\n-  #159 = Utf8               (I)C\n-  #160 = Utf8               java/util/Objects\n-  #161 = Utf8               requireNonNull\n-  #162 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #163 = Utf8               getChars\n-  #164 = Utf8               (II[CI)V\n-  #165 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #166 = Utf8               (JJ)J\n-  #167 = Utf8               (II)Ljava/lang/CharSequence;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;I)V\n+    #4 = Class              #6            // org/apache/commons/io/input/CharSequenceReader\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/lang/CharSequence;I)V\n+    #6 = Utf8               org/apache/commons/io/input/CharSequenceReader\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/lang/CharSequence;I)V\n+    #9 = Class              #10           // java/lang/Integer\n+   #10 = Utf8               java/lang/Integer\n+   #11 = Integer            2147483647\n+   #12 = Methodref          #4.#13        // org/apache/commons/io/input/CharSequenceReader.\"<init>\":(Ljava/lang/CharSequence;II)V\n+   #13 = NameAndType        #7:#14        // \"<init>\":(Ljava/lang/CharSequence;II)V\n+   #14 = Utf8               (Ljava/lang/CharSequence;II)V\n+   #15 = Methodref          #16.#17       // java/io/Reader.\"<init>\":()V\n+   #16 = Class              #18           // java/io/Reader\n+   #17 = NameAndType        #7:#19        // \"<init>\":()V\n+   #18 = Utf8               java/io/Reader\n+   #19 = Utf8               ()V\n+   #20 = Class              #21           // java/lang/IllegalArgumentException\n+   #21 = Utf8               java/lang/IllegalArgumentException\n+   #22 = Class              #23           // java/lang/StringBuilder\n+   #23 = Utf8               java/lang/StringBuilder\n+   #24 = Methodref          #22.#17       // java/lang/StringBuilder.\"<init>\":()V\n+   #25 = String             #26           // Start index is less than zero:\n+   #26 = Utf8               Start index is less than zero:\n+   #27 = Methodref          #22.#28       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #28 = NameAndType        #29:#30       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #29 = Utf8               append\n+   #30 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = Methodref          #22.#32       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #32 = NameAndType        #29:#33       // append:(I)Ljava/lang/StringBuilder;\n+   #33 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #34 = Methodref          #22.#35       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #35 = NameAndType        #36:#37       // toString:()Ljava/lang/String;\n+   #36 = Utf8               toString\n+   #37 = Utf8               ()Ljava/lang/String;\n+   #38 = Methodref          #20.#39       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = NameAndType        #7:#40        // \"<init>\":(Ljava/lang/String;)V\n+   #40 = Utf8               (Ljava/lang/String;)V\n+   #41 = String             #42           // End index is less than start\n+   #42 = Utf8               End index is less than start\n+   #43 = String             #44           // :\n+   #44 = Utf8               :\n+   #45 = String             #46           //\n+   #46 = Utf8\n+   #47 = Fieldref           #4.#48        // org/apache/commons/io/input/CharSequenceReader.charSequence:Ljava/lang/CharSequence;\n+   #48 = NameAndType        #49:#50       // charSequence:Ljava/lang/CharSequence;\n+   #49 = Utf8               charSequence\n+   #50 = Utf8               Ljava/lang/CharSequence;\n+   #51 = Fieldref           #4.#52        // org/apache/commons/io/input/CharSequenceReader.start:I\n+   #52 = NameAndType        #53:#54       // start:I\n+   #53 = Utf8               start\n+   #54 = Utf8               I\n+   #55 = Methodref          #9.#56        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #56 = NameAndType        #57:#58       // valueOf:(I)Ljava/lang/Integer;\n+   #57 = Utf8               valueOf\n+   #58 = Utf8               (I)Ljava/lang/Integer;\n+   #59 = Fieldref           #4.#60        // org/apache/commons/io/input/CharSequenceReader.end:Ljava/lang/Integer;\n+   #60 = NameAndType        #61:#62       // end:Ljava/lang/Integer;\n+   #61 = Utf8               end\n+   #62 = Utf8               Ljava/lang/Integer;\n+   #63 = Fieldref           #4.#64        // org/apache/commons/io/input/CharSequenceReader.idx:I\n+   #64 = NameAndType        #65:#54       // idx:I\n+   #65 = Utf8               idx\n+   #66 = Fieldref           #4.#67        // org/apache/commons/io/input/CharSequenceReader.mark:I\n+   #67 = NameAndType        #68:#54       // mark:I\n+   #68 = Utf8               mark\n+   #69 = InterfaceMethodref #70.#71       // java/lang/CharSequence.length:()I\n+   #70 = Class              #72           // java/lang/CharSequence\n+   #71 = NameAndType        #73:#74       // length:()I\n+   #72 = Utf8               java/lang/CharSequence\n+   #73 = Utf8               length\n+   #74 = Utf8               ()I\n+   #75 = Methodref          #76.#77       // java/lang/Math.min:(II)I\n+   #76 = Class              #78           // java/lang/Math\n+   #77 = NameAndType        #79:#80       // min:(II)I\n+   #78 = Utf8               java/lang/Math\n+   #79 = Utf8               min\n+   #80 = Utf8               (II)I\n+   #81 = Methodref          #9.#82        // java/lang/Integer.intValue:()I\n+   #82 = NameAndType        #83:#74       // intValue:()I\n+   #83 = Utf8               intValue\n+   #84 = Methodref          #4.#85        // org/apache/commons/io/input/CharSequenceReader.end:()I\n+   #85 = NameAndType        #61:#74       // end:()I\n+   #86 = InterfaceMethodref #70.#87       // java/lang/CharSequence.charAt:(I)C\n+   #87 = NameAndType        #88:#89       // charAt:(I)C\n+   #88 = Utf8               charAt\n+   #89 = Utf8               (I)C\n+   #90 = String             #91           // array\n+   #91 = Utf8               array\n+   #92 = Methodref          #93.#94       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #93 = Class              #95           // java/util/Objects\n+   #94 = NameAndType        #96:#97       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #95 = Utf8               java/util/Objects\n+   #96 = Utf8               requireNonNull\n+   #97 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #98 = Class              #99           // java/lang/IndexOutOfBoundsException\n+   #99 = Utf8               java/lang/IndexOutOfBoundsException\n+  #100 = String             #101          // Array Size=\n+  #101 = Utf8               Array Size=\n+  #102 = String             #103          // , offset=\n+  #103 = Utf8               , offset=\n+  #104 = String             #105          // , length=\n+  #105 = Utf8               , length=\n+  #106 = Methodref          #98.#39       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #107 = Class              #108          // java/lang/String\n+  #108 = Utf8               java/lang/String\n+  #109 = Methodref          #107.#110     // java/lang/String.getChars:(II[CI)V\n+  #110 = NameAndType        #111:#112     // getChars:(II[CI)V\n+  #111 = Utf8               getChars\n+  #112 = Utf8               (II[CI)V\n+  #113 = Methodref          #22.#110      // java/lang/StringBuilder.getChars:(II[CI)V\n+  #114 = Class              #115          // java/lang/StringBuffer\n+  #115 = Utf8               java/lang/StringBuffer\n+  #116 = Methodref          #114.#110     // java/lang/StringBuffer.getChars:(II[CI)V\n+  #117 = Methodref          #4.#118       // org/apache/commons/io/input/CharSequenceReader.read:()I\n+  #118 = NameAndType        #119:#74      // read:()I\n+  #119 = Utf8               read\n+  #120 = String             #121          // Number of characters to skip is less than zero:\n+  #121 = Utf8               Number of characters to skip is less than zero:\n+  #122 = Methodref          #22.#123      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #123 = NameAndType        #29:#124      // append:(J)Ljava/lang/StringBuilder;\n+  #124 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #125 = Methodref          #76.#126      // java/lang/Math.min:(JJ)J\n+  #126 = NameAndType        #79:#127      // min:(JJ)J\n+  #127 = Utf8               (JJ)J\n+  #128 = Methodref          #4.#129       // org/apache/commons/io/input/CharSequenceReader.start:()I\n+  #129 = NameAndType        #53:#74       // start:()I\n+  #130 = InterfaceMethodref #70.#131      // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #131 = NameAndType        #132:#133     // subSequence:(II)Ljava/lang/CharSequence;\n+  #132 = Utf8               subSequence\n+  #133 = Utf8               (II)Ljava/lang/CharSequence;\n+  #134 = InterfaceMethodref #70.#35       // java/lang/CharSequence.toString:()Ljava/lang/String;\n+  #135 = Class              #136          // java/io/Serializable\n+  #136 = Utf8               java/io/Serializable\n+  #137 = Utf8               serialVersionUID\n+  #138 = Utf8               J\n+  #139 = Utf8               ConstantValue\n+  #140 = Long               3724187752191401220l\n+  #142 = Utf8               (Ljava/lang/CharSequence;)V\n+  #143 = Utf8               Code\n+  #144 = Utf8               LineNumberTable\n+  #145 = Utf8               LocalVariableTable\n+  #146 = Utf8               this\n+  #147 = Utf8               Lorg/apache/commons/io/input/CharSequenceReader;\n+  #148 = Utf8               StackMapTable\n+  #149 = Utf8               close\n+  #150 = Utf8               ready\n+  #151 = Utf8               ()Z\n+  #152 = Utf8               (I)V\n+  #153 = Utf8               readAheadLimit\n+  #154 = Utf8               markSupported\n+  #155 = Utf8               ([CII)I\n+  #156 = Utf8               count\n+  #157 = Utf8               c\n+  #158 = Utf8               i\n+  #159 = Utf8               [C\n+  #160 = Utf8               offset\n+  #161 = Utf8               reset\n+  #162 = Utf8               skip\n+  #163 = Utf8               (J)J\n+  #164 = Utf8               n\n+  #165 = Utf8               dest\n+  #166 = Utf8               SourceFile\n+  #167 = Utf8               CharSequenceReader.java\n {\n   private static final long serialVersionUID = 3724187752191401220l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 3724187752191401220l\n \n   private final java.lang.CharSequence charSequence;\n@@ -204,15 +204,15 @@\n     descriptor: (Ljava/lang/CharSequence;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #2                  // Method \"<init>\":(Ljava/lang/CharSequence;I)V\n+         3: invokespecial #3                  // Method \"<init>\":(Ljava/lang/CharSequence;I)V\n          6: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -222,16 +222,16 @@\n     descriptor: (Ljava/lang/CharSequence;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: ldc           #4                  // int 2147483647\n-         5: invokespecial #5                  // Method \"<init>\":(Ljava/lang/CharSequence;II)V\n+         3: ldc           #11                 // int 2147483647\n+         5: invokespecial #12                 // Method \"<init>\":(Ljava/lang/CharSequence;II)V\n          8: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -240,68 +240,68 @@\n \n   public org.apache.commons.io.input.CharSequenceReader(java.lang.CharSequence, int, int);\n     descriptor: (Ljava/lang/CharSequence;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #6                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/Reader.\"<init>\":()V\n          4: iload_2\n          5: ifge          35\n-         8: new           #7                  // class java/lang/IllegalArgumentException\n+         8: new           #20                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: new           #8                  // class java/lang/StringBuilder\n+        12: new           #22                 // class java/lang/StringBuilder\n         15: dup\n-        16: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #10                 // String Start index is less than zero:\n-        21: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        19: ldc           #25                 // String Start index is less than zero:\n+        21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: iload_2\n-        25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        28: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        31: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        28: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        31: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: iload_3\n         36: iload_2\n         37: if_icmpge     76\n-        40: new           #7                  // class java/lang/IllegalArgumentException\n+        40: new           #20                 // class java/lang/IllegalArgumentException\n         43: dup\n-        44: new           #8                  // class java/lang/StringBuilder\n+        44: new           #22                 // class java/lang/StringBuilder\n         47: dup\n-        48: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        51: ldc           #15                 // String End index is less than start\n-        53: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        51: ldc           #41                 // String End index is less than start\n+        53: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         56: iload_2\n-        57: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        60: ldc           #16                 // String :\n-        62: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        60: ldc           #43                 // String :\n+        62: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         65: iload_3\n-        66: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        69: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        66: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        69: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n         76: aload_0\n         77: aload_1\n         78: ifnull        85\n         81: aload_1\n         82: goto          87\n-        85: ldc           #17                 // String\n-        87: putfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n+        85: ldc           #45                 // String\n+        87: putfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n         90: aload_0\n         91: iload_2\n-        92: putfield      #19                 // Field start:I\n+        92: putfield      #51                 // Field start:I\n         95: aload_0\n         96: iload_3\n-        97: invokestatic  #20                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       100: putfield      #21                 // Field end:Ljava/lang/Integer;\n+        97: invokestatic  #55                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       100: putfield      #59                 // Field end:Ljava/lang/Integer;\n        103: aload_0\n        104: iload_2\n-       105: putfield      #22                 // Field idx:I\n+       105: putfield      #63                 // Field idx:I\n        108: aload_0\n        109: iload_2\n-       110: putfield      #23                 // Field mark:I\n+       110: putfield      #66                 // Field mark:I\n        113: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 4\n         line 119: 8\n         line 122: 35\n         line 123: 40\n@@ -332,43 +332,43 @@\n \n   private int start();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-         4: invokeinterface #24,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+         4: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n          9: aload_0\n-        10: getfield      #19                 // Field start:I\n-        13: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+        10: getfield      #51                 // Field start:I\n+        13: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n         16: ireturn\n       LineNumberTable:\n         line 143: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n \n   private int end();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-         4: invokeinterface #24,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+         4: invokeinterface #69,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n          9: aload_0\n-        10: getfield      #21                 // Field end:Ljava/lang/Integer;\n+        10: getfield      #59                 // Field end:Ljava/lang/Integer;\n         13: ifnonnull     21\n-        16: ldc           #4                  // int 2147483647\n+        16: ldc           #11                 // int 2147483647\n         18: goto          28\n         21: aload_0\n-        22: getfield      #21                 // Field end:Ljava/lang/Integer;\n-        25: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n-        28: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+        22: getfield      #59                 // Field end:Ljava/lang/Integer;\n+        25: invokevirtual #81                 // Method java/lang/Integer.intValue:()I\n+        28: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n         31: ireturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n       StackMapTable: number_of_entries = 2\n@@ -382,20 +382,20 @@\n   public void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #19                 // Field start:I\n-         5: putfield      #22                 // Field idx:I\n+         2: getfield      #51                 // Field start:I\n+         5: putfield      #63                 // Field idx:I\n          8: aload_0\n          9: aload_0\n-        10: getfield      #19                 // Field start:I\n-        13: putfield      #23                 // Field mark:I\n+        10: getfield      #51                 // Field start:I\n+        13: putfield      #66                 // Field mark:I\n         16: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 8\n         line 166: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -403,17 +403,17 @@\n \n   public boolean ready();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field idx:I\n+         1: getfield      #63                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #27                 // Method end:()I\n+         5: invokespecial #84                 // Method end:()I\n          8: if_icmpge     15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n       LineNumberTable:\n         line 175: 0\n@@ -428,16 +428,16 @@\n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #22                 // Field idx:I\n-         5: putfield      #23                 // Field mark:I\n+         2: getfield      #63                 // Field idx:I\n+         5: putfield      #66                 // Field mark:I\n          8: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -458,30 +458,30 @@\n \n   public int read();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field idx:I\n+         1: getfield      #63                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #27                 // Method end:()I\n+         5: invokespecial #84                 // Method end:()I\n          8: if_icmplt     13\n         11: iconst_m1\n         12: ireturn\n         13: aload_0\n-        14: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n+        14: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n         17: aload_0\n         18: dup\n-        19: getfield      #22                 // Field idx:I\n+        19: getfield      #63                 // Field idx:I\n         22: dup_x1\n         23: iconst_1\n         24: iadd\n-        25: putfield      #22                 // Field idx:I\n-        28: invokeinterface #28,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        25: putfield      #63                 // Field idx:I\n+        28: invokeinterface #86,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         33: ireturn\n       LineNumberTable:\n         line 206: 0\n         line 207: 11\n         line 209: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -491,160 +491,160 @@\n \n   public int read(char[], int, int);\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_0\n-         1: getfield      #22                 // Field idx:I\n+         1: getfield      #63                 // Field idx:I\n          4: aload_0\n-         5: invokespecial #27                 // Method end:()I\n+         5: invokespecial #84                 // Method end:()I\n          8: if_icmplt     13\n         11: iconst_m1\n         12: ireturn\n         13: aload_1\n-        14: ldc           #29                 // String array\n-        16: invokestatic  #30                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        14: ldc           #90                 // String array\n+        16: invokestatic  #92                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         19: pop\n         20: iload_3\n         21: iflt          36\n         24: iload_2\n         25: iflt          36\n         28: iload_2\n         29: iload_3\n         30: iadd\n         31: aload_1\n         32: arraylength\n         33: if_icmple     82\n-        36: new           #31                 // class java/lang/IndexOutOfBoundsException\n+        36: new           #98                 // class java/lang/IndexOutOfBoundsException\n         39: dup\n-        40: new           #8                  // class java/lang/StringBuilder\n+        40: new           #22                 // class java/lang/StringBuilder\n         43: dup\n-        44: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        47: ldc           #32                 // String Array Size=\n-        49: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        47: ldc           #100                // String Array Size=\n+        49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         52: aload_1\n         53: arraylength\n-        54: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        57: ldc           #33                 // String , offset=\n-        59: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        57: ldc           #102                // String , offset=\n+        59: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         62: iload_2\n-        63: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        66: ldc           #34                 // String , length=\n-        68: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        63: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        66: ldc           #104                // String , length=\n+        68: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         71: iload_3\n-        72: invokevirtual #12                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        75: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        78: invokespecial #35                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        72: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        75: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        78: invokespecial #106                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         81: athrow\n         82: aload_0\n-        83: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-        86: instanceof    #36                 // class java/lang/String\n+        83: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+        86: instanceof    #107                // class java/lang/String\n         89: ifeq          144\n         92: iload_3\n         93: aload_0\n-        94: invokespecial #27                 // Method end:()I\n+        94: invokespecial #84                 // Method end:()I\n         97: aload_0\n-        98: getfield      #22                 // Field idx:I\n+        98: getfield      #63                 // Field idx:I\n        101: isub\n-       102: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+       102: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n        105: istore        4\n        107: aload_0\n-       108: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-       111: checkcast     #36                 // class java/lang/String\n+       108: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+       111: checkcast     #107                // class java/lang/String\n        114: aload_0\n-       115: getfield      #22                 // Field idx:I\n+       115: getfield      #63                 // Field idx:I\n        118: aload_0\n-       119: getfield      #22                 // Field idx:I\n+       119: getfield      #63                 // Field idx:I\n        122: iload         4\n        124: iadd\n        125: aload_1\n        126: iload_2\n-       127: invokevirtual #37                 // Method java/lang/String.getChars:(II[CI)V\n+       127: invokevirtual #109                // Method java/lang/String.getChars:(II[CI)V\n        130: aload_0\n        131: dup\n-       132: getfield      #22                 // Field idx:I\n+       132: getfield      #63                 // Field idx:I\n        135: iload         4\n        137: iadd\n-       138: putfield      #22                 // Field idx:I\n+       138: putfield      #63                 // Field idx:I\n        141: iload         4\n        143: ireturn\n        144: aload_0\n-       145: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-       148: instanceof    #8                  // class java/lang/StringBuilder\n+       145: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+       148: instanceof    #22                 // class java/lang/StringBuilder\n        151: ifeq          206\n        154: iload_3\n        155: aload_0\n-       156: invokespecial #27                 // Method end:()I\n+       156: invokespecial #84                 // Method end:()I\n        159: aload_0\n-       160: getfield      #22                 // Field idx:I\n+       160: getfield      #63                 // Field idx:I\n        163: isub\n-       164: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+       164: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n        167: istore        4\n        169: aload_0\n-       170: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-       173: checkcast     #8                  // class java/lang/StringBuilder\n+       170: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+       173: checkcast     #22                 // class java/lang/StringBuilder\n        176: aload_0\n-       177: getfield      #22                 // Field idx:I\n+       177: getfield      #63                 // Field idx:I\n        180: aload_0\n-       181: getfield      #22                 // Field idx:I\n+       181: getfield      #63                 // Field idx:I\n        184: iload         4\n        186: iadd\n        187: aload_1\n        188: iload_2\n-       189: invokevirtual #38                 // Method java/lang/StringBuilder.getChars:(II[CI)V\n+       189: invokevirtual #113                // Method java/lang/StringBuilder.getChars:(II[CI)V\n        192: aload_0\n        193: dup\n-       194: getfield      #22                 // Field idx:I\n+       194: getfield      #63                 // Field idx:I\n        197: iload         4\n        199: iadd\n-       200: putfield      #22                 // Field idx:I\n+       200: putfield      #63                 // Field idx:I\n        203: iload         4\n        205: ireturn\n        206: aload_0\n-       207: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-       210: instanceof    #39                 // class java/lang/StringBuffer\n+       207: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+       210: instanceof    #114                // class java/lang/StringBuffer\n        213: ifeq          268\n        216: iload_3\n        217: aload_0\n-       218: invokespecial #27                 // Method end:()I\n+       218: invokespecial #84                 // Method end:()I\n        221: aload_0\n-       222: getfield      #22                 // Field idx:I\n+       222: getfield      #63                 // Field idx:I\n        225: isub\n-       226: invokestatic  #25                 // Method java/lang/Math.min:(II)I\n+       226: invokestatic  #75                 // Method java/lang/Math.min:(II)I\n        229: istore        4\n        231: aload_0\n-       232: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n-       235: checkcast     #39                 // class java/lang/StringBuffer\n+       232: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n+       235: checkcast     #114                // class java/lang/StringBuffer\n        238: aload_0\n-       239: getfield      #22                 // Field idx:I\n+       239: getfield      #63                 // Field idx:I\n        242: aload_0\n-       243: getfield      #22                 // Field idx:I\n+       243: getfield      #63                 // Field idx:I\n        246: iload         4\n        248: iadd\n        249: aload_1\n        250: iload_2\n-       251: invokevirtual #40                 // Method java/lang/StringBuffer.getChars:(II[CI)V\n+       251: invokevirtual #116                // Method java/lang/StringBuffer.getChars:(II[CI)V\n        254: aload_0\n        255: dup\n-       256: getfield      #22                 // Field idx:I\n+       256: getfield      #63                 // Field idx:I\n        259: iload         4\n        261: iadd\n-       262: putfield      #22                 // Field idx:I\n+       262: putfield      #63                 // Field idx:I\n        265: iload         4\n        267: ireturn\n        268: iconst_0\n        269: istore        4\n        271: iconst_0\n        272: istore        5\n        274: iload         5\n        276: iload_3\n        277: if_icmpge     313\n        280: aload_0\n-       281: invokevirtual #41                 // Method read:()I\n+       281: invokevirtual #117                // Method read:()I\n        284: istore        6\n        286: iload         6\n        288: iconst_m1\n        289: if_icmpne     295\n        292: iload         4\n        294: ireturn\n        295: aload_1\n@@ -720,16 +720,16 @@\n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #23                 // Field mark:I\n-         5: putfield      #22                 // Field idx:I\n+         2: getfield      #66                 // Field mark:I\n+         5: putfield      #63                 // Field idx:I\n          8: return\n       LineNumberTable:\n         line 269: 0\n         line 270: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n@@ -739,52 +739,52 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          33\n-         6: new           #7                  // class java/lang/IllegalArgumentException\n+         6: new           #20                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: new           #8                  // class java/lang/StringBuilder\n+        10: new           #22                 // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #42                 // String Number of characters to skip is less than zero:\n-        19: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        17: ldc           #120                // String Number of characters to skip is less than zero:\n+        19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         22: lload_1\n-        23: invokevirtual #43                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #14                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        23: invokevirtual #122                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        26: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: aload_0\n-        34: getfield      #22                 // Field idx:I\n+        34: getfield      #63                 // Field idx:I\n         37: aload_0\n-        38: invokespecial #27                 // Method end:()I\n+        38: invokespecial #84                 // Method end:()I\n         41: if_icmplt     46\n         44: lconst_0\n         45: lreturn\n         46: aload_0\n-        47: invokespecial #27                 // Method end:()I\n+        47: invokespecial #84                 // Method end:()I\n         50: i2l\n         51: aload_0\n-        52: getfield      #22                 // Field idx:I\n+        52: getfield      #63                 // Field idx:I\n         55: i2l\n         56: lload_1\n         57: ladd\n-        58: invokestatic  #44                 // Method java/lang/Math.min:(JJ)J\n+        58: invokestatic  #125                // Method java/lang/Math.min:(JJ)J\n         61: l2i\n         62: istore_3\n         63: iload_3\n         64: aload_0\n-        65: getfield      #22                 // Field idx:I\n+        65: getfield      #63                 // Field idx:I\n         68: isub\n         69: istore        4\n         71: aload_0\n         72: iload_3\n-        73: putfield      #22                 // Field idx:I\n+        73: putfield      #63                 // Field idx:I\n         76: iload         4\n         78: i2l\n         79: lreturn\n       LineNumberTable:\n         line 280: 0\n         line 281: 6\n         line 284: 33\n@@ -805,23 +805,23 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field charSequence:Ljava/lang/CharSequence;\n+         1: getfield      #47                 // Field charSequence:Ljava/lang/CharSequence;\n          4: aload_0\n-         5: invokespecial #45                 // Method start:()I\n+         5: invokespecial #128                // Method start:()I\n          8: aload_0\n-         9: invokespecial #27                 // Method end:()I\n-        12: invokeinterface #46,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+         9: invokespecial #84                 // Method end:()I\n+        12: invokeinterface #130,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         17: astore_1\n         18: aload_1\n-        19: invokeinterface #47,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n+        19: invokeinterface #134,  1          // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 301: 0\n         line 302: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/io/input/CharSequenceReader;\n"}]}
