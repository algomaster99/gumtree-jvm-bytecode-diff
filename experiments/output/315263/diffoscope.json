{"diffoscope-json-version": 1, "source1": "first/FilenameUtils.class", "source2": "second/FilenameUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,451 +1,451 @@\n-  SHA-256 checksum 94915849ce646a836ea93d1b213cd37e91d355c0a129615b4e15fa80b5000a7f\n+  SHA-256 checksum b095364d909ca2ac4228bb9edd1ba11aec746b3cc95715f3f107a8a9460d24c1\n   Compiled from \"FilenameUtils.java\"\n public class org.apache.commons.io.FilenameUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/io/FilenameUtils\n-  super_class: #120                       // java/lang/Object\n+  this_class: #8                          // org/apache/commons/io/FilenameUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 16, methods: 46, attributes: 1\n Constant pool:\n-    #1 = Methodref          #120.#223     // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #3.#224       // org/apache/commons/io/FilenameUtils.SYSTEM_SEPARATOR:C\n-    #3 = Class              #225          // org/apache/commons/io/FilenameUtils\n-    #4 = Methodref          #3.#226       // org/apache/commons/io/FilenameUtils.doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n-    #5 = Methodref          #3.#227       // org/apache/commons/io/FilenameUtils.failIfNullBytePresent:(Ljava/lang/String;)V\n-    #6 = Methodref          #12.#228      // java/lang/String.length:()I\n-    #7 = Methodref          #3.#229       // org/apache/commons/io/FilenameUtils.getPrefixLength:(Ljava/lang/String;)I\n-    #8 = Methodref          #12.#230      // java/lang/String.getChars:(II[CI)V\n-    #9 = Fieldref           #3.#231       // org/apache/commons/io/FilenameUtils.OTHER_SEPARATOR:C\n-   #10 = Methodref          #232.#233     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #11 = String             #234          //\n-   #12 = Class              #235          // java/lang/String\n-   #13 = Methodref          #12.#236      // java/lang/String.\"<init>\":([CII)V\n-   #14 = Methodref          #3.#237       // org/apache/commons/io/FilenameUtils.normalize:(Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #12.#238      // java/lang/String.charAt:(I)C\n-   #16 = Methodref          #3.#239       // org/apache/commons/io/FilenameUtils.isSeparator:(C)Z\n-   #17 = Class              #240          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#223      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = Methodref          #17.#241      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #17.#242      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = Methodref          #17.#243      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #22 = Class              #244          // java/lang/IllegalArgumentException\n-   #23 = String             #245          // Directory must not be null\n-   #24 = Methodref          #22.#246      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = Fieldref           #209.#247     // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #26 = Methodref          #209.#248     // org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #27 = Methodref          #209.#249     // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #28 = Methodref          #12.#250      // java/lang/String.indexOf:(I)I\n-   #29 = Methodref          #12.#251      // java/lang/String.replace:(CC)Ljava/lang/String;\n-   #30 = Methodref          #3.#252       // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #31 = Methodref          #3.#253       // org/apache/commons/io/FilenameUtils.separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = Methodref          #3.#254       // org/apache/commons/io/FilenameUtils.separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n-   #33 = Methodref          #12.#255      // java/lang/String.indexOf:(II)I\n-   #34 = Methodref          #256.#257     // java/lang/Math.min:(II)I\n-   #35 = Methodref          #258.#259     // java/lang/Character.toUpperCase:(C)C\n-   #36 = Methodref          #12.#260      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #37 = Methodref          #3.#261       // org/apache/commons/io/FilenameUtils.isValidHostName:(Ljava/lang/String;)Z\n-   #38 = Methodref          #12.#262      // java/lang/String.lastIndexOf:(I)I\n-   #39 = Methodref          #256.#263     // java/lang/Math.max:(II)I\n-   #40 = Methodref          #3.#264       // org/apache/commons/io/FilenameUtils.getAdsCriticalOffset:(Ljava/lang/String;)I\n-   #41 = String             #265          // NTFS ADS separator (\\':\\') in file name is forbidden.\n-   #42 = Methodref          #3.#266       // org/apache/commons/io/FilenameUtils.indexOfLastSeparator:(Ljava/lang/String;)I\n-   #43 = Methodref          #3.#267       // org/apache/commons/io/FilenameUtils.doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n-   #44 = Methodref          #3.#268       // org/apache/commons/io/FilenameUtils.doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #45 = Methodref          #3.#269       // org/apache/commons/io/FilenameUtils.getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n-   #46 = Methodref          #12.#270      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = String             #271          // Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-   #48 = Methodref          #3.#272       // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n-   #49 = Methodref          #3.#273       // org/apache/commons/io/FilenameUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #50 = Methodref          #3.#274       // org/apache/commons/io/FilenameUtils.indexOfExtension:(Ljava/lang/String;)I\n-   #51 = Fieldref           #209.#275     // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #52 = Methodref          #3.#276       // org/apache/commons/io/FilenameUtils.equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-   #53 = String             #277          // Error normalizing one or both of the file names\n-   #54 = Methodref          #278.#279     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #55 = Methodref          #12.#280      // java/lang/String.isEmpty:()Z\n-   #56 = Methodref          #3.#281       // org/apache/commons/io/FilenameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #57 = Methodref          #12.#282      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #58 = InterfaceMethodref #283.#280     // java/util/Collection.isEmpty:()Z\n-   #59 = InterfaceMethodref #283.#284     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #60 = InterfaceMethodref #203.#285     // java/util/Iterator.hasNext:()Z\n-   #61 = InterfaceMethodref #203.#286     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #62 = Methodref          #3.#287       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-   #63 = Methodref          #3.#288       // org/apache/commons/io/FilenameUtils.splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n-   #64 = Class              #289          // java/util/ArrayDeque\n-   #65 = Methodref          #64.#290      // java/util/ArrayDeque.\"<init>\":(I)V\n-   #66 = InterfaceMethodref #210.#280     // java/util/Deque.isEmpty:()Z\n-   #67 = InterfaceMethodref #210.#291     // java/util/Deque.pop:()Ljava/lang/Object;\n-   #68 = Class              #292          // \"[I\"\n-   #69 = String             #293          // ?\n-   #70 = String             #294          // *\n-   #71 = Methodref          #209.#295     // org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n-   #72 = InterfaceMethodref #210.#296     // java/util/Deque.push:(Ljava/lang/Object;)V\n-   #73 = Methodref          #209.#297     // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-   #74 = Methodref          #12.#298      // java/lang/String.toCharArray:()[C\n-   #75 = Class              #299          // java/util/ArrayList\n-   #76 = Methodref          #75.#223      // java/util/ArrayList.\"<init>\":()V\n-   #77 = Methodref          #17.#228      // java/lang/StringBuilder.length:()I\n-   #78 = Methodref          #75.#300      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #79 = Methodref          #17.#301      // java/lang/StringBuilder.setLength:(I)V\n-   #80 = Fieldref           #3.#302       // org/apache/commons/io/FilenameUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #81 = Methodref          #75.#303      // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #82 = Class              #122          // \"[Ljava/lang/String;\"\n-   #83 = Methodref          #3.#304       // org/apache/commons/io/FilenameUtils.isIPv6Address:(Ljava/lang/String;)Z\n-   #84 = Methodref          #3.#305       // org/apache/commons/io/FilenameUtils.isRFC3986HostName:(Ljava/lang/String;)Z\n-   #85 = Fieldref           #3.#306       // org/apache/commons/io/FilenameUtils.IPV4_PATTERN:Ljava/util/regex/Pattern;\n-   #86 = Methodref          #307.#308     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #87 = Methodref          #216.#309     // java/util/regex/Matcher.matches:()Z\n-   #88 = Methodref          #216.#310     // java/util/regex/Matcher.groupCount:()I\n-   #89 = Methodref          #216.#311     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #90 = Methodref          #312.#313     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #91 = String             #314          // 0\n-   #92 = Methodref          #12.#315      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #93 = String             #316          // ::\n-   #94 = Methodref          #12.#317      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #95 = Methodref          #12.#318      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #96 = Methodref          #12.#319      // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-   #97 = String             #320          // :\n-   #98 = Methodref          #12.#321      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #99 = Methodref          #12.#322      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #100 = Methodref          #323.#324     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #101 = Methodref          #75.#325      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-  #102 = InterfaceMethodref #218.#300     // java/util/List.add:(Ljava/lang/Object;)Z\n-  #103 = InterfaceMethodref #218.#280     // java/util/List.isEmpty:()Z\n-  #104 = InterfaceMethodref #218.#326     // java/util/List.remove:(I)Ljava/lang/Object;\n-  #105 = InterfaceMethodref #218.#303     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #106 = String             #327          // .\n-  #107 = Methodref          #3.#328       // org/apache/commons/io/FilenameUtils.isIPv4Address:(Ljava/lang/String;)Z\n-  #108 = Methodref          #312.#329     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-  #109 = Class              #330          // java/lang/NumberFormatException\n-  #110 = Integer            65535\n-  #111 = String             #331          // \\\\.\n-  #112 = Methodref          #12.#332      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #113 = Fieldref           #3.#333       // org/apache/commons/io/FilenameUtils.REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-  #114 = Methodref          #258.#334     // java/lang/Character.toString:(C)Ljava/lang/String;\n-  #115 = Fieldref           #3.#335       // org/apache/commons/io/FilenameUtils.EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-  #116 = Fieldref           #336.#337     // java/io/File.separatorChar:C\n-  #117 = String             #338          // ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-  #118 = Methodref          #307.#339     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #119 = String             #340          // ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-  #120 = Class              #341          // java/lang/Object\n-  #121 = Utf8               EMPTY_STRING_ARRAY\n-  #122 = Utf8               [Ljava/lang/String;\n-  #123 = Utf8               EMPTY_STRING\n-  #124 = Utf8               Ljava/lang/String;\n-  #125 = Utf8               ConstantValue\n-  #126 = Utf8               NOT_FOUND\n-  #127 = Utf8               I\n-  #128 = Integer            -1\n-  #129 = Utf8               EXTENSION_SEPARATOR\n-  #130 = Utf8               C\n-  #131 = Integer            46\n-  #132 = Utf8               EXTENSION_SEPARATOR_STR\n-  #133 = Utf8               UNIX_SEPARATOR\n-  #134 = Integer            47\n-  #135 = Utf8               WINDOWS_SEPARATOR\n-  #136 = Integer            92\n-  #137 = Utf8               SYSTEM_SEPARATOR\n-  #138 = Utf8               OTHER_SEPARATOR\n-  #139 = Utf8               IPV4_PATTERN\n-  #140 = Utf8               Ljava/util/regex/Pattern;\n-  #141 = Utf8               IPV4_MAX_OCTET_VALUE\n-  #142 = Integer            255\n-  #143 = Utf8               IPV6_MAX_HEX_GROUPS\n-  #144 = Integer            8\n-  #145 = Utf8               IPV6_MAX_HEX_DIGITS_PER_GROUP\n-  #146 = Integer            4\n-  #147 = Utf8               MAX_UNSIGNED_SHORT\n-  #148 = Utf8               BASE_16\n-  #149 = Integer            16\n-  #150 = Utf8               REG_NAME_PART_PATTERN\n-  #151 = Utf8               <init>\n-  #152 = Utf8               ()V\n-  #153 = Utf8               Code\n-  #154 = Utf8               LineNumberTable\n-  #155 = Utf8               isSystemWindows\n-  #156 = Utf8               ()Z\n-  #157 = Utf8               StackMapTable\n-  #158 = Utf8               isSeparator\n-  #159 = Utf8               (C)Z\n-  #160 = Utf8               normalize\n-  #161 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #162 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #163 = Utf8               normalizeNoEndSeparator\n-  #164 = Utf8               doNormalize\n-  #165 = Utf8               (Ljava/lang/String;CZ)Ljava/lang/String;\n-  #166 = Class              #342          // \"[C\"\n-  #167 = Utf8               concat\n-  #168 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #169 = Utf8               directoryContains\n-  #170 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #171 = Utf8               Exceptions\n-  #172 = Class              #343          // java/io/IOException\n-  #173 = Utf8               separatorsToUnix\n-  #174 = Utf8               separatorsToWindows\n-  #175 = Utf8               separatorsToSystem\n-  #176 = Utf8               getPrefixLength\n-  #177 = Utf8               (Ljava/lang/String;)I\n-  #178 = Utf8               indexOfLastSeparator\n-  #179 = Utf8               indexOfExtension\n-  #180 = Utf8               getPrefix\n-  #181 = Utf8               getPath\n-  #182 = Utf8               getPathNoEndSeparator\n-  #183 = Utf8               doGetPath\n-  #184 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #185 = Utf8               getFullPath\n-  #186 = Utf8               getFullPathNoEndSeparator\n-  #187 = Utf8               doGetFullPath\n-  #188 = Utf8               getName\n-  #189 = Utf8               failIfNullBytePresent\n-  #190 = Utf8               (Ljava/lang/String;)V\n-  #191 = Utf8               getBaseName\n-  #192 = Utf8               getExtension\n-  #193 = Utf8               getAdsCriticalOffset\n-  #194 = Utf8               removeExtension\n-  #195 = Utf8               equals\n-  #196 = Utf8               equalsOnSystem\n-  #197 = Utf8               equalsNormalized\n-  #198 = Utf8               equalsNormalizedOnSystem\n-  #199 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-  #200 = Utf8               isExtension\n-  #201 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Z\n-  #202 = Utf8               (Ljava/lang/String;Ljava/util/Collection;)Z\n-  #203 = Class              #344          // java/util/Iterator\n-  #204 = Utf8               Signature\n-  #205 = Utf8               (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n-  #206 = Utf8               wildcardMatch\n-  #207 = Utf8               wildcardMatchOnSystem\n-  #208 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #209 = Class              #345          // org/apache/commons/io/IOCase\n-  #210 = Class              #346          // java/util/Deque\n-  #211 = Utf8               splitOnTokens\n-  #212 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #213 = Utf8               isValidHostName\n-  #214 = Utf8               (Ljava/lang/String;)Z\n-  #215 = Utf8               isIPv4Address\n-  #216 = Class              #347          // java/util/regex/Matcher\n-  #217 = Utf8               isIPv6Address\n-  #218 = Class              #348          // java/util/List\n-  #219 = Utf8               isRFC3986HostName\n-  #220 = Utf8               <clinit>\n-  #221 = Utf8               SourceFile\n-  #222 = Utf8               FilenameUtils.java\n-  #223 = NameAndType        #151:#152     // \"<init>\":()V\n-  #224 = NameAndType        #137:#130     // SYSTEM_SEPARATOR:C\n-  #225 = Utf8               org/apache/commons/io/FilenameUtils\n-  #226 = NameAndType        #164:#165     // doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n-  #227 = NameAndType        #189:#190     // failIfNullBytePresent:(Ljava/lang/String;)V\n-  #228 = NameAndType        #349:#350     // length:()I\n-  #229 = NameAndType        #176:#177     // getPrefixLength:(Ljava/lang/String;)I\n-  #230 = NameAndType        #351:#352     // getChars:(II[CI)V\n-  #231 = NameAndType        #138:#130     // OTHER_SEPARATOR:C\n-  #232 = Class              #353          // java/lang/System\n-  #233 = NameAndType        #354:#355     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #234 = Utf8\n-  #235 = Utf8               java/lang/String\n-  #236 = NameAndType        #151:#356     // \"<init>\":([CII)V\n-  #237 = NameAndType        #160:#161     // normalize:(Ljava/lang/String;)Ljava/lang/String;\n-  #238 = NameAndType        #357:#358     // charAt:(I)C\n-  #239 = NameAndType        #158:#159     // isSeparator:(C)Z\n-  #240 = Utf8               java/lang/StringBuilder\n-  #241 = NameAndType        #359:#360     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #242 = NameAndType        #361:#362     // toString:()Ljava/lang/String;\n-  #243 = NameAndType        #359:#363     // append:(C)Ljava/lang/StringBuilder;\n-  #244 = Utf8               java/lang/IllegalArgumentException\n-  #245 = Utf8               Directory must not be null\n-  #246 = NameAndType        #151:#190     // \"<init>\":(Ljava/lang/String;)V\n-  #247 = NameAndType        #364:#365     // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #248 = NameAndType        #366:#170     // checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #249 = NameAndType        #367:#170     // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #250 = NameAndType        #368:#369     // indexOf:(I)I\n-  #251 = NameAndType        #370:#371     // replace:(CC)Ljava/lang/String;\n-  #252 = NameAndType        #155:#156     // isSystemWindows:()Z\n-  #253 = NameAndType        #174:#161     // separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n-  #254 = NameAndType        #173:#161     // separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n-  #255 = NameAndType        #368:#372     // indexOf:(II)I\n-  #256 = Class              #373          // java/lang/Math\n-  #257 = NameAndType        #374:#372     // min:(II)I\n-  #258 = Class              #375          // java/lang/Character\n-  #259 = NameAndType        #376:#377     // toUpperCase:(C)C\n-  #260 = NameAndType        #378:#379     // substring:(II)Ljava/lang/String;\n-  #261 = NameAndType        #213:#214     // isValidHostName:(Ljava/lang/String;)Z\n-  #262 = NameAndType        #380:#369     // lastIndexOf:(I)I\n-  #263 = NameAndType        #381:#372     // max:(II)I\n-  #264 = NameAndType        #193:#177     // getAdsCriticalOffset:(Ljava/lang/String;)I\n-  #265 = Utf8               NTFS ADS separator (\\':\\') in file name is forbidden.\n-  #266 = NameAndType        #178:#177     // indexOfLastSeparator:(Ljava/lang/String;)I\n-  #267 = NameAndType        #183:#184     // doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n-  #268 = NameAndType        #187:#162     // doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #269 = NameAndType        #180:#161     // getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n-  #270 = NameAndType        #378:#382     // substring:(I)Ljava/lang/String;\n-  #271 = Utf8               Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-  #272 = NameAndType        #188:#161     // getName:(Ljava/lang/String;)Ljava/lang/String;\n-  #273 = NameAndType        #194:#161     // removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #274 = NameAndType        #179:#177     // indexOfExtension:(Ljava/lang/String;)I\n-  #275 = NameAndType        #383:#365     // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #276 = NameAndType        #195:#199     // equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-  #277 = Utf8               Error normalizing one or both of the file names\n-  #278 = Class              #384          // java/util/Objects\n-  #279 = NameAndType        #385:#386     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #280 = NameAndType        #387:#156     // isEmpty:()Z\n-  #281 = NameAndType        #192:#161     // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #282 = NameAndType        #195:#388     // equals:(Ljava/lang/Object;)Z\n-  #283 = Class              #389          // java/util/Collection\n-  #284 = NameAndType        #390:#391     // iterator:()Ljava/util/Iterator;\n-  #285 = NameAndType        #392:#156     // hasNext:()Z\n-  #286 = NameAndType        #393:#394     // next:()Ljava/lang/Object;\n-  #287 = NameAndType        #206:#208     // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #288 = NameAndType        #211:#212     // splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n-  #289 = Utf8               java/util/ArrayDeque\n-  #290 = NameAndType        #151:#395     // \"<init>\":(I)V\n-  #291 = NameAndType        #396:#394     // pop:()Ljava/lang/Object;\n-  #292 = Utf8               [I\n-  #293 = Utf8               ?\n-  #294 = Utf8               *\n-  #295 = NameAndType        #397:#398     // checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n-  #296 = NameAndType        #399:#400     // push:(Ljava/lang/Object;)V\n-  #297 = NameAndType        #401:#402     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #298 = NameAndType        #403:#404     // toCharArray:()[C\n-  #299 = Utf8               java/util/ArrayList\n-  #300 = NameAndType        #405:#388     // add:(Ljava/lang/Object;)Z\n-  #301 = NameAndType        #406:#395     // setLength:(I)V\n-  #302 = NameAndType        #121:#122     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #303 = NameAndType        #407:#408     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #304 = NameAndType        #217:#214     // isIPv6Address:(Ljava/lang/String;)Z\n-  #305 = NameAndType        #219:#214     // isRFC3986HostName:(Ljava/lang/String;)Z\n-  #306 = NameAndType        #139:#140     // IPV4_PATTERN:Ljava/util/regex/Pattern;\n-  #307 = Class              #409          // java/util/regex/Pattern\n-  #308 = NameAndType        #410:#411     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #309 = NameAndType        #412:#156     // matches:()Z\n-  #310 = NameAndType        #413:#350     // groupCount:()I\n-  #311 = NameAndType        #414:#382     // group:(I)Ljava/lang/String;\n-  #312 = Class              #415          // java/lang/Integer\n-  #313 = NameAndType        #416:#177     // parseInt:(Ljava/lang/String;)I\n-  #314 = Utf8               0\n-  #315 = NameAndType        #417:#214     // startsWith:(Ljava/lang/String;)Z\n-  #316 = Utf8               ::\n-  #317 = NameAndType        #418:#419     // contains:(Ljava/lang/CharSequence;)Z\n-  #318 = NameAndType        #368:#177     // indexOf:(Ljava/lang/String;)I\n-  #319 = NameAndType        #380:#177     // lastIndexOf:(Ljava/lang/String;)I\n-  #320 = Utf8               :\n-  #321 = NameAndType        #420:#214     // endsWith:(Ljava/lang/String;)Z\n-  #322 = NameAndType        #421:#212     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #323 = Class              #422          // java/util/Arrays\n-  #324 = NameAndType        #423:#424     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #325 = NameAndType        #151:#425     // \"<init>\":(Ljava/util/Collection;)V\n-  #326 = NameAndType        #426:#427     // remove:(I)Ljava/lang/Object;\n-  #327 = Utf8               .\n-  #328 = NameAndType        #215:#214     // isIPv4Address:(Ljava/lang/String;)Z\n-  #329 = NameAndType        #416:#428     // parseInt:(Ljava/lang/String;I)I\n-  #330 = Utf8               java/lang/NumberFormatException\n-  #331 = Utf8               \\\\.\n-  #332 = NameAndType        #421:#429     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #333 = NameAndType        #150:#140     // REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-  #334 = NameAndType        #361:#430     // toString:(C)Ljava/lang/String;\n-  #335 = NameAndType        #132:#124     // EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-  #336 = Class              #431          // java/io/File\n-  #337 = NameAndType        #432:#130     // separatorChar:C\n-  #338 = Utf8               ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-  #339 = NameAndType        #433:#434     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #340 = Utf8               ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-  #341 = Utf8               java/lang/Object\n-  #342 = Utf8               [C\n-  #343 = Utf8               java/io/IOException\n-  #344 = Utf8               java/util/Iterator\n-  #345 = Utf8               org/apache/commons/io/IOCase\n-  #346 = Utf8               java/util/Deque\n-  #347 = Utf8               java/util/regex/Matcher\n-  #348 = Utf8               java/util/List\n-  #349 = Utf8               length\n-  #350 = Utf8               ()I\n-  #351 = Utf8               getChars\n-  #352 = Utf8               (II[CI)V\n-  #353 = Utf8               java/lang/System\n-  #354 = Utf8               arraycopy\n-  #355 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #356 = Utf8               ([CII)V\n-  #357 = Utf8               charAt\n-  #358 = Utf8               (I)C\n-  #359 = Utf8               append\n-  #360 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #361 = Utf8               toString\n-  #362 = Utf8               ()Ljava/lang/String;\n-  #363 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #364 = Utf8               SYSTEM\n-  #365 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #366 = Utf8               checkEquals\n-  #367 = Utf8               checkStartsWith\n-  #368 = Utf8               indexOf\n-  #369 = Utf8               (I)I\n-  #370 = Utf8               replace\n-  #371 = Utf8               (CC)Ljava/lang/String;\n-  #372 = Utf8               (II)I\n-  #373 = Utf8               java/lang/Math\n-  #374 = Utf8               min\n-  #375 = Utf8               java/lang/Character\n-  #376 = Utf8               toUpperCase\n-  #377 = Utf8               (C)C\n-  #378 = Utf8               substring\n-  #379 = Utf8               (II)Ljava/lang/String;\n-  #380 = Utf8               lastIndexOf\n-  #381 = Utf8               max\n-  #382 = Utf8               (I)Ljava/lang/String;\n-  #383 = Utf8               SENSITIVE\n-  #384 = Utf8               java/util/Objects\n-  #385 = Utf8               requireNonNull\n-  #386 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #387 = Utf8               isEmpty\n-  #388 = Utf8               (Ljava/lang/Object;)Z\n-  #389 = Utf8               java/util/Collection\n-  #390 = Utf8               iterator\n-  #391 = Utf8               ()Ljava/util/Iterator;\n-  #392 = Utf8               hasNext\n-  #393 = Utf8               next\n-  #394 = Utf8               ()Ljava/lang/Object;\n-  #395 = Utf8               (I)V\n-  #396 = Utf8               pop\n-  #397 = Utf8               checkIndexOf\n-  #398 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-  #399 = Utf8               push\n-  #400 = Utf8               (Ljava/lang/Object;)V\n-  #401 = Utf8               checkRegionMatches\n-  #402 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-  #403 = Utf8               toCharArray\n-  #404 = Utf8               ()[C\n-  #405 = Utf8               add\n-  #406 = Utf8               setLength\n-  #407 = Utf8               toArray\n-  #408 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #409 = Utf8               java/util/regex/Pattern\n-  #410 = Utf8               matcher\n-  #411 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #412 = Utf8               matches\n-  #413 = Utf8               groupCount\n-  #414 = Utf8               group\n-  #415 = Utf8               java/lang/Integer\n-  #416 = Utf8               parseInt\n-  #417 = Utf8               startsWith\n-  #418 = Utf8               contains\n-  #419 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #420 = Utf8               endsWith\n-  #421 = Utf8               split\n-  #422 = Utf8               java/util/Arrays\n-  #423 = Utf8               asList\n-  #424 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #425 = Utf8               (Ljava/util/Collection;)V\n-  #426 = Utf8               remove\n-  #427 = Utf8               (I)Ljava/lang/Object;\n-  #428 = Utf8               (Ljava/lang/String;I)I\n-  #429 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n-  #430 = Utf8               (C)Ljava/lang/String;\n-  #431 = Utf8               java/io/File\n-  #432 = Utf8               separatorChar\n-  #433 = Utf8               compile\n-  #434 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/io/FilenameUtils.SYSTEM_SEPARATOR:C\n+    #8 = Class              #10           // org/apache/commons/io/FilenameUtils\n+    #9 = NameAndType        #11:#12       // SYSTEM_SEPARATOR:C\n+   #10 = Utf8               org/apache/commons/io/FilenameUtils\n+   #11 = Utf8               SYSTEM_SEPARATOR\n+   #12 = Utf8               C\n+   #13 = Methodref          #8.#14        // org/apache/commons/io/FilenameUtils.doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+   #14 = NameAndType        #15:#16       // doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+   #15 = Utf8               doNormalize\n+   #16 = Utf8               (Ljava/lang/String;CZ)Ljava/lang/String;\n+   #17 = Methodref          #8.#18        // org/apache/commons/io/FilenameUtils.failIfNullBytePresent:(Ljava/lang/String;)V\n+   #18 = NameAndType        #19:#20       // failIfNullBytePresent:(Ljava/lang/String;)V\n+   #19 = Utf8               failIfNullBytePresent\n+   #20 = Utf8               (Ljava/lang/String;)V\n+   #21 = Methodref          #22.#23       // java/lang/String.length:()I\n+   #22 = Class              #24           // java/lang/String\n+   #23 = NameAndType        #25:#26       // length:()I\n+   #24 = Utf8               java/lang/String\n+   #25 = Utf8               length\n+   #26 = Utf8               ()I\n+   #27 = Methodref          #8.#28        // org/apache/commons/io/FilenameUtils.getPrefixLength:(Ljava/lang/String;)I\n+   #28 = NameAndType        #29:#30       // getPrefixLength:(Ljava/lang/String;)I\n+   #29 = Utf8               getPrefixLength\n+   #30 = Utf8               (Ljava/lang/String;)I\n+   #31 = Methodref          #22.#32       // java/lang/String.getChars:(II[CI)V\n+   #32 = NameAndType        #33:#34       // getChars:(II[CI)V\n+   #33 = Utf8               getChars\n+   #34 = Utf8               (II[CI)V\n+   #35 = Fieldref           #8.#36        // org/apache/commons/io/FilenameUtils.OTHER_SEPARATOR:C\n+   #36 = NameAndType        #37:#12       // OTHER_SEPARATOR:C\n+   #37 = Utf8               OTHER_SEPARATOR\n+   #38 = Methodref          #39.#40       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #39 = Class              #41           // java/lang/System\n+   #40 = NameAndType        #42:#43       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #41 = Utf8               java/lang/System\n+   #42 = Utf8               arraycopy\n+   #43 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #44 = String             #45           //\n+   #45 = Utf8\n+   #46 = Methodref          #22.#47       // java/lang/String.\"<init>\":([CII)V\n+   #47 = NameAndType        #5:#48        // \"<init>\":([CII)V\n+   #48 = Utf8               ([CII)V\n+   #49 = Methodref          #8.#50        // org/apache/commons/io/FilenameUtils.normalize:(Ljava/lang/String;)Ljava/lang/String;\n+   #50 = NameAndType        #51:#52       // normalize:(Ljava/lang/String;)Ljava/lang/String;\n+   #51 = Utf8               normalize\n+   #52 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #53 = Methodref          #22.#54       // java/lang/String.charAt:(I)C\n+   #54 = NameAndType        #55:#56       // charAt:(I)C\n+   #55 = Utf8               charAt\n+   #56 = Utf8               (I)C\n+   #57 = Methodref          #8.#58        // org/apache/commons/io/FilenameUtils.isSeparator:(C)Z\n+   #58 = NameAndType        #59:#60       // isSeparator:(C)Z\n+   #59 = Utf8               isSeparator\n+   #60 = Utf8               (C)Z\n+   #61 = Class              #62           // java/lang/StringBuilder\n+   #62 = Utf8               java/lang/StringBuilder\n+   #63 = Methodref          #61.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #64 = Methodref          #61.#65       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #65 = NameAndType        #66:#67       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #66 = Utf8               append\n+   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #68 = Methodref          #61.#69       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #69 = NameAndType        #70:#71       // toString:()Ljava/lang/String;\n+   #70 = Utf8               toString\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Methodref          #61.#73       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #73 = NameAndType        #66:#74       // append:(C)Ljava/lang/StringBuilder;\n+   #74 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #75 = Class              #76           // java/lang/IllegalArgumentException\n+   #76 = Utf8               java/lang/IllegalArgumentException\n+   #77 = String             #78           // Directory must not be null\n+   #78 = Utf8               Directory must not be null\n+   #79 = Methodref          #75.#80       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #80 = NameAndType        #5:#20        // \"<init>\":(Ljava/lang/String;)V\n+   #81 = Fieldref           #82.#83       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #82 = Class              #84           // org/apache/commons/io/IOCase\n+   #83 = NameAndType        #85:#86       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #84 = Utf8               org/apache/commons/io/IOCase\n+   #85 = Utf8               SYSTEM\n+   #86 = Utf8               Lorg/apache/commons/io/IOCase;\n+   #87 = Methodref          #82.#88       // org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #88 = NameAndType        #89:#90       // checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #89 = Utf8               checkEquals\n+   #90 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #91 = Methodref          #82.#92       // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #92 = NameAndType        #93:#90       // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #93 = Utf8               checkStartsWith\n+   #94 = Methodref          #22.#95       // java/lang/String.indexOf:(I)I\n+   #95 = NameAndType        #96:#97       // indexOf:(I)I\n+   #96 = Utf8               indexOf\n+   #97 = Utf8               (I)I\n+   #98 = Methodref          #22.#99       // java/lang/String.replace:(CC)Ljava/lang/String;\n+   #99 = NameAndType        #100:#101     // replace:(CC)Ljava/lang/String;\n+  #100 = Utf8               replace\n+  #101 = Utf8               (CC)Ljava/lang/String;\n+  #102 = Methodref          #8.#103       // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+  #103 = NameAndType        #104:#105     // isSystemWindows:()Z\n+  #104 = Utf8               isSystemWindows\n+  #105 = Utf8               ()Z\n+  #106 = Methodref          #8.#107       // org/apache/commons/io/FilenameUtils.separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+  #107 = NameAndType        #108:#52      // separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+  #108 = Utf8               separatorsToWindows\n+  #109 = Methodref          #8.#110       // org/apache/commons/io/FilenameUtils.separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+  #110 = NameAndType        #111:#52      // separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+  #111 = Utf8               separatorsToUnix\n+  #112 = Methodref          #22.#113      // java/lang/String.indexOf:(II)I\n+  #113 = NameAndType        #96:#114      // indexOf:(II)I\n+  #114 = Utf8               (II)I\n+  #115 = Methodref          #116.#117     // java/lang/Math.min:(II)I\n+  #116 = Class              #118          // java/lang/Math\n+  #117 = NameAndType        #119:#114     // min:(II)I\n+  #118 = Utf8               java/lang/Math\n+  #119 = Utf8               min\n+  #120 = Methodref          #121.#122     // java/lang/Character.toUpperCase:(C)C\n+  #121 = Class              #123          // java/lang/Character\n+  #122 = NameAndType        #124:#125     // toUpperCase:(C)C\n+  #123 = Utf8               java/lang/Character\n+  #124 = Utf8               toUpperCase\n+  #125 = Utf8               (C)C\n+  #126 = Methodref          #22.#127      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #127 = NameAndType        #128:#129     // substring:(II)Ljava/lang/String;\n+  #128 = Utf8               substring\n+  #129 = Utf8               (II)Ljava/lang/String;\n+  #130 = Methodref          #8.#131       // org/apache/commons/io/FilenameUtils.isValidHostName:(Ljava/lang/String;)Z\n+  #131 = NameAndType        #132:#133     // isValidHostName:(Ljava/lang/String;)Z\n+  #132 = Utf8               isValidHostName\n+  #133 = Utf8               (Ljava/lang/String;)Z\n+  #134 = Methodref          #22.#135      // java/lang/String.lastIndexOf:(I)I\n+  #135 = NameAndType        #136:#97      // lastIndexOf:(I)I\n+  #136 = Utf8               lastIndexOf\n+  #137 = Methodref          #116.#138     // java/lang/Math.max:(II)I\n+  #138 = NameAndType        #139:#114     // max:(II)I\n+  #139 = Utf8               max\n+  #140 = Methodref          #8.#141       // org/apache/commons/io/FilenameUtils.getAdsCriticalOffset:(Ljava/lang/String;)I\n+  #141 = NameAndType        #142:#30      // getAdsCriticalOffset:(Ljava/lang/String;)I\n+  #142 = Utf8               getAdsCriticalOffset\n+  #143 = String             #144          // NTFS ADS separator (\\':\\') in file name is forbidden.\n+  #144 = Utf8               NTFS ADS separator (\\':\\') in file name is forbidden.\n+  #145 = Methodref          #8.#146       // org/apache/commons/io/FilenameUtils.indexOfLastSeparator:(Ljava/lang/String;)I\n+  #146 = NameAndType        #147:#30      // indexOfLastSeparator:(Ljava/lang/String;)I\n+  #147 = Utf8               indexOfLastSeparator\n+  #148 = Methodref          #8.#149       // org/apache/commons/io/FilenameUtils.doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+  #149 = NameAndType        #150:#151     // doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+  #150 = Utf8               doGetPath\n+  #151 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #152 = Methodref          #8.#153       // org/apache/commons/io/FilenameUtils.doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #153 = NameAndType        #154:#155     // doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #154 = Utf8               doGetFullPath\n+  #155 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #156 = Methodref          #8.#157       // org/apache/commons/io/FilenameUtils.getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+  #157 = NameAndType        #158:#52      // getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+  #158 = Utf8               getPrefix\n+  #159 = Methodref          #22.#160      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #160 = NameAndType        #128:#161     // substring:(I)Ljava/lang/String;\n+  #161 = Utf8               (I)Ljava/lang/String;\n+  #162 = String             #163          // Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+  #163 = Utf8               Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+  #164 = Methodref          #8.#165       // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n+  #165 = NameAndType        #166:#52      // getName:(Ljava/lang/String;)Ljava/lang/String;\n+  #166 = Utf8               getName\n+  #167 = Methodref          #8.#168       // org/apache/commons/io/FilenameUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #168 = NameAndType        #169:#52      // removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #169 = Utf8               removeExtension\n+  #170 = Methodref          #8.#171       // org/apache/commons/io/FilenameUtils.indexOfExtension:(Ljava/lang/String;)I\n+  #171 = NameAndType        #172:#30      // indexOfExtension:(Ljava/lang/String;)I\n+  #172 = Utf8               indexOfExtension\n+  #173 = Fieldref           #82.#174      // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #174 = NameAndType        #175:#86      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #175 = Utf8               SENSITIVE\n+  #176 = Methodref          #8.#177       // org/apache/commons/io/FilenameUtils.equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #177 = NameAndType        #178:#179     // equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #178 = Utf8               equals\n+  #179 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #180 = String             #181          // Error normalizing one or both of the file names\n+  #181 = Utf8               Error normalizing one or both of the file names\n+  #182 = Methodref          #183.#184     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #183 = Class              #185          // java/util/Objects\n+  #184 = NameAndType        #186:#187     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #185 = Utf8               java/util/Objects\n+  #186 = Utf8               requireNonNull\n+  #187 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #188 = Methodref          #22.#189      // java/lang/String.isEmpty:()Z\n+  #189 = NameAndType        #190:#105     // isEmpty:()Z\n+  #190 = Utf8               isEmpty\n+  #191 = Methodref          #8.#192       // org/apache/commons/io/FilenameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #192 = NameAndType        #193:#52      // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #193 = Utf8               getExtension\n+  #194 = Methodref          #22.#195      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #195 = NameAndType        #178:#196     // equals:(Ljava/lang/Object;)Z\n+  #196 = Utf8               (Ljava/lang/Object;)Z\n+  #197 = InterfaceMethodref #198.#189     // java/util/Collection.isEmpty:()Z\n+  #198 = Class              #199          // java/util/Collection\n+  #199 = Utf8               java/util/Collection\n+  #200 = InterfaceMethodref #198.#201     // java/util/Collection.iterator:()Ljava/util/Iterator;\n+  #201 = NameAndType        #202:#203     // iterator:()Ljava/util/Iterator;\n+  #202 = Utf8               iterator\n+  #203 = Utf8               ()Ljava/util/Iterator;\n+  #204 = InterfaceMethodref #205.#206     // java/util/Iterator.hasNext:()Z\n+  #205 = Class              #207          // java/util/Iterator\n+  #206 = NameAndType        #208:#105     // hasNext:()Z\n+  #207 = Utf8               java/util/Iterator\n+  #208 = Utf8               hasNext\n+  #209 = InterfaceMethodref #205.#210     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #210 = NameAndType        #211:#212     // next:()Ljava/lang/Object;\n+  #211 = Utf8               next\n+  #212 = Utf8               ()Ljava/lang/Object;\n+  #213 = Methodref          #8.#214       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #214 = NameAndType        #215:#216     // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #215 = Utf8               wildcardMatch\n+  #216 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #217 = Methodref          #8.#218       // org/apache/commons/io/FilenameUtils.splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+  #218 = NameAndType        #219:#220     // splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+  #219 = Utf8               splitOnTokens\n+  #220 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #221 = Class              #222          // java/util/ArrayDeque\n+  #222 = Utf8               java/util/ArrayDeque\n+  #223 = Methodref          #221.#224     // java/util/ArrayDeque.\"<init>\":(I)V\n+  #224 = NameAndType        #5:#225       // \"<init>\":(I)V\n+  #225 = Utf8               (I)V\n+  #226 = InterfaceMethodref #227.#189     // java/util/Deque.isEmpty:()Z\n+  #227 = Class              #228          // java/util/Deque\n+  #228 = Utf8               java/util/Deque\n+  #229 = InterfaceMethodref #227.#230     // java/util/Deque.pop:()Ljava/lang/Object;\n+  #230 = NameAndType        #231:#212     // pop:()Ljava/lang/Object;\n+  #231 = Utf8               pop\n+  #232 = Class              #233          // \"[I\"\n+  #233 = Utf8               [I\n+  #234 = String             #235          // ?\n+  #235 = Utf8               ?\n+  #236 = String             #237          // *\n+  #237 = Utf8               *\n+  #238 = Methodref          #82.#239      // org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+  #239 = NameAndType        #240:#241     // checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+  #240 = Utf8               checkIndexOf\n+  #241 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+  #242 = InterfaceMethodref #227.#243     // java/util/Deque.push:(Ljava/lang/Object;)V\n+  #243 = NameAndType        #244:#245     // push:(Ljava/lang/Object;)V\n+  #244 = Utf8               push\n+  #245 = Utf8               (Ljava/lang/Object;)V\n+  #246 = Methodref          #82.#247      // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #247 = NameAndType        #248:#249     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #248 = Utf8               checkRegionMatches\n+  #249 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+  #250 = Methodref          #22.#251      // java/lang/String.toCharArray:()[C\n+  #251 = NameAndType        #252:#253     // toCharArray:()[C\n+  #252 = Utf8               toCharArray\n+  #253 = Utf8               ()[C\n+  #254 = Class              #255          // java/util/ArrayList\n+  #255 = Utf8               java/util/ArrayList\n+  #256 = Methodref          #254.#3       // java/util/ArrayList.\"<init>\":()V\n+  #257 = Methodref          #61.#23       // java/lang/StringBuilder.length:()I\n+  #258 = Methodref          #254.#259     // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #259 = NameAndType        #260:#196     // add:(Ljava/lang/Object;)Z\n+  #260 = Utf8               add\n+  #261 = Methodref          #61.#262      // java/lang/StringBuilder.setLength:(I)V\n+  #262 = NameAndType        #263:#225     // setLength:(I)V\n+  #263 = Utf8               setLength\n+  #264 = Fieldref           #8.#265       // org/apache/commons/io/FilenameUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #265 = NameAndType        #266:#267     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #266 = Utf8               EMPTY_STRING_ARRAY\n+  #267 = Utf8               [Ljava/lang/String;\n+  #268 = Methodref          #254.#269     // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #269 = NameAndType        #270:#271     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #270 = Utf8               toArray\n+  #271 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #272 = Class              #267          // \"[Ljava/lang/String;\"\n+  #273 = Methodref          #8.#274       // org/apache/commons/io/FilenameUtils.isIPv6Address:(Ljava/lang/String;)Z\n+  #274 = NameAndType        #275:#133     // isIPv6Address:(Ljava/lang/String;)Z\n+  #275 = Utf8               isIPv6Address\n+  #276 = Methodref          #8.#277       // org/apache/commons/io/FilenameUtils.isRFC3986HostName:(Ljava/lang/String;)Z\n+  #277 = NameAndType        #278:#133     // isRFC3986HostName:(Ljava/lang/String;)Z\n+  #278 = Utf8               isRFC3986HostName\n+  #279 = Fieldref           #8.#280       // org/apache/commons/io/FilenameUtils.IPV4_PATTERN:Ljava/util/regex/Pattern;\n+  #280 = NameAndType        #281:#282     // IPV4_PATTERN:Ljava/util/regex/Pattern;\n+  #281 = Utf8               IPV4_PATTERN\n+  #282 = Utf8               Ljava/util/regex/Pattern;\n+  #283 = Methodref          #284.#285     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #284 = Class              #286          // java/util/regex/Pattern\n+  #285 = NameAndType        #287:#288     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #286 = Utf8               java/util/regex/Pattern\n+  #287 = Utf8               matcher\n+  #288 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #289 = Methodref          #290.#291     // java/util/regex/Matcher.matches:()Z\n+  #290 = Class              #292          // java/util/regex/Matcher\n+  #291 = NameAndType        #293:#105     // matches:()Z\n+  #292 = Utf8               java/util/regex/Matcher\n+  #293 = Utf8               matches\n+  #294 = Methodref          #290.#295     // java/util/regex/Matcher.groupCount:()I\n+  #295 = NameAndType        #296:#26      // groupCount:()I\n+  #296 = Utf8               groupCount\n+  #297 = Methodref          #290.#298     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+  #298 = NameAndType        #299:#161     // group:(I)Ljava/lang/String;\n+  #299 = Utf8               group\n+  #300 = Methodref          #301.#302     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #301 = Class              #303          // java/lang/Integer\n+  #302 = NameAndType        #304:#30      // parseInt:(Ljava/lang/String;)I\n+  #303 = Utf8               java/lang/Integer\n+  #304 = Utf8               parseInt\n+  #305 = String             #306          // 0\n+  #306 = Utf8               0\n+  #307 = Methodref          #22.#308      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #308 = NameAndType        #309:#133     // startsWith:(Ljava/lang/String;)Z\n+  #309 = Utf8               startsWith\n+  #310 = String             #311          // ::\n+  #311 = Utf8               ::\n+  #312 = Methodref          #22.#313      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #313 = NameAndType        #314:#315     // contains:(Ljava/lang/CharSequence;)Z\n+  #314 = Utf8               contains\n+  #315 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #316 = Methodref          #22.#317      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+  #317 = NameAndType        #96:#30       // indexOf:(Ljava/lang/String;)I\n+  #318 = Methodref          #22.#319      // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+  #319 = NameAndType        #136:#30      // lastIndexOf:(Ljava/lang/String;)I\n+  #320 = String             #321          // :\n+  #321 = Utf8               :\n+  #322 = Methodref          #22.#323      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #323 = NameAndType        #324:#133     // endsWith:(Ljava/lang/String;)Z\n+  #324 = Utf8               endsWith\n+  #325 = Methodref          #22.#326      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #326 = NameAndType        #327:#220     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #327 = Utf8               split\n+  #328 = Methodref          #329.#330     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #329 = Class              #331          // java/util/Arrays\n+  #330 = NameAndType        #332:#333     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #331 = Utf8               java/util/Arrays\n+  #332 = Utf8               asList\n+  #333 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #334 = Methodref          #254.#335     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #335 = NameAndType        #5:#336       // \"<init>\":(Ljava/util/Collection;)V\n+  #336 = Utf8               (Ljava/util/Collection;)V\n+  #337 = InterfaceMethodref #338.#259     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #338 = Class              #339          // java/util/List\n+  #339 = Utf8               java/util/List\n+  #340 = InterfaceMethodref #338.#189     // java/util/List.isEmpty:()Z\n+  #341 = InterfaceMethodref #338.#342     // java/util/List.remove:(I)Ljava/lang/Object;\n+  #342 = NameAndType        #343:#344     // remove:(I)Ljava/lang/Object;\n+  #343 = Utf8               remove\n+  #344 = Utf8               (I)Ljava/lang/Object;\n+  #345 = InterfaceMethodref #338.#269     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #346 = String             #347          // .\n+  #347 = Utf8               .\n+  #348 = Methodref          #8.#349       // org/apache/commons/io/FilenameUtils.isIPv4Address:(Ljava/lang/String;)Z\n+  #349 = NameAndType        #350:#133     // isIPv4Address:(Ljava/lang/String;)Z\n+  #350 = Utf8               isIPv4Address\n+  #351 = Methodref          #301.#352     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+  #352 = NameAndType        #304:#353     // parseInt:(Ljava/lang/String;I)I\n+  #353 = Utf8               (Ljava/lang/String;I)I\n+  #354 = Class              #355          // java/lang/NumberFormatException\n+  #355 = Utf8               java/lang/NumberFormatException\n+  #356 = Integer            65535\n+  #357 = String             #358          // \\\\.\n+  #358 = Utf8               \\\\.\n+  #359 = Methodref          #22.#360      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #360 = NameAndType        #327:#361     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #361 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n+  #362 = Fieldref           #8.#363       // org/apache/commons/io/FilenameUtils.REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+  #363 = NameAndType        #364:#282     // REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+  #364 = Utf8               REG_NAME_PART_PATTERN\n+  #365 = Methodref          #121.#366     // java/lang/Character.toString:(C)Ljava/lang/String;\n+  #366 = NameAndType        #70:#367      // toString:(C)Ljava/lang/String;\n+  #367 = Utf8               (C)Ljava/lang/String;\n+  #368 = Fieldref           #8.#369       // org/apache/commons/io/FilenameUtils.EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+  #369 = NameAndType        #370:#371     // EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+  #370 = Utf8               EXTENSION_SEPARATOR_STR\n+  #371 = Utf8               Ljava/lang/String;\n+  #372 = Fieldref           #373.#374     // java/io/File.separatorChar:C\n+  #373 = Class              #375          // java/io/File\n+  #374 = NameAndType        #376:#12      // separatorChar:C\n+  #375 = Utf8               java/io/File\n+  #376 = Utf8               separatorChar\n+  #377 = String             #378          // ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+  #378 = Utf8               ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+  #379 = Methodref          #284.#380     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #380 = NameAndType        #381:#382     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #381 = Utf8               compile\n+  #382 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #383 = String             #384          // ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+  #384 = Utf8               ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+  #385 = Utf8               EMPTY_STRING\n+  #386 = Utf8               ConstantValue\n+  #387 = Utf8               NOT_FOUND\n+  #388 = Utf8               I\n+  #389 = Integer            -1\n+  #390 = Utf8               EXTENSION_SEPARATOR\n+  #391 = Integer            46\n+  #392 = Utf8               UNIX_SEPARATOR\n+  #393 = Integer            47\n+  #394 = Utf8               WINDOWS_SEPARATOR\n+  #395 = Integer            92\n+  #396 = Utf8               IPV4_MAX_OCTET_VALUE\n+  #397 = Integer            255\n+  #398 = Utf8               IPV6_MAX_HEX_GROUPS\n+  #399 = Integer            8\n+  #400 = Utf8               IPV6_MAX_HEX_DIGITS_PER_GROUP\n+  #401 = Integer            4\n+  #402 = Utf8               MAX_UNSIGNED_SHORT\n+  #403 = Utf8               BASE_16\n+  #404 = Integer            16\n+  #405 = Utf8               Code\n+  #406 = Utf8               LineNumberTable\n+  #407 = Utf8               StackMapTable\n+  #408 = Utf8               normalizeNoEndSeparator\n+  #409 = Class              #410          // \"[C\"\n+  #410 = Utf8               [C\n+  #411 = Utf8               concat\n+  #412 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #413 = Utf8               directoryContains\n+  #414 = Utf8               Exceptions\n+  #415 = Class              #416          // java/io/IOException\n+  #416 = Utf8               java/io/IOException\n+  #417 = Utf8               separatorsToSystem\n+  #418 = Utf8               getPath\n+  #419 = Utf8               getPathNoEndSeparator\n+  #420 = Utf8               getFullPath\n+  #421 = Utf8               getFullPathNoEndSeparator\n+  #422 = Utf8               getBaseName\n+  #423 = Utf8               equalsOnSystem\n+  #424 = Utf8               equalsNormalized\n+  #425 = Utf8               equalsNormalizedOnSystem\n+  #426 = Utf8               isExtension\n+  #427 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Z\n+  #428 = Utf8               (Ljava/lang/String;Ljava/util/Collection;)Z\n+  #429 = Utf8               Signature\n+  #430 = Utf8               (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n+  #431 = Utf8               wildcardMatchOnSystem\n+  #432 = Utf8               <clinit>\n+  #433 = Utf8               SourceFile\n+  #434 = Utf8               FilenameUtils.java\n {\n   private static final java.lang.String[] EMPTY_STRING_ARRAY;\n     descriptor: [Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.lang.String EMPTY_STRING = \"\";\n     descriptor: Ljava/lang/String;\n@@ -530,15 +530,15 @@\n         line 140: 4\n \n   static boolean isSystemWindows();\n     descriptor: ()Z\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         0: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          3: bipush        92\n          5: if_icmpne     12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n@@ -573,17 +573,17 @@\n \n   public static java.lang.String normalize(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          4: iconst_1\n-         5: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+         5: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 205: 0\n \n   public static java.lang.String normalize(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -594,15 +594,15 @@\n          4: bipush        47\n          6: goto          11\n          9: bipush        92\n         11: istore_2\n         12: aload_0\n         13: iload_2\n         14: iconst_1\n-        15: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+        15: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 252: 0\n         line 253: 12\n       StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n@@ -610,17 +610,17 @@\n \n   public static java.lang.String normalizeNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          4: iconst_0\n-         5: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+         5: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 299: 0\n \n   public static java.lang.String normalizeNoEndSeparator(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -631,15 +631,15 @@\n          4: bipush        47\n          6: goto          11\n          9: bipush        92\n         11: istore_2\n         12: aload_0\n         13: iload_2\n         14: iconst_0\n-        15: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+        15: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 346: 0\n         line 347: 12\n       StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n@@ -651,47 +651,47 @@\n     Code:\n       stack=6, locals=10, args_size=3\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokevirtual #6                  // Method java/lang/String.length:()I\n+        11: invokevirtual #21                 // Method java/lang/String.length:()I\n         14: istore_3\n         15: iload_3\n         16: ifne          21\n         19: aload_0\n         20: areturn\n         21: aload_0\n-        22: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+        22: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         25: istore        4\n         27: iload         4\n         29: ifge          34\n         32: aconst_null\n         33: areturn\n         34: iload_3\n         35: iconst_2\n         36: iadd\n         37: newarray       char\n         39: astore        5\n         41: aload_0\n         42: iconst_0\n         43: aload_0\n-        44: invokevirtual #6                  // Method java/lang/String.length:()I\n+        44: invokevirtual #21                 // Method java/lang/String.length:()I\n         47: aload         5\n         49: iconst_0\n-        50: invokevirtual #8                  // Method java/lang/String.getChars:(II[CI)V\n+        50: invokevirtual #31                 // Method java/lang/String.getChars:(II[CI)V\n         53: iload_1\n-        54: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+        54: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n         57: if_icmpne     66\n-        60: getstatic     #9                  // Field OTHER_SEPARATOR:C\n+        60: getstatic     #35                 // Field OTHER_SEPARATOR:C\n         63: goto          69\n-        66: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+        66: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n         69: istore        6\n         71: iconst_0\n         72: istore        7\n         74: iload         7\n         76: aload         5\n         78: arraylength\n         79: if_icmpge     104\n@@ -746,15 +746,15 @@\n        164: aload         5\n        166: iload         8\n        168: iconst_1\n        169: isub\n        170: iload_3\n        171: iload         8\n        173: isub\n-       174: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       174: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        177: iinc          3, -1\n        180: iinc          8, -1\n        183: iinc          8, 1\n        186: goto          134\n        189: iload         4\n        191: iconst_1\n        192: iadd\n@@ -800,15 +800,15 @@\n        259: aload         5\n        261: iload         8\n        263: iconst_1\n        264: isub\n        265: iload_3\n        266: iload         8\n        268: isub\n-       269: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       269: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        272: iinc          3, -2\n        275: iinc          8, -1\n        278: iinc          8, 1\n        281: goto          195\n        284: iload         4\n        286: iconst_2\n        287: iadd\n@@ -880,15 +880,15 @@\n        399: aload         5\n        401: iload         9\n        403: iconst_1\n        404: iadd\n        405: iload_3\n        406: iload         8\n        408: isub\n-       409: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       409: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        412: iload_3\n        413: iload         8\n        415: iload         9\n        417: isub\n        418: isub\n        419: istore_3\n        420: iload         9\n@@ -903,15 +903,15 @@\n        439: iconst_1\n        440: iadd\n        441: aload         5\n        443: iload         4\n        445: iload_3\n        446: iload         8\n        448: isub\n-       449: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       449: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        452: iload_3\n        453: iload         8\n        455: iconst_1\n        456: iadd\n        457: iload         4\n        459: isub\n        460: isub\n@@ -920,45 +920,45 @@\n        464: iconst_1\n        465: iadd\n        466: istore        8\n        468: iinc          8, 1\n        471: goto          290\n        474: iload_3\n        475: ifgt          481\n-       478: ldc           #11                 // String\n+       478: ldc           #44                 // String\n        480: areturn\n        481: iload_3\n        482: iload         4\n        484: if_icmpgt     499\n-       487: new           #12                 // class java/lang/String\n+       487: new           #22                 // class java/lang/String\n        490: dup\n        491: aload         5\n        493: iconst_0\n        494: iload_3\n-       495: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       495: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        498: areturn\n        499: iload         7\n        501: ifeq          520\n        504: iload_2\n        505: ifeq          520\n-       508: new           #12                 // class java/lang/String\n+       508: new           #22                 // class java/lang/String\n        511: dup\n        512: aload         5\n        514: iconst_0\n        515: iload_3\n-       516: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       516: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        519: areturn\n-       520: new           #12                 // class java/lang/String\n+       520: new           #22                 // class java/lang/String\n        523: dup\n        524: aload         5\n        526: iconst_0\n        527: iload_3\n        528: iconst_1\n        529: isub\n-       530: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       530: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        533: areturn\n       LineNumberTable:\n         line 359: 0\n         line 360: 4\n         line 363: 6\n         line 365: 10\n         line 366: 15\n@@ -1072,67 +1072,67 @@\n \n   public static java.lang.String concat(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n-         1: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         1: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n          4: istore_2\n          5: iload_2\n          6: ifge          11\n          9: aconst_null\n         10: areturn\n         11: iload_2\n         12: ifle          20\n         15: aload_1\n-        16: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        16: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         19: areturn\n         20: aload_0\n         21: ifnonnull     26\n         24: aconst_null\n         25: areturn\n         26: aload_0\n-        27: invokevirtual #6                  // Method java/lang/String.length:()I\n+        27: invokevirtual #21                 // Method java/lang/String.length:()I\n         30: istore_3\n         31: iload_3\n         32: ifne          40\n         35: aload_1\n-        36: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         39: areturn\n         40: aload_0\n         41: iload_3\n         42: iconst_1\n         43: isub\n-        44: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+        44: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n         47: istore        4\n         49: iload         4\n-        51: invokestatic  #16                 // Method isSeparator:(C)Z\n+        51: invokestatic  #57                 // Method isSeparator:(C)Z\n         54: ifeq          79\n-        57: new           #17                 // class java/lang/StringBuilder\n+        57: new           #61                 // class java/lang/StringBuilder\n         60: dup\n-        61: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        61: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         64: aload_0\n-        65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         68: aload_1\n-        69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        69: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         78: areturn\n-        79: new           #17                 // class java/lang/StringBuilder\n+        79: new           #61                 // class java/lang/StringBuilder\n         82: dup\n-        83: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        83: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         86: aload_0\n-        87: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         90: bipush        47\n-        92: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        92: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         95: aload_1\n-        96: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        99: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       102: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        96: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        99: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       102: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n        105: areturn\n       LineNumberTable:\n         line 496: 0\n         line 497: 5\n         line 498: 9\n         line 500: 11\n         line 501: 15\n@@ -1161,34 +1161,34 @@\n   public static boolean directoryContains(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #22                 // class java/lang/IllegalArgumentException\n+         4: new           #75                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #23                 // String Directory must not be null\n-        10: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #77                 // String Directory must not be null\n+        10: invokespecial #79                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n-        20: getstatic     #25                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+        20: getstatic     #81                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n         23: aload_0\n         24: aload_1\n-        25: invokevirtual #26                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+        25: invokevirtual #87                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n         28: ifeq          33\n         31: iconst_0\n         32: ireturn\n-        33: getstatic     #25                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+        33: getstatic     #81                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n         36: aload_1\n         37: aload_0\n-        38: invokevirtual #27                 // Method org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+        38: invokevirtual #91                 // Method org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n         41: ireturn\n       LineNumberTable:\n         line 544: 0\n         line 545: 4\n         line 548: 14\n         line 549: 18\n         line 552: 20\n@@ -1206,23 +1206,23 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n          5: bipush        92\n-         7: invokevirtual #28                 // Method java/lang/String.indexOf:(I)I\n+         7: invokevirtual #94                 // Method java/lang/String.indexOf:(I)I\n         10: iconst_m1\n         11: if_icmpne     16\n         14: aload_0\n         15: areturn\n         16: aload_0\n         17: bipush        92\n         19: bipush        47\n-        21: invokevirtual #29                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        21: invokevirtual #98                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 567: 0\n         line 568: 14\n         line 570: 16\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n@@ -1233,23 +1233,23 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n          5: bipush        47\n-         7: invokevirtual #28                 // Method java/lang/String.indexOf:(I)I\n+         7: invokevirtual #94                 // Method java/lang/String.indexOf:(I)I\n         10: iconst_m1\n         11: if_icmpne     16\n         14: aload_0\n         15: areturn\n         16: aload_0\n         17: bipush        47\n         19: bipush        92\n-        21: invokevirtual #29                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        21: invokevirtual #98                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 580: 0\n         line 581: 14\n         line 583: 16\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n@@ -1260,21 +1260,21 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: invokestatic  #30                 // Method isSystemWindows:()Z\n+         6: invokestatic  #102                // Method isSystemWindows:()Z\n          9: ifeq          19\n         12: aload_0\n-        13: invokestatic  #31                 // Method separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+        13: invokestatic  #106                // Method separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n         16: goto          23\n         19: aload_0\n-        20: invokestatic  #32                 // Method separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+        20: invokestatic  #109                // Method separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n         23: areturn\n       LineNumberTable:\n         line 593: 0\n         line 594: 4\n         line 596: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n@@ -1288,23 +1288,23 @@\n     Code:\n       stack=4, locals=8, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n          6: aload_0\n-         7: invokevirtual #6                  // Method java/lang/String.length:()I\n+         7: invokevirtual #21                 // Method java/lang/String.length:()I\n         10: istore_1\n         11: iload_1\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n         18: iconst_0\n-        19: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+        19: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n         22: istore_2\n         23: iload_2\n         24: bipush        58\n         26: if_icmpne     31\n         29: iconst_m1\n         30: ireturn\n         31: iload_1\n@@ -1312,32 +1312,32 @@\n         33: if_icmpne     57\n         36: iload_2\n         37: bipush        126\n         39: if_icmpne     44\n         42: iconst_2\n         43: ireturn\n         44: iload_2\n-        45: invokestatic  #16                 // Method isSeparator:(C)Z\n+        45: invokestatic  #57                 // Method isSeparator:(C)Z\n         48: ifeq          55\n         51: iconst_1\n         52: goto          56\n         55: iconst_0\n         56: ireturn\n         57: iload_2\n         58: bipush        126\n         60: if_icmpne     130\n         63: aload_0\n         64: bipush        47\n         66: iconst_1\n-        67: invokevirtual #33                 // Method java/lang/String.indexOf:(II)I\n+        67: invokevirtual #112                // Method java/lang/String.indexOf:(II)I\n         70: istore_3\n         71: aload_0\n         72: bipush        92\n         74: iconst_1\n-        75: invokevirtual #33                 // Method java/lang/String.indexOf:(II)I\n+        75: invokevirtual #112                // Method java/lang/String.indexOf:(II)I\n         78: istore        4\n         80: iload_3\n         81: iconst_m1\n         82: if_icmpne     95\n         85: iload         4\n         87: iconst_m1\n         88: if_icmpne     95\n@@ -1357,68 +1357,68 @@\n        110: if_icmpne     117\n        113: iload_3\n        114: goto          119\n        117: iload         4\n        119: istore        4\n        121: iload_3\n        122: iload         4\n-       124: invokestatic  #34                 // Method java/lang/Math.min:(II)I\n+       124: invokestatic  #115                // Method java/lang/Math.min:(II)I\n        127: iconst_1\n        128: iadd\n        129: ireturn\n        130: aload_0\n        131: iconst_1\n-       132: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+       132: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n        135: istore_3\n        136: iload_3\n        137: bipush        58\n        139: if_icmpne     189\n        142: iload_2\n-       143: invokestatic  #35                 // Method java/lang/Character.toUpperCase:(C)C\n+       143: invokestatic  #120                // Method java/lang/Character.toUpperCase:(C)C\n        146: istore_2\n        147: iload_2\n        148: bipush        65\n        150: if_icmplt     179\n        153: iload_2\n        154: bipush        90\n        156: if_icmpgt     179\n        159: iload_1\n        160: iconst_2\n        161: if_icmpeq     175\n        164: aload_0\n        165: iconst_2\n-       166: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n-       169: invokestatic  #16                 // Method isSeparator:(C)Z\n+       166: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n+       169: invokestatic  #57                 // Method isSeparator:(C)Z\n        172: ifne          177\n        175: iconst_2\n        176: ireturn\n        177: iconst_3\n        178: ireturn\n        179: iload_2\n        180: bipush        47\n        182: if_icmpne     187\n        185: iconst_1\n        186: ireturn\n        187: iconst_m1\n        188: ireturn\n        189: iload_2\n-       190: invokestatic  #16                 // Method isSeparator:(C)Z\n+       190: invokestatic  #57                 // Method isSeparator:(C)Z\n        193: ifeq          314\n        196: iload_3\n-       197: invokestatic  #16                 // Method isSeparator:(C)Z\n+       197: invokestatic  #57                 // Method isSeparator:(C)Z\n        200: ifeq          314\n        203: aload_0\n        204: bipush        47\n        206: iconst_2\n-       207: invokevirtual #33                 // Method java/lang/String.indexOf:(II)I\n+       207: invokevirtual #112                // Method java/lang/String.indexOf:(II)I\n        210: istore        4\n        212: aload_0\n        213: bipush        92\n        215: iconst_2\n-       216: invokevirtual #33                 // Method java/lang/String.indexOf:(II)I\n+       216: invokevirtual #112                // Method java/lang/String.indexOf:(II)I\n        219: istore        5\n        221: iload         4\n        223: iconst_m1\n        224: if_icmpne     233\n        227: iload         5\n        229: iconst_m1\n        230: if_icmpeq     245\n@@ -1442,34 +1442,34 @@\n        265: if_icmpne     273\n        268: iload         4\n        270: goto          275\n        273: iload         5\n        275: istore        5\n        277: iload         4\n        279: iload         5\n-       281: invokestatic  #34                 // Method java/lang/Math.min:(II)I\n+       281: invokestatic  #115                // Method java/lang/Math.min:(II)I\n        284: iconst_1\n        285: iadd\n        286: istore        6\n        288: aload_0\n        289: iconst_2\n        290: iload         6\n        292: iconst_1\n        293: isub\n-       294: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       294: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        297: astore        7\n        299: aload         7\n-       301: invokestatic  #37                 // Method isValidHostName:(Ljava/lang/String;)Z\n+       301: invokestatic  #130                // Method isValidHostName:(Ljava/lang/String;)Z\n        304: ifeq          312\n        307: iload         6\n        309: goto          313\n        312: iconst_m1\n        313: ireturn\n        314: iload_2\n-       315: invokestatic  #16                 // Method isSeparator:(C)Z\n+       315: invokestatic  #57                 // Method isSeparator:(C)Z\n        318: ifeq          325\n        321: iconst_1\n        322: goto          326\n        325: iconst_0\n        326: ireturn\n       LineNumberTable:\n         line 639: 0\n@@ -1575,23 +1575,23 @@\n       stack=2, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n          6: aload_0\n          7: bipush        47\n-         9: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I\n+         9: invokevirtual #134                // Method java/lang/String.lastIndexOf:(I)I\n         12: istore_1\n         13: aload_0\n         14: bipush        92\n-        16: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I\n+        16: invokevirtual #134                // Method java/lang/String.lastIndexOf:(I)I\n         19: istore_2\n         20: iload_1\n         21: iload_2\n-        22: invokestatic  #39                 // Method java/lang/Math.max:(II)I\n+        22: invokestatic  #137                // Method java/lang/Math.max:(II)I\n         25: ireturn\n       LineNumberTable:\n         line 708: 0\n         line 709: 4\n         line 711: 6\n         line 712: 13\n         line 713: 20\n@@ -1603,36 +1603,36 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n-         6: invokestatic  #30                 // Method isSystemWindows:()Z\n+         6: invokestatic  #102                // Method isSystemWindows:()Z\n          9: ifeq          38\n         12: aload_0\n         13: bipush        58\n         15: aload_0\n-        16: invokestatic  #40                 // Method getAdsCriticalOffset:(Ljava/lang/String;)I\n-        19: invokevirtual #33                 // Method java/lang/String.indexOf:(II)I\n+        16: invokestatic  #140                // Method getAdsCriticalOffset:(Ljava/lang/String;)I\n+        19: invokevirtual #112                // Method java/lang/String.indexOf:(II)I\n         22: istore_1\n         23: iload_1\n         24: iconst_m1\n         25: if_icmpeq     38\n-        28: new           #22                 // class java/lang/IllegalArgumentException\n+        28: new           #75                 // class java/lang/IllegalArgumentException\n         31: dup\n-        32: ldc           #41                 // String NTFS ADS separator (\\':\\') in file name is forbidden.\n-        34: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #143                // String NTFS ADS separator (\\':\\') in file name is forbidden.\n+        34: invokespecial #79                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n         39: bipush        46\n-        41: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I\n+        41: invokevirtual #134                // Method java/lang/String.lastIndexOf:(I)I\n         44: istore_1\n         45: aload_0\n-        46: invokestatic  #42                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        46: invokestatic  #145                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         49: istore_2\n         50: iload_2\n         51: iload_1\n         52: if_icmple     59\n         55: iconst_m1\n         56: goto          60\n         59: iload_1\n@@ -1664,49 +1664,49 @@\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_1\n         11: iload_1\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: iload_1\n         18: aload_0\n-        19: invokevirtual #6                  // Method java/lang/String.length:()I\n+        19: invokevirtual #21                 // Method java/lang/String.length:()I\n         22: if_icmple     67\n-        25: new           #17                 // class java/lang/StringBuilder\n+        25: new           #61                 // class java/lang/StringBuilder\n         28: dup\n-        29: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        29: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         32: aload_0\n-        33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: bipush        47\n-        38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        41: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        44: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n-        47: new           #17                 // class java/lang/StringBuilder\n+        38: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        41: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        44: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+        47: new           #61                 // class java/lang/StringBuilder\n         50: dup\n-        51: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        51: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         54: aload_0\n-        55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: bipush        47\n-        60: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        63: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        60: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         66: areturn\n         67: aload_0\n         68: iconst_0\n         69: iload_1\n-        70: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        70: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         73: astore_2\n         74: aload_2\n-        75: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+        75: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         78: aload_2\n         79: areturn\n       LineNumberTable:\n         line 785: 0\n         line 786: 4\n         line 788: 6\n         line 789: 11\n@@ -1727,72 +1727,72 @@\n   public static java.lang.String getPath(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokestatic  #43                 // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokestatic  #148                // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 825: 0\n \n   public static java.lang.String getPathNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #43                 // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokestatic  #148                // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 853: 0\n \n   private static java.lang.String doGetPath(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_2\n         11: iload_2\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: aload_0\n-        18: invokestatic  #42                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        18: invokestatic  #145                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         21: istore_3\n         22: iload_3\n         23: iload_1\n         24: iadd\n         25: istore        4\n         27: iload_2\n         28: aload_0\n-        29: invokevirtual #6                  // Method java/lang/String.length:()I\n+        29: invokevirtual #21                 // Method java/lang/String.length:()I\n         32: if_icmpge     45\n         35: iload_3\n         36: iflt          45\n         39: iload_2\n         40: iload         4\n         42: if_icmplt     48\n-        45: ldc           #11                 // String\n+        45: ldc           #44                 // String\n         47: areturn\n         48: aload_0\n         49: iload_2\n         50: iload         4\n-        52: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        52: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         55: astore        5\n         57: aload         5\n-        59: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+        59: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         62: aload         5\n         64: areturn\n       LineNumberTable:\n         line 864: 0\n         line 865: 4\n         line 867: 6\n         line 868: 11\n@@ -1817,67 +1817,67 @@\n   public static java.lang.String getFullPath(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokestatic  #44                 // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+         2: invokestatic  #152                // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 907: 0\n \n   public static java.lang.String getFullPathNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #44                 // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+         2: invokestatic  #152                // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 937: 0\n \n   private static java.lang.String doGetFullPath(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_2\n         11: iload_2\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: iload_2\n         18: aload_0\n-        19: invokevirtual #6                  // Method java/lang/String.length:()I\n+        19: invokevirtual #21                 // Method java/lang/String.length:()I\n         22: if_icmplt     36\n         25: iload_1\n         26: ifeq          34\n         29: aload_0\n-        30: invokestatic  #45                 // Method getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+        30: invokestatic  #156                // Method getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n         33: areturn\n         34: aload_0\n         35: areturn\n         36: aload_0\n-        37: invokestatic  #42                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        37: invokestatic  #145                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         40: istore_3\n         41: iload_3\n         42: ifge          52\n         45: aload_0\n         46: iconst_0\n         47: iload_2\n-        48: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        48: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         51: areturn\n         52: iload_3\n         53: iload_1\n         54: ifeq          61\n         57: iconst_1\n         58: goto          62\n         61: iconst_0\n@@ -1885,15 +1885,15 @@\n         63: istore        4\n         65: iload         4\n         67: ifne          73\n         70: iinc          4, 1\n         73: aload_0\n         74: iconst_0\n         75: iload         4\n-        77: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        77: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         80: areturn\n       LineNumberTable:\n         line 948: 0\n         line 949: 4\n         line 951: 6\n         line 952: 11\n         line 953: 15\n@@ -1934,23 +1934,23 @@\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokestatic  #42                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        11: invokestatic  #145                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         14: istore_1\n         15: aload_0\n         16: iload_1\n         17: iconst_1\n         18: iadd\n-        19: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        19: invokevirtual #159                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 991: 0\n         line 992: 4\n         line 994: 6\n         line 995: 10\n         line 996: 15\n@@ -1959,29 +1959,29 @@\n \n   private static void failIfNullBytePresent(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method java/lang/String.length:()I\n+         1: invokevirtual #21                 // Method java/lang/String.length:()I\n          4: istore_1\n          5: iconst_0\n          6: istore_2\n          7: iload_2\n          8: iload_1\n          9: if_icmpge     36\n         12: aload_0\n         13: iload_2\n-        14: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+        14: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n         17: ifne          30\n-        20: new           #22                 // class java/lang/IllegalArgumentException\n+        20: new           #75                 // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #47                 // String Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-        26: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #162                // String Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+        26: invokespecial #79                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: iinc          2, 1\n         33: goto          7\n         36: return\n       LineNumberTable:\n         line 1006: 0\n         line 1007: 5\n@@ -1999,42 +1999,42 @@\n \n   public static java.lang.String getBaseName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #48                 // Method getName:(Ljava/lang/String;)Ljava/lang/String;\n-         4: invokestatic  #49                 // Method removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+         1: invokestatic  #164                // Method getName:(Ljava/lang/String;)Ljava/lang/String;\n+         4: invokestatic  #167                // Method removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 1034: 0\n \n   public static java.lang.String getExtension(java.lang.String) throws java.lang.IllegalArgumentException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #50                 // Method indexOfExtension:(Ljava/lang/String;)I\n+         7: invokestatic  #170                // Method indexOfExtension:(Ljava/lang/String;)I\n         10: istore_1\n         11: iload_1\n         12: iconst_m1\n         13: if_icmpne     19\n-        16: ldc           #11                 // String\n+        16: ldc           #44                 // String\n         18: areturn\n         19: aload_0\n         20: iload_1\n         21: iconst_1\n         22: iadd\n-        23: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        23: invokevirtual #159                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         26: areturn\n       LineNumberTable:\n         line 1066: 0\n         line 1067: 4\n         line 1069: 6\n         line 1070: 11\n         line 1071: 16\n@@ -2049,20 +2049,20 @@\n \n   private static int getAdsCriticalOffset(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n-         4: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n+         4: invokevirtual #134                // Method java/lang/String.lastIndexOf:(I)I\n          7: istore_1\n          8: aload_0\n-         9: getstatic     #9                  // Field OTHER_SEPARATOR:C\n-        12: invokevirtual #38                 // Method java/lang/String.lastIndexOf:(I)I\n+         9: getstatic     #35                 // Field OTHER_SEPARATOR:C\n+        12: invokevirtual #134                // Method java/lang/String.lastIndexOf:(I)I\n         15: istore_2\n         16: iload_1\n         17: iconst_m1\n         18: if_icmpne     32\n         21: iload_2\n         22: iconst_m1\n         23: if_icmpne     28\n@@ -2077,15 +2077,15 @@\n         34: if_icmpne     41\n         37: iload_1\n         38: iconst_1\n         39: iadd\n         40: ireturn\n         41: iload_1\n         42: iload_2\n-        43: invokestatic  #39                 // Method java/lang/Math.max:(II)I\n+        43: invokestatic  #137                // Method java/lang/Math.max:(II)I\n         46: iconst_1\n         47: iadd\n         48: ireturn\n       LineNumberTable:\n         line 1084: 0\n         line 1085: 8\n         line 1086: 16\n@@ -2108,27 +2108,27 @@\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokestatic  #50                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        11: invokestatic  #170                // Method indexOfExtension:(Ljava/lang/String;)I\n         14: istore_1\n         15: iload_1\n         16: iconst_m1\n         17: if_icmpne     22\n         20: aload_0\n         21: areturn\n         22: aload_0\n         23: iconst_0\n         24: iload_1\n-        25: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        25: invokevirtual #126                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         28: areturn\n       LineNumberTable:\n         line 1117: 0\n         line 1118: 4\n         line 1120: 6\n         line 1122: 10\n         line 1123: 15\n@@ -2144,58 +2144,58 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: getstatic     #51                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #52                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #173                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #176                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1142: 0\n \n   public static boolean equalsOnSystem(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: getstatic     #25                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #52                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #81                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #176                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1157: 0\n \n   public static boolean equalsNormalized(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: getstatic     #51                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #52                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #173                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #176                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1173: 0\n \n   public static boolean equalsNormalizedOnSystem(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: getstatic     #25                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #52                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #81                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #176                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1190: 0\n \n   public static boolean equals(java.lang.String, java.lang.String, boolean, org.apache.commons.io.IOCase);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -2212,35 +2212,35 @@\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n         22: iload_2\n         23: ifeq          50\n         26: aload_0\n-        27: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        27: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         30: astore_0\n         31: aload_1\n-        32: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        32: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         35: astore_1\n         36: aload_0\n-        37: ldc           #53                 // String Error normalizing one or both of the file names\n-        39: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        37: ldc           #180                // String Error normalizing one or both of the file names\n+        39: invokestatic  #182                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         42: pop\n         43: aload_1\n-        44: ldc           #53                 // String Error normalizing one or both of the file names\n-        46: invokestatic  #54                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        44: ldc           #180                // String Error normalizing one or both of the file names\n+        46: invokestatic  #182                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         49: pop\n         50: aload_3\n         51: ifnonnull     58\n-        54: getstatic     #51                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+        54: getstatic     #173                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         57: astore_3\n         58: aload_3\n         59: aload_0\n         60: aload_1\n-        61: invokevirtual #26                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+        61: invokevirtual #87                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n         64: ireturn\n       LineNumberTable:\n         line 1208: 0\n         line 1209: 8\n         line 1211: 22\n         line 1212: 26\n         line 1213: 31\n@@ -2264,34 +2264,34 @@\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        21\n         14: aload_1\n-        15: invokevirtual #55                 // Method java/lang/String.isEmpty:()Z\n+        15: invokevirtual #188                // Method java/lang/String.isEmpty:()Z\n         18: ifeq          35\n         21: aload_0\n-        22: invokestatic  #50                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        22: invokestatic  #170                // Method indexOfExtension:(Ljava/lang/String;)I\n         25: iconst_m1\n         26: if_icmpne     33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n         34: ireturn\n         35: aload_0\n-        36: invokestatic  #56                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokestatic  #191                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         39: astore_2\n         40: aload_2\n         41: aload_1\n-        42: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        42: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         45: ireturn\n       LineNumberTable:\n         line 1237: 0\n         line 1238: 4\n         line 1240: 6\n         line 1242: 10\n         line 1243: 21\n@@ -2311,30 +2311,30 @@\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        19\n         14: aload_1\n         15: arraylength\n         16: ifne          33\n         19: aload_0\n-        20: invokestatic  #50                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        20: invokestatic  #170                // Method indexOfExtension:(Ljava/lang/String;)I\n         23: iconst_m1\n         24: if_icmpne     31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: ireturn\n         33: aload_0\n-        34: invokestatic  #56                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        34: invokestatic  #191                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         37: astore_2\n         38: aload_1\n         39: astore_3\n         40: aload_3\n         41: arraylength\n         42: istore        4\n         44: iconst_0\n@@ -2344,15 +2344,15 @@\n         51: if_icmpge     77\n         54: aload_3\n         55: iload         5\n         57: aaload\n         58: astore        6\n         60: aload_2\n         61: aload         6\n-        63: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        63: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         66: ifeq          71\n         69: iconst_1\n         70: ireturn\n         71: iinc          5, 1\n         74: goto          47\n         77: iconst_0\n         78: ireturn\n@@ -2389,44 +2389,44 @@\n     Code:\n       stack=2, locals=5, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method failIfNullBytePresent:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method failIfNullBytePresent:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        23\n         14: aload_1\n-        15: invokeinterface #58,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z\n+        15: invokeinterface #197,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z\n         20: ifeq          37\n         23: aload_0\n-        24: invokestatic  #50                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        24: invokestatic  #170                // Method indexOfExtension:(Ljava/lang/String;)I\n         27: iconst_m1\n         28: if_icmpne     35\n         31: iconst_1\n         32: goto          36\n         35: iconst_0\n         36: ireturn\n         37: aload_0\n-        38: invokestatic  #56                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        38: invokestatic  #191                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         41: astore_2\n         42: aload_1\n-        43: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        43: invokeinterface #200,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         48: astore_3\n         49: aload_3\n-        50: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        50: invokeinterface #204,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         55: ifeq          83\n         58: aload_3\n-        59: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        64: checkcast     #12                 // class java/lang/String\n+        59: invokeinterface #209,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        64: checkcast     #22                 // class java/lang/String\n         67: astore        4\n         69: aload_2\n         70: aload         4\n-        72: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        72: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         75: ifeq          80\n         78: iconst_1\n         79: ireturn\n         80: goto          49\n         83: iconst_0\n         84: ireturn\n       LineNumberTable:\n@@ -2450,38 +2450,38 @@\n         frame_type = 0 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 11\n           locals = [ class java/lang/String, class java/util/Iterator ]\n         frame_type = 30 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #205                         // (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n+    Signature: #430                         // (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n \n   public static boolean wildcardMatch(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #51                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         5: invokestatic  #62                 // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+         2: getstatic     #173                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         5: invokestatic  #213                // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n          8: ireturn\n       LineNumberTable:\n         line 1333: 0\n \n   public static boolean wildcardMatchOnSystem(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #25                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         5: invokestatic  #62                 // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+         2: getstatic     #81                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         5: invokestatic  #213                // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n          8: ireturn\n       LineNumberTable:\n         line 1359: 0\n \n   public static boolean wildcardMatch(java.lang.String, java.lang.String, org.apache.commons.io.IOCase);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -2497,37 +2497,37 @@\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_2\n         21: ifnonnull     28\n-        24: getstatic     #51                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+        24: getstatic     #173                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         27: astore_2\n         28: aload_1\n-        29: invokestatic  #63                 // Method splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+        29: invokestatic  #217                // Method splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n         32: astore_3\n         33: iconst_0\n         34: istore        4\n         36: iconst_0\n         37: istore        5\n         39: iconst_0\n         40: istore        6\n-        42: new           #64                 // class java/util/ArrayDeque\n+        42: new           #221                // class java/util/ArrayDeque\n         45: dup\n         46: aload_3\n         47: arraylength\n-        48: invokespecial #65                 // Method java/util/ArrayDeque.\"<init>\":(I)V\n+        48: invokespecial #223                // Method java/util/ArrayDeque.\"<init>\":(I)V\n         51: astore        7\n         53: aload         7\n-        55: invokeinterface #66,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z\n+        55: invokeinterface #226,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z\n         60: ifne          90\n         63: aload         7\n-        65: invokeinterface #67,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n-        70: checkcast     #68                 // class \"[I\"\n+        65: invokeinterface #229,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n+        70: checkcast     #232                // class \"[I\"\n         73: astore        8\n         75: aload         8\n         77: iconst_0\n         78: iaload\n         79: istore        6\n         81: aload         8\n         83: iconst_1\n@@ -2538,115 +2538,115 @@\n         90: iload         6\n         92: aload_3\n         93: arraylength\n         94: if_icmpge     271\n         97: aload_3\n         98: iload         6\n        100: aaload\n-       101: ldc           #69                 // String ?\n-       103: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       101: ldc           #234                // String ?\n+       103: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        106: ifeq          130\n        109: iinc          5, 1\n        112: iload         5\n        114: aload_0\n-       115: invokevirtual #6                  // Method java/lang/String.length:()I\n+       115: invokevirtual #21                 // Method java/lang/String.length:()I\n        118: if_icmple     124\n        121: goto          271\n        124: iconst_0\n        125: istore        4\n        127: goto          265\n        130: aload_3\n        131: iload         6\n        133: aaload\n-       134: ldc           #70                 // String *\n-       136: invokevirtual #57                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       134: ldc           #236                // String *\n+       136: invokevirtual #194                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        139: ifeq          163\n        142: iconst_1\n        143: istore        4\n        145: iload         6\n        147: aload_3\n        148: arraylength\n        149: iconst_1\n        150: isub\n        151: if_icmpne     265\n        154: aload_0\n-       155: invokevirtual #6                  // Method java/lang/String.length:()I\n+       155: invokevirtual #21                 // Method java/lang/String.length:()I\n        158: istore        5\n        160: goto          265\n        163: iload         4\n        165: ifeq          233\n        168: aload_2\n        169: aload_0\n        170: iload         5\n        172: aload_3\n        173: iload         6\n        175: aaload\n-       176: invokevirtual #71                 // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+       176: invokevirtual #238                // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n        179: istore        5\n        181: iload         5\n        183: iconst_m1\n        184: if_icmpne     190\n        187: goto          271\n        190: aload_2\n        191: aload_0\n        192: iload         5\n        194: iconst_1\n        195: iadd\n        196: aload_3\n        197: iload         6\n        199: aaload\n-       200: invokevirtual #71                 // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+       200: invokevirtual #238                // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n        203: istore        8\n        205: iload         8\n        207: iflt          230\n        210: aload         7\n        212: iconst_2\n        213: newarray       int\n        215: dup\n        216: iconst_0\n        217: iload         6\n        219: iastore\n        220: dup\n        221: iconst_1\n        222: iload         8\n        224: iastore\n-       225: invokeinterface #72,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n+       225: invokeinterface #242,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n        230: goto          250\n        233: aload_2\n        234: aload_0\n        235: iload         5\n        237: aload_3\n        238: iload         6\n        240: aaload\n-       241: invokevirtual #73                 // Method org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+       241: invokevirtual #246                // Method org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n        244: ifne          250\n        247: goto          271\n        250: iload         5\n        252: aload_3\n        253: iload         6\n        255: aaload\n-       256: invokevirtual #6                  // Method java/lang/String.length:()I\n+       256: invokevirtual #21                 // Method java/lang/String.length:()I\n        259: iadd\n        260: istore        5\n        262: iconst_0\n        263: istore        4\n        265: iinc          6, 1\n        268: goto          90\n        271: iload         6\n        273: aload_3\n        274: arraylength\n        275: if_icmpne     289\n        278: iload         5\n        280: aload_0\n-       281: invokevirtual #6                  // Method java/lang/String.length:()I\n+       281: invokevirtual #21                 // Method java/lang/String.length:()I\n        284: if_icmpne     289\n        287: iconst_1\n        288: ireturn\n        289: aload         7\n-       291: invokeinterface #66,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z\n+       291: invokeinterface #226,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z\n        296: ifeq          53\n        299: iconst_0\n        300: ireturn\n       LineNumberTable:\n         line 1377: 0\n         line 1378: 8\n         line 1380: 10\n@@ -2714,39 +2714,39 @@\n   static java.lang.String[] splitOnTokens(java.lang.String);\n     descriptor: (Ljava/lang/String;)[Ljava/lang/String;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=1\n          0: aload_0\n          1: bipush        63\n-         3: invokevirtual #28                 // Method java/lang/String.indexOf:(I)I\n+         3: invokevirtual #94                 // Method java/lang/String.indexOf:(I)I\n          6: iconst_m1\n          7: if_icmpne     29\n         10: aload_0\n         11: bipush        42\n-        13: invokevirtual #28                 // Method java/lang/String.indexOf:(I)I\n+        13: invokevirtual #94                 // Method java/lang/String.indexOf:(I)I\n         16: iconst_m1\n         17: if_icmpne     29\n         20: iconst_1\n-        21: anewarray     #12                 // class java/lang/String\n+        21: anewarray     #22                 // class java/lang/String\n         24: dup\n         25: iconst_0\n         26: aload_0\n         27: aastore\n         28: areturn\n         29: aload_0\n-        30: invokevirtual #74                 // Method java/lang/String.toCharArray:()[C\n+        30: invokevirtual #250                // Method java/lang/String.toCharArray:()[C\n         33: astore_1\n-        34: new           #75                 // class java/util/ArrayList\n+        34: new           #254                // class java/util/ArrayList\n         37: dup\n-        38: invokespecial #76                 // Method java/util/ArrayList.\"<init>\":()V\n+        38: invokespecial #256                // Method java/util/ArrayList.\"<init>\":()V\n         41: astore_2\n-        42: new           #17                 // class java/lang/StringBuilder\n+        42: new           #61                 // class java/lang/StringBuilder\n         45: dup\n-        46: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        46: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         49: astore_3\n         50: iconst_0\n         51: istore        4\n         53: aload_1\n         54: astore        5\n         56: aload         5\n         58: arraylength\n@@ -2763,60 +2763,60 @@\n         78: iload         8\n         80: bipush        63\n         82: if_icmpeq     92\n         85: iload         8\n         87: bipush        42\n         89: if_icmpne     147\n         92: aload_3\n-        93: invokevirtual #77                 // Method java/lang/StringBuilder.length:()I\n+        93: invokevirtual #257                // Method java/lang/StringBuilder.length:()I\n         96: ifeq          113\n         99: aload_2\n        100: aload_3\n-       101: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       104: invokevirtual #78                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       101: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #258                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        107: pop\n        108: aload_3\n        109: iconst_0\n-       110: invokevirtual #79                 // Method java/lang/StringBuilder.setLength:(I)V\n+       110: invokevirtual #261                // Method java/lang/StringBuilder.setLength:(I)V\n        113: iload         8\n        115: bipush        63\n        117: if_icmpne     130\n        120: aload_2\n-       121: ldc           #69                 // String ?\n-       123: invokevirtual #78                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       121: ldc           #234                // String ?\n+       123: invokevirtual #258                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        126: pop\n        127: goto          154\n        130: iload         4\n        132: bipush        42\n        134: if_icmpeq     154\n        137: aload_2\n-       138: ldc           #70                 // String *\n-       140: invokevirtual #78                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       138: ldc           #236                // String *\n+       140: invokevirtual #258                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        143: pop\n        144: goto          154\n        147: aload_3\n        148: iload         8\n-       150: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       150: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        153: pop\n        154: iload         8\n        156: istore        4\n        158: iinc          7, 1\n        161: goto          64\n        164: aload_3\n-       165: invokevirtual #77                 // Method java/lang/StringBuilder.length:()I\n+       165: invokevirtual #257                // Method java/lang/StringBuilder.length:()I\n        168: ifeq          180\n        171: aload_2\n        172: aload_3\n-       173: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       176: invokevirtual #78                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       173: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       176: invokevirtual #258                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        179: pop\n        180: aload_2\n-       181: getstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-       184: invokevirtual #81                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       187: checkcast     #82                 // class \"[Ljava/lang/String;\"\n+       181: getstatic     #264                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+       184: invokevirtual #268                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       187: checkcast     #272                // class \"[Ljava/lang/String;\"\n        190: areturn\n       LineNumberTable:\n         line 1470: 0\n         line 1471: 20\n         line 1474: 29\n         line 1475: 34\n         line 1476: 42\n@@ -2857,18 +2857,18 @@\n \n   private static boolean isValidHostName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method isIPv6Address:(Ljava/lang/String;)Z\n+         1: invokestatic  #273                // Method isIPv6Address:(Ljava/lang/String;)Z\n          4: ifne          14\n          7: aload_0\n-         8: invokestatic  #84                 // Method isRFC3986HostName:(Ljava/lang/String;)Z\n+         8: invokestatic  #276                // Method isRFC3986HostName:(Ljava/lang/String;)Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1514: 0\n@@ -2879,323 +2879,323 @@\n           stack = [ int ]\n \n   private static boolean isIPv4Address(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=1\n-         0: getstatic     #85                 // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n+         0: getstatic     #279                // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n          3: aload_0\n-         4: invokevirtual #86                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         4: invokevirtual #283                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n          7: astore_1\n          8: aload_1\n-         9: invokevirtual #87                 // Method java/util/regex/Matcher.matches:()Z\n+         9: invokevirtual #289                // Method java/util/regex/Matcher.matches:()Z\n         12: ifeq          23\n         15: aload_1\n-        16: invokevirtual #88                 // Method java/util/regex/Matcher.groupCount:()I\n+        16: invokevirtual #294                // Method java/util/regex/Matcher.groupCount:()I\n         19: iconst_4\n         20: if_icmpeq     25\n         23: iconst_0\n         24: ireturn\n         25: iconst_1\n         26: istore_2\n         27: iload_2\n         28: iconst_4\n-        29: if_icmpgt     79\n+        29: if_icmpgt     80\n         32: aload_1\n         33: iload_2\n-        34: invokevirtual #89                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        34: invokevirtual #297                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n         37: astore_3\n         38: aload_3\n-        39: invokestatic  #90                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        39: invokestatic  #300                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         42: istore        4\n         44: iload         4\n         46: sipush        255\n         49: if_icmple     54\n         52: iconst_0\n         53: ireturn\n         54: aload_3\n-        55: invokevirtual #6                  // Method java/lang/String.length:()I\n+        55: invokevirtual #21                 // Method java/lang/String.length:()I\n         58: iconst_1\n-        59: if_icmple     73\n+        59: if_icmple     74\n         62: aload_3\n-        63: ldc           #91                 // String 0\n-        65: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        68: ifeq          73\n-        71: iconst_0\n-        72: ireturn\n-        73: iinc          2, 1\n-        76: goto          27\n-        79: iconst_1\n-        80: ireturn\n+        63: ldc_w         #305                // String 0\n+        66: invokevirtual #307                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        69: ifeq          74\n+        72: iconst_0\n+        73: ireturn\n+        74: iinc          2, 1\n+        77: goto          27\n+        80: iconst_1\n+        81: ireturn\n       LineNumberTable:\n         line 1529: 0\n         line 1530: 8\n         line 1531: 23\n         line 1535: 25\n         line 1536: 32\n         line 1537: 38\n         line 1538: 44\n         line 1539: 52\n         line 1542: 54\n-        line 1543: 71\n-        line 1535: 73\n-        line 1548: 79\n+        line 1543: 72\n+        line 1535: 74\n+        line 1548: 80\n       StackMapTable: number_of_entries = 6\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/util/regex/Matcher ]\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 1\n           locals = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 26\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n-          offset_delta = 18\n+          offset_delta = 19\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   private static boolean isIPv6Address(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: ldc           #93                 // String ::\n-         3: invokevirtual #94                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-         6: istore_1\n-         7: iload_1\n-         8: ifeq          28\n-        11: aload_0\n-        12: ldc           #93                 // String ::\n-        14: invokevirtual #95                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n-        17: aload_0\n-        18: ldc           #93                 // String ::\n-        20: invokevirtual #96                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-        23: if_icmpeq     28\n-        26: iconst_0\n-        27: ireturn\n-        28: aload_0\n-        29: ldc           #97                 // String :\n-        31: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        34: ifeq          46\n-        37: aload_0\n-        38: ldc           #93                 // String ::\n-        40: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        43: ifeq          64\n-        46: aload_0\n-        47: ldc           #97                 // String :\n-        49: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        52: ifeq          66\n-        55: aload_0\n-        56: ldc           #93                 // String ::\n-        58: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        61: ifne          66\n-        64: iconst_0\n-        65: ireturn\n-        66: aload_0\n-        67: ldc           #97                 // String :\n-        69: invokevirtual #99                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-        72: astore_2\n-        73: iload_1\n-        74: ifeq          149\n-        77: new           #75                 // class java/util/ArrayList\n-        80: dup\n-        81: aload_2\n-        82: invokestatic  #100                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        85: invokespecial #101                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-        88: astore_3\n-        89: aload_0\n-        90: ldc           #93                 // String ::\n-        92: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        95: ifeq          110\n-        98: aload_3\n-        99: ldc           #11                 // String\n-       101: invokeinterface #102,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-       106: pop\n-       107: goto          136\n-       110: aload_0\n-       111: ldc           #93                 // String ::\n-       113: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-       116: ifeq          136\n-       119: aload_3\n-       120: invokeinterface #103,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n-       125: ifne          136\n-       128: aload_3\n-       129: iconst_0\n-       130: invokeinterface #104,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n-       135: pop\n-       136: aload_3\n-       137: getstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-       140: invokeinterface #105,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       145: checkcast     #82                 // class \"[Ljava/lang/String;\"\n-       148: astore_2\n-       149: aload_2\n-       150: arraylength\n-       151: bipush        8\n-       153: if_icmple     158\n-       156: iconst_0\n-       157: ireturn\n-       158: iconst_0\n-       159: istore_3\n-       160: iconst_0\n-       161: istore        4\n-       163: iconst_0\n-       164: istore        5\n-       166: iload         5\n-       168: aload_2\n-       169: arraylength\n-       170: if_icmpge     289\n-       173: aload_2\n-       174: iload         5\n-       176: aaload\n-       177: astore        6\n-       179: aload         6\n-       181: invokevirtual #6                  // Method java/lang/String.length:()I\n-       184: ifne          198\n-       187: iinc          4, 1\n-       190: iload         4\n-       192: iconst_1\n-       193: if_icmple     280\n-       196: iconst_0\n-       197: ireturn\n-       198: iconst_0\n-       199: istore        4\n-       201: iload         5\n-       203: aload_2\n-       204: arraylength\n-       205: iconst_1\n-       206: isub\n-       207: if_icmpne     236\n-       210: aload         6\n-       212: ldc           #106                // String .\n-       214: invokevirtual #94                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-       217: ifeq          236\n+         1: ldc_w         #310                // String ::\n+         4: invokevirtual #312                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+         7: istore_1\n+         8: iload_1\n+         9: ifeq          31\n+        12: aload_0\n+        13: ldc_w         #310                // String ::\n+        16: invokevirtual #316                // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        19: aload_0\n+        20: ldc_w         #310                // String ::\n+        23: invokevirtual #318                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+        26: if_icmpeq     31\n+        29: iconst_0\n+        30: ireturn\n+        31: aload_0\n+        32: ldc_w         #320                // String :\n+        35: invokevirtual #307                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        38: ifeq          51\n+        41: aload_0\n+        42: ldc_w         #310                // String ::\n+        45: invokevirtual #307                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        48: ifeq          71\n+        51: aload_0\n+        52: ldc_w         #320                // String :\n+        55: invokevirtual #322                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        58: ifeq          73\n+        61: aload_0\n+        62: ldc_w         #310                // String ::\n+        65: invokevirtual #322                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        68: ifne          73\n+        71: iconst_0\n+        72: ireturn\n+        73: aload_0\n+        74: ldc_w         #320                // String :\n+        77: invokevirtual #325                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+        80: astore_2\n+        81: iload_1\n+        82: ifeq          159\n+        85: new           #254                // class java/util/ArrayList\n+        88: dup\n+        89: aload_2\n+        90: invokestatic  #328                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        93: invokespecial #334                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        96: astore_3\n+        97: aload_0\n+        98: ldc_w         #310                // String ::\n+       101: invokevirtual #322                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       104: ifeq          119\n+       107: aload_3\n+       108: ldc           #44                 // String\n+       110: invokeinterface #337,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       115: pop\n+       116: goto          146\n+       119: aload_0\n+       120: ldc_w         #310                // String ::\n+       123: invokevirtual #307                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+       126: ifeq          146\n+       129: aload_3\n+       130: invokeinterface #340,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n+       135: ifne          146\n+       138: aload_3\n+       139: iconst_0\n+       140: invokeinterface #341,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n+       145: pop\n+       146: aload_3\n+       147: getstatic     #264                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+       150: invokeinterface #345,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       155: checkcast     #272                // class \"[Ljava/lang/String;\"\n+       158: astore_2\n+       159: aload_2\n+       160: arraylength\n+       161: bipush        8\n+       163: if_icmple     168\n+       166: iconst_0\n+       167: ireturn\n+       168: iconst_0\n+       169: istore_3\n+       170: iconst_0\n+       171: istore        4\n+       173: iconst_0\n+       174: istore        5\n+       176: iload         5\n+       178: aload_2\n+       179: arraylength\n+       180: if_icmpge     301\n+       183: aload_2\n+       184: iload         5\n+       186: aaload\n+       187: astore        6\n+       189: aload         6\n+       191: invokevirtual #21                 // Method java/lang/String.length:()I\n+       194: ifne          208\n+       197: iinc          4, 1\n+       200: iload         4\n+       202: iconst_1\n+       203: if_icmple     292\n+       206: iconst_0\n+       207: ireturn\n+       208: iconst_0\n+       209: istore        4\n+       211: iload         5\n+       213: aload_2\n+       214: arraylength\n+       215: iconst_1\n+       216: isub\n+       217: if_icmpne     247\n        220: aload         6\n-       222: invokestatic  #107                // Method isIPv4Address:(Ljava/lang/String;)Z\n-       225: ifne          230\n-       228: iconst_0\n-       229: ireturn\n-       230: iinc          3, 2\n-       233: goto          283\n-       236: aload         6\n-       238: invokevirtual #6                  // Method java/lang/String.length:()I\n-       241: iconst_4\n-       242: if_icmple     247\n-       245: iconst_0\n-       246: ireturn\n-       247: iconst_0\n-       248: istore        7\n-       250: aload         6\n-       252: bipush        16\n-       254: invokestatic  #108                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-       257: istore        7\n-       259: goto          266\n-       262: astore        8\n-       264: iconst_0\n-       265: ireturn\n-       266: iload         7\n-       268: iflt          278\n-       271: iload         7\n-       273: ldc           #110                // int 65535\n-       275: if_icmple     280\n-       278: iconst_0\n-       279: ireturn\n-       280: iinc          3, 1\n-       283: iinc          5, 1\n-       286: goto          166\n-       289: iload_3\n-       290: bipush        8\n-       292: if_icmpgt     309\n-       295: iload_3\n-       296: bipush        8\n-       298: if_icmpge     305\n-       301: iload_1\n-       302: ifeq          309\n-       305: iconst_1\n-       306: goto          310\n-       309: iconst_0\n-       310: ireturn\n+       222: ldc_w         #346                // String .\n+       225: invokevirtual #312                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+       228: ifeq          247\n+       231: aload         6\n+       233: invokestatic  #348                // Method isIPv4Address:(Ljava/lang/String;)Z\n+       236: ifne          241\n+       239: iconst_0\n+       240: ireturn\n+       241: iinc          3, 2\n+       244: goto          295\n+       247: aload         6\n+       249: invokevirtual #21                 // Method java/lang/String.length:()I\n+       252: iconst_4\n+       253: if_icmple     258\n+       256: iconst_0\n+       257: ireturn\n+       258: iconst_0\n+       259: istore        7\n+       261: aload         6\n+       263: bipush        16\n+       265: invokestatic  #351                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+       268: istore        7\n+       270: goto          277\n+       273: astore        8\n+       275: iconst_0\n+       276: ireturn\n+       277: iload         7\n+       279: iflt          290\n+       282: iload         7\n+       284: ldc_w         #356                // int 65535\n+       287: if_icmple     292\n+       290: iconst_0\n+       291: ireturn\n+       292: iinc          3, 1\n+       295: iinc          5, 1\n+       298: goto          176\n+       301: iload_3\n+       302: bipush        8\n+       304: if_icmpgt     321\n+       307: iload_3\n+       308: bipush        8\n+       310: if_icmpge     317\n+       313: iload_1\n+       314: ifeq          321\n+       317: iconst_1\n+       318: goto          322\n+       321: iconst_0\n+       322: ireturn\n       Exception table:\n          from    to  target type\n-           250   259   262   Class java/lang/NumberFormatException\n+           261   270   273   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 1564: 0\n-        line 1565: 7\n-        line 1566: 26\n-        line 1568: 28\n-        line 1569: 49\n-        line 1570: 64\n-        line 1572: 66\n-        line 1573: 73\n-        line 1574: 77\n-        line 1575: 89\n-        line 1577: 98\n-        line 1578: 110\n-        line 1579: 128\n-        line 1581: 136\n-        line 1583: 149\n-        line 1584: 156\n-        line 1586: 158\n-        line 1587: 160\n-        line 1588: 163\n-        line 1589: 173\n-        line 1590: 179\n-        line 1591: 187\n-        line 1592: 190\n-        line 1593: 196\n-        line 1596: 198\n-        line 1598: 201\n-        line 1599: 220\n-        line 1600: 228\n-        line 1602: 230\n-        line 1603: 233\n-        line 1605: 236\n-        line 1606: 245\n-        line 1608: 247\n-        line 1610: 250\n-        line 1613: 259\n-        line 1611: 262\n-        line 1612: 264\n-        line 1614: 266\n-        line 1615: 278\n-        line 1618: 280\n-        line 1588: 283\n-        line 1620: 289\n+        line 1565: 8\n+        line 1566: 29\n+        line 1568: 31\n+        line 1569: 55\n+        line 1570: 71\n+        line 1572: 73\n+        line 1573: 81\n+        line 1574: 85\n+        line 1575: 97\n+        line 1577: 107\n+        line 1578: 119\n+        line 1579: 138\n+        line 1581: 146\n+        line 1583: 159\n+        line 1584: 166\n+        line 1586: 168\n+        line 1587: 170\n+        line 1588: 173\n+        line 1589: 183\n+        line 1590: 189\n+        line 1591: 197\n+        line 1592: 200\n+        line 1593: 206\n+        line 1596: 208\n+        line 1598: 211\n+        line 1599: 231\n+        line 1600: 239\n+        line 1602: 241\n+        line 1603: 244\n+        line 1605: 247\n+        line 1606: 256\n+        line 1608: 258\n+        line 1610: 261\n+        line 1613: 270\n+        line 1611: 273\n+        line 1612: 275\n+        line 1614: 277\n+        line 1615: 290\n+        line 1618: 292\n+        line 1588: 295\n+        line 1620: 301\n       StackMapTable: number_of_entries = 22\n         frame_type = 252 /* append */\n-          offset_delta = 28\n+          offset_delta = 31\n           locals = [ int ]\n-        frame_type = 17 /* same */\n-        frame_type = 17 /* same */\n+        frame_type = 19 /* same */\n+        frame_type = 19 /* same */\n         frame_type = 1 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 43\n+          offset_delta = 45\n           locals = [ class \"[Ljava/lang/String;\", class java/util/List ]\n-        frame_type = 25 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 12\n         frame_type = 8 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 7\n           locals = [ int, int, int ]\n         frame_type = 252 /* append */\n           offset_delta = 31\n           locals = [ class java/lang/String ]\n-        frame_type = 31 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 5 /* same */\n         frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 14\n           locals = [ class java/lang/String, int, class \"[Ljava/lang/String;\", int, int, int, class java/lang/String, int ]\n           stack = [ class java/lang/NumberFormatException ]\n         frame_type = 3 /* same */\n-        frame_type = 11 /* same */\n+        frame_type = 12 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 1\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 5\n         frame_type = 15 /* same */\n@@ -3205,64 +3205,64 @@\n \n   private static boolean isRFC3986HostName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: ldc           #111                // String \\\\.\n-         3: iconst_m1\n-         4: invokevirtual #112                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-         7: astore_1\n-         8: iconst_0\n-         9: istore_2\n-        10: iload_2\n-        11: aload_1\n-        12: arraylength\n-        13: if_icmpge     62\n-        16: aload_1\n-        17: iload_2\n-        18: aaload\n-        19: invokevirtual #6                  // Method java/lang/String.length:()I\n-        22: ifne          39\n-        25: iload_2\n-        26: aload_1\n-        27: arraylength\n-        28: iconst_1\n-        29: isub\n-        30: if_icmpne     37\n-        33: iconst_1\n-        34: goto          38\n-        37: iconst_0\n-        38: ireturn\n-        39: getstatic     #113                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-        42: aload_1\n-        43: iload_2\n-        44: aaload\n-        45: invokevirtual #86                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        48: invokevirtual #87                 // Method java/util/regex/Matcher.matches:()Z\n-        51: ifne          56\n-        54: iconst_0\n-        55: ireturn\n-        56: iinc          2, 1\n-        59: goto          10\n-        62: iconst_1\n-        63: ireturn\n+         1: ldc_w         #357                // String \\\\.\n+         4: iconst_m1\n+         5: invokevirtual #359                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+         8: astore_1\n+         9: iconst_0\n+        10: istore_2\n+        11: iload_2\n+        12: aload_1\n+        13: arraylength\n+        14: if_icmpge     63\n+        17: aload_1\n+        18: iload_2\n+        19: aaload\n+        20: invokevirtual #21                 // Method java/lang/String.length:()I\n+        23: ifne          40\n+        26: iload_2\n+        27: aload_1\n+        28: arraylength\n+        29: iconst_1\n+        30: isub\n+        31: if_icmpne     38\n+        34: iconst_1\n+        35: goto          39\n+        38: iconst_0\n+        39: ireturn\n+        40: getstatic     #362                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+        43: aload_1\n+        44: iload_2\n+        45: aaload\n+        46: invokevirtual #283                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        49: invokevirtual #289                // Method java/util/regex/Matcher.matches:()Z\n+        52: ifne          57\n+        55: iconst_0\n+        56: ireturn\n+        57: iinc          2, 1\n+        60: goto          11\n+        63: iconst_1\n+        64: ireturn\n       LineNumberTable:\n         line 1634: 0\n-        line 1635: 8\n-        line 1636: 16\n-        line 1638: 25\n-        line 1640: 39\n-        line 1641: 54\n-        line 1635: 56\n-        line 1644: 62\n+        line 1635: 9\n+        line 1636: 17\n+        line 1638: 26\n+        line 1640: 40\n+        line 1641: 55\n+        line 1635: 57\n+        line 1644: 63\n       StackMapTable: number_of_entries = 6\n         frame_type = 253 /* append */\n-          offset_delta = 10\n+          offset_delta = 11\n           locals = [ class \"[Ljava/lang/String;\", int ]\n         frame_type = 26 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 0 /* same */\n         frame_type = 16 /* same */\n         frame_type = 250 /* chop */\n@@ -3270,43 +3270,43 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #12                 // class java/lang/String\n-         4: putstatic     #80                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         1: anewarray     #22                 // class java/lang/String\n+         4: putstatic     #264                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: bipush        46\n-         9: invokestatic  #114                // Method java/lang/Character.toString:(C)Ljava/lang/String;\n-        12: putstatic     #115                // Field EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-        15: getstatic     #116                // Field java/io/File.separatorChar:C\n-        18: putstatic     #2                  // Field SYSTEM_SEPARATOR:C\n-        21: invokestatic  #30                 // Method isSystemWindows:()Z\n+         9: invokestatic  #365                // Method java/lang/Character.toString:(C)Ljava/lang/String;\n+        12: putstatic     #368                // Field EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+        15: getstatic     #372                // Field java/io/File.separatorChar:C\n+        18: putstatic     #7                  // Field SYSTEM_SEPARATOR:C\n+        21: invokestatic  #102                // Method isSystemWindows:()Z\n         24: ifeq          35\n         27: bipush        47\n-        29: putstatic     #9                  // Field OTHER_SEPARATOR:C\n+        29: putstatic     #35                 // Field OTHER_SEPARATOR:C\n         32: goto          40\n         35: bipush        92\n-        37: putstatic     #9                  // Field OTHER_SEPARATOR:C\n-        40: ldc           #117                // String ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-        42: invokestatic  #118                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        45: putstatic     #85                 // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n-        48: ldc           #119                // String ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-        50: invokestatic  #118                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        53: putstatic     #113                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-        56: return\n+        37: putstatic     #35                 // Field OTHER_SEPARATOR:C\n+        40: ldc_w         #377                // String ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+        43: invokestatic  #379                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        46: putstatic     #279                // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n+        49: ldc_w         #383                // String ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+        52: invokestatic  #379                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        55: putstatic     #362                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+        58: return\n       LineNumberTable:\n         line 90: 0\n         line 106: 7\n         line 121: 15\n         line 128: 21\n         line 129: 27\n         line 131: 35\n         line 1517: 40\n-        line 1518: 42\n-        line 1623: 48\n+        line 1518: 43\n+        line 1623: 49\n       StackMapTable: number_of_entries = 2\n         frame_type = 35 /* same */\n         frame_type = 4 /* same */\n }\n SourceFile: \"FilenameUtils.java\"\n"}]}
