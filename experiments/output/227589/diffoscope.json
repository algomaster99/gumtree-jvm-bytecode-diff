{"diffoscope-json-version": 1, "source1": "first/IntRangeFilterElement.class", "source2": "second/IntRangeFilterElement.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,33 +4,33 @@\n import java.util.Objects;\n \n class IntRangeFilterElement implements IntFilterElement\n {\n     private final Integer lowerBound;\n     private final Integer upperBound;\n     \n-    IntRangeFilterElement(final int lowerBound, final int upperBound) {\n-        this.lowerBound = Integer.valueOf(lowerBound);\n-        this.upperBound = Integer.valueOf(upperBound);\n+    IntRangeFilterElement(final int i, final int j) {\n+        this.lowerBound = Integer.valueOf(i);\n+        this.upperBound = Integer.valueOf(j);\n     }\n     \n-    public boolean accept(final int intValue) {\n-        return this.lowerBound.compareTo(Integer.valueOf(intValue)) <= 0 && this.upperBound.compareTo(Integer.valueOf(intValue)) >= 0;\n+    public boolean accept(final int n) {\n+        return this.lowerBound.compareTo(Integer.valueOf(n)) <= 0 && this.upperBound.compareTo(Integer.valueOf(n)) >= 0;\n     }\n     \n     @Override\n     public int hashCode() {\n         return Objects.hash(this.lowerBound, this.upperBound);\n     }\n     \n     @Override\n-    public boolean equals(final Object other) {\n-        if (this == other) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (other == null || this.getClass() != other.getClass()) {\n+        if (o == null || this.getClass() != o.getClass()) {\n             return false;\n         }\n-        final IntRangeFilterElement intRangeFilter = (IntRangeFilterElement)other;\n-        return Objects.equals(this.lowerBound, intRangeFilter.lowerBound) && Objects.equals(this.upperBound, intRangeFilter.upperBound);\n+        final IntRangeFilterElement intRangeFilterElement = (IntRangeFilterElement)o;\n+        return Objects.equals(this.lowerBound, intRangeFilterElement.lowerBound) && Objects.equals(this.upperBound, intRangeFilterElement.upperBound);\n     }\n }\n"}]}
