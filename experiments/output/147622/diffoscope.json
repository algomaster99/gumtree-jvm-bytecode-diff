{"diffoscope-json-version": 1, "source1": "first/GenericWhitespaceCheck.class", "source2": "second/GenericWhitespaceCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -44,15 +44,15 @@\n             }\n             case 173: {\n                 this.processEnd(ast);\n                 --this.depth;\n                 break;\n             }\n             default: {\n-                throw new IllegalArgumentException(\"Unknown type \" + String.valueOf((Object)ast));\n+                throw new IllegalArgumentException(\"Unknown type \" + ast);\n             }\n         }\n     }\n     \n     private void processEnd(final DetailAST ast) {\n         final int[] line = this.getLineCodePoints(ast.getLineNo() - 1);\n         final int before = ast.getColumnNo() - 1;\n@@ -67,15 +67,15 @@\n             else {\n                 this.processNestedGenerics(ast, line, after);\n             }\n         }\n     }\n     \n     private void processNestedGenerics(final DetailAST ast, final int[] line, final int after) {\n-        final int indexOfAmp = IntStream.range(after, line.length).filter(index -> line[index] == 38).findFirst().orElse(-1);\n+        final int indexOfAmp = IntStream.range(after, line.length).filter(index -> array[index] == 38).findFirst().orElse(-1);\n         if (indexOfAmp >= 1 && containsWhitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after == 0) {\n                 this.log(ast, \"ws.notPreceded\", new Object[] { \"&\" });\n             }\n             else if (indexOfAmp - after != 1) {\n                 this.log(ast, \"ws.followed\", new Object[] { \">\" });\n             }\n"}]}
