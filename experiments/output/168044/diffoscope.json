{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,33 +1,33 @@\n-  SHA-256 checksum aba7070c56d3275314b2a706c8855407ced615734b54d627b8fd87fd3aa06905\n+  SHA-256 checksum 8def0cf5874b6198636d5aadd775f50e5b4d379573e1263be025ff5ba0ffe369\n   Compiled from \"ThresholdingOutputStream.java\"\n public abstract class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #15                         // org/apache/commons/io/output/ThresholdingOutputStream\n   super_class: #16                        // java/io/OutputStream\n   interfaces: 0, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Methodref          #16.#59        // java/io/OutputStream.\"<init>\":()V\n-   #2 = Fieldref           #15.#60        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-   #3 = Methodref          #15.#61        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-   #4 = Methodref          #15.#62        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-   #5 = Methodref          #16.#63        // java/io/OutputStream.write:(I)V\n-   #6 = Fieldref           #15.#64        // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-   #7 = Methodref          #16.#65        // java/io/OutputStream.write:([B)V\n-   #8 = Methodref          #16.#66        // java/io/OutputStream.write:([BII)V\n-   #9 = Methodref          #16.#67        // java/io/OutputStream.flush:()V\n-  #10 = Methodref          #15.#67        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-  #11 = Class              #68            // java/io/IOException\n-  #12 = Methodref          #16.#69        // java/io/OutputStream.close:()V\n-  #13 = Fieldref           #15.#70        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-  #14 = Methodref          #15.#71        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-  #15 = Class              #72            // org/apache/commons/io/output/ThresholdingOutputStream\n-  #16 = Class              #73            // java/io/OutputStream\n+   #1 = Methodref          #16.#58        // java/io/OutputStream.\"<init>\":()V\n+   #2 = Fieldref           #15.#59        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+   #3 = Methodref          #15.#60        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+   #4 = Methodref          #15.#61        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+   #5 = Methodref          #16.#62        // java/io/OutputStream.write:(I)V\n+   #6 = Fieldref           #15.#63        // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+   #7 = Methodref          #16.#64        // java/io/OutputStream.write:([B)V\n+   #8 = Methodref          #16.#65        // java/io/OutputStream.write:([BII)V\n+   #9 = Methodref          #16.#66        // java/io/OutputStream.flush:()V\n+  #10 = Methodref          #15.#66        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+  #11 = Class              #67            // java/io/IOException\n+  #12 = Methodref          #16.#68        // java/io/OutputStream.close:()V\n+  #13 = Fieldref           #15.#69        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+  #14 = Methodref          #15.#70        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+  #15 = Class              #71            // org/apache/commons/io/output/ThresholdingOutputStream\n+  #16 = Class              #72            // java/io/OutputStream\n   #17 = Utf8               threshold\n   #18 = Utf8               I\n   #19 = Utf8               written\n   #20 = Utf8               J\n   #21 = Utf8               thresholdExceeded\n   #22 = Utf8               Z\n   #23 = Utf8               <init>\n@@ -45,46 +45,45 @@\n   #35 = Utf8               ([BII)V\n   #36 = Utf8               off\n   #37 = Utf8               len\n   #38 = Utf8               flush\n   #39 = Utf8               ()V\n   #40 = Utf8               close\n   #41 = Utf8               StackMapTable\n-  #42 = Class              #68            // java/io/IOException\n-  #43 = Utf8               getThreshold\n-  #44 = Utf8               ()I\n-  #45 = Utf8               getByteCount\n-  #46 = Utf8               ()J\n-  #47 = Utf8               isThresholdExceeded\n-  #48 = Utf8               ()Z\n-  #49 = Utf8               checkThreshold\n-  #50 = Utf8               count\n-  #51 = Utf8               resetByteCount\n-  #52 = Utf8               setByteCount\n-  #53 = Utf8               (J)V\n-  #54 = Utf8               getStream\n-  #55 = Utf8               ()Ljava/io/OutputStream;\n-  #56 = Utf8               thresholdReached\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               ThresholdingOutputStream.java\n-  #59 = NameAndType        #23:#39        // \"<init>\":()V\n-  #60 = NameAndType        #17:#18        // threshold:I\n-  #61 = NameAndType        #49:#24        // checkThreshold:(I)V\n-  #62 = NameAndType        #54:#55        // getStream:()Ljava/io/OutputStream;\n-  #63 = NameAndType        #30:#24        // write:(I)V\n-  #64 = NameAndType        #19:#20        // written:J\n-  #65 = NameAndType        #30:#33        // write:([B)V\n-  #66 = NameAndType        #30:#35        // write:([BII)V\n-  #67 = NameAndType        #38:#39        // flush:()V\n-  #68 = Utf8               java/io/IOException\n-  #69 = NameAndType        #40:#39        // close:()V\n-  #70 = NameAndType        #21:#22        // thresholdExceeded:Z\n-  #71 = NameAndType        #56:#39        // thresholdReached:()V\n-  #72 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #73 = Utf8               java/io/OutputStream\n+  #42 = Utf8               getThreshold\n+  #43 = Utf8               ()I\n+  #44 = Utf8               getByteCount\n+  #45 = Utf8               ()J\n+  #46 = Utf8               isThresholdExceeded\n+  #47 = Utf8               ()Z\n+  #48 = Utf8               checkThreshold\n+  #49 = Utf8               count\n+  #50 = Utf8               resetByteCount\n+  #51 = Utf8               setByteCount\n+  #52 = Utf8               (J)V\n+  #53 = Utf8               getStream\n+  #54 = Utf8               ()Ljava/io/OutputStream;\n+  #55 = Utf8               thresholdReached\n+  #56 = Utf8               SourceFile\n+  #57 = Utf8               ThresholdingOutputStream.java\n+  #58 = NameAndType        #23:#39        // \"<init>\":()V\n+  #59 = NameAndType        #17:#18        // threshold:I\n+  #60 = NameAndType        #48:#24        // checkThreshold:(I)V\n+  #61 = NameAndType        #53:#54        // getStream:()Ljava/io/OutputStream;\n+  #62 = NameAndType        #30:#24        // write:(I)V\n+  #63 = NameAndType        #19:#20        // written:J\n+  #64 = NameAndType        #30:#33        // write:([B)V\n+  #65 = NameAndType        #30:#35        // write:([BII)V\n+  #66 = NameAndType        #38:#39        // flush:()V\n+  #67 = Utf8               java/io/IOException\n+  #68 = NameAndType        #40:#39        // close:()V\n+  #69 = NameAndType        #21:#22        // thresholdExceeded:Z\n+  #70 = NameAndType        #55:#39        // thresholdReached:()V\n+  #71 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+  #72 = Utf8               java/io/OutputStream\n {\n   private final int threshold;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long written;\n     descriptor: J\n"}]}
