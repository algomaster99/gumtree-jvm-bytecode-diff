{"diffoscope-json-version": 1, "source1": "first/DoubleMetaphone$DoubleMetaphoneResult.class", "source2": "second/DoubleMetaphone$DoubleMetaphoneResult.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,63 +10,63 @@\n     public DoubleMetaphoneResult(final DoubleMetaphone this$0, final int maxLength) {\n         this.this$0 = this$0;\n         this.primary = new StringBuilder(this.this$0.getMaxCodeLen());\n         this.alternate = new StringBuilder(this.this$0.getMaxCodeLen());\n         this.maxLength = maxLength;\n     }\n     \n-    public void append(final char value) {\n-        this.appendPrimary(value);\n-        this.appendAlternate(value);\n+    public void append(final char c) {\n+        this.appendPrimary(c);\n+        this.appendAlternate(c);\n     }\n     \n-    public void append(final char primary, final char alternate) {\n-        this.appendPrimary(primary);\n-        this.appendAlternate(alternate);\n+    public void append(final char c, final char c2) {\n+        this.appendPrimary(c);\n+        this.appendAlternate(c2);\n     }\n     \n-    public void appendPrimary(final char value) {\n+    public void appendPrimary(final char c) {\n         if (this.primary.length() < this.maxLength) {\n-            this.primary.append(value);\n+            this.primary.append(c);\n         }\n     }\n     \n-    public void appendAlternate(final char value) {\n+    public void appendAlternate(final char c) {\n         if (this.alternate.length() < this.maxLength) {\n-            this.alternate.append(value);\n+            this.alternate.append(c);\n         }\n     }\n     \n-    public void append(final String value) {\n-        this.appendPrimary(value);\n-        this.appendAlternate(value);\n+    public void append(final String s) {\n+        this.appendPrimary(s);\n+        this.appendAlternate(s);\n     }\n     \n-    public void append(final String primary, final String alternate) {\n-        this.appendPrimary(primary);\n-        this.appendAlternate(alternate);\n+    public void append(final String s, final String s2) {\n+        this.appendPrimary(s);\n+        this.appendAlternate(s2);\n     }\n     \n-    public void appendPrimary(final String value) {\n-        final int addChars = this.maxLength - this.primary.length();\n-        if (value.length() <= addChars) {\n-            this.primary.append(value);\n+    public void appendPrimary(final String str) {\n+        final int endIndex = this.maxLength - this.primary.length();\n+        if (str.length() <= endIndex) {\n+            this.primary.append(str);\n         }\n         else {\n-            this.primary.append(value.substring(0, addChars));\n+            this.primary.append(str.substring(0, endIndex));\n         }\n     }\n     \n-    public void appendAlternate(final String value) {\n-        final int addChars = this.maxLength - this.alternate.length();\n-        if (value.length() <= addChars) {\n-            this.alternate.append(value);\n+    public void appendAlternate(final String str) {\n+        final int endIndex = this.maxLength - this.alternate.length();\n+        if (str.length() <= endIndex) {\n+            this.alternate.append(str);\n         }\n         else {\n-            this.alternate.append(value.substring(0, addChars));\n+            this.alternate.append(str.substring(0, endIndex));\n         }\n     }\n     \n     public String getPrimary() {\n         return this.primary.toString();\n     }\n     \n"}]}
