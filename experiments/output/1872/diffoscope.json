{"diffoscope-json-version": 1, "source1": "first/AbstractUnicodeExtraField.class", "source2": "second/AbstractUnicodeExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,168 +1,165 @@\n-  SHA-256 checksum 220e13b4e54c324010737cc099ad4b85f4e0902dc41b71a00af695d01e7ba5b6\n+  SHA-256 checksum 232fcc502ea996a62d01a6777be49951e312806bf73032e1e86e13dc2be881be\n   Compiled from \"AbstractUnicodeExtraField.java\"\n public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #36                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  super_class: #37                        // java/lang/Object\n-  interfaces: 1, fields: 3, methods: 14, attributes: 1\n+  this_class: #30                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  super_class: #31                        // java/lang/Object\n+  interfaces: 1, fields: 3, methods: 14, attributes: 3\n Constant pool:\n-    #1 = Methodref          #37.#94       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #95           // java/util/zip/CRC32\n-    #3 = Methodref          #2.#94        // java/util/zip/CRC32.\"<init>\":()V\n-    #4 = Methodref          #2.#96        // java/util/zip/CRC32.update:([BII)V\n-    #5 = Methodref          #2.#97        // java/util/zip/CRC32.getValue:()J\n-    #6 = Fieldref           #36.#98       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n-    #7 = Class              #99           // org/apache/commons/compress/utils/CharsetNames\n-    #8 = String             #100          // UTF-8\n-    #9 = Methodref          #101.#102     // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #10 = Fieldref           #36.#103      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n-   #11 = Class              #104          // java/io/UnsupportedEncodingException\n-   #12 = Class              #105          // java/lang/RuntimeException\n-   #13 = String             #106          // FATAL: UTF-8 encoding not supported.\n-   #14 = Methodref          #12.#107      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #15 = Methodref          #36.#108      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n-   #16 = Fieldref           #36.#109      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n-   #17 = Methodref          #110.#111     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #18 = Methodref          #112.#113     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #36.#114      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n-   #20 = Class              #115          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #21 = Methodref          #20.#116      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #22 = Methodref          #36.#117      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n-   #23 = Methodref          #36.#118      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #24 = Class              #119          // java/util/zip/ZipException\n-   #25 = String             #120          // UniCode path extra data must have at least 5 bytes.\n-   #26 = Methodref          #24.#121      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Class              #122          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#94       // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #123          // Unsupported version [\n-   #30 = Methodref          #27.#124      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #27.#125      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #32 = String             #126          // ] for UniCode path extra data.\n-   #33 = Methodref          #27.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #110.#128     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #35 = Methodref          #36.#129      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n-   #36 = Class              #130          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #37 = Class              #131          // java/lang/Object\n-   #38 = Class              #132          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #39 = Utf8               nameCRC32\n-   #40 = Utf8               J\n-   #41 = Utf8               unicodeName\n-   #42 = Utf8               [B\n-   #43 = Utf8               data\n-   #44 = Utf8               <init>\n-   #45 = Utf8               ()V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-   #51 = Utf8               (Ljava/lang/String;[BII)V\n-   #52 = Utf8               e\n-   #53 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #54 = Utf8               text\n-   #55 = Utf8               Ljava/lang/String;\n-   #56 = Utf8               bytes\n-   #57 = Utf8               off\n-   #58 = Utf8               I\n-   #59 = Utf8               len\n-   #60 = Utf8               crc32\n-   #61 = Utf8               Ljava/util/zip/CRC32;\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #130          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #64 = Class              #133          // java/lang/String\n-   #65 = Class              #42           // \"[B\"\n-   #66 = Class              #95           // java/util/zip/CRC32\n-   #67 = Class              #104          // java/io/UnsupportedEncodingException\n-   #68 = Utf8               (Ljava/lang/String;[B)V\n-   #69 = Utf8               assembleData\n-   #70 = Utf8               getNameCRC32\n-   #71 = Utf8               ()J\n-   #72 = Utf8               setNameCRC32\n-   #73 = Utf8               (J)V\n-   #74 = Utf8               getUnicodeName\n-   #75 = Utf8               ()[B\n-   #76 = Utf8               b\n-   #77 = Utf8               setUnicodeName\n-   #78 = Utf8               ([B)V\n-   #79 = Utf8               getCentralDirectoryData\n-   #80 = Utf8               getCentralDirectoryLength\n-   #81 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #82 = Utf8               getLocalFileDataData\n-   #83 = Utf8               getLocalFileDataLength\n-   #84 = Utf8               parseFromLocalFileData\n-   #85 = Utf8               ([BII)V\n-   #86 = Utf8               buffer\n-   #87 = Utf8               offset\n-   #88 = Utf8               length\n-   #89 = Utf8               version\n-   #90 = Utf8               Exceptions\n-   #91 = Utf8               parseFromCentralDirectoryData\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               AbstractUnicodeExtraField.java\n-   #94 = NameAndType        #44:#45       // \"<init>\":()V\n-   #95 = Utf8               java/util/zip/CRC32\n-   #96 = NameAndType        #134:#85      // update:([BII)V\n-   #97 = NameAndType        #135:#71      // getValue:()J\n-   #98 = NameAndType        #39:#40       // nameCRC32:J\n-   #99 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-  #100 = Utf8               UTF-8\n-  #101 = Class              #133          // java/lang/String\n-  #102 = NameAndType        #136:#137     // getBytes:(Ljava/lang/String;)[B\n-  #103 = NameAndType        #41:#42       // unicodeName:[B\n-  #104 = Utf8               java/io/UnsupportedEncodingException\n-  #105 = Utf8               java/lang/RuntimeException\n-  #106 = Utf8               FATAL: UTF-8 encoding not supported.\n-  #107 = NameAndType        #44:#138      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #108 = NameAndType        #44:#51       // \"<init>\":(Ljava/lang/String;[BII)V\n-  #109 = NameAndType        #43:#42       // data:[B\n-  #110 = Class              #139          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #111 = NameAndType        #136:#140     // getBytes:(J)[B\n-  #112 = Class              #141          // java/lang/System\n-  #113 = NameAndType        #142:#143     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #114 = NameAndType        #69:#45       // assembleData:()V\n-  #115 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #116 = NameAndType        #44:#144      // \"<init>\":(I)V\n-  #117 = NameAndType        #79:#75       // getCentralDirectoryData:()[B\n-  #118 = NameAndType        #80:#81       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #119 = Utf8               java/util/zip/ZipException\n-  #120 = Utf8               UniCode path extra data must have at least 5 bytes.\n-  #121 = NameAndType        #44:#145      // \"<init>\":(Ljava/lang/String;)V\n-  #122 = Utf8               java/lang/StringBuilder\n-  #123 = Utf8               Unsupported version [\n-  #124 = NameAndType        #146:#147     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #125 = NameAndType        #146:#148     // append:(I)Ljava/lang/StringBuilder;\n-  #126 = Utf8               ] for UniCode path extra data.\n-  #127 = NameAndType        #149:#150     // toString:()Ljava/lang/String;\n-  #128 = NameAndType        #135:#151     // getValue:([BI)J\n-  #129 = NameAndType        #84:#85       // parseFromLocalFileData:([BII)V\n-  #130 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  #131 = Utf8               java/lang/Object\n-  #132 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #133 = Utf8               java/lang/String\n-  #134 = Utf8               update\n-  #135 = Utf8               getValue\n-  #136 = Utf8               getBytes\n-  #137 = Utf8               (Ljava/lang/String;)[B\n-  #138 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #139 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #140 = Utf8               (J)[B\n-  #141 = Utf8               java/lang/System\n-  #142 = Utf8               arraycopy\n-  #143 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #144 = Utf8               (I)V\n-  #145 = Utf8               (Ljava/lang/String;)V\n-  #146 = Utf8               append\n-  #147 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #149 = Utf8               toString\n-  #150 = Utf8               ()Ljava/lang/String;\n-  #151 = Utf8               ([BI)J\n+    #1 = Methodref          #31.#85       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #86           // java/util/zip/CRC32\n+    #3 = Methodref          #2.#85        // java/util/zip/CRC32.\"<init>\":()V\n+    #4 = Methodref          #2.#87        // java/util/zip/CRC32.update:([BII)V\n+    #5 = Methodref          #2.#88        // java/util/zip/CRC32.getValue:()J\n+    #6 = Fieldref           #30.#89       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n+    #7 = Class              #90           // org/apache/commons/compress/utils/CharsetNames\n+    #8 = String             #91           // UTF-8\n+    #9 = Methodref          #57.#92       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #10 = Fieldref           #30.#93       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n+   #11 = Class              #94           // java/io/UnsupportedEncodingException\n+   #12 = Class              #95           // java/lang/RuntimeException\n+   #13 = String             #96           // FATAL: UTF-8 encoding not supported.\n+   #14 = Methodref          #12.#97       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #15 = Methodref          #30.#98       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n+   #16 = Fieldref           #30.#99       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n+   #17 = Methodref          #100.#101     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #18 = Methodref          #102.#103     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #19 = Methodref          #30.#104      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n+   #20 = Class              #105          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #21 = Methodref          #20.#106      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #22 = Methodref          #30.#107      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n+   #23 = Methodref          #30.#108      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #24 = Class              #109          // java/util/zip/ZipException\n+   #25 = String             #110          // UniCode path extra data must have at least 5 bytes.\n+   #26 = Methodref          #24.#111      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = InvokeDynamic      #0:#115       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #28 = Methodref          #100.#116     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #29 = Methodref          #30.#117      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n+   #30 = Class              #118          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+   #31 = Class              #119          // java/lang/Object\n+   #32 = Class              #120          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #33 = Utf8               nameCRC32\n+   #34 = Utf8               J\n+   #35 = Utf8               unicodeName\n+   #36 = Utf8               [B\n+   #37 = Utf8               data\n+   #38 = Utf8               <init>\n+   #39 = Utf8               ()V\n+   #40 = Utf8               Code\n+   #41 = Utf8               LineNumberTable\n+   #42 = Utf8               LocalVariableTable\n+   #43 = Utf8               this\n+   #44 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+   #45 = Utf8               (Ljava/lang/String;[BII)V\n+   #46 = Utf8               e\n+   #47 = Utf8               Ljava/io/UnsupportedEncodingException;\n+   #48 = Utf8               text\n+   #49 = Utf8               Ljava/lang/String;\n+   #50 = Utf8               bytes\n+   #51 = Utf8               off\n+   #52 = Utf8               I\n+   #53 = Utf8               len\n+   #54 = Utf8               crc32\n+   #55 = Utf8               Ljava/util/zip/CRC32;\n+   #56 = Utf8               StackMapTable\n+   #57 = Class              #121          // java/lang/String\n+   #58 = Class              #36           // \"[B\"\n+   #59 = Utf8               (Ljava/lang/String;[B)V\n+   #60 = Utf8               assembleData\n+   #61 = Utf8               getNameCRC32\n+   #62 = Utf8               ()J\n+   #63 = Utf8               setNameCRC32\n+   #64 = Utf8               (J)V\n+   #65 = Utf8               getUnicodeName\n+   #66 = Utf8               ()[B\n+   #67 = Utf8               b\n+   #68 = Utf8               setUnicodeName\n+   #69 = Utf8               ([B)V\n+   #70 = Utf8               getCentralDirectoryData\n+   #71 = Utf8               getCentralDirectoryLength\n+   #72 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #73 = Utf8               getLocalFileDataData\n+   #74 = Utf8               getLocalFileDataLength\n+   #75 = Utf8               parseFromLocalFileData\n+   #76 = Utf8               ([BII)V\n+   #77 = Utf8               buffer\n+   #78 = Utf8               offset\n+   #79 = Utf8               length\n+   #80 = Utf8               version\n+   #81 = Utf8               Exceptions\n+   #82 = Utf8               parseFromCentralDirectoryData\n+   #83 = Utf8               SourceFile\n+   #84 = Utf8               AbstractUnicodeExtraField.java\n+   #85 = NameAndType        #38:#39       // \"<init>\":()V\n+   #86 = Utf8               java/util/zip/CRC32\n+   #87 = NameAndType        #122:#76      // update:([BII)V\n+   #88 = NameAndType        #123:#62      // getValue:()J\n+   #89 = NameAndType        #33:#34       // nameCRC32:J\n+   #90 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+   #91 = Utf8               UTF-8\n+   #92 = NameAndType        #124:#125     // getBytes:(Ljava/lang/String;)[B\n+   #93 = NameAndType        #35:#36       // unicodeName:[B\n+   #94 = Utf8               java/io/UnsupportedEncodingException\n+   #95 = Utf8               java/lang/RuntimeException\n+   #96 = Utf8               FATAL: UTF-8 encoding not supported.\n+   #97 = NameAndType        #38:#126      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #98 = NameAndType        #38:#45       // \"<init>\":(Ljava/lang/String;[BII)V\n+   #99 = NameAndType        #37:#36       // data:[B\n+  #100 = Class              #127          // org/apache/commons/compress/archivers/zip/ZipLong\n+  #101 = NameAndType        #124:#128     // getBytes:(J)[B\n+  #102 = Class              #129          // java/lang/System\n+  #103 = NameAndType        #130:#131     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #104 = NameAndType        #60:#39       // assembleData:()V\n+  #105 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #106 = NameAndType        #38:#132      // \"<init>\":(I)V\n+  #107 = NameAndType        #70:#66       // getCentralDirectoryData:()[B\n+  #108 = NameAndType        #71:#72       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #109 = Utf8               java/util/zip/ZipException\n+  #110 = Utf8               UniCode path extra data must have at least 5 bytes.\n+  #111 = NameAndType        #38:#133      // \"<init>\":(Ljava/lang/String;)V\n+  #112 = Utf8               BootstrapMethods\n+  #113 = MethodHandle       6:#134        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #114 = String             #135          // Unsupported version [\\u0001] for UniCode path extra data.\n+  #115 = NameAndType        #136:#137     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #116 = NameAndType        #123:#138     // getValue:([BI)J\n+  #117 = NameAndType        #75:#76       // parseFromLocalFileData:([BII)V\n+  #118 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  #119 = Utf8               java/lang/Object\n+  #120 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #121 = Utf8               java/lang/String\n+  #122 = Utf8               update\n+  #123 = Utf8               getValue\n+  #124 = Utf8               getBytes\n+  #125 = Utf8               (Ljava/lang/String;)[B\n+  #126 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #127 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #128 = Utf8               (J)[B\n+  #129 = Utf8               java/lang/System\n+  #130 = Utf8               arraycopy\n+  #131 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #132 = Utf8               (I)V\n+  #133 = Utf8               (Ljava/lang/String;)V\n+  #134 = Methodref          #139.#140     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #135 = Utf8               Unsupported version [\\u0001] for UniCode path extra data.\n+  #136 = Utf8               makeConcatWithConstants\n+  #137 = Utf8               (I)Ljava/lang/String;\n+  #138 = Utf8               ([BI)J\n+  #139 = Class              #141          // java/lang/invoke/StringConcatFactory\n+  #140 = NameAndType        #136:#145     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #141 = Utf8               java/lang/invoke/StringConcatFactory\n+  #142 = Class              #147          // java/lang/invoke/MethodHandles$Lookup\n+  #143 = Utf8               Lookup\n+  #144 = Utf8               InnerClasses\n+  #145 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #146 = Class              #148          // java/lang/invoke/MethodHandles\n+  #147 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #148 = Utf8               java/lang/invoke/MethodHandles\n {\n   private long nameCRC32;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] unicodeName;\n     descriptor: [B\n@@ -577,100 +574,98 @@\n         14: athrow\n         15: aload_1\n         16: iload_2\n         17: baload\n         18: istore        4\n         20: iload         4\n         22: iconst_1\n-        23: if_icmpeq     59\n+        23: if_icmpeq     41\n         26: new           #24                 // class java/util/zip/ZipException\n         29: dup\n-        30: new           #27                 // class java/lang/StringBuilder\n-        33: dup\n-        34: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #29                 // String Unsupported version [\n-        39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #32                 // String ] for UniCode path extra data.\n-        49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: invokespecial #26                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        58: athrow\n-        59: aload_0\n-        60: aload_1\n-        61: iload_2\n-        62: iconst_1\n-        63: iadd\n-        64: invokestatic  #34                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-        67: putfield      #6                  // Field nameCRC32:J\n-        70: aload_0\n-        71: iload_3\n-        72: iconst_5\n-        73: isub\n-        74: newarray       byte\n-        76: putfield      #10                 // Field unicodeName:[B\n-        79: aload_1\n-        80: iload_2\n-        81: iconst_5\n-        82: iadd\n-        83: aload_0\n-        84: getfield      #10                 // Field unicodeName:[B\n-        87: iconst_0\n-        88: iload_3\n-        89: iconst_5\n-        90: isub\n-        91: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        94: aload_0\n-        95: aconst_null\n-        96: putfield      #16                 // Field data:[B\n-        99: return\n+        30: iload         4\n+        32: invokedynamic #27,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        37: invokespecial #26                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        40: athrow\n+        41: aload_0\n+        42: aload_1\n+        43: iload_2\n+        44: iconst_1\n+        45: iadd\n+        46: invokestatic  #28                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        49: putfield      #6                  // Field nameCRC32:J\n+        52: aload_0\n+        53: iload_3\n+        54: iconst_5\n+        55: isub\n+        56: newarray       byte\n+        58: putfield      #10                 // Field unicodeName:[B\n+        61: aload_1\n+        62: iload_2\n+        63: iconst_5\n+        64: iadd\n+        65: aload_0\n+        66: getfield      #10                 // Field unicodeName:[B\n+        69: iconst_0\n+        70: iload_3\n+        71: iconst_5\n+        72: isub\n+        73: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        76: aload_0\n+        77: aconst_null\n+        78: putfield      #16                 // Field data:[B\n+        81: return\n       LineNumberTable:\n         line 165: 0\n         line 166: 5\n         line 169: 15\n         line 171: 20\n         line 172: 26\n-        line 176: 59\n-        line 177: 70\n-        line 178: 79\n-        line 179: 94\n-        line 180: 99\n+        line 176: 41\n+        line 177: 52\n+        line 178: 61\n+        line 179: 76\n+        line 180: 81\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     100     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-            0     100     1 buffer   [B\n-            0     100     2 offset   I\n-            0     100     3 length   I\n-           20      80     4 version   I\n+            0      82     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+            0      82     1 buffer   [B\n+            0      82     2 offset   I\n+            0      82     3 length   I\n+           20      62     4 version   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 43\n+          offset_delta = 25\n           locals = [ int ]\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #35                 // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #29                 // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 190: 0\n         line 191: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0       8     1 buffer   [B\n             0       8     2 offset   I\n             0       8     3 length   I\n     Exceptions:\n       throws java.util.zip.ZipException\n }\n SourceFile: \"AbstractUnicodeExtraField.java\"\n+InnerClasses:\n+  public static final #143= #142 of #146; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #113 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #114 Unsupported version [\\u0001] for UniCode path extra data.\n"}]}
