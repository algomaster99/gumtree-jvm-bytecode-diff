{"diffoscope-json-version": 1, "source1": "first/PathVisitorFileFilter.class", "source2": "second/PathVisitorFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,120 +1,120 @@\n-  SHA-256 checksum f31028203cba98ab669981590d688cf10eb5412136da39280697ba93b9f81412\n+  SHA-256 checksum 068b5786946f9394d737b843565b4469ec001a55198edda8ea3cb0914ec10966\n   Compiled from \"PathVisitorFileFilter.java\"\n public class org.apache.commons.io.filefilter.PathVisitorFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-  super_class: #19                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #14                         // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #19.#55       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Fieldref           #56.#57       // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-    #3 = Fieldref           #18.#58       // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-    #4 = Methodref          #39.#59       // java/io/File.toPath:()Ljava/nio/file/Path;\n-    #5 = Methodref          #39.#60       // java/io/File.exists:()Z\n-    #6 = Methodref          #61.#62       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-    #7 = Methodref          #18.#63       // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-    #8 = Fieldref           #49.#64       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #9 = Class              #65           // java/io/IOException\n-   #10 = Methodref          #18.#66       // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #11 = InterfaceMethodref #17.#67       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #12 = Methodref          #18.#68       // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #13 = Class              #69           // java/nio/file/LinkOption\n-   #14 = Methodref          #70.#71       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #15 = InterfaceMethodref #30.#72       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #16 = InterfaceMethodref #30.#73       // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #17 = Class              #74           // java/nio/file/Path\n-   #18 = Class              #75           // org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #19 = Class              #76           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #20 = Utf8               pathVisitor\n-   #21 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n-   #22 = Utf8               <init>\n-   #23 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n-   #24 = Utf8               Code\n-   #25 = Utf8               LineNumberTable\n-   #26 = Utf8               LocalVariableTable\n-   #27 = Utf8               this\n-   #28 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n-   #29 = Utf8               StackMapTable\n-   #30 = Class              #77           // org/apache/commons/io/file/PathVisitor\n-   #31 = Utf8               accept\n-   #32 = Utf8               (Ljava/io/File;)Z\n-   #33 = Utf8               path\n-   #34 = Utf8               Ljava/nio/file/Path;\n-   #35 = Utf8               e\n-   #36 = Utf8               Ljava/io/IOException;\n-   #37 = Utf8               file\n-   #38 = Utf8               Ljava/io/File;\n-   #39 = Class              #78           // java/io/File\n-   #40 = Class              #79           // java/nio/file/attribute/BasicFileAttributes\n-   #41 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #42 = Utf8               dir\n-   #43 = Utf8               name\n-   #44 = Utf8               Ljava/lang/String;\n-   #45 = Class              #80           // java/lang/String\n-   #46 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #47 = Utf8               attributes\n-   #48 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #49 = Class              #81           // java/nio/file/FileVisitResult\n-   #50 = Utf8               visitFile\n-   #51 = Utf8               Exceptions\n-   #52 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #53 = Utf8               SourceFile\n-   #54 = Utf8               PathVisitorFileFilter.java\n-   #55 = NameAndType        #22:#82       // \"<init>\":()V\n-   #56 = Class              #83           // org/apache/commons/io/file/NoopPathVisitor\n-   #57 = NameAndType        #84:#85       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #58 = NameAndType        #20:#21       // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n-   #59 = NameAndType        #86:#87       // toPath:()Ljava/nio/file/Path;\n-   #60 = NameAndType        #88:#89       // exists:()Z\n-   #61 = Class              #90           // org/apache/commons/io/file/PathUtils\n-   #62 = NameAndType        #91:#92       // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #63 = NameAndType        #50:#46       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #64 = NameAndType        #93:#94       // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #65 = Utf8               java/io/IOException\n-   #66 = NameAndType        #95:#96       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #67 = NameAndType        #97:#98       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #68 = NameAndType        #31:#46       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #69 = Utf8               java/nio/file/LinkOption\n-   #70 = Class              #99           // java/nio/file/Files\n-   #71 = NameAndType        #100:#101     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #72 = NameAndType        #102:#103     // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #73 = NameAndType        #50:#52       // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #74 = Utf8               java/nio/file/Path\n-   #75 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n-   #76 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #77 = Utf8               org/apache/commons/io/file/PathVisitor\n-   #78 = Utf8               java/io/File\n-   #79 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-   #80 = Utf8               java/lang/String\n-   #81 = Utf8               java/nio/file/FileVisitResult\n-   #82 = Utf8               ()V\n-   #83 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n-   #84 = Utf8               INSTANCE\n-   #85 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n-   #86 = Utf8               toPath\n-   #87 = Utf8               ()Ljava/nio/file/Path;\n-   #88 = Utf8               exists\n-   #89 = Utf8               ()Z\n-   #90 = Utf8               org/apache/commons/io/file/PathUtils\n-   #91 = Utf8               readBasicFileAttributes\n-   #92 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #93 = Utf8               CONTINUE\n-   #94 = Utf8               Ljava/nio/file/FileVisitResult;\n-   #95 = Utf8               handle\n-   #96 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #97 = Utf8               resolve\n-   #98 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-   #99 = Utf8               java/nio/file/Files\n-  #100 = Utf8               isDirectory\n-  #101 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #102 = Utf8               postVisitDirectory\n-  #103 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+    #8 = Class              #10           // org/apache/commons/io/file/NoopPathVisitor\n+    #9 = NameAndType        #11:#12       // INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #10 = Utf8               org/apache/commons/io/file/NoopPathVisitor\n+   #11 = Utf8               INSTANCE\n+   #12 = Utf8               Lorg/apache/commons/io/file/NoopPathVisitor;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/io/filefilter/PathVisitorFileFilter.pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #14 = Class              #16           // org/apache/commons/io/filefilter/PathVisitorFileFilter\n+   #15 = NameAndType        #17:#18       // pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+   #16 = Utf8               org/apache/commons/io/filefilter/PathVisitorFileFilter\n+   #17 = Utf8               pathVisitor\n+   #18 = Utf8               Lorg/apache/commons/io/file/PathVisitor;\n+   #19 = Methodref          #20.#21       // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #20 = Class              #22           // java/io/File\n+   #21 = NameAndType        #23:#24       // toPath:()Ljava/nio/file/Path;\n+   #22 = Utf8               java/io/File\n+   #23 = Utf8               toPath\n+   #24 = Utf8               ()Ljava/nio/file/Path;\n+   #25 = Methodref          #20.#26       // java/io/File.exists:()Z\n+   #26 = NameAndType        #27:#28       // exists:()Z\n+   #27 = Utf8               exists\n+   #28 = Utf8               ()Z\n+   #29 = Methodref          #30.#31       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #30 = Class              #32           // org/apache/commons/io/file/PathUtils\n+   #31 = NameAndType        #33:#34       // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #32 = Utf8               org/apache/commons/io/file/PathUtils\n+   #33 = Utf8               readBasicFileAttributes\n+   #34 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #35 = Methodref          #14.#36       // org/apache/commons/io/filefilter/PathVisitorFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #36 = NameAndType        #37:#38       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #37 = Utf8               visitFile\n+   #38 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #39 = Fieldref           #40.#41       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #40 = Class              #42           // java/nio/file/FileVisitResult\n+   #41 = NameAndType        #43:#44       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #42 = Utf8               java/nio/file/FileVisitResult\n+   #43 = Utf8               CONTINUE\n+   #44 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #45 = Class              #46           // java/io/IOException\n+   #46 = Utf8               java/io/IOException\n+   #47 = Methodref          #14.#48       // org/apache/commons/io/filefilter/PathVisitorFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #48 = NameAndType        #49:#50       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #49 = Utf8               handle\n+   #50 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+   #51 = InterfaceMethodref #52.#53       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #52 = Class              #54           // java/nio/file/Path\n+   #53 = NameAndType        #55:#56       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #54 = Utf8               java/nio/file/Path\n+   #55 = Utf8               resolve\n+   #56 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+   #57 = Methodref          #14.#58       // org/apache/commons/io/filefilter/PathVisitorFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #58 = NameAndType        #59:#38       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #59 = Utf8               accept\n+   #60 = Class              #61           // java/nio/file/LinkOption\n+   #61 = Utf8               java/nio/file/LinkOption\n+   #62 = Methodref          #63.#64       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #63 = Class              #65           // java/nio/file/Files\n+   #64 = NameAndType        #66:#67       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #65 = Utf8               java/nio/file/Files\n+   #66 = Utf8               isDirectory\n+   #67 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #68 = InterfaceMethodref #69.#70       // org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #69 = Class              #71           // org/apache/commons/io/file/PathVisitor\n+   #70 = NameAndType        #72:#73       // postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #71 = Utf8               org/apache/commons/io/file/PathVisitor\n+   #72 = Utf8               postVisitDirectory\n+   #73 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #74 = InterfaceMethodref #69.#75       // org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #75 = NameAndType        #37:#76       // visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #76 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #77 = Utf8               (Lorg/apache/commons/io/file/PathVisitor;)V\n+   #78 = Utf8               Code\n+   #79 = Utf8               LineNumberTable\n+   #80 = Utf8               LocalVariableTable\n+   #81 = Utf8               this\n+   #82 = Utf8               Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n+   #83 = Utf8               StackMapTable\n+   #84 = Utf8               (Ljava/io/File;)Z\n+   #85 = Utf8               path\n+   #86 = Utf8               Ljava/nio/file/Path;\n+   #87 = Utf8               e\n+   #88 = Utf8               Ljava/io/IOException;\n+   #89 = Utf8               file\n+   #90 = Utf8               Ljava/io/File;\n+   #91 = Class              #92           // java/nio/file/attribute/BasicFileAttributes\n+   #92 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+   #93 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #94 = Utf8               dir\n+   #95 = Utf8               name\n+   #96 = Utf8               Ljava/lang/String;\n+   #97 = Class              #98           // java/lang/String\n+   #98 = Utf8               java/lang/String\n+   #99 = Utf8               attributes\n+  #100 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #101 = Utf8               Exceptions\n+  #102 = Utf8               SourceFile\n+  #103 = Utf8               PathVisitorFileFilter.java\n {\n   private final org.apache.commons.io.file.PathVisitor pathVisitor;\n     descriptor: Lorg/apache/commons/io/file/PathVisitor;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.filefilter.PathVisitorFileFilter(org.apache.commons.io.file.PathVisitor);\n     descriptor: (Lorg/apache/commons/io/file/PathVisitor;)V\n@@ -122,18 +122,18 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnonnull     15\n-         9: getstatic     #2                  // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n+         9: getstatic     #7                  // Field org/apache/commons/io/file/NoopPathVisitor.INSTANCE:Lorg/apache/commons/io/file/NoopPathVisitor;\n         12: goto          16\n         15: aload_1\n-        16: putfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        16: putfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         19: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -151,37 +151,37 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #4                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: astore_2\n          5: aload_0\n          6: aload_2\n          7: aload_1\n-         8: invokevirtual #5                  // Method java/io/File.exists:()Z\n+         8: invokevirtual #25                 // Method java/io/File.exists:()Z\n         11: ifeq          21\n         14: aload_2\n-        15: invokestatic  #6                  // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        15: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n         18: goto          22\n         21: aconst_null\n-        22: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        25: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        22: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        25: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         28: if_acmpne     35\n         31: iconst_1\n         32: goto          36\n         35: iconst_0\n         36: ireturn\n         37: astore_2\n         38: aload_0\n         39: aload_2\n-        40: invokevirtual #10                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        43: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        40: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        43: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         46: if_acmpne     53\n         49: iconst_1\n         50: goto          54\n         53: iconst_0\n         54: ireturn\n       Exception table:\n          from    to  target type\n@@ -223,34 +223,34 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n-         1: invokevirtual #4                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #19                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: aload_2\n-         5: invokeinterface #11,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         5: invokeinterface #51,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         10: astore_3\n         11: aload_0\n         12: aload_3\n         13: aload_3\n-        14: invokestatic  #6                  // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        17: invokevirtual #12                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        20: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        14: invokestatic  #29                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        17: invokevirtual #57                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        20: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         23: if_acmpne     30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n         31: ireturn\n         32: astore_3\n         33: aload_0\n         34: aload_3\n-        35: invokevirtual #10                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-        38: getstatic     #8                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        35: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        38: getstatic     #39                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         41: if_acmpne     48\n         44: iconst_1\n         45: goto          49\n         48: iconst_0\n         49: ireturn\n       Exception table:\n          from    to  target type\n@@ -286,32 +286,32 @@\n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #13                 // class java/nio/file/LinkOption\n-         5: invokestatic  #14                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #60                 // class java/nio/file/LinkOption\n+         5: invokestatic  #62                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          25\n         11: aload_0\n-        12: getfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+        12: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n         15: aload_1\n         16: aconst_null\n-        17: invokeinterface #15,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+        17: invokeinterface #68,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.postVisitDirectory:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n         22: goto          31\n         25: aload_0\n         26: aload_1\n         27: aload_2\n-        28: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        28: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         31: areturn\n         32: astore_3\n         33: aload_0\n         34: aload_3\n-        35: invokevirtual #10                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        35: invokevirtual #47                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n         38: areturn\n       Exception table:\n          from    to  target type\n              0    31    32   Class java/io/IOException\n       LineNumberTable:\n         line 73: 0\n         line 74: 32\n@@ -331,18 +331,18 @@\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #3                  // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n+         1: getfield      #13                 // Field pathVisitor:Lorg/apache/commons/io/file/PathVisitor;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #16,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokeinterface #74,  3           // InterfaceMethod org/apache/commons/io/file/PathVisitor.visitFile:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         11: areturn\n       LineNumberTable:\n         line 81: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n             0      12     1  path   Ljava/nio/file/Path;\n@@ -353,17 +353,17 @@\n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #17                 // class java/nio/file/Path\n+         2: checkcast     #52                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #7                  // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #35                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/PathVisitorFileFilter;\n     Exceptions:\n"}]}
