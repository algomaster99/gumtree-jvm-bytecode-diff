{"diffoscope-json-version": 1, "source1": "first/PackingUtils.class", "source2": "second/PackingUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -50,14 +50,17 @@\n                 try (final InputStream inputStream = jarFile.getInputStream(jarEntry)) {\n                     int bytesRead;\n                     while ((bytesRead = inputStream.read(bytes)) != -1) {\n                         jarOutputStream.write(bytes, 0, bytesRead);\n                     }\n                     jarOutputStream.closeEntry();\n                     log(\"Packed \" + jarEntry.getName());\n+                    if (inputStream == null) {\n+                        continue;\n+                    }\n                 }\n             }\n             jarFile.close();\n         }\n     }\n     \n     public static void copyThroughJar(final JarInputStream jarInputStream, final OutputStream outputStream) throws IOException {\n@@ -83,14 +86,17 @@\n         final List<Archive.PackingFile> packingFileList = new ArrayList<Archive.PackingFile>();\n         final Enumeration<JarEntry> jarEntries = jarFile.entries();\n         while (jarEntries.hasMoreElements()) {\n             final JarEntry jarEntry = (JarEntry)jarEntries.nextElement();\n             try (final InputStream inputStream = jarFile.getInputStream(jarEntry)) {\n                 final byte[] bytes = readJarEntry(jarEntry, new BufferedInputStream(inputStream));\n                 packingFileList.add(new Archive.PackingFile(bytes, jarEntry));\n+                if (inputStream == null) {\n+                    continue;\n+                }\n             }\n         }\n         if (!keepFileOrder) {\n             reorderPackingFiles(packingFileList);\n         }\n         return packingFileList;\n     }\n"}]}
