{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorOutputStream.class", "source2": "second/BlockLZ4CompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -128,42 +128,42 @@\n         }\n         else {\n             this.expandFromList(a, n, n2);\n         }\n         return a;\n     }\n     \n-    private void expandFromList(final byte[] array, final int i, final int n) {\n-        int n2 = i;\n-        int n6;\n-        for (int j = n, n3 = 0; j > 0; j -= n6, n3 += n6) {\n+    private void expandFromList(final byte[] array, final int n, final int n2) {\n+        int n3 = n;\n+        int n7;\n+        for (int i = n2, n4 = 0; i > 0; i -= n7, n4 += n7) {\n             byte[] array2 = null;\n-            int n5;\n-            if (n2 > 0) {\n-                int n4 = 0;\n+            int n6;\n+            if (n3 > 0) {\n+                int n5 = 0;\n                 for (final byte[] array3 : this.expandedBlocks) {\n-                    if (array3.length + n4 >= n2) {\n+                    if (array3.length + n5 >= n3) {\n                         array2 = array3;\n                         break;\n                     }\n-                    n4 += array3.length;\n+                    n5 += array3.length;\n                 }\n                 if (array2 == null) {\n-                    throw new IllegalStateException(\"Failed to find a block containing offset \" + i);\n+                    throw new IllegalStateException(\"Failed to find a block containing offset \" + n);\n                 }\n-                n5 = n4 + array2.length - n2;\n-                n6 = Math.min(j, array2.length - n5);\n+                n6 = n5 + array2.length - n3;\n+                n7 = Math.min(i, array2.length - n6);\n             }\n             else {\n                 array2 = array;\n-                n5 = -n2;\n-                n6 = Math.min(j, n3 + n2);\n+                n6 = -n3;\n+                n7 = Math.min(i, n4 + n3);\n             }\n-            System.arraycopy(array2, n5, array, n3, n6);\n-            n2 -= n6;\n+            System.arraycopy(array2, n6, array, n4, n7);\n+            n3 -= n7;\n         }\n     }\n     \n     private void clearUnusedPairs() {\n         int n = 0;\n         int n2 = 0;\n         final Iterator<BlockLZ4CompressorOutputStream.Pair> descendingIterator = this.pairs.descendingIterator();\n"}]}
