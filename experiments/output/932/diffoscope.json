{"diffoscope-json-version": 1, "source1": "first/JavaClass.class", "source2": "second/JavaClass.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -221,17 +221,26 @@\n         final String parent = file.getParent();\n         if (parent != null) {\n             final File dir = new File(parent);\n             if (!dir.mkdirs() && !dir.isDirectory()) {\n                 throw new IOException(\"Could not create the directory \" + dir);\n             }\n         }\n-        try (final DataOutputStream dos = new DataOutputStream(new FileOutputStream(file))) {\n+        final DataOutputStream dos = new DataOutputStream(new FileOutputStream(file));\n+        Throwable x0 = null;\n+        try {\n             this.dump(dos);\n         }\n+        catch (final Throwable t) {\n+            x0 = t;\n+            throw t;\n+        }\n+        finally {\n+            $closeResource(x0, dos);\n+        }\n     }\n     \n     public void dump(final OutputStream file) throws IOException {\n         this.dump(new DataOutputStream(file));\n     }\n     \n     public void dump(final String fileName) throws IOException {\n@@ -272,16 +281,27 @@\n     \n     public Attribute[] getAttributes() {\n         return this.attributes;\n     }\n     \n     public byte[] getBytes() {\n         final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n-        try (final DataOutputStream dos = new DataOutputStream(baos)) {\n-            this.dump(dos);\n+        try {\n+            final DataOutputStream dos = new DataOutputStream(baos);\n+            Throwable x0 = null;\n+            try {\n+                this.dump(dos);\n+            }\n+            catch (final Throwable t) {\n+                x0 = t;\n+                throw t;\n+            }\n+            finally {\n+                $closeResource(x0, dos);\n+            }\n         }\n         catch (final IOException e) {\n             e.printStackTrace();\n         }\n         return baos.toByteArray();\n     }\n     \n@@ -550,13 +570,27 @@\n             for (final Method method : this.methods) {\n                 buf.append(\"\\t\").append(method).append('\\n');\n             }\n         }\n         return buf.toString();\n     }\n     \n+    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n+        if (x0 != null) {\n+            try {\n+                x1.close();\n+            }\n+            catch (final Throwable exception) {\n+                x0.addSuppressed(exception);\n+            }\n+        }\n+        else {\n+            x1.close();\n+        }\n+    }\n+    \n     static {\n         EMPTY_ARRAY = new JavaClass[0];\n         debug = Boolean.getBoolean(\"JavaClass.debug\");\n         JavaClass.bcelComparator = (BCELComparator)new JavaClass.JavaClass$1();\n     }\n }\n"}]}
