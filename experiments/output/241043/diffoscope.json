{"diffoscope-json-version": 1, "source1": "first/NtpV3Impl.class", "source2": "second/NtpV3Impl.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -33,91 +33,88 @@\n         return ui(this.buf[0]) >> 0 & 0x7;\n     }\n     \n     public String getModeName() {\n         return NtpUtils.getModeName(this.getMode());\n     }\n     \n-    public void setMode(final int mode) {\n-        this.buf[0] = (byte)((this.buf[0] & 0xF8) | (mode & 0x7));\n+    public void setMode(final int n) {\n+        this.buf[0] = (byte)((this.buf[0] & 0xF8) | (n & 0x7));\n     }\n     \n     public int getLeapIndicator() {\n         return ui(this.buf[0]) >> 6 & 0x3;\n     }\n     \n-    public void setLeapIndicator(final int li) {\n-        this.buf[0] = (byte)((this.buf[0] & 0x3F) | (li & 0x3) << 6);\n+    public void setLeapIndicator(final int n) {\n+        this.buf[0] = (byte)((this.buf[0] & 0x3F) | (n & 0x3) << 6);\n     }\n     \n     public int getPoll() {\n         return this.buf[2];\n     }\n     \n-    public void setPoll(final int poll) {\n-        this.buf[2] = (byte)(poll & 0xFF);\n+    public void setPoll(final int n) {\n+        this.buf[2] = (byte)(n & 0xFF);\n     }\n     \n     public int getPrecision() {\n         return this.buf[3];\n     }\n     \n-    public void setPrecision(final int precision) {\n-        this.buf[3] = (byte)(precision & 0xFF);\n+    public void setPrecision(final int n) {\n+        this.buf[3] = (byte)(n & 0xFF);\n     }\n     \n     public int getVersion() {\n         return ui(this.buf[0]) >> 3 & 0x7;\n     }\n     \n-    public void setVersion(final int version) {\n-        this.buf[0] = (byte)((this.buf[0] & 0xC7) | (version & 0x7) << 3);\n+    public void setVersion(final int n) {\n+        this.buf[0] = (byte)((this.buf[0] & 0xC7) | (n & 0x7) << 3);\n     }\n     \n     public int getStratum() {\n         return ui(this.buf[1]);\n     }\n     \n-    public void setStratum(final int stratum) {\n-        this.buf[1] = (byte)(stratum & 0xFF);\n+    public void setStratum(final int n) {\n+        this.buf[1] = (byte)(n & 0xFF);\n     }\n     \n     public int getRootDelay() {\n         return this.getInt(4);\n     }\n     \n-    public void setRootDelay(final int delay) {\n-        this.setInt(4, delay);\n+    public void setRootDelay(final int n) {\n+        this.setInt(4, n);\n     }\n     \n     public double getRootDelayInMillisDouble() {\n-        final double l = (double)this.getRootDelay();\n-        return l / 65.536;\n+        return this.getRootDelay() / 65.536;\n     }\n     \n     public int getRootDispersion() {\n         return this.getInt(8);\n     }\n     \n-    public void setRootDispersion(final int dispersion) {\n-        this.setInt(8, dispersion);\n+    public void setRootDispersion(final int n) {\n+        this.setInt(8, n);\n     }\n     \n     public long getRootDispersionInMillis() {\n-        final long l = (long)this.getRootDispersion();\n-        return l * 1000L / 65536L;\n+        return this.getRootDispersion() * 1000L / 65536L;\n     }\n     \n     public double getRootDispersionInMillisDouble() {\n-        final double l = (double)this.getRootDispersion();\n-        return l / 65.536;\n+        return this.getRootDispersion() / 65.536;\n     }\n     \n-    public void setReferenceId(final int refId) {\n-        this.setInt(12, refId);\n+    public void setReferenceId(final int n) {\n+        this.setInt(12, n);\n     }\n     \n     public int getReferenceId() {\n         return this.getInt(12);\n     }\n     \n     public String getReferenceIdString() {\n@@ -138,143 +135,132 @@\n     }\n     \n     private String idAsIPAddress() {\n         return ui(this.buf[12]) + \".\" + ui(this.buf[13]) + \".\" + ui(this.buf[14]) + \".\" + ui(this.buf[15]);\n     }\n     \n     private String idAsString() {\n-        final StringBuilder id = new StringBuilder();\n+        final StringBuilder sb = new StringBuilder();\n         for (int i = 0; i <= 3; ++i) {\n             final char c = (char)this.buf[12 + i];\n             if (c == '\\0') {\n                 break;\n             }\n-            id.append(c);\n+            sb.append(c);\n         }\n-        return id.toString();\n+        return sb.toString();\n     }\n     \n     private String idAsHex() {\n         return Integer.toHexString(this.getReferenceId());\n     }\n     \n     public TimeStamp getTransmitTimeStamp() {\n         return this.getTimestamp(40);\n     }\n     \n-    public void setTransmitTime(final TimeStamp ts) {\n-        this.setTimestamp(40, ts);\n+    public void setTransmitTime(final TimeStamp timeStamp) {\n+        this.setTimestamp(40, timeStamp);\n     }\n     \n-    public void setOriginateTimeStamp(final TimeStamp ts) {\n-        this.setTimestamp(24, ts);\n+    public void setOriginateTimeStamp(final TimeStamp timeStamp) {\n+        this.setTimestamp(24, timeStamp);\n     }\n     \n     public TimeStamp getOriginateTimeStamp() {\n         return this.getTimestamp(24);\n     }\n     \n     public TimeStamp getReferenceTimeStamp() {\n         return this.getTimestamp(16);\n     }\n     \n-    public void setReferenceTime(final TimeStamp ts) {\n-        this.setTimestamp(16, ts);\n+    public void setReferenceTime(final TimeStamp timeStamp) {\n+        this.setTimestamp(16, timeStamp);\n     }\n     \n     public TimeStamp getReceiveTimeStamp() {\n         return this.getTimestamp(32);\n     }\n     \n-    public void setReceiveTimeStamp(final TimeStamp ts) {\n-        this.setTimestamp(32, ts);\n+    public void setReceiveTimeStamp(final TimeStamp timeStamp) {\n+        this.setTimestamp(32, timeStamp);\n     }\n     \n     public String getType() {\n         return \"NTP\";\n     }\n     \n-    private int getInt(final int index) {\n-        final int i = ui(this.buf[index]) << 24 | ui(this.buf[index + 1]) << 16 | ui(this.buf[index + 2]) << 8 | ui(this.buf[index + 3]);\n-        return i;\n+    private int getInt(final int n) {\n+        return ui(this.buf[n]) << 24 | ui(this.buf[n + 1]) << 16 | ui(this.buf[n + 2]) << 8 | ui(this.buf[n + 3]);\n     }\n     \n-    private void setInt(final int idx, int value) {\n+    private void setInt(final int n, int n2) {\n         for (int i = 3; i >= 0; --i) {\n-            this.buf[idx + i] = (byte)(value & 0xFF);\n-            value >>>= 8;\n+            this.buf[n + i] = (byte)(n2 & 0xFF);\n+            n2 >>>= 8;\n         }\n     }\n     \n-    private TimeStamp getTimestamp(final int index) {\n-        return new TimeStamp(this.getLong(index));\n+    private TimeStamp getTimestamp(final int n) {\n+        return new TimeStamp(this.getLong(n));\n     }\n     \n-    private long getLong(final int index) {\n-        final long i = ul(this.buf[index]) << 56 | ul(this.buf[index + 1]) << 48 | ul(this.buf[index + 2]) << 40 | ul(this.buf[index + 3]) << 32 | ul(this.buf[index + 4]) << 24 | ul(this.buf[index + 5]) << 16 | ul(this.buf[index + 6]) << 8 | ul(this.buf[index + 7]);\n-        return i;\n+    private long getLong(final int n) {\n+        return ul(this.buf[n]) << 56 | ul(this.buf[n + 1]) << 48 | ul(this.buf[n + 2]) << 40 | ul(this.buf[n + 3]) << 32 | ul(this.buf[n + 4]) << 24 | ul(this.buf[n + 5]) << 16 | ul(this.buf[n + 6]) << 8 | ul(this.buf[n + 7]);\n     }\n     \n-    private void setTimestamp(final int index, final TimeStamp t) {\n-        long ntpTime = (t == null) ? 0L : t.ntpValue();\n+    private void setTimestamp(final int n, final TimeStamp timeStamp) {\n+        long n2 = (timeStamp == null) ? 0L : timeStamp.ntpValue();\n         for (int i = 7; i >= 0; --i) {\n-            this.buf[index + i] = (byte)(ntpTime & 0xFFL);\n-            ntpTime >>>= 8;\n+            this.buf[n + i] = (byte)(n2 & 0xFFL);\n+            n2 >>>= 8;\n         }\n     }\n     \n     public synchronized DatagramPacket getDatagramPacket() {\n         if (this.dp == null) {\n             (this.dp = new DatagramPacket(this.buf, this.buf.length)).setPort(123);\n         }\n         return this.dp;\n     }\n     \n-    public void setDatagramPacket(final DatagramPacket srcDp) {\n-        if (srcDp == null || srcDp.getLength() < this.buf.length) {\n+    public void setDatagramPacket(final DatagramPacket datagramPacket) {\n+        if (datagramPacket == null || datagramPacket.getLength() < this.buf.length) {\n             throw new IllegalArgumentException();\n         }\n-        final byte[] incomingBuf = srcDp.getData();\n-        int len = srcDp.getLength();\n-        if (len > this.buf.length) {\n-            len = this.buf.length;\n-        }\n-        System.arraycopy(incomingBuf, 0, this.buf, 0, len);\n-        final DatagramPacket dp = this.getDatagramPacket();\n-        dp.setAddress(srcDp.getAddress());\n-        final int port = srcDp.getPort();\n-        dp.setPort((port > 0) ? port : 123);\n-        dp.setData(this.buf);\n+        final byte[] data = datagramPacket.getData();\n+        int n = datagramPacket.getLength();\n+        if (n > this.buf.length) {\n+            n = this.buf.length;\n+        }\n+        System.arraycopy(data, 0, this.buf, 0, n);\n+        final DatagramPacket datagramPacket2 = this.getDatagramPacket();\n+        datagramPacket2.setAddress(datagramPacket.getAddress());\n+        final int port = datagramPacket.getPort();\n+        datagramPacket2.setPort((port > 0) ? port : 123);\n+        datagramPacket2.setData(this.buf);\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null || this.getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final NtpV3Impl other = (NtpV3Impl)obj;\n-        return Arrays.equals(this.buf, other.buf);\n+    public boolean equals(final Object o) {\n+        return this == o || (o != null && this.getClass() == o.getClass() && Arrays.equals(this.buf, ((NtpV3Impl)o).buf));\n     }\n     \n     @Override\n     public int hashCode() {\n         return Arrays.hashCode(this.buf);\n     }\n     \n     protected static final int ui(final byte b) {\n-        final int i = b & 0xFF;\n-        return i;\n+        return b & 0xFF;\n     }\n     \n     protected static final long ul(final byte b) {\n-        final long i = (long)(b & 0xFF);\n-        return i;\n+        return b & 0xFF;\n     }\n     \n     @Override\n     public String toString() {\n         return \"[version:\" + this.getVersion() + \", mode:\" + this.getMode() + \", poll:\" + this.getPoll() + \", precision:\" + this.getPrecision() + \", delay:\" + this.getRootDelay() + \", dispersion(ms):\" + this.getRootDispersionInMillisDouble() + \", id:\" + this.getReferenceIdString() + \", xmitTime:\" + this.getTransmitTimeStamp().toDateString() + \" ]\";\n     }\n }\n"}]}
