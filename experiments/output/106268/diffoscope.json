{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedByteArrayInputStream$Builder.class", "source2": "second/UnsynchronizedByteArrayInputStream$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,94 +1,94 @@\n-  SHA-256 checksum 72c1837bceab33966bbf86fae8a19f62327abb75ce15d4f03a817be8d83c7e95\n+  SHA-256 checksum 2655d74bd67767cf8923192c790c38c254e006f0259c0a863a296af3fe05f852\n   Compiled from \"UnsynchronizedByteArrayInputStream.java\"\n public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder extends org.apache.commons.io.build.AbstractStreamBuilder<org.apache.commons.io.input.UnsynchronizedByteArrayInputStream, org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n-  super_class: #2                         // org/apache/commons/io/build/AbstractStreamBuilder\n+  this_class: #1                          // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n+  super_class: #3                         // org/apache/commons/io/build/AbstractStreamBuilder\n   interfaces: 0, fields: 2, methods: 7, attributes: 3\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/io/build/AbstractStreamBuilder\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n+   #2 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n+   #3 = Class              #4             // org/apache/commons/io/build/AbstractStreamBuilder\n    #4 = Utf8               org/apache/commons/io/build/AbstractStreamBuilder\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-   #8 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-   #9 = Methodref          #10.#11        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-  #10 = Class              #12            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n-  #11 = NameAndType        #13:#14        // getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-  #12 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n-  #13 = Utf8               getOrigin\n-  #14 = Utf8               ()Lorg/apache/commons/io/build/AbstractOrigin;\n-  #15 = Methodref          #16.#17        // org/apache/commons/io/build/AbstractOrigin.getByteArray:()[B\n-  #16 = Class              #18            // org/apache/commons/io/build/AbstractOrigin\n-  #17 = NameAndType        #19:#20        // getByteArray:()[B\n-  #18 = Utf8               org/apache/commons/io/build/AbstractOrigin\n-  #19 = Utf8               getByteArray\n-  #20 = Utf8               ()[B\n-  #21 = Fieldref           #10.#22        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.offset:I\n-  #22 = NameAndType        #23:#24        // offset:I\n-  #23 = Utf8               offset\n-  #24 = Utf8               I\n-  #25 = Fieldref           #10.#26        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.length:I\n-  #26 = NameAndType        #27:#24        // length:I\n-  #27 = Utf8               length\n-  #28 = Methodref          #7.#29         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.\"<init>\":([BII)V\n-  #29 = NameAndType        #5:#30         // \"<init>\":([BII)V\n-  #30 = Utf8               ([BII)V\n-  #31 = String             #32            // origin\n-  #32 = Utf8               origin\n-  #33 = Methodref          #34.#35        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #34 = Class              #36            // java/util/Objects\n-  #35 = NameAndType        #37:#38        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #36 = Utf8               java/util/Objects\n-  #37 = Utf8               requireNonNull\n-  #38 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #39 = Class              #40            // \"[B\"\n-  #40 = Utf8               [B\n-  #41 = Methodref          #2.#42         // org/apache/commons/io/build/AbstractStreamBuilder.setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n-  #42 = NameAndType        #43:#44        // setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n-  #43 = Utf8               setByteArray\n-  #44 = Utf8               ([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n-  #45 = Class              #46            // java/lang/IllegalArgumentException\n-  #46 = Utf8               java/lang/IllegalArgumentException\n-  #47 = String             #48            // length cannot be negative\n-  #48 = Utf8               length cannot be negative\n-  #49 = Methodref          #45.#50        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #50 = NameAndType        #5:#51         // \"<init>\":(Ljava/lang/String;)V\n-  #51 = Utf8               (Ljava/lang/String;)V\n-  #52 = String             #53            // offset cannot be negative\n-  #53 = Utf8               offset cannot be negative\n-  #54 = Methodref          #10.#55        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-  #55 = NameAndType        #43:#56        // setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-  #56 = Utf8               ([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-  #57 = Methodref          #10.#58        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n-  #58 = NameAndType        #59:#60        // get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n-  #59 = Utf8               get\n-  #60 = Utf8               ()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n-  #61 = Utf8               Code\n-  #62 = Utf8               LineNumberTable\n-  #63 = Utf8               LocalVariableTable\n-  #64 = Utf8               this\n-  #65 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-  #66 = Utf8               Exceptions\n-  #67 = Class              #68            // java/io/IOException\n-  #68 = Utf8               java/io/IOException\n-  #69 = Utf8               setLength\n-  #70 = Utf8               (I)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-  #71 = Utf8               StackMapTable\n-  #72 = Utf8               setOffset\n-  #73 = Utf8               ()Ljava/lang/Object;\n-  #74 = Utf8               Signature\n-  #75 = Utf8               Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;>;\n-  #76 = Utf8               SourceFile\n-  #77 = Utf8               UnsynchronizedByteArrayInputStream.java\n+   #5 = Utf8               offset\n+   #6 = Utf8               I\n+   #7 = Utf8               length\n+   #8 = Utf8               <init>\n+   #9 = Utf8               ()V\n+  #10 = Utf8               Code\n+  #11 = Methodref          #3.#12         // org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n+  #12 = NameAndType        #8:#9          // \"<init>\":()V\n+  #13 = Utf8               LineNumberTable\n+  #14 = Utf8               LocalVariableTable\n+  #15 = Utf8               this\n+  #16 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+  #17 = Utf8               get\n+  #18 = Utf8               ()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+  #19 = Utf8               Exceptions\n+  #20 = Class              #21            // java/io/IOException\n+  #21 = Utf8               java/io/IOException\n+  #22 = Class              #23            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  #23 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  #24 = Methodref          #1.#25         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+  #25 = NameAndType        #26:#27        // getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+  #26 = Utf8               getOrigin\n+  #27 = Utf8               ()Lorg/apache/commons/io/build/AbstractOrigin;\n+  #28 = Methodref          #29.#31        // org/apache/commons/io/build/AbstractOrigin.getByteArray:()[B\n+  #29 = Class              #30            // org/apache/commons/io/build/AbstractOrigin\n+  #30 = Utf8               org/apache/commons/io/build/AbstractOrigin\n+  #31 = NameAndType        #32:#33        // getByteArray:()[B\n+  #32 = Utf8               getByteArray\n+  #33 = Utf8               ()[B\n+  #34 = Fieldref           #1.#35         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.offset:I\n+  #35 = NameAndType        #5:#6          // offset:I\n+  #36 = Fieldref           #1.#37         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.length:I\n+  #37 = NameAndType        #7:#6          // length:I\n+  #38 = Methodref          #22.#39        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.\"<init>\":([BII)V\n+  #39 = NameAndType        #8:#40         // \"<init>\":([BII)V\n+  #40 = Utf8               ([BII)V\n+  #41 = Utf8               setByteArray\n+  #42 = Utf8               ([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+  #43 = String             #44            // origin\n+  #44 = Utf8               origin\n+  #45 = Methodref          #46.#48        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #46 = Class              #47            // java/util/Objects\n+  #47 = Utf8               java/util/Objects\n+  #48 = NameAndType        #49:#50        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #49 = Utf8               requireNonNull\n+  #50 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #51 = Class              #52            // \"[B\"\n+  #52 = Utf8               [B\n+  #53 = Methodref          #3.#54         // org/apache/commons/io/build/AbstractStreamBuilder.setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n+  #54 = NameAndType        #41:#55        // setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n+  #55 = Utf8               ([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n+  #56 = Utf8               setLength\n+  #57 = Utf8               (I)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+  #58 = Class              #59            // java/lang/IllegalArgumentException\n+  #59 = Utf8               java/lang/IllegalArgumentException\n+  #60 = String             #61            // length cannot be negative\n+  #61 = Utf8               length cannot be negative\n+  #62 = Methodref          #58.#63        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #63 = NameAndType        #8:#64         // \"<init>\":(Ljava/lang/String;)V\n+  #64 = Utf8               (Ljava/lang/String;)V\n+  #65 = Utf8               StackMapTable\n+  #66 = Utf8               setOffset\n+  #67 = String             #68            // offset cannot be negative\n+  #68 = Utf8               offset cannot be negative\n+  #69 = Methodref          #1.#70         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+  #70 = NameAndType        #41:#42        // setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+  #71 = Utf8               ()Ljava/lang/Object;\n+  #72 = Methodref          #1.#73         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder.get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+  #73 = NameAndType        #17:#18        // get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+  #74 = Utf8               SourceFile\n+  #75 = Utf8               UnsynchronizedByteArrayInputStream.java\n+  #76 = Utf8               Signature\n+  #77 = Utf8               Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;>;\n   #78 = Utf8               InnerClasses\n   #79 = Utf8               Builder\n {\n   private int offset;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n@@ -98,62 +98,62 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n+         1: invokespecial #11                 // Method org/apache/commons/io/build/AbstractStreamBuilder.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 74: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream get() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #7                  // class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+         0: new           #22                 // class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n          3: dup\n          4: aload_0\n-         5: invokevirtual #9                  // Method getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n-         8: invokevirtual #15                 // Method org/apache/commons/io/build/AbstractOrigin.getByteArray:()[B\n+         5: invokevirtual #24                 // Method getOrigin:()Lorg/apache/commons/io/build/AbstractOrigin;\n+         8: invokevirtual #28                 // Method org/apache/commons/io/build/AbstractOrigin.getByteArray:()[B\n         11: aload_0\n-        12: getfield      #21                 // Field offset:I\n+        12: getfield      #34                 // Field offset:I\n         15: aload_0\n-        16: getfield      #25                 // Field length:I\n-        19: invokespecial #28                 // Method org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.\"<init>\":([BII)V\n+        16: getfield      #36                 // Field length:I\n+        19: invokespecial #38                 // Method org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.\"<init>\":([BII)V\n         22: areturn\n       LineNumberTable:\n         line 86: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder setByteArray(byte[]);\n     descriptor: ([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #31                 // String origin\n-         4: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         7: checkcast     #39                 // class \"[B\"\n+         2: ldc           #43                 // String origin\n+         4: invokestatic  #45                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #51                 // class \"[B\"\n         10: arraylength\n-        11: putfield      #25                 // Field length:I\n+        11: putfield      #36                 // Field length:I\n         14: aload_0\n         15: aload_1\n-        16: invokespecial #41                 // Method org/apache/commons/io/build/AbstractStreamBuilder.setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n-        19: checkcast     #10                 // class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n+        16: invokespecial #53                 // Method org/apache/commons/io/build/AbstractStreamBuilder.setByteArray:([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n+        19: checkcast     #1                  // class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder\n         22: areturn\n       LineNumberTable:\n         line 91: 0\n         line 92: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n@@ -162,22 +162,22 @@\n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder setLength(int);\n     descriptor: (I)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifge          14\n-         4: new           #45                 // class java/lang/IllegalArgumentException\n+         4: new           #58                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #47                 // String length cannot be negative\n-        10: invokespecial #49                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #60                 // String length cannot be negative\n+        10: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: iload_1\n-        16: putfield      #25                 // Field length:I\n+        16: putfield      #36                 // Field length:I\n         19: aload_0\n         20: areturn\n       LineNumberTable:\n         line 96: 0\n         line 97: 4\n         line 99: 14\n         line 100: 19\n@@ -191,22 +191,22 @@\n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream$Builder setOffset(int);\n     descriptor: (I)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifge          14\n-         4: new           #45                 // class java/lang/IllegalArgumentException\n+         4: new           #58                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #52                 // String offset cannot be negative\n-        10: invokespecial #49                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #67                 // String offset cannot be negative\n+        10: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: iload_1\n-        16: putfield      #21                 // Field offset:I\n+        16: putfield      #34                 // Field offset:I\n         19: aload_0\n         20: areturn\n       LineNumberTable:\n         line 104: 0\n         line 105: 4\n         line 107: 14\n         line 108: 19\n@@ -220,35 +220,33 @@\n   public org.apache.commons.io.build.AbstractOriginSupplier setByteArray(byte[]);\n     descriptor: ([B)Lorg/apache/commons/io/build/AbstractOriginSupplier;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #54                 // Method setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n+         2: invokevirtual #69                 // Method setByteArray:([B)Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n          5: areturn\n       LineNumberTable:\n-        line 74: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n \n   public java.lang.Object get() throws java.io.IOException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #57                 // Method get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+         1: invokevirtual #72                 // Method get:()Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n          4: areturn\n       LineNumberTable:\n-        line 74: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;\n-    Exceptions:\n-      throws java.io.IOException\n }\n-Signature: #75                          // Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;>;\n SourceFile: \"UnsynchronizedByteArrayInputStream.java\"\n+Signature: #77                          // Lorg/apache/commons/io/build/AbstractStreamBuilder<Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder;>;\n InnerClasses:\n-  public static #79= #10 of #7;           // Builder=class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  public static #79= #1 of #22;           // Builder=class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n"}]}
