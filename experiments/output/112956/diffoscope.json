{"diffoscope-json-version": 1, "source1": "first/Repository.class", "source2": "second/Repository.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,19 +1,23 @@\n \n package org.apache.bcel;\n \n-import org.apache.bcel.util.SyntheticRepository;\n import java.io.IOException;\n import org.apache.bcel.util.ClassPath;\n import org.apache.bcel.classfile.JavaClass;\n+import org.apache.bcel.util.SyntheticRepository;\n \n public abstract class Repository\n {\n     private static org.apache.bcel.util.Repository repository;\n     \n+    static {\n+        Repository.repository = (org.apache.bcel.util.Repository)SyntheticRepository.getInstance();\n+    }\n+    \n     public static JavaClass addClass(final JavaClass clazz) {\n         final JavaClass old = Repository.repository.findClass(clazz.getClassName());\n         Repository.repository.storeClass(clazz);\n         return old;\n     }\n     \n     public static void clearCache() {\n@@ -77,16 +81,39 @@\n     }\n     \n     public static JavaClass lookupClass(final String className) throws ClassNotFoundException {\n         return Repository.repository.loadClass(className);\n     }\n     \n     public static ClassPath.ClassFile lookupClassFile(final String className) {\n-        try (final ClassPath path = Repository.repository.getClassPath()) {\n-            return (path == null) ? null : path.getClassFile(className);\n+        try {\n+            Throwable t = null;\n+            try {\n+                final ClassPath path = Repository.repository.getClassPath();\n+                try {\n+                    return (path == null) ? null : path.getClassFile(className);\n+                }\n+                finally {\n+                    if (path != null) {\n+                        path.close();\n+                    }\n+                }\n+            }\n+            finally {\n+                if (t == null) {\n+                    final Throwable exception;\n+                    t = exception;\n+                }\n+                else {\n+                    final Throwable exception;\n+                    if (t != exception) {\n+                        t.addSuppressed(exception);\n+                    }\n+                }\n+            }\n         }\n         catch (final IOException e) {\n             return null;\n         }\n     }\n     \n     public static void removeClass(final JavaClass clazz) {\n@@ -96,12 +123,8 @@\n     public static void removeClass(final String clazz) {\n         Repository.repository.removeClass(Repository.repository.findClass(clazz));\n     }\n     \n     public static void setRepository(final org.apache.bcel.util.Repository rep) {\n         Repository.repository = rep;\n     }\n-    \n-    static {\n-        Repository.repository = (org.apache.bcel.util.Repository)SyntheticRepository.getInstance();\n-    }\n }\n"}]}
