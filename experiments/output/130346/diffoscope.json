{"diffoscope-json-version": 1, "source1": "first/NotFileFilter.class", "source2": "second/NotFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,99 +1,101 @@\n-  SHA-256 checksum 0ed558625b972cae6de395a6efc86f7761e81ae8bec09521bc10fbeeea1eee82\n+  SHA-256 checksum fe7872f2f6e3c37cef86f4f7fca6c133ae0c9654eae6759df1f73d59dcfe5ece\n   Compiled from \"NotFileFilter.java\"\n public class org.apache.commons.io.filefilter.NotFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #15                         // org/apache/commons/io/filefilter/NotFileFilter\n-  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #1                          // org/apache/commons/io/filefilter/NotFileFilter\n+  super_class: #3                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/filefilter/NotFileFilter\n+   #2 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+   #3 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // java/lang/IllegalArgumentException\n-   #8 = Utf8               java/lang/IllegalArgumentException\n-   #9 = String             #10            // The filter must not be null\n-  #10 = Utf8               The filter must not be null\n-  #11 = Methodref          #7.#12         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = NameAndType        #5:#13         // \"<init>\":(Ljava/lang/String;)V\n-  #13 = Utf8               (Ljava/lang/String;)V\n-  #14 = Fieldref           #15.#16        // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #15 = Class              #17            // org/apache/commons/io/filefilter/NotFileFilter\n-  #16 = NameAndType        #18:#19        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #17 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #18 = Utf8               filter\n-  #19 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #20 = InterfaceMethodref #21.#22        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-  #21 = Class              #23            // org/apache/commons/io/filefilter/IOFileFilter\n-  #22 = NameAndType        #24:#25        // accept:(Ljava/io/File;)Z\n-  #23 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #24 = Utf8               accept\n-  #25 = Utf8               (Ljava/io/File;)Z\n-  #26 = InterfaceMethodref #21.#27        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #27 = NameAndType        #24:#28        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #28 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #29 = InterfaceMethodref #21.#30        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #30 = NameAndType        #24:#31        // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #31 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #32 = Methodref          #15.#33        // org/apache/commons/io/filefilter/NotFileFilter.not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n-  #33 = NameAndType        #34:#35        // not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n-  #34 = Utf8               not\n-  #35 = Utf8               (Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n-  #36 = Fieldref           #37.#38        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #37 = Class              #39            // java/nio/file/FileVisitResult\n-  #38 = NameAndType        #40:#41        // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #39 = Utf8               java/nio/file/FileVisitResult\n-  #40 = Utf8               CONTINUE\n-  #41 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #42 = Fieldref           #37.#43        // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #43 = NameAndType        #44:#41        // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #44 = Utf8               TERMINATE\n-  #45 = Class              #46            // java/lang/StringBuilder\n-  #46 = Utf8               java/lang/StringBuilder\n-  #47 = Methodref          #45.#3         // java/lang/StringBuilder.\"<init>\":()V\n-  #48 = String             #49            // NOT (\n-  #49 = Utf8               NOT (\n-  #50 = Methodref          #45.#51        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #51 = NameAndType        #52:#53        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #52 = Utf8               append\n-  #53 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #54 = InterfaceMethodref #21.#55        // org/apache/commons/io/filefilter/IOFileFilter.toString:()Ljava/lang/String;\n-  #55 = NameAndType        #56:#57        // toString:()Ljava/lang/String;\n-  #56 = Utf8               toString\n-  #57 = Utf8               ()Ljava/lang/String;\n-  #58 = String             #59            // )\n-  #59 = Utf8               )\n-  #60 = Methodref          #45.#55        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #61 = Class              #62            // java/io/Serializable\n-  #62 = Utf8               java/io/Serializable\n-  #63 = Utf8               serialVersionUID\n-  #64 = Utf8               J\n-  #65 = Utf8               ConstantValue\n-  #66 = Long               6131563330944994230l\n-  #68 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #69 = Utf8               Code\n-  #70 = Utf8               LineNumberTable\n-  #71 = Utf8               LocalVariableTable\n-  #72 = Utf8               this\n-  #73 = Utf8               Lorg/apache/commons/io/filefilter/NotFileFilter;\n-  #74 = Utf8               StackMapTable\n-  #75 = Utf8               file\n-  #76 = Utf8               Ljava/io/File;\n-  #77 = Utf8               name\n-  #78 = Utf8               Ljava/lang/String;\n-  #79 = Utf8               Ljava/nio/file/Path;\n-  #80 = Utf8               attributes\n-  #81 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #82 = Utf8               SourceFile\n-  #83 = Utf8               NotFileFilter.java\n+   #5 = Class              #6             // java/io/Serializable\n+   #6 = Utf8               java/io/Serializable\n+   #7 = Utf8               serialVersionUID\n+   #8 = Utf8               J\n+   #9 = Utf8               ConstantValue\n+  #10 = Long               6131563330944994230l\n+  #12 = Utf8               filter\n+  #13 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #14 = Utf8               <init>\n+  #15 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+  #18 = NameAndType        #14:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = Class              #21            // java/lang/IllegalArgumentException\n+  #21 = Utf8               java/lang/IllegalArgumentException\n+  #22 = String             #23            // The filter must not be null\n+  #23 = Utf8               The filter must not be null\n+  #24 = Methodref          #20.#25        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #25 = NameAndType        #14:#26        // \"<init>\":(Ljava/lang/String;)V\n+  #26 = Utf8               (Ljava/lang/String;)V\n+  #27 = Fieldref           #1.#28         // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #28 = NameAndType        #12:#13        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               LocalVariableTable\n+  #31 = Utf8               this\n+  #32 = Utf8               Lorg/apache/commons/io/filefilter/NotFileFilter;\n+  #33 = Utf8               StackMapTable\n+  #34 = Class              #35            // org/apache/commons/io/filefilter/IOFileFilter\n+  #35 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #36 = Utf8               accept\n+  #37 = Utf8               (Ljava/io/File;)Z\n+  #38 = InterfaceMethodref #34.#39        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+  #39 = NameAndType        #36:#37        // accept:(Ljava/io/File;)Z\n+  #40 = Utf8               file\n+  #41 = Utf8               Ljava/io/File;\n+  #42 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #43 = InterfaceMethodref #34.#44        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #44 = NameAndType        #36:#42        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #45 = Utf8               name\n+  #46 = Utf8               Ljava/lang/String;\n+  #47 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #48 = InterfaceMethodref #34.#49        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #49 = NameAndType        #36:#47        // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #50 = Methodref          #1.#51         // org/apache/commons/io/filefilter/NotFileFilter.not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n+  #51 = NameAndType        #52:#53        // not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n+  #52 = Utf8               not\n+  #53 = Utf8               (Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n+  #54 = Utf8               Ljava/nio/file/Path;\n+  #55 = Utf8               attributes\n+  #56 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #57 = Fieldref           #58.#60        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #58 = Class              #59            // java/nio/file/FileVisitResult\n+  #59 = Utf8               java/nio/file/FileVisitResult\n+  #60 = NameAndType        #61:#62        // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #61 = Utf8               CONTINUE\n+  #62 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #63 = Fieldref           #58.#64        // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #64 = NameAndType        #65:#62        // TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #65 = Utf8               TERMINATE\n+  #66 = Utf8               toString\n+  #67 = Utf8               ()Ljava/lang/String;\n+  #68 = Class              #69            // java/lang/StringBuilder\n+  #69 = Utf8               java/lang/StringBuilder\n+  #70 = String             #71            // NOT (\n+  #71 = Utf8               NOT (\n+  #72 = Methodref          #68.#25        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #73 = Methodref          #74.#76        // java/lang/Object.toString:()Ljava/lang/String;\n+  #74 = Class              #75            // java/lang/Object\n+  #75 = Utf8               java/lang/Object\n+  #76 = NameAndType        #66:#67        // toString:()Ljava/lang/String;\n+  #77 = Methodref          #68.#78        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #78 = NameAndType        #79:#80        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #79 = Utf8               append\n+  #80 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #81 = String             #82            // )\n+  #82 = Utf8               )\n+  #83 = Methodref          #68.#76        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #84 = Utf8               SourceFile\n+  #85 = Utf8               NotFileFilter.java\n {\n   private static final long serialVersionUID = 6131563330944994230l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 6131563330944994230l\n \n   private final org.apache.commons.io.filefilter.IOFileFilter filter;\n@@ -102,25 +104,25 @@\n \n   public org.apache.commons.io.filefilter.NotFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #17                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #7                  // class java/lang/IllegalArgumentException\n+         8: new           #20                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #9                  // String The filter must not be null\n-        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #22                 // String The filter must not be null\n+        14: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        20: putfield      #27                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         23: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 4\n         line 46: 8\n         line 48: 18\n         line 49: 23\n@@ -136,21 +138,21 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         1: getfield      #27                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          4: aload_1\n-         5: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-        10: ifne          17\n-        13: iconst_1\n+         5: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+        10: ifeq          17\n+        13: iconst_0\n         14: goto          18\n-        17: iconst_0\n+        17: iconst_1\n         18: ireturn\n       LineNumberTable:\n         line 59: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;\n             0      19     1  file   Ljava/io/File;\n@@ -161,22 +163,22 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         1: getfield      #27                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #26,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-        11: ifne          18\n-        14: iconst_1\n+         6: invokeinterface #43,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        11: ifeq          18\n+        14: iconst_0\n         15: goto          19\n-        18: iconst_0\n+        18: iconst_1\n         19: ireturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;\n             0      20     1  file   Ljava/io/File;\n@@ -189,19 +191,19 @@\n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n-         2: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         2: getfield      #27                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          5: aload_1\n          6: aload_2\n-         7: invokeinterface #29,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        12: invokespecial #32                 // Method not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n+         7: invokeinterface #48,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        12: invokespecial #50                 // Method not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n         15: areturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;\n             0      16     1  file   Ljava/nio/file/Path;\n@@ -209,19 +211,19 @@\n \n   private java.nio.file.FileVisitResult not(java.nio.file.FileVisitResult);\n     descriptor: (Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: getstatic     #36                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         1: getstatic     #57                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          4: if_acmpne     13\n-         7: getstatic     #42                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+         7: getstatic     #63                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         10: goto          16\n-        13: getstatic     #36                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        13: getstatic     #57                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         16: areturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 13\n         line 87: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -232,28 +234,27 @@\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/FileVisitResult ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #45                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #68                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #48                 // String NOT (\n-         9: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        16: invokeinterface #54,  1           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.toString:()Ljava/lang/String;\n-        21: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: ldc           #58                 // String )\n-        26: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        32: areturn\n+         4: ldc           #70                 // String NOT (\n+         6: invokespecial #72                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #27                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: invokevirtual #73                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        16: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: ldc           #81                 // String )\n+        21: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: invokevirtual #83                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        27: areturn\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      33     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;\n+            0      28     0  this   Lorg/apache/commons/io/filefilter/NotFileFilter;\n }\n SourceFile: \"NotFileFilter.java\"\n"}]}
