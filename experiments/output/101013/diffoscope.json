{"diffoscope-json-version": 1, "source1": "first/SlistHandler.class", "source2": "second/SlistHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,18 +1,22 @@\n \n package com.puppycrawl.tools.checkstyle.checks.indentation;\n \n-import com.puppycrawl.tools.checkstyle.utils.TokenUtil;\n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n+import com.puppycrawl.tools.checkstyle.utils.TokenUtil;\n import java.util.BitSet;\n \n public class SlistHandler extends BlockParentHandler\n {\n     private static final BitSet PARENT_TOKEN_TYPES;\n     \n+    static {\n+        PARENT_TOKEN_TYPES = TokenUtil.asBitSet(new int[] { 8, 9, 12, 67, 83, 84, 85, 91, 92, 95, 96, 97, 203 });\n+    }\n+    \n     public SlistHandler(final IndentationCheck indentCheck, final DetailAST ast, final AbstractExpressionHandler parent) {\n         super(indentCheck, \"block\", ast, parent);\n     }\n     \n     public IndentLevel getSuggestedChildIndent(final AbstractExpressionHandler child) {\n         IndentLevel result;\n         if ((this.getParent() instanceof BlockParentHandler && !(this.getParent() instanceof SlistHandler)) || (child instanceof SlistHandler && this.getParent() instanceof CaseHandler)) {\n@@ -51,12 +55,8 @@\n         }\n     }\n     \n     private boolean isSameLineCaseGroup() {\n         final DetailAST parentNode = this.getMainAst().getParent();\n         return parentNode.getType() == 33 && TokenUtil.areOnSameLine(this.getMainAst(), parentNode);\n     }\n-    \n-    static {\n-        PARENT_TOKEN_TYPES = TokenUtil.asBitSet(new int[] { 8, 9, 12, 67, 83, 84, 85, 91, 92, 95, 96, 97, 203 });\n-    }\n }\n"}]}
