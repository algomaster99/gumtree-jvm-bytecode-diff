{"diffoscope-json-version": 1, "source1": "first/Configurations.class", "source2": "second/Configurations.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,167 +17,167 @@\n {\n     private final Parameters parameters;\n     \n     public Configurations() {\n         this(null);\n     }\n     \n-    public Configurations(final Parameters params) {\n-        this.parameters = ((params != null) ? params : new Parameters());\n+    public Configurations(final Parameters parameters) {\n+        this.parameters = ((parameters != null) ? parameters : new Parameters());\n     }\n     \n     public Parameters getParameters() {\n         return this.parameters;\n     }\n     \n-    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> configClass, final File file) {\n-        return this.createFileBasedBuilder(configClass, this.fileParams(file));\n+    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> clazz, final File file) {\n+        return this.createFileBasedBuilder(clazz, this.fileParams(file));\n     }\n     \n-    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> configClass, final URL url) {\n-        return this.createFileBasedBuilder(configClass, this.fileParams(url));\n+    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> clazz, final URL url) {\n+        return this.createFileBasedBuilder(clazz, this.fileParams(url));\n     }\n     \n-    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> configClass, final String path) {\n-        return this.createFileBasedBuilder(configClass, this.fileParams(path));\n+    public <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> fileBasedBuilder(final Class<T> clazz, final String s) {\n+        return this.createFileBasedBuilder(clazz, this.fileParams(s));\n     }\n     \n-    public <T extends FileBasedConfiguration> T fileBased(final Class<T> configClass, final File file) throws ConfigurationException {\n-        return (T)this.fileBasedBuilder(configClass, file).getConfiguration();\n+    public <T extends FileBasedConfiguration> T fileBased(final Class<T> clazz, final File file) throws ConfigurationException {\n+        return (T)this.fileBasedBuilder(clazz, file).getConfiguration();\n     }\n     \n-    public <T extends FileBasedConfiguration> T fileBased(final Class<T> configClass, final URL url) throws ConfigurationException {\n-        return (T)this.fileBasedBuilder(configClass, url).getConfiguration();\n+    public <T extends FileBasedConfiguration> T fileBased(final Class<T> clazz, final URL url) throws ConfigurationException {\n+        return (T)this.fileBasedBuilder(clazz, url).getConfiguration();\n     }\n     \n-    public <T extends FileBasedConfiguration> T fileBased(final Class<T> configClass, final String path) throws ConfigurationException {\n-        return (T)this.fileBasedBuilder(configClass, path).getConfiguration();\n+    public <T extends FileBasedConfiguration> T fileBased(final Class<T> clazz, final String s) throws ConfigurationException {\n+        return (T)this.fileBasedBuilder(clazz, s).getConfiguration();\n     }\n     \n     public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder() {\n         return this.createFileBasedBuilder(PropertiesConfiguration.class);\n     }\n     \n     public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final File file) {\n         return this.fileBasedBuilder(PropertiesConfiguration.class, file);\n     }\n     \n-    public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final PropertiesBuilderParameters parameters) {\n-        return (FileBasedConfigurationBuilder<PropertiesConfiguration>)this.propertiesBuilder().configure(new BuilderParameters[] { (BuilderParameters)parameters });\n+    public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final PropertiesBuilderParameters propertiesBuilderParameters) {\n+        return (FileBasedConfigurationBuilder<PropertiesConfiguration>)this.propertiesBuilder().configure(new BuilderParameters[] { (BuilderParameters)propertiesBuilderParameters });\n     }\n     \n     public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final URL url) {\n         return this.fileBasedBuilder(PropertiesConfiguration.class, url);\n     }\n     \n-    public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final String path) {\n-        return this.fileBasedBuilder(PropertiesConfiguration.class, path);\n+    public FileBasedConfigurationBuilder<PropertiesConfiguration> propertiesBuilder(final String s) {\n+        return this.fileBasedBuilder(PropertiesConfiguration.class, s);\n     }\n     \n     public PropertiesConfiguration properties(final File file) throws ConfigurationException {\n         return (PropertiesConfiguration)this.propertiesBuilder(file).getConfiguration();\n     }\n     \n     public PropertiesConfiguration properties(final URL url) throws ConfigurationException {\n         return (PropertiesConfiguration)this.propertiesBuilder(url).getConfiguration();\n     }\n     \n-    public PropertiesConfiguration properties(final String path) throws ConfigurationException {\n-        return (PropertiesConfiguration)this.propertiesBuilder(path).getConfiguration();\n+    public PropertiesConfiguration properties(final String s) throws ConfigurationException {\n+        return (PropertiesConfiguration)this.propertiesBuilder(s).getConfiguration();\n     }\n     \n     public FileBasedConfigurationBuilder<XMLConfiguration> xmlBuilder(final File file) {\n         return this.fileBasedBuilder(XMLConfiguration.class, file);\n     }\n     \n     public FileBasedConfigurationBuilder<XMLConfiguration> xmlBuilder(final URL url) {\n         return this.fileBasedBuilder(XMLConfiguration.class, url);\n     }\n     \n-    public FileBasedConfigurationBuilder<XMLConfiguration> xmlBuilder(final String path) {\n-        return this.fileBasedBuilder(XMLConfiguration.class, path);\n+    public FileBasedConfigurationBuilder<XMLConfiguration> xmlBuilder(final String s) {\n+        return this.fileBasedBuilder(XMLConfiguration.class, s);\n     }\n     \n     public XMLConfiguration xml(final File file) throws ConfigurationException {\n         return (XMLConfiguration)this.xmlBuilder(file).getConfiguration();\n     }\n     \n     public XMLConfiguration xml(final URL url) throws ConfigurationException {\n         return (XMLConfiguration)this.xmlBuilder(url).getConfiguration();\n     }\n     \n-    public XMLConfiguration xml(final String path) throws ConfigurationException {\n-        return (XMLConfiguration)this.xmlBuilder(path).getConfiguration();\n+    public XMLConfiguration xml(final String s) throws ConfigurationException {\n+        return (XMLConfiguration)this.xmlBuilder(s).getConfiguration();\n     }\n     \n     public FileBasedConfigurationBuilder<INIConfiguration> iniBuilder(final File file) {\n         return this.fileBasedBuilder(INIConfiguration.class, file);\n     }\n     \n     public FileBasedConfigurationBuilder<INIConfiguration> iniBuilder(final URL url) {\n         return this.fileBasedBuilder(INIConfiguration.class, url);\n     }\n     \n-    public FileBasedConfigurationBuilder<INIConfiguration> iniBuilder(final String path) {\n-        return this.fileBasedBuilder(INIConfiguration.class, path);\n+    public FileBasedConfigurationBuilder<INIConfiguration> iniBuilder(final String s) {\n+        return this.fileBasedBuilder(INIConfiguration.class, s);\n     }\n     \n     public INIConfiguration ini(final File file) throws ConfigurationException {\n         return (INIConfiguration)this.iniBuilder(file).getConfiguration();\n     }\n     \n     public INIConfiguration ini(final URL url) throws ConfigurationException {\n         return (INIConfiguration)this.iniBuilder(url).getConfiguration();\n     }\n     \n-    public INIConfiguration ini(final String path) throws ConfigurationException {\n-        return (INIConfiguration)this.iniBuilder(path).getConfiguration();\n+    public INIConfiguration ini(final String s) throws ConfigurationException {\n+        return (INIConfiguration)this.iniBuilder(s).getConfiguration();\n     }\n     \n     public CombinedConfigurationBuilder combinedBuilder(final File file) {\n         return new CombinedConfigurationBuilder().configure(new BuilderParameters[] { (BuilderParameters)this.fileParams(file) });\n     }\n     \n     public CombinedConfigurationBuilder combinedBuilder(final URL url) {\n         return new CombinedConfigurationBuilder().configure(new BuilderParameters[] { (BuilderParameters)this.fileParams(url) });\n     }\n     \n-    public CombinedConfigurationBuilder combinedBuilder(final String path) {\n-        return new CombinedConfigurationBuilder().configure(new BuilderParameters[] { (BuilderParameters)this.fileParams(path) });\n+    public CombinedConfigurationBuilder combinedBuilder(final String s) {\n+        return new CombinedConfigurationBuilder().configure(new BuilderParameters[] { (BuilderParameters)this.fileParams(s) });\n     }\n     \n     public CombinedConfiguration combined(final File file) throws ConfigurationException {\n         return (CombinedConfiguration)this.combinedBuilder(file).getConfiguration();\n     }\n     \n     public CombinedConfiguration combined(final URL url) throws ConfigurationException {\n         return (CombinedConfiguration)this.combinedBuilder(url).getConfiguration();\n     }\n     \n-    public CombinedConfiguration combined(final String path) throws ConfigurationException {\n-        return (CombinedConfiguration)this.combinedBuilder(path).getConfiguration();\n+    public CombinedConfiguration combined(final String s) throws ConfigurationException {\n+        return (CombinedConfiguration)this.combinedBuilder(s).getConfiguration();\n     }\n     \n-    private <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> createFileBasedBuilder(final Class<T> configClass) {\n-        return (FileBasedConfigurationBuilder<T>)new FileBasedConfigurationBuilder((Class)configClass);\n+    private <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> createFileBasedBuilder(final Class<T> clazz) {\n+        return (FileBasedConfigurationBuilder<T>)new FileBasedConfigurationBuilder((Class)clazz);\n     }\n     \n-    private <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> createFileBasedBuilder(final Class<T> configClass, final FileBasedBuilderParameters params) {\n-        return (FileBasedConfigurationBuilder<T>)this.createFileBasedBuilder(configClass).configure(new BuilderParameters[] { (BuilderParameters)params });\n+    private <T extends FileBasedConfiguration> FileBasedConfigurationBuilder<T> createFileBasedBuilder(final Class<T> clazz, final FileBasedBuilderParameters fileBasedBuilderParameters) {\n+        return (FileBasedConfigurationBuilder<T>)this.createFileBasedBuilder(clazz).configure(new BuilderParameters[] { (BuilderParameters)fileBasedBuilderParameters });\n     }\n     \n     private FileBasedBuilderParameters fileParams() {\n         return this.getParameters().fileBased();\n     }\n     \n     private FileBasedBuilderParameters fileParams(final File file) {\n         return (FileBasedBuilderParameters)this.fileParams().setFile(file);\n     }\n     \n     private FileBasedBuilderParameters fileParams(final URL url) {\n         return (FileBasedBuilderParameters)this.fileParams().setURL(url);\n     }\n     \n-    private FileBasedBuilderParameters fileParams(final String path) {\n-        return (FileBasedBuilderParameters)this.fileParams().setFileName(path);\n+    private FileBasedBuilderParameters fileParams(final String fileName) {\n+        return (FileBasedBuilderParameters)this.fileParams().setFileName(fileName);\n     }\n }\n"}]}
