{"diffoscope-json-version": 1, "source1": "first/XZUtils.class", "source2": "second/XZUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum 1a374136ad021cf6589471d34467f0d052fc58b67391b7ade782bb5f488e969a\n+  SHA-256 checksum 8921f4acc2c67fa9a20fd31b21790b31659003068e49a9d19ffa20d7b8152b29\n   Compiled from \"XZUtils.java\"\n public class org.apache.commons.compress.compressors.xz.XZUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #28                         // org/apache/commons/compress/compressors/xz/XZUtils\n   super_class: #29                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #29.#86       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #28.#87       // org/apache/commons/compress/compressors/xz/XZUtils.HEADER_MAGIC:[B\n-    #3 = Fieldref           #28.#88       // org/apache/commons/compress/compressors/xz/XZUtils.cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #4 = Fieldref           #30.#89       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #5 = Fieldref           #30.#90       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #6 = Methodref          #28.#91       // org/apache/commons/compress/compressors/xz/XZUtils.internalIsXZCompressionAvailable:()Z\n-    #7 = Methodref          #92.#93       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n-    #8 = Class              #94           // java/lang/NoClassDefFoundError\n-    #9 = Fieldref           #28.#95       // org/apache/commons/compress/compressors/xz/XZUtils.fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n-   #10 = Methodref          #22.#96       // org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n-   #11 = Methodref          #22.#97       // org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #12 = Methodref          #22.#98       // org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #13 = Fieldref           #30.#99       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #14 = Class              #100          // java/util/HashMap\n-   #15 = Methodref          #14.#86       // java/util/HashMap.\"<init>\":()V\n-   #16 = String             #101          // .txz\n-   #17 = String             #102          // .tar\n-   #18 = InterfaceMethodref #103.#104     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = String             #105          // .xz\n-   #20 = String             #106          //\n-   #21 = String             #107          // -xz\n-   #22 = Class              #108          // org/apache/commons/compress/compressors/FileNameUtil\n-   #23 = Methodref          #22.#109      // org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n-   #24 = String             #110          // org.osgi.framework.BundleEvent\n-   #25 = Methodref          #111.#112     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-   #26 = Class              #113          // java/lang/Exception\n-   #27 = Methodref          #28.#114      // org/apache/commons/compress/compressors/xz/XZUtils.setCacheXZAvailablity:(Z)V\n-   #28 = Class              #115          // org/apache/commons/compress/compressors/xz/XZUtils\n-   #29 = Class              #116          // java/lang/Object\n-   #30 = Class              #117          // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n+    #1 = Methodref          #29.#83       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #28.#84       // org/apache/commons/compress/compressors/xz/XZUtils.HEADER_MAGIC:[B\n+    #3 = Fieldref           #28.#85       // org/apache/commons/compress/compressors/xz/XZUtils.cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+    #4 = Fieldref           #30.#86       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+    #5 = Fieldref           #30.#87       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+    #6 = Methodref          #28.#88       // org/apache/commons/compress/compressors/xz/XZUtils.internalIsXZCompressionAvailable:()Z\n+    #7 = Methodref          #89.#90       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n+    #8 = Class              #91           // java/lang/NoClassDefFoundError\n+    #9 = Fieldref           #28.#92       // org/apache/commons/compress/compressors/xz/XZUtils.fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+   #10 = Methodref          #22.#93       // org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n+   #11 = Methodref          #22.#94       // org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #12 = Methodref          #22.#95       // org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #13 = Fieldref           #30.#96       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #14 = Class              #97           // java/util/HashMap\n+   #15 = Methodref          #14.#83       // java/util/HashMap.\"<init>\":()V\n+   #16 = String             #98           // .txz\n+   #17 = String             #99           // .tar\n+   #18 = InterfaceMethodref #80.#100      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #19 = String             #101          // .xz\n+   #20 = String             #102          //\n+   #21 = String             #103          // -xz\n+   #22 = Class              #104          // org/apache/commons/compress/compressors/FileNameUtil\n+   #23 = Methodref          #22.#105      // org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n+   #24 = String             #106          // org.osgi.framework.BundleEvent\n+   #25 = Methodref          #107.#108     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+   #26 = Class              #109          // java/lang/Exception\n+   #27 = Methodref          #28.#110      // org/apache/commons/compress/compressors/xz/XZUtils.setCacheXZAvailablity:(Z)V\n+   #28 = Class              #111          // org/apache/commons/compress/compressors/xz/XZUtils\n+   #29 = Class              #112          // java/lang/Object\n+   #30 = Class              #113          // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n    #31 = Utf8               CachedAvailability\n    #32 = Utf8               InnerClasses\n    #33 = Utf8               fileNameUtil\n    #34 = Utf8               Lorg/apache/commons/compress/compressors/FileNameUtil;\n    #35 = Utf8               HEADER_MAGIC\n    #36 = Utf8               [B\n    #37 = Utf8               cachedXZAvailability\n@@ -59,87 +59,83 @@\n    #49 = Utf8               I\n    #50 = Utf8               signature\n    #51 = Utf8               length\n    #52 = Utf8               StackMapTable\n    #53 = Utf8               isXZCompressionAvailable\n    #54 = Utf8               ()Z\n    #55 = Utf8               cachedResult\n-   #56 = Class              #117          // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n-   #57 = Utf8               internalIsXZCompressionAvailable\n-   #58 = Utf8               error\n-   #59 = Utf8               Ljava/lang/NoClassDefFoundError;\n-   #60 = Class              #94           // java/lang/NoClassDefFoundError\n-   #61 = Utf8               isCompressedFilename\n-   #62 = Utf8               (Ljava/lang/String;)Z\n-   #63 = Utf8               filename\n-   #64 = Utf8               Ljava/lang/String;\n-   #65 = Utf8               getUncompressedFilename\n-   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #67 = Utf8               getCompressedFilename\n-   #68 = Utf8               setCacheXZAvailablity\n-   #69 = Utf8               (Z)V\n-   #70 = Utf8               hasXz\n-   #71 = Utf8               Z\n-   #72 = Utf8               doCache\n-   #73 = Utf8               getCachedXZAvailability\n-   #74 = Utf8               ()Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #75 = Utf8               <clinit>\n-   #76 = Utf8               ex\n-   #77 = Utf8               Ljava/lang/Exception;\n-   #78 = Utf8               uncompressSuffix\n-   #79 = Utf8               Ljava/util/Map;\n-   #80 = Utf8               LocalVariableTypeTable\n-   #81 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-   #82 = Class              #118          // java/util/Map\n-   #83 = Class              #113          // java/lang/Exception\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               XZUtils.java\n-   #86 = NameAndType        #39:#40       // \"<init>\":()V\n-   #87 = NameAndType        #35:#36       // HEADER_MAGIC:[B\n-   #88 = NameAndType        #37:#38       // cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #89 = NameAndType        #119:#38      // DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #90 = NameAndType        #120:#38      // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #91 = NameAndType        #57:#54       // internalIsXZCompressionAvailable:()Z\n-   #92 = Class              #121          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #93 = NameAndType        #46:#47       // matches:([BI)Z\n-   #94 = Utf8               java/lang/NoClassDefFoundError\n-   #95 = NameAndType        #33:#34       // fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n-   #96 = NameAndType        #61:#62       // isCompressedFilename:(Ljava/lang/String;)Z\n-   #97 = NameAndType        #65:#66       // getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #98 = NameAndType        #67:#66       // getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #99 = NameAndType        #122:#38      // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-  #100 = Utf8               java/util/HashMap\n-  #101 = Utf8               .txz\n-  #102 = Utf8               .tar\n-  #103 = Class              #118          // java/util/Map\n-  #104 = NameAndType        #123:#124     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #105 = Utf8               .xz\n-  #106 = Utf8\n-  #107 = Utf8               -xz\n-  #108 = Utf8               org/apache/commons/compress/compressors/FileNameUtil\n-  #109 = NameAndType        #39:#125      // \"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n-  #110 = Utf8               org.osgi.framework.BundleEvent\n-  #111 = Class              #126          // java/lang/Class\n-  #112 = NameAndType        #127:#128     // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #113 = Utf8               java/lang/Exception\n-  #114 = NameAndType        #68:#69       // setCacheXZAvailablity:(Z)V\n-  #115 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n-  #116 = Utf8               java/lang/Object\n-  #117 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n-  #118 = Utf8               java/util/Map\n-  #119 = Utf8               DONT_CACHE\n-  #120 = Utf8               CACHED_AVAILABLE\n-  #121 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-  #122 = Utf8               CACHED_UNAVAILABLE\n-  #123 = Utf8               put\n-  #124 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #125 = Utf8               (Ljava/util/Map;Ljava/lang/String;)V\n-  #126 = Utf8               java/lang/Class\n-  #127 = Utf8               forName\n-  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+   #56 = Utf8               internalIsXZCompressionAvailable\n+   #57 = Utf8               error\n+   #58 = Utf8               Ljava/lang/NoClassDefFoundError;\n+   #59 = Utf8               isCompressedFilename\n+   #60 = Utf8               (Ljava/lang/String;)Z\n+   #61 = Utf8               filename\n+   #62 = Utf8               Ljava/lang/String;\n+   #63 = Utf8               getUncompressedFilename\n+   #64 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #65 = Utf8               getCompressedFilename\n+   #66 = Utf8               setCacheXZAvailablity\n+   #67 = Utf8               (Z)V\n+   #68 = Utf8               hasXz\n+   #69 = Utf8               Z\n+   #70 = Utf8               doCache\n+   #71 = Utf8               getCachedXZAvailability\n+   #72 = Utf8               ()Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #73 = Utf8               <clinit>\n+   #74 = Utf8               ex\n+   #75 = Utf8               Ljava/lang/Exception;\n+   #76 = Utf8               uncompressSuffix\n+   #77 = Utf8               Ljava/util/Map;\n+   #78 = Utf8               LocalVariableTypeTable\n+   #79 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+   #80 = Class              #114          // java/util/Map\n+   #81 = Utf8               SourceFile\n+   #82 = Utf8               XZUtils.java\n+   #83 = NameAndType        #39:#40       // \"<init>\":()V\n+   #84 = NameAndType        #35:#36       // HEADER_MAGIC:[B\n+   #85 = NameAndType        #37:#38       // cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #86 = NameAndType        #115:#38      // DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #87 = NameAndType        #116:#38      // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #88 = NameAndType        #56:#54       // internalIsXZCompressionAvailable:()Z\n+   #89 = Class              #117          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+   #90 = NameAndType        #46:#47       // matches:([BI)Z\n+   #91 = Utf8               java/lang/NoClassDefFoundError\n+   #92 = NameAndType        #33:#34       // fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+   #93 = NameAndType        #59:#60       // isCompressedFilename:(Ljava/lang/String;)Z\n+   #94 = NameAndType        #63:#64       // getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #95 = NameAndType        #65:#64       // getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #96 = NameAndType        #118:#38      // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #97 = Utf8               java/util/HashMap\n+   #98 = Utf8               .txz\n+   #99 = Utf8               .tar\n+  #100 = NameAndType        #119:#120     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #101 = Utf8               .xz\n+  #102 = Utf8\n+  #103 = Utf8               -xz\n+  #104 = Utf8               org/apache/commons/compress/compressors/FileNameUtil\n+  #105 = NameAndType        #39:#121      // \"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n+  #106 = Utf8               org.osgi.framework.BundleEvent\n+  #107 = Class              #122          // java/lang/Class\n+  #108 = NameAndType        #123:#124     // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #109 = Utf8               java/lang/Exception\n+  #110 = NameAndType        #66:#67       // setCacheXZAvailablity:(Z)V\n+  #111 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n+  #112 = Utf8               java/lang/Object\n+  #113 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n+  #114 = Utf8               java/util/Map\n+  #115 = Utf8               DONT_CACHE\n+  #116 = Utf8               CACHED_AVAILABLE\n+  #117 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+  #118 = Utf8               CACHED_UNAVAILABLE\n+  #119 = Utf8               put\n+  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #121 = Utf8               (Ljava/util/Map;Ljava/lang/String;)V\n+  #122 = Utf8               java/lang/Class\n+  #123 = Utf8               forName\n+  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n {\n   private static final org.apache.commons.compress.compressors.FileNameUtil fileNameUtil;\n     descriptor: Lorg/apache/commons/compress/compressors/FileNameUtil;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final byte[] HEADER_MAGIC;\n     descriptor: [B\n@@ -349,14 +345,15 @@\n         42: return\n       LineNumberTable:\n         line 167: 0\n         line 168: 4\n         line 169: 13\n         line 170: 22\n         line 171: 26\n+        line 172: 36\n         line 174: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            26      16     1 hasXz   Z\n             0      43     0 doCache   Z\n       StackMapTable: number_of_entries = 4\n         frame_type = 13 /* same */\n"}]}
