{"diffoscope-json-version": 1, "source1": "first/LockableFileWriter.class", "source2": "second/LockableFileWriter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -60,15 +60,15 @@\n         }\n         if (lockDir == null) {\n             lockDir = System.getProperty(\"java.io.tmpdir\");\n         }\n         final File lockDirFile = new File(lockDir);\n         FileUtils.forceMkdir(lockDirFile);\n         this.testLockDir(lockDirFile);\n-        this.lockFile = new File(lockDirFile, file.getName() + \".lck\");\n+        this.lockFile = new File(lockDirFile, String.valueOf(file.getName()) + \".lck\");\n         this.createLock();\n         this.out = this.initWriter(file, charset, append);\n     }\n     \n     public LockableFileWriter(final File file, final String charsetName, final boolean append, final String lockDir) throws IOException {\n         this(file, Charsets.toCharset(charsetName), append, lockDir);\n     }\n@@ -84,14 +84,15 @@\n     \n     private void createLock() throws IOException {\n         synchronized (LockableFileWriter.class) {\n             if (!this.lockFile.createNewFile()) {\n                 throw new IOException(\"Can't write file, lock \" + this.lockFile.getAbsolutePath() + \" exists\");\n             }\n             this.lockFile.deleteOnExit();\n+            monitorexit(LockableFileWriter.class);\n         }\n     }\n     \n     private Writer initWriter(final File file, final Charset charset, final boolean append) throws IOException {\n         final boolean fileExistedAlready = file.exists();\n         try {\n             return new OutputStreamWriter(new FileOutputStream(file.getAbsolutePath(), append), Charsets.toCharset(charset));\n@@ -109,14 +110,15 @@\n     public void close() throws IOException {\n         try {\n             this.out.close();\n         }\n         finally {\n             FileUtils.delete(this.lockFile);\n         }\n+        FileUtils.delete(this.lockFile);\n     }\n     \n     @Override\n     public void write(final int c) throws IOException {\n         this.out.write(c);\n     }\n     \n"}]}
