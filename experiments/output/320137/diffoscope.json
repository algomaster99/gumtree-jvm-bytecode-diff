{"diffoscope-json-version": 1, "source1": "first/NumberInput.class", "source2": "second/NumberInput.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,223 +1,223 @@\n-  SHA-256 checksum 65589f5b73df1d8140e85f58802a133bc3faf16d88499f55287630e6269b0ccc\n+  SHA-256 checksum 74de2307cbbb96f9018ea1b75e28e13a312aa9805baa1b5cbb0e62e60976dcf2\n   Compiled from \"NumberInput.java\"\n public final class com.fasterxml.jackson.core.io.NumberInput\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #10                         // com/fasterxml/jackson/core/io/NumberInput\n-  super_class: #46                        // java/lang/Object\n+  this_class: #28                         // com/fasterxml/jackson/core/io/NumberInput\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 26, attributes: 1\n Constant pool:\n-    #1 = Methodref          #46.#137      // java/lang/Object.\"<init>\":()V\n-    #2 = Integer            100000000\n-    #3 = Integer            10000000\n-    #4 = Integer            1000000\n-    #5 = Integer            100000\n-    #6 = Methodref          #96.#138      // java/lang/String.charAt:(I)C\n-    #7 = Methodref          #96.#139      // java/lang/String.length:()I\n-    #8 = Methodref          #140.#141     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #9 = Methodref          #10.#142      // com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n-   #10 = Class              #143          // com/fasterxml/jackson/core/io/NumberInput\n-   #11 = Long               1000000000l\n-   #13 = Long               10l\n-   #15 = Methodref          #10.#141      // com/fasterxml/jackson/core/io/NumberInput.parseInt:(Ljava/lang/String;)I\n-   #16 = Methodref          #40.#144      // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-   #17 = Fieldref           #10.#145      // com/fasterxml/jackson/core/io/NumberInput.MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n-   #18 = Fieldref           #10.#146      // com/fasterxml/jackson/core/io/NumberInput.MAX_LONG_STR:Ljava/lang/String;\n-   #19 = Methodref          #96.#147      // java/lang/String.trim:()Ljava/lang/String;\n-   #20 = Methodref          #96.#148      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #21 = Methodref          #10.#149      // com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n-   #22 = Class              #150          // java/lang/NumberFormatException\n-   #23 = Methodref          #10.#151      // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;DZ)D\n-   #24 = Methodref          #152.#153     // ch/randelshofer/fastdoubleparser/JavaDoubleParser.parseDouble:(Ljava/lang/CharSequence;)D\n-   #25 = Methodref          #154.#155     // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #26 = Methodref          #10.#156      // com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n-   #27 = Methodref          #157.#158     // ch/randelshofer/fastdoubleparser/JavaFloatParser.parseFloat:(Ljava/lang/CharSequence;)F\n-   #28 = Methodref          #159.#160     // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-   #29 = Methodref          #161.#162     // com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #30 = Methodref          #161.#163     // com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #31 = Methodref          #161.#164     // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n-   #32 = Methodref          #161.#165     // com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n-   #33 = Methodref          #161.#166     // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n-   #34 = Class              #167          // java/math/BigInteger\n-   #35 = Methodref          #34.#168      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Methodref          #169.#170     // com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #37 = Methodref          #10.#171      // com/fasterxml/jackson/core/io/NumberInput.parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #38 = Methodref          #169.#172     // com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n-   #39 = Methodref          #34.#173      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-   #40 = Class              #174          // java/lang/Long\n-   #41 = Long               -9223372036854775808l\n-   #43 = Methodref          #96.#175      // java/lang/String.valueOf:(J)Ljava/lang/String;\n-   #44 = Long               9223372036854775807l\n-   #46 = Class              #176          // java/lang/Object\n-   #47 = Utf8               NASTY_SMALL_DOUBLE\n-   #48 = Utf8               Ljava/lang/String;\n-   #49 = Utf8               ConstantValue\n-   #50 = String             #177          // 2.2250738585072012e-308\n-   #51 = Utf8               Deprecated\n-   #52 = Utf8               RuntimeVisibleAnnotations\n-   #53 = Utf8               Ljava/lang/Deprecated;\n-   #54 = Utf8               L_BILLION\n-   #55 = Utf8               J\n-   #56 = Utf8               MIN_LONG_STR_NO_SIGN\n-   #57 = Utf8               MAX_LONG_STR\n-   #58 = Utf8               <init>\n-   #59 = Utf8               ()V\n-   #60 = Utf8               Code\n-   #61 = Utf8               LineNumberTable\n-   #62 = Utf8               LocalVariableTable\n-   #63 = Utf8               this\n-   #64 = Utf8               Lcom/fasterxml/jackson/core/io/NumberInput;\n-   #65 = Utf8               parseInt\n-   #66 = Utf8               ([CII)I\n-   #67 = Utf8               ch\n-   #68 = Utf8               [C\n-   #69 = Utf8               off\n-   #70 = Utf8               I\n-   #71 = Utf8               len\n-   #72 = Utf8               num\n-   #73 = Utf8               StackMapTable\n-   #74 = Utf8               (Ljava/lang/String;)I\n-   #75 = Utf8               s\n-   #76 = Utf8               c\n-   #77 = Utf8               C\n-   #78 = Utf8               neg\n-   #79 = Utf8               Z\n-   #80 = Utf8               offset\n-   #81 = Utf8               parseLong\n-   #82 = Utf8               ([CII)J\n-   #83 = Utf8               len1\n-   #84 = Utf8               val\n-   #85 = Utf8               parseLong19\n-   #86 = Utf8               ([CIZ)J\n-   #87 = Utf8               i\n-   #88 = Utf8               negative\n-   #89 = Utf8               (Ljava/lang/String;)J\n-   #90 = Utf8               length\n-   #91 = Utf8               inLongRange\n-   #92 = Utf8               ([CIIZ)Z\n-   #93 = Utf8               diff\n-   #94 = Utf8               cmpStr\n-   #95 = Utf8               cmpLen\n-   #96 = Class              #178          // java/lang/String\n-   #97 = Utf8               (Ljava/lang/String;Z)Z\n-   #98 = Utf8               cmp\n-   #99 = Utf8               alen\n-  #100 = Utf8               parseAsInt\n-  #101 = Utf8               (Ljava/lang/String;I)I\n-  #102 = Utf8               e\n-  #103 = Utf8               Ljava/lang/NumberFormatException;\n-  #104 = Utf8               def\n-  #105 = Utf8               sign\n-  #106 = Utf8               parseAsLong\n-  #107 = Utf8               (Ljava/lang/String;J)J\n-  #108 = Utf8               parseAsDouble\n-  #109 = Utf8               (Ljava/lang/String;D)D\n-  #110 = Utf8               D\n-  #111 = Utf8               (Ljava/lang/String;DZ)D\n-  #112 = Utf8               useFastParser\n-  #113 = Utf8               parseDouble\n-  #114 = Utf8               (Ljava/lang/String;)D\n-  #115 = Utf8               Exceptions\n-  #116 = Utf8               (Ljava/lang/String;Z)D\n-  #117 = Utf8               parseFloat\n-  #118 = Utf8               (Ljava/lang/String;)F\n-  #119 = Utf8               (Ljava/lang/String;Z)F\n-  #120 = Utf8               parseBigDecimal\n-  #121 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #122 = Utf8               (Ljava/lang/String;Z)Ljava/math/BigDecimal;\n-  #123 = Class              #179          // java/math/BigDecimal\n-  #124 = Utf8               ([CII)Ljava/math/BigDecimal;\n-  #125 = Utf8               ([CIIZ)Ljava/math/BigDecimal;\n-  #126 = Utf8               ([C)Ljava/math/BigDecimal;\n-  #127 = Utf8               ([CZ)Ljava/math/BigDecimal;\n-  #128 = Utf8               parseBigInteger\n-  #129 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #130 = Utf8               (Ljava/lang/String;Z)Ljava/math/BigInteger;\n-  #131 = Utf8               parseBigIntegerWithRadix\n-  #132 = Utf8               (Ljava/lang/String;IZ)Ljava/math/BigInteger;\n-  #133 = Utf8               radix\n-  #134 = Utf8               <clinit>\n-  #135 = Utf8               SourceFile\n-  #136 = Utf8               NumberInput.java\n-  #137 = NameAndType        #58:#59       // \"<init>\":()V\n-  #138 = NameAndType        #180:#181     // charAt:(I)C\n-  #139 = NameAndType        #90:#182      // length:()I\n-  #140 = Class              #183          // java/lang/Integer\n-  #141 = NameAndType        #65:#74       // parseInt:(Ljava/lang/String;)I\n-  #142 = NameAndType        #65:#66       // parseInt:([CII)I\n-  #143 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n-  #144 = NameAndType        #81:#89       // parseLong:(Ljava/lang/String;)J\n-  #145 = NameAndType        #56:#48       // MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n-  #146 = NameAndType        #57:#48       // MAX_LONG_STR:Ljava/lang/String;\n-  #147 = NameAndType        #184:#185     // trim:()Ljava/lang/String;\n-  #148 = NameAndType        #186:#187     // substring:(I)Ljava/lang/String;\n-  #149 = NameAndType        #113:#116     // parseDouble:(Ljava/lang/String;Z)D\n-  #150 = Utf8               java/lang/NumberFormatException\n-  #151 = NameAndType        #108:#111     // parseAsDouble:(Ljava/lang/String;DZ)D\n-  #152 = Class              #188          // ch/randelshofer/fastdoubleparser/JavaDoubleParser\n-  #153 = NameAndType        #113:#189     // parseDouble:(Ljava/lang/CharSequence;)D\n-  #154 = Class              #190          // java/lang/Double\n-  #155 = NameAndType        #113:#114     // parseDouble:(Ljava/lang/String;)D\n-  #156 = NameAndType        #117:#119     // parseFloat:(Ljava/lang/String;Z)F\n-  #157 = Class              #191          // ch/randelshofer/fastdoubleparser/JavaFloatParser\n-  #158 = NameAndType        #117:#192     // parseFloat:(Ljava/lang/CharSequence;)F\n-  #159 = Class              #193          // java/lang/Float\n-  #160 = NameAndType        #117:#118     // parseFloat:(Ljava/lang/String;)F\n-  #161 = Class              #194          // com/fasterxml/jackson/core/io/BigDecimalParser\n-  #162 = NameAndType        #195:#121     // parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #163 = NameAndType        #196:#121     // parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #164 = NameAndType        #195:#124     // parse:([CII)Ljava/math/BigDecimal;\n-  #165 = NameAndType        #196:#124     // parseWithFastParser:([CII)Ljava/math/BigDecimal;\n-  #166 = NameAndType        #195:#126     // parse:([C)Ljava/math/BigDecimal;\n-  #167 = Utf8               java/math/BigInteger\n-  #168 = NameAndType        #58:#197      // \"<init>\":(Ljava/lang/String;)V\n-  #169 = Class              #198          // com/fasterxml/jackson/core/io/BigIntegerParser\n-  #170 = NameAndType        #196:#129     // parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #171 = NameAndType        #128:#129     // parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #172 = NameAndType        #196:#199     // parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n-  #173 = NameAndType        #58:#200      // \"<init>\":(Ljava/lang/String;I)V\n-  #174 = Utf8               java/lang/Long\n-  #175 = NameAndType        #201:#202     // valueOf:(J)Ljava/lang/String;\n-  #176 = Utf8               java/lang/Object\n-  #177 = Utf8               2.2250738585072012e-308\n-  #178 = Utf8               java/lang/String\n-  #179 = Utf8               java/math/BigDecimal\n-  #180 = Utf8               charAt\n-  #181 = Utf8               (I)C\n-  #182 = Utf8               ()I\n-  #183 = Utf8               java/lang/Integer\n-  #184 = Utf8               trim\n-  #185 = Utf8               ()Ljava/lang/String;\n-  #186 = Utf8               substring\n-  #187 = Utf8               (I)Ljava/lang/String;\n-  #188 = Utf8               ch/randelshofer/fastdoubleparser/JavaDoubleParser\n-  #189 = Utf8               (Ljava/lang/CharSequence;)D\n-  #190 = Utf8               java/lang/Double\n-  #191 = Utf8               ch/randelshofer/fastdoubleparser/JavaFloatParser\n-  #192 = Utf8               (Ljava/lang/CharSequence;)F\n-  #193 = Utf8               java/lang/Float\n-  #194 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n-  #195 = Utf8               parse\n-  #196 = Utf8               parseWithFastParser\n-  #197 = Utf8               (Ljava/lang/String;)V\n-  #198 = Utf8               com/fasterxml/jackson/core/io/BigIntegerParser\n-  #199 = Utf8               (Ljava/lang/String;I)Ljava/math/BigInteger;\n-  #200 = Utf8               (Ljava/lang/String;I)V\n-  #201 = Utf8               valueOf\n-  #202 = Utf8               (J)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Integer            100000000\n+    #8 = Integer            10000000\n+    #9 = Integer            1000000\n+   #10 = Integer            100000\n+   #11 = Methodref          #12.#13       // java/lang/String.charAt:(I)C\n+   #12 = Class              #14           // java/lang/String\n+   #13 = NameAndType        #15:#16       // charAt:(I)C\n+   #14 = Utf8               java/lang/String\n+   #15 = Utf8               charAt\n+   #16 = Utf8               (I)C\n+   #17 = Methodref          #12.#18       // java/lang/String.length:()I\n+   #18 = NameAndType        #19:#20       // length:()I\n+   #19 = Utf8               length\n+   #20 = Utf8               ()I\n+   #21 = Methodref          #22.#23       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #22 = Class              #24           // java/lang/Integer\n+   #23 = NameAndType        #25:#26       // parseInt:(Ljava/lang/String;)I\n+   #24 = Utf8               java/lang/Integer\n+   #25 = Utf8               parseInt\n+   #26 = Utf8               (Ljava/lang/String;)I\n+   #27 = Methodref          #28.#29       // com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+   #28 = Class              #30           // com/fasterxml/jackson/core/io/NumberInput\n+   #29 = NameAndType        #25:#31       // parseInt:([CII)I\n+   #30 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n+   #31 = Utf8               ([CII)I\n+   #32 = Long               1000000000l\n+   #34 = Long               10l\n+   #36 = Methodref          #28.#23       // com/fasterxml/jackson/core/io/NumberInput.parseInt:(Ljava/lang/String;)I\n+   #37 = Methodref          #38.#39       // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+   #38 = Class              #40           // java/lang/Long\n+   #39 = NameAndType        #41:#42       // parseLong:(Ljava/lang/String;)J\n+   #40 = Utf8               java/lang/Long\n+   #41 = Utf8               parseLong\n+   #42 = Utf8               (Ljava/lang/String;)J\n+   #43 = Fieldref           #28.#44       // com/fasterxml/jackson/core/io/NumberInput.MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n+   #44 = NameAndType        #45:#46       // MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n+   #45 = Utf8               MIN_LONG_STR_NO_SIGN\n+   #46 = Utf8               Ljava/lang/String;\n+   #47 = Fieldref           #28.#48       // com/fasterxml/jackson/core/io/NumberInput.MAX_LONG_STR:Ljava/lang/String;\n+   #48 = NameAndType        #49:#46       // MAX_LONG_STR:Ljava/lang/String;\n+   #49 = Utf8               MAX_LONG_STR\n+   #50 = Methodref          #12.#51       // java/lang/String.trim:()Ljava/lang/String;\n+   #51 = NameAndType        #52:#53       // trim:()Ljava/lang/String;\n+   #52 = Utf8               trim\n+   #53 = Utf8               ()Ljava/lang/String;\n+   #54 = Methodref          #12.#55       // java/lang/String.substring:(I)Ljava/lang/String;\n+   #55 = NameAndType        #56:#57       // substring:(I)Ljava/lang/String;\n+   #56 = Utf8               substring\n+   #57 = Utf8               (I)Ljava/lang/String;\n+   #58 = Methodref          #28.#59       // com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n+   #59 = NameAndType        #60:#61       // parseDouble:(Ljava/lang/String;Z)D\n+   #60 = Utf8               parseDouble\n+   #61 = Utf8               (Ljava/lang/String;Z)D\n+   #62 = Class              #63           // java/lang/NumberFormatException\n+   #63 = Utf8               java/lang/NumberFormatException\n+   #64 = Methodref          #28.#65       // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;DZ)D\n+   #65 = NameAndType        #66:#67       // parseAsDouble:(Ljava/lang/String;DZ)D\n+   #66 = Utf8               parseAsDouble\n+   #67 = Utf8               (Ljava/lang/String;DZ)D\n+   #68 = Methodref          #69.#70       // ch/randelshofer/fastdoubleparser/JavaDoubleParser.parseDouble:(Ljava/lang/CharSequence;)D\n+   #69 = Class              #71           // ch/randelshofer/fastdoubleparser/JavaDoubleParser\n+   #70 = NameAndType        #60:#72       // parseDouble:(Ljava/lang/CharSequence;)D\n+   #71 = Utf8               ch/randelshofer/fastdoubleparser/JavaDoubleParser\n+   #72 = Utf8               (Ljava/lang/CharSequence;)D\n+   #73 = Methodref          #74.#75       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #74 = Class              #76           // java/lang/Double\n+   #75 = NameAndType        #60:#77       // parseDouble:(Ljava/lang/String;)D\n+   #76 = Utf8               java/lang/Double\n+   #77 = Utf8               (Ljava/lang/String;)D\n+   #78 = Methodref          #28.#79       // com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n+   #79 = NameAndType        #80:#81       // parseFloat:(Ljava/lang/String;Z)F\n+   #80 = Utf8               parseFloat\n+   #81 = Utf8               (Ljava/lang/String;Z)F\n+   #82 = Methodref          #83.#84       // ch/randelshofer/fastdoubleparser/JavaFloatParser.parseFloat:(Ljava/lang/CharSequence;)F\n+   #83 = Class              #85           // ch/randelshofer/fastdoubleparser/JavaFloatParser\n+   #84 = NameAndType        #80:#86       // parseFloat:(Ljava/lang/CharSequence;)F\n+   #85 = Utf8               ch/randelshofer/fastdoubleparser/JavaFloatParser\n+   #86 = Utf8               (Ljava/lang/CharSequence;)F\n+   #87 = Methodref          #88.#89       // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+   #88 = Class              #90           // java/lang/Float\n+   #89 = NameAndType        #80:#91       // parseFloat:(Ljava/lang/String;)F\n+   #90 = Utf8               java/lang/Float\n+   #91 = Utf8               (Ljava/lang/String;)F\n+   #92 = Methodref          #93.#94       // com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #93 = Class              #95           // com/fasterxml/jackson/core/io/BigDecimalParser\n+   #94 = NameAndType        #96:#97       // parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #95 = Utf8               com/fasterxml/jackson/core/io/BigDecimalParser\n+   #96 = Utf8               parse\n+   #97 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #98 = Methodref          #93.#99       // com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #99 = NameAndType        #100:#97      // parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #100 = Utf8               parseWithFastParser\n+  #101 = Methodref          #93.#102      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n+  #102 = NameAndType        #96:#103      // parse:([CII)Ljava/math/BigDecimal;\n+  #103 = Utf8               ([CII)Ljava/math/BigDecimal;\n+  #104 = Methodref          #93.#105      // com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n+  #105 = NameAndType        #100:#103     // parseWithFastParser:([CII)Ljava/math/BigDecimal;\n+  #106 = Methodref          #93.#107      // com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n+  #107 = NameAndType        #96:#108      // parse:([C)Ljava/math/BigDecimal;\n+  #108 = Utf8               ([C)Ljava/math/BigDecimal;\n+  #109 = Class              #110          // java/math/BigInteger\n+  #110 = Utf8               java/math/BigInteger\n+  #111 = Methodref          #109.#112     // java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n+  #112 = NameAndType        #5:#113       // \"<init>\":(Ljava/lang/String;)V\n+  #113 = Utf8               (Ljava/lang/String;)V\n+  #114 = Methodref          #115.#116     // com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #115 = Class              #117          // com/fasterxml/jackson/core/io/BigIntegerParser\n+  #116 = NameAndType        #100:#118     // parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #117 = Utf8               com/fasterxml/jackson/core/io/BigIntegerParser\n+  #118 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #119 = Methodref          #28.#120      // com/fasterxml/jackson/core/io/NumberInput.parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #120 = NameAndType        #121:#118     // parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #121 = Utf8               parseBigInteger\n+  #122 = Methodref          #115.#123     // com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n+  #123 = NameAndType        #100:#124     // parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n+  #124 = Utf8               (Ljava/lang/String;I)Ljava/math/BigInteger;\n+  #125 = Methodref          #109.#126     // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+  #126 = NameAndType        #5:#127       // \"<init>\":(Ljava/lang/String;I)V\n+  #127 = Utf8               (Ljava/lang/String;I)V\n+  #128 = Long               -9223372036854775808l\n+  #130 = Methodref          #12.#131      // java/lang/String.valueOf:(J)Ljava/lang/String;\n+  #131 = NameAndType        #132:#133     // valueOf:(J)Ljava/lang/String;\n+  #132 = Utf8               valueOf\n+  #133 = Utf8               (J)Ljava/lang/String;\n+  #134 = Long               9223372036854775807l\n+  #136 = Utf8               NASTY_SMALL_DOUBLE\n+  #137 = Utf8               ConstantValue\n+  #138 = String             #139          // 2.2250738585072012e-308\n+  #139 = Utf8               2.2250738585072012e-308\n+  #140 = Utf8               Deprecated\n+  #141 = Utf8               RuntimeVisibleAnnotations\n+  #142 = Utf8               Ljava/lang/Deprecated;\n+  #143 = Utf8               L_BILLION\n+  #144 = Utf8               J\n+  #145 = Utf8               Code\n+  #146 = Utf8               LineNumberTable\n+  #147 = Utf8               LocalVariableTable\n+  #148 = Utf8               this\n+  #149 = Utf8               Lcom/fasterxml/jackson/core/io/NumberInput;\n+  #150 = Utf8               ch\n+  #151 = Utf8               [C\n+  #152 = Utf8               off\n+  #153 = Utf8               I\n+  #154 = Utf8               len\n+  #155 = Utf8               num\n+  #156 = Utf8               StackMapTable\n+  #157 = Utf8               s\n+  #158 = Utf8               c\n+  #159 = Utf8               C\n+  #160 = Utf8               neg\n+  #161 = Utf8               Z\n+  #162 = Utf8               offset\n+  #163 = Utf8               ([CII)J\n+  #164 = Utf8               len1\n+  #165 = Utf8               val\n+  #166 = Utf8               parseLong19\n+  #167 = Utf8               ([CIZ)J\n+  #168 = Utf8               i\n+  #169 = Utf8               negative\n+  #170 = Utf8               inLongRange\n+  #171 = Utf8               ([CIIZ)Z\n+  #172 = Utf8               diff\n+  #173 = Utf8               cmpStr\n+  #174 = Utf8               cmpLen\n+  #175 = Utf8               (Ljava/lang/String;Z)Z\n+  #176 = Utf8               cmp\n+  #177 = Utf8               alen\n+  #178 = Utf8               parseAsInt\n+  #179 = Utf8               (Ljava/lang/String;I)I\n+  #180 = Utf8               e\n+  #181 = Utf8               Ljava/lang/NumberFormatException;\n+  #182 = Utf8               def\n+  #183 = Utf8               sign\n+  #184 = Utf8               parseAsLong\n+  #185 = Utf8               (Ljava/lang/String;J)J\n+  #186 = Utf8               (Ljava/lang/String;D)D\n+  #187 = Utf8               D\n+  #188 = Utf8               useFastParser\n+  #189 = Utf8               Exceptions\n+  #190 = Utf8               parseBigDecimal\n+  #191 = Utf8               (Ljava/lang/String;Z)Ljava/math/BigDecimal;\n+  #192 = Class              #193          // java/math/BigDecimal\n+  #193 = Utf8               java/math/BigDecimal\n+  #194 = Utf8               ([CIIZ)Ljava/math/BigDecimal;\n+  #195 = Utf8               ([CZ)Ljava/math/BigDecimal;\n+  #196 = Utf8               (Ljava/lang/String;Z)Ljava/math/BigInteger;\n+  #197 = Utf8               parseBigIntegerWithRadix\n+  #198 = Utf8               (Ljava/lang/String;IZ)Ljava/math/BigInteger;\n+  #199 = Utf8               radix\n+  #200 = Utf8               <clinit>\n+  #201 = Utf8               SourceFile\n+  #202 = Utf8               NumberInput.java\n {\n   public static final java.lang.String NASTY_SMALL_DOUBLE = \"2.2250738585072012e-308\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String 2.2250738585072012e-308\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #53()\n+      0: #142()\n         java.lang.Deprecated\n \n   static final long L_BILLION = 1000000000l;\n     descriptor: J\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1000000000l\n \n@@ -282,48 +282,48 @@\n         76: iload_3\n         77: aload_0\n         78: iload_1\n         79: iinc          1, 1\n         82: caload\n         83: bipush        48\n         85: isub\n-        86: ldc           #2                  // int 100000000\n+        86: ldc           #7                  // int 100000000\n         88: imul\n         89: iadd\n         90: istore_3\n         91: iload_3\n         92: aload_0\n         93: iload_1\n         94: iinc          1, 1\n         97: caload\n         98: bipush        48\n        100: isub\n-       101: ldc           #3                  // int 10000000\n+       101: ldc           #8                  // int 10000000\n        103: imul\n        104: iadd\n        105: istore_3\n        106: iload_3\n        107: aload_0\n        108: iload_1\n        109: iinc          1, 1\n        112: caload\n        113: bipush        48\n        115: isub\n-       116: ldc           #4                  // int 1000000\n+       116: ldc           #9                  // int 1000000\n        118: imul\n        119: iadd\n        120: istore_3\n        121: iload_3\n        122: aload_0\n        123: iload_1\n        124: iinc          1, 1\n        127: caload\n        128: bipush        48\n        130: isub\n-       131: ldc           #5                  // int 100000\n+       131: ldc           #10                 // int 100000\n        133: imul\n        134: iadd\n        135: istore_3\n        136: iload_3\n        137: aload_0\n        138: iload_1\n        139: iinc          1, 1\n@@ -406,18 +406,18 @@\n   public static int parseInt(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+         2: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n          5: istore_1\n          6: aload_0\n-         7: invokevirtual #7                  // Method java/lang/String.length:()I\n+         7: invokevirtual #17                 // Method java/lang/String.length:()I\n         10: istore_2\n         11: iload_1\n         12: bipush        45\n         14: if_icmpne     21\n         17: iconst_1\n         18: goto          22\n         21: iconst_0\n@@ -429,57 +429,57 @@\n         30: iload_2\n         31: iconst_1\n         32: if_icmpeq     41\n         35: iload_2\n         36: bipush        10\n         38: if_icmple     46\n         41: aload_0\n-        42: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        42: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         45: ireturn\n         46: aload_0\n         47: iload         4\n         49: iinc          4, 1\n-        52: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        52: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         55: istore_1\n         56: goto          70\n         59: iload_2\n         60: bipush        9\n         62: if_icmple     70\n         65: aload_0\n-        66: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        66: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         69: ireturn\n         70: iload_1\n         71: bipush        57\n         73: if_icmpgt     82\n         76: iload_1\n         77: bipush        48\n         79: if_icmpge     87\n         82: aload_0\n-        83: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        83: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         86: ireturn\n         87: iload_1\n         88: bipush        48\n         90: isub\n         91: istore        5\n         93: iload         4\n         95: iload_2\n         96: if_icmpge     234\n         99: aload_0\n        100: iload         4\n        102: iinc          4, 1\n-       105: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+       105: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n        108: istore_1\n        109: iload_1\n        110: bipush        57\n        112: if_icmpgt     121\n        115: iload_1\n        116: bipush        48\n        118: if_icmpge     126\n        121: aload_0\n-       122: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       122: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        125: ireturn\n        126: iload         5\n        128: bipush        10\n        130: imul\n        131: iload_1\n        132: bipush        48\n        134: isub\n@@ -487,24 +487,24 @@\n        136: istore        5\n        138: iload         4\n        140: iload_2\n        141: if_icmpge     234\n        144: aload_0\n        145: iload         4\n        147: iinc          4, 1\n-       150: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+       150: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n        153: istore_1\n        154: iload_1\n        155: bipush        57\n        157: if_icmpgt     166\n        160: iload_1\n        161: bipush        48\n        163: if_icmpge     171\n        166: aload_0\n-       167: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       167: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        170: ireturn\n        171: iload         5\n        173: bipush        10\n        175: imul\n        176: iload_1\n        177: bipush        48\n        179: isub\n@@ -512,24 +512,24 @@\n        181: istore        5\n        183: iload         4\n        185: iload_2\n        186: if_icmpge     234\n        189: aload_0\n        190: iload         4\n        192: iinc          4, 1\n-       195: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+       195: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n        198: istore_1\n        199: iload_1\n        200: bipush        57\n        202: if_icmpgt     211\n        205: iload_1\n        206: bipush        48\n        208: if_icmpge     216\n        211: aload_0\n-       212: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       212: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        215: ireturn\n        216: iload         5\n        218: bipush        10\n        220: imul\n        221: iload_1\n        222: bipush        48\n        224: isub\n@@ -620,26 +620,26 @@\n          0: iload_2\n          1: bipush        9\n          3: isub\n          4: istore_3\n          5: aload_0\n          6: iload_1\n          7: iload_3\n-         8: invokestatic  #9                  // Method parseInt:([CII)I\n+         8: invokestatic  #27                 // Method parseInt:([CII)I\n         11: i2l\n-        12: ldc2_w        #11                 // long 1000000000l\n+        12: ldc2_w        #32                 // long 1000000000l\n         15: lmul\n         16: lstore        4\n         18: lload         4\n         20: aload_0\n         21: iload_1\n         22: iload_3\n         23: iadd\n         24: bipush        9\n-        26: invokestatic  #9                  // Method parseInt:([CII)I\n+        26: invokestatic  #27                 // Method parseInt:([CII)I\n         29: i2l\n         30: ladd\n         31: lreturn\n       LineNumberTable:\n         line 147: 0\n         line 148: 5\n         line 149: 18\n@@ -666,15 +666,15 @@\n         12: aload_0\n         13: iload_1\n         14: iload         5\n         16: iadd\n         17: caload\n         18: istore        6\n         20: lload_3\n-        21: ldc2_w        #13                 // long 10l\n+        21: ldc2_w        #34                 // long 10l\n         24: lmul\n         25: iload         6\n         27: bipush        48\n         29: isub\n         30: i2l\n         31: ladd\n         32: lstore_3\n@@ -714,25 +714,25 @@\n \n   public static long parseLong(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #7                  // Method java/lang/String.length:()I\n+         1: invokevirtual #17                 // Method java/lang/String.length:()I\n          4: istore_1\n          5: iload_1\n          6: bipush        9\n          8: if_icmpgt     17\n         11: aload_0\n-        12: invokestatic  #15                 // Method parseInt:(Ljava/lang/String;)I\n+        12: invokestatic  #36                 // Method parseInt:(Ljava/lang/String;)I\n         15: i2l\n         16: lreturn\n         17: aload_0\n-        18: invokestatic  #16                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+        18: invokestatic  #37                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n         21: lreturn\n       LineNumberTable:\n         line 191: 0\n         line 192: 5\n         line 193: 11\n         line 196: 17\n       LocalVariableTable:\n@@ -747,20 +747,20 @@\n   public static boolean inLongRange(char[], int, int, boolean);\n     descriptor: ([CIIZ)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=8, args_size=4\n          0: iload_3\n          1: ifeq          10\n-         4: getstatic     #17                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n+         4: getstatic     #43                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n          7: goto          13\n-        10: getstatic     #18                 // Field MAX_LONG_STR:Ljava/lang/String;\n+        10: getstatic     #47                 // Field MAX_LONG_STR:Ljava/lang/String;\n         13: astore        4\n         15: aload         4\n-        17: invokevirtual #7                  // Method java/lang/String.length:()I\n+        17: invokevirtual #17                 // Method java/lang/String.length:()I\n         20: istore        5\n         22: iload_2\n         23: iload         5\n         25: if_icmpge     30\n         28: iconst_1\n         29: ireturn\n         30: iload_2\n@@ -776,15 +776,15 @@\n         48: aload_0\n         49: iload_1\n         50: iload         6\n         52: iadd\n         53: caload\n         54: aload         4\n         56: iload         6\n-        58: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        58: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         61: isub\n         62: istore        7\n         64: iload         7\n         66: ifeq          80\n         69: iload         7\n         71: ifge          78\n         74: iconst_1\n@@ -840,23 +840,23 @@\n   public static boolean inLongRange(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: iload_1\n          1: ifeq          10\n-         4: getstatic     #17                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n+         4: getstatic     #43                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n          7: goto          13\n-        10: getstatic     #18                 // Field MAX_LONG_STR:Ljava/lang/String;\n+        10: getstatic     #47                 // Field MAX_LONG_STR:Ljava/lang/String;\n         13: astore_2\n         14: aload_2\n-        15: invokevirtual #7                  // Method java/lang/String.length:()I\n+        15: invokevirtual #17                 // Method java/lang/String.length:()I\n         18: istore_3\n         19: aload_0\n-        20: invokevirtual #7                  // Method java/lang/String.length:()I\n+        20: invokevirtual #17                 // Method java/lang/String.length:()I\n         23: istore        4\n         25: iload         4\n         27: iload_3\n         28: if_icmpge     33\n         31: iconst_1\n         32: ireturn\n         33: iload         4\n@@ -867,18 +867,18 @@\n         41: iconst_0\n         42: istore        5\n         44: iload         5\n         46: iload_3\n         47: if_icmpge     87\n         50: aload_0\n         51: iload         5\n-        53: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        53: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         56: aload_2\n         57: iload         5\n-        59: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        59: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         62: isub\n         63: istore        6\n         65: iload         6\n         67: ifeq          81\n         70: iload         6\n         72: ifge          79\n         75: iconst_1\n@@ -937,70 +937,70 @@\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         7: invokevirtual #50                 // Method java/lang/String.trim:()Ljava/lang/String;\n         10: astore_0\n         11: aload_0\n-        12: invokevirtual #7                  // Method java/lang/String.length:()I\n+        12: invokevirtual #17                 // Method java/lang/String.length:()I\n         15: istore_2\n         16: iload_2\n         17: ifne          22\n         20: iload_1\n         21: ireturn\n         22: iconst_0\n         23: istore_3\n         24: aload_0\n         25: iconst_0\n-        26: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        26: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         29: istore        4\n         31: iload         4\n         33: bipush        43\n         35: if_icmpne     52\n         38: aload_0\n         39: iconst_1\n-        40: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        40: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n         43: astore_0\n         44: aload_0\n-        45: invokevirtual #7                  // Method java/lang/String.length:()I\n+        45: invokevirtual #17                 // Method java/lang/String.length:()I\n         48: istore_2\n         49: goto          61\n         52: iload         4\n         54: bipush        45\n         56: if_icmpne     61\n         59: iconst_1\n         60: istore_3\n         61: iload_3\n         62: iload_2\n         63: if_icmpge     104\n         66: aload_0\n         67: iload_3\n-        68: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        68: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         71: istore        5\n         73: iload         5\n         75: bipush        57\n         77: if_icmpgt     87\n         80: iload         5\n         82: bipush        48\n         84: if_icmpge     98\n         87: aload_0\n         88: iconst_1\n-        89: invokestatic  #21                 // Method parseDouble:(Ljava/lang/String;Z)D\n+        89: invokestatic  #58                 // Method parseDouble:(Ljava/lang/String;Z)D\n         92: d2i\n         93: ireturn\n         94: astore        6\n         96: iload_1\n         97: ireturn\n         98: iinc          3, 1\n        101: goto          61\n        104: aload_0\n-       105: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       105: invokestatic  #21                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        108: ireturn\n        109: astore        5\n        111: iload_1\n        112: ireturn\n       Exception table:\n          from    to  target type\n             87    93    94   Class java/lang/NumberFormatException\n@@ -1064,70 +1064,70 @@\n     Code:\n       stack=2, locals=8, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: lload_1\n          5: lreturn\n          6: aload_0\n-         7: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         7: invokevirtual #50                 // Method java/lang/String.trim:()Ljava/lang/String;\n         10: astore_0\n         11: aload_0\n-        12: invokevirtual #7                  // Method java/lang/String.length:()I\n+        12: invokevirtual #17                 // Method java/lang/String.length:()I\n         15: istore_3\n         16: iload_3\n         17: ifne          22\n         20: lload_1\n         21: lreturn\n         22: iconst_0\n         23: istore        4\n         25: aload_0\n         26: iconst_0\n-        27: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        27: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         30: istore        5\n         32: iload         5\n         34: bipush        43\n         36: if_icmpne     53\n         39: aload_0\n         40: iconst_1\n-        41: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        41: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n         44: astore_0\n         45: aload_0\n-        46: invokevirtual #7                  // Method java/lang/String.length:()I\n+        46: invokevirtual #17                 // Method java/lang/String.length:()I\n         49: istore_3\n         50: goto          63\n         53: iload         5\n         55: bipush        45\n         57: if_icmpne     63\n         60: iconst_1\n         61: istore        4\n         63: iload         4\n         65: iload_3\n         66: if_icmpge     108\n         69: aload_0\n         70: iload         4\n-        72: invokevirtual #6                  // Method java/lang/String.charAt:(I)C\n+        72: invokevirtual #11                 // Method java/lang/String.charAt:(I)C\n         75: istore        6\n         77: iload         6\n         79: bipush        57\n         81: if_icmpgt     91\n         84: iload         6\n         86: bipush        48\n         88: if_icmpge     102\n         91: aload_0\n         92: iconst_1\n-        93: invokestatic  #21                 // Method parseDouble:(Ljava/lang/String;Z)D\n+        93: invokestatic  #58                 // Method parseDouble:(Ljava/lang/String;Z)D\n         96: d2l\n         97: lreturn\n         98: astore        7\n        100: lload_1\n        101: lreturn\n        102: iinc          4, 1\n        105: goto          63\n        108: aload_0\n-       109: invokestatic  #16                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+       109: invokestatic  #37                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n        112: lreturn\n        113: astore        6\n        115: lload_1\n        116: lreturn\n       Exception table:\n          from    to  target type\n             91    97    98   Class java/lang/NumberFormatException\n@@ -1189,15 +1189,15 @@\n     descriptor: (Ljava/lang/String;D)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n          2: iconst_0\n-         3: invokestatic  #23                 // Method parseAsDouble:(Ljava/lang/String;DZ)D\n+         3: invokestatic  #64                 // Method parseAsDouble:(Ljava/lang/String;DZ)D\n          6: dreturn\n       LineNumberTable:\n         line 346: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0     s   Ljava/lang/String;\n             0       7     1   def   D\n@@ -1208,26 +1208,26 @@\n     Code:\n       stack=2, locals=6, args_size=3\n          0: aload_0\n          1: ifnonnull     6\n          4: dload_1\n          5: dreturn\n          6: aload_0\n-         7: invokevirtual #19                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         7: invokevirtual #50                 // Method java/lang/String.trim:()Ljava/lang/String;\n         10: astore_0\n         11: aload_0\n-        12: invokevirtual #7                  // Method java/lang/String.length:()I\n+        12: invokevirtual #17                 // Method java/lang/String.length:()I\n         15: istore        4\n         17: iload         4\n         19: ifne          24\n         22: dload_1\n         23: dreturn\n         24: aload_0\n         25: iload_3\n-        26: invokestatic  #21                 // Method parseDouble:(Ljava/lang/String;Z)D\n+        26: invokestatic  #58                 // Method parseDouble:(Ljava/lang/String;Z)D\n         29: dreturn\n         30: astore        5\n         32: dload_1\n         33: dreturn\n       Exception table:\n          from    to  target type\n             24    29    30   Class java/lang/NumberFormatException\n@@ -1257,15 +1257,15 @@\n   public static double parseDouble(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #21                 // Method parseDouble:(Ljava/lang/String;Z)D\n+         2: invokestatic  #58                 // Method parseDouble:(Ljava/lang/String;Z)D\n          5: dreturn\n       LineNumberTable:\n         line 377: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0     s   Ljava/lang/String;\n     Exceptions:\n@@ -1275,18 +1275,18 @@\n     descriptor: (Ljava/lang/String;Z)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: invokestatic  #24                 // Method ch/randelshofer/fastdoubleparser/JavaDoubleParser.parseDouble:(Ljava/lang/CharSequence;)D\n+         5: invokestatic  #68                 // Method ch/randelshofer/fastdoubleparser/JavaDoubleParser.parseDouble:(Ljava/lang/CharSequence;)D\n          8: goto          15\n         11: aload_0\n-        12: invokestatic  #25                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+        12: invokestatic  #73                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n         15: dreturn\n       LineNumberTable:\n         line 388: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0     s   Ljava/lang/String;\n             0      16     1 useFastParser   Z\n@@ -1300,15 +1300,15 @@\n   public static float parseFloat(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #26                 // Method parseFloat:(Ljava/lang/String;Z)F\n+         2: invokestatic  #78                 // Method parseFloat:(Ljava/lang/String;Z)F\n          5: freturn\n       LineNumberTable:\n         line 399: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0     s   Ljava/lang/String;\n     Exceptions:\n@@ -1318,18 +1318,18 @@\n     descriptor: (Ljava/lang/String;Z)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: invokestatic  #27                 // Method ch/randelshofer/fastdoubleparser/JavaFloatParser.parseFloat:(Ljava/lang/CharSequence;)F\n+         5: invokestatic  #82                 // Method ch/randelshofer/fastdoubleparser/JavaFloatParser.parseFloat:(Ljava/lang/CharSequence;)F\n          8: goto          15\n         11: aload_0\n-        12: invokestatic  #28                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+        12: invokestatic  #87                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n         15: freturn\n       LineNumberTable:\n         line 410: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0     s   Ljava/lang/String;\n             0      16     1 useFastParser   Z\n@@ -1342,15 +1342,15 @@\n \n   public static java.math.BigDecimal parseBigDecimal(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #29                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+         1: invokestatic  #92                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n          4: areturn\n       LineNumberTable:\n         line 419: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0     s   Ljava/lang/String;\n     Exceptions:\n@@ -1360,18 +1360,18 @@\n     descriptor: (Ljava/lang/String;Z)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: invokestatic  #30                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+         5: invokestatic  #98                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigDecimal;\n          8: goto          15\n         11: aload_0\n-        12: invokestatic  #29                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+        12: invokestatic  #92                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:(Ljava/lang/String;)Ljava/math/BigDecimal;\n         15: areturn\n       LineNumberTable:\n         line 430: 0\n         line 431: 4\n         line 432: 11\n         line 430: 15\n       LocalVariableTable:\n@@ -1389,15 +1389,15 @@\n     descriptor: ([CII)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: invokestatic  #31                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n+         3: invokestatic  #101                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n          6: areturn\n       LineNumberTable:\n         line 443: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0    ch   [C\n             0       7     1   off   I\n@@ -1411,20 +1411,20 @@\n     Code:\n       stack=3, locals=4, args_size=4\n          0: iload_3\n          1: ifeq          13\n          4: aload_0\n          5: iload_1\n          6: iload_2\n-         7: invokestatic  #32                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n+         7: invokestatic  #104                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n         10: goto          19\n         13: aload_0\n         14: iload_1\n         15: iload_2\n-        16: invokestatic  #31                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n+        16: invokestatic  #101                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([CII)Ljava/math/BigDecimal;\n         19: areturn\n       LineNumberTable:\n         line 458: 0\n         line 459: 4\n         line 460: 13\n         line 458: 19\n       LocalVariableTable:\n@@ -1442,15 +1442,15 @@\n \n   public static java.math.BigDecimal parseBigDecimal(char[]) throws java.lang.NumberFormatException;\n     descriptor: ([C)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #33                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n+         1: invokestatic  #106                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n          4: areturn\n       LineNumberTable:\n         line 469: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    ch   [C\n     Exceptions:\n@@ -1463,18 +1463,18 @@\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          14\n          4: aload_0\n          5: iconst_0\n          6: aload_0\n          7: arraylength\n-         8: invokestatic  #32                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n+         8: invokestatic  #104                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parseWithFastParser:([CII)Ljava/math/BigDecimal;\n         11: goto          18\n         14: aload_0\n-        15: invokestatic  #33                 // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n+        15: invokestatic  #106                // Method com/fasterxml/jackson/core/io/BigDecimalParser.parse:([C)Ljava/math/BigDecimal;\n         18: areturn\n       LineNumberTable:\n         line 480: 0\n         line 481: 4\n         line 482: 14\n         line 480: 18\n       LocalVariableTable:\n@@ -1489,18 +1489,18 @@\n       throws java.lang.NumberFormatException\n \n   public static java.math.BigInteger parseBigInteger(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #34                 // class java/math/BigInteger\n+         0: new           #109                // class java/math/BigInteger\n          3: dup\n          4: aload_0\n-         5: invokespecial #35                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n+         5: invokespecial #111                // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;)V\n          8: areturn\n       LineNumberTable:\n         line 492: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0     s   Ljava/lang/String;\n     Exceptions:\n@@ -1510,18 +1510,18 @@\n     descriptor: (Ljava/lang/String;Z)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          9\n          4: aload_0\n-         5: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n+         5: invokestatic  #114                // Method com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;)Ljava/math/BigInteger;\n          8: areturn\n          9: aload_0\n-        10: invokestatic  #37                 // Method parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+        10: invokestatic  #119                // Method parseBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n         13: areturn\n       LineNumberTable:\n         line 503: 0\n         line 504: 4\n         line 506: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1537,21 +1537,21 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: iload_2\n          1: ifeq          10\n          4: aload_0\n          5: iload_1\n-         6: invokestatic  #38                 // Method com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n+         6: invokestatic  #122                // Method com/fasterxml/jackson/core/io/BigIntegerParser.parseWithFastParser:(Ljava/lang/String;I)Ljava/math/BigInteger;\n          9: areturn\n-        10: new           #34                 // class java/math/BigInteger\n+        10: new           #109                // class java/math/BigInteger\n         13: dup\n         14: aload_0\n         15: iload_1\n-        16: invokespecial #39                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+        16: invokespecial #125                // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n         19: areturn\n       LineNumberTable:\n         line 520: 0\n         line 521: 4\n         line 523: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1564,21 +1564,21 @@\n       throws java.lang.NumberFormatException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: ldc2_w        #41                 // long -9223372036854775808l\n-         3: invokestatic  #43                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n+         0: ldc2_w        #128                // long -9223372036854775808l\n+         3: invokestatic  #130                // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n          6: iconst_1\n-         7: invokevirtual #20                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        10: putstatic     #17                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n-        13: ldc2_w        #44                 // long 9223372036854775807l\n-        16: invokestatic  #43                 // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n-        19: putstatic     #18                 // Field MAX_LONG_STR:Ljava/lang/String;\n+         7: invokevirtual #54                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        10: putstatic     #43                 // Field MIN_LONG_STR_NO_SIGN:Ljava/lang/String;\n+        13: ldc2_w        #134                // long 9223372036854775807l\n+        16: invokestatic  #130                // Method java/lang/String.valueOf:(J)Ljava/lang/String;\n+        19: putstatic     #47                 // Field MAX_LONG_STR:Ljava/lang/String;\n         22: return\n       LineNumberTable:\n         line 31: 0\n         line 32: 13\n }\n SourceFile: \"NumberInput.java\"\n"}]}
