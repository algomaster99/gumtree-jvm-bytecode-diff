{"diffoscope-json-version": 1, "source1": "first/ExtraFieldUtils.class", "source2": "second/ExtraFieldUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,22 +1,40 @@\n \n package org.apache.commons.compress.archivers.zip;\n \n-import java.util.concurrent.ConcurrentHashMap;\n import java.util.List;\n import java.util.Objects;\n import java.util.ArrayList;\n import java.util.zip.ZipException;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.Map;\n \n public class ExtraFieldUtils\n {\n     private static final int WORD = 4;\n     private static final Map<ZipShort, Class<?>> implementations;\n     \n+    static {\n+        implementations = new ConcurrentHashMap<ZipShort, Class<?>>();\n+        register(AsiExtraField.class);\n+        register(X5455_ExtendedTimestamp.class);\n+        register(X7875_NewUnix.class);\n+        register(JarMarker.class);\n+        register(UnicodePathExtraField.class);\n+        register(UnicodeCommentExtraField.class);\n+        register(Zip64ExtendedInformationExtraField.class);\n+        register(X000A_NTFS.class);\n+        register(X0014_X509Certificates.class);\n+        register(X0015_CertificateIdForFile.class);\n+        register(X0016_CertificateIdForCentralDirectory.class);\n+        register(X0017_StrongEncryptionHeader.class);\n+        register(X0019_EncryptionRecipientCertificateList.class);\n+        register(ResourceAlignmentExtraField.class);\n+    }\n+    \n     public static void register(final Class<?> c) {\n         try {\n             final ZipExtraField ze = (ZipExtraField)c.newInstance();\n             ExtraFieldUtils.implementations.put(ze.getHeaderId(), c);\n         }\n         catch (final ClassCastException cc) {\n             throw new RuntimeException(c + \" doesn't implement ZipExtraField\");\n@@ -154,26 +172,8 @@\n             }\n             return ze;\n         }\n         catch (final ArrayIndexOutOfBoundsException aiobe) {\n             throw (ZipException)new ZipException(\"Failed to parse corrupt ZIP extra field of type \" + Integer.toHexString(ze.getHeaderId().getValue())).initCause(aiobe);\n         }\n     }\n-    \n-    static {\n-        implementations = new ConcurrentHashMap<ZipShort, Class<?>>();\n-        register(AsiExtraField.class);\n-        register(X5455_ExtendedTimestamp.class);\n-        register(X7875_NewUnix.class);\n-        register(JarMarker.class);\n-        register(UnicodePathExtraField.class);\n-        register(UnicodeCommentExtraField.class);\n-        register(Zip64ExtendedInformationExtraField.class);\n-        register(X000A_NTFS.class);\n-        register(X0014_X509Certificates.class);\n-        register(X0015_CertificateIdForFile.class);\n-        register(X0016_CertificateIdForCentralDirectory.class);\n-        register(X0017_StrongEncryptionHeader.class);\n-        register(X0019_EncryptionRecipientCertificateList.class);\n-        register(ResourceAlignmentExtraField.class);\n-    }\n }\n"}]}
