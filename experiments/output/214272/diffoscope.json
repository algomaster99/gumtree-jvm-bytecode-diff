{"diffoscope-json-version": 1, "source1": "first/HTTP.class", "source2": "second/HTTP.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,66 +4,66 @@\n import java.util.Iterator;\n import java.util.Locale;\n \n public class HTTP\n {\n     public static final String CRLF = \"\\r\\n\";\n     \n-    public static JSONObject toJSONObject(final String string) throws JSONException {\n-        final JSONObject jo = new JSONObject();\n-        final HTTPTokener x = new HTTPTokener(string);\n-        final String token = x.nextToken();\n-        if (token.toUpperCase(Locale.ROOT).startsWith(\"HTTP\")) {\n-            jo.put(\"HTTP-Version\", (Object)token);\n-            jo.put(\"Status-Code\", (Object)x.nextToken());\n-            jo.put(\"Reason-Phrase\", (Object)x.nextTo('\\0'));\n-            x.next();\n+    public static JSONObject toJSONObject(final String s) throws JSONException {\n+        final JSONObject jsonObject = new JSONObject();\n+        final HTTPTokener httpTokener = new HTTPTokener(s);\n+        final String nextToken = httpTokener.nextToken();\n+        if (nextToken.toUpperCase(Locale.ROOT).startsWith(\"HTTP\")) {\n+            jsonObject.put(\"HTTP-Version\", (Object)nextToken);\n+            jsonObject.put(\"Status-Code\", (Object)httpTokener.nextToken());\n+            jsonObject.put(\"Reason-Phrase\", (Object)httpTokener.nextTo('\\0'));\n+            httpTokener.next();\n         }\n         else {\n-            jo.put(\"Method\", (Object)token);\n-            jo.put(\"Request-URI\", (Object)x.nextToken());\n-            jo.put(\"HTTP-Version\", (Object)x.nextToken());\n-        }\n-        while (x.more()) {\n-            final String name = x.nextTo(':');\n-            x.next(':');\n-            jo.put(name, (Object)x.nextTo('\\0'));\n-            x.next();\n+            jsonObject.put(\"Method\", (Object)nextToken);\n+            jsonObject.put(\"Request-URI\", (Object)httpTokener.nextToken());\n+            jsonObject.put(\"HTTP-Version\", (Object)httpTokener.nextToken());\n+        }\n+        while (httpTokener.more()) {\n+            final String nextTo = httpTokener.nextTo(':');\n+            httpTokener.next(':');\n+            jsonObject.put(nextTo, (Object)httpTokener.nextTo('\\0'));\n+            httpTokener.next();\n         }\n-        return jo;\n+        return jsonObject;\n     }\n     \n-    public static String toString(final JSONObject jo) throws JSONException {\n+    public static String toString(final JSONObject jsonObject) throws JSONException {\n         final StringBuilder sb = new StringBuilder();\n-        if (jo.has(\"Status-Code\") && jo.has(\"Reason-Phrase\")) {\n-            sb.append(jo.getString(\"HTTP-Version\"));\n+        if (jsonObject.has(\"Status-Code\") && jsonObject.has(\"Reason-Phrase\")) {\n+            sb.append(jsonObject.getString(\"HTTP-Version\"));\n             sb.append(' ');\n-            sb.append(jo.getString(\"Status-Code\"));\n+            sb.append(jsonObject.getString(\"Status-Code\"));\n             sb.append(' ');\n-            sb.append(jo.getString(\"Reason-Phrase\"));\n+            sb.append(jsonObject.getString(\"Reason-Phrase\"));\n         }\n         else {\n-            if (!jo.has(\"Method\") || !jo.has(\"Request-URI\")) {\n+            if (!jsonObject.has(\"Method\") || !jsonObject.has(\"Request-URI\")) {\n                 throw new JSONException(\"Not enough material for an HTTP header.\");\n             }\n-            sb.append(jo.getString(\"Method\"));\n+            sb.append(jsonObject.getString(\"Method\"));\n             sb.append(' ');\n             sb.append('\\\"');\n-            sb.append(jo.getString(\"Request-URI\"));\n+            sb.append(jsonObject.getString(\"Request-URI\"));\n             sb.append('\\\"');\n             sb.append(' ');\n-            sb.append(jo.getString(\"HTTP-Version\"));\n+            sb.append(jsonObject.getString(\"HTTP-Version\"));\n         }\n         sb.append(\"\\r\\n\");\n-        for (final String key : jo.keySet()) {\n-            final String value = jo.optString(key);\n-            if (!\"HTTP-Version\".equals(key) && !\"Status-Code\".equals(key) && !\"Reason-Phrase\".equals(key) && !\"Method\".equals(key) && !\"Request-URI\".equals(key) && !JSONObject.NULL.equals(value)) {\n-                sb.append(key);\n+        for (final String s : jsonObject.keySet()) {\n+            final String optString = jsonObject.optString(s);\n+            if (!\"HTTP-Version\".equals(s) && !\"Status-Code\".equals(s) && !\"Reason-Phrase\".equals(s) && !\"Method\".equals(s) && !\"Request-URI\".equals(s) && !JSONObject.NULL.equals(optString)) {\n+                sb.append(s);\n                 sb.append(\": \");\n-                sb.append(jo.optString(key));\n+                sb.append(jsonObject.optString(s));\n                 sb.append(\"\\r\\n\");\n             }\n         }\n         sb.append(\"\\r\\n\");\n         return sb.toString();\n     }\n }\n"}]}
