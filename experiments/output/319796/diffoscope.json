{"diffoscope-json-version": 1, "source1": "first/JsonGenerator.class", "source2": "second/JsonGenerator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,723 +1,723 @@\n-  SHA-256 checksum 83def02fdfdec721ced600634757502b9a276fbdf4439cb6b1a15671029a28c4\n+  SHA-256 checksum 8edc38f7dcf1a79fde681bfe1a6b6aabbfa4669bea81fbde0fbfafb92bc39c88\n   Compiled from \"JsonGenerator.java\"\n public abstract class com.fasterxml.jackson.core.JsonGenerator implements java.io.Closeable,java.io.Flushable,com.fasterxml.jackson.core.Versioned\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #158                        // com/fasterxml/jackson/core/JsonGenerator\n-  super_class: #16                        // java/lang/Object\n+  this_class: #10                         // com/fasterxml/jackson/core/JsonGenerator\n+  super_class: #4                         // java/lang/Object\n   interfaces: 3, fields: 4, methods: 127, attributes: 2\n Constant pool:\n-    #1 = Class              #420          // com/fasterxml/jackson/core/JsonTokenId\n-    #2 = Methodref          #16.#421      // java/lang/Object.\"<init>\":()V\n-    #3 = Methodref          #158.#422     // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n-    #4 = Methodref          #158.#423     // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n-    #5 = Methodref          #158.#424     // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-    #6 = Methodref          #200.#422     // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n-    #7 = Methodref          #200.#423     // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n-    #8 = Methodref          #158.#425     // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-    #9 = Methodref          #158.#426     // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #10 = Methodref          #427.#428     // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-   #11 = Methodref          #158.#429     // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-   #12 = Methodref          #158.#430     // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n-   #13 = Methodref          #158.#431     // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #14 = Class              #432          // java/lang/UnsupportedOperationException\n-   #15 = String             #433          // Generator of type %s does not support schema of type \\'%s\\'\n-   #16 = Class              #434          // java/lang/Object\n-   #17 = Methodref          #16.#435      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #18 = Methodref          #436.#437     // java/lang/Class.getName:()Ljava/lang/String;\n-   #19 = InterfaceMethodref #438.#439     // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n-   #20 = Methodref          #48.#440      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #21 = Methodref          #14.#441      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Fieldref           #158.#442     // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-   #23 = Methodref          #14.#421      // java/lang/UnsupportedOperationException.\"<init>\":()V\n-   #24 = Fieldref           #158.#443     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #25 = Methodref          #158.#444     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n-   #26 = Methodref          #158.#445     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n-   #27 = Methodref          #158.#446     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n-   #28 = Methodref          #158.#447     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n-   #29 = Methodref          #133.#448     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #30 = Methodref          #158.#449     // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n-   #31 = Class              #450          // java/lang/IllegalArgumentException\n-   #32 = String             #451          // null array\n-   #33 = Methodref          #31.#441      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #158.#452     // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n-   #35 = Methodref          #158.#453     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n-   #36 = Methodref          #158.#454     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n-   #37 = Methodref          #158.#455     // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n-   #38 = Methodref          #158.#456     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n-   #39 = Methodref          #158.#457     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n-   #40 = Methodref          #158.#458     // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n-   #41 = Methodref          #158.#459     // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n-   #42 = InterfaceMethodref #460.#461     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #43 = Methodref          #158.#462     // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n-   #44 = Methodref          #158.#463     // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n-   #45 = Methodref          #464.#465     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-   #46 = Methodref          #158.#466     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-   #47 = Methodref          #158.#467     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-   #48 = Class              #468          // java/lang/String\n-   #49 = Methodref          #48.#469      // java/lang/String.\"<init>\":([CII)V\n-   #50 = Methodref          #158.#470     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n-   #51 = Methodref          #158.#471     // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n-   #52 = Class              #317          // \"[B\"\n-   #53 = Methodref          #158.#472     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n-   #54 = Class              #473          // com/fasterxml/jackson/core/JsonGenerationException\n-   #55 = Class              #474          // java/lang/StringBuilder\n-   #56 = Methodref          #55.#421      // java/lang/StringBuilder.\"<init>\":()V\n-   #57 = String             #475          // No native support for writing embedded objects of type\n-   #58 = Methodref          #55.#476      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #59 = Methodref          #55.#477      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #60 = Methodref          #54.#478      // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #61 = String             #479          // No native support for writing Object Ids\n-   #62 = String             #480          // No native support for writing Type Ids\n-   #63 = Fieldref           #481.#482     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n-   #64 = Fieldref           #481.#483     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-   #65 = Methodref          #158.#484     // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n-   #66 = Fieldref           #481.#485     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n-   #67 = Methodref          #158.#486     // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n-   #68 = Methodref          #48.#487      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-   #69 = Fieldref           #481.#488     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #70 = Fieldref           #353.#489     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #71 = Methodref          #346.#490     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n-   #72 = Fieldref           #346.#491     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #73 = Fieldref           #162.#492     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-   #74 = Methodref          #346.#493     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n-   #75 = Fieldref           #481.#494     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n-   #76 = Fieldref           #481.#495     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n-   #77 = Methodref          #158.#496     // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-   #78 = Fieldref           #353.#497     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #79 = Methodref          #158.#498     // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n-   #80 = Methodref          #158.#499     // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n-   #81 = Methodref          #158.#500     // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n-   #82 = Methodref          #158.#501     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n-   #83 = Methodref          #158.#502     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n-   #84 = Methodref          #158.#503     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n-   #85 = Methodref          #158.#504     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n-   #86 = Methodref          #158.#505     // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #87 = Methodref          #506.#507     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #88 = Methodref          #353.#508     // com/fasterxml/jackson/core/JsonToken.id:()I\n-   #89 = String             #509          // No current event to copy\n-   #90 = Methodref          #158.#510     // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n-   #91 = Methodref          #506.#511     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-   #92 = Methodref          #158.#512     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #93 = Methodref          #158.#513     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #94 = Methodref          #158.#514     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #95 = Methodref          #506.#515     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-   #96 = Class              #516          // java/lang/IllegalStateException\n-   #97 = String             #517          // Internal error: unknown current token,\n-   #98 = Methodref          #55.#518      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #99 = Methodref          #96.#441      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #100 = Methodref          #158.#519     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #101 = Methodref          #506.#520     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #102 = Methodref          #158.#521     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #103 = Methodref          #158.#522     // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #104 = Methodref          #506.#523     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #105 = Fieldref           #398.#524     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #106 = Methodref          #506.#525     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n-  #107 = Fieldref           #398.#526     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #108 = Methodref          #506.#527     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n-  #109 = Methodref          #506.#528     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n-  #110 = Methodref          #506.#529     // com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n-  #111 = Class              #530          // java/math/BigDecimal\n-  #112 = Class              #531          // java/lang/Double\n-  #113 = Methodref          #130.#532     // java/lang/Number.doubleValue:()D\n-  #114 = Methodref          #130.#533     // java/lang/Number.floatValue:()F\n-  #115 = Fieldref           #398.#534     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #116 = Methodref          #506.#535     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n-  #117 = Fieldref           #398.#536     // com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #118 = Methodref          #506.#537     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n-  #119 = Methodref          #506.#538     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n-  #120 = Methodref          #506.#539     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n-  #121 = Methodref          #506.#540     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n-  #122 = Methodref          #506.#541     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n-  #123 = Methodref          #506.#542     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n-  #124 = Methodref          #158.#543     // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n-  #125 = Methodref          #506.#544     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n-  #126 = Methodref          #545.#546     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n-  #127 = String             #547          // Operation not supported by generator of type\n-  #128 = String             #548          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #129 = Methodref          #131.#549     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #130 = Class              #550          // java/lang/Number\n-  #131 = Class              #551          // java/lang/Integer\n-  #132 = Methodref          #130.#552     // java/lang/Number.intValue:()I\n-  #133 = Class              #553          // java/lang/Long\n-  #134 = Methodref          #130.#554     // java/lang/Number.longValue:()J\n-  #135 = Class              #555          // java/lang/Float\n-  #136 = Class              #556          // java/lang/Short\n-  #137 = Methodref          #130.#557     // java/lang/Number.shortValue:()S\n-  #138 = Class              #558          // java/lang/Byte\n-  #139 = Methodref          #130.#559     // java/lang/Number.byteValue:()B\n-  #140 = Class              #560          // java/math/BigInteger\n-  #141 = Class              #561          // java/util/concurrent/atomic/AtomicInteger\n-  #142 = Methodref          #141.#562     // java/util/concurrent/atomic/AtomicInteger.get:()I\n-  #143 = Class              #563          // java/util/concurrent/atomic/AtomicLong\n-  #144 = Methodref          #143.#564     // java/util/concurrent/atomic/AtomicLong.get:()J\n-  #145 = Class              #565          // java/lang/Boolean\n-  #146 = Methodref          #145.#566     // java/lang/Boolean.booleanValue:()Z\n-  #147 = Class              #567          // java/util/concurrent/atomic/AtomicBoolean\n-  #148 = Methodref          #147.#568     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-  #149 = String             #569          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #150 = String             #570          // )\n-  #151 = Methodref          #571.#572     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #152 = Methodref          #573.#574     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #153 = Fieldref           #571.#575     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #154 = Methodref          #573.#576     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #155 = Fieldref           #158.#577     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #156 = Fieldref           #571.#578     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #157 = Fieldref           #158.#579     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #158 = Class              #580          // com/fasterxml/jackson/core/JsonGenerator\n-  #159 = Class              #581          // java/io/Closeable\n-  #160 = Class              #582          // java/io/Flushable\n-  #161 = Class              #583          // com/fasterxml/jackson/core/Versioned\n-  #162 = Class              #584          // com/fasterxml/jackson/core/JsonGenerator$1\n-  #163 = Utf8               InnerClasses\n-  #164 = Class              #585          // com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #165 = Utf8               Feature\n-  #166 = Utf8               DEFAULT_WRITE_CAPABILITIES\n-  #167 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #168 = Utf8               Signature\n-  #169 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n-  #170 = Utf8               DEFAULT_TEXTUAL_WRITE_CAPABILITIES\n-  #171 = Utf8               DEFAULT_BINARY_WRITE_CAPABILITIES\n-  #172 = Utf8               _cfgPrettyPrinter\n-  #173 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #174 = Utf8               <init>\n-  #175 = Utf8               ()V\n-  #176 = Utf8               Code\n-  #177 = Utf8               LineNumberTable\n-  #178 = Utf8               LocalVariableTable\n-  #179 = Utf8               this\n-  #180 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #181 = Utf8               setCodec\n-  #182 = Utf8               (Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #183 = Utf8               getCodec\n-  #184 = Utf8               ()Lcom/fasterxml/jackson/core/ObjectCodec;\n-  #185 = Utf8               version\n-  #186 = Utf8               ()Lcom/fasterxml/jackson/core/Version;\n-  #187 = Utf8               getOutputContext\n-  #188 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #189 = Utf8               getOutputTarget\n-  #190 = Utf8               ()Ljava/lang/Object;\n-  #191 = Utf8               currentValue\n-  #192 = Utf8               assignCurrentValue\n-  #193 = Utf8               (Ljava/lang/Object;)V\n-  #194 = Utf8               v\n-  #195 = Utf8               Ljava/lang/Object;\n-  #196 = Utf8               getCurrentValue\n-  #197 = Utf8               ctxt\n-  #198 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #199 = Utf8               StackMapTable\n-  #200 = Class              #586          // com/fasterxml/jackson/core/JsonStreamContext\n-  #201 = Utf8               setCurrentValue\n-  #202 = Utf8               enable\n-  #203 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #204 = Utf8               disable\n-  #205 = Utf8               configure\n-  #206 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #207 = Utf8               f\n-  #208 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #209 = Utf8               state\n-  #210 = Utf8               Z\n-  #211 = Utf8               isEnabled\n-  #212 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #213 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n-  #214 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n-  #215 = Utf8               getFeatureMask\n-  #216 = Utf8               ()I\n-  #217 = Utf8               setFeatureMask\n-  #218 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #219 = Utf8               Deprecated\n-  #220 = Utf8               RuntimeVisibleAnnotations\n-  #221 = Utf8               Ljava/lang/Deprecated;\n-  #222 = Utf8               overrideStdFeatures\n-  #223 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #224 = Utf8               values\n-  #225 = Utf8               I\n-  #226 = Utf8               mask\n-  #227 = Utf8               oldState\n-  #228 = Utf8               newState\n-  #229 = Utf8               getFormatFeatures\n-  #230 = Utf8               overrideFormatFeatures\n-  #231 = Utf8               setSchema\n-  #232 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n-  #233 = Utf8               schema\n-  #234 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n-  #235 = Utf8               getSchema\n-  #236 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n-  #237 = Utf8               setPrettyPrinter\n-  #238 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #239 = Utf8               pp\n-  #240 = Utf8               getPrettyPrinter\n-  #241 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #242 = Utf8               useDefaultPrettyPrinter\n-  #243 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #244 = Utf8               setHighestNonEscapedChar\n-  #245 = Utf8               charCode\n-  #246 = Utf8               getHighestEscapedChar\n-  #247 = Utf8               getCharacterEscapes\n-  #248 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #249 = Utf8               setCharacterEscapes\n-  #250 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #251 = Utf8               esc\n-  #252 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #253 = Utf8               setRootValueSeparator\n-  #254 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #255 = Utf8               sep\n-  #256 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n-  #257 = Utf8               getOutputBuffered\n-  #258 = Utf8               canUseSchema\n-  #259 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n-  #260 = Utf8               canWriteObjectId\n-  #261 = Utf8               ()Z\n-  #262 = Utf8               canWriteTypeId\n-  #263 = Utf8               canWriteBinaryNatively\n-  #264 = Utf8               canOmitFields\n-  #265 = Utf8               canWriteFormattedNumbers\n-  #266 = Utf8               getWriteCapabilities\n-  #267 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #268 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n-  #269 = Utf8               writeStartArray\n-  #270 = Utf8               Exceptions\n-  #271 = Class              #587          // java/io/IOException\n-  #272 = Utf8               (I)V\n-  #273 = Utf8               size\n-  #274 = Utf8               forValue\n-  #275 = Utf8               (Ljava/lang/Object;I)V\n-  #276 = Utf8               writeEndArray\n-  #277 = Utf8               writeStartObject\n-  #278 = Utf8               writeEndObject\n-  #279 = Utf8               writeFieldName\n-  #280 = Utf8               (Ljava/lang/String;)V\n-  #281 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #282 = Utf8               writeFieldId\n-  #283 = Utf8               (J)V\n-  #284 = Utf8               id\n-  #285 = Utf8               J\n-  #286 = Utf8               writeArray\n-  #287 = Utf8               ([III)V\n-  #288 = Utf8               i\n-  #289 = Utf8               end\n-  #290 = Utf8               array\n-  #291 = Utf8               [I\n-  #292 = Utf8               offset\n-  #293 = Utf8               length\n-  #294 = Utf8               ([JII)V\n-  #295 = Utf8               [J\n-  #296 = Utf8               ([DII)V\n-  #297 = Utf8               [D\n-  #298 = Utf8               ([Ljava/lang/String;II)V\n-  #299 = Utf8               [Ljava/lang/String;\n-  #300 = Utf8               writeString\n-  #301 = Utf8               (Ljava/io/Reader;I)V\n-  #302 = Utf8               reader\n-  #303 = Utf8               Ljava/io/Reader;\n-  #304 = Utf8               len\n-  #305 = Utf8               ([CII)V\n-  #306 = Utf8               writeRawUTF8String\n-  #307 = Utf8               ([BII)V\n-  #308 = Utf8               writeUTF8String\n-  #309 = Utf8               writeRaw\n-  #310 = Utf8               (Ljava/lang/String;II)V\n-  #311 = Utf8               (C)V\n-  #312 = Utf8               raw\n-  #313 = Utf8               writeRawValue\n-  #314 = Utf8               writeBinary\n-  #315 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #316 = Utf8               data\n-  #317 = Utf8               [B\n-  #318 = Utf8               ([B)V\n-  #319 = Utf8               (Ljava/io/InputStream;I)I\n-  #320 = Utf8               Ljava/io/InputStream;\n-  #321 = Utf8               dataLength\n-  #322 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #323 = Utf8               writeNumber\n-  #324 = Utf8               (S)V\n-  #325 = Utf8               S\n-  #326 = Utf8               (Ljava/math/BigInteger;)V\n-  #327 = Utf8               (D)V\n-  #328 = Utf8               (F)V\n-  #329 = Utf8               (Ljava/math/BigDecimal;)V\n-  #330 = Utf8               encodedValueBuffer\n-  #331 = Utf8               [C\n-  #332 = Utf8               writeBoolean\n-  #333 = Utf8               (Z)V\n-  #334 = Utf8               writeNull\n-  #335 = Utf8               writeEmbeddedObject\n-  #336 = Utf8               object\n-  #337 = Utf8               writeObjectId\n-  #338 = Utf8               writeObjectRef\n-  #339 = Utf8               referenced\n-  #340 = Utf8               writeTypeId\n-  #341 = Utf8               writeTypePrefix\n-  #342 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #343 = Utf8               idStr\n-  #344 = Utf8               Ljava/lang/String;\n-  #345 = Utf8               incl\n-  #346 = Class              #588          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #347 = Utf8               Inclusion\n-  #348 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #349 = Utf8               typeIdDef\n-  #350 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #351 = Utf8               valueShape\n-  #352 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n-  #353 = Class              #589          // com/fasterxml/jackson/core/JsonToken\n-  #354 = Utf8               writeTypeSuffix\n-  #355 = Utf8               writePOJO\n-  #356 = Utf8               pojo\n-  #357 = Utf8               writeObject\n-  #358 = Utf8               writeTree\n-  #359 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n-  #360 = Utf8               writeBinaryField\n-  #361 = Utf8               (Ljava/lang/String;[B)V\n-  #362 = Utf8               fieldName\n-  #363 = Utf8               writeBooleanField\n-  #364 = Utf8               (Ljava/lang/String;Z)V\n-  #365 = Utf8               value\n-  #366 = Utf8               writeNullField\n-  #367 = Utf8               writeStringField\n-  #368 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #369 = Utf8               writeNumberField\n-  #370 = Utf8               (Ljava/lang/String;S)V\n-  #371 = Utf8               (Ljava/lang/String;I)V\n-  #372 = Utf8               (Ljava/lang/String;J)V\n-  #373 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n-  #374 = Utf8               Ljava/math/BigInteger;\n-  #375 = Utf8               (Ljava/lang/String;F)V\n-  #376 = Utf8               F\n-  #377 = Utf8               (Ljava/lang/String;D)V\n-  #378 = Utf8               D\n-  #379 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n-  #380 = Utf8               Ljava/math/BigDecimal;\n-  #381 = Utf8               writeArrayFieldStart\n-  #382 = Utf8               writeObjectFieldStart\n-  #383 = Utf8               writePOJOField\n-  #384 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #385 = Utf8               writeObjectField\n-  #386 = Utf8               writeOmittedField\n-  #387 = Utf8               copyCurrentEvent\n-  #388 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #389 = Utf8               p\n-  #390 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n-  #391 = Utf8               t\n-  #392 = Utf8               token\n-  #393 = Utf8               copyCurrentEventExact\n-  #394 = Utf8               copyCurrentStructure\n-  #395 = Utf8               _copyCurrentContents\n-  #396 = Utf8               depth\n-  #397 = Utf8               _copyCurrentFloatValue\n-  #398 = Class              #590          // com/fasterxml/jackson/core/JsonParser$NumberType\n-  #399 = Utf8               NumberType\n-  #400 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #401 = Utf8               _copyCurrentFloatValueExact\n-  #402 = Utf8               n\n-  #403 = Utf8               Ljava/lang/Number;\n-  #404 = Utf8               _copyCurrentIntValue\n-  #405 = Utf8               _copyCurrentStringValue\n-  #406 = Utf8               flush\n-  #407 = Utf8               isClosed\n-  #408 = Utf8               close\n-  #409 = Utf8               _reportError\n-  #410 = Utf8               msg\n-  #411 = Utf8               _throwInternal\n-  #412 = Utf8               _reportUnsupportedOperation\n-  #413 = Utf8               _verifyOffsets\n-  #414 = Utf8               (III)V\n-  #415 = Utf8               arrayLength\n-  #416 = Utf8               _writeSimpleObject\n-  #417 = Utf8               <clinit>\n-  #418 = Utf8               SourceFile\n-  #419 = Utf8               JsonGenerator.java\n-  #420 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #421 = NameAndType        #174:#175     // \"<init>\":()V\n-  #422 = NameAndType        #196:#190     // getCurrentValue:()Ljava/lang/Object;\n-  #423 = NameAndType        #201:#193     // setCurrentValue:(Ljava/lang/Object;)V\n-  #424 = NameAndType        #187:#188     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #425 = NameAndType        #202:#203     // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #426 = NameAndType        #204:#203     // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #427 = Class              #591          // com/fasterxml/jackson/core/StreamWriteFeature\n-  #428 = NameAndType        #592:#593     // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #429 = NameAndType        #211:#212     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #430 = NameAndType        #215:#216     // getFeatureMask:()I\n-  #431 = NameAndType        #217:#218     // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #432 = Utf8               java/lang/UnsupportedOperationException\n-  #433 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n-  #434 = Utf8               java/lang/Object\n-  #435 = NameAndType        #594:#595     // getClass:()Ljava/lang/Class;\n-  #436 = Class              #596          // java/lang/Class\n-  #437 = NameAndType        #597:#598     // getName:()Ljava/lang/String;\n-  #438 = Class              #599          // com/fasterxml/jackson/core/FormatSchema\n-  #439 = NameAndType        #600:#598     // getSchemaType:()Ljava/lang/String;\n-  #440 = NameAndType        #601:#602     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #441 = NameAndType        #174:#280     // \"<init>\":(Ljava/lang/String;)V\n-  #442 = NameAndType        #172:#173     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #443 = NameAndType        #166:#167     // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #444 = NameAndType        #269:#175     // writeStartArray:()V\n-  #445 = NameAndType        #269:#272     // writeStartArray:(I)V\n-  #446 = NameAndType        #277:#175     // writeStartObject:()V\n-  #447 = NameAndType        #277:#193     // writeStartObject:(Ljava/lang/Object;)V\n-  #448 = NameAndType        #603:#604     // toString:(J)Ljava/lang/String;\n-  #449 = NameAndType        #279:#280     // writeFieldName:(Ljava/lang/String;)V\n-  #450 = Utf8               java/lang/IllegalArgumentException\n-  #451 = Utf8               null array\n-  #452 = NameAndType        #413:#414     // _verifyOffsets:(III)V\n-  #453 = NameAndType        #269:#275     // writeStartArray:(Ljava/lang/Object;I)V\n-  #454 = NameAndType        #323:#272     // writeNumber:(I)V\n-  #455 = NameAndType        #276:#175     // writeEndArray:()V\n-  #456 = NameAndType        #323:#283     // writeNumber:(J)V\n-  #457 = NameAndType        #323:#327     // writeNumber:(D)V\n-  #458 = NameAndType        #300:#280     // writeString:(Ljava/lang/String;)V\n-  #459 = NameAndType        #412:#175     // _reportUnsupportedOperation:()V\n-  #460 = Class              #605          // com/fasterxml/jackson/core/SerializableString\n-  #461 = NameAndType        #606:#598     // getValue:()Ljava/lang/String;\n-  #462 = NameAndType        #309:#280     // writeRaw:(Ljava/lang/String;)V\n-  #463 = NameAndType        #313:#280     // writeRawValue:(Ljava/lang/String;)V\n-  #464 = Class              #607          // com/fasterxml/jackson/core/Base64Variants\n-  #465 = NameAndType        #608:#609     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #466 = NameAndType        #314:#315     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #467 = NameAndType        #314:#322     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #468 = Utf8               java/lang/String\n-  #469 = NameAndType        #174:#305     // \"<init>\":([CII)V\n-  #470 = NameAndType        #323:#280     // writeNumber:(Ljava/lang/String;)V\n-  #471 = NameAndType        #334:#175     // writeNull:()V\n-  #472 = NameAndType        #314:#318     // writeBinary:([B)V\n-  #473 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n-  #474 = Utf8               java/lang/StringBuilder\n-  #475 = Utf8               No native support for writing embedded objects of type\n-  #476 = NameAndType        #610:#611     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #477 = NameAndType        #603:#598     // toString:()Ljava/lang/String;\n-  #478 = NameAndType        #174:#612     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #479 = Utf8               No native support for writing Object Ids\n-  #480 = Utf8               No native support for writing Type Ids\n-  #481 = Class              #613          // com/fasterxml/jackson/core/type/WritableTypeId\n-  #482 = NameAndType        #284:#195     // id:Ljava/lang/Object;\n-  #483 = NameAndType        #351:#352     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-  #484 = NameAndType        #262:#261     // canWriteTypeId:()Z\n-  #485 = NameAndType        #614:#210     // wrapperWritten:Z\n-  #486 = NameAndType        #340:#193     // writeTypeId:(Ljava/lang/Object;)V\n-  #487 = NameAndType        #615:#616     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-  #488 = NameAndType        #617:#348     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #489 = NameAndType        #618:#352     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #490 = NameAndType        #619:#261     // requiresObjectContext:()Z\n-  #491 = NameAndType        #620:#348     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #492 = NameAndType        #621:#291     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-  #493 = NameAndType        #622:#216     // ordinal:()I\n-  #494 = NameAndType        #274:#195     // forValue:Ljava/lang/Object;\n-  #495 = NameAndType        #623:#344     // asProperty:Ljava/lang/String;\n-  #496 = NameAndType        #367:#368     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-  #497 = NameAndType        #624:#352     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #498 = NameAndType        #278:#175     // writeEndObject:()V\n-  #499 = NameAndType        #357:#193     // writeObject:(Ljava/lang/Object;)V\n-  #500 = NameAndType        #332:#333     // writeBoolean:(Z)V\n-  #501 = NameAndType        #323:#324     // writeNumber:(S)V\n-  #502 = NameAndType        #323:#326     // writeNumber:(Ljava/math/BigInteger;)V\n-  #503 = NameAndType        #323:#328     // writeNumber:(F)V\n-  #504 = NameAndType        #323:#329     // writeNumber:(Ljava/math/BigDecimal;)V\n-  #505 = NameAndType        #385:#384     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #506 = Class              #625          // com/fasterxml/jackson/core/JsonParser\n-  #507 = NameAndType        #626:#627     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #508 = NameAndType        #284:#216     // id:()I\n-  #509 = Utf8               No current event to copy\n-  #510 = NameAndType        #409:#280     // _reportError:(Ljava/lang/String;)V\n-  #511 = NameAndType        #628:#598     // getCurrentName:()Ljava/lang/String;\n-  #512 = NameAndType        #405:#388     // _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #513 = NameAndType        #404:#388     // _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #514 = NameAndType        #397:#388     // _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #515 = NameAndType        #629:#190     // getEmbeddedObject:()Ljava/lang/Object;\n-  #516 = Utf8               java/lang/IllegalStateException\n-  #517 = Utf8               Internal error: unknown current token,\n-  #518 = NameAndType        #610:#630     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #519 = NameAndType        #401:#388     // _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #520 = NameAndType        #631:#627     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #521 = NameAndType        #395:#388     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #522 = NameAndType        #387:#388     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #523 = NameAndType        #632:#633     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #524 = NameAndType        #634:#400     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #525 = NameAndType        #635:#636     // getDecimalValue:()Ljava/math/BigDecimal;\n-  #526 = NameAndType        #637:#400     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #527 = NameAndType        #638:#639     // getFloatValue:()F\n-  #528 = NameAndType        #640:#641     // getDoubleValue:()D\n-  #529 = NameAndType        #642:#643     // getNumberValueExact:()Ljava/lang/Number;\n-  #530 = Utf8               java/math/BigDecimal\n-  #531 = Utf8               java/lang/Double\n-  #532 = NameAndType        #644:#641     // doubleValue:()D\n-  #533 = NameAndType        #645:#639     // floatValue:()F\n-  #534 = NameAndType        #646:#400     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #535 = NameAndType        #647:#216     // getIntValue:()I\n-  #536 = NameAndType        #648:#400     // LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #537 = NameAndType        #649:#650     // getLongValue:()J\n-  #538 = NameAndType        #651:#652     // getBigIntegerValue:()Ljava/math/BigInteger;\n-  #539 = NameAndType        #653:#261     // hasTextCharacters:()Z\n-  #540 = NameAndType        #654:#655     // getTextCharacters:()[C\n-  #541 = NameAndType        #656:#216     // getTextOffset:()I\n-  #542 = NameAndType        #657:#216     // getTextLength:()I\n-  #543 = NameAndType        #300:#305     // writeString:([CII)V\n-  #544 = NameAndType        #658:#598     // getText:()Ljava/lang/String;\n-  #545 = Class              #659          // com/fasterxml/jackson/core/util/VersionUtil\n-  #546 = NameAndType        #660:#175     // throwInternal:()V\n-  #547 = Utf8               Operation not supported by generator of type\n-  #548 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #549 = NameAndType        #615:#661     // valueOf:(I)Ljava/lang/Integer;\n-  #550 = Utf8               java/lang/Number\n-  #551 = Utf8               java/lang/Integer\n-  #552 = NameAndType        #662:#216     // intValue:()I\n-  #553 = Utf8               java/lang/Long\n-  #554 = NameAndType        #663:#650     // longValue:()J\n-  #555 = Utf8               java/lang/Float\n-  #556 = Utf8               java/lang/Short\n-  #557 = NameAndType        #664:#665     // shortValue:()S\n-  #558 = Utf8               java/lang/Byte\n-  #559 = NameAndType        #666:#667     // byteValue:()B\n-  #560 = Utf8               java/math/BigInteger\n-  #561 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-  #562 = NameAndType        #668:#216     // get:()I\n-  #563 = Utf8               java/util/concurrent/atomic/AtomicLong\n-  #564 = NameAndType        #668:#650     // get:()J\n-  #565 = Utf8               java/lang/Boolean\n-  #566 = NameAndType        #669:#261     // booleanValue:()Z\n-  #567 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-  #568 = NameAndType        #668:#261     // get:()Z\n-  #569 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #570 = Utf8               )\n-  #571 = Class              #670          // com/fasterxml/jackson/core/StreamWriteCapability\n-  #572 = NameAndType        #224:#671     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #573 = Class              #672          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #574 = NameAndType        #673:#674     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #575 = NameAndType        #675:#676     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #576 = NameAndType        #677:#678     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #577 = NameAndType        #170:#167     // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #578 = NameAndType        #679:#676     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #579 = NameAndType        #171:#167     // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #580 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n-  #581 = Utf8               java/io/Closeable\n-  #582 = Utf8               java/io/Flushable\n-  #583 = Utf8               com/fasterxml/jackson/core/Versioned\n-  #584 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n-  #585 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #586 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n-  #587 = Utf8               java/io/IOException\n-  #588 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #589 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #590 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n-  #591 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n-  #592 = Utf8               mappedFeature\n-  #593 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #594 = Utf8               getClass\n-  #595 = Utf8               ()Ljava/lang/Class;\n-  #596 = Utf8               java/lang/Class\n-  #597 = Utf8               getName\n-  #598 = Utf8               ()Ljava/lang/String;\n-  #599 = Utf8               com/fasterxml/jackson/core/FormatSchema\n-  #600 = Utf8               getSchemaType\n-  #601 = Utf8               format\n-  #602 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #603 = Utf8               toString\n-  #604 = Utf8               (J)Ljava/lang/String;\n-  #605 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #606 = Utf8               getValue\n-  #607 = Utf8               com/fasterxml/jackson/core/Base64Variants\n-  #608 = Utf8               getDefaultVariant\n-  #609 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #610 = Utf8               append\n-  #611 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #612 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #613 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n-  #614 = Utf8               wrapperWritten\n-  #615 = Utf8               valueOf\n-  #616 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #617 = Utf8               include\n-  #618 = Utf8               START_OBJECT\n-  #619 = Utf8               requiresObjectContext\n-  #620 = Utf8               WRAPPER_ARRAY\n-  #621 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n-  #622 = Utf8               ordinal\n-  #623 = Utf8               asProperty\n-  #624 = Utf8               START_ARRAY\n-  #625 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #626 = Utf8               currentToken\n-  #627 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-  #628 = Utf8               getCurrentName\n-  #629 = Utf8               getEmbeddedObject\n-  #630 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #631 = Utf8               nextToken\n-  #632 = Utf8               getNumberType\n-  #633 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #634 = Utf8               BIG_DECIMAL\n-  #635 = Utf8               getDecimalValue\n-  #636 = Utf8               ()Ljava/math/BigDecimal;\n-  #637 = Utf8               FLOAT\n-  #638 = Utf8               getFloatValue\n-  #639 = Utf8               ()F\n-  #640 = Utf8               getDoubleValue\n-  #641 = Utf8               ()D\n-  #642 = Utf8               getNumberValueExact\n-  #643 = Utf8               ()Ljava/lang/Number;\n-  #644 = Utf8               doubleValue\n-  #645 = Utf8               floatValue\n-  #646 = Utf8               INT\n-  #647 = Utf8               getIntValue\n-  #648 = Utf8               LONG\n-  #649 = Utf8               getLongValue\n-  #650 = Utf8               ()J\n-  #651 = Utf8               getBigIntegerValue\n-  #652 = Utf8               ()Ljava/math/BigInteger;\n-  #653 = Utf8               hasTextCharacters\n-  #654 = Utf8               getTextCharacters\n-  #655 = Utf8               ()[C\n-  #656 = Utf8               getTextOffset\n-  #657 = Utf8               getTextLength\n-  #658 = Utf8               getText\n-  #659 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n-  #660 = Utf8               throwInternal\n-  #661 = Utf8               (I)Ljava/lang/Integer;\n-  #662 = Utf8               intValue\n-  #663 = Utf8               longValue\n-  #664 = Utf8               shortValue\n-  #665 = Utf8               ()S\n-  #666 = Utf8               byteValue\n-  #667 = Utf8               ()B\n-  #668 = Utf8               get\n-  #669 = Utf8               booleanValue\n-  #670 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n-  #671 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #672 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #673 = Utf8               fromDefaults\n-  #674 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #675 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n-  #676 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #677 = Utf8               with\n-  #678 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #679 = Utf8               CAN_WRITE_BINARY_NATIVELY\n+    #1 = Class              #2            // com/fasterxml/jackson/core/JsonTokenId\n+    #2 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Methodref          #10.#11       // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n+   #10 = Class              #12           // com/fasterxml/jackson/core/JsonGenerator\n+   #11 = NameAndType        #13:#14       // getCurrentValue:()Ljava/lang/Object;\n+   #12 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+   #13 = Utf8               getCurrentValue\n+   #14 = Utf8               ()Ljava/lang/Object;\n+   #15 = Methodref          #10.#16       // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n+   #16 = NameAndType        #17:#18       // setCurrentValue:(Ljava/lang/Object;)V\n+   #17 = Utf8               setCurrentValue\n+   #18 = Utf8               (Ljava/lang/Object;)V\n+   #19 = Methodref          #10.#20       // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+   #20 = NameAndType        #21:#22       // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+   #21 = Utf8               getOutputContext\n+   #22 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+   #23 = Methodref          #24.#11       // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n+   #24 = Class              #25           // com/fasterxml/jackson/core/JsonStreamContext\n+   #25 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n+   #26 = Methodref          #24.#16       // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n+   #27 = Methodref          #10.#28       // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #28 = NameAndType        #29:#30       // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #29 = Utf8               enable\n+   #30 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #31 = Methodref          #10.#32       // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #32 = NameAndType        #33:#30       // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #33 = Utf8               disable\n+   #34 = Methodref          #35.#36       // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #35 = Class              #37           // com/fasterxml/jackson/core/StreamWriteFeature\n+   #36 = NameAndType        #38:#39       // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #37 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n+   #38 = Utf8               mappedFeature\n+   #39 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #40 = Methodref          #10.#41       // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #41 = NameAndType        #42:#43       // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #42 = Utf8               isEnabled\n+   #43 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #44 = Methodref          #10.#45       // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n+   #45 = NameAndType        #46:#47       // getFeatureMask:()I\n+   #46 = Utf8               getFeatureMask\n+   #47 = Utf8               ()I\n+   #48 = Methodref          #10.#49       // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #49 = NameAndType        #50:#51       // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #50 = Utf8               setFeatureMask\n+   #51 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #52 = Class              #53           // java/lang/UnsupportedOperationException\n+   #53 = Utf8               java/lang/UnsupportedOperationException\n+   #54 = String             #55           // Generator of type %s does not support schema of type \\'%s\\'\n+   #55 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n+   #56 = Methodref          #4.#57        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #57 = NameAndType        #58:#59       // getClass:()Ljava/lang/Class;\n+   #58 = Utf8               getClass\n+   #59 = Utf8               ()Ljava/lang/Class;\n+   #60 = Methodref          #61.#62       // java/lang/Class.getName:()Ljava/lang/String;\n+   #61 = Class              #63           // java/lang/Class\n+   #62 = NameAndType        #64:#65       // getName:()Ljava/lang/String;\n+   #63 = Utf8               java/lang/Class\n+   #64 = Utf8               getName\n+   #65 = Utf8               ()Ljava/lang/String;\n+   #66 = InterfaceMethodref #67.#68       // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n+   #67 = Class              #69           // com/fasterxml/jackson/core/FormatSchema\n+   #68 = NameAndType        #70:#65       // getSchemaType:()Ljava/lang/String;\n+   #69 = Utf8               com/fasterxml/jackson/core/FormatSchema\n+   #70 = Utf8               getSchemaType\n+   #71 = Methodref          #72.#73       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #72 = Class              #74           // java/lang/String\n+   #73 = NameAndType        #75:#76       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #74 = Utf8               java/lang/String\n+   #75 = Utf8               format\n+   #76 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #77 = Methodref          #52.#78       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #78 = NameAndType        #7:#79        // \"<init>\":(Ljava/lang/String;)V\n+   #79 = Utf8               (Ljava/lang/String;)V\n+   #80 = Fieldref           #10.#81       // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #81 = NameAndType        #82:#83       // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #82 = Utf8               _cfgPrettyPrinter\n+   #83 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #84 = Methodref          #52.#5        // java/lang/UnsupportedOperationException.\"<init>\":()V\n+   #85 = Fieldref           #10.#86       // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #86 = NameAndType        #87:#88       // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #87 = Utf8               DEFAULT_WRITE_CAPABILITIES\n+   #88 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #89 = Methodref          #10.#90       // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n+   #90 = NameAndType        #91:#8        // writeStartArray:()V\n+   #91 = Utf8               writeStartArray\n+   #92 = Methodref          #10.#93       // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n+   #93 = NameAndType        #91:#94       // writeStartArray:(I)V\n+   #94 = Utf8               (I)V\n+   #95 = Methodref          #10.#96       // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n+   #96 = NameAndType        #97:#8        // writeStartObject:()V\n+   #97 = Utf8               writeStartObject\n+   #98 = Methodref          #10.#99       // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n+   #99 = NameAndType        #97:#18       // writeStartObject:(Ljava/lang/Object;)V\n+  #100 = Methodref          #101.#102     // java/lang/Long.toString:(J)Ljava/lang/String;\n+  #101 = Class              #103          // java/lang/Long\n+  #102 = NameAndType        #104:#105     // toString:(J)Ljava/lang/String;\n+  #103 = Utf8               java/lang/Long\n+  #104 = Utf8               toString\n+  #105 = Utf8               (J)Ljava/lang/String;\n+  #106 = Methodref          #10.#107      // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n+  #107 = NameAndType        #108:#79      // writeFieldName:(Ljava/lang/String;)V\n+  #108 = Utf8               writeFieldName\n+  #109 = Class              #110          // java/lang/IllegalArgumentException\n+  #110 = Utf8               java/lang/IllegalArgumentException\n+  #111 = String             #112          // null array\n+  #112 = Utf8               null array\n+  #113 = Methodref          #109.#78      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #114 = Methodref          #10.#115      // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n+  #115 = NameAndType        #116:#117     // _verifyOffsets:(III)V\n+  #116 = Utf8               _verifyOffsets\n+  #117 = Utf8               (III)V\n+  #118 = Methodref          #10.#119      // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n+  #119 = NameAndType        #91:#120      // writeStartArray:(Ljava/lang/Object;I)V\n+  #120 = Utf8               (Ljava/lang/Object;I)V\n+  #121 = Methodref          #10.#122      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n+  #122 = NameAndType        #123:#94      // writeNumber:(I)V\n+  #123 = Utf8               writeNumber\n+  #124 = Methodref          #10.#125      // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n+  #125 = NameAndType        #126:#8       // writeEndArray:()V\n+  #126 = Utf8               writeEndArray\n+  #127 = Methodref          #10.#128      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n+  #128 = NameAndType        #123:#129     // writeNumber:(J)V\n+  #129 = Utf8               (J)V\n+  #130 = Methodref          #10.#131      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n+  #131 = NameAndType        #123:#132     // writeNumber:(D)V\n+  #132 = Utf8               (D)V\n+  #133 = Methodref          #10.#134      // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n+  #134 = NameAndType        #135:#79      // writeString:(Ljava/lang/String;)V\n+  #135 = Utf8               writeString\n+  #136 = Methodref          #10.#137      // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n+  #137 = NameAndType        #138:#8       // _reportUnsupportedOperation:()V\n+  #138 = Utf8               _reportUnsupportedOperation\n+  #139 = InterfaceMethodref #140.#141     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+  #140 = Class              #142          // com/fasterxml/jackson/core/SerializableString\n+  #141 = NameAndType        #143:#65      // getValue:()Ljava/lang/String;\n+  #142 = Utf8               com/fasterxml/jackson/core/SerializableString\n+  #143 = Utf8               getValue\n+  #144 = Methodref          #10.#145      // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n+  #145 = NameAndType        #146:#79      // writeRaw:(Ljava/lang/String;)V\n+  #146 = Utf8               writeRaw\n+  #147 = Methodref          #10.#148      // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n+  #148 = NameAndType        #149:#79      // writeRawValue:(Ljava/lang/String;)V\n+  #149 = Utf8               writeRawValue\n+  #150 = Methodref          #151.#152     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #151 = Class              #153          // com/fasterxml/jackson/core/Base64Variants\n+  #152 = NameAndType        #154:#155     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #153 = Utf8               com/fasterxml/jackson/core/Base64Variants\n+  #154 = Utf8               getDefaultVariant\n+  #155 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #156 = Methodref          #10.#157      // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #157 = NameAndType        #158:#159     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #158 = Utf8               writeBinary\n+  #159 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #160 = Methodref          #10.#161      // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #161 = NameAndType        #158:#162     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #162 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #163 = Methodref          #72.#164      // java/lang/String.\"<init>\":([CII)V\n+  #164 = NameAndType        #7:#165       // \"<init>\":([CII)V\n+  #165 = Utf8               ([CII)V\n+  #166 = Methodref          #10.#167      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n+  #167 = NameAndType        #123:#79      // writeNumber:(Ljava/lang/String;)V\n+  #168 = Methodref          #10.#169      // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n+  #169 = NameAndType        #170:#8       // writeNull:()V\n+  #170 = Utf8               writeNull\n+  #171 = Class              #172          // \"[B\"\n+  #172 = Utf8               [B\n+  #173 = Methodref          #10.#174      // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n+  #174 = NameAndType        #158:#175     // writeBinary:([B)V\n+  #175 = Utf8               ([B)V\n+  #176 = Class              #177          // com/fasterxml/jackson/core/JsonGenerationException\n+  #177 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n+  #178 = Class              #179          // java/lang/StringBuilder\n+  #179 = Utf8               java/lang/StringBuilder\n+  #180 = Methodref          #178.#5       // java/lang/StringBuilder.\"<init>\":()V\n+  #181 = String             #182          // No native support for writing embedded objects of type\n+  #182 = Utf8               No native support for writing embedded objects of type\n+  #183 = Methodref          #178.#184     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #184 = NameAndType        #185:#186     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #185 = Utf8               append\n+  #186 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #187 = Methodref          #178.#188     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #188 = NameAndType        #104:#65      // toString:()Ljava/lang/String;\n+  #189 = Methodref          #176.#190     // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #190 = NameAndType        #7:#191       // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #191 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #192 = String             #193          // No native support for writing Object Ids\n+  #193 = Utf8               No native support for writing Object Ids\n+  #194 = String             #195          // No native support for writing Type Ids\n+  #195 = Utf8               No native support for writing Type Ids\n+  #196 = Fieldref           #197.#198     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n+  #197 = Class              #199          // com/fasterxml/jackson/core/type/WritableTypeId\n+  #198 = NameAndType        #200:#201     // id:Ljava/lang/Object;\n+  #199 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n+  #200 = Utf8               id\n+  #201 = Utf8               Ljava/lang/Object;\n+  #202 = Fieldref           #197.#203     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+  #203 = NameAndType        #204:#205     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+  #204 = Utf8               valueShape\n+  #205 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n+  #206 = Methodref          #10.#207      // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n+  #207 = NameAndType        #208:#209     // canWriteTypeId:()Z\n+  #208 = Utf8               canWriteTypeId\n+  #209 = Utf8               ()Z\n+  #210 = Fieldref           #197.#211     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+  #211 = NameAndType        #212:#213     // wrapperWritten:Z\n+  #212 = Utf8               wrapperWritten\n+  #213 = Utf8               Z\n+  #214 = Methodref          #10.#215      // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n+  #215 = NameAndType        #216:#18      // writeTypeId:(Ljava/lang/Object;)V\n+  #216 = Utf8               writeTypeId\n+  #217 = Methodref          #72.#218      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+  #218 = NameAndType        #219:#220     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+  #219 = Utf8               valueOf\n+  #220 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+  #221 = Fieldref           #197.#222     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #222 = NameAndType        #223:#224     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #223 = Utf8               include\n+  #224 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #225 = Fieldref           #226.#227     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #226 = Class              #228          // com/fasterxml/jackson/core/JsonToken\n+  #227 = NameAndType        #229:#205     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #228 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #229 = Utf8               START_OBJECT\n+  #230 = Methodref          #231.#232     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n+  #231 = Class              #233          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #232 = NameAndType        #234:#209     // requiresObjectContext:()Z\n+  #233 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #234 = Utf8               requiresObjectContext\n+  #235 = Fieldref           #231.#236     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #236 = NameAndType        #237:#224     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #237 = Utf8               WRAPPER_ARRAY\n+  #238 = Fieldref           #239.#240     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+  #239 = Class              #241          // com/fasterxml/jackson/core/JsonGenerator$1\n+  #240 = NameAndType        #242:#243     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+  #241 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n+  #242 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n+  #243 = Utf8               [I\n+  #244 = Methodref          #231.#245     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n+  #245 = NameAndType        #246:#47      // ordinal:()I\n+  #246 = Utf8               ordinal\n+  #247 = Fieldref           #197.#248     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n+  #248 = NameAndType        #249:#201     // forValue:Ljava/lang/Object;\n+  #249 = Utf8               forValue\n+  #250 = Fieldref           #197.#251     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n+  #251 = NameAndType        #252:#253     // asProperty:Ljava/lang/String;\n+  #252 = Utf8               asProperty\n+  #253 = Utf8               Ljava/lang/String;\n+  #254 = Methodref          #10.#255      // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+  #255 = NameAndType        #256:#257     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+  #256 = Utf8               writeStringField\n+  #257 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #258 = Fieldref           #226.#259     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #259 = NameAndType        #260:#205     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #260 = Utf8               START_ARRAY\n+  #261 = Methodref          #10.#262      // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n+  #262 = NameAndType        #263:#8       // writeEndObject:()V\n+  #263 = Utf8               writeEndObject\n+  #264 = Methodref          #10.#265      // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n+  #265 = NameAndType        #266:#18      // writeObject:(Ljava/lang/Object;)V\n+  #266 = Utf8               writeObject\n+  #267 = Methodref          #10.#268      // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n+  #268 = NameAndType        #269:#270     // writeBoolean:(Z)V\n+  #269 = Utf8               writeBoolean\n+  #270 = Utf8               (Z)V\n+  #271 = Methodref          #10.#272      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n+  #272 = NameAndType        #123:#273     // writeNumber:(S)V\n+  #273 = Utf8               (S)V\n+  #274 = Methodref          #10.#275      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n+  #275 = NameAndType        #123:#276     // writeNumber:(Ljava/math/BigInteger;)V\n+  #276 = Utf8               (Ljava/math/BigInteger;)V\n+  #277 = Methodref          #10.#278      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n+  #278 = NameAndType        #123:#279     // writeNumber:(F)V\n+  #279 = Utf8               (F)V\n+  #280 = Methodref          #10.#281      // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n+  #281 = NameAndType        #123:#282     // writeNumber:(Ljava/math/BigDecimal;)V\n+  #282 = Utf8               (Ljava/math/BigDecimal;)V\n+  #283 = Methodref          #10.#284      // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #284 = NameAndType        #285:#286     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #285 = Utf8               writeObjectField\n+  #286 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #287 = Methodref          #288.#289     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #288 = Class              #290          // com/fasterxml/jackson/core/JsonParser\n+  #289 = NameAndType        #291:#292     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #290 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #291 = Utf8               currentToken\n+  #292 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+  #293 = Methodref          #226.#294     // com/fasterxml/jackson/core/JsonToken.id:()I\n+  #294 = NameAndType        #200:#47      // id:()I\n+  #295 = String             #296          // No current event to copy\n+  #296 = Utf8               No current event to copy\n+  #297 = Methodref          #10.#298      // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n+  #298 = NameAndType        #299:#79      // _reportError:(Ljava/lang/String;)V\n+  #299 = Utf8               _reportError\n+  #300 = Methodref          #288.#301     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+  #301 = NameAndType        #302:#65      // getCurrentName:()Ljava/lang/String;\n+  #302 = Utf8               getCurrentName\n+  #303 = Methodref          #10.#304      // com/fasterxml/jackson/core/JsonGenerator._copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #304 = NameAndType        #305:#306     // _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #305 = Utf8               _copyCurrentStringValue\n+  #306 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #307 = Methodref          #10.#308      // com/fasterxml/jackson/core/JsonGenerator._copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #308 = NameAndType        #309:#306     // _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #309 = Utf8               _copyCurrentIntValue\n+  #310 = Methodref          #10.#311      // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #311 = NameAndType        #312:#306     // _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #312 = Utf8               _copyCurrentFloatValue\n+  #313 = Methodref          #288.#314     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+  #314 = NameAndType        #315:#14      // getEmbeddedObject:()Ljava/lang/Object;\n+  #315 = Utf8               getEmbeddedObject\n+  #316 = Class              #317          // java/lang/IllegalStateException\n+  #317 = Utf8               java/lang/IllegalStateException\n+  #318 = String             #319          // Internal error: unknown current token,\n+  #319 = Utf8               Internal error: unknown current token,\n+  #320 = Methodref          #178.#321     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #321 = NameAndType        #185:#322     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #322 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #323 = Methodref          #316.#78      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #324 = Methodref          #10.#325      // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #325 = NameAndType        #326:#306     // _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #326 = Utf8               _copyCurrentFloatValueExact\n+  #327 = Methodref          #288.#328     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #328 = NameAndType        #329:#292     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #329 = Utf8               nextToken\n+  #330 = Methodref          #10.#331      // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #331 = NameAndType        #332:#306     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #332 = Utf8               _copyCurrentContents\n+  #333 = Methodref          #10.#334      // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #334 = NameAndType        #335:#306     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #335 = Utf8               copyCurrentEvent\n+  #336 = Methodref          #288.#337     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #337 = NameAndType        #338:#339     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #338 = Utf8               getNumberType\n+  #339 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #340 = Fieldref           #341.#342     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #341 = Class              #343          // com/fasterxml/jackson/core/JsonParser$NumberType\n+  #342 = NameAndType        #344:#345     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #343 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n+  #344 = Utf8               BIG_DECIMAL\n+  #345 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #346 = Methodref          #288.#347     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n+  #347 = NameAndType        #348:#349     // getDecimalValue:()Ljava/math/BigDecimal;\n+  #348 = Utf8               getDecimalValue\n+  #349 = Utf8               ()Ljava/math/BigDecimal;\n+  #350 = Fieldref           #341.#351     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #351 = NameAndType        #352:#345     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #352 = Utf8               FLOAT\n+  #353 = Methodref          #288.#354     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n+  #354 = NameAndType        #355:#356     // getFloatValue:()F\n+  #355 = Utf8               getFloatValue\n+  #356 = Utf8               ()F\n+  #357 = Methodref          #288.#358     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n+  #358 = NameAndType        #359:#360     // getDoubleValue:()D\n+  #359 = Utf8               getDoubleValue\n+  #360 = Utf8               ()D\n+  #361 = Methodref          #288.#362     // com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n+  #362 = NameAndType        #363:#364     // getNumberValueExact:()Ljava/lang/Number;\n+  #363 = Utf8               getNumberValueExact\n+  #364 = Utf8               ()Ljava/lang/Number;\n+  #365 = Class              #366          // java/math/BigDecimal\n+  #366 = Utf8               java/math/BigDecimal\n+  #367 = Class              #368          // java/lang/Double\n+  #368 = Utf8               java/lang/Double\n+  #369 = Methodref          #370.#371     // java/lang/Number.doubleValue:()D\n+  #370 = Class              #372          // java/lang/Number\n+  #371 = NameAndType        #373:#360     // doubleValue:()D\n+  #372 = Utf8               java/lang/Number\n+  #373 = Utf8               doubleValue\n+  #374 = Methodref          #370.#375     // java/lang/Number.floatValue:()F\n+  #375 = NameAndType        #376:#356     // floatValue:()F\n+  #376 = Utf8               floatValue\n+  #377 = Fieldref           #341.#378     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #378 = NameAndType        #379:#345     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #379 = Utf8               INT\n+  #380 = Methodref          #288.#381     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n+  #381 = NameAndType        #382:#47      // getIntValue:()I\n+  #382 = Utf8               getIntValue\n+  #383 = Fieldref           #341.#384     // com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #384 = NameAndType        #385:#345     // LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #385 = Utf8               LONG\n+  #386 = Methodref          #288.#387     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n+  #387 = NameAndType        #388:#389     // getLongValue:()J\n+  #388 = Utf8               getLongValue\n+  #389 = Utf8               ()J\n+  #390 = Methodref          #288.#391     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n+  #391 = NameAndType        #392:#393     // getBigIntegerValue:()Ljava/math/BigInteger;\n+  #392 = Utf8               getBigIntegerValue\n+  #393 = Utf8               ()Ljava/math/BigInteger;\n+  #394 = Methodref          #288.#395     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n+  #395 = NameAndType        #396:#209     // hasTextCharacters:()Z\n+  #396 = Utf8               hasTextCharacters\n+  #397 = Methodref          #288.#398     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n+  #398 = NameAndType        #399:#400     // getTextCharacters:()[C\n+  #399 = Utf8               getTextCharacters\n+  #400 = Utf8               ()[C\n+  #401 = Methodref          #288.#402     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n+  #402 = NameAndType        #403:#47      // getTextOffset:()I\n+  #403 = Utf8               getTextOffset\n+  #404 = Methodref          #288.#405     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n+  #405 = NameAndType        #406:#47      // getTextLength:()I\n+  #406 = Utf8               getTextLength\n+  #407 = Methodref          #10.#408      // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n+  #408 = NameAndType        #135:#165     // writeString:([CII)V\n+  #409 = Methodref          #288.#410     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n+  #410 = NameAndType        #411:#65      // getText:()Ljava/lang/String;\n+  #411 = Utf8               getText\n+  #412 = Methodref          #413.#414     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+  #413 = Class              #415          // com/fasterxml/jackson/core/util/VersionUtil\n+  #414 = NameAndType        #416:#8       // throwInternal:()V\n+  #415 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n+  #416 = Utf8               throwInternal\n+  #417 = String             #418          // Operation not supported by generator of type\n+  #418 = Utf8               Operation not supported by generator of type\n+  #419 = String             #420          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #420 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #421 = Methodref          #422.#423     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #422 = Class              #424          // java/lang/Integer\n+  #423 = NameAndType        #219:#425     // valueOf:(I)Ljava/lang/Integer;\n+  #424 = Utf8               java/lang/Integer\n+  #425 = Utf8               (I)Ljava/lang/Integer;\n+  #426 = Methodref          #370.#427     // java/lang/Number.intValue:()I\n+  #427 = NameAndType        #428:#47      // intValue:()I\n+  #428 = Utf8               intValue\n+  #429 = Methodref          #370.#430     // java/lang/Number.longValue:()J\n+  #430 = NameAndType        #431:#389     // longValue:()J\n+  #431 = Utf8               longValue\n+  #432 = Class              #433          // java/lang/Float\n+  #433 = Utf8               java/lang/Float\n+  #434 = Class              #435          // java/lang/Short\n+  #435 = Utf8               java/lang/Short\n+  #436 = Methodref          #370.#437     // java/lang/Number.shortValue:()S\n+  #437 = NameAndType        #438:#439     // shortValue:()S\n+  #438 = Utf8               shortValue\n+  #439 = Utf8               ()S\n+  #440 = Class              #441          // java/lang/Byte\n+  #441 = Utf8               java/lang/Byte\n+  #442 = Methodref          #370.#443     // java/lang/Number.byteValue:()B\n+  #443 = NameAndType        #444:#445     // byteValue:()B\n+  #444 = Utf8               byteValue\n+  #445 = Utf8               ()B\n+  #446 = Class              #447          // java/math/BigInteger\n+  #447 = Utf8               java/math/BigInteger\n+  #448 = Class              #449          // java/util/concurrent/atomic/AtomicInteger\n+  #449 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #450 = Methodref          #448.#451     // java/util/concurrent/atomic/AtomicInteger.get:()I\n+  #451 = NameAndType        #452:#47      // get:()I\n+  #452 = Utf8               get\n+  #453 = Class              #454          // java/util/concurrent/atomic/AtomicLong\n+  #454 = Utf8               java/util/concurrent/atomic/AtomicLong\n+  #455 = Methodref          #453.#456     // java/util/concurrent/atomic/AtomicLong.get:()J\n+  #456 = NameAndType        #452:#389     // get:()J\n+  #457 = Class              #458          // java/lang/Boolean\n+  #458 = Utf8               java/lang/Boolean\n+  #459 = Methodref          #457.#460     // java/lang/Boolean.booleanValue:()Z\n+  #460 = NameAndType        #461:#209     // booleanValue:()Z\n+  #461 = Utf8               booleanValue\n+  #462 = Class              #463          // java/util/concurrent/atomic/AtomicBoolean\n+  #463 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+  #464 = Methodref          #462.#465     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+  #465 = NameAndType        #452:#209     // get:()Z\n+  #466 = String             #467          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #467 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #468 = String             #469          // )\n+  #469 = Utf8               )\n+  #470 = Methodref          #471.#472     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #471 = Class              #473          // com/fasterxml/jackson/core/StreamWriteCapability\n+  #472 = NameAndType        #474:#475     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #473 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n+  #474 = Utf8               values\n+  #475 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #476 = Methodref          #477.#478     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #477 = Class              #479          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #478 = NameAndType        #480:#481     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #479 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #480 = Utf8               fromDefaults\n+  #481 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #482 = Fieldref           #471.#483     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #483 = NameAndType        #484:#485     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #484 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n+  #485 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #486 = Methodref          #477.#487     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #487 = NameAndType        #488:#489     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #488 = Utf8               with\n+  #489 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #490 = Fieldref           #10.#491      // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #491 = NameAndType        #492:#88      // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #492 = Utf8               DEFAULT_TEXTUAL_WRITE_CAPABILITIES\n+  #493 = Fieldref           #471.#494     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #494 = NameAndType        #495:#485     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #495 = Utf8               CAN_WRITE_BINARY_NATIVELY\n+  #496 = Fieldref           #10.#497      // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #497 = NameAndType        #498:#88      // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #498 = Utf8               DEFAULT_BINARY_WRITE_CAPABILITIES\n+  #499 = Class              #500          // java/io/Closeable\n+  #500 = Utf8               java/io/Closeable\n+  #501 = Class              #502          // java/io/Flushable\n+  #502 = Utf8               java/io/Flushable\n+  #503 = Class              #504          // com/fasterxml/jackson/core/Versioned\n+  #504 = Utf8               com/fasterxml/jackson/core/Versioned\n+  #505 = Utf8               Signature\n+  #506 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+  #507 = Utf8               Code\n+  #508 = Utf8               LineNumberTable\n+  #509 = Utf8               LocalVariableTable\n+  #510 = Utf8               this\n+  #511 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #512 = Utf8               setCodec\n+  #513 = Utf8               (Lcom/fasterxml/jackson/core/ObjectCodec;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #514 = Utf8               getCodec\n+  #515 = Utf8               ()Lcom/fasterxml/jackson/core/ObjectCodec;\n+  #516 = Utf8               version\n+  #517 = Utf8               ()Lcom/fasterxml/jackson/core/Version;\n+  #518 = Utf8               getOutputTarget\n+  #519 = Utf8               currentValue\n+  #520 = Utf8               assignCurrentValue\n+  #521 = Utf8               v\n+  #522 = Utf8               ctxt\n+  #523 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #524 = Utf8               StackMapTable\n+  #525 = Utf8               configure\n+  #526 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #527 = Utf8               f\n+  #528 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #529 = Utf8               state\n+  #530 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n+  #531 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n+  #532 = Utf8               Deprecated\n+  #533 = Utf8               RuntimeVisibleAnnotations\n+  #534 = Utf8               Ljava/lang/Deprecated;\n+  #535 = Utf8               overrideStdFeatures\n+  #536 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #537 = Utf8               I\n+  #538 = Utf8               mask\n+  #539 = Utf8               oldState\n+  #540 = Utf8               newState\n+  #541 = Utf8               getFormatFeatures\n+  #542 = Utf8               overrideFormatFeatures\n+  #543 = Utf8               setSchema\n+  #544 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n+  #545 = Utf8               schema\n+  #546 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n+  #547 = Utf8               getSchema\n+  #548 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n+  #549 = Utf8               setPrettyPrinter\n+  #550 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #551 = Utf8               pp\n+  #552 = Utf8               getPrettyPrinter\n+  #553 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #554 = Utf8               useDefaultPrettyPrinter\n+  #555 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #556 = Utf8               setHighestNonEscapedChar\n+  #557 = Utf8               charCode\n+  #558 = Utf8               getHighestEscapedChar\n+  #559 = Utf8               getCharacterEscapes\n+  #560 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #561 = Utf8               setCharacterEscapes\n+  #562 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #563 = Utf8               esc\n+  #564 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #565 = Utf8               setRootValueSeparator\n+  #566 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #567 = Utf8               sep\n+  #568 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n+  #569 = Utf8               getOutputBuffered\n+  #570 = Utf8               canUseSchema\n+  #571 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n+  #572 = Utf8               canWriteObjectId\n+  #573 = Utf8               canWriteBinaryNatively\n+  #574 = Utf8               canOmitFields\n+  #575 = Utf8               canWriteFormattedNumbers\n+  #576 = Utf8               getWriteCapabilities\n+  #577 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #578 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+  #579 = Utf8               Exceptions\n+  #580 = Class              #581          // java/io/IOException\n+  #581 = Utf8               java/io/IOException\n+  #582 = Utf8               size\n+  #583 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #584 = Utf8               writeFieldId\n+  #585 = Utf8               J\n+  #586 = Utf8               writeArray\n+  #587 = Utf8               ([III)V\n+  #588 = Utf8               i\n+  #589 = Utf8               end\n+  #590 = Utf8               array\n+  #591 = Utf8               offset\n+  #592 = Utf8               length\n+  #593 = Utf8               ([JII)V\n+  #594 = Utf8               [J\n+  #595 = Utf8               ([DII)V\n+  #596 = Utf8               [D\n+  #597 = Utf8               ([Ljava/lang/String;II)V\n+  #598 = Utf8               [Ljava/lang/String;\n+  #599 = Utf8               (Ljava/io/Reader;I)V\n+  #600 = Utf8               reader\n+  #601 = Utf8               Ljava/io/Reader;\n+  #602 = Utf8               len\n+  #603 = Utf8               writeRawUTF8String\n+  #604 = Utf8               ([BII)V\n+  #605 = Utf8               writeUTF8String\n+  #606 = Utf8               (Ljava/lang/String;II)V\n+  #607 = Utf8               (C)V\n+  #608 = Utf8               raw\n+  #609 = Utf8               data\n+  #610 = Utf8               (Ljava/io/InputStream;I)I\n+  #611 = Utf8               Ljava/io/InputStream;\n+  #612 = Utf8               dataLength\n+  #613 = Utf8               S\n+  #614 = Utf8               encodedValueBuffer\n+  #615 = Utf8               [C\n+  #616 = Utf8               writeEmbeddedObject\n+  #617 = Utf8               object\n+  #618 = Utf8               writeObjectId\n+  #619 = Utf8               writeObjectRef\n+  #620 = Utf8               referenced\n+  #621 = Utf8               writeTypePrefix\n+  #622 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #623 = Utf8               idStr\n+  #624 = Utf8               incl\n+  #625 = Utf8               typeIdDef\n+  #626 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #627 = Utf8               writeTypeSuffix\n+  #628 = Utf8               writePOJO\n+  #629 = Utf8               pojo\n+  #630 = Utf8               writeTree\n+  #631 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n+  #632 = Utf8               writeBinaryField\n+  #633 = Utf8               (Ljava/lang/String;[B)V\n+  #634 = Utf8               fieldName\n+  #635 = Utf8               writeBooleanField\n+  #636 = Utf8               (Ljava/lang/String;Z)V\n+  #637 = Utf8               value\n+  #638 = Utf8               writeNullField\n+  #639 = Utf8               writeNumberField\n+  #640 = Utf8               (Ljava/lang/String;S)V\n+  #641 = Utf8               (Ljava/lang/String;I)V\n+  #642 = Utf8               (Ljava/lang/String;J)V\n+  #643 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n+  #644 = Utf8               Ljava/math/BigInteger;\n+  #645 = Utf8               (Ljava/lang/String;F)V\n+  #646 = Utf8               F\n+  #647 = Utf8               (Ljava/lang/String;D)V\n+  #648 = Utf8               D\n+  #649 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n+  #650 = Utf8               Ljava/math/BigDecimal;\n+  #651 = Utf8               writeArrayFieldStart\n+  #652 = Utf8               writeObjectFieldStart\n+  #653 = Utf8               writePOJOField\n+  #654 = Utf8               writeOmittedField\n+  #655 = Utf8               p\n+  #656 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n+  #657 = Utf8               t\n+  #658 = Utf8               token\n+  #659 = Utf8               copyCurrentEventExact\n+  #660 = Utf8               copyCurrentStructure\n+  #661 = Utf8               depth\n+  #662 = Utf8               n\n+  #663 = Utf8               Ljava/lang/Number;\n+  #664 = Utf8               flush\n+  #665 = Utf8               isClosed\n+  #666 = Utf8               close\n+  #667 = Utf8               msg\n+  #668 = Utf8               _throwInternal\n+  #669 = Utf8               arrayLength\n+  #670 = Utf8               _writeSimpleObject\n+  #671 = Utf8               <clinit>\n+  #672 = Utf8               SourceFile\n+  #673 = Utf8               JsonGenerator.java\n+  #674 = Utf8               InnerClasses\n+  #675 = Class              #676          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #676 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #677 = Utf8               Feature\n+  #678 = Utf8               Inclusion\n+  #679 = Utf8               NumberType\n {\n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_WRITE_CAPABILITIES;\n     descriptor: Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n-    Signature: #169                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #506                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n     descriptor: Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n-    Signature: #169                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #506                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_BINARY_WRITE_CAPABILITIES;\n     descriptor: Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n-    Signature: #169                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #506                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   protected com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter;\n     descriptor: Lcom/fasterxml/jackson/core/PrettyPrinter;\n     flags: (0x0004) ACC_PROTECTED\n \n   protected com.fasterxml.jackson.core.JsonGenerator();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n@@ -752,30 +752,30 @@\n \n   public java.lang.Object currentValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getCurrentValue:()Ljava/lang/Object;\n+         1: invokevirtual #9                  // Method getCurrentValue:()Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 405: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n   public void assignCurrentValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #4                  // Method setCurrentValue:(Ljava/lang/Object;)V\n+         2: invokevirtual #15                 // Method setCurrentValue:(Ljava/lang/Object;)V\n          5: return\n       LineNumberTable:\n         line 420: 0\n         line 421: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -783,22 +783,22 @@\n \n   public java.lang.Object getCurrentValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+         1: invokevirtual #19                 // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n          4: astore_1\n          5: aload_1\n          6: ifnonnull     13\n          9: aconst_null\n         10: goto          17\n         13: aload_1\n-        14: invokevirtual #6                  // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n+        14: invokevirtual #23                 // Method com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n         17: areturn\n       LineNumberTable:\n         line 431: 0\n         line 432: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -812,21 +812,21 @@\n \n   public void setCurrentValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #5                  // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+         1: invokevirtual #19                 // Method getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n          4: astore_2\n          5: aload_2\n          6: ifnull        14\n          9: aload_2\n         10: aload_1\n-        11: invokevirtual #7                  // Method com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n+        11: invokevirtual #26                 // Method com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n         14: return\n       LineNumberTable:\n         line 443: 0\n         line 444: 5\n         line 445: 9\n         line 447: 14\n       LocalVariableTable:\n@@ -852,20 +852,20 @@\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=3, args_size=3\n          0: iload_2\n          1: ifeq          13\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #8                  // Method enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+         6: invokevirtual #27                 // Method enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n          9: pop\n         10: goto          19\n         13: aload_0\n         14: aload_1\n-        15: invokevirtual #9                  // Method disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+        15: invokevirtual #31                 // Method disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n         18: pop\n         19: aload_0\n         20: areturn\n       LineNumberTable:\n         line 485: 0\n         line 486: 19\n       LocalVariableTable:\n@@ -884,16 +884,16 @@\n   public boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature);\n     descriptor: (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #10                 // Method com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-         5: invokevirtual #11                 // Method isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+         2: invokevirtual #34                 // Method com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+         5: invokevirtual #40                 // Method isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n          8: ireturn\n       LineNumberTable:\n         line 510: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       9     1     f   Lcom/fasterxml/jackson/core/StreamWriteFeature;\n@@ -903,38 +903,38 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int);\n     descriptor: (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #221()\n+      0: #534()\n         java.lang.Deprecated\n \n   public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int);\n     descriptor: (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: invokevirtual #12                 // Method getFeatureMask:()I\n+         1: invokevirtual #44                 // Method getFeatureMask:()I\n          4: istore_3\n          5: iload_3\n          6: iload_2\n          7: iconst_m1\n          8: ixor\n          9: iand\n         10: iload_1\n         11: iload_2\n         12: iand\n         13: ior\n         14: istore        4\n         16: aload_0\n         17: iload         4\n-        19: invokevirtual #13                 // Method setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+        19: invokevirtual #48                 // Method setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n         22: areturn\n       LineNumberTable:\n         line 556: 0\n         line 557: 5\n         line 558: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -973,32 +973,32 @@\n             0       2     2  mask   I\n \n   public void setSchema(com.fasterxml.jackson.core.FormatSchema);\n     descriptor: (Lcom/fasterxml/jackson/core/FormatSchema;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n-         0: new           #14                 // class java/lang/UnsupportedOperationException\n+         0: new           #52                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #15                 // String Generator of type %s does not support schema of type \\'%s\\'\n+         4: ldc           #54                 // String Generator of type %s does not support schema of type \\'%s\\'\n          6: iconst_2\n-         7: anewarray     #16                 // class java/lang/Object\n+         7: anewarray     #4                  // class java/lang/Object\n         10: dup\n         11: iconst_0\n         12: aload_0\n-        13: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        16: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        13: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;\n         19: aastore\n         20: dup\n         21: iconst_1\n         22: aload_1\n-        23: invokeinterface #19,  1           // InterfaceMethod com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n+        23: invokeinterface #66,  1           // InterfaceMethod com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n         28: aastore\n-        29: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        32: invokespecial #21                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+        29: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        32: invokespecial #77                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n       LineNumberTable:\n         line 617: 0\n         line 619: 13\n         line 617: 29\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1021,15 +1021,15 @@\n   public com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter);\n     descriptor: (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #22                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+         2: putfield      #80                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 650: 0\n         line 651: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1038,15 +1038,15 @@\n \n   public com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter();\n     descriptor: ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+         1: getfield      #80                 // Field _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n          4: areturn\n       LineNumberTable:\n         line 661: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n@@ -1109,17 +1109,17 @@\n             0       2     1   esc   Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n \n   public com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString);\n     descriptor: (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: new           #14                 // class java/lang/UnsupportedOperationException\n+         0: new           #52                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: invokespecial #23                 // Method java/lang/UnsupportedOperationException.\"<init>\":()V\n+         4: invokespecial #84                 // Method java/lang/UnsupportedOperationException.\"<init>\":()V\n          7: athrow\n       LineNumberTable:\n         line 744: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       8     1   sep   Lcom/fasterxml/jackson/core/SerializableString;\n@@ -1217,61 +1217,61 @@\n             0       2     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n   public com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> getWriteCapabilities();\n     descriptor: ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+         0: getstatic     #85                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n          3: areturn\n       LineNumberTable:\n         line 889: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-    Signature: #268                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #578                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   public abstract void writeStartArray() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeStartArray(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #25                 // Method writeStartArray:()V\n+         1: invokevirtual #89                 // Method writeStartArray:()V\n          4: return\n       LineNumberTable:\n         line 935: 0\n         line 936: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       5     1  size   I\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #221()\n+      0: #534()\n         java.lang.Deprecated\n \n   public void writeStartArray(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #25                 // Method writeStartArray:()V\n+         1: invokevirtual #89                 // Method writeStartArray:()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #4                  // Method setCurrentValue:(Ljava/lang/Object;)V\n+         6: invokevirtual #15                 // Method setCurrentValue:(Ljava/lang/Object;)V\n          9: return\n       LineNumberTable:\n         line 952: 0\n         line 953: 4\n         line 954: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1283,18 +1283,18 @@\n   public void writeStartArray(java.lang.Object, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokevirtual #26                 // Method writeStartArray:(I)V\n+         2: invokevirtual #92                 // Method writeStartArray:(I)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #4                  // Method setCurrentValue:(Ljava/lang/Object;)V\n+         7: invokevirtual #15                 // Method setCurrentValue:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 975: 0\n         line 976: 5\n         line 977: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1318,18 +1318,18 @@\n \n   public void writeStartObject(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #27                 // Method writeStartObject:()V\n+         1: invokevirtual #95                 // Method writeStartObject:()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #4                  // Method setCurrentValue:(Ljava/lang/Object;)V\n+         6: invokevirtual #15                 // Method setCurrentValue:(Ljava/lang/Object;)V\n          9: return\n       LineNumberTable:\n         line 1026: 0\n         line 1027: 4\n         line 1028: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1341,15 +1341,15 @@\n   public void writeStartObject(java.lang.Object, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #28                 // Method writeStartObject:(Ljava/lang/Object;)V\n+         2: invokevirtual #98                 // Method writeStartObject:(Ljava/lang/Object;)V\n          5: return\n       LineNumberTable:\n         line 1057: 0\n         line 1058: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1379,16 +1379,16 @@\n   public void writeFieldId(long) throws java.io.IOException;\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokestatic  #29                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-         5: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokestatic  #100                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+         5: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 1125: 0\n         line 1126: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1399,47 +1399,47 @@\n   public void writeArray(int[], int, int) throws java.io.IOException;\n     descriptor: ([III)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #31                 // class java/lang/IllegalArgumentException\n+         4: new           #109                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #32                 // String null array\n-        10: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #111                // String null array\n+        10: invokespecial #113                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: aload_1\n         16: arraylength\n         17: iload_2\n         18: iload_3\n-        19: invokevirtual #34                 // Method _verifyOffsets:(III)V\n+        19: invokevirtual #114                // Method _verifyOffsets:(III)V\n         22: aload_0\n         23: aload_1\n         24: iload_3\n-        25: invokevirtual #35                 // Method writeStartArray:(Ljava/lang/Object;I)V\n+        25: invokevirtual #118                // Method writeStartArray:(Ljava/lang/Object;I)V\n         28: iload_2\n         29: istore        4\n         31: iload_2\n         32: iload_3\n         33: iadd\n         34: istore        5\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     57\n         43: aload_0\n         44: aload_1\n         45: iload         4\n         47: iaload\n-        48: invokevirtual #36                 // Method writeNumber:(I)V\n+        48: invokevirtual #121                // Method writeNumber:(I)V\n         51: iinc          4, 1\n         54: goto          36\n         57: aload_0\n-        58: invokevirtual #37                 // Method writeEndArray:()V\n+        58: invokevirtual #124                // Method writeEndArray:()V\n         61: return\n       LineNumberTable:\n         line 1150: 0\n         line 1151: 4\n         line 1153: 14\n         line 1154: 22\n         line 1155: 28\n@@ -1468,47 +1468,47 @@\n   public void writeArray(long[], int, int) throws java.io.IOException;\n     descriptor: ([JII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #31                 // class java/lang/IllegalArgumentException\n+         4: new           #109                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #32                 // String null array\n-        10: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #111                // String null array\n+        10: invokespecial #113                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: aload_1\n         16: arraylength\n         17: iload_2\n         18: iload_3\n-        19: invokevirtual #34                 // Method _verifyOffsets:(III)V\n+        19: invokevirtual #114                // Method _verifyOffsets:(III)V\n         22: aload_0\n         23: aload_1\n         24: iload_3\n-        25: invokevirtual #35                 // Method writeStartArray:(Ljava/lang/Object;I)V\n+        25: invokevirtual #118                // Method writeStartArray:(Ljava/lang/Object;I)V\n         28: iload_2\n         29: istore        4\n         31: iload_2\n         32: iload_3\n         33: iadd\n         34: istore        5\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     57\n         43: aload_0\n         44: aload_1\n         45: iload         4\n         47: laload\n-        48: invokevirtual #38                 // Method writeNumber:(J)V\n+        48: invokevirtual #127                // Method writeNumber:(J)V\n         51: iinc          4, 1\n         54: goto          36\n         57: aload_0\n-        58: invokevirtual #37                 // Method writeEndArray:()V\n+        58: invokevirtual #124                // Method writeEndArray:()V\n         61: return\n       LineNumberTable:\n         line 1177: 0\n         line 1178: 4\n         line 1180: 14\n         line 1181: 22\n         line 1182: 28\n@@ -1537,47 +1537,47 @@\n   public void writeArray(double[], int, int) throws java.io.IOException;\n     descriptor: ([DII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #31                 // class java/lang/IllegalArgumentException\n+         4: new           #109                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #32                 // String null array\n-        10: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #111                // String null array\n+        10: invokespecial #113                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: aload_1\n         16: arraylength\n         17: iload_2\n         18: iload_3\n-        19: invokevirtual #34                 // Method _verifyOffsets:(III)V\n+        19: invokevirtual #114                // Method _verifyOffsets:(III)V\n         22: aload_0\n         23: aload_1\n         24: iload_3\n-        25: invokevirtual #35                 // Method writeStartArray:(Ljava/lang/Object;I)V\n+        25: invokevirtual #118                // Method writeStartArray:(Ljava/lang/Object;I)V\n         28: iload_2\n         29: istore        4\n         31: iload_2\n         32: iload_3\n         33: iadd\n         34: istore        5\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     57\n         43: aload_0\n         44: aload_1\n         45: iload         4\n         47: daload\n-        48: invokevirtual #39                 // Method writeNumber:(D)V\n+        48: invokevirtual #130                // Method writeNumber:(D)V\n         51: iinc          4, 1\n         54: goto          36\n         57: aload_0\n-        58: invokevirtual #37                 // Method writeEndArray:()V\n+        58: invokevirtual #124                // Method writeEndArray:()V\n         61: return\n       LineNumberTable:\n         line 1204: 0\n         line 1205: 4\n         line 1207: 14\n         line 1208: 22\n         line 1209: 28\n@@ -1606,47 +1606,47 @@\n   public void writeArray(java.lang.String[], int, int) throws java.io.IOException;\n     descriptor: ([Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #31                 // class java/lang/IllegalArgumentException\n+         4: new           #109                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #32                 // String null array\n-        10: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #111                // String null array\n+        10: invokespecial #113                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: aload_1\n         16: arraylength\n         17: iload_2\n         18: iload_3\n-        19: invokevirtual #34                 // Method _verifyOffsets:(III)V\n+        19: invokevirtual #114                // Method _verifyOffsets:(III)V\n         22: aload_0\n         23: aload_1\n         24: iload_3\n-        25: invokevirtual #35                 // Method writeStartArray:(Ljava/lang/Object;I)V\n+        25: invokevirtual #118                // Method writeStartArray:(Ljava/lang/Object;I)V\n         28: iload_2\n         29: istore        4\n         31: iload_2\n         32: iload_3\n         33: iadd\n         34: istore        5\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     57\n         43: aload_0\n         44: aload_1\n         45: iload         4\n         47: aaload\n-        48: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V\n+        48: invokevirtual #133                // Method writeString:(Ljava/lang/String;)V\n         51: iinc          4, 1\n         54: goto          36\n         57: aload_0\n-        58: invokevirtual #37                 // Method writeEndArray:()V\n+        58: invokevirtual #124                // Method writeEndArray:()V\n         61: return\n       LineNumberTable:\n         line 1231: 0\n         line 1232: 4\n         line 1234: 14\n         line 1235: 22\n         line 1236: 28\n@@ -1680,15 +1680,15 @@\n \n   public void writeString(java.io.Reader, int) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #41                 // Method _reportUnsupportedOperation:()V\n+         1: invokevirtual #136                // Method _reportUnsupportedOperation:()V\n          4: return\n       LineNumberTable:\n         line 1287: 0\n         line 1288: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1748,16 +1748,16 @@\n   public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/SerializableString;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #42,  1           // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-         7: invokevirtual #43                 // Method writeRaw:(Ljava/lang/String;)V\n+         2: invokeinterface #139,  1          // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+         7: invokevirtual #144                // Method writeRaw:(Ljava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 1485: 0\n         line 1486: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1786,16 +1786,16 @@\n   public void writeRawValue(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/SerializableString;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #42,  1           // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-         7: invokevirtual #44                 // Method writeRawValue:(Ljava/lang/String;)V\n+         2: invokeinterface #139,  1          // InterfaceMethod com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+         7: invokevirtual #147                // Method writeRawValue:(Ljava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 1520: 0\n         line 1521: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1811,19 +1811,19 @@\n \n   public void writeBinary(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokestatic  #45                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: invokestatic  #150                // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #46                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+         7: invokevirtual #156                // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n         10: return\n       LineNumberTable:\n         line 1566: 0\n         line 1567: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1835,20 +1835,20 @@\n \n   public void writeBinary(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n-         1: invokestatic  #45                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: invokestatic  #150                // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n          4: aload_1\n          5: iconst_0\n          6: aload_1\n          7: arraylength\n-         8: invokevirtual #46                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+         8: invokevirtual #156                // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n         11: return\n       LineNumberTable:\n         line 1581: 0\n         line 1582: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1858,18 +1858,18 @@\n \n   public int writeBinary(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokestatic  #45                 // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+         1: invokestatic  #150                // Method com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n          4: aload_1\n          5: iload_2\n-         6: invokevirtual #47                 // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+         6: invokevirtual #160                // Method writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n          9: ireturn\n       LineNumberTable:\n         line 1604: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0      10     1  data   Ljava/io/InputStream;\n@@ -1886,15 +1886,15 @@\n   public void writeNumber(short) throws java.io.IOException;\n     descriptor: (S)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #36                 // Method writeNumber:(I)V\n+         2: invokevirtual #121                // Method writeNumber:(I)V\n          5: return\n       LineNumberTable:\n         line 1652: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       6     1     v   S\n@@ -1945,21 +1945,21 @@\n \n   public void writeNumber(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=4\n          0: aload_0\n-         1: new           #48                 // class java/lang/String\n+         1: new           #72                 // class java/lang/String\n          4: dup\n          5: aload_1\n          6: iload_2\n          7: iload_3\n-         8: invokespecial #49                 // Method java/lang/String.\"<init>\":([CII)V\n-        11: invokevirtual #50                 // Method writeNumber:(Ljava/lang/String;)V\n+         8: invokespecial #163                // Method java/lang/String.\"<init>\":([CII)V\n+        11: invokevirtual #166                // Method writeNumber:(Ljava/lang/String;)V\n         14: return\n       LineNumberTable:\n         line 1779: 0\n         line 1780: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -1985,38 +1985,38 @@\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     9\n          4: aload_0\n-         5: invokevirtual #51                 // Method writeNull:()V\n+         5: invokevirtual #168                // Method writeNull:()V\n          8: return\n          9: aload_1\n-        10: instanceof    #52                 // class \"[B\"\n+        10: instanceof    #171                // class \"[B\"\n         13: ifeq          25\n         16: aload_0\n         17: aload_1\n-        18: checkcast     #52                 // class \"[B\"\n-        21: invokevirtual #53                 // Method writeBinary:([B)V\n+        18: checkcast     #171                // class \"[B\"\n+        21: invokevirtual #173                // Method writeBinary:([B)V\n         24: return\n-        25: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+        25: new           #176                // class com/fasterxml/jackson/core/JsonGenerationException\n         28: dup\n-        29: new           #55                 // class java/lang/StringBuilder\n+        29: new           #178                // class java/lang/StringBuilder\n         32: dup\n-        33: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        36: ldc           #57                 // String No native support for writing embedded objects of type\n-        38: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+        36: ldc           #181                // String No native support for writing embedded objects of type\n+        38: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         41: aload_1\n-        42: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        45: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        42: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        45: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        48: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         54: aload_0\n-        55: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+        55: invokespecial #189                // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n         58: athrow\n       LineNumberTable:\n         line 1832: 0\n         line 1833: 4\n         line 1834: 8\n         line 1836: 9\n         line 1837: 16\n@@ -2034,19 +2034,19 @@\n       throws java.io.IOException\n \n   public void writeObjectId(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+         0: new           #176                // class com/fasterxml/jackson/core/JsonGenerationException\n          3: dup\n-         4: ldc           #61                 // String No native support for writing Object Ids\n+         4: ldc           #192                // String No native support for writing Object Ids\n          6: aload_0\n-         7: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+         7: invokespecial #189                // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n         10: athrow\n       LineNumberTable:\n         line 1870: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0      11     1    id   Ljava/lang/Object;\n@@ -2054,19 +2054,19 @@\n       throws java.io.IOException\n \n   public void writeObjectRef(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+         0: new           #176                // class com/fasterxml/jackson/core/JsonGenerationException\n          3: dup\n-         4: ldc           #61                 // String No native support for writing Object Ids\n+         4: ldc           #192                // String No native support for writing Object Ids\n          6: aload_0\n-         7: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+         7: invokespecial #189                // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n         10: athrow\n       LineNumberTable:\n         line 1890: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0      11     1 referenced   Ljava/lang/Object;\n@@ -2074,19 +2074,19 @@\n       throws java.io.IOException\n \n   public void writeTypeId(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+         0: new           #176                // class com/fasterxml/jackson/core/JsonGenerationException\n          3: dup\n-         4: ldc           #62                 // String No native support for writing Type Ids\n+         4: ldc           #194                // String No native support for writing Type Ids\n          6: aload_0\n-         7: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+         7: invokespecial #189                // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n         10: athrow\n       LineNumberTable:\n         line 1912: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0      11     1    id   Ljava/lang/Object;\n@@ -2095,104 +2095,104 @@\n \n   public com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_1\n-         1: getfield      #63                 // Field com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n+         1: getfield      #196                // Field com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n          4: astore_2\n          5: aload_1\n-         6: getfield      #64                 // Field com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+         6: getfield      #202                // Field com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n          9: astore_3\n         10: aload_0\n-        11: invokevirtual #65                 // Method canWriteTypeId:()Z\n+        11: invokevirtual #206                // Method canWriteTypeId:()Z\n         14: ifeq          30\n         17: aload_1\n         18: iconst_0\n-        19: putfield      #66                 // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+        19: putfield      #210                // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n         22: aload_0\n         23: aload_2\n-        24: invokevirtual #67                 // Method writeTypeId:(Ljava/lang/Object;)V\n+        24: invokevirtual #214                // Method writeTypeId:(Ljava/lang/Object;)V\n         27: goto          177\n         30: aload_2\n-        31: instanceof    #48                 // class java/lang/String\n+        31: instanceof    #72                 // class java/lang/String\n         34: ifeq          44\n         37: aload_2\n-        38: checkcast     #48                 // class java/lang/String\n+        38: checkcast     #72                 // class java/lang/String\n         41: goto          48\n         44: aload_2\n-        45: invokestatic  #68                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+        45: invokestatic  #217                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n         48: astore        4\n         50: aload_1\n         51: iconst_1\n-        52: putfield      #66                 // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+        52: putfield      #210                // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n         55: aload_1\n-        56: getfield      #69                 // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+        56: getfield      #221                // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n         59: astore        5\n         61: aload_3\n-        62: getstatic     #70                 // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+        62: getstatic     #225                // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n         65: if_acmpeq     86\n         68: aload         5\n-        70: invokevirtual #71                 // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n+        70: invokevirtual #230                // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n         73: ifeq          86\n         76: aload_1\n-        77: getstatic     #72                 // Field com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+        77: getstatic     #235                // Field com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n         80: dup\n         81: astore        5\n-        83: putfield      #69                 // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-        86: getstatic     #73                 // Field com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+        83: putfield      #221                // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+        86: getstatic     #238                // Field com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n         89: aload         5\n-        91: invokevirtual #74                 // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n+        91: invokevirtual #244                // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n         94: iaload\n         95: tableswitch   { // 1 to 5\n                        1: 128\n                        2: 131\n                        3: 134\n                        4: 154\n                        5: 167\n                  default: 167\n             }\n        128: goto          177\n        131: goto          177\n        134: aload_0\n        135: aload_1\n-       136: getfield      #75                 // Field com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n-       139: invokevirtual #28                 // Method writeStartObject:(Ljava/lang/Object;)V\n+       136: getfield      #247                // Field com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n+       139: invokevirtual #98                 // Method writeStartObject:(Ljava/lang/Object;)V\n        142: aload_0\n        143: aload_1\n-       144: getfield      #76                 // Field com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n+       144: getfield      #250                // Field com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n        147: aload         4\n-       149: invokevirtual #77                 // Method writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+       149: invokevirtual #254                // Method writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n        152: aload_1\n        153: areturn\n        154: aload_0\n-       155: invokevirtual #27                 // Method writeStartObject:()V\n+       155: invokevirtual #95                 // Method writeStartObject:()V\n        158: aload_0\n        159: aload         4\n-       161: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+       161: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n        164: goto          177\n        167: aload_0\n-       168: invokevirtual #25                 // Method writeStartArray:()V\n+       168: invokevirtual #89                 // Method writeStartArray:()V\n        171: aload_0\n        172: aload         4\n-       174: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V\n+       174: invokevirtual #133                // Method writeString:(Ljava/lang/String;)V\n        177: aload_3\n-       178: getstatic     #70                 // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+       178: getstatic     #225                // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n        181: if_acmpne     195\n        184: aload_0\n        185: aload_1\n-       186: getfield      #75                 // Field com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n-       189: invokevirtual #28                 // Method writeStartObject:(Ljava/lang/Object;)V\n+       186: getfield      #247                // Field com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n+       189: invokevirtual #98                 // Method writeStartObject:(Ljava/lang/Object;)V\n        192: goto          206\n        195: aload_3\n-       196: getstatic     #78                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+       196: getstatic     #258                // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n        199: if_acmpne     206\n        202: aload_0\n-       203: invokevirtual #25                 // Method writeStartArray:()V\n+       203: invokevirtual #89                 // Method writeStartArray:()V\n        206: aload_1\n        207: areturn\n       LineNumberTable:\n         line 1941: 0\n         line 1943: 5\n         line 1944: 10\n         line 1945: 17\n@@ -2251,67 +2251,67 @@\n \n   public com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n-         1: getfield      #64                 // Field com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+         1: getfield      #202                // Field com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n          4: astore_2\n          5: aload_2\n-         6: getstatic     #70                 // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+         6: getstatic     #225                // Field com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n          9: if_acmpne     19\n         12: aload_0\n-        13: invokevirtual #79                 // Method writeEndObject:()V\n+        13: invokevirtual #261                // Method writeEndObject:()V\n         16: goto          30\n         19: aload_2\n-        20: getstatic     #78                 // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+        20: getstatic     #258                // Field com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n         23: if_acmpne     30\n         26: aload_0\n-        27: invokevirtual #37                 // Method writeEndArray:()V\n+        27: invokevirtual #124                // Method writeEndArray:()V\n         30: aload_1\n-        31: getfield      #66                 // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+        31: getfield      #210                // Field com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n         34: ifeq          136\n-        37: getstatic     #73                 // Field com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+        37: getstatic     #238                // Field com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n         40: aload_1\n-        41: getfield      #69                 // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-        44: invokevirtual #74                 // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n+        41: getfield      #221                // Field com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+        44: invokevirtual #244                // Method com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n         47: iaload\n         48: tableswitch   { // 1 to 5\n                        1: 91\n                        2: 129\n                        3: 129\n                        4: 132\n                        5: 84\n                  default: 132\n             }\n         84: aload_0\n-        85: invokevirtual #37                 // Method writeEndArray:()V\n+        85: invokevirtual #124                // Method writeEndArray:()V\n         88: goto          136\n         91: aload_1\n-        92: getfield      #63                 // Field com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n+        92: getfield      #196                // Field com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n         95: astore_3\n         96: aload_3\n-        97: instanceof    #48                 // class java/lang/String\n+        97: instanceof    #72                 // class java/lang/String\n        100: ifeq          110\n        103: aload_3\n-       104: checkcast     #48                 // class java/lang/String\n+       104: checkcast     #72                 // class java/lang/String\n        107: goto          114\n        110: aload_3\n-       111: invokestatic  #68                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+       111: invokestatic  #217                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n        114: astore        4\n        116: aload_0\n        117: aload_1\n-       118: getfield      #76                 // Field com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n+       118: getfield      #250                // Field com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n        121: aload         4\n-       123: invokevirtual #77                 // Method writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+       123: invokevirtual #254                // Method writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n        126: goto          136\n        129: goto          136\n        132: aload_0\n-       133: invokevirtual #79                 // Method writeEndObject:()V\n+       133: invokevirtual #261                // Method writeEndObject:()V\n        136: aload_1\n        137: areturn\n       LineNumberTable:\n         line 2017: 0\n         line 2019: 5\n         line 2020: 12\n         line 2021: 19\n@@ -2356,15 +2356,15 @@\n   public void writePOJO(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #80                 // Method writeObject:(Ljava/lang/Object;)V\n+         2: invokevirtual #264                // Method writeObject:(Ljava/lang/Object;)V\n          5: return\n       LineNumberTable:\n         line 2076: 0\n         line 2077: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -2387,18 +2387,18 @@\n   public void writeBinaryField(java.lang.String, byte[]) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;[B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #53                 // Method writeBinary:([B)V\n+         7: invokevirtual #173                // Method writeBinary:([B)V\n         10: return\n       LineNumberTable:\n         line 2131: 0\n         line 2132: 5\n         line 2133: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2411,18 +2411,18 @@\n   public void writeBooleanField(java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #81                 // Method writeBoolean:(Z)V\n+         7: invokevirtual #267                // Method writeBoolean:(Z)V\n         10: return\n       LineNumberTable:\n         line 2150: 0\n         line 2151: 5\n         line 2152: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2435,17 +2435,17 @@\n   public void writeNullField(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n-         6: invokevirtual #51                 // Method writeNull:()V\n+         6: invokevirtual #168                // Method writeNull:()V\n          9: return\n       LineNumberTable:\n         line 2168: 0\n         line 2169: 5\n         line 2170: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2457,18 +2457,18 @@\n   public void writeStringField(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V\n+         7: invokevirtual #133                // Method writeString:(Ljava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 2187: 0\n         line 2188: 5\n         line 2189: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2481,18 +2481,18 @@\n   public void writeNumberField(java.lang.String, short) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;S)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #82                 // Method writeNumber:(S)V\n+         7: invokevirtual #271                // Method writeNumber:(S)V\n         10: return\n       LineNumberTable:\n         line 2208: 0\n         line 2209: 5\n         line 2210: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2505,18 +2505,18 @@\n   public void writeNumberField(java.lang.String, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #36                 // Method writeNumber:(I)V\n+         7: invokevirtual #121                // Method writeNumber:(I)V\n         10: return\n       LineNumberTable:\n         line 2227: 0\n         line 2228: 5\n         line 2229: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2529,18 +2529,18 @@\n   public void writeNumberField(java.lang.String, long) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: lload_2\n-         7: invokevirtual #38                 // Method writeNumber:(J)V\n+         7: invokevirtual #127                // Method writeNumber:(J)V\n         10: return\n       LineNumberTable:\n         line 2246: 0\n         line 2247: 5\n         line 2248: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2553,18 +2553,18 @@\n   public void writeNumberField(java.lang.String, java.math.BigInteger) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/math/BigInteger;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #83                 // Method writeNumber:(Ljava/math/BigInteger;)V\n+         7: invokevirtual #274                // Method writeNumber:(Ljava/math/BigInteger;)V\n         10: return\n       LineNumberTable:\n         line 2267: 0\n         line 2268: 5\n         line 2269: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2577,18 +2577,18 @@\n   public void writeNumberField(java.lang.String, float) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;F)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: fload_2\n-         7: invokevirtual #84                 // Method writeNumber:(F)V\n+         7: invokevirtual #277                // Method writeNumber:(F)V\n         10: return\n       LineNumberTable:\n         line 2286: 0\n         line 2287: 5\n         line 2288: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2601,18 +2601,18 @@\n   public void writeNumberField(java.lang.String, double) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;D)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: dload_2\n-         7: invokevirtual #39                 // Method writeNumber:(D)V\n+         7: invokevirtual #130                // Method writeNumber:(D)V\n         10: return\n       LineNumberTable:\n         line 2305: 0\n         line 2306: 5\n         line 2307: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2625,18 +2625,18 @@\n   public void writeNumberField(java.lang.String, java.math.BigDecimal) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/math/BigDecimal;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #85                 // Method writeNumber:(Ljava/math/BigDecimal;)V\n+         7: invokevirtual #280                // Method writeNumber:(Ljava/math/BigDecimal;)V\n         10: return\n       LineNumberTable:\n         line 2325: 0\n         line 2326: 5\n         line 2327: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2649,17 +2649,17 @@\n   public void writeArrayFieldStart(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n-         6: invokevirtual #25                 // Method writeStartArray:()V\n+         6: invokevirtual #89                 // Method writeStartArray:()V\n          9: return\n       LineNumberTable:\n         line 2348: 0\n         line 2349: 5\n         line 2350: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2671,17 +2671,17 @@\n   public void writeObjectFieldStart(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n-         6: invokevirtual #27                 // Method writeStartObject:()V\n+         6: invokevirtual #95                 // Method writeStartObject:()V\n          9: return\n       LineNumberTable:\n         line 2371: 0\n         line 2372: 5\n         line 2373: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2694,15 +2694,15 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #86                 // Method writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+         3: invokevirtual #283                // Method writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n          6: return\n       LineNumberTable:\n         line 2394: 0\n         line 2395: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n@@ -2714,18 +2714,18 @@\n   public void writeObjectField(java.lang.String, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+         2: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #80                 // Method writeObject:(Ljava/lang/Object;)V\n+         7: invokevirtual #264                // Method writeObject:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 2408: 0\n         line 2409: 5\n         line 2410: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2752,379 +2752,379 @@\n \n   public void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n-         1: invokevirtual #87                 // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+         1: invokevirtual #287                // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n          4: astore_2\n          5: aload_2\n          6: ifnonnull     13\n          9: iconst_m1\n         10: goto          17\n         13: aload_2\n-        14: invokevirtual #88                 // Method com/fasterxml/jackson/core/JsonToken.id:()I\n+        14: invokevirtual #293                // Method com/fasterxml/jackson/core/JsonToken.id:()I\n         17: istore_3\n         18: iload_3\n         19: tableswitch   { // -1 to 12\n                       -1: 88\n-                       0: 194\n-                       1: 97\n-                       2: 104\n-                       3: 111\n-                       4: 118\n-                       5: 125\n-                       6: 136\n-                       7: 144\n-                       8: 152\n-                       9: 160\n-                      10: 168\n-                      11: 176\n-                      12: 183\n-                 default: 194\n+                       0: 195\n+                       1: 98\n+                       2: 105\n+                       3: 112\n+                       4: 119\n+                       5: 126\n+                       6: 137\n+                       7: 145\n+                       8: 153\n+                       9: 161\n+                      10: 169\n+                      11: 177\n+                      12: 184\n+                 default: 195\n             }\n         88: aload_0\n-        89: ldc           #89                 // String No current event to copy\n-        91: invokevirtual #90                 // Method _reportError:(Ljava/lang/String;)V\n-        94: goto          221\n-        97: aload_0\n-        98: invokevirtual #27                 // Method writeStartObject:()V\n-       101: goto          221\n-       104: aload_0\n-       105: invokevirtual #79                 // Method writeEndObject:()V\n-       108: goto          221\n-       111: aload_0\n-       112: invokevirtual #25                 // Method writeStartArray:()V\n-       115: goto          221\n-       118: aload_0\n-       119: invokevirtual #37                 // Method writeEndArray:()V\n-       122: goto          221\n-       125: aload_0\n-       126: aload_1\n-       127: invokevirtual #91                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-       130: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n-       133: goto          221\n-       136: aload_0\n-       137: aload_1\n-       138: invokevirtual #92                 // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       141: goto          221\n-       144: aload_0\n-       145: aload_1\n-       146: invokevirtual #93                 // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       149: goto          221\n-       152: aload_0\n-       153: aload_1\n-       154: invokevirtual #94                 // Method _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       157: goto          221\n-       160: aload_0\n-       161: iconst_1\n-       162: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       165: goto          221\n-       168: aload_0\n-       169: iconst_0\n-       170: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       173: goto          221\n-       176: aload_0\n-       177: invokevirtual #51                 // Method writeNull:()V\n-       180: goto          221\n-       183: aload_0\n-       184: aload_1\n-       185: invokevirtual #95                 // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-       188: invokevirtual #80                 // Method writeObject:(Ljava/lang/Object;)V\n-       191: goto          221\n-       194: new           #96                 // class java/lang/IllegalStateException\n-       197: dup\n-       198: new           #55                 // class java/lang/StringBuilder\n-       201: dup\n-       202: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       205: ldc           #97                 // String Internal error: unknown current token,\n-       207: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       210: aload_2\n-       211: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       214: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       217: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       220: athrow\n-       221: return\n+        89: ldc_w         #295                // String No current event to copy\n+        92: invokevirtual #297                // Method _reportError:(Ljava/lang/String;)V\n+        95: goto          223\n+        98: aload_0\n+        99: invokevirtual #95                 // Method writeStartObject:()V\n+       102: goto          223\n+       105: aload_0\n+       106: invokevirtual #261                // Method writeEndObject:()V\n+       109: goto          223\n+       112: aload_0\n+       113: invokevirtual #89                 // Method writeStartArray:()V\n+       116: goto          223\n+       119: aload_0\n+       120: invokevirtual #124                // Method writeEndArray:()V\n+       123: goto          223\n+       126: aload_0\n+       127: aload_1\n+       128: invokevirtual #300                // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+       131: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n+       134: goto          223\n+       137: aload_0\n+       138: aload_1\n+       139: invokevirtual #303                // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       142: goto          223\n+       145: aload_0\n+       146: aload_1\n+       147: invokevirtual #307                // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       150: goto          223\n+       153: aload_0\n+       154: aload_1\n+       155: invokevirtual #310                // Method _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       158: goto          223\n+       161: aload_0\n+       162: iconst_1\n+       163: invokevirtual #267                // Method writeBoolean:(Z)V\n+       166: goto          223\n+       169: aload_0\n+       170: iconst_0\n+       171: invokevirtual #267                // Method writeBoolean:(Z)V\n+       174: goto          223\n+       177: aload_0\n+       178: invokevirtual #168                // Method writeNull:()V\n+       181: goto          223\n+       184: aload_0\n+       185: aload_1\n+       186: invokevirtual #313                // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+       189: invokevirtual #264                // Method writeObject:(Ljava/lang/Object;)V\n+       192: goto          223\n+       195: new           #316                // class java/lang/IllegalStateException\n+       198: dup\n+       199: new           #178                // class java/lang/StringBuilder\n+       202: dup\n+       203: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+       206: ldc_w         #318                // String Internal error: unknown current token,\n+       209: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       212: aload_2\n+       213: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       216: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       219: invokespecial #323                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       222: athrow\n+       223: return\n       LineNumberTable:\n         line 2453: 0\n         line 2454: 5\n         line 2455: 18\n         line 2457: 88\n-        line 2458: 94\n-        line 2460: 97\n-        line 2461: 101\n-        line 2463: 104\n-        line 2464: 108\n-        line 2466: 111\n-        line 2467: 115\n-        line 2469: 118\n-        line 2470: 122\n-        line 2472: 125\n-        line 2473: 133\n-        line 2475: 136\n-        line 2476: 141\n-        line 2478: 144\n-        line 2479: 149\n-        line 2482: 152\n-        line 2483: 157\n-        line 2485: 160\n-        line 2486: 165\n-        line 2488: 168\n-        line 2489: 173\n-        line 2491: 176\n-        line 2492: 180\n-        line 2494: 183\n-        line 2495: 191\n-        line 2497: 194\n-        line 2499: 221\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0     222     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     222     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n-            5     217     2     t   Lcom/fasterxml/jackson/core/JsonToken;\n-           18     204     3 token   I\n+        line 2458: 95\n+        line 2460: 98\n+        line 2461: 102\n+        line 2463: 105\n+        line 2464: 109\n+        line 2466: 112\n+        line 2467: 116\n+        line 2469: 119\n+        line 2470: 123\n+        line 2472: 126\n+        line 2473: 134\n+        line 2475: 137\n+        line 2476: 142\n+        line 2478: 145\n+        line 2479: 150\n+        line 2482: 153\n+        line 2483: 158\n+        line 2485: 161\n+        line 2486: 166\n+        line 2488: 169\n+        line 2489: 174\n+        line 2491: 177\n+        line 2492: 181\n+        line 2494: 184\n+        line 2495: 192\n+        line 2497: 195\n+        line 2499: 223\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     224     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     224     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n+            5     219     2     t   Lcom/fasterxml/jackson/core/JsonToken;\n+           18     206     3 token   I\n       StackMapTable: number_of_entries = 17\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class com/fasterxml/jackson/core/JsonToken ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 70\n           locals = [ int ]\n-        frame_type = 8 /* same */\n+        frame_type = 9 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 6 /* same */\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 27 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void copyCurrentEventExact(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n-         1: invokevirtual #87                 // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+         1: invokevirtual #287                // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n          4: astore_2\n          5: aload_2\n          6: ifnonnull     13\n          9: iconst_m1\n         10: goto          17\n         13: aload_2\n-        14: invokevirtual #88                 // Method com/fasterxml/jackson/core/JsonToken.id:()I\n+        14: invokevirtual #293                // Method com/fasterxml/jackson/core/JsonToken.id:()I\n         17: istore_3\n         18: iload_3\n         19: tableswitch   { // -1 to 12\n                       -1: 88\n-                       0: 194\n-                       1: 97\n-                       2: 104\n-                       3: 111\n-                       4: 118\n-                       5: 125\n-                       6: 136\n-                       7: 144\n-                       8: 152\n-                       9: 160\n-                      10: 168\n-                      11: 176\n-                      12: 183\n-                 default: 194\n+                       0: 195\n+                       1: 98\n+                       2: 105\n+                       3: 112\n+                       4: 119\n+                       5: 126\n+                       6: 137\n+                       7: 145\n+                       8: 153\n+                       9: 161\n+                      10: 169\n+                      11: 177\n+                      12: 184\n+                 default: 195\n             }\n         88: aload_0\n-        89: ldc           #89                 // String No current event to copy\n-        91: invokevirtual #90                 // Method _reportError:(Ljava/lang/String;)V\n-        94: goto          221\n-        97: aload_0\n-        98: invokevirtual #27                 // Method writeStartObject:()V\n-       101: goto          221\n-       104: aload_0\n-       105: invokevirtual #79                 // Method writeEndObject:()V\n-       108: goto          221\n-       111: aload_0\n-       112: invokevirtual #25                 // Method writeStartArray:()V\n-       115: goto          221\n-       118: aload_0\n-       119: invokevirtual #37                 // Method writeEndArray:()V\n-       122: goto          221\n-       125: aload_0\n-       126: aload_1\n-       127: invokevirtual #91                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-       130: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n-       133: goto          221\n-       136: aload_0\n-       137: aload_1\n-       138: invokevirtual #92                 // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       141: goto          221\n-       144: aload_0\n-       145: aload_1\n-       146: invokevirtual #93                 // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       149: goto          221\n-       152: aload_0\n-       153: aload_1\n-       154: invokevirtual #100                // Method _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-       157: goto          221\n-       160: aload_0\n-       161: iconst_1\n-       162: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       165: goto          221\n-       168: aload_0\n-       169: iconst_0\n-       170: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       173: goto          221\n-       176: aload_0\n-       177: invokevirtual #51                 // Method writeNull:()V\n-       180: goto          221\n-       183: aload_0\n-       184: aload_1\n-       185: invokevirtual #95                 // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-       188: invokevirtual #80                 // Method writeObject:(Ljava/lang/Object;)V\n-       191: goto          221\n-       194: new           #96                 // class java/lang/IllegalStateException\n-       197: dup\n-       198: new           #55                 // class java/lang/StringBuilder\n-       201: dup\n-       202: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       205: ldc           #97                 // String Internal error: unknown current token,\n-       207: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       210: aload_2\n-       211: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       214: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       217: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       220: athrow\n-       221: return\n+        89: ldc_w         #295                // String No current event to copy\n+        92: invokevirtual #297                // Method _reportError:(Ljava/lang/String;)V\n+        95: goto          223\n+        98: aload_0\n+        99: invokevirtual #95                 // Method writeStartObject:()V\n+       102: goto          223\n+       105: aload_0\n+       106: invokevirtual #261                // Method writeEndObject:()V\n+       109: goto          223\n+       112: aload_0\n+       113: invokevirtual #89                 // Method writeStartArray:()V\n+       116: goto          223\n+       119: aload_0\n+       120: invokevirtual #124                // Method writeEndArray:()V\n+       123: goto          223\n+       126: aload_0\n+       127: aload_1\n+       128: invokevirtual #300                // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+       131: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n+       134: goto          223\n+       137: aload_0\n+       138: aload_1\n+       139: invokevirtual #303                // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       142: goto          223\n+       145: aload_0\n+       146: aload_1\n+       147: invokevirtual #307                // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       150: goto          223\n+       153: aload_0\n+       154: aload_1\n+       155: invokevirtual #324                // Method _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       158: goto          223\n+       161: aload_0\n+       162: iconst_1\n+       163: invokevirtual #267                // Method writeBoolean:(Z)V\n+       166: goto          223\n+       169: aload_0\n+       170: iconst_0\n+       171: invokevirtual #267                // Method writeBoolean:(Z)V\n+       174: goto          223\n+       177: aload_0\n+       178: invokevirtual #168                // Method writeNull:()V\n+       181: goto          223\n+       184: aload_0\n+       185: aload_1\n+       186: invokevirtual #313                // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+       189: invokevirtual #264                // Method writeObject:(Ljava/lang/Object;)V\n+       192: goto          223\n+       195: new           #316                // class java/lang/IllegalStateException\n+       198: dup\n+       199: new           #178                // class java/lang/StringBuilder\n+       202: dup\n+       203: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+       206: ldc_w         #318                // String Internal error: unknown current token,\n+       209: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       212: aload_2\n+       213: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       216: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       219: invokespecial #323                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       222: athrow\n+       223: return\n       LineNumberTable:\n         line 2517: 0\n         line 2518: 5\n         line 2519: 18\n         line 2521: 88\n-        line 2522: 94\n-        line 2524: 97\n-        line 2525: 101\n-        line 2527: 104\n-        line 2528: 108\n-        line 2530: 111\n-        line 2531: 115\n-        line 2533: 118\n-        line 2534: 122\n-        line 2536: 125\n-        line 2537: 133\n-        line 2539: 136\n-        line 2540: 141\n-        line 2542: 144\n-        line 2543: 149\n-        line 2546: 152\n-        line 2547: 157\n-        line 2549: 160\n-        line 2550: 165\n-        line 2552: 168\n-        line 2553: 173\n-        line 2555: 176\n-        line 2556: 180\n-        line 2558: 183\n-        line 2559: 191\n-        line 2561: 194\n-        line 2563: 221\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0     222     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     222     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n-            5     217     2     t   Lcom/fasterxml/jackson/core/JsonToken;\n-           18     204     3 token   I\n+        line 2522: 95\n+        line 2524: 98\n+        line 2525: 102\n+        line 2527: 105\n+        line 2528: 109\n+        line 2530: 112\n+        line 2531: 116\n+        line 2533: 119\n+        line 2534: 123\n+        line 2536: 126\n+        line 2537: 134\n+        line 2539: 137\n+        line 2540: 142\n+        line 2542: 145\n+        line 2543: 150\n+        line 2546: 153\n+        line 2547: 158\n+        line 2549: 161\n+        line 2550: 166\n+        line 2552: 169\n+        line 2553: 174\n+        line 2555: 177\n+        line 2556: 181\n+        line 2558: 184\n+        line 2559: 192\n+        line 2561: 195\n+        line 2563: 223\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     224     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     224     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n+            5     219     2     t   Lcom/fasterxml/jackson/core/JsonToken;\n+           18     206     3 token   I\n       StackMapTable: number_of_entries = 17\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class com/fasterxml/jackson/core/JsonToken ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 70\n           locals = [ int ]\n-        frame_type = 8 /* same */\n+        frame_type = 9 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 6 /* same */\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 6 /* same */\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 27 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_1\n-         1: invokevirtual #87                 // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+         1: invokevirtual #287                // Method com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n          4: astore_2\n          5: aload_2\n          6: ifnonnull     13\n          9: iconst_m1\n         10: goto          17\n         13: aload_2\n-        14: invokevirtual #88                 // Method com/fasterxml/jackson/core/JsonToken.id:()I\n+        14: invokevirtual #293                // Method com/fasterxml/jackson/core/JsonToken.id:()I\n         17: istore_3\n         18: iload_3\n         19: iconst_5\n         20: if_icmpne     49\n         23: aload_0\n         24: aload_1\n-        25: invokevirtual #91                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-        28: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+        25: invokevirtual #300                // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+        28: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n         31: aload_1\n-        32: invokevirtual #101                // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+        32: invokevirtual #327                // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n         35: astore_2\n         36: aload_2\n         37: ifnonnull     44\n         40: iconst_m1\n         41: goto          48\n         44: aload_2\n-        45: invokevirtual #88                 // Method com/fasterxml/jackson/core/JsonToken.id:()I\n+        45: invokevirtual #293                // Method com/fasterxml/jackson/core/JsonToken.id:()I\n         48: istore_3\n         49: iload_3\n         50: lookupswitch  { // 2\n                        1: 76\n                        3: 86\n                  default: 96\n             }\n         76: aload_0\n-        77: invokevirtual #27                 // Method writeStartObject:()V\n+        77: invokevirtual #95                 // Method writeStartObject:()V\n         80: aload_0\n         81: aload_1\n-        82: invokevirtual #102                // Method _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+        82: invokevirtual #330                // Method _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n         85: return\n         86: aload_0\n-        87: invokevirtual #25                 // Method writeStartArray:()V\n+        87: invokevirtual #89                 // Method writeStartArray:()V\n         90: aload_0\n         91: aload_1\n-        92: invokevirtual #102                // Method _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+        92: invokevirtual #330                // Method _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n         95: return\n         96: aload_0\n         97: aload_1\n-        98: invokevirtual #103                // Method copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+        98: invokevirtual #333                // Method copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n        101: return\n       LineNumberTable:\n         line 2607: 0\n         line 2609: 5\n         line 2610: 18\n         line 2611: 23\n         line 2612: 31\n@@ -3166,20 +3166,20 @@\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=2\n          0: iconst_1\n          1: istore_2\n          2: aload_1\n-         3: invokevirtual #101                // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+         3: invokevirtual #327                // Method com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n          6: dup\n          7: astore_3\n-         8: ifnull        216\n+         8: ifnull        217\n         11: aload_3\n-        12: invokevirtual #88                 // Method com/fasterxml/jackson/core/JsonToken.id:()I\n+        12: invokevirtual #293                // Method com/fasterxml/jackson/core/JsonToken.id:()I\n         15: tableswitch   { // 1 to 12\n                        1: 97\n                        2: 119\n                        3: 87\n                        4: 107\n                        5: 76\n                        6: 131\n@@ -3189,78 +3189,78 @@\n                       10: 163\n                       11: 171\n                       12: 178\n                  default: 189\n             }\n         76: aload_0\n         77: aload_1\n-        78: invokevirtual #91                 // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-        81: invokevirtual #30                 // Method writeFieldName:(Ljava/lang/String;)V\n+        78: invokevirtual #300                // Method com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+        81: invokevirtual #106                // Method writeFieldName:(Ljava/lang/String;)V\n         84: goto          2\n         87: aload_0\n-        88: invokevirtual #25                 // Method writeStartArray:()V\n+        88: invokevirtual #89                 // Method writeStartArray:()V\n         91: iinc          2, 1\n         94: goto          2\n         97: aload_0\n-        98: invokevirtual #27                 // Method writeStartObject:()V\n+        98: invokevirtual #95                 // Method writeStartObject:()V\n        101: iinc          2, 1\n        104: goto          2\n        107: aload_0\n-       108: invokevirtual #37                 // Method writeEndArray:()V\n+       108: invokevirtual #124                // Method writeEndArray:()V\n        111: iinc          2, -1\n        114: iload_2\n        115: ifne          2\n        118: return\n        119: aload_0\n-       120: invokevirtual #79                 // Method writeEndObject:()V\n+       120: invokevirtual #261                // Method writeEndObject:()V\n        123: iinc          2, -1\n        126: iload_2\n        127: ifne          2\n        130: return\n        131: aload_0\n        132: aload_1\n-       133: invokevirtual #92                 // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       133: invokevirtual #303                // Method _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n        136: goto          2\n        139: aload_0\n        140: aload_1\n-       141: invokevirtual #93                 // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       141: invokevirtual #307                // Method _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n        144: goto          2\n        147: aload_0\n        148: aload_1\n-       149: invokevirtual #94                 // Method _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+       149: invokevirtual #310                // Method _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n        152: goto          2\n        155: aload_0\n        156: iconst_1\n-       157: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       157: invokevirtual #267                // Method writeBoolean:(Z)V\n        160: goto          2\n        163: aload_0\n        164: iconst_0\n-       165: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       165: invokevirtual #267                // Method writeBoolean:(Z)V\n        168: goto          2\n        171: aload_0\n-       172: invokevirtual #51                 // Method writeNull:()V\n+       172: invokevirtual #168                // Method writeNull:()V\n        175: goto          2\n        178: aload_0\n        179: aload_1\n-       180: invokevirtual #95                 // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-       183: invokevirtual #80                 // Method writeObject:(Ljava/lang/Object;)V\n+       180: invokevirtual #313                // Method com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+       183: invokevirtual #264                // Method writeObject:(Ljava/lang/Object;)V\n        186: goto          2\n-       189: new           #96                 // class java/lang/IllegalStateException\n+       189: new           #316                // class java/lang/IllegalStateException\n        192: dup\n-       193: new           #55                 // class java/lang/StringBuilder\n+       193: new           #178                // class java/lang/StringBuilder\n        196: dup\n-       197: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       200: ldc           #97                 // String Internal error: unknown current token,\n-       202: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       205: aload_3\n-       206: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       209: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       212: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       215: athrow\n-       216: return\n+       197: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+       200: ldc_w         #318                // String Internal error: unknown current token,\n+       203: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       206: aload_3\n+       207: invokevirtual #320                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       210: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       213: invokespecial #323                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       216: athrow\n+       217: return\n       LineNumberTable:\n         line 2634: 0\n         line 2638: 2\n         line 2639: 11\n         line 2641: 76\n         line 2642: 84\n         line 2645: 87\n@@ -3286,21 +3286,21 @@\n         line 2680: 163\n         line 2681: 168\n         line 2683: 171\n         line 2684: 175\n         line 2686: 178\n         line 2687: 186\n         line 2689: 189\n-        line 2692: 216\n+        line 2692: 217\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     217     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     217     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n-            2     215     2 depth   I\n-            8     209     3     t   Lcom/fasterxml/jackson/core/JsonToken;\n+            0     218     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     218     1     p   Lcom/fasterxml/jackson/core/JsonParser;\n+            2     216     2 depth   I\n+            8     210     3     t   Lcom/fasterxml/jackson/core/JsonToken;\n       StackMapTable: number_of_entries = 15\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 73\n           locals = [ class com/fasterxml/jackson/core/JsonToken ]\n@@ -3312,46 +3312,46 @@\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 6 /* same */\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 27 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   protected void _copyCurrentFloatValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #104                // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+         1: invokevirtual #336                // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n          4: astore_2\n          5: aload_2\n-         6: getstatic     #105                // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+         6: getstatic     #340                // Field com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n          9: if_acmpne     23\n         12: aload_0\n         13: aload_1\n-        14: invokevirtual #106                // Method com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n-        17: invokevirtual #85                 // Method writeNumber:(Ljava/math/BigDecimal;)V\n+        14: invokevirtual #346                // Method com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n+        17: invokevirtual #280                // Method writeNumber:(Ljava/math/BigDecimal;)V\n         20: goto          49\n         23: aload_2\n-        24: getstatic     #107                // Field com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+        24: getstatic     #350                // Field com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n         27: if_acmpne     41\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #108                // Method com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n-        35: invokevirtual #84                 // Method writeNumber:(F)V\n+        32: invokevirtual #353                // Method com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n+        35: invokevirtual #277                // Method writeNumber:(F)V\n         38: goto          49\n         41: aload_0\n         42: aload_1\n-        43: invokevirtual #109                // Method com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n-        46: invokevirtual #39                 // Method writeNumber:(D)V\n+        43: invokevirtual #357                // Method com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n+        46: invokevirtual #130                // Method writeNumber:(D)V\n         49: return\n       LineNumberTable:\n         line 2710: 0\n         line 2711: 5\n         line 2712: 12\n         line 2713: 23\n         line 2714: 30\n@@ -3373,36 +3373,36 @@\n \n   protected void _copyCurrentFloatValueExact(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #110                // Method com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n+         1: invokevirtual #361                // Method com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n          4: astore_2\n          5: aload_2\n-         6: instanceof    #111                // class java/math/BigDecimal\n+         6: instanceof    #365                // class java/math/BigDecimal\n          9: ifeq          23\n         12: aload_0\n         13: aload_2\n-        14: checkcast     #111                // class java/math/BigDecimal\n-        17: invokevirtual #85                 // Method writeNumber:(Ljava/math/BigDecimal;)V\n+        14: checkcast     #365                // class java/math/BigDecimal\n+        17: invokevirtual #280                // Method writeNumber:(Ljava/math/BigDecimal;)V\n         20: goto          49\n         23: aload_2\n-        24: instanceof    #112                // class java/lang/Double\n+        24: instanceof    #367                // class java/lang/Double\n         27: ifeq          41\n         30: aload_0\n         31: aload_2\n-        32: invokevirtual #113                // Method java/lang/Number.doubleValue:()D\n-        35: invokevirtual #39                 // Method writeNumber:(D)V\n+        32: invokevirtual #369                // Method java/lang/Number.doubleValue:()D\n+        35: invokevirtual #130                // Method writeNumber:(D)V\n         38: goto          49\n         41: aload_0\n         42: aload_2\n-        43: invokevirtual #114                // Method java/lang/Number.floatValue:()F\n-        46: invokevirtual #84                 // Method writeNumber:(F)V\n+        43: invokevirtual #374                // Method java/lang/Number.floatValue:()F\n+        46: invokevirtual #277                // Method writeNumber:(F)V\n         49: return\n       LineNumberTable:\n         line 2736: 0\n         line 2737: 5\n         line 2738: 12\n         line 2739: 23\n         line 2740: 30\n@@ -3424,36 +3424,36 @@\n \n   protected void _copyCurrentIntValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #104                // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+         1: invokevirtual #336                // Method com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n          4: astore_2\n          5: aload_2\n-         6: getstatic     #115                // Field com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+         6: getstatic     #377                // Field com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n          9: if_acmpne     23\n         12: aload_0\n         13: aload_1\n-        14: invokevirtual #116                // Method com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n-        17: invokevirtual #36                 // Method writeNumber:(I)V\n+        14: invokevirtual #380                // Method com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n+        17: invokevirtual #121                // Method writeNumber:(I)V\n         20: goto          49\n         23: aload_2\n-        24: getstatic     #117                // Field com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+        24: getstatic     #383                // Field com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n         27: if_acmpne     41\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #118                // Method com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n-        35: invokevirtual #38                 // Method writeNumber:(J)V\n+        32: invokevirtual #386                // Method com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n+        35: invokevirtual #127                // Method writeNumber:(J)V\n         38: goto          49\n         41: aload_0\n         42: aload_1\n-        43: invokevirtual #119                // Method com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n-        46: invokevirtual #83                 // Method writeNumber:(Ljava/math/BigInteger;)V\n+        43: invokevirtual #390                // Method com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n+        46: invokevirtual #274                // Method writeNumber:(Ljava/math/BigInteger;)V\n         49: return\n       LineNumberTable:\n         line 2756: 0\n         line 2757: 5\n         line 2758: 12\n         line 2759: 23\n         line 2760: 30\n@@ -3475,29 +3475,29 @@\n \n   protected void _copyCurrentStringValue(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException;\n     descriptor: (Lcom/fasterxml/jackson/core/JsonParser;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #120                // Method com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n+         1: invokevirtual #394                // Method com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n          4: ifeq          26\n          7: aload_0\n          8: aload_1\n-         9: invokevirtual #121                // Method com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n+         9: invokevirtual #397                // Method com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n         12: aload_1\n-        13: invokevirtual #122                // Method com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n+        13: invokevirtual #401                // Method com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n         16: aload_1\n-        17: invokevirtual #123                // Method com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n-        20: invokevirtual #124                // Method writeString:([CII)V\n+        17: invokevirtual #404                // Method com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n+        20: invokevirtual #407                // Method writeString:([CII)V\n         23: goto          34\n         26: aload_0\n         27: aload_1\n-        28: invokevirtual #125                // Method com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n-        31: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V\n+        28: invokevirtual #409                // Method com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n+        31: invokevirtual #133                // Method writeString:(Ljava/lang/String;)V\n         34: return\n       LineNumberTable:\n         line 2776: 0\n         line 2777: 7\n         line 2779: 26\n         line 2781: 34\n       LocalVariableTable:\n@@ -3527,19 +3527,19 @@\n       throws java.io.IOException\n \n   protected void _reportError(java.lang.String) throws com.fasterxml.jackson.core.JsonGenerationException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+         0: new           #176                // class com/fasterxml/jackson/core/JsonGenerationException\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+         6: invokespecial #189                // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n          9: athrow\n       LineNumberTable:\n         line 2849: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0      10     1   msg   Ljava/lang/String;\n@@ -3547,249 +3547,249 @@\n       throws com.fasterxml.jackson.core.JsonGenerationException\n \n   protected final void _throwInternal();\n     descriptor: ()V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=0, locals=1, args_size=1\n-         0: invokestatic  #126                // Method com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+         0: invokestatic  #412                // Method com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n          3: return\n       LineNumberTable:\n         line 2852: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n   protected void _reportUnsupportedOperation();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/UnsupportedOperationException\n+         0: new           #52                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: new           #55                 // class java/lang/StringBuilder\n+         4: new           #178                // class java/lang/StringBuilder\n          7: dup\n-         8: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        11: ldc           #127                // String Operation not supported by generator of type\n-        13: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        16: aload_0\n-        17: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        20: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        23: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        26: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #21                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-        32: athrow\n+         8: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+        11: ldc_w         #417                // String Operation not supported by generator of type\n+        14: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        17: aload_0\n+        18: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        21: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        24: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        30: invokespecial #77                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+        33: athrow\n       LineNumberTable:\n         line 2855: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      33     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0      34     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n \n   protected final void _verifyOffsets(int, int, int);\n     descriptor: (III)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=7, locals=4, args_size=4\n          0: iload_2\n          1: iflt          11\n          4: iload_2\n          5: iload_3\n          6: iadd\n          7: iload_1\n-         8: if_icmple     49\n-        11: new           #31                 // class java/lang/IllegalArgumentException\n+         8: if_icmple     50\n+        11: new           #109                // class java/lang/IllegalArgumentException\n         14: dup\n-        15: ldc           #128                // String invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-        17: iconst_3\n-        18: anewarray     #16                 // class java/lang/Object\n-        21: dup\n-        22: iconst_0\n-        23: iload_2\n-        24: invokestatic  #129                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        27: aastore\n-        28: dup\n-        29: iconst_1\n-        30: iload_3\n-        31: invokestatic  #129                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        34: aastore\n-        35: dup\n-        36: iconst_2\n-        37: iload_1\n-        38: invokestatic  #129                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        41: aastore\n-        42: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        45: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        48: athrow\n-        49: return\n+        15: ldc_w         #419                // String invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+        18: iconst_3\n+        19: anewarray     #4                  // class java/lang/Object\n+        22: dup\n+        23: iconst_0\n+        24: iload_2\n+        25: invokestatic  #421                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        28: aastore\n+        29: dup\n+        30: iconst_1\n+        31: iload_3\n+        32: invokestatic  #421                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        35: aastore\n+        36: dup\n+        37: iconst_2\n+        38: iload_1\n+        39: invokestatic  #421                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        42: aastore\n+        43: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        46: invokespecial #113                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        49: athrow\n+        50: return\n       LineNumberTable:\n         line 2861: 0\n         line 2862: 11\n-        line 2864: 24\n-        line 2862: 42\n-        line 2866: 49\n+        line 2864: 25\n+        line 2862: 43\n+        line 2866: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      50     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0      50     1 arrayLength   I\n-            0      50     2 offset   I\n-            0      50     3 length   I\n+            0      51     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0      51     1 arrayLength   I\n+            0      51     2 offset   I\n+            0      51     3 length   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n-        frame_type = 37 /* same */\n+        frame_type = 38 /* same */\n \n   protected void _writeSimpleObject(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n          1: ifnonnull     9\n          4: aload_0\n-         5: invokevirtual #51                 // Method writeNull:()V\n+         5: invokevirtual #168                // Method writeNull:()V\n          8: return\n          9: aload_1\n-        10: instanceof    #48                 // class java/lang/String\n+        10: instanceof    #72                 // class java/lang/String\n         13: ifeq          25\n         16: aload_0\n         17: aload_1\n-        18: checkcast     #48                 // class java/lang/String\n-        21: invokevirtual #40                 // Method writeString:(Ljava/lang/String;)V\n+        18: checkcast     #72                 // class java/lang/String\n+        21: invokevirtual #133                // Method writeString:(Ljava/lang/String;)V\n         24: return\n         25: aload_1\n-        26: instanceof    #130                // class java/lang/Number\n+        26: instanceof    #370                // class java/lang/Number\n         29: ifeq          207\n         32: aload_1\n-        33: checkcast     #130                // class java/lang/Number\n+        33: checkcast     #370                // class java/lang/Number\n         36: astore_2\n         37: aload_2\n-        38: instanceof    #131                // class java/lang/Integer\n+        38: instanceof    #422                // class java/lang/Integer\n         41: ifeq          53\n         44: aload_0\n         45: aload_2\n-        46: invokevirtual #132                // Method java/lang/Number.intValue:()I\n-        49: invokevirtual #36                 // Method writeNumber:(I)V\n+        46: invokevirtual #426                // Method java/lang/Number.intValue:()I\n+        49: invokevirtual #121                // Method writeNumber:(I)V\n         52: return\n         53: aload_2\n-        54: instanceof    #133                // class java/lang/Long\n+        54: instanceof    #101                // class java/lang/Long\n         57: ifeq          69\n         60: aload_0\n         61: aload_2\n-        62: invokevirtual #134                // Method java/lang/Number.longValue:()J\n-        65: invokevirtual #38                 // Method writeNumber:(J)V\n+        62: invokevirtual #429                // Method java/lang/Number.longValue:()J\n+        65: invokevirtual #127                // Method writeNumber:(J)V\n         68: return\n         69: aload_2\n-        70: instanceof    #112                // class java/lang/Double\n+        70: instanceof    #367                // class java/lang/Double\n         73: ifeq          85\n         76: aload_0\n         77: aload_2\n-        78: invokevirtual #113                // Method java/lang/Number.doubleValue:()D\n-        81: invokevirtual #39                 // Method writeNumber:(D)V\n+        78: invokevirtual #369                // Method java/lang/Number.doubleValue:()D\n+        81: invokevirtual #130                // Method writeNumber:(D)V\n         84: return\n         85: aload_2\n-        86: instanceof    #135                // class java/lang/Float\n+        86: instanceof    #432                // class java/lang/Float\n         89: ifeq          101\n         92: aload_0\n         93: aload_2\n-        94: invokevirtual #114                // Method java/lang/Number.floatValue:()F\n-        97: invokevirtual #84                 // Method writeNumber:(F)V\n+        94: invokevirtual #374                // Method java/lang/Number.floatValue:()F\n+        97: invokevirtual #277                // Method writeNumber:(F)V\n        100: return\n        101: aload_2\n-       102: instanceof    #136                // class java/lang/Short\n+       102: instanceof    #434                // class java/lang/Short\n        105: ifeq          117\n        108: aload_0\n        109: aload_2\n-       110: invokevirtual #137                // Method java/lang/Number.shortValue:()S\n-       113: invokevirtual #82                 // Method writeNumber:(S)V\n+       110: invokevirtual #436                // Method java/lang/Number.shortValue:()S\n+       113: invokevirtual #271                // Method writeNumber:(S)V\n        116: return\n        117: aload_2\n-       118: instanceof    #138                // class java/lang/Byte\n+       118: instanceof    #440                // class java/lang/Byte\n        121: ifeq          134\n        124: aload_0\n        125: aload_2\n-       126: invokevirtual #139                // Method java/lang/Number.byteValue:()B\n+       126: invokevirtual #442                // Method java/lang/Number.byteValue:()B\n        129: i2s\n-       130: invokevirtual #82                 // Method writeNumber:(S)V\n+       130: invokevirtual #271                // Method writeNumber:(S)V\n        133: return\n        134: aload_2\n-       135: instanceof    #140                // class java/math/BigInteger\n+       135: instanceof    #446                // class java/math/BigInteger\n        138: ifeq          150\n        141: aload_0\n        142: aload_2\n-       143: checkcast     #140                // class java/math/BigInteger\n-       146: invokevirtual #83                 // Method writeNumber:(Ljava/math/BigInteger;)V\n+       143: checkcast     #446                // class java/math/BigInteger\n+       146: invokevirtual #274                // Method writeNumber:(Ljava/math/BigInteger;)V\n        149: return\n        150: aload_2\n-       151: instanceof    #111                // class java/math/BigDecimal\n+       151: instanceof    #365                // class java/math/BigDecimal\n        154: ifeq          166\n        157: aload_0\n        158: aload_2\n-       159: checkcast     #111                // class java/math/BigDecimal\n-       162: invokevirtual #85                 // Method writeNumber:(Ljava/math/BigDecimal;)V\n+       159: checkcast     #365                // class java/math/BigDecimal\n+       162: invokevirtual #280                // Method writeNumber:(Ljava/math/BigDecimal;)V\n        165: return\n        166: aload_2\n-       167: instanceof    #141                // class java/util/concurrent/atomic/AtomicInteger\n+       167: instanceof    #448                // class java/util/concurrent/atomic/AtomicInteger\n        170: ifeq          185\n        173: aload_0\n        174: aload_2\n-       175: checkcast     #141                // class java/util/concurrent/atomic/AtomicInteger\n-       178: invokevirtual #142                // Method java/util/concurrent/atomic/AtomicInteger.get:()I\n-       181: invokevirtual #36                 // Method writeNumber:(I)V\n+       175: checkcast     #448                // class java/util/concurrent/atomic/AtomicInteger\n+       178: invokevirtual #450                // Method java/util/concurrent/atomic/AtomicInteger.get:()I\n+       181: invokevirtual #121                // Method writeNumber:(I)V\n        184: return\n        185: aload_2\n-       186: instanceof    #143                // class java/util/concurrent/atomic/AtomicLong\n+       186: instanceof    #453                // class java/util/concurrent/atomic/AtomicLong\n        189: ifeq          204\n        192: aload_0\n        193: aload_2\n-       194: checkcast     #143                // class java/util/concurrent/atomic/AtomicLong\n-       197: invokevirtual #144                // Method java/util/concurrent/atomic/AtomicLong.get:()J\n-       200: invokevirtual #38                 // Method writeNumber:(J)V\n+       194: checkcast     #453                // class java/util/concurrent/atomic/AtomicLong\n+       197: invokevirtual #455                // Method java/util/concurrent/atomic/AtomicLong.get:()J\n+       200: invokevirtual #127                // Method writeNumber:(J)V\n        203: return\n        204: goto          261\n        207: aload_1\n-       208: instanceof    #52                 // class \"[B\"\n+       208: instanceof    #171                // class \"[B\"\n        211: ifeq          223\n        214: aload_0\n        215: aload_1\n-       216: checkcast     #52                 // class \"[B\"\n-       219: invokevirtual #53                 // Method writeBinary:([B)V\n+       216: checkcast     #171                // class \"[B\"\n+       219: invokevirtual #173                // Method writeBinary:([B)V\n        222: return\n        223: aload_1\n-       224: instanceof    #145                // class java/lang/Boolean\n+       224: instanceof    #457                // class java/lang/Boolean\n        227: ifeq          242\n        230: aload_0\n        231: aload_1\n-       232: checkcast     #145                // class java/lang/Boolean\n-       235: invokevirtual #146                // Method java/lang/Boolean.booleanValue:()Z\n-       238: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       232: checkcast     #457                // class java/lang/Boolean\n+       235: invokevirtual #459                // Method java/lang/Boolean.booleanValue:()Z\n+       238: invokevirtual #267                // Method writeBoolean:(Z)V\n        241: return\n        242: aload_1\n-       243: instanceof    #147                // class java/util/concurrent/atomic/AtomicBoolean\n+       243: instanceof    #462                // class java/util/concurrent/atomic/AtomicBoolean\n        246: ifeq          261\n        249: aload_0\n        250: aload_1\n-       251: checkcast     #147                // class java/util/concurrent/atomic/AtomicBoolean\n-       254: invokevirtual #148                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-       257: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       251: checkcast     #462                // class java/util/concurrent/atomic/AtomicBoolean\n+       254: invokevirtual #464                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+       257: invokevirtual #267                // Method writeBoolean:(Z)V\n        260: return\n-       261: new           #96                 // class java/lang/IllegalStateException\n+       261: new           #316                // class java/lang/IllegalStateException\n        264: dup\n-       265: new           #55                 // class java/lang/StringBuilder\n+       265: new           #178                // class java/lang/StringBuilder\n        268: dup\n-       269: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       272: ldc           #149                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-       274: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       277: aload_1\n-       278: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-       281: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-       284: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       287: ldc           #150                // String )\n-       289: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       292: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       295: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       298: athrow\n+       269: invokespecial #180                // Method java/lang/StringBuilder.\"<init>\":()V\n+       272: ldc_w         #466                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+       275: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       278: aload_1\n+       279: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       282: invokevirtual #60                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+       285: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       288: ldc_w         #468                // String )\n+       291: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       294: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       297: invokespecial #323                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       300: athrow\n       LineNumberTable:\n         line 2883: 0\n         line 2884: 4\n         line 2885: 8\n         line 2887: 9\n         line 2888: 16\n         line 2889: 24\n@@ -3831,20 +3831,20 @@\n         line 2929: 223\n         line 2930: 230\n         line 2931: 241\n         line 2932: 242\n         line 2933: 249\n         line 2934: 260\n         line 2936: 261\n-        line 2937: 278\n+        line 2937: 279\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            37     167     2     n   Ljava/lang/Number;\n-            0     299     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     299     1 value   Ljava/lang/Object;\n+            0     301     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     301     1 value   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 16\n         frame_type = 9 /* same */\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Number ]\n         frame_type = 15 /* same */\n@@ -3865,33 +3865,33 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: invokestatic  #151                // Method com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-         3: invokestatic  #152                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-         6: putstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-         9: getstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-        12: getstatic     #153                // Field com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-        15: invokevirtual #154                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-        18: putstatic     #155                // Field DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-        21: getstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-        24: getstatic     #156                // Field com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-        27: invokevirtual #154                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-        30: putstatic     #157                // Field DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+         0: invokestatic  #470                // Method com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+         3: invokestatic  #476                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+         6: putstatic     #85                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+         9: getstatic     #85                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+        12: getstatic     #482                // Field com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+        15: invokevirtual #486                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+        18: putstatic     #490                // Field DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+        21: getstatic     #85                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+        24: getstatic     #493                // Field com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+        27: invokevirtual #486                // Method com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+        30: putstatic     #496                // Field DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n         33: return\n       LineNumberTable:\n         line 42: 0\n         line 50: 9\n         line 51: 15\n         line 59: 21\n         line 60: 27\n         line 59: 33\n }\n SourceFile: \"JsonGenerator.java\"\n InnerClasses:\n-  static #162;                            // class com/fasterxml/jackson/core/JsonGenerator$1\n-  public static final #165= #164 of #158; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n-  public static final #347= #346 of #481; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n-  public static final #399= #398 of #506; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n+  public static final #677= #675 of #10;  // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #678= #231 of #197; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n+  static #239;                            // class com/fasterxml/jackson/core/JsonGenerator$1\n+  public static final #679= #341 of #288; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n"}]}
