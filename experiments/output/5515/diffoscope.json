{"diffoscope-json-version": 1, "source1": "first/Fraction.class", "source2": "second/Fraction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,119 +1,119 @@\n-  SHA-256 checksum 9a55d042dcbc5d041c92a2a94bc8e2ec686caacfab66f820936c627c47914e91\n+  SHA-256 checksum eea94f2654eb335058404e08788999d23e9573a9bbf050da1e8bbfc2fad8b044\n   Compiled from \"Fraction.java\"\n public final class org.apache.commons.lang3.math.Fraction extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.math.Fraction>\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #13                         // org/apache/commons/lang3/math/Fraction\n   super_class: #105                       // java/lang/Number\n   interfaces: 1, fields: 18, methods: 36, attributes: 2\n Constant pool:\n-    #1 = Methodref          #105.#243     // java/lang/Number.\"<init>\":()V\n-    #2 = Fieldref           #13.#244      // org/apache/commons/lang3/math/Fraction.hashCode:I\n-    #3 = Fieldref           #13.#245      // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n-    #4 = Fieldref           #13.#246      // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n-    #5 = Fieldref           #13.#247      // org/apache/commons/lang3/math/Fraction.numerator:I\n-    #6 = Fieldref           #13.#248      // org/apache/commons/lang3/math/Fraction.denominator:I\n-    #7 = Class              #249          // java/lang/ArithmeticException\n-    #8 = String             #250          // The denominator must not be zero\n-    #9 = Methodref          #7.#251       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-   #10 = Class              #252          // java/lang/Integer\n+    #1 = Methodref          #105.#242     // java/lang/Number.\"<init>\":()V\n+    #2 = Fieldref           #13.#243      // org/apache/commons/lang3/math/Fraction.hashCode:I\n+    #3 = Fieldref           #13.#244      // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n+    #4 = Fieldref           #13.#245      // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n+    #5 = Fieldref           #13.#246      // org/apache/commons/lang3/math/Fraction.numerator:I\n+    #6 = Fieldref           #13.#247      // org/apache/commons/lang3/math/Fraction.denominator:I\n+    #7 = Class              #248          // java/lang/ArithmeticException\n+    #8 = String             #249          // The denominator must not be zero\n+    #9 = Methodref          #7.#250       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+   #10 = Class              #251          // java/lang/Integer\n    #11 = Integer            -2147483648\n-   #12 = String             #253          // overflow: can\\'t negate\n-   #13 = Class              #254          // org/apache/commons/lang3/math/Fraction\n-   #14 = Methodref          #13.#255      // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n-   #15 = String             #256          // The denominator must not be negative\n-   #16 = String             #257          // The numerator must not be negative\n+   #12 = String             #252          // overflow: can\\'t negate\n+   #13 = Class              #253          // org/apache/commons/lang3/math/Fraction\n+   #14 = Methodref          #13.#254      // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n+   #15 = String             #255          // The denominator must not be negative\n+   #16 = String             #256          // The numerator must not be negative\n    #17 = Long               -2147483648l\n    #19 = Long               2147483647l\n-   #21 = String             #258          // Numerator too large to represent as an Integer.\n-   #22 = Fieldref           #13.#259      // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-   #23 = Methodref          #13.#260      // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n-   #24 = Methodref          #261.#262     // java/lang/Math.abs:(D)D\n+   #21 = String             #257          // Numerator too large to represent as an Integer.\n+   #22 = Fieldref           #13.#258      // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+   #23 = Methodref          #13.#259      // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n+   #24 = Methodref          #260.#261     // java/lang/Math.abs:(D)D\n    #25 = Double             2.147483647E9d\n-   #27 = Methodref          #29.#263      // java/lang/Double.isNaN:(D)Z\n-   #28 = String             #264          // The value must not be greater than Integer.MAX_VALUE or NaN\n-   #29 = Class              #265          // java/lang/Double\n+   #27 = Methodref          #29.#262      // java/lang/Double.isNaN:(D)Z\n+   #28 = String             #263          // The value must not be greater than Integer.MAX_VALUE or NaN\n+   #29 = Class              #264          // java/lang/Double\n    #30 = Double             1.7976931348623157E308d\n-   #32 = String             #266          // Unable to convert double to fraction\n-   #33 = Methodref          #13.#267      // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #34 = String             #268          // The string must not be null\n-   #35 = Class              #269          // java/lang/Object\n-   #36 = Methodref          #270.#271     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #37 = Methodref          #272.#273     // java/lang/String.indexOf:(I)I\n-   #38 = Methodref          #29.#274      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #39 = Methodref          #13.#275      // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-   #40 = Methodref          #272.#276     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #41 = Methodref          #10.#277      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #42 = Methodref          #272.#278     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #43 = Class              #279          // java/lang/NumberFormatException\n-   #44 = String             #280          // The fraction could not be parsed as the format X Y/Z\n-   #45 = Methodref          #43.#251      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #46 = Methodref          #13.#281      // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-   #47 = Methodref          #13.#282      // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #48 = Methodref          #261.#283     // java/lang/Math.abs:(I)I\n-   #49 = Methodref          #13.#284      // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n-   #50 = String             #285          // Unable to invert zero.\n-   #51 = String             #286          // overflow: can\\'t negate numerator\n-   #52 = String             #287          // overflow: too large to negate\n-   #53 = Methodref          #13.#288      // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n-   #54 = Fieldref           #13.#289      // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n-   #55 = Methodref          #13.#290      // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n-   #56 = Methodref          #13.#291      // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-   #57 = Methodref          #13.#292      // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-   #58 = String             #293          // overflow: gcd is 2^31\n-   #59 = String             #294          // overflow: mul\n-   #60 = String             #295          // overflow: mulPos\n-   #61 = String             #296          // overflow: add\n-   #62 = Methodref          #13.#297      // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-   #63 = String             #298          // The fraction must not be null\n-   #64 = Methodref          #13.#299      // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n-   #65 = Methodref          #13.#300      // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n-   #66 = Methodref          #13.#301      // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n-   #67 = Methodref          #13.#302      // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n-   #68 = Methodref          #303.#304     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #69 = Methodref          #303.#305     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #70 = Methodref          #303.#306     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #71 = Methodref          #303.#307     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #72 = Methodref          #303.#308     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #73 = Methodref          #303.#309     // java/math/BigInteger.intValue:()I\n-   #74 = Methodref          #303.#310     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #75 = Methodref          #303.#311     // java/math/BigInteger.bitLength:()I\n-   #76 = String             #312          // overflow: numerator too large after multiply\n-   #77 = String             #313          // The fraction to divide by must not be zero\n-   #78 = Methodref          #13.#314      // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n-   #79 = Methodref          #13.#315      // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n-   #80 = Methodref          #316.#317     // java/lang/Long.compare:(JJ)I\n-   #81 = Class              #318          // java/lang/StringBuilder\n-   #82 = Methodref          #81.#243      // java/lang/StringBuilder.\"<init>\":()V\n-   #83 = Methodref          #81.#319      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #84 = String             #320          // /\n-   #85 = Methodref          #81.#321      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = Methodref          #81.#322      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #87 = String             #323          // 0\n-   #88 = String             #324          // 1\n-   #89 = String             #325          // -1\n-   #90 = Methodref          #13.#326      // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n-   #91 = Methodref          #13.#327      // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n-   #92 = Methodref          #10.#328      // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #93 = String             #329          //\n-   #94 = Methodref          #13.#330      // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-   #95 = Fieldref           #13.#331      // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-   #96 = Fieldref           #13.#332      // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-   #97 = Fieldref           #13.#333      // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-   #98 = Fieldref           #13.#334      // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-   #99 = Fieldref           #13.#335      // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #100 = Fieldref           #13.#336      // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #101 = Fieldref           #13.#337      // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #102 = Fieldref           #13.#338      // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #103 = Fieldref           #13.#339      // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #104 = Fieldref           #13.#340      // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #105 = Class              #341          // java/lang/Number\n-  #106 = Class              #342          // java/lang/Comparable\n+   #32 = String             #265          // Unable to convert double to fraction\n+   #33 = Methodref          #13.#266      // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #34 = String             #267          // The string must not be null\n+   #35 = Class              #268          // java/lang/Object\n+   #36 = Methodref          #269.#270     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #37 = Methodref          #271.#272     // java/lang/String.indexOf:(I)I\n+   #38 = Methodref          #29.#273      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #39 = Methodref          #13.#274      // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+   #40 = Methodref          #271.#275     // java/lang/String.substring:(II)Ljava/lang/String;\n+   #41 = Methodref          #10.#276      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #42 = Methodref          #271.#277     // java/lang/String.substring:(I)Ljava/lang/String;\n+   #43 = Class              #278          // java/lang/NumberFormatException\n+   #44 = String             #279          // The fraction could not be parsed as the format X Y/Z\n+   #45 = Methodref          #43.#250      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #46 = Methodref          #13.#280      // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+   #47 = Methodref          #13.#281      // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #48 = Methodref          #260.#282     // java/lang/Math.abs:(I)I\n+   #49 = Methodref          #13.#283      // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n+   #50 = String             #284          // Unable to invert zero.\n+   #51 = String             #285          // overflow: can\\'t negate numerator\n+   #52 = String             #286          // overflow: too large to negate\n+   #53 = Methodref          #13.#287      // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n+   #54 = Fieldref           #13.#288      // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n+   #55 = Methodref          #13.#289      // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n+   #56 = Methodref          #13.#290      // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+   #57 = Methodref          #13.#291      // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+   #58 = String             #292          // overflow: gcd is 2^31\n+   #59 = String             #293          // overflow: mul\n+   #60 = String             #294          // overflow: mulPos\n+   #61 = String             #295          // overflow: add\n+   #62 = Methodref          #13.#296      // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+   #63 = String             #297          // The fraction must not be null\n+   #64 = Methodref          #13.#298      // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n+   #65 = Methodref          #13.#299      // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n+   #66 = Methodref          #13.#300      // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n+   #67 = Methodref          #13.#301      // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n+   #68 = Methodref          #221.#302     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #69 = Methodref          #221.#303     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #70 = Methodref          #221.#304     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #71 = Methodref          #221.#305     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #72 = Methodref          #221.#306     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #73 = Methodref          #221.#307     // java/math/BigInteger.intValue:()I\n+   #74 = Methodref          #221.#308     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #75 = Methodref          #221.#309     // java/math/BigInteger.bitLength:()I\n+   #76 = String             #310          // overflow: numerator too large after multiply\n+   #77 = String             #311          // The fraction to divide by must not be zero\n+   #78 = Methodref          #13.#312      // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n+   #79 = Methodref          #13.#313      // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n+   #80 = Methodref          #314.#315     // java/lang/Long.compare:(JJ)I\n+   #81 = Class              #316          // java/lang/StringBuilder\n+   #82 = Methodref          #81.#242      // java/lang/StringBuilder.\"<init>\":()V\n+   #83 = Methodref          #81.#317      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #84 = String             #318          // /\n+   #85 = Methodref          #81.#319      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = Methodref          #81.#320      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #87 = String             #321          // 0\n+   #88 = String             #322          // 1\n+   #89 = String             #323          // -1\n+   #90 = Methodref          #13.#324      // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n+   #91 = Methodref          #13.#325      // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n+   #92 = Methodref          #10.#326      // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #93 = String             #327          //\n+   #94 = Methodref          #13.#328      // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+   #95 = Fieldref           #13.#329      // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+   #96 = Fieldref           #13.#330      // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+   #97 = Fieldref           #13.#331      // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+   #98 = Fieldref           #13.#332      // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+   #99 = Fieldref           #13.#333      // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #100 = Fieldref           #13.#334      // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #101 = Fieldref           #13.#335      // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #102 = Fieldref           #13.#336      // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #103 = Fieldref           #13.#337      // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #104 = Fieldref           #13.#338      // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #105 = Class              #339          // java/lang/Number\n+  #106 = Class              #340          // java/lang/Comparable\n   #107 = Utf8               serialVersionUID\n   #108 = Utf8               J\n   #109 = Utf8               ConstantValue\n   #110 = Long               65382027393090l\n   #112 = Utf8               ZERO\n   #113 = Utf8               Lorg/apache/commons/lang3/math/Fraction;\n   #114 = Utf8               ONE\n@@ -184,203 +184,201 @@\n   #179 = Utf8               ()J\n   #180 = Utf8               floatValue\n   #181 = Utf8               ()F\n   #182 = Utf8               doubleValue\n   #183 = Utf8               ()D\n   #184 = Utf8               reduce\n   #185 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;\n-  #186 = Class              #254          // org/apache/commons/lang3/math/Fraction\n-  #187 = Utf8               invert\n-  #188 = Utf8               negate\n-  #189 = Utf8               abs\n-  #190 = Utf8               pow\n-  #191 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n-  #192 = Utf8               f\n-  #193 = Utf8               power\n-  #194 = Utf8               greatestCommonDivisor\n-  #195 = Utf8               (II)I\n-  #196 = Utf8               u\n-  #197 = Utf8               v\n-  #198 = Utf8               k\n-  #199 = Utf8               t\n-  #200 = Utf8               mulAndCheck\n-  #201 = Utf8               x\n-  #202 = Utf8               y\n-  #203 = Utf8               m\n-  #204 = Utf8               mulPosAndCheck\n-  #205 = Utf8               addAndCheck\n-  #206 = Utf8               s\n-  #207 = Utf8               subAndCheck\n-  #208 = Utf8               add\n-  #209 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #210 = Utf8               subtract\n-  #211 = Utf8               addSub\n-  #212 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #213 = Utf8               uvp\n-  #214 = Utf8               upv\n-  #215 = Utf8               isAdd\n-  #216 = Utf8               Z\n-  #217 = Utf8               d1\n-  #218 = Utf8               Ljava/math/BigInteger;\n-  #219 = Utf8               tmodd1\n-  #220 = Utf8               d2\n-  #221 = Utf8               w\n-  #222 = Class              #343          // java/math/BigInteger\n-  #223 = Utf8               multiplyBy\n-  #224 = Utf8               divideBy\n-  #225 = Utf8               equals\n-  #226 = Utf8               (Ljava/lang/Object;)Z\n-  #227 = Utf8               obj\n-  #228 = Utf8               Ljava/lang/Object;\n-  #229 = Utf8               other\n-  #230 = Utf8               compareTo\n-  #231 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n-  #232 = Utf8               first\n-  #233 = Utf8               second\n-  #234 = Utf8               ()Ljava/lang/String;\n-  #235 = Utf8               properNumerator\n-  #236 = Utf8               (Ljava/lang/Object;)I\n-  #237 = Utf8               <clinit>\n-  #238 = Utf8               ()V\n-  #239 = Utf8               Signature\n-  #240 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n-  #241 = Utf8               SourceFile\n-  #242 = Utf8               Fraction.java\n-  #243 = NameAndType        #132:#238     // \"<init>\":()V\n-  #244 = NameAndType        #128:#126     // hashCode:I\n-  #245 = NameAndType        #129:#130     // toString:Ljava/lang/String;\n-  #246 = NameAndType        #131:#130     // toProperString:Ljava/lang/String;\n-  #247 = NameAndType        #125:#126     // numerator:I\n-  #248 = NameAndType        #127:#126     // denominator:I\n-  #249 = Utf8               java/lang/ArithmeticException\n-  #250 = Utf8               The denominator must not be zero\n-  #251 = NameAndType        #132:#344     // \"<init>\":(Ljava/lang/String;)V\n-  #252 = Utf8               java/lang/Integer\n-  #253 = Utf8               overflow: can\\'t negate\n-  #254 = Utf8               org/apache/commons/lang3/math/Fraction\n-  #255 = NameAndType        #132:#133     // \"<init>\":(II)V\n-  #256 = Utf8               The denominator must not be negative\n-  #257 = Utf8               The numerator must not be negative\n-  #258 = Utf8               Numerator too large to represent as an Integer.\n-  #259 = NameAndType        #112:#113     // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-  #260 = NameAndType        #194:#195     // greatestCommonDivisor:(II)I\n-  #261 = Class              #345          // java/lang/Math\n-  #262 = NameAndType        #189:#346     // abs:(D)D\n-  #263 = NameAndType        #347:#348     // isNaN:(D)Z\n-  #264 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n-  #265 = Utf8               java/lang/Double\n-  #266 = Utf8               Unable to convert double to fraction\n-  #267 = NameAndType        #144:#139     // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #268 = Utf8               The string must not be null\n-  #269 = Utf8               java/lang/Object\n-  #270 = Class              #349          // org/apache/commons/lang3/Validate\n-  #271 = NameAndType        #350:#351     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #272 = Class              #352          // java/lang/String\n-  #273 = NameAndType        #353:#354     // indexOf:(I)I\n-  #274 = NameAndType        #355:#356     // parseDouble:(Ljava/lang/String;)D\n-  #275 = NameAndType        #138:#146     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-  #276 = NameAndType        #357:#358     // substring:(II)Ljava/lang/String;\n-  #277 = NameAndType        #359:#360     // parseInt:(Ljava/lang/String;)I\n-  #278 = NameAndType        #357:#361     // substring:(I)Ljava/lang/String;\n-  #279 = Utf8               java/lang/NumberFormatException\n-  #280 = Utf8               The fraction could not be parsed as the format X Y/Z\n-  #281 = NameAndType        #138:#141     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-  #282 = NameAndType        #138:#139     // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #283 = NameAndType        #189:#354     // abs:(I)I\n-  #284 = NameAndType        #225:#226     // equals:(Ljava/lang/Object;)Z\n-  #285 = Utf8               Unable to invert zero.\n-  #286 = Utf8               overflow: can\\'t negate numerator\n-  #287 = Utf8               overflow: too large to negate\n-  #288 = NameAndType        #188:#185     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n-  #289 = NameAndType        #114:#113     // ONE:Lorg/apache/commons/lang3/math/Fraction;\n-  #290 = NameAndType        #187:#185     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n-  #291 = NameAndType        #190:#191     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-  #292 = NameAndType        #223:#209     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #293 = Utf8               overflow: gcd is 2^31\n-  #294 = Utf8               overflow: mul\n-  #295 = Utf8               overflow: mulPos\n-  #296 = Utf8               overflow: add\n-  #297 = NameAndType        #211:#212     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #298 = Utf8               The fraction must not be null\n-  #299 = NameAndType        #200:#195     // mulAndCheck:(II)I\n-  #300 = NameAndType        #205:#195     // addAndCheck:(II)I\n-  #301 = NameAndType        #207:#195     // subAndCheck:(II)I\n-  #302 = NameAndType        #204:#195     // mulPosAndCheck:(II)I\n-  #303 = Class              #343          // java/math/BigInteger\n-  #304 = NameAndType        #362:#363     // valueOf:(J)Ljava/math/BigInteger;\n-  #305 = NameAndType        #364:#365     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #306 = NameAndType        #208:#365     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #307 = NameAndType        #210:#365     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #308 = NameAndType        #366:#365     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #309 = NameAndType        #177:#173     // intValue:()I\n-  #310 = NameAndType        #367:#365     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #311 = NameAndType        #368:#173     // bitLength:()I\n-  #312 = Utf8               overflow: numerator too large after multiply\n-  #313 = Utf8               The fraction to divide by must not be zero\n-  #314 = NameAndType        #172:#173     // getNumerator:()I\n-  #315 = NameAndType        #174:#173     // getDenominator:()I\n-  #316 = Class              #369          // java/lang/Long\n-  #317 = NameAndType        #370:#371     // compare:(JJ)I\n-  #318 = Utf8               java/lang/StringBuilder\n-  #319 = NameAndType        #372:#373     // append:(I)Ljava/lang/StringBuilder;\n-  #320 = Utf8               /\n-  #321 = NameAndType        #372:#374     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #322 = NameAndType        #129:#234     // toString:()Ljava/lang/String;\n-  #323 = Utf8               0\n-  #324 = Utf8               1\n-  #325 = Utf8               -1\n-  #326 = NameAndType        #175:#173     // getProperNumerator:()I\n-  #327 = NameAndType        #176:#173     // getProperWhole:()I\n-  #328 = NameAndType        #129:#361     // toString:(I)Ljava/lang/String;\n-  #329 = Utf8\n-  #330 = NameAndType        #230:#231     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-  #331 = NameAndType        #115:#113     // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-  #332 = NameAndType        #116:#113     // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-  #333 = NameAndType        #117:#113     // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-  #334 = NameAndType        #118:#113     // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-  #335 = NameAndType        #119:#113     // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #336 = NameAndType        #120:#113     // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #337 = NameAndType        #121:#113     // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #338 = NameAndType        #122:#113     // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #339 = NameAndType        #123:#113     // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #340 = NameAndType        #124:#113     // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #341 = Utf8               java/lang/Number\n-  #342 = Utf8               java/lang/Comparable\n-  #343 = Utf8               java/math/BigInteger\n-  #344 = Utf8               (Ljava/lang/String;)V\n-  #345 = Utf8               java/lang/Math\n-  #346 = Utf8               (D)D\n-  #347 = Utf8               isNaN\n-  #348 = Utf8               (D)Z\n-  #349 = Utf8               org/apache/commons/lang3/Validate\n-  #350 = Utf8               notNull\n-  #351 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #352 = Utf8               java/lang/String\n-  #353 = Utf8               indexOf\n-  #354 = Utf8               (I)I\n-  #355 = Utf8               parseDouble\n-  #356 = Utf8               (Ljava/lang/String;)D\n-  #357 = Utf8               substring\n-  #358 = Utf8               (II)Ljava/lang/String;\n-  #359 = Utf8               parseInt\n-  #360 = Utf8               (Ljava/lang/String;)I\n-  #361 = Utf8               (I)Ljava/lang/String;\n-  #362 = Utf8               valueOf\n-  #363 = Utf8               (J)Ljava/math/BigInteger;\n-  #364 = Utf8               multiply\n-  #365 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #366 = Utf8               mod\n-  #367 = Utf8               divide\n-  #368 = Utf8               bitLength\n-  #369 = Utf8               java/lang/Long\n-  #370 = Utf8               compare\n-  #371 = Utf8               (JJ)I\n-  #372 = Utf8               append\n-  #373 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #374 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #186 = Utf8               invert\n+  #187 = Utf8               negate\n+  #188 = Utf8               abs\n+  #189 = Utf8               pow\n+  #190 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n+  #191 = Utf8               f\n+  #192 = Utf8               power\n+  #193 = Utf8               greatestCommonDivisor\n+  #194 = Utf8               (II)I\n+  #195 = Utf8               u\n+  #196 = Utf8               v\n+  #197 = Utf8               k\n+  #198 = Utf8               t\n+  #199 = Utf8               mulAndCheck\n+  #200 = Utf8               x\n+  #201 = Utf8               y\n+  #202 = Utf8               m\n+  #203 = Utf8               mulPosAndCheck\n+  #204 = Utf8               addAndCheck\n+  #205 = Utf8               s\n+  #206 = Utf8               subAndCheck\n+  #207 = Utf8               add\n+  #208 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #209 = Utf8               subtract\n+  #210 = Utf8               addSub\n+  #211 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #212 = Utf8               uvp\n+  #213 = Utf8               upv\n+  #214 = Utf8               isAdd\n+  #215 = Utf8               Z\n+  #216 = Utf8               d1\n+  #217 = Utf8               Ljava/math/BigInteger;\n+  #218 = Utf8               tmodd1\n+  #219 = Utf8               d2\n+  #220 = Utf8               w\n+  #221 = Class              #341          // java/math/BigInteger\n+  #222 = Utf8               multiplyBy\n+  #223 = Utf8               divideBy\n+  #224 = Utf8               equals\n+  #225 = Utf8               (Ljava/lang/Object;)Z\n+  #226 = Utf8               obj\n+  #227 = Utf8               Ljava/lang/Object;\n+  #228 = Utf8               other\n+  #229 = Utf8               compareTo\n+  #230 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n+  #231 = Utf8               first\n+  #232 = Utf8               second\n+  #233 = Utf8               ()Ljava/lang/String;\n+  #234 = Utf8               properNumerator\n+  #235 = Utf8               (Ljava/lang/Object;)I\n+  #236 = Utf8               <clinit>\n+  #237 = Utf8               ()V\n+  #238 = Utf8               Signature\n+  #239 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+  #240 = Utf8               SourceFile\n+  #241 = Utf8               Fraction.java\n+  #242 = NameAndType        #132:#237     // \"<init>\":()V\n+  #243 = NameAndType        #128:#126     // hashCode:I\n+  #244 = NameAndType        #129:#130     // toString:Ljava/lang/String;\n+  #245 = NameAndType        #131:#130     // toProperString:Ljava/lang/String;\n+  #246 = NameAndType        #125:#126     // numerator:I\n+  #247 = NameAndType        #127:#126     // denominator:I\n+  #248 = Utf8               java/lang/ArithmeticException\n+  #249 = Utf8               The denominator must not be zero\n+  #250 = NameAndType        #132:#342     // \"<init>\":(Ljava/lang/String;)V\n+  #251 = Utf8               java/lang/Integer\n+  #252 = Utf8               overflow: can\\'t negate\n+  #253 = Utf8               org/apache/commons/lang3/math/Fraction\n+  #254 = NameAndType        #132:#133     // \"<init>\":(II)V\n+  #255 = Utf8               The denominator must not be negative\n+  #256 = Utf8               The numerator must not be negative\n+  #257 = Utf8               Numerator too large to represent as an Integer.\n+  #258 = NameAndType        #112:#113     // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+  #259 = NameAndType        #193:#194     // greatestCommonDivisor:(II)I\n+  #260 = Class              #343          // java/lang/Math\n+  #261 = NameAndType        #188:#344     // abs:(D)D\n+  #262 = NameAndType        #345:#346     // isNaN:(D)Z\n+  #263 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n+  #264 = Utf8               java/lang/Double\n+  #265 = Utf8               Unable to convert double to fraction\n+  #266 = NameAndType        #144:#139     // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #267 = Utf8               The string must not be null\n+  #268 = Utf8               java/lang/Object\n+  #269 = Class              #347          // org/apache/commons/lang3/Validate\n+  #270 = NameAndType        #348:#349     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #271 = Class              #350          // java/lang/String\n+  #272 = NameAndType        #351:#352     // indexOf:(I)I\n+  #273 = NameAndType        #353:#354     // parseDouble:(Ljava/lang/String;)D\n+  #274 = NameAndType        #138:#146     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+  #275 = NameAndType        #355:#356     // substring:(II)Ljava/lang/String;\n+  #276 = NameAndType        #357:#358     // parseInt:(Ljava/lang/String;)I\n+  #277 = NameAndType        #355:#359     // substring:(I)Ljava/lang/String;\n+  #278 = Utf8               java/lang/NumberFormatException\n+  #279 = Utf8               The fraction could not be parsed as the format X Y/Z\n+  #280 = NameAndType        #138:#141     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+  #281 = NameAndType        #138:#139     // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #282 = NameAndType        #188:#352     // abs:(I)I\n+  #283 = NameAndType        #224:#225     // equals:(Ljava/lang/Object;)Z\n+  #284 = Utf8               Unable to invert zero.\n+  #285 = Utf8               overflow: can\\'t negate numerator\n+  #286 = Utf8               overflow: too large to negate\n+  #287 = NameAndType        #187:#185     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n+  #288 = NameAndType        #114:#113     // ONE:Lorg/apache/commons/lang3/math/Fraction;\n+  #289 = NameAndType        #186:#185     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n+  #290 = NameAndType        #189:#190     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+  #291 = NameAndType        #222:#208     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #292 = Utf8               overflow: gcd is 2^31\n+  #293 = Utf8               overflow: mul\n+  #294 = Utf8               overflow: mulPos\n+  #295 = Utf8               overflow: add\n+  #296 = NameAndType        #210:#211     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #297 = Utf8               The fraction must not be null\n+  #298 = NameAndType        #199:#194     // mulAndCheck:(II)I\n+  #299 = NameAndType        #204:#194     // addAndCheck:(II)I\n+  #300 = NameAndType        #206:#194     // subAndCheck:(II)I\n+  #301 = NameAndType        #203:#194     // mulPosAndCheck:(II)I\n+  #302 = NameAndType        #360:#361     // valueOf:(J)Ljava/math/BigInteger;\n+  #303 = NameAndType        #362:#363     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #304 = NameAndType        #207:#363     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #305 = NameAndType        #209:#363     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #306 = NameAndType        #364:#363     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #307 = NameAndType        #177:#173     // intValue:()I\n+  #308 = NameAndType        #365:#363     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #309 = NameAndType        #366:#173     // bitLength:()I\n+  #310 = Utf8               overflow: numerator too large after multiply\n+  #311 = Utf8               The fraction to divide by must not be zero\n+  #312 = NameAndType        #172:#173     // getNumerator:()I\n+  #313 = NameAndType        #174:#173     // getDenominator:()I\n+  #314 = Class              #367          // java/lang/Long\n+  #315 = NameAndType        #368:#369     // compare:(JJ)I\n+  #316 = Utf8               java/lang/StringBuilder\n+  #317 = NameAndType        #370:#371     // append:(I)Ljava/lang/StringBuilder;\n+  #318 = Utf8               /\n+  #319 = NameAndType        #370:#372     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #320 = NameAndType        #129:#233     // toString:()Ljava/lang/String;\n+  #321 = Utf8               0\n+  #322 = Utf8               1\n+  #323 = Utf8               -1\n+  #324 = NameAndType        #175:#173     // getProperNumerator:()I\n+  #325 = NameAndType        #176:#173     // getProperWhole:()I\n+  #326 = NameAndType        #129:#359     // toString:(I)Ljava/lang/String;\n+  #327 = Utf8\n+  #328 = NameAndType        #229:#230     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+  #329 = NameAndType        #115:#113     // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+  #330 = NameAndType        #116:#113     // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+  #331 = NameAndType        #117:#113     // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+  #332 = NameAndType        #118:#113     // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+  #333 = NameAndType        #119:#113     // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #334 = NameAndType        #120:#113     // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #335 = NameAndType        #121:#113     // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #336 = NameAndType        #122:#113     // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #337 = NameAndType        #123:#113     // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #338 = NameAndType        #124:#113     // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #339 = Utf8               java/lang/Number\n+  #340 = Utf8               java/lang/Comparable\n+  #341 = Utf8               java/math/BigInteger\n+  #342 = Utf8               (Ljava/lang/String;)V\n+  #343 = Utf8               java/lang/Math\n+  #344 = Utf8               (D)D\n+  #345 = Utf8               isNaN\n+  #346 = Utf8               (D)Z\n+  #347 = Utf8               org/apache/commons/lang3/Validate\n+  #348 = Utf8               notNull\n+  #349 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #350 = Utf8               java/lang/String\n+  #351 = Utf8               indexOf\n+  #352 = Utf8               (I)I\n+  #353 = Utf8               parseDouble\n+  #354 = Utf8               (Ljava/lang/String;)D\n+  #355 = Utf8               substring\n+  #356 = Utf8               (II)Ljava/lang/String;\n+  #357 = Utf8               parseInt\n+  #358 = Utf8               (Ljava/lang/String;)I\n+  #359 = Utf8               (I)Ljava/lang/String;\n+  #360 = Utf8               valueOf\n+  #361 = Utf8               (J)Ljava/math/BigInteger;\n+  #362 = Utf8               multiply\n+  #363 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #364 = Utf8               mod\n+  #365 = Utf8               divide\n+  #366 = Utf8               bitLength\n+  #367 = Utf8               java/lang/Long\n+  #368 = Utf8               compare\n+  #369 = Utf8               (JJ)I\n+  #370 = Utf8               append\n+  #371 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #372 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = 65382027393090l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 65382027393090l\n \n   public static final org.apache.commons.lang3.math.Fraction ZERO;\n@@ -2610,9 +2608,9 @@\n         line 72: 72\n         line 76: 84\n         line 80: 96\n         line 84: 108\n         line 88: 120\n         line 92: 132\n }\n-Signature: #240                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+Signature: #239                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n SourceFile: \"Fraction.java\"\n"}]}
