{"diffoscope-json-version": 1, "source1": "first/SubnetUtils.class", "source2": "second/SubnetUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,176 +1,176 @@\n-  SHA-256 checksum e384e055c89927b34fa6a3337171c3e21510ac93c5148dd65297bec7787dbf65\n+  SHA-256 checksum d4bb2ba584dcbd37dfe29220ecba904de2990c8fc524f21031d731c2e120847d\n   Compiled from \"SubnetUtils.java\"\n public class org.apache.commons.net.util.SubnetUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/net/util/SubnetUtils\n-  super_class: #26                        // java/lang/Object\n+  super_class: #85                        // java/lang/Object\n   interfaces: 0, fields: 11, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Class              #96           // org/apache/commons/net/util/SubnetUtils\n-    #2 = Fieldref           #1.#97        // org/apache/commons/net/util/SubnetUtils.network:I\n-    #3 = Fieldref           #1.#98        // org/apache/commons/net/util/SubnetUtils.netmask:I\n-    #4 = Fieldref           #1.#99        // org/apache/commons/net/util/SubnetUtils.address:I\n-    #5 = Fieldref           #1.#100       // org/apache/commons/net/util/SubnetUtils.broadcast:I\n-    #6 = Methodref          #1.#101       // org/apache/commons/net/util/SubnetUtils.toInteger:(Ljava/lang/String;)I\n-    #7 = Methodref          #72.#102      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-    #8 = Methodref          #103.#104     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #9 = Methodref          #1.#105       // org/apache/commons/net/util/SubnetUtils.rangeCheck:(III)I\n-   #10 = Class              #106          // java/lang/IllegalArgumentException\n-   #11 = Class              #107          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#108      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #109          // Value [\n-   #14 = Methodref          #11.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#111      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #16 = String             #112          // ] not in range [\n-   #17 = String             #113          // ,\n-   #18 = String             #114          // ]\n-   #19 = Methodref          #11.#115      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = Methodref          #10.#116      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Fieldref           #1.#117       // org/apache/commons/net/util/SubnetUtils.ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n-   #22 = Methodref          #118.#119     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #23 = Methodref          #72.#120      // java/util/regex/Matcher.matches:()Z\n-   #24 = Methodref          #1.#121       // org/apache/commons/net/util/SubnetUtils.matchAddress:(Ljava/util/regex/Matcher;)I\n-   #25 = String             #122          // Could not parse [%s]\n-   #26 = Class              #123          // java/lang/Object\n-   #27 = Methodref          #75.#124      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #28 = Methodref          #26.#108      // java/lang/Object.\"<init>\":()V\n-   #29 = Fieldref           #1.#125       // org/apache/commons/net/util/SubnetUtils.CIDR_PATTERN:Ljava/util/regex/Pattern;\n-   #30 = Long               4294967295l\n-   #32 = Class              #126          // org/apache/commons/net/util/SubnetUtils$SubnetInfo\n-   #33 = Methodref          #32.#127      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-   #34 = Methodref          #1.#128       // org/apache/commons/net/util/SubnetUtils.getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-   #35 = Methodref          #32.#129      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n-   #36 = Methodref          #32.#130      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-   #37 = Methodref          #1.#131       // org/apache/commons/net/util/SubnetUtils.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #38 = Methodref          #32.#132      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n-   #39 = Fieldref           #1.#133       // org/apache/commons/net/util/SubnetUtils.inclusiveHostCount:Z\n-   #40 = String             #134          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-   #41 = Methodref          #118.#135     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #42 = String             #136          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-   #43 = Class              #137          // org/apache/commons/net/util/SubnetUtils$1\n-   #44 = Utf8               InnerClasses\n-   #45 = Utf8               SubnetInfo\n-   #46 = Utf8               IP_ADDRESS\n-   #47 = Utf8               Ljava/lang/String;\n-   #48 = Utf8               ConstantValue\n-   #49 = Utf8               SLASH_FORMAT\n-   #50 = Utf8               ADDRESS_PATTERN\n-   #51 = Utf8               Ljava/util/regex/Pattern;\n-   #52 = Utf8               CIDR_PATTERN\n-   #53 = Utf8               NBITS\n-   #54 = Utf8               I\n-   #55 = Integer            32\n-   #56 = Utf8               PARSE_FAIL\n-   #57 = Utf8               netmask\n-   #58 = Utf8               address\n-   #59 = Utf8               network\n-   #60 = Utf8               broadcast\n-   #61 = Utf8               inclusiveHostCount\n-   #62 = Utf8               Z\n-   #63 = Utf8               matchAddress\n-   #64 = Utf8               (Ljava/util/regex/Matcher;)I\n-   #65 = Utf8               Code\n-   #66 = Utf8               LineNumberTable\n-   #67 = Utf8               StackMapTable\n-   #68 = Utf8               rangeCheck\n-   #69 = Utf8               (III)I\n-   #70 = Utf8               toInteger\n-   #71 = Utf8               (Ljava/lang/String;)I\n-   #72 = Class              #138          // java/util/regex/Matcher\n-   #73 = Utf8               <init>\n-   #74 = Utf8               (Ljava/lang/String;)V\n-   #75 = Class              #139          // java/lang/String\n-   #76 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #77 = Utf8               getInfo\n-   #78 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-   #79 = Utf8               getNext\n-   #80 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils;\n-   #81 = Utf8               getPrevious\n-   #82 = Utf8               isInclusiveHostCount\n-   #83 = Utf8               ()Z\n-   #84 = Utf8               setInclusiveHostCount\n-   #85 = Utf8               (Z)V\n-   #86 = Utf8               access$000\n-   #87 = Utf8               access$100\n-   #88 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;)I\n-   #89 = Utf8               access$200\n-   #90 = Utf8               access$300\n-   #91 = Utf8               access$400\n-   #92 = Utf8               <clinit>\n-   #93 = Utf8               ()V\n-   #94 = Utf8               SourceFile\n-   #95 = Utf8               SubnetUtils.java\n-   #96 = Utf8               org/apache/commons/net/util/SubnetUtils\n-   #97 = NameAndType        #59:#54       // network:I\n-   #98 = NameAndType        #57:#54       // netmask:I\n-   #99 = NameAndType        #58:#54       // address:I\n-  #100 = NameAndType        #60:#54       // broadcast:I\n-  #101 = NameAndType        #70:#71       // toInteger:(Ljava/lang/String;)I\n-  #102 = NameAndType        #140:#141     // group:(I)Ljava/lang/String;\n-  #103 = Class              #142          // java/lang/Integer\n-  #104 = NameAndType        #143:#71      // parseInt:(Ljava/lang/String;)I\n-  #105 = NameAndType        #68:#69       // rangeCheck:(III)I\n-  #106 = Utf8               java/lang/IllegalArgumentException\n-  #107 = Utf8               java/lang/StringBuilder\n-  #108 = NameAndType        #73:#93       // \"<init>\":()V\n-  #109 = Utf8               Value [\n-  #110 = NameAndType        #144:#145     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #144:#146     // append:(I)Ljava/lang/StringBuilder;\n-  #112 = Utf8               ] not in range [\n-  #113 = Utf8               ,\n-  #114 = Utf8               ]\n-  #115 = NameAndType        #147:#148     // toString:()Ljava/lang/String;\n-  #116 = NameAndType        #73:#74       // \"<init>\":(Ljava/lang/String;)V\n-  #117 = NameAndType        #50:#51       // ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n-  #118 = Class              #149          // java/util/regex/Pattern\n-  #119 = NameAndType        #150:#151     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #120 = NameAndType        #152:#83      // matches:()Z\n-  #121 = NameAndType        #63:#64       // matchAddress:(Ljava/util/regex/Matcher;)I\n-  #122 = Utf8               Could not parse [%s]\n-  #123 = Utf8               java/lang/Object\n-  #124 = NameAndType        #153:#154     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #125 = NameAndType        #52:#51       // CIDR_PATTERN:Ljava/util/regex/Pattern;\n-  #126 = Utf8               org/apache/commons/net/util/SubnetUtils$SubnetInfo\n-  #127 = NameAndType        #73:#155      // \"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-  #128 = NameAndType        #77:#78       // getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-  #129 = NameAndType        #156:#148     // getNextAddress:()Ljava/lang/String;\n-  #130 = NameAndType        #157:#148     // getNetmask:()Ljava/lang/String;\n-  #131 = NameAndType        #73:#76       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #132 = NameAndType        #158:#148     // getPreviousAddress:()Ljava/lang/String;\n-  #133 = NameAndType        #61:#62       // inclusiveHostCount:Z\n-  #134 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-  #135 = NameAndType        #159:#160     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #136 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-  #137 = Utf8               org/apache/commons/net/util/SubnetUtils$1\n-  #138 = Utf8               java/util/regex/Matcher\n-  #139 = Utf8               java/lang/String\n-  #140 = Utf8               group\n-  #141 = Utf8               (I)Ljava/lang/String;\n-  #142 = Utf8               java/lang/Integer\n-  #143 = Utf8               parseInt\n-  #144 = Utf8               append\n-  #145 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #146 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #147 = Utf8               toString\n-  #148 = Utf8               ()Ljava/lang/String;\n-  #149 = Utf8               java/util/regex/Pattern\n-  #150 = Utf8               matcher\n-  #151 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #152 = Utf8               matches\n-  #153 = Utf8               format\n-  #154 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #155 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n-  #156 = Utf8               getNextAddress\n-  #157 = Utf8               getNetmask\n-  #158 = Utf8               getPreviousAddress\n-  #159 = Utf8               compile\n-  #160 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #1 = Class              #2            // org/apache/commons/net/util/SubnetUtils\n+    #2 = Utf8               org/apache/commons/net/util/SubnetUtils\n+    #3 = Fieldref           #1.#4         // org/apache/commons/net/util/SubnetUtils.network:I\n+    #4 = NameAndType        #5:#6         // network:I\n+    #5 = Utf8               network\n+    #6 = Utf8               I\n+    #7 = Fieldref           #1.#8         // org/apache/commons/net/util/SubnetUtils.netmask:I\n+    #8 = NameAndType        #9:#6         // netmask:I\n+    #9 = Utf8               netmask\n+   #10 = Fieldref           #1.#11        // org/apache/commons/net/util/SubnetUtils.address:I\n+   #11 = NameAndType        #12:#6        // address:I\n+   #12 = Utf8               address\n+   #13 = Fieldref           #1.#14        // org/apache/commons/net/util/SubnetUtils.broadcast:I\n+   #14 = NameAndType        #15:#6        // broadcast:I\n+   #15 = Utf8               broadcast\n+   #16 = Methodref          #1.#17        // org/apache/commons/net/util/SubnetUtils.toInteger:(Ljava/lang/String;)I\n+   #17 = NameAndType        #18:#19       // toInteger:(Ljava/lang/String;)I\n+   #18 = Utf8               toInteger\n+   #19 = Utf8               (Ljava/lang/String;)I\n+   #20 = Methodref          #21.#22       // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #21 = Class              #23           // java/util/regex/Matcher\n+   #22 = NameAndType        #24:#25       // group:(I)Ljava/lang/String;\n+   #23 = Utf8               java/util/regex/Matcher\n+   #24 = Utf8               group\n+   #25 = Utf8               (I)Ljava/lang/String;\n+   #26 = Methodref          #27.#28       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #27 = Class              #29           // java/lang/Integer\n+   #28 = NameAndType        #30:#19       // parseInt:(Ljava/lang/String;)I\n+   #29 = Utf8               java/lang/Integer\n+   #30 = Utf8               parseInt\n+   #31 = Methodref          #1.#32        // org/apache/commons/net/util/SubnetUtils.rangeCheck:(III)I\n+   #32 = NameAndType        #33:#34       // rangeCheck:(III)I\n+   #33 = Utf8               rangeCheck\n+   #34 = Utf8               (III)I\n+   #35 = Class              #36           // java/lang/IllegalArgumentException\n+   #36 = Utf8               java/lang/IllegalArgumentException\n+   #37 = Class              #38           // java/lang/StringBuilder\n+   #38 = Utf8               java/lang/StringBuilder\n+   #39 = Methodref          #37.#40       // java/lang/StringBuilder.\"<init>\":()V\n+   #40 = NameAndType        #41:#42       // \"<init>\":()V\n+   #41 = Utf8               <init>\n+   #42 = Utf8               ()V\n+   #43 = String             #44           // Value [\n+   #44 = Utf8               Value [\n+   #45 = Methodref          #37.#46       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #46 = NameAndType        #47:#48       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #47 = Utf8               append\n+   #48 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = Methodref          #37.#50       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #50 = NameAndType        #47:#51       // append:(I)Ljava/lang/StringBuilder;\n+   #51 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #52 = String             #53           // ] not in range [\n+   #53 = Utf8               ] not in range [\n+   #54 = String             #55           // ,\n+   #55 = Utf8               ,\n+   #56 = String             #57           // ]\n+   #57 = Utf8               ]\n+   #58 = Methodref          #37.#59       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #59 = NameAndType        #60:#61       // toString:()Ljava/lang/String;\n+   #60 = Utf8               toString\n+   #61 = Utf8               ()Ljava/lang/String;\n+   #62 = Methodref          #35.#63       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #63 = NameAndType        #41:#64       // \"<init>\":(Ljava/lang/String;)V\n+   #64 = Utf8               (Ljava/lang/String;)V\n+   #65 = Fieldref           #1.#66        // org/apache/commons/net/util/SubnetUtils.ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n+   #66 = NameAndType        #67:#68       // ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n+   #67 = Utf8               ADDRESS_PATTERN\n+   #68 = Utf8               Ljava/util/regex/Pattern;\n+   #69 = Methodref          #70.#71       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #70 = Class              #72           // java/util/regex/Pattern\n+   #71 = NameAndType        #73:#74       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #72 = Utf8               java/util/regex/Pattern\n+   #73 = Utf8               matcher\n+   #74 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #75 = Methodref          #21.#76       // java/util/regex/Matcher.matches:()Z\n+   #76 = NameAndType        #77:#78       // matches:()Z\n+   #77 = Utf8               matches\n+   #78 = Utf8               ()Z\n+   #79 = Methodref          #1.#80        // org/apache/commons/net/util/SubnetUtils.matchAddress:(Ljava/util/regex/Matcher;)I\n+   #80 = NameAndType        #81:#82       // matchAddress:(Ljava/util/regex/Matcher;)I\n+   #81 = Utf8               matchAddress\n+   #82 = Utf8               (Ljava/util/regex/Matcher;)I\n+   #83 = String             #84           // Could not parse [%s]\n+   #84 = Utf8               Could not parse [%s]\n+   #85 = Class              #86           // java/lang/Object\n+   #86 = Utf8               java/lang/Object\n+   #87 = Methodref          #88.#89       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #88 = Class              #90           // java/lang/String\n+   #89 = NameAndType        #91:#92       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #90 = Utf8               java/lang/String\n+   #91 = Utf8               format\n+   #92 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #93 = Methodref          #85.#40       // java/lang/Object.\"<init>\":()V\n+   #94 = Fieldref           #1.#95        // org/apache/commons/net/util/SubnetUtils.CIDR_PATTERN:Ljava/util/regex/Pattern;\n+   #95 = NameAndType        #96:#68       // CIDR_PATTERN:Ljava/util/regex/Pattern;\n+   #96 = Utf8               CIDR_PATTERN\n+   #97 = Long               4294967295l\n+   #99 = Class              #100          // org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+  #100 = Utf8               org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+  #101 = Methodref          #99.#102      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+  #102 = NameAndType        #41:#103      // \"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+  #103 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+  #104 = Methodref          #1.#105       // org/apache/commons/net/util/SubnetUtils.getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #105 = NameAndType        #106:#107     // getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #106 = Utf8               getInfo\n+  #107 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+  #108 = Methodref          #99.#109      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n+  #109 = NameAndType        #110:#61      // getNextAddress:()Ljava/lang/String;\n+  #110 = Utf8               getNextAddress\n+  #111 = Methodref          #99.#112      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+  #112 = NameAndType        #113:#61      // getNetmask:()Ljava/lang/String;\n+  #113 = Utf8               getNetmask\n+  #114 = Methodref          #1.#115       // org/apache/commons/net/util/SubnetUtils.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #115 = NameAndType        #41:#116      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #116 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #117 = Methodref          #99.#118      // org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n+  #118 = NameAndType        #119:#61      // getPreviousAddress:()Ljava/lang/String;\n+  #119 = Utf8               getPreviousAddress\n+  #120 = Fieldref           #1.#121       // org/apache/commons/net/util/SubnetUtils.inclusiveHostCount:Z\n+  #121 = NameAndType        #122:#123     // inclusiveHostCount:Z\n+  #122 = Utf8               inclusiveHostCount\n+  #123 = Utf8               Z\n+  #124 = String             #125          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+  #125 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+  #126 = Methodref          #70.#127      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #127 = NameAndType        #128:#129     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #128 = Utf8               compile\n+  #129 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #130 = String             #131          // (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+  #131 = Utf8               (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+  #132 = Utf8               IP_ADDRESS\n+  #133 = Utf8               Ljava/lang/String;\n+  #134 = Utf8               ConstantValue\n+  #135 = Utf8               SLASH_FORMAT\n+  #136 = Utf8               NBITS\n+  #137 = Integer            32\n+  #138 = Utf8               PARSE_FAIL\n+  #139 = Utf8               Code\n+  #140 = Utf8               LineNumberTable\n+  #141 = Utf8               StackMapTable\n+  #142 = Utf8               getNext\n+  #143 = Utf8               ()Lorg/apache/commons/net/util/SubnetUtils;\n+  #144 = Utf8               getPrevious\n+  #145 = Utf8               isInclusiveHostCount\n+  #146 = Utf8               setInclusiveHostCount\n+  #147 = Utf8               (Z)V\n+  #148 = Utf8               access$000\n+  #149 = Utf8               access$100\n+  #150 = Utf8               (Lorg/apache/commons/net/util/SubnetUtils;)I\n+  #151 = Utf8               access$200\n+  #152 = Utf8               access$300\n+  #153 = Utf8               access$400\n+  #154 = Utf8               <clinit>\n+  #155 = Utf8               SourceFile\n+  #156 = Utf8               SubnetUtils.java\n+  #157 = Utf8               InnerClasses\n+  #158 = Utf8               SubnetInfo\n+  #159 = Class              #160          // org/apache/commons/net/util/SubnetUtils$1\n+  #160 = Utf8               org/apache/commons/net/util/SubnetUtils$1\n {\n   private static final java.lang.String IP_ADDRESS = \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n \n   private static final java.lang.String SLASH_FORMAT = \"(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\";\n@@ -226,19 +226,19 @@\n          2: iconst_1\n          3: istore_2\n          4: iload_2\n          5: iconst_4\n          6: if_icmpgt     46\n          9: aload_0\n         10: iload_2\n-        11: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-        14: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        11: invokevirtual #20                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        14: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         17: iconst_0\n         18: sipush        255\n-        21: invokestatic  #9                  // Method rangeCheck:(III)I\n+        21: invokestatic  #31                 // Method rangeCheck:(III)I\n         24: istore_3\n         25: iload_1\n         26: iload_3\n         27: sipush        255\n         30: iand\n         31: bipush        8\n         33: iconst_4\n@@ -275,69 +275,69 @@\n          1: iload_1\n          2: if_icmplt     12\n          5: iload_0\n          6: iload_2\n          7: if_icmpgt     12\n         10: iload_0\n         11: ireturn\n-        12: new           #10                 // class java/lang/IllegalArgumentException\n+        12: new           #35                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: new           #11                 // class java/lang/StringBuilder\n+        16: new           #37                 // class java/lang/StringBuilder\n         19: dup\n-        20: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        23: ldc           #13                 // String Value [\n-        25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        23: ldc           #43                 // String Value [\n+        25: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: iload_0\n-        29: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        32: ldc           #16                 // String ] not in range [\n-        34: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        32: ldc           #52                 // String ] not in range [\n+        34: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: iload_1\n-        38: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        41: ldc           #17                 // String ,\n-        43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc           #54                 // String ,\n+        43: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: iload_2\n-        47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        50: ldc           #18                 // String ]\n-        52: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        55: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        58: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #56                 // String ]\n+        52: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        58: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         61: athrow\n       LineNumberTable:\n         line 251: 0\n         line 252: 10\n         line 254: 12\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n \n   private static int toInteger(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=1\n-         0: getstatic     #21                 // Field ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n+         0: getstatic     #65                 // Field ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n          3: aload_0\n-         4: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         4: invokevirtual #69                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n          7: astore_1\n          8: aload_1\n-         9: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z\n+         9: invokevirtual #75                 // Method java/util/regex/Matcher.matches:()Z\n         12: ifeq          20\n         15: aload_1\n-        16: invokestatic  #24                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n+        16: invokestatic  #79                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n         19: ireturn\n-        20: new           #10                 // class java/lang/IllegalArgumentException\n+        20: new           #35                 // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #25                 // String Could not parse [%s]\n+        24: ldc           #83                 // String Could not parse [%s]\n         26: iconst_1\n-        27: anewarray     #26                 // class java/lang/Object\n+        27: anewarray     #85                 // class java/lang/Object\n         30: dup\n         31: iconst_0\n         32: aload_0\n         33: aastore\n-        34: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        37: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        37: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n       LineNumberTable:\n         line 261: 0\n         line 262: 8\n         line 263: 15\n         line 265: 20\n       StackMapTable: number_of_entries = 1\n@@ -347,70 +347,70 @@\n \n   public org.apache.commons.net.util.SubnetUtils(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=2\n          0: aload_0\n-         1: invokespecial #28                 // Method java/lang/Object.\"<init>\":()V\n-         4: getstatic     #29                 // Field CIDR_PATTERN:Ljava/util/regex/Pattern;\n+         1: invokespecial #93                 // Method java/lang/Object.\"<init>\":()V\n+         4: getstatic     #94                 // Field CIDR_PATTERN:Ljava/util/regex/Pattern;\n          7: aload_1\n-         8: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #69                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         11: astore_2\n         12: aload_2\n-        13: invokevirtual #23                 // Method java/util/regex/Matcher.matches:()Z\n+        13: invokevirtual #75                 // Method java/util/regex/Matcher.matches:()Z\n         16: ifne          40\n-        19: new           #10                 // class java/lang/IllegalArgumentException\n+        19: new           #35                 // class java/lang/IllegalArgumentException\n         22: dup\n-        23: ldc           #25                 // String Could not parse [%s]\n+        23: ldc           #83                 // String Could not parse [%s]\n         25: iconst_1\n-        26: anewarray     #26                 // class java/lang/Object\n+        26: anewarray     #85                 // class java/lang/Object\n         29: dup\n         30: iconst_0\n         31: aload_1\n         32: aastore\n-        33: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        36: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        36: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload_0\n         41: aload_2\n-        42: invokestatic  #24                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n-        45: putfield      #4                  // Field address:I\n+        42: invokestatic  #79                 // Method matchAddress:(Ljava/util/regex/Matcher;)I\n+        45: putfield      #10                 // Field address:I\n         48: bipush        32\n         50: aload_2\n         51: iconst_5\n-        52: invokevirtual #7                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-        55: invokestatic  #8                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        52: invokevirtual #20                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        55: invokestatic  #26                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         58: iconst_0\n         59: bipush        32\n-        61: invokestatic  #9                  // Method rangeCheck:(III)I\n+        61: invokestatic  #31                 // Method rangeCheck:(III)I\n         64: isub\n         65: istore_3\n         66: aload_0\n-        67: ldc2_w        #30                 // long 4294967295l\n+        67: ldc2_w        #97                 // long 4294967295l\n         70: iload_3\n         71: lshl\n         72: l2i\n-        73: putfield      #3                  // Field netmask:I\n+        73: putfield      #7                  // Field netmask:I\n         76: aload_0\n         77: aload_0\n-        78: getfield      #4                  // Field address:I\n+        78: getfield      #10                 // Field address:I\n         81: aload_0\n-        82: getfield      #3                  // Field netmask:I\n+        82: getfield      #7                  // Field netmask:I\n         85: iand\n-        86: putfield      #2                  // Field network:I\n+        86: putfield      #3                  // Field network:I\n         89: aload_0\n         90: aload_0\n-        91: getfield      #2                  // Field network:I\n+        91: getfield      #3                  // Field network:I\n         94: aload_0\n-        95: getfield      #3                  // Field netmask:I\n+        95: getfield      #7                  // Field netmask:I\n         98: iconst_m1\n         99: ixor\n        100: ior\n-       101: putfield      #5                  // Field broadcast:I\n+       101: putfield      #13                 // Field broadcast:I\n        104: return\n       LineNumberTable:\n         line 286: 0\n         line 287: 4\n         line 289: 12\n         line 290: 19\n         line 292: 40\n@@ -427,64 +427,64 @@\n \n   public org.apache.commons.net.util.SubnetUtils(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #28                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #93                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #6                  // Method toInteger:(Ljava/lang/String;)I\n-         9: putfield      #4                  // Field address:I\n+         6: invokestatic  #16                 // Method toInteger:(Ljava/lang/String;)I\n+         9: putfield      #10                 // Field address:I\n         12: aload_0\n         13: aload_2\n-        14: invokestatic  #6                  // Method toInteger:(Ljava/lang/String;)I\n-        17: putfield      #3                  // Field netmask:I\n+        14: invokestatic  #16                 // Method toInteger:(Ljava/lang/String;)I\n+        17: putfield      #7                  // Field netmask:I\n         20: aload_0\n-        21: getfield      #3                  // Field netmask:I\n+        21: getfield      #7                  // Field netmask:I\n         24: aload_0\n-        25: getfield      #3                  // Field netmask:I\n+        25: getfield      #7                  // Field netmask:I\n         28: ineg\n         29: iand\n         30: iconst_1\n         31: isub\n         32: aload_0\n-        33: getfield      #3                  // Field netmask:I\n+        33: getfield      #7                  // Field netmask:I\n         36: iconst_m1\n         37: ixor\n         38: if_icmpeq     62\n-        41: new           #10                 // class java/lang/IllegalArgumentException\n+        41: new           #35                 // class java/lang/IllegalArgumentException\n         44: dup\n-        45: ldc           #25                 // String Could not parse [%s]\n+        45: ldc           #83                 // String Could not parse [%s]\n         47: iconst_1\n-        48: anewarray     #26                 // class java/lang/Object\n+        48: anewarray     #85                 // class java/lang/Object\n         51: dup\n         52: iconst_0\n         53: aload_2\n         54: aastore\n-        55: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        58: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        55: invokestatic  #87                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        58: invokespecial #62                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         61: athrow\n         62: aload_0\n         63: aload_0\n-        64: getfield      #4                  // Field address:I\n+        64: getfield      #10                 // Field address:I\n         67: aload_0\n-        68: getfield      #3                  // Field netmask:I\n+        68: getfield      #7                  // Field netmask:I\n         71: iand\n-        72: putfield      #2                  // Field network:I\n+        72: putfield      #3                  // Field network:I\n         75: aload_0\n         76: aload_0\n-        77: getfield      #2                  // Field network:I\n+        77: getfield      #3                  // Field network:I\n         80: aload_0\n-        81: getfield      #3                  // Field netmask:I\n+        81: getfield      #7                  // Field netmask:I\n         84: iconst_m1\n         85: ixor\n         86: ior\n-        87: putfield      #5                  // Field broadcast:I\n+        87: putfield      #13                 // Field broadcast:I\n         90: return\n       LineNumberTable:\n         line 322: 0\n         line 323: 4\n         line 324: 12\n         line 326: 20\n         line 327: 41\n@@ -498,151 +498,151 @@\n           stack = []\n \n   public final org.apache.commons.net.util.SubnetUtils$SubnetInfo getInfo();\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #32                 // class org/apache/commons/net/util/SubnetUtils$SubnetInfo\n+         0: new           #99                 // class org/apache/commons/net/util/SubnetUtils$SubnetInfo\n          3: dup\n          4: aload_0\n          5: aconst_null\n-         6: invokespecial #33                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n+         6: invokespecial #101                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.\"<init>\":(Lorg/apache/commons/net/util/SubnetUtils;Lorg/apache/commons/net/util/SubnetUtils$1;)V\n          9: areturn\n       LineNumberTable:\n         line 343: 0\n \n   public org.apache.commons.net.util.SubnetUtils getNext();\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: new           #1                  // class org/apache/commons/net/util/SubnetUtils\n          3: dup\n          4: aload_0\n-         5: invokevirtual #34                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-         8: invokevirtual #35                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n+         5: invokevirtual #104                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+         8: invokevirtual #108                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNextAddress:()Ljava/lang/String;\n         11: aload_0\n-        12: invokevirtual #34                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-        15: invokevirtual #36                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-        18: invokespecial #37                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        12: invokevirtual #104                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+        15: invokevirtual #111                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+        18: invokespecial #114                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         21: areturn\n       LineNumberTable:\n         line 347: 0\n \n   public org.apache.commons.net.util.SubnetUtils getPrevious();\n     descriptor: ()Lorg/apache/commons/net/util/SubnetUtils;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: new           #1                  // class org/apache/commons/net/util/SubnetUtils\n          3: dup\n          4: aload_0\n-         5: invokevirtual #34                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-         8: invokevirtual #38                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n+         5: invokevirtual #104                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+         8: invokevirtual #117                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getPreviousAddress:()Ljava/lang/String;\n         11: aload_0\n-        12: invokevirtual #34                 // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n-        15: invokevirtual #36                 // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n-        18: invokespecial #37                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        12: invokevirtual #104                // Method getInfo:()Lorg/apache/commons/net/util/SubnetUtils$SubnetInfo;\n+        15: invokevirtual #111                // Method org/apache/commons/net/util/SubnetUtils$SubnetInfo.getNetmask:()Ljava/lang/String;\n+        18: invokespecial #114                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         21: areturn\n       LineNumberTable:\n         line 351: 0\n \n   public boolean isInclusiveHostCount();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #39                 // Field inclusiveHostCount:Z\n+         1: getfield      #120                // Field inclusiveHostCount:Z\n          4: ireturn\n       LineNumberTable:\n         line 361: 0\n \n   public void setInclusiveHostCount(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #39                 // Field inclusiveHostCount:Z\n+         2: putfield      #120                // Field inclusiveHostCount:Z\n          5: return\n       LineNumberTable:\n         line 372: 0\n         line 373: 5\n \n   static int access$000(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #6                  // Method toInteger:(Ljava/lang/String;)I\n+         1: invokestatic  #16                 // Method toInteger:(Ljava/lang/String;)I\n          4: ireturn\n       LineNumberTable:\n         line 28: 0\n \n   static int access$100(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field broadcast:I\n+         1: getfield      #13                 // Field broadcast:I\n          4: ireturn\n       LineNumberTable:\n         line 28: 0\n \n   static int access$200(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field address:I\n+         1: getfield      #10                 // Field address:I\n          4: ireturn\n       LineNumberTable:\n         line 28: 0\n \n   static int access$300(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field netmask:I\n+         1: getfield      #7                  // Field netmask:I\n          4: ireturn\n       LineNumberTable:\n         line 28: 0\n \n   static int access$400(org.apache.commons.net.util.SubnetUtils);\n     descriptor: (Lorg/apache/commons/net/util/SubnetUtils;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field network:I\n+         1: getfield      #3                  // Field network:I\n          4: ireturn\n       LineNumberTable:\n         line 28: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #40                 // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n-         2: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         5: putstatic     #21                 // Field ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n-         8: ldc           #42                 // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n-        10: invokestatic  #41                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        13: putstatic     #29                 // Field CIDR_PATTERN:Ljava/util/regex/Pattern;\n+         0: ldc           #124                // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\n+         2: invokestatic  #126                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         5: putstatic     #65                 // Field ADDRESS_PATTERN:Ljava/util/regex/Pattern;\n+         8: ldc           #130                // String (\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})/(\\\\d{1,2})\n+        10: invokestatic  #126                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        13: putstatic     #94                 // Field CIDR_PATTERN:Ljava/util/regex/Pattern;\n         16: return\n       LineNumberTable:\n         line 228: 0\n         line 229: 8\n }\n SourceFile: \"SubnetUtils.java\"\n InnerClasses:\n-  static #43;                             // class org/apache/commons/net/util/SubnetUtils$1\n-  public final #45= #32 of #1;            // SubnetInfo=class org/apache/commons/net/util/SubnetUtils$SubnetInfo of class org/apache/commons/net/util/SubnetUtils\n+  public final #158= #99 of #1;           // SubnetInfo=class org/apache/commons/net/util/SubnetUtils$SubnetInfo of class org/apache/commons/net/util/SubnetUtils\n+  static #159;                            // class org/apache/commons/net/util/SubnetUtils$1\n"}]}
