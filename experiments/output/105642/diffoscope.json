{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum 842a017855038aa11af018625bc9f2f704cee746c4b2de74af9a8894cfa26da5\n+  SHA-256 checksum acc0ea52f9215c8cc1cba8bd301432572f527eed6b829be6c3e7afdef9aaaf21\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #26                         // org/apache/commons/io/filefilter/RegexFileFilter\n-  super_class: #31                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #1                          // org/apache/commons/io/filefilter/RegexFileFilter\n+  super_class: #3                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Class              #2            // java/lang/IllegalArgumentException\n-    #2 = Utf8               java/lang/IllegalArgumentException\n-    #3 = String             #4            // Pattern is missing\n-    #4 = Utf8               Pattern is missing\n-    #5 = Methodref          #1.#6         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #6 = NameAndType        #7:#8         // \"<init>\":(Ljava/lang/String;)V\n-    #7 = Utf8               <init>\n-    #8 = Utf8               (Ljava/lang/String;)V\n-    #9 = Methodref          #10.#11       // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #10 = Class              #12           // java/util/regex/Pattern\n-   #11 = NameAndType        #13:#14       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #12 = Utf8               java/util/regex/Pattern\n-   #13 = Utf8               compile\n-   #14 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #15 = Methodref          #16.#17       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-   #16 = Class              #18           // org/apache/commons/io/IOCase\n-   #17 = NameAndType        #19:#20       // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-   #18 = Utf8               org/apache/commons/io/IOCase\n-   #19 = Utf8               isCaseSensitive\n-   #20 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n-   #21 = InvokeDynamic      #0:#22        // #0:apply:()Ljava/util/function/Function;\n-   #22 = NameAndType        #23:#24       // apply:()Ljava/util/function/Function;\n-   #23 = Utf8               apply\n-   #24 = Utf8               ()Ljava/util/function/Function;\n-   #25 = Methodref          #26.#27       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #26 = Class              #28           // org/apache/commons/io/filefilter/RegexFileFilter\n-   #27 = NameAndType        #7:#29        // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #28 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-   #29 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #30 = Methodref          #31.#32       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #31 = Class              #33           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #32 = NameAndType        #7:#34        // \"<init>\":()V\n-   #33 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #34 = Utf8               ()V\n-   #35 = Fieldref           #26.#36       // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #36 = NameAndType        #37:#38       // pattern:Ljava/util/regex/Pattern;\n-   #37 = Utf8               pattern\n-   #38 = Utf8               Ljava/util/regex/Pattern;\n-   #39 = Fieldref           #26.#40       // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n-   #40 = NameAndType        #41:#42       // pathToString:Ljava/util/function/Function;\n-   #41 = Utf8               pathToString\n-   #42 = Utf8               Ljava/util/function/Function;\n-   #43 = Methodref          #26.#44       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n-   #44 = NameAndType        #7:#45        // \"<init>\":(Ljava/lang/String;I)V\n-   #45 = Utf8               (Ljava/lang/String;I)V\n-   #46 = Methodref          #26.#11       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #47 = Methodref          #26.#48       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n-   #48 = NameAndType        #7:#49        // \"<init>\":(Ljava/util/regex/Pattern;)V\n+    #1 = Class              #2            // org/apache/commons/io/filefilter/RegexFileFilter\n+    #2 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+    #3 = Class              #4            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #5 = Class              #6            // java/io/Serializable\n+    #6 = Utf8               java/io/Serializable\n+    #7 = Utf8               serialVersionUID\n+    #8 = Utf8               J\n+    #9 = Utf8               ConstantValue\n+   #10 = Long               4269646126155225062l\n+   #12 = Utf8               pattern\n+   #13 = Utf8               Ljava/util/regex/Pattern;\n+   #14 = Utf8               pathToString\n+   #15 = Utf8               Ljava/util/function/Function;\n+   #16 = Utf8               Signature\n+   #17 = Utf8               Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n+   #18 = Utf8               compile\n+   #19 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #20 = Utf8               Code\n+   #21 = Class              #22           // java/lang/IllegalArgumentException\n+   #22 = Utf8               java/lang/IllegalArgumentException\n+   #23 = String             #24           // Pattern is missing\n+   #24 = Utf8               Pattern is missing\n+   #25 = Methodref          #21.#26       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = NameAndType        #27:#28       // \"<init>\":(Ljava/lang/String;)V\n+   #27 = Utf8               <init>\n+   #28 = Utf8               (Ljava/lang/String;)V\n+   #29 = Methodref          #30.#32       // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #30 = Class              #31           // java/util/regex/Pattern\n+   #31 = Utf8               java/util/regex/Pattern\n+   #32 = NameAndType        #18:#19       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #33 = Utf8               LineNumberTable\n+   #34 = Utf8               LocalVariableTable\n+   #35 = Utf8               Ljava/lang/String;\n+   #36 = Utf8               flags\n+   #37 = Utf8               I\n+   #38 = Utf8               StackMapTable\n+   #39 = Utf8               toFlags\n+   #40 = Utf8               (Lorg/apache/commons/io/IOCase;)I\n+   #41 = Methodref          #42.#44       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #42 = Class              #43           // org/apache/commons/io/IOCase\n+   #43 = Utf8               org/apache/commons/io/IOCase\n+   #44 = NameAndType        #45:#46       // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #45 = Utf8               isCaseSensitive\n+   #46 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n+   #47 = Utf8               caseSensitivity\n+   #48 = Utf8               Lorg/apache/commons/io/IOCase;\n    #49 = Utf8               (Ljava/util/regex/Pattern;)V\n-   #50 = Methodref          #26.#51       // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #51 = NameAndType        #52:#53       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #52 = Utf8               toFlags\n-   #53 = Utf8               (Lorg/apache/commons/io/IOCase;)I\n-   #54 = Methodref          #10.#55       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #55 = NameAndType        #56:#57       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #56 = Utf8               matcher\n-   #57 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #58 = Methodref          #59.#60       // java/util/regex/Matcher.matches:()Z\n-   #59 = Class              #61           // java/util/regex/Matcher\n-   #60 = NameAndType        #62:#63       // matches:()Z\n-   #61 = Utf8               java/util/regex/Matcher\n-   #62 = Utf8               matches\n-   #63 = Utf8               ()Z\n-   #64 = InterfaceMethodref #65.#66       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #65 = Class              #67           // java/util/function/Function\n-   #66 = NameAndType        #23:#68       // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #67 = Utf8               java/util/function/Function\n-   #68 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #69 = Class              #70           // java/lang/CharSequence\n-   #70 = Utf8               java/lang/CharSequence\n-   #71 = Methodref          #26.#72       // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #72 = NameAndType        #73:#74       // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #73 = Utf8               toFileVisitResult\n-   #74 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #75 = Class              #76           // java/lang/StringBuilder\n-   #76 = Utf8               java/lang/StringBuilder\n-   #77 = Methodref          #75.#32       // java/lang/StringBuilder.\"<init>\":()V\n-   #78 = String             #79           // RegexFileFilter [pattern=\n-   #79 = Utf8               RegexFileFilter [pattern=\n-   #80 = Methodref          #75.#81       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #81 = NameAndType        #82:#83       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #82 = Utf8               append\n-   #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #84 = Methodref          #75.#85       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #85 = NameAndType        #82:#86       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #87 = String             #88           // ]\n-   #88 = Utf8               ]\n-   #89 = Methodref          #75.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #90 = NameAndType        #91:#92       // toString:()Ljava/lang/String;\n-   #91 = Utf8               toString\n-   #92 = Utf8               ()Ljava/lang/String;\n-   #93 = InterfaceMethodref #94.#95       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #94 = Class              #96           // java/nio/file/Path\n-   #95 = NameAndType        #97:#98       // getFileName:()Ljava/nio/file/Path;\n-   #96 = Utf8               java/nio/file/Path\n-   #97 = Utf8               getFileName\n-   #98 = Utf8               ()Ljava/nio/file/Path;\n-   #99 = InterfaceMethodref #94.#90       // java/nio/file/Path.toString:()Ljava/lang/String;\n-  #100 = Class              #101          // java/io/Serializable\n-  #101 = Utf8               java/io/Serializable\n-  #102 = Utf8               serialVersionUID\n-  #103 = Utf8               J\n-  #104 = Utf8               ConstantValue\n-  #105 = Long               4269646126155225062l\n-  #107 = Utf8               Signature\n-  #108 = Utf8               Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n-  #109 = Utf8               Code\n-  #110 = Utf8               LineNumberTable\n-  #111 = Utf8               LocalVariableTable\n-  #112 = Utf8               Ljava/lang/String;\n-  #113 = Utf8               flags\n-  #114 = Utf8               I\n-  #115 = Utf8               StackMapTable\n-  #116 = Utf8               caseSensitivity\n-  #117 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #118 = Utf8               this\n-  #119 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n-  #120 = Utf8               LocalVariableTypeTable\n-  #121 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n-  #122 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #123 = Utf8               accept\n-  #124 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #125 = Utf8               dir\n-  #126 = Utf8               Ljava/io/File;\n-  #127 = Utf8               name\n-  #128 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #129 = Utf8               path\n-  #130 = Utf8               Ljava/nio/file/Path;\n-  #131 = Utf8               attributes\n-  #132 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #133 = Utf8               lambda$new$0\n-  #134 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+   #50 = InvokeDynamic      #0:#51        // #0:apply:()Ljava/util/function/Function;\n+   #51 = NameAndType        #52:#53       // apply:()Ljava/util/function/Function;\n+   #52 = Utf8               apply\n+   #53 = Utf8               ()Ljava/util/function/Function;\n+   #54 = Methodref          #1.#55        // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #55 = NameAndType        #27:#56       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #56 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #57 = Utf8               this\n+   #58 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n+   #59 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+   #60 = Methodref          #3.#61        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #61 = NameAndType        #27:#62       // \"<init>\":()V\n+   #62 = Utf8               ()V\n+   #63 = Fieldref           #1.#64        // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #64 = NameAndType        #12:#13       // pattern:Ljava/util/regex/Pattern;\n+   #65 = Fieldref           #1.#66        // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n+   #66 = NameAndType        #14:#15       // pathToString:Ljava/util/function/Function;\n+   #67 = Utf8               LocalVariableTypeTable\n+   #68 = Class              #69           // java/util/function/Function\n+   #69 = Utf8               java/util/function/Function\n+   #70 = Methodref          #1.#71        // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n+   #71 = NameAndType        #27:#72       // \"<init>\":(Ljava/lang/String;I)V\n+   #72 = Utf8               (Ljava/lang/String;I)V\n+   #73 = Methodref          #1.#32        // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #74 = Methodref          #1.#75        // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n+   #75 = NameAndType        #27:#49       // \"<init>\":(Ljava/util/regex/Pattern;)V\n+   #76 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #77 = Methodref          #1.#78        // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #78 = NameAndType        #39:#40       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #79 = Utf8               accept\n+   #80 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #81 = Methodref          #30.#82       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #82 = NameAndType        #83:#84       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #83 = Utf8               matcher\n+   #84 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #85 = Methodref          #86.#88       // java/util/regex/Matcher.matches:()Z\n+   #86 = Class              #87           // java/util/regex/Matcher\n+   #87 = Utf8               java/util/regex/Matcher\n+   #88 = NameAndType        #89:#90       // matches:()Z\n+   #89 = Utf8               matches\n+   #90 = Utf8               ()Z\n+   #91 = Utf8               dir\n+   #92 = Utf8               Ljava/io/File;\n+   #93 = Utf8               name\n+   #94 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #95 = InterfaceMethodref #68.#96       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #96 = NameAndType        #52:#97       // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #97 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #98 = Class              #99           // java/lang/CharSequence\n+   #99 = Utf8               java/lang/CharSequence\n+  #100 = Methodref          #1.#101       // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #101 = NameAndType        #102:#103     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #102 = Utf8               toFileVisitResult\n+  #103 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #104 = Utf8               path\n+  #105 = Utf8               Ljava/nio/file/Path;\n+  #106 = Utf8               attributes\n+  #107 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #108 = Utf8               toString\n+  #109 = Utf8               ()Ljava/lang/String;\n+  #110 = Class              #111          // java/lang/StringBuilder\n+  #111 = Utf8               java/lang/StringBuilder\n+  #112 = String             #113          // RegexFileFilter [pattern=\n+  #113 = Utf8               RegexFileFilter [pattern=\n+  #114 = Methodref          #110.#26      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #115 = Methodref          #110.#116     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #116 = NameAndType        #117:#118     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #117 = Utf8               append\n+  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #119 = String             #120          // ]\n+  #120 = Utf8               ]\n+  #121 = Methodref          #110.#122     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #122 = NameAndType        #117:#123     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Methodref          #110.#125     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #125 = NameAndType        #108:#109     // toString:()Ljava/lang/String;\n+  #126 = Utf8               lambda$0\n+  #127 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #128 = InterfaceMethodref #129.#131     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+  #129 = Class              #130          // java/nio/file/Path\n+  #130 = Utf8               java/nio/file/Path\n+  #131 = NameAndType        #132:#133     // getFileName:()Ljava/nio/file/Path;\n+  #132 = Utf8               getFileName\n+  #133 = Utf8               ()Ljava/nio/file/Path;\n+  #134 = InterfaceMethodref #129.#125     // java/nio/file/Path.toString:()Ljava/lang/String;\n   #135 = Utf8               p\n   #136 = Utf8               SourceFile\n   #137 = Utf8               RegexFileFilter.java\n   #138 = Utf8               BootstrapMethods\n-  #139 = MethodHandle       6:#140        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #140 = Methodref          #141.#142     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #141 = Class              #143          // java/lang/invoke/LambdaMetafactory\n-  #142 = NameAndType        #144:#145     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #143 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #144 = Utf8               metafactory\n-  #145 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #146 = MethodType         #68           //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #147 = MethodHandle       6:#148        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #148 = Methodref          #26.#149      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #149 = NameAndType        #133:#134     // lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #150 = MethodType         #134          //  (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #139 = Methodref          #140.#142     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #140 = Class              #141          // java/lang/invoke/LambdaMetafactory\n+  #141 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #142 = NameAndType        #143:#144     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #143 = Utf8               metafactory\n+  #144 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #145 = MethodHandle       6:#139        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #146 = MethodType         #97           //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #147 = Methodref          #1.#148       // org/apache/commons/io/filefilter/RegexFileFilter.lambda$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #148 = NameAndType        #126:#127     // lambda$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #149 = MethodHandle       6:#147        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #150 = MethodType         #127          //  (Ljava/nio/file/Path;)Ljava/lang/String;\n   #151 = Utf8               InnerClasses\n   #152 = Class              #153          // java/lang/invoke/MethodHandles$Lookup\n   #153 = Utf8               java/lang/invoke/MethodHandles$Lookup\n   #154 = Class              #155          // java/lang/invoke/MethodHandles\n   #155 = Utf8               java/lang/invoke/MethodHandles\n   #156 = Utf8               Lookup\n {\n@@ -172,31 +172,31 @@\n   private final java.util.regex.Pattern pattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.function.Function<java.nio.file.Path, java.lang.String> pathToString;\n     descriptor: Ljava/util/function/Function;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #108                         // Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n+    Signature: #17                          // Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n \n   private static java.util.regex.Pattern compile(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #1                  // class java/lang/IllegalArgumentException\n+         4: new           #21                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #3                  // String Pattern is missing\n-        10: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #23                 // String Pattern is missing\n+        10: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: iload_1\n-        16: invokestatic  #9                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+        16: invokestatic  #29                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n         19: areturn\n       LineNumberTable:\n         line 81: 0\n         line 82: 4\n         line 84: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -207,15 +207,15 @@\n \n   private static int toFlags(org.apache.commons.io.IOCase);\n     descriptor: (Lorg/apache/commons/io/IOCase;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #15                 // Method org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+         1: invokestatic  #41                 // Method org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n          4: ifeq          11\n          7: iconst_2\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 94: 0\n@@ -230,45 +230,46 @@\n   public org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n-         7: invokespecial #25                 // Method \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+         2: invokedynamic #50,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n+         7: invokespecial #54                 // Method \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n         10: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      11     1 pattern   Ljava/util/regex/Pattern;\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern, java.util.function.Function<java.nio.file.Path, java.lang.String>);\n     descriptor: (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #59                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #30                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #60                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #1                  // class java/lang/IllegalArgumentException\n+         8: new           #21                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #3                  // String Pattern is missing\n-        14: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #23                 // String Pattern is missing\n+        14: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #35                 // Field pattern:Ljava/util/regex/Pattern;\n+        20: putfield      #63                 // Field pattern:Ljava/util/regex/Pattern;\n         23: aload_0\n         24: aload_2\n-        25: putfield      #39                 // Field pathToString:Ljava/util/function/Function;\n+        25: putfield      #65                 // Field pathToString:Ljava/util/function/Function;\n         28: return\n       LineNumberTable:\n         line 121: 0\n         line 122: 4\n         line 123: 8\n         line 125: 18\n         line 126: 23\n@@ -282,25 +283,24 @@\n         Start  Length  Slot  Name   Signature\n             0      29     2 pathToString   Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/io/filefilter/RegexFileFilter, class java/util/regex/Pattern, class java/util/function/Function ]\n           stack = []\n-    Signature: #121                         // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;I)V\n+         3: invokespecial #70                 // Method \"<init>\":(Ljava/lang/String;I)V\n          6: return\n       LineNumberTable:\n         line 136: 0\n         line 137: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -310,16 +310,16 @@\n     descriptor: (Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokestatic  #46                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-         6: invokespecial #47                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         3: invokestatic  #73                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+         6: invokespecial #74                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n          9: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -330,17 +330,17 @@\n     descriptor: (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #50                 // Method toFlags:(Lorg/apache/commons/io/IOCase;)I\n-         6: invokestatic  #46                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-         9: invokespecial #47                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         3: invokestatic  #77                 // Method toFlags:(Lorg/apache/commons/io/IOCase;)I\n+         6: invokestatic  #73                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+         9: invokespecial #74                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n         12: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -349,18 +349,18 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #35                 // Field pattern:Ljava/util/regex/Pattern;\n+         1: getfield      #63                 // Field pattern:Ljava/util/regex/Pattern;\n          4: aload_2\n-         5: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-         8: invokevirtual #58                 // Method java/util/regex/Matcher.matches:()Z\n+         5: invokevirtual #81                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #85                 // Method java/util/regex/Matcher.matches:()Z\n         11: ireturn\n       LineNumberTable:\n         line 170: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      12     1   dir   Ljava/io/File;\n@@ -368,73 +368,72 @@\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #35                 // Field pattern:Ljava/util/regex/Pattern;\n+         1: getfield      #63                 // Field pattern:Ljava/util/regex/Pattern;\n          4: aload_0\n-         5: getfield      #39                 // Field pathToString:Ljava/util/function/Function;\n+         5: getfield      #65                 // Field pathToString:Ljava/util/function/Function;\n          8: aload_1\n-         9: invokeinterface #64,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-        14: checkcast     #69                 // class java/lang/CharSequence\n-        17: invokevirtual #54                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        20: invokevirtual #58                 // Method java/util/regex/Matcher.matches:()Z\n+         9: invokeinterface #95,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+        14: checkcast     #98                 // class java/lang/CharSequence\n+        17: invokevirtual #81                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        20: invokevirtual #85                 // Method java/util/regex/Matcher.matches:()Z\n         23: aload_1\n-        24: invokestatic  #71                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+        24: invokestatic  #100                // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         27: areturn\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      28     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      28     1  path   Ljava/nio/file/Path;\n             0      28     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #75                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #110                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #77                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #78                 // String RegexFileFilter [pattern=\n-         9: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #35                 // Field pattern:Ljava/util/regex/Pattern;\n-        16: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        19: ldc           #87                 // String ]\n-        21: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        27: areturn\n+         4: ldc           #112                // String RegexFileFilter [pattern=\n+         6: invokespecial #114                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #63                 // Field pattern:Ljava/util/regex/Pattern;\n+        13: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        16: ldc           #119                // String ]\n+        18: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokevirtual #124                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        24: areturn\n       LineNumberTable:\n         line 192: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      28     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n+            0      25     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n \n-  private static java.lang.String lambda$new$0(java.nio.file.Path);\n+  private static java.lang.String lambda$0(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #93,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-         6: invokeinterface #99,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+         1: invokeinterface #128,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         6: invokeinterface #134,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 110: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     p   Ljava/nio/file/Path;\n }\n SourceFile: \"RegexFileFilter.java\"\n BootstrapMethods:\n-  0: #139 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #145 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n       #146 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #147 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+      #149 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n       #150 (Ljava/nio/file/Path;)Ljava/lang/String;\n InnerClasses:\n   public static final #156= #152 of #154; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
