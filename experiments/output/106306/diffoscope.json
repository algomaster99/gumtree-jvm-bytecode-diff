{"diffoscope-json-version": 1, "source1": "first/FilterCollectionWriter.class", "source2": "second/FilterCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,279 +1,298 @@\n-  SHA-256 checksum 8186265fb9f740e819eb3272b4e7458c946adf37777151bcf0c1d174962d1b0d\n+  SHA-256 checksum 1d8ff9e53241b0aba69d2fa6b95d3b12d091c2e441a7092dbf43e3a9f738bb59\n   Compiled from \"FilterCollectionWriter.java\"\n public class org.apache.commons.io.output.FilterCollectionWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/output/FilterCollectionWriter\n-  super_class: #2                         // java/io/Writer\n+  this_class: #1                          // org/apache/commons/io/output/FilterCollectionWriter\n+  super_class: #3                         // java/io/Writer\n   interfaces: 0, fields: 2, methods: 25, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/io/Writer.\"<init>\":()V\n-    #2 = Class              #4            // java/io/Writer\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/io/output/FilterCollectionWriter\n+    #2 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+    #3 = Class              #4            // java/io/Writer\n     #4 = Utf8               java/io/Writer\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Methodref          #8.#9         // java/util/Collections.emptyList:()Ljava/util/List;\n-    #8 = Class              #10           // java/util/Collections\n-    #9 = NameAndType        #11:#12       // emptyList:()Ljava/util/List;\n-   #10 = Utf8               java/util/Collections\n-   #11 = Utf8               emptyList\n-   #12 = Utf8               ()Ljava/util/List;\n-   #13 = Fieldref           #14.#15       // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n-   #14 = Class              #16           // org/apache/commons/io/output/FilterCollectionWriter\n-   #15 = NameAndType        #17:#18       // EMPTY_WRITERS:Ljava/util/Collection;\n-   #16 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-   #17 = Utf8               EMPTY_WRITERS\n-   #18 = Utf8               Ljava/util/Collection;\n-   #19 = Fieldref           #14.#20       // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n-   #20 = NameAndType        #21:#18       // writers:Ljava/util/Collection;\n-   #21 = Utf8               writers\n-   #22 = Methodref          #23.#24       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #23 = Class              #25           // java/util/Arrays\n-   #24 = NameAndType        #26:#27       // asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #25 = Utf8               java/util/Arrays\n-   #26 = Utf8               asList\n-   #27 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-   #28 = InvokeDynamic      #0:#29        // #0:accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n-   #29 = NameAndType        #30:#31       // accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n-   #30 = Utf8               accept\n-   #31 = Utf8               (C)Lorg/apache/commons/io/function/IOConsumer;\n-   #32 = Methodref          #14.#33       // org/apache/commons/io/output/FilterCollectionWriter.forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n-   #33 = NameAndType        #34:#35       // forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n-   #34 = Utf8               forAllWriters\n-   #35 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n-   #36 = InvokeDynamic      #1:#37        // #1:accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n-   #37 = NameAndType        #30:#38       // accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n-   #38 = Utf8               (Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n-   #39 = InvokeDynamic      #2:#40        // #2:accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #40 = NameAndType        #30:#41       // accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #41 = Utf8               (Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #42 = InvokeDynamic      #3:#43        // #3:accept:()Lorg/apache/commons/io/function/IOConsumer;\n-   #43 = NameAndType        #30:#44       // accept:()Lorg/apache/commons/io/function/IOConsumer;\n-   #44 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n-   #45 = InvokeDynamic      #4:#43        // #4:accept:()Lorg/apache/commons/io/function/IOConsumer;\n-   #46 = Methodref          #14.#47       // org/apache/commons/io/output/FilterCollectionWriter.writers:()Ljava/util/stream/Stream;\n-   #47 = NameAndType        #21:#48       // writers:()Ljava/util/stream/Stream;\n-   #48 = Utf8               ()Ljava/util/stream/Stream;\n-   #49 = InterfaceMethodref #50.#51       // org/apache/commons/io/function/IOConsumer.forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n-   #50 = Class              #52           // org/apache/commons/io/function/IOConsumer\n-   #51 = NameAndType        #53:#54       // forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n-   #52 = Utf8               org/apache/commons/io/function/IOConsumer\n-   #53 = Utf8               forAll\n-   #54 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n-   #55 = InvokeDynamic      #5:#56        // #5:accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n-   #56 = NameAndType        #30:#57       // accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n-   #57 = Utf8               ([C)Lorg/apache/commons/io/function/IOConsumer;\n-   #58 = InvokeDynamic      #6:#59        // #6:accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n-   #59 = NameAndType        #30:#60       // accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n-   #60 = Utf8               ([CII)Lorg/apache/commons/io/function/IOConsumer;\n-   #61 = InvokeDynamic      #7:#62        // #7:accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n-   #62 = NameAndType        #30:#63       // accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n-   #63 = Utf8               (I)Lorg/apache/commons/io/function/IOConsumer;\n-   #64 = InvokeDynamic      #8:#65        // #8:accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n-   #65 = NameAndType        #30:#66       // accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n-   #66 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n-   #67 = InvokeDynamic      #9:#68        // #9:accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #68 = NameAndType        #30:#69       // accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #69 = Utf8               (Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n-   #70 = InterfaceMethodref #71.#72       // java/util/Collection.stream:()Ljava/util/stream/Stream;\n-   #71 = Class              #73           // java/util/Collection\n-   #72 = NameAndType        #74:#48       // stream:()Ljava/util/stream/Stream;\n-   #73 = Utf8               java/util/Collection\n-   #74 = Utf8               stream\n-   #75 = InvokeDynamic      #10:#76       // #10:test:()Ljava/util/function/Predicate;\n-   #76 = NameAndType        #77:#78       // test:()Ljava/util/function/Predicate;\n-   #77 = Utf8               test\n-   #78 = Utf8               ()Ljava/util/function/Predicate;\n-   #79 = InterfaceMethodref #80.#81       // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #80 = Class              #82           // java/util/stream/Stream\n-   #81 = NameAndType        #83:#84       // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #82 = Utf8               java/util/stream/Stream\n-   #83 = Utf8               filter\n-   #84 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #85 = Methodref          #14.#86       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #86 = NameAndType        #87:#88       // append:(C)Ljava/io/Writer;\n-   #87 = Utf8               append\n-   #88 = Utf8               (C)Ljava/io/Writer;\n-   #89 = Methodref          #14.#90       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #90 = NameAndType        #87:#91       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #91 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #92 = Methodref          #14.#93       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #93 = NameAndType        #87:#94       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #94 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #95 = Methodref          #2.#96        // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #96 = NameAndType        #97:#98       // write:(Ljava/lang/String;II)V\n-   #97 = Utf8               write\n-   #98 = Utf8               (Ljava/lang/String;II)V\n-   #99 = Methodref          #2.#100       // java/io/Writer.write:(Ljava/lang/String;)V\n-  #100 = NameAndType        #97:#101      // write:(Ljava/lang/String;)V\n-  #101 = Utf8               (Ljava/lang/String;)V\n-  #102 = Methodref          #2.#103       // java/io/Writer.write:(I)V\n-  #103 = NameAndType        #97:#104      // write:(I)V\n-  #104 = Utf8               (I)V\n-  #105 = Methodref          #2.#106       // java/io/Writer.write:([CII)V\n-  #106 = NameAndType        #97:#107      // write:([CII)V\n-  #107 = Utf8               ([CII)V\n-  #108 = Methodref          #2.#109       // java/io/Writer.write:([C)V\n-  #109 = NameAndType        #97:#110      // write:([C)V\n-  #110 = Utf8               ([C)V\n-  #111 = Methodref          #2.#90        // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #112 = Methodref          #2.#93        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #113 = Methodref          #2.#86        // java/io/Writer.append:(C)Ljava/io/Writer;\n-  #114 = Utf8               Signature\n-  #115 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n-  #116 = Utf8               (Ljava/util/Collection;)V\n-  #117 = Utf8               Code\n-  #118 = Utf8               LineNumberTable\n-  #119 = Utf8               LocalVariableTable\n-  #120 = Utf8               this\n-  #121 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n-  #122 = Utf8               LocalVariableTypeTable\n-  #123 = Utf8               StackMapTable\n-  #124 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n-  #125 = Utf8               ([Ljava/io/Writer;)V\n-  #126 = Utf8               [Ljava/io/Writer;\n-  #127 = Class              #126          // \"[Ljava/io/Writer;\"\n-  #128 = Utf8               c\n-  #129 = Utf8               C\n-  #130 = Utf8               Exceptions\n-  #131 = Class              #132          // java/io/IOException\n-  #132 = Utf8               java/io/IOException\n-  #133 = Utf8               csq\n-  #134 = Utf8               Ljava/lang/CharSequence;\n-  #135 = Utf8               start\n-  #136 = Utf8               I\n-  #137 = Utf8               end\n-  #138 = Utf8               close\n-  #139 = Utf8               flush\n-  #140 = Utf8               action\n-  #141 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-  #142 = Utf8               Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;\n-  #143 = Class              #144          // org/apache/commons/io/IOExceptionList\n-  #144 = Utf8               org/apache/commons/io/IOExceptionList\n-  #145 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n-  #146 = Utf8               cbuf\n-  #147 = Utf8               [C\n-  #148 = Utf8               off\n-  #149 = Utf8               len\n-  #150 = Utf8               str\n-  #151 = Utf8               Ljava/lang/String;\n-  #152 = Utf8               ()Ljava/util/stream/Stream<Ljava/io/Writer;>;\n-  #153 = Utf8               (C)Ljava/lang/Appendable;\n-  #154 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #155 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #156 = Utf8               lambda$write$7\n-  #157 = Utf8               (Ljava/lang/String;IILjava/io/Writer;)V\n-  #158 = Utf8               w\n-  #159 = Utf8               Ljava/io/Writer;\n-  #160 = Utf8               lambda$write$6\n-  #161 = Utf8               (Ljava/lang/String;Ljava/io/Writer;)V\n-  #162 = Utf8               lambda$write$5\n+    #5 = Utf8               EMPTY_WRITERS\n+    #6 = Utf8               Ljava/util/Collection;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n+    #9 = Utf8               writers\n+   #10 = Utf8               <init>\n+   #11 = Utf8               (Ljava/util/Collection;)V\n+   #12 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+   #13 = Utf8               Code\n+   #14 = Methodref          #3.#15        // java/io/Writer.\"<init>\":()V\n+   #15 = NameAndType        #10:#16       // \"<init>\":()V\n+   #16 = Utf8               ()V\n+   #17 = Methodref          #18.#20       // java/util/Collections.emptyList:()Ljava/util/List;\n+   #18 = Class              #19           // java/util/Collections\n+   #19 = Utf8               java/util/Collections\n+   #20 = NameAndType        #21:#22       // emptyList:()Ljava/util/List;\n+   #21 = Utf8               emptyList\n+   #22 = Utf8               ()Ljava/util/List;\n+   #23 = Fieldref           #1.#24        // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n+   #24 = NameAndType        #5:#6         // EMPTY_WRITERS:Ljava/util/Collection;\n+   #25 = Fieldref           #1.#26        // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n+   #26 = NameAndType        #9:#6         // writers:Ljava/util/Collection;\n+   #27 = Utf8               LineNumberTable\n+   #28 = Utf8               LocalVariableTable\n+   #29 = Utf8               this\n+   #30 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n+   #31 = Utf8               LocalVariableTypeTable\n+   #32 = Utf8               StackMapTable\n+   #33 = Class              #34           // java/util/Collection\n+   #34 = Utf8               java/util/Collection\n+   #35 = Utf8               ([Ljava/io/Writer;)V\n+   #36 = Methodref          #37.#39       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #37 = Class              #38           // java/util/Arrays\n+   #38 = Utf8               java/util/Arrays\n+   #39 = NameAndType        #40:#41       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #40 = Utf8               asList\n+   #41 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #42 = Utf8               [Ljava/io/Writer;\n+   #43 = Class              #42           // \"[Ljava/io/Writer;\"\n+   #44 = Utf8               append\n+   #45 = Utf8               (C)Ljava/io/Writer;\n+   #46 = Utf8               Exceptions\n+   #47 = Class              #48           // java/io/IOException\n+   #48 = Utf8               java/io/IOException\n+   #49 = InvokeDynamic      #0:#50        // #0:accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n+   #50 = NameAndType        #51:#52       // accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n+   #51 = Utf8               accept\n+   #52 = Utf8               (C)Lorg/apache/commons/io/function/IOConsumer;\n+   #53 = Methodref          #1.#54        // org/apache/commons/io/output/FilterCollectionWriter.forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+   #54 = NameAndType        #55:#56       // forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+   #55 = Utf8               forAllWriters\n+   #56 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+   #57 = Utf8               c\n+   #58 = Utf8               C\n+   #59 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #60 = InvokeDynamic      #1:#61        // #1:accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n+   #61 = NameAndType        #51:#62       // accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n+   #62 = Utf8               (Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n+   #63 = Utf8               csq\n+   #64 = Utf8               Ljava/lang/CharSequence;\n+   #65 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #66 = InvokeDynamic      #2:#67        // #2:accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n+   #67 = NameAndType        #51:#68       // accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n+   #68 = Utf8               (Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n+   #69 = Utf8               start\n+   #70 = Utf8               I\n+   #71 = Utf8               end\n+   #72 = Utf8               close\n+   #73 = InvokeDynamic      #3:#74        // #3:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+   #74 = NameAndType        #51:#75       // accept:()Lorg/apache/commons/io/function/IOConsumer;\n+   #75 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n+   #76 = Utf8               flush\n+   #77 = InvokeDynamic      #4:#74        // #4:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+   #78 = Class              #79           // org/apache/commons/io/IOExceptionList\n+   #79 = Utf8               org/apache/commons/io/IOExceptionList\n+   #80 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+   #81 = Methodref          #1.#82        // org/apache/commons/io/output/FilterCollectionWriter.writers:()Ljava/util/stream/Stream;\n+   #82 = NameAndType        #9:#83        // writers:()Ljava/util/stream/Stream;\n+   #83 = Utf8               ()Ljava/util/stream/Stream;\n+   #84 = InterfaceMethodref #85.#87       // org/apache/commons/io/function/IOConsumer.forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n+   #85 = Class              #86           // org/apache/commons/io/function/IOConsumer\n+   #86 = Utf8               org/apache/commons/io/function/IOConsumer\n+   #87 = NameAndType        #88:#89       // forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n+   #88 = Utf8               forAll\n+   #89 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n+   #90 = Utf8               action\n+   #91 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+   #92 = Utf8               Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;\n+   #93 = Utf8               write\n+   #94 = Utf8               ([C)V\n+   #95 = InvokeDynamic      #5:#96        // #5:accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n+   #96 = NameAndType        #51:#97       // accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n+   #97 = Utf8               ([C)Lorg/apache/commons/io/function/IOConsumer;\n+   #98 = Utf8               cbuf\n+   #99 = Utf8               [C\n+  #100 = Utf8               ([CII)V\n+  #101 = InvokeDynamic      #6:#102       // #6:accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n+  #102 = NameAndType        #51:#103      // accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n+  #103 = Utf8               ([CII)Lorg/apache/commons/io/function/IOConsumer;\n+  #104 = Utf8               off\n+  #105 = Utf8               len\n+  #106 = Utf8               (I)V\n+  #107 = InvokeDynamic      #7:#108       // #7:accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n+  #108 = NameAndType        #51:#109      // accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n+  #109 = Utf8               (I)Lorg/apache/commons/io/function/IOConsumer;\n+  #110 = Utf8               (Ljava/lang/String;)V\n+  #111 = InvokeDynamic      #8:#112       // #8:accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n+  #112 = NameAndType        #51:#113      // accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n+  #113 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n+  #114 = Utf8               str\n+  #115 = Utf8               Ljava/lang/String;\n+  #116 = Utf8               (Ljava/lang/String;II)V\n+  #117 = InvokeDynamic      #9:#118       // #9:accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n+  #118 = NameAndType        #51:#119      // accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n+  #119 = Utf8               (Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n+  #120 = Utf8               ()Ljava/util/stream/Stream<Ljava/io/Writer;>;\n+  #121 = InterfaceMethodref #33.#122      // java/util/Collection.stream:()Ljava/util/stream/Stream;\n+  #122 = NameAndType        #123:#83      // stream:()Ljava/util/stream/Stream;\n+  #123 = Utf8               stream\n+  #124 = InvokeDynamic      #10:#125      // #10:test:()Ljava/util/function/Predicate;\n+  #125 = NameAndType        #126:#127     // test:()Ljava/util/function/Predicate;\n+  #126 = Utf8               test\n+  #127 = Utf8               ()Ljava/util/function/Predicate;\n+  #128 = InterfaceMethodref #129.#131     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #129 = Class              #130          // java/util/stream/Stream\n+  #130 = Utf8               java/util/stream/Stream\n+  #131 = NameAndType        #132:#133     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #132 = Utf8               filter\n+  #133 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #134 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #135 = Methodref          #1.#136       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #136 = NameAndType        #44:#65       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #137 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #138 = Methodref          #1.#139       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #139 = NameAndType        #44:#59       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #140 = Utf8               (C)Ljava/lang/Appendable;\n+  #141 = Methodref          #1.#142       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+  #142 = NameAndType        #44:#45       // append:(C)Ljava/io/Writer;\n+  #143 = Utf8               lambda$0\n+  #144 = Utf8               (CLjava/io/Writer;)V\n+  #145 = Methodref          #3.#142       // java/io/Writer.append:(C)Ljava/io/Writer;\n+  #146 = Utf8               w\n+  #147 = Utf8               Ljava/io/Writer;\n+  #148 = Utf8               lambda$1\n+  #149 = Utf8               (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+  #150 = Methodref          #3.#139       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #151 = Utf8               lambda$2\n+  #152 = Utf8               (Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+  #153 = Methodref          #3.#136       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #154 = Utf8               lambda$5\n+  #155 = Utf8               ([CLjava/io/Writer;)V\n+  #156 = Methodref          #3.#157       // java/io/Writer.write:([C)V\n+  #157 = NameAndType        #93:#94       // write:([C)V\n+  #158 = Utf8               lambda$6\n+  #159 = Utf8               ([CIILjava/io/Writer;)V\n+  #160 = Methodref          #3.#161       // java/io/Writer.write:([CII)V\n+  #161 = NameAndType        #93:#100      // write:([CII)V\n+  #162 = Utf8               lambda$7\n   #163 = Utf8               (ILjava/io/Writer;)V\n-  #164 = Utf8               lambda$write$4\n-  #165 = Utf8               ([CIILjava/io/Writer;)V\n-  #166 = Utf8               lambda$write$3\n-  #167 = Utf8               ([CLjava/io/Writer;)V\n-  #168 = Utf8               lambda$append$2\n-  #169 = Utf8               (Ljava/lang/CharSequence;IILjava/io/Writer;)V\n-  #170 = Utf8               lambda$append$1\n-  #171 = Utf8               (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-  #172 = Utf8               lambda$append$0\n-  #173 = Utf8               (CLjava/io/Writer;)V\n+  #164 = Methodref          #3.#165       // java/io/Writer.write:(I)V\n+  #165 = NameAndType        #93:#106      // write:(I)V\n+  #166 = Utf8               lambda$8\n+  #167 = Utf8               (Ljava/lang/String;Ljava/io/Writer;)V\n+  #168 = Methodref          #3.#169       // java/io/Writer.write:(Ljava/lang/String;)V\n+  #169 = NameAndType        #93:#110      // write:(Ljava/lang/String;)V\n+  #170 = Utf8               lambda$9\n+  #171 = Utf8               (Ljava/lang/String;IILjava/io/Writer;)V\n+  #172 = Methodref          #3.#173       // java/io/Writer.write:(Ljava/lang/String;II)V\n+  #173 = NameAndType        #93:#116      // write:(Ljava/lang/String;II)V\n   #174 = Utf8               SourceFile\n   #175 = Utf8               FilterCollectionWriter.java\n   #176 = Utf8               BootstrapMethods\n-  #177 = MethodHandle       6:#178        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #178 = Methodref          #179.#180     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #179 = Class              #181          // java/lang/invoke/LambdaMetafactory\n-  #180 = NameAndType        #182:#183     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #181 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #182 = Utf8               metafactory\n-  #183 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #184 = MethodType         #185          //  (Ljava/lang/Object;)V\n-  #185 = Utf8               (Ljava/lang/Object;)V\n-  #186 = MethodHandle       6:#187        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$0:(CLjava/io/Writer;)V\n-  #187 = Methodref          #14.#188      // org/apache/commons/io/output/FilterCollectionWriter.lambda$append$0:(CLjava/io/Writer;)V\n-  #188 = NameAndType        #172:#173     // lambda$append$0:(CLjava/io/Writer;)V\n-  #189 = MethodType         #190          //  (Ljava/io/Writer;)V\n-  #190 = Utf8               (Ljava/io/Writer;)V\n-  #191 = MethodHandle       6:#192        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-  #192 = Methodref          #14.#193      // org/apache/commons/io/output/FilterCollectionWriter.lambda$append$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-  #193 = NameAndType        #170:#171     // lambda$append$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-  #194 = MethodHandle       6:#195        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n-  #195 = Methodref          #14.#196      // org/apache/commons/io/output/FilterCollectionWriter.lambda$append$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n-  #196 = NameAndType        #168:#169     // lambda$append$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n-  #197 = MethodHandle       5:#198        // REF_invokeVirtual java/io/Writer.close:()V\n-  #198 = Methodref          #2.#199       // java/io/Writer.close:()V\n-  #199 = NameAndType        #138:#6       // close:()V\n-  #200 = MethodHandle       5:#201        // REF_invokeVirtual java/io/Writer.flush:()V\n-  #201 = Methodref          #2.#202       // java/io/Writer.flush:()V\n-  #202 = NameAndType        #139:#6       // flush:()V\n-  #203 = MethodHandle       6:#204        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$3:([CLjava/io/Writer;)V\n-  #204 = Methodref          #14.#205      // org/apache/commons/io/output/FilterCollectionWriter.lambda$write$3:([CLjava/io/Writer;)V\n-  #205 = NameAndType        #166:#167     // lambda$write$3:([CLjava/io/Writer;)V\n-  #206 = MethodHandle       6:#207        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$4:([CIILjava/io/Writer;)V\n-  #207 = Methodref          #14.#208      // org/apache/commons/io/output/FilterCollectionWriter.lambda$write$4:([CIILjava/io/Writer;)V\n-  #208 = NameAndType        #164:#165     // lambda$write$4:([CIILjava/io/Writer;)V\n-  #209 = MethodHandle       6:#210        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$5:(ILjava/io/Writer;)V\n-  #210 = Methodref          #14.#211      // org/apache/commons/io/output/FilterCollectionWriter.lambda$write$5:(ILjava/io/Writer;)V\n-  #211 = NameAndType        #162:#163     // lambda$write$5:(ILjava/io/Writer;)V\n-  #212 = MethodHandle       6:#213        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$6:(Ljava/lang/String;Ljava/io/Writer;)V\n-  #213 = Methodref          #14.#214      // org/apache/commons/io/output/FilterCollectionWriter.lambda$write$6:(Ljava/lang/String;Ljava/io/Writer;)V\n-  #214 = NameAndType        #160:#161     // lambda$write$6:(Ljava/lang/String;Ljava/io/Writer;)V\n-  #215 = MethodHandle       6:#216        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$7:(Ljava/lang/String;IILjava/io/Writer;)V\n-  #216 = Methodref          #14.#217      // org/apache/commons/io/output/FilterCollectionWriter.lambda$write$7:(Ljava/lang/String;IILjava/io/Writer;)V\n-  #217 = NameAndType        #156:#157     // lambda$write$7:(Ljava/lang/String;IILjava/io/Writer;)V\n-  #218 = MethodType         #219          //  (Ljava/lang/Object;)Z\n-  #219 = Utf8               (Ljava/lang/Object;)Z\n-  #220 = MethodHandle       6:#221        // REF_invokeStatic java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n-  #221 = Methodref          #222.#223     // java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n-  #222 = Class              #224          // java/util/Objects\n-  #223 = NameAndType        #225:#219     // nonNull:(Ljava/lang/Object;)Z\n-  #224 = Utf8               java/util/Objects\n-  #225 = Utf8               nonNull\n-  #226 = MethodType         #227          //  (Ljava/io/Writer;)Z\n-  #227 = Utf8               (Ljava/io/Writer;)Z\n-  #228 = Utf8               InnerClasses\n-  #229 = Class              #230          // java/lang/invoke/MethodHandles$Lookup\n-  #230 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #231 = Class              #232          // java/lang/invoke/MethodHandles\n-  #232 = Utf8               java/lang/invoke/MethodHandles\n-  #233 = Utf8               Lookup\n+  #177 = Methodref          #178.#180     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #178 = Class              #179          // java/lang/invoke/LambdaMetafactory\n+  #179 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #180 = NameAndType        #181:#182     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #181 = Utf8               metafactory\n+  #182 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #183 = MethodHandle       6:#177        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #184 = Utf8               (Ljava/lang/Object;)V\n+  #185 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #186 = Methodref          #1.#187       // org/apache/commons/io/output/FilterCollectionWriter.lambda$0:(CLjava/io/Writer;)V\n+  #187 = NameAndType        #143:#144     // lambda$0:(CLjava/io/Writer;)V\n+  #188 = MethodHandle       6:#186        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$0:(CLjava/io/Writer;)V\n+  #189 = Utf8               (Ljava/io/Writer;)V\n+  #190 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #191 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #192 = Methodref          #1.#193       // org/apache/commons/io/output/FilterCollectionWriter.lambda$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+  #193 = NameAndType        #148:#149     // lambda$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+  #194 = MethodHandle       6:#192        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+  #195 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #196 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #197 = Methodref          #1.#198       // org/apache/commons/io/output/FilterCollectionWriter.lambda$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+  #198 = NameAndType        #151:#152     // lambda$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+  #199 = MethodHandle       6:#197        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+  #200 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #201 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #202 = Methodref          #3.#203       // java/io/Writer.close:()V\n+  #203 = NameAndType        #72:#16       // close:()V\n+  #204 = MethodHandle       5:#202        // REF_invokeVirtual java/io/Writer.close:()V\n+  #205 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #206 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #207 = Methodref          #3.#208       // java/io/Writer.flush:()V\n+  #208 = NameAndType        #76:#16       // flush:()V\n+  #209 = MethodHandle       5:#207        // REF_invokeVirtual java/io/Writer.flush:()V\n+  #210 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #211 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #212 = Methodref          #1.#213       // org/apache/commons/io/output/FilterCollectionWriter.lambda$5:([CLjava/io/Writer;)V\n+  #213 = NameAndType        #154:#155     // lambda$5:([CLjava/io/Writer;)V\n+  #214 = MethodHandle       6:#212        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$5:([CLjava/io/Writer;)V\n+  #215 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #216 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #217 = Methodref          #1.#218       // org/apache/commons/io/output/FilterCollectionWriter.lambda$6:([CIILjava/io/Writer;)V\n+  #218 = NameAndType        #158:#159     // lambda$6:([CIILjava/io/Writer;)V\n+  #219 = MethodHandle       6:#217        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$6:([CIILjava/io/Writer;)V\n+  #220 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #221 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #222 = Methodref          #1.#223       // org/apache/commons/io/output/FilterCollectionWriter.lambda$7:(ILjava/io/Writer;)V\n+  #223 = NameAndType        #162:#163     // lambda$7:(ILjava/io/Writer;)V\n+  #224 = MethodHandle       6:#222        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$7:(ILjava/io/Writer;)V\n+  #225 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #226 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #227 = Methodref          #1.#228       // org/apache/commons/io/output/FilterCollectionWriter.lambda$8:(Ljava/lang/String;Ljava/io/Writer;)V\n+  #228 = NameAndType        #166:#167     // lambda$8:(Ljava/lang/String;Ljava/io/Writer;)V\n+  #229 = MethodHandle       6:#227        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$8:(Ljava/lang/String;Ljava/io/Writer;)V\n+  #230 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #231 = MethodType         #184          //  (Ljava/lang/Object;)V\n+  #232 = Methodref          #1.#233       // org/apache/commons/io/output/FilterCollectionWriter.lambda$9:(Ljava/lang/String;IILjava/io/Writer;)V\n+  #233 = NameAndType        #170:#171     // lambda$9:(Ljava/lang/String;IILjava/io/Writer;)V\n+  #234 = MethodHandle       6:#232        // REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$9:(Ljava/lang/String;IILjava/io/Writer;)V\n+  #235 = MethodType         #189          //  (Ljava/io/Writer;)V\n+  #236 = Utf8               (Ljava/lang/Object;)Z\n+  #237 = MethodType         #236          //  (Ljava/lang/Object;)Z\n+  #238 = Methodref          #239.#241     // java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n+  #239 = Class              #240          // java/util/Objects\n+  #240 = Utf8               java/util/Objects\n+  #241 = NameAndType        #242:#236     // nonNull:(Ljava/lang/Object;)Z\n+  #242 = Utf8               nonNull\n+  #243 = MethodHandle       6:#238        // REF_invokeStatic java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n+  #244 = Utf8               (Ljava/io/Writer;)Z\n+  #245 = MethodType         #244          //  (Ljava/io/Writer;)Z\n+  #246 = Utf8               InnerClasses\n+  #247 = Class              #248          // java/lang/invoke/MethodHandles$Lookup\n+  #248 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #249 = Class              #250          // java/lang/invoke/MethodHandles\n+  #250 = Utf8               java/lang/invoke/MethodHandles\n+  #251 = Utf8               Lookup\n {\n   protected final java.util.Collection<java.io.Writer> EMPTY_WRITERS;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #115                         // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #8                           // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected final java.util.Collection<java.io.Writer> writers;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #115                         // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #8                           // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Signature: #12                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #17                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #23                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #23                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          24\n         23: aload_1\n-        24: putfield      #19                 // Field writers:Ljava/util/Collection;\n+        24: putfield      #25                 // Field writers:Ljava/util/Collection;\n         27: return\n       LineNumberTable:\n         line 64: 0\n         line 52: 4\n         line 65: 11\n         line 66: 27\n       LocalVariableTable:\n@@ -288,35 +307,34 @@\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n-    Signature: #124                         // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.io.Writer...);\n     descriptor: ([Ljava/io/Writer;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #17                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #23                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #23                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          27\n         23: aload_1\n-        24: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        27: putfield      #19                 // Field writers:Ljava/util/Collection;\n+        24: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        27: putfield      #25                 // Field writers:Ljava/util/Collection;\n         30: return\n       LineNumberTable:\n         line 73: 0\n         line 52: 4\n         line 74: 11\n         line 75: 30\n       LocalVariableTable:\n@@ -332,530 +350,510 @@\n           offset_delta = 3\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class \"[Ljava/io/Writer;\" ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokedynamic #28,  0             // InvokeDynamic #0:accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n-         7: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         2: invokedynamic #49,  0             // InvokeDynamic #0:accept:(C)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         10: areturn\n       LineNumberTable:\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      11     1     c   C\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #36,  0             // InvokeDynamic #1:accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n-         7: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         2: invokedynamic #60,  0             // InvokeDynamic #1:accept:(Ljava/lang/CharSequence;)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         10: areturn\n       LineNumberTable:\n         line 84: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      11     1   csq   Ljava/lang/CharSequence;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokedynamic #39,  0             // InvokeDynamic #2:accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n-         9: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         4: invokedynamic #66,  0             // InvokeDynamic #2:accept:(Ljava/lang/CharSequence;II)Lorg/apache/commons/io/function/IOConsumer;\n+         9: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         12: areturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      13     1   csq   Ljava/lang/CharSequence;\n             0      13     2 start   I\n             0      13     3   end   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #42,  0             // InvokeDynamic #3:accept:()Lorg/apache/commons/io/function/IOConsumer;\n-         6: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         1: invokedynamic #73,  0             // InvokeDynamic #3:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+         6: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n          9: pop\n         10: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #45,  0             // InvokeDynamic #4:accept:()Lorg/apache/commons/io/function/IOConsumer;\n-         6: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         1: invokedynamic #77,  0             // InvokeDynamic #4:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+         6: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n          9: pop\n         10: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private org.apache.commons.io.output.FilterCollectionWriter forAllWriters(org.apache.commons.io.function.IOConsumer<java.io.Writer>) throws org.apache.commons.io.IOExceptionList;\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws org.apache.commons.io.IOExceptionList\n+    Signature: #80                          // (Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #46                 // Method writers:()Ljava/util/stream/Stream;\n-         5: invokestatic  #49                 // InterfaceMethod org/apache/commons/io/function/IOConsumer.forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n+         2: invokespecial #81                 // Method writers:()Ljava/util/stream/Stream;\n+         5: invokestatic  #84                 // InterfaceMethod org/apache/commons/io/function/IOConsumer.forAll:(Lorg/apache/commons/io/function/IOConsumer;Ljava/util/stream/Stream;)V\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 110: 0\n         line 111: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      10     1 action   Lorg/apache/commons/io/function/IOConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     1 action   Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;\n-    Exceptions:\n-      throws org.apache.commons.io.IOExceptionList\n-    Signature: #145                         // (Lorg/apache/commons/io/function/IOConsumer<Ljava/io/Writer;>;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #55,  0             // InvokeDynamic #5:accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n-         7: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         2: invokedynamic #95,  0             // InvokeDynamic #5:accept:([C)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      12     1  cbuf   [C\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokedynamic #58,  0             // InvokeDynamic #6:accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n-         9: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         4: invokedynamic #101,  0            // InvokeDynamic #6:accept:([CII)Lorg/apache/commons/io/function/IOConsumer;\n+         9: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         12: pop\n         13: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      14     1  cbuf   [C\n             0      14     2   off   I\n             0      14     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokedynamic #61,  0             // InvokeDynamic #7:accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n-         7: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         2: invokedynamic #107,  0            // InvokeDynamic #7:accept:(I)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 142: 0\n         line 143: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      12     1     c   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #64,  0             // InvokeDynamic #8:accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n-         7: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         2: invokedynamic #111,  0            // InvokeDynamic #8:accept:(Ljava/lang/String;)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         10: pop\n         11: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      12     1   str   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokedynamic #67,  0             // InvokeDynamic #9:accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n-         9: invokespecial #32                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n+         4: invokedynamic #117,  0            // InvokeDynamic #9:accept:(Ljava/lang/String;II)Lorg/apache/commons/io/function/IOConsumer;\n+         9: invokespecial #53                 // Method forAllWriters:(Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/output/FilterCollectionWriter;\n         12: pop\n         13: return\n       LineNumberTable:\n         line 162: 0\n         line 163: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n             0      14     1   str   Ljava/lang/String;\n             0      14     2   off   I\n             0      14     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private java.util.stream.Stream<java.io.Writer> writers();\n     descriptor: ()Ljava/util/stream/Stream;\n     flags: (0x0002) ACC_PRIVATE\n+    Signature: #120                         // ()Ljava/util/stream/Stream<Ljava/io/Writer;>;\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field writers:Ljava/util/Collection;\n-         4: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n-         9: invokedynamic #75,  0             // InvokeDynamic #10:test:()Ljava/util/function/Predicate;\n-        14: invokeinterface #79,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+         1: getfield      #25                 // Field writers:Ljava/util/Collection;\n+         4: invokeinterface #121,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n+         9: invokedynamic #124,  0            // InvokeDynamic #10:test:()Ljava/util/function/Predicate;\n+        14: invokeinterface #128,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n         19: areturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n-    Signature: #152                         // ()Ljava/util/stream/Stream<Ljava/io/Writer;>;\n-\n-  public java.lang.Appendable append(char) throws java.io.IOException;\n-    descriptor: (C)Ljava/lang/Appendable;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=2, args_size=2\n-         0: aload_0\n-         1: iload_1\n-         2: invokevirtual #85                 // Method append:(C)Ljava/io/Writer;\n-         5: areturn\n-      LineNumberTable:\n-        line 47: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #89                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #135                // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n-        line 47: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #92                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #138                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n-        line 47: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n+\n+  public java.lang.Appendable append(char) throws java.io.IOException;\n+    descriptor: (C)Ljava/lang/Appendable;\n+    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n-\n-  private static void lambda$write$7(java.lang.String, int, int, java.io.Writer) throws java.io.IOException;\n-    descriptor: (Ljava/lang/String;IILjava/io/Writer;)V\n-    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=4, locals=4, args_size=4\n-         0: aload_3\n-         1: aload_0\n-         2: iload_1\n-         3: iload_2\n-         4: invokevirtual #95                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n-         7: return\n+      stack=2, locals=2, args_size=2\n+         0: aload_0\n+         1: iload_1\n+         2: invokevirtual #141                // Method append:(C)Ljava/io/Writer;\n+         5: areturn\n       LineNumberTable:\n-        line 162: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0   str   Ljava/lang/String;\n-            0       8     1   off   I\n-            0       8     2   len   I\n-            0       8     3     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private static void lambda$write$6(java.lang.String, java.io.Writer) throws java.io.IOException;\n-    descriptor: (Ljava/lang/String;Ljava/io/Writer;)V\n+  private static void lambda$0(char, java.io.Writer) throws java.io.IOException;\n+    descriptor: (CLjava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: aload_0\n-         2: invokevirtual #99                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+         1: iload_0\n+         2: invokevirtual #145                // Method java/io/Writer.append:(C)Ljava/io/Writer;\n          5: return\n       LineNumberTable:\n-        line 148: 0\n+        line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0   str   Ljava/lang/String;\n             0       6     1     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private static void lambda$write$5(int, java.io.Writer) throws java.io.IOException;\n-    descriptor: (ILjava/io/Writer;)V\n+  private static void lambda$1(java.lang.CharSequence, java.io.Writer) throws java.io.IOException;\n+    descriptor: (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: iload_0\n-         2: invokevirtual #102                // Method java/io/Writer.write:(I)V\n+         1: aload_0\n+         2: invokevirtual #150                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: return\n       LineNumberTable:\n-        line 142: 0\n+        line 84: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0     c   I\n             0       6     1     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private static void lambda$write$4(char[], int, int, java.io.Writer) throws java.io.IOException;\n-    descriptor: ([CIILjava/io/Writer;)V\n+  private static void lambda$2(java.lang.CharSequence, int, int, java.io.Writer) throws java.io.IOException;\n+    descriptor: (Ljava/lang/CharSequence;IILjava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_3\n          1: aload_0\n          2: iload_1\n          3: iload_2\n-         4: invokevirtual #105                // Method java/io/Writer.write:([CII)V\n+         4: invokevirtual #153                // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: return\n       LineNumberTable:\n-        line 131: 0\n+        line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  cbuf   [C\n-            0       8     1   off   I\n-            0       8     2   len   I\n             0       8     3     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private static void lambda$write$3(char[], java.io.Writer) throws java.io.IOException;\n+  private static void lambda$5(char[], java.io.Writer) throws java.io.IOException;\n     descriptor: ([CLjava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #108                // Method java/io/Writer.write:([C)V\n+         2: invokevirtual #156                // Method java/io/Writer.write:([C)V\n          5: return\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  cbuf   [C\n             0       6     1     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  private static void lambda$append$2(java.lang.CharSequence, int, int, java.io.Writer) throws java.io.IOException;\n-    descriptor: (Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+  private static void lambda$6(char[], int, int, java.io.Writer) throws java.io.IOException;\n+    descriptor: ([CIILjava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_3\n          1: aload_0\n          2: iload_1\n          3: iload_2\n-         4: invokevirtual #111                // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-         7: pop\n-         8: return\n+         4: invokevirtual #160                // Method java/io/Writer.write:([CII)V\n+         7: return\n       LineNumberTable:\n-        line 89: 0\n+        line 131: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0   csq   Ljava/lang/CharSequence;\n-            0       9     1 start   I\n-            0       9     2   end   I\n-            0       9     3     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n+            0       8     3     w   Ljava/io/Writer;\n \n-  private static void lambda$append$1(java.lang.CharSequence, java.io.Writer) throws java.io.IOException;\n-    descriptor: (Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+  private static void lambda$7(int, java.io.Writer) throws java.io.IOException;\n+    descriptor: (ILjava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: aload_0\n-         2: invokevirtual #112                // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-         5: pop\n-         6: return\n+         1: iload_0\n+         2: invokevirtual #164                // Method java/io/Writer.write:(I)V\n+         5: return\n       LineNumberTable:\n-        line 84: 0\n+        line 142: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0   csq   Ljava/lang/CharSequence;\n-            0       7     1     w   Ljava/io/Writer;\n-    Exceptions:\n-      throws java.io.IOException\n+            0       6     1     w   Ljava/io/Writer;\n \n-  private static void lambda$append$0(char, java.io.Writer) throws java.io.IOException;\n-    descriptor: (CLjava/io/Writer;)V\n+  private static void lambda$8(java.lang.String, java.io.Writer) throws java.io.IOException;\n+    descriptor: (Ljava/lang/String;Ljava/io/Writer;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: iload_0\n-         2: invokevirtual #113                // Method java/io/Writer.append:(C)Ljava/io/Writer;\n-         5: pop\n-         6: return\n+         1: aload_0\n+         2: invokevirtual #168                // Method java/io/Writer.write:(Ljava/lang/String;)V\n+         5: return\n       LineNumberTable:\n-        line 79: 0\n+        line 148: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0     c   C\n-            0       7     1     w   Ljava/io/Writer;\n+            0       6     1     w   Ljava/io/Writer;\n+\n+  private static void lambda$9(java.lang.String, int, int, java.io.Writer) throws java.io.IOException;\n+    descriptor: (Ljava/lang/String;IILjava/io/Writer;)V\n+    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n+    Code:\n+      stack=4, locals=4, args_size=4\n+         0: aload_3\n+         1: aload_0\n+         2: iload_1\n+         3: iload_2\n+         4: invokevirtual #172                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+         7: return\n+      LineNumberTable:\n+        line 162: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0       8     3     w   Ljava/io/Writer;\n }\n SourceFile: \"FilterCollectionWriter.java\"\n BootstrapMethods:\n-  0: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #186 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$0:(CLjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  1: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #191 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  2: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #194 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$append$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  3: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #197 REF_invokeVirtual java/io/Writer.close:()V\n-      #189 (Ljava/io/Writer;)V\n-  4: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #200 REF_invokeVirtual java/io/Writer.flush:()V\n-      #189 (Ljava/io/Writer;)V\n-  5: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #203 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$3:([CLjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  6: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #206 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$4:([CIILjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  7: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #209 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$5:(ILjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  8: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #212 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$6:(Ljava/lang/String;Ljava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  9: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #184 (Ljava/lang/Object;)V\n-      #215 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$write$7:(Ljava/lang/String;IILjava/io/Writer;)V\n-      #189 (Ljava/io/Writer;)V\n-  10: #177 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #218 (Ljava/lang/Object;)Z\n-      #220 REF_invokeStatic java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n-      #226 (Ljava/io/Writer;)Z\n+      #185 (Ljava/lang/Object;)V\n+      #188 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$0:(CLjava/io/Writer;)V\n+      #190 (Ljava/io/Writer;)V\n+  1: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #191 (Ljava/lang/Object;)V\n+      #194 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$1:(Ljava/lang/CharSequence;Ljava/io/Writer;)V\n+      #195 (Ljava/io/Writer;)V\n+  2: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #196 (Ljava/lang/Object;)V\n+      #199 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$2:(Ljava/lang/CharSequence;IILjava/io/Writer;)V\n+      #200 (Ljava/io/Writer;)V\n+  3: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #201 (Ljava/lang/Object;)V\n+      #204 REF_invokeVirtual java/io/Writer.close:()V\n+      #205 (Ljava/io/Writer;)V\n+  4: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #206 (Ljava/lang/Object;)V\n+      #209 REF_invokeVirtual java/io/Writer.flush:()V\n+      #210 (Ljava/io/Writer;)V\n+  5: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #211 (Ljava/lang/Object;)V\n+      #214 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$5:([CLjava/io/Writer;)V\n+      #215 (Ljava/io/Writer;)V\n+  6: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #216 (Ljava/lang/Object;)V\n+      #219 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$6:([CIILjava/io/Writer;)V\n+      #220 (Ljava/io/Writer;)V\n+  7: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #221 (Ljava/lang/Object;)V\n+      #224 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$7:(ILjava/io/Writer;)V\n+      #225 (Ljava/io/Writer;)V\n+  8: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #226 (Ljava/lang/Object;)V\n+      #229 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$8:(Ljava/lang/String;Ljava/io/Writer;)V\n+      #230 (Ljava/io/Writer;)V\n+  9: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #231 (Ljava/lang/Object;)V\n+      #234 REF_invokeStatic org/apache/commons/io/output/FilterCollectionWriter.lambda$9:(Ljava/lang/String;IILjava/io/Writer;)V\n+      #235 (Ljava/io/Writer;)V\n+  10: #183 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #237 (Ljava/lang/Object;)Z\n+      #243 REF_invokeStatic java/util/Objects.nonNull:(Ljava/lang/Object;)Z\n+      #245 (Ljava/io/Writer;)Z\n InnerClasses:\n-  public static final #233= #229 of #231; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #251= #247 of #249; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
