{"diffoscope-json-version": 1, "source1": "first/IOQuadFunction.class", "source2": "second/IOQuadFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,14 +3,14 @@\n \n import java.io.IOException;\n import java.util.Objects;\n \n @FunctionalInterface\n public interface IOQuadFunction<T, U, V, W, R>\n {\n-    default <X> IOQuadFunction<T, U, V, W, X> andThen(final IOFunction<? super R, ? extends X> after) {\n-        Objects.requireNonNull(after);\n-        return (IOQuadFunction<T, U, V, W, X>)((t, u, v, w) -> after.apply(this.apply(t, u, v, w)));\n+    default <X> IOQuadFunction<T, U, V, W, X> andThen(final IOFunction<? super R, ? extends X> obj) {\n+        Objects.requireNonNull(obj);\n+        return (IOQuadFunction<T, U, V, W, X>)((o, o2, o3, o4) -> ioFunction.apply(this.apply(o, o2, o3, o4)));\n     }\n     \n     R apply(final T p0, final U p1, final V p2, final W p3) throws IOException;\n }\n"}]}
