{"diffoscope-json-version": 1, "source1": "first/Failable.class", "source2": "second/Failable.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,895 +1,895 @@\n-  SHA-256 checksum 9242ef55e697d11f4ea5adb86d19d8a1236d43d143eff54a38da783b4382e041\n+  SHA-256 checksum 3c3f22e90e6fe6ef2dcbf32fac5d3b9627c1a6570ac888cff06e8c2624ba8737\n   Compiled from \"Failable.java\"\n public class org.apache.commons.lang3.function.Failable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #67                         // org/apache/commons/lang3/function/Failable\n-  super_class: #68                        // java/lang/Object\n+  this_class: #6                          // org/apache/commons/lang3/function/Failable\n+  super_class: #175                       // java/lang/Object\n   interfaces: 0, fields: 0, methods: 51, attributes: 3\n Constant pool:\n-    #1 = InvokeDynamic      #0:#279       // #0:run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-    #2 = Methodref          #67.#280      // org/apache/commons/lang3/function/Failable.run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-    #3 = InvokeDynamic      #1:#282       // #1:run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-    #4 = InvokeDynamic      #2:#284       // #2:run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n-    #5 = InvokeDynamic      #3:#286       // #3:run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n-    #6 = InvokeDynamic      #4:#288       // #4:run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n-    #7 = InvokeDynamic      #5:#291       // #5:get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-    #8 = Methodref          #67.#292      // org/apache/commons/lang3/function/Failable.get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-    #9 = InvokeDynamic      #6:#294       // #6:get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-   #10 = InvokeDynamic      #7:#297       // #7:getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n-   #11 = Methodref          #67.#298      // org/apache/commons/lang3/function/Failable.getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n-   #12 = InvokeDynamic      #8:#301       // #8:accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n-   #13 = InvokeDynamic      #9:#304       // #9:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n-   #14 = InvokeDynamic      #10:#307      // #10:test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n-   #15 = InvokeDynamic      #11:#309      // #11:call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n-   #16 = InvokeDynamic      #12:#312      // #12:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-   #17 = InvokeDynamic      #13:#315      // #13:apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-   #18 = InvokeDynamic      #14:#318      // #14:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-   #19 = InvokeDynamic      #15:#320      // #15:run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n-   #20 = InvokeDynamic      #16:#322      // #16:get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n-   #21 = Methodref          #323.#324     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = InvokeDynamic      #17:#326      // #17:get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-   #23 = InterfaceMethodref #327.#328     // org/apache/commons/lang3/function/FailableSupplier.get:()Ljava/lang/Object;\n-   #24 = Class              #329          // java/lang/Throwable\n-   #25 = Methodref          #67.#330      // org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #26 = InterfaceMethodref #331.#332     // org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z\n-   #27 = InterfaceMethodref #333.#334     // org/apache/commons/lang3/function/FailableDoubleSupplier.getAsDouble:()D\n-   #28 = InterfaceMethodref #335.#336     // org/apache/commons/lang3/function/FailableIntSupplier.getAsInt:()I\n-   #29 = InterfaceMethodref #337.#338     // org/apache/commons/lang3/function/FailableLongSupplier.getAsLong:()J\n-   #30 = String             #204          // throwable\n-   #31 = Methodref          #323.#339     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #32 = Class              #340          // java/lang/RuntimeException\n-   #33 = Class              #341          // java/lang/Error\n-   #34 = Class              #342          // java/io/IOException\n-   #35 = Class              #343          // java/io/UncheckedIOException\n-   #36 = Methodref          #35.#344      // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-   #37 = Class              #345          // java/lang/reflect/UndeclaredThrowableException\n-   #38 = Methodref          #37.#346      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #39 = InterfaceMethodref #242.#347     // org/apache/commons/lang3/function/FailableRunnable.run:()V\n-   #40 = Class              #349          // org/apache/commons/lang3/stream/Streams$FailableStream\n-   #41 = InterfaceMethodref #350.#351     // java/util/Collection.stream:()Ljava/util/stream/Stream;\n-   #42 = Methodref          #40.#352      // org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n-   #43 = InvokeDynamic      #18:#355      // #18:getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-   #44 = Methodref          #67.#356      // org/apache/commons/lang3/function/Failable.getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n-   #45 = InvokeDynamic      #19:#358      // #19:getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-   #46 = InvokeDynamic      #20:#361      // #20:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #47 = String             #161          // runnable\n-   #48 = InterfaceMethodref #240.#362     // org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n-   #49 = Methodref          #67.#363      // org/apache/commons/lang3/function/Failable.tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-   #50 = Methodref          #68.#364      // java/lang/Object.\"<init>\":()V\n-   #51 = InterfaceMethodref #365.#366     // org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n-   #52 = InterfaceMethodref #367.#368     // org/apache/commons/lang3/function/FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #53 = Methodref          #67.#369      // org/apache/commons/lang3/function/Failable.test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #54 = Methodref          #67.#370      // org/apache/commons/lang3/function/Failable.apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-   #55 = Methodref          #67.#371      // org/apache/commons/lang3/function/Failable.accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-   #56 = Methodref          #67.#372      // org/apache/commons/lang3/function/Failable.call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-   #57 = Methodref          #67.#373      // org/apache/commons/lang3/function/Failable.test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #58 = Methodref          #67.#374      // org/apache/commons/lang3/function/Failable.apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #59 = Methodref          #67.#375      // org/apache/commons/lang3/function/Failable.accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #60 = InterfaceMethodref #376.#377     // org/apache/commons/lang3/function/FailableDoubleBinaryOperator.applyAsDouble:(DD)D\n-   #61 = InterfaceMethodref #378.#379     // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #62 = InterfaceMethodref #380.#381     // org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #63 = InterfaceMethodref #382.#383     // org/apache/commons/lang3/function/FailableLongConsumer.accept:(J)V\n-   #64 = InterfaceMethodref #384.#385     // org/apache/commons/lang3/function/FailableIntConsumer.accept:(I)V\n-   #65 = InterfaceMethodref #386.#387     // org/apache/commons/lang3/function/FailableDoubleConsumer.accept:(D)V\n-   #66 = InterfaceMethodref #388.#389     // org/apache/commons/lang3/function/FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n-   #67 = Class              #390          // org/apache/commons/lang3/function/Failable\n-   #68 = Class              #391          // java/lang/Object\n-   #69 = Utf8               accept\n-   #70 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #71 = Utf8               Code\n-   #72 = Utf8               LineNumberTable\n-   #73 = Utf8               LocalVariableTable\n-   #74 = Utf8               consumer\n-   #75 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer;\n-   #76 = Utf8               object1\n-   #77 = Utf8               Ljava/lang/Object;\n-   #78 = Utf8               object2\n-   #79 = Utf8               LocalVariableTypeTable\n-   #80 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;\n-   #81 = Utf8               TT;\n-   #82 = Utf8               TU;\n-   #83 = Utf8               Signature\n-   #84 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;TT;TU;)V\n-   #85 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-   #86 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n-   #87 = Utf8               object\n-   #88 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n-   #89 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;TT;)V\n-   #90 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n-   #91 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleConsumer;\n-   #92 = Utf8               value\n-   #93 = Utf8               D\n-   #94 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;\n-   #95 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;D)V\n-   #96 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n-   #97 = Utf8               Lorg/apache/commons/lang3/function/FailableIntConsumer;\n-   #98 = Utf8               I\n-   #99 = Utf8               Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;\n-  #100 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;I)V\n-  #101 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n-  #102 = Utf8               Lorg/apache/commons/lang3/function/FailableLongConsumer;\n-  #103 = Utf8               J\n-  #104 = Utf8               Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;\n-  #105 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;J)V\n-  #106 = Utf8               apply\n-  #107 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #108 = Utf8               function\n-  #109 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction;\n-  #110 = Utf8               input1\n-  #111 = Utf8               input2\n-  #112 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n-  #113 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;TT;TU;)TR;\n-  #114 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #115 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n-  #116 = Utf8               input\n-  #117 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n-  #118 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;TT;)TR;\n-  #119 = Utf8               applyAsDouble\n-  #120 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n-  #121 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;\n-  #122 = Utf8               left\n-  #123 = Utf8               right\n-  #124 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;\n-  #125 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;DD)D\n-  #126 = Utf8               asBiConsumer\n-  #127 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n-  #128 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;\n-  #129 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;)Ljava/util/function/BiConsumer<TT;TU;>;\n-  #130 = Utf8               asBiFunction\n-  #131 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n-  #132 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;\n-  #133 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;)Ljava/util/function/BiFunction<TT;TU;TR;>;\n-  #134 = Utf8               asBiPredicate\n-  #135 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n-  #136 = Utf8               predicate\n-  #137 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate;\n-  #138 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;\n-  #139 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;)Ljava/util/function/BiPredicate<TT;TU;>;\n-  #140 = Utf8               asCallable\n-  #141 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n-  #142 = Utf8               callable\n-  #143 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable;\n-  #144 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;\n-  #145 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;)Ljava/util/concurrent/Callable<TV;>;\n-  #146 = Utf8               asConsumer\n-  #147 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-  #148 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;\n-  #149 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;)Ljava/util/function/Consumer<TT;>;\n-  #150 = Utf8               asFunction\n-  #151 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-  #152 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;\n-  #153 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;)Ljava/util/function/Function<TT;TR;>;\n-  #154 = Utf8               asPredicate\n-  #155 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-  #156 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n-  #157 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;\n-  #158 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;)Ljava/util/function/Predicate<TT;>;\n-  #159 = Utf8               asRunnable\n-  #160 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n-  #161 = Utf8               runnable\n-  #162 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #163 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<*>;\n-  #164 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<*>;)Ljava/lang/Runnable;\n-  #165 = Utf8               asSupplier\n-  #166 = Utf8               (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n-  #167 = Utf8               supplier\n-  #168 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #169 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;\n-  #170 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;)Ljava/util/function/Supplier<TT;>;\n-  #171 = Utf8               call\n-  #172 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-  #173 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;\n-  #174 = Utf8               <V:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;)TV;\n-  #175 = Utf8               get\n-  #176 = Utf8               (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-  #177 = Utf8               t\n-  #178 = Utf8               Ljava/lang/Throwable;\n-  #179 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;\n-  #180 = Utf8               StackMapTable\n-  #181 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;)TT;\n-  #182 = Utf8               getAsBoolean\n-  #183 = Utf8               (Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n-  #184 = Utf8               Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-  #185 = Utf8               Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;\n-  #186 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;)Z\n-  #187 = Utf8               getAsDouble\n-  #188 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n-  #189 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n-  #190 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;\n-  #191 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;)D\n-  #192 = Utf8               getAsInt\n-  #193 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntSupplier;)I\n-  #194 = Utf8               Lorg/apache/commons/lang3/function/FailableIntSupplier;\n-  #195 = Utf8               Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;\n-  #196 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;)I\n-  #197 = Utf8               getAsLong\n-  #198 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongSupplier;)J\n-  #199 = Utf8               Lorg/apache/commons/lang3/function/FailableLongSupplier;\n-  #200 = Utf8               Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;\n-  #201 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;)J\n-  #202 = Utf8               rethrow\n-  #203 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #204 = Utf8               throwable\n-  #205 = Utf8               run\n-  #206 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #207 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;\n-  #208 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;)V\n-  #209 = Utf8               stream\n-  #210 = Utf8               FailableStream\n-  #211 = Utf8               InnerClasses\n-  #212 = Utf8               (Ljava/util/Collection;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n-  #213 = Utf8               collection\n-  #214 = Utf8               Ljava/util/Collection;\n-  #215 = Utf8               Ljava/util/Collection<TE;>;\n-  #216 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TE;>;\n-  #217 = Utf8               (Ljava/util/stream/Stream;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n-  #218 = Utf8               Ljava/util/stream/Stream;\n-  #219 = Utf8               Ljava/util/stream/Stream<TT;>;\n-  #220 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/stream/Stream<TT;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TT;>;\n-  #221 = Utf8               test\n-  #222 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #223 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;\n-  #224 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;TT;TU;)Z\n-  #225 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #226 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-  #227 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;TT;)Z\n-  #228 = Utf8               tryWithResources\n-  #229 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #230 = Utf8               actualErrorHandler\n-  #231 = Utf8               failableRunnable\n-  #232 = Utf8               action\n-  #233 = Utf8               errorHandler\n-  #234 = Utf8               resources\n-  #235 = Utf8               [Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #236 = Utf8               th\n-  #237 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;\n-  #238 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n-  #239 = Utf8               [Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n-  #240 = Class              #392          // org/apache/commons/lang3/function/FailableConsumer\n-  #241 = Class              #235          // \"[Lorg/apache/commons/lang3/function/FailableRunnable;\"\n-  #242 = Class              #393          // org/apache/commons/lang3/function/FailableRunnable\n-  #243 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n-  #244 = Utf8               RuntimeVisibleAnnotations\n-  #245 = Utf8               Ljava/lang/SafeVarargs;\n-  #246 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #247 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n-  #248 = Utf8               <init>\n-  #249 = Utf8               ()V\n-  #250 = Utf8               this\n-  #251 = Utf8               Lorg/apache/commons/lang3/function/Failable;\n-  #252 = Utf8               lambda$test$18\n-  #253 = Utf8               Exceptions\n-  #254 = Utf8               lambda$test$17\n-  #255 = Utf8               lambda$asSupplier$16\n-  #256 = Utf8               lambda$asRunnable$15\n-  #257 = Utf8               lambda$asPredicate$14\n-  #258 = Utf8               lambda$asFunction$13\n-  #259 = Utf8               lambda$asConsumer$12\n-  #260 = Utf8               lambda$asCallable$11\n-  #261 = Class              #394          // java/lang/Exception\n-  #262 = Utf8               lambda$asBiPredicate$10\n-  #263 = Utf8               lambda$asBiFunction$9\n-  #264 = Utf8               lambda$asBiConsumer$8\n-  #265 = Utf8               lambda$applyAsDouble$7\n-  #266 = Utf8               lambda$apply$6\n-  #267 = Utf8               lambda$apply$5\n-  #268 = Utf8               lambda$accept$4\n-  #269 = Utf8               lambda$accept$3\n-  #270 = Utf8               lambda$accept$2\n-  #271 = Utf8               lambda$accept$1\n-  #272 = Utf8               lambda$accept$0\n-  #273 = Utf8               SourceFile\n-  #274 = Utf8               Failable.java\n-  #275 = Utf8               BootstrapMethods\n-  #276 = MethodHandle       6:#395        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #277 = MethodType         #249          //  ()V\n-  #278 = MethodHandle       6:#396        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #279 = NameAndType        #205:#397     // run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #280 = NameAndType        #205:#206     // run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #281 = MethodHandle       6:#398        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #282 = NameAndType        #205:#399     // run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #283 = MethodHandle       6:#400        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n-  #284 = NameAndType        #205:#401     // run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #285 = MethodHandle       6:#402        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n-  #286 = NameAndType        #205:#403     // run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #287 = MethodHandle       6:#404        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n-  #288 = NameAndType        #205:#405     // run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #289 = MethodType         #406          //  ()Ljava/lang/Object;\n-  #290 = MethodHandle       6:#407        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #291 = NameAndType        #175:#408     // get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #292 = NameAndType        #175:#176     // get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-  #293 = MethodHandle       6:#409        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #294 = NameAndType        #175:#410     // get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #295 = MethodType         #411          //  ()D\n-  #296 = MethodHandle       6:#412        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n-  #297 = NameAndType        #187:#413     // getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n-  #298 = NameAndType        #187:#188     // getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n-  #299 = MethodType         #414          //  (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #300 = MethodHandle       6:#415        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #301 = NameAndType        #69:#127      // accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n-  #302 = MethodType         #416          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #303 = MethodHandle       6:#417        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #304 = NameAndType        #106:#131     // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n-  #305 = MethodType         #418          //  (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #306 = MethodHandle       6:#419        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #307 = NameAndType        #221:#135     // test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n-  #308 = MethodHandle       6:#420        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-  #309 = NameAndType        #171:#141     // call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n-  #310 = MethodType         #421          //  (Ljava/lang/Object;)V\n-  #311 = MethodHandle       6:#422        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #312 = NameAndType        #69:#147      // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n-  #313 = MethodType         #423          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #314 = MethodHandle       6:#424        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #315 = NameAndType        #106:#151     // apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n-  #316 = MethodType         #425          //  (Ljava/lang/Object;)Z\n-  #317 = MethodHandle       6:#426        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #318 = NameAndType        #221:#155     // test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n-  #319 = MethodHandle       6:#427        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #320 = NameAndType        #205:#160     // run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n-  #321 = MethodHandle       6:#428        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-  #322 = NameAndType        #175:#166     // get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n-  #323 = Class              #429          // java/util/Objects\n-  #324 = NameAndType        #430:#423     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #325 = MethodHandle       9:#431        // REF_invokeInterface org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n-  #326 = NameAndType        #175:#432     // get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #327 = Class              #433          // org/apache/commons/lang3/function/FailableSupplier\n-  #328 = NameAndType        #175:#406     // get:()Ljava/lang/Object;\n-  #329 = Utf8               java/lang/Throwable\n-  #330 = NameAndType        #202:#203     // rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #331 = Class              #434          // org/apache/commons/lang3/function/FailableBooleanSupplier\n-  #332 = NameAndType        #182:#435     // getAsBoolean:()Z\n-  #333 = Class              #436          // org/apache/commons/lang3/function/FailableDoubleSupplier\n-  #334 = NameAndType        #187:#411     // getAsDouble:()D\n-  #335 = Class              #437          // org/apache/commons/lang3/function/FailableIntSupplier\n-  #336 = NameAndType        #192:#438     // getAsInt:()I\n-  #337 = Class              #439          // org/apache/commons/lang3/function/FailableLongSupplier\n-  #338 = NameAndType        #197:#440     // getAsLong:()J\n-  #339 = NameAndType        #430:#441     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #340 = Utf8               java/lang/RuntimeException\n-  #341 = Utf8               java/lang/Error\n-  #342 = Utf8               java/io/IOException\n-  #343 = Utf8               java/io/UncheckedIOException\n-  #344 = NameAndType        #248:#442     // \"<init>\":(Ljava/io/IOException;)V\n-  #345 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #346 = NameAndType        #248:#443     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #347 = NameAndType        #205:#249     // run:()V\n-  #348 = Class              #444          // org/apache/commons/lang3/stream/Streams\n-  #349 = Utf8               org/apache/commons/lang3/stream/Streams$FailableStream\n-  #350 = Class              #445          // java/util/Collection\n-  #351 = NameAndType        #209:#446     // stream:()Ljava/util/stream/Stream;\n-  #352 = NameAndType        #248:#447     // \"<init>\":(Ljava/util/stream/Stream;)V\n-  #353 = MethodType         #435          //  ()Z\n-  #354 = MethodHandle       6:#448        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #355 = NameAndType        #182:#449     // getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-  #356 = NameAndType        #182:#183     // getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n-  #357 = MethodHandle       6:#450        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #358 = NameAndType        #182:#451     // getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-  #359 = MethodHandle       6:#25         // REF_invokeStatic org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #360 = MethodType         #443          //  (Ljava/lang/Throwable;)V\n-  #361 = NameAndType        #69:#452      // accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #362 = NameAndType        #69:#421      // accept:(Ljava/lang/Object;)V\n-  #363 = NameAndType        #228:#229     // tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #364 = NameAndType        #248:#249     // \"<init>\":()V\n-  #365 = Class              #453          // org/apache/commons/lang3/function/FailablePredicate\n-  #366 = NameAndType        #221:#425     // test:(Ljava/lang/Object;)Z\n-  #367 = Class              #454          // org/apache/commons/lang3/function/FailableBiPredicate\n-  #368 = NameAndType        #221:#418     // test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #369 = NameAndType        #221:#225     // test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #370 = NameAndType        #106:#114     // apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #371 = NameAndType        #69:#85       // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #372 = NameAndType        #171:#172     // call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-  #373 = NameAndType        #221:#222     // test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #374 = NameAndType        #106:#107     // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #375 = NameAndType        #69:#70       // accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #376 = Class              #455          // org/apache/commons/lang3/function/FailableDoubleBinaryOperator\n-  #377 = NameAndType        #119:#456     // applyAsDouble:(DD)D\n-  #378 = Class              #457          // org/apache/commons/lang3/function/FailableFunction\n-  #379 = NameAndType        #106:#423     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #380 = Class              #458          // org/apache/commons/lang3/function/FailableBiFunction\n-  #381 = NameAndType        #106:#416     // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #382 = Class              #459          // org/apache/commons/lang3/function/FailableLongConsumer\n-  #383 = NameAndType        #69:#460      // accept:(J)V\n-  #384 = Class              #461          // org/apache/commons/lang3/function/FailableIntConsumer\n-  #385 = NameAndType        #69:#462      // accept:(I)V\n-  #386 = Class              #463          // org/apache/commons/lang3/function/FailableDoubleConsumer\n-  #387 = NameAndType        #69:#464      // accept:(D)V\n-  #388 = Class              #465          // org/apache/commons/lang3/function/FailableBiConsumer\n-  #389 = NameAndType        #69:#414      // accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n-  #390 = Utf8               org/apache/commons/lang3/function/Failable\n-  #391 = Utf8               java/lang/Object\n-  #392 = Utf8               org/apache/commons/lang3/function/FailableConsumer\n-  #393 = Utf8               org/apache/commons/lang3/function/FailableRunnable\n-  #394 = Utf8               java/lang/Exception\n-  #395 = Methodref          #466.#467     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #396 = Methodref          #67.#468      // org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #397 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #398 = Methodref          #67.#469      // org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #399 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #400 = Methodref          #67.#470      // org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n-  #401 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #402 = Methodref          #67.#471      // org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n-  #403 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #404 = Methodref          #67.#472      // org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n-  #405 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n-  #406 = Utf8               ()Ljava/lang/Object;\n-  #407 = Methodref          #67.#473      // org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #408 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #409 = Methodref          #67.#474      // org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #410 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #411 = Utf8               ()D\n-  #412 = Methodref          #67.#475      // org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n-  #413 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n-  #414 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #415 = Methodref          #67.#476      // org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #416 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #417 = Methodref          #67.#477      // org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #418 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #419 = Methodref          #67.#478      // org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #420 = Methodref          #67.#479      // org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-  #421 = Utf8               (Ljava/lang/Object;)V\n-  #422 = Methodref          #67.#480      // org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #423 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #424 = Methodref          #67.#481      // org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #425 = Utf8               (Ljava/lang/Object;)Z\n-  #426 = Methodref          #67.#482      // org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #427 = Methodref          #67.#483      // org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #428 = Methodref          #67.#484      // org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-  #429 = Utf8               java/util/Objects\n-  #430 = Utf8               requireNonNull\n-  #431 = InterfaceMethodref #485.#486     // org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n-  #432 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-  #433 = Utf8               org/apache/commons/lang3/function/FailableSupplier\n-  #434 = Utf8               org/apache/commons/lang3/function/FailableBooleanSupplier\n-  #435 = Utf8               ()Z\n-  #436 = Utf8               org/apache/commons/lang3/function/FailableDoubleSupplier\n-  #437 = Utf8               org/apache/commons/lang3/function/FailableIntSupplier\n-  #438 = Utf8               ()I\n-  #439 = Utf8               org/apache/commons/lang3/function/FailableLongSupplier\n-  #440 = Utf8               ()J\n-  #441 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #442 = Utf8               (Ljava/io/IOException;)V\n-  #443 = Utf8               (Ljava/lang/Throwable;)V\n-  #444 = Utf8               org/apache/commons/lang3/stream/Streams\n-  #445 = Utf8               java/util/Collection\n-  #446 = Utf8               ()Ljava/util/stream/Stream;\n-  #447 = Utf8               (Ljava/util/stream/Stream;)V\n-  #448 = Methodref          #67.#487      // org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #449 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-  #450 = Methodref          #67.#488      // org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #451 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-  #452 = Utf8               ()Lorg/apache/commons/lang3/function/FailableConsumer;\n-  #453 = Utf8               org/apache/commons/lang3/function/FailablePredicate\n-  #454 = Utf8               org/apache/commons/lang3/function/FailableBiPredicate\n-  #455 = Utf8               org/apache/commons/lang3/function/FailableDoubleBinaryOperator\n-  #456 = Utf8               (DD)D\n-  #457 = Utf8               org/apache/commons/lang3/function/FailableFunction\n-  #458 = Utf8               org/apache/commons/lang3/function/FailableBiFunction\n-  #459 = Utf8               org/apache/commons/lang3/function/FailableLongConsumer\n-  #460 = Utf8               (J)V\n-  #461 = Utf8               org/apache/commons/lang3/function/FailableIntConsumer\n-  #462 = Utf8               (I)V\n-  #463 = Utf8               org/apache/commons/lang3/function/FailableDoubleConsumer\n-  #464 = Utf8               (D)V\n-  #465 = Utf8               org/apache/commons/lang3/function/FailableBiConsumer\n-  #466 = Class              #489          // java/lang/invoke/LambdaMetafactory\n-  #467 = NameAndType        #490:#493     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #468 = NameAndType        #272:#70      // lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #469 = NameAndType        #271:#85      // lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #470 = NameAndType        #270:#90      // lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n-  #471 = NameAndType        #269:#96      // lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n-  #472 = NameAndType        #268:#101     // lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n-  #473 = NameAndType        #267:#107     // lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #474 = NameAndType        #266:#114     // lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #475 = NameAndType        #265:#120     // lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n-  #476 = NameAndType        #264:#70      // lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #477 = NameAndType        #263:#107     // lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #478 = NameAndType        #262:#222     // lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #479 = NameAndType        #260:#172     // lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-  #480 = NameAndType        #259:#85      // lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-  #481 = NameAndType        #258:#114     // lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #482 = NameAndType        #257:#225     // lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #483 = NameAndType        #256:#206     // lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-  #484 = NameAndType        #255:#176     // lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-  #485 = Class              #494          // org/apache/commons/lang3/function/FailableCallable\n-  #486 = NameAndType        #171:#406     // call:()Ljava/lang/Object;\n-  #487 = NameAndType        #254:#222     // lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #488 = NameAndType        #252:#225     // lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-  #489 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #490 = Utf8               metafactory\n-  #491 = Class              #496          // java/lang/invoke/MethodHandles$Lookup\n-  #492 = Utf8               Lookup\n-  #493 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #494 = Utf8               org/apache/commons/lang3/function/FailableCallable\n-  #495 = Class              #497          // java/lang/invoke/MethodHandles\n-  #496 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #497 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = InvokeDynamic      #0:#2         // #0:run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+    #2 = NameAndType        #3:#4         // run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+    #3 = Utf8               run\n+    #4 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+    #5 = Methodref          #6.#7         // org/apache/commons/lang3/function/Failable.run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+    #6 = Class              #8            // org/apache/commons/lang3/function/Failable\n+    #7 = NameAndType        #3:#9         // run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+    #8 = Utf8               org/apache/commons/lang3/function/Failable\n+    #9 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+   #10 = InvokeDynamic      #1:#11        // #1:run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #11 = NameAndType        #3:#12        // run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #12 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #13 = InvokeDynamic      #2:#14        // #2:run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #14 = NameAndType        #3:#15        // run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #15 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #16 = InvokeDynamic      #3:#17        // #3:run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #17 = NameAndType        #3:#18        // run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #18 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #19 = InvokeDynamic      #4:#20        // #4:run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #20 = NameAndType        #3:#21        // run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #21 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n+   #22 = InvokeDynamic      #5:#23        // #5:get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #23 = NameAndType        #24:#25       // get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #24 = Utf8               get\n+   #25 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #26 = Methodref          #6.#27        // org/apache/commons/lang3/function/Failable.get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+   #27 = NameAndType        #24:#28       // get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+   #28 = Utf8               (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+   #29 = InvokeDynamic      #6:#30        // #6:get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #30 = NameAndType        #24:#31       // get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #31 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #32 = InvokeDynamic      #7:#33        // #7:getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n+   #33 = NameAndType        #34:#35       // getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n+   #34 = Utf8               getAsDouble\n+   #35 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n+   #36 = Methodref          #6.#37        // org/apache/commons/lang3/function/Failable.getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n+   #37 = NameAndType        #34:#38       // getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n+   #38 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n+   #39 = InvokeDynamic      #8:#40        // #8:accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n+   #40 = NameAndType        #41:#42       // accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n+   #41 = Utf8               accept\n+   #42 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n+   #43 = InvokeDynamic      #9:#44        // #9:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n+   #44 = NameAndType        #45:#46       // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n+   #45 = Utf8               apply\n+   #46 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n+   #47 = InvokeDynamic      #10:#48       // #10:test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n+   #48 = NameAndType        #49:#50       // test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n+   #49 = Utf8               test\n+   #50 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n+   #51 = InvokeDynamic      #11:#52       // #11:call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n+   #52 = NameAndType        #53:#54       // call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n+   #53 = Utf8               call\n+   #54 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n+   #55 = InvokeDynamic      #12:#56       // #12:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #56 = NameAndType        #41:#57       // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #57 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+   #58 = InvokeDynamic      #13:#59       // #13:apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #59 = NameAndType        #45:#60       // apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #60 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+   #61 = InvokeDynamic      #14:#62       // #14:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #62 = NameAndType        #49:#63       // test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #63 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+   #64 = InvokeDynamic      #15:#65       // #15:run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n+   #65 = NameAndType        #3:#66        // run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n+   #66 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n+   #67 = InvokeDynamic      #16:#68       // #16:get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n+   #68 = NameAndType        #24:#69       // get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n+   #69 = Utf8               (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n+   #70 = Methodref          #71.#72       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #71 = Class              #73           // java/util/Objects\n+   #72 = NameAndType        #74:#75       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #73 = Utf8               java/util/Objects\n+   #74 = Utf8               requireNonNull\n+   #75 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #76 = InvokeDynamic      #17:#77       // #17:get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #77 = NameAndType        #24:#78       // get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #78 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+   #79 = InterfaceMethodref #80.#81       // org/apache/commons/lang3/function/FailableSupplier.get:()Ljava/lang/Object;\n+   #80 = Class              #82           // org/apache/commons/lang3/function/FailableSupplier\n+   #81 = NameAndType        #24:#83       // get:()Ljava/lang/Object;\n+   #82 = Utf8               org/apache/commons/lang3/function/FailableSupplier\n+   #83 = Utf8               ()Ljava/lang/Object;\n+   #84 = Class              #85           // java/lang/Throwable\n+   #85 = Utf8               java/lang/Throwable\n+   #86 = Methodref          #6.#87        // org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #87 = NameAndType        #88:#89       // rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #88 = Utf8               rethrow\n+   #89 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #90 = InterfaceMethodref #91.#92       // org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z\n+   #91 = Class              #93           // org/apache/commons/lang3/function/FailableBooleanSupplier\n+   #92 = NameAndType        #94:#95       // getAsBoolean:()Z\n+   #93 = Utf8               org/apache/commons/lang3/function/FailableBooleanSupplier\n+   #94 = Utf8               getAsBoolean\n+   #95 = Utf8               ()Z\n+   #96 = InterfaceMethodref #97.#98       // org/apache/commons/lang3/function/FailableDoubleSupplier.getAsDouble:()D\n+   #97 = Class              #99           // org/apache/commons/lang3/function/FailableDoubleSupplier\n+   #98 = NameAndType        #34:#100      // getAsDouble:()D\n+   #99 = Utf8               org/apache/commons/lang3/function/FailableDoubleSupplier\n+  #100 = Utf8               ()D\n+  #101 = InterfaceMethodref #102.#103     // org/apache/commons/lang3/function/FailableIntSupplier.getAsInt:()I\n+  #102 = Class              #104          // org/apache/commons/lang3/function/FailableIntSupplier\n+  #103 = NameAndType        #105:#106     // getAsInt:()I\n+  #104 = Utf8               org/apache/commons/lang3/function/FailableIntSupplier\n+  #105 = Utf8               getAsInt\n+  #106 = Utf8               ()I\n+  #107 = InterfaceMethodref #108.#109     // org/apache/commons/lang3/function/FailableLongSupplier.getAsLong:()J\n+  #108 = Class              #110          // org/apache/commons/lang3/function/FailableLongSupplier\n+  #109 = NameAndType        #111:#112     // getAsLong:()J\n+  #110 = Utf8               org/apache/commons/lang3/function/FailableLongSupplier\n+  #111 = Utf8               getAsLong\n+  #112 = Utf8               ()J\n+  #113 = String             #114          // throwable\n+  #114 = Utf8               throwable\n+  #115 = Methodref          #71.#116      // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #116 = NameAndType        #74:#117      // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #118 = Class              #119          // java/lang/RuntimeException\n+  #119 = Utf8               java/lang/RuntimeException\n+  #120 = Class              #121          // java/lang/Error\n+  #121 = Utf8               java/lang/Error\n+  #122 = Class              #123          // java/io/IOException\n+  #123 = Utf8               java/io/IOException\n+  #124 = Class              #125          // java/io/UncheckedIOException\n+  #125 = Utf8               java/io/UncheckedIOException\n+  #126 = Methodref          #124.#127     // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+  #127 = NameAndType        #128:#129     // \"<init>\":(Ljava/io/IOException;)V\n+  #128 = Utf8               <init>\n+  #129 = Utf8               (Ljava/io/IOException;)V\n+  #130 = Class              #131          // java/lang/reflect/UndeclaredThrowableException\n+  #131 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #132 = Methodref          #130.#133     // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #133 = NameAndType        #128:#134     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #134 = Utf8               (Ljava/lang/Throwable;)V\n+  #135 = InterfaceMethodref #136.#137     // org/apache/commons/lang3/function/FailableRunnable.run:()V\n+  #136 = Class              #138          // org/apache/commons/lang3/function/FailableRunnable\n+  #137 = NameAndType        #3:#139       // run:()V\n+  #138 = Utf8               org/apache/commons/lang3/function/FailableRunnable\n+  #139 = Utf8               ()V\n+  #140 = Class              #141          // org/apache/commons/lang3/stream/Streams$FailableStream\n+  #141 = Utf8               org/apache/commons/lang3/stream/Streams$FailableStream\n+  #142 = InterfaceMethodref #143.#144     // java/util/Collection.stream:()Ljava/util/stream/Stream;\n+  #143 = Class              #145          // java/util/Collection\n+  #144 = NameAndType        #146:#147     // stream:()Ljava/util/stream/Stream;\n+  #145 = Utf8               java/util/Collection\n+  #146 = Utf8               stream\n+  #147 = Utf8               ()Ljava/util/stream/Stream;\n+  #148 = Methodref          #140.#149     // org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n+  #149 = NameAndType        #128:#150     // \"<init>\":(Ljava/util/stream/Stream;)V\n+  #150 = Utf8               (Ljava/util/stream/Stream;)V\n+  #151 = InvokeDynamic      #18:#152      // #18:getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #152 = NameAndType        #94:#153      // getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #153 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #154 = Methodref          #6.#155       // org/apache/commons/lang3/function/Failable.getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n+  #155 = NameAndType        #94:#156      // getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n+  #156 = Utf8               (Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n+  #157 = InvokeDynamic      #19:#158      // #19:getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #158 = NameAndType        #94:#159      // getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #159 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #160 = InvokeDynamic      #20:#161      // #20:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #161 = NameAndType        #41:#162      // accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #162 = Utf8               ()Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #163 = String             #164          // runnable\n+  #164 = Utf8               runnable\n+  #165 = InterfaceMethodref #166.#167     // org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n+  #166 = Class              #168          // org/apache/commons/lang3/function/FailableConsumer\n+  #167 = NameAndType        #41:#169      // accept:(Ljava/lang/Object;)V\n+  #168 = Utf8               org/apache/commons/lang3/function/FailableConsumer\n+  #169 = Utf8               (Ljava/lang/Object;)V\n+  #170 = Methodref          #6.#171       // org/apache/commons/lang3/function/Failable.tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #171 = NameAndType        #172:#173     // tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #172 = Utf8               tryWithResources\n+  #173 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #174 = Methodref          #175.#176     // java/lang/Object.\"<init>\":()V\n+  #175 = Class              #177          // java/lang/Object\n+  #176 = NameAndType        #128:#139     // \"<init>\":()V\n+  #177 = Utf8               java/lang/Object\n+  #178 = InterfaceMethodref #179.#180     // org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n+  #179 = Class              #181          // org/apache/commons/lang3/function/FailablePredicate\n+  #180 = NameAndType        #49:#182      // test:(Ljava/lang/Object;)Z\n+  #181 = Utf8               org/apache/commons/lang3/function/FailablePredicate\n+  #182 = Utf8               (Ljava/lang/Object;)Z\n+  #183 = InterfaceMethodref #184.#185     // org/apache/commons/lang3/function/FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #184 = Class              #186          // org/apache/commons/lang3/function/FailableBiPredicate\n+  #185 = NameAndType        #49:#187      // test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #186 = Utf8               org/apache/commons/lang3/function/FailableBiPredicate\n+  #187 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #188 = Methodref          #6.#189       // org/apache/commons/lang3/function/Failable.test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #189 = NameAndType        #49:#190      // test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #190 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #191 = Methodref          #6.#192       // org/apache/commons/lang3/function/Failable.apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #192 = NameAndType        #45:#193      // apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #193 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #194 = Methodref          #6.#195       // org/apache/commons/lang3/function/Failable.accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #195 = NameAndType        #41:#196      // accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #196 = Utf8               (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #197 = Methodref          #6.#198       // org/apache/commons/lang3/function/Failable.call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #198 = NameAndType        #53:#199      // call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #199 = Utf8               (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #200 = Methodref          #6.#201       // org/apache/commons/lang3/function/Failable.test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #201 = NameAndType        #49:#202      // test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #202 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #203 = Methodref          #6.#204       // org/apache/commons/lang3/function/Failable.apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #204 = NameAndType        #45:#205      // apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #205 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #206 = Methodref          #6.#207       // org/apache/commons/lang3/function/Failable.accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #207 = NameAndType        #41:#208      // accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #208 = Utf8               (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #209 = InterfaceMethodref #210.#211     // org/apache/commons/lang3/function/FailableDoubleBinaryOperator.applyAsDouble:(DD)D\n+  #210 = Class              #212          // org/apache/commons/lang3/function/FailableDoubleBinaryOperator\n+  #211 = NameAndType        #213:#214     // applyAsDouble:(DD)D\n+  #212 = Utf8               org/apache/commons/lang3/function/FailableDoubleBinaryOperator\n+  #213 = Utf8               applyAsDouble\n+  #214 = Utf8               (DD)D\n+  #215 = InterfaceMethodref #216.#217     // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #216 = Class              #218          // org/apache/commons/lang3/function/FailableFunction\n+  #217 = NameAndType        #45:#75       // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #218 = Utf8               org/apache/commons/lang3/function/FailableFunction\n+  #219 = InterfaceMethodref #220.#221     // org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #220 = Class              #222          // org/apache/commons/lang3/function/FailableBiFunction\n+  #221 = NameAndType        #45:#223      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #222 = Utf8               org/apache/commons/lang3/function/FailableBiFunction\n+  #223 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #224 = InterfaceMethodref #225.#226     // org/apache/commons/lang3/function/FailableLongConsumer.accept:(J)V\n+  #225 = Class              #227          // org/apache/commons/lang3/function/FailableLongConsumer\n+  #226 = NameAndType        #41:#228      // accept:(J)V\n+  #227 = Utf8               org/apache/commons/lang3/function/FailableLongConsumer\n+  #228 = Utf8               (J)V\n+  #229 = InterfaceMethodref #230.#231     // org/apache/commons/lang3/function/FailableIntConsumer.accept:(I)V\n+  #230 = Class              #232          // org/apache/commons/lang3/function/FailableIntConsumer\n+  #231 = NameAndType        #41:#233      // accept:(I)V\n+  #232 = Utf8               org/apache/commons/lang3/function/FailableIntConsumer\n+  #233 = Utf8               (I)V\n+  #234 = InterfaceMethodref #235.#236     // org/apache/commons/lang3/function/FailableDoubleConsumer.accept:(D)V\n+  #235 = Class              #237          // org/apache/commons/lang3/function/FailableDoubleConsumer\n+  #236 = NameAndType        #41:#238      // accept:(D)V\n+  #237 = Utf8               org/apache/commons/lang3/function/FailableDoubleConsumer\n+  #238 = Utf8               (D)V\n+  #239 = InterfaceMethodref #240.#241     // org/apache/commons/lang3/function/FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n+  #240 = Class              #242          // org/apache/commons/lang3/function/FailableBiConsumer\n+  #241 = NameAndType        #41:#243      // accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n+  #242 = Utf8               org/apache/commons/lang3/function/FailableBiConsumer\n+  #243 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #244 = Utf8               Code\n+  #245 = Utf8               LineNumberTable\n+  #246 = Utf8               LocalVariableTable\n+  #247 = Utf8               consumer\n+  #248 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer;\n+  #249 = Utf8               object1\n+  #250 = Utf8               Ljava/lang/Object;\n+  #251 = Utf8               object2\n+  #252 = Utf8               LocalVariableTypeTable\n+  #253 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;\n+  #254 = Utf8               TT;\n+  #255 = Utf8               TU;\n+  #256 = Utf8               Signature\n+  #257 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;TT;TU;)V\n+  #258 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer;\n+  #259 = Utf8               object\n+  #260 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n+  #261 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;TT;)V\n+  #262 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n+  #263 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleConsumer;\n+  #264 = Utf8               value\n+  #265 = Utf8               D\n+  #266 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;\n+  #267 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;D)V\n+  #268 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n+  #269 = Utf8               Lorg/apache/commons/lang3/function/FailableIntConsumer;\n+  #270 = Utf8               I\n+  #271 = Utf8               Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;\n+  #272 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;I)V\n+  #273 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n+  #274 = Utf8               Lorg/apache/commons/lang3/function/FailableLongConsumer;\n+  #275 = Utf8               J\n+  #276 = Utf8               Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;\n+  #277 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;J)V\n+  #278 = Utf8               function\n+  #279 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction;\n+  #280 = Utf8               input1\n+  #281 = Utf8               input2\n+  #282 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n+  #283 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;TT;TU;)TR;\n+  #284 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n+  #285 = Utf8               input\n+  #286 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n+  #287 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;TT;)TR;\n+  #288 = Utf8               (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n+  #289 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;\n+  #290 = Utf8               left\n+  #291 = Utf8               right\n+  #292 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;\n+  #293 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;DD)D\n+  #294 = Utf8               asBiConsumer\n+  #295 = Utf8               Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;\n+  #296 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;)Ljava/util/function/BiConsumer<TT;TU;>;\n+  #297 = Utf8               asBiFunction\n+  #298 = Utf8               Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;\n+  #299 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;)Ljava/util/function/BiFunction<TT;TU;TR;>;\n+  #300 = Utf8               asBiPredicate\n+  #301 = Utf8               predicate\n+  #302 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate;\n+  #303 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;\n+  #304 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;)Ljava/util/function/BiPredicate<TT;TU;>;\n+  #305 = Utf8               asCallable\n+  #306 = Utf8               callable\n+  #307 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable;\n+  #308 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;\n+  #309 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;)Ljava/util/concurrent/Callable<TV;>;\n+  #310 = Utf8               asConsumer\n+  #311 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;\n+  #312 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;)Ljava/util/function/Consumer<TT;>;\n+  #313 = Utf8               asFunction\n+  #314 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;\n+  #315 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;)Ljava/util/function/Function<TT;TR;>;\n+  #316 = Utf8               asPredicate\n+  #317 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n+  #318 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;\n+  #319 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;)Ljava/util/function/Predicate<TT;>;\n+  #320 = Utf8               asRunnable\n+  #321 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable;\n+  #322 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<*>;\n+  #323 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<*>;)Ljava/lang/Runnable;\n+  #324 = Utf8               asSupplier\n+  #325 = Utf8               supplier\n+  #326 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier;\n+  #327 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;\n+  #328 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;)Ljava/util/function/Supplier<TT;>;\n+  #329 = Utf8               Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;\n+  #330 = Utf8               <V:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;)TV;\n+  #331 = Utf8               t\n+  #332 = Utf8               Ljava/lang/Throwable;\n+  #333 = Utf8               Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;\n+  #334 = Utf8               StackMapTable\n+  #335 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;)TT;\n+  #336 = Utf8               Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+  #337 = Utf8               Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;\n+  #338 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;)Z\n+  #339 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n+  #340 = Utf8               Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;\n+  #341 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;)D\n+  #342 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntSupplier;)I\n+  #343 = Utf8               Lorg/apache/commons/lang3/function/FailableIntSupplier;\n+  #344 = Utf8               Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;\n+  #345 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;)I\n+  #346 = Utf8               (Lorg/apache/commons/lang3/function/FailableLongSupplier;)J\n+  #347 = Utf8               Lorg/apache/commons/lang3/function/FailableLongSupplier;\n+  #348 = Utf8               Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;\n+  #349 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;)J\n+  #350 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;\n+  #351 = Utf8               <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;)V\n+  #352 = Utf8               (Ljava/util/Collection;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n+  #353 = Utf8               collection\n+  #354 = Utf8               Ljava/util/Collection;\n+  #355 = Utf8               Ljava/util/Collection<TE;>;\n+  #356 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TE;>;\n+  #357 = Utf8               (Ljava/util/stream/Stream;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n+  #358 = Utf8               Ljava/util/stream/Stream;\n+  #359 = Utf8               Ljava/util/stream/Stream<TT;>;\n+  #360 = Utf8               <T:Ljava/lang/Object;>(Ljava/util/stream/Stream<TT;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TT;>;\n+  #361 = Utf8               Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;\n+  #362 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;TT;TU;)Z\n+  #363 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+  #364 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;TT;)Z\n+  #365 = Utf8               actualErrorHandler\n+  #366 = Utf8               failableRunnable\n+  #367 = Utf8               action\n+  #368 = Utf8               errorHandler\n+  #369 = Utf8               resources\n+  #370 = Utf8               [Lorg/apache/commons/lang3/function/FailableRunnable;\n+  #371 = Utf8               th\n+  #372 = Utf8               Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;\n+  #373 = Utf8               Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n+  #374 = Utf8               [Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n+  #375 = Class              #370          // \"[Lorg/apache/commons/lang3/function/FailableRunnable;\"\n+  #376 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n+  #377 = Utf8               RuntimeVisibleAnnotations\n+  #378 = Utf8               Ljava/lang/SafeVarargs;\n+  #379 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #380 = Utf8               (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n+  #381 = Utf8               this\n+  #382 = Utf8               Lorg/apache/commons/lang3/function/Failable;\n+  #383 = Utf8               lambda$test$18\n+  #384 = Utf8               Exceptions\n+  #385 = Utf8               lambda$test$17\n+  #386 = Utf8               lambda$asSupplier$16\n+  #387 = Utf8               lambda$asRunnable$15\n+  #388 = Utf8               lambda$asPredicate$14\n+  #389 = Utf8               lambda$asFunction$13\n+  #390 = Utf8               lambda$asConsumer$12\n+  #391 = Utf8               lambda$asCallable$11\n+  #392 = Class              #393          // java/lang/Exception\n+  #393 = Utf8               java/lang/Exception\n+  #394 = Utf8               lambda$asBiPredicate$10\n+  #395 = Utf8               lambda$asBiFunction$9\n+  #396 = Utf8               lambda$asBiConsumer$8\n+  #397 = Utf8               lambda$applyAsDouble$7\n+  #398 = Utf8               lambda$apply$6\n+  #399 = Utf8               lambda$apply$5\n+  #400 = Utf8               lambda$accept$4\n+  #401 = Utf8               lambda$accept$3\n+  #402 = Utf8               lambda$accept$2\n+  #403 = Utf8               lambda$accept$1\n+  #404 = Utf8               lambda$accept$0\n+  #405 = Utf8               SourceFile\n+  #406 = Utf8               Failable.java\n+  #407 = Utf8               BootstrapMethods\n+  #408 = MethodHandle       6:#409        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #409 = Methodref          #410.#411     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #410 = Class              #412          // java/lang/invoke/LambdaMetafactory\n+  #411 = NameAndType        #413:#414     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #412 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #413 = Utf8               metafactory\n+  #414 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #415 = MethodType         #139          //  ()V\n+  #416 = MethodHandle       6:#417        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #417 = Methodref          #6.#418       // org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #418 = NameAndType        #404:#208     // lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #419 = MethodHandle       6:#420        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #420 = Methodref          #6.#421       // org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #421 = NameAndType        #403:#196     // lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #422 = MethodHandle       6:#423        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n+  #423 = Methodref          #6.#424       // org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n+  #424 = NameAndType        #402:#262     // lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n+  #425 = MethodHandle       6:#426        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n+  #426 = Methodref          #6.#427       // org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n+  #427 = NameAndType        #401:#268     // lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n+  #428 = MethodHandle       6:#429        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n+  #429 = Methodref          #6.#430       // org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n+  #430 = NameAndType        #400:#273     // lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n+  #431 = MethodType         #83           //  ()Ljava/lang/Object;\n+  #432 = MethodHandle       6:#433        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #433 = Methodref          #6.#434       // org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #434 = NameAndType        #399:#205     // lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #435 = MethodHandle       6:#436        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #436 = Methodref          #6.#437       // org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #437 = NameAndType        #398:#193     // lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #438 = MethodType         #100          //  ()D\n+  #439 = MethodHandle       6:#440        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n+  #440 = Methodref          #6.#441       // org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n+  #441 = NameAndType        #397:#288     // lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n+  #442 = MethodType         #243          //  (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #443 = MethodHandle       6:#444        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #444 = Methodref          #6.#445       // org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #445 = NameAndType        #396:#208     // lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #446 = MethodType         #223          //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #447 = MethodHandle       6:#448        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #448 = Methodref          #6.#449       // org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #449 = NameAndType        #395:#205     // lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #450 = MethodType         #187          //  (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #451 = MethodHandle       6:#452        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #452 = Methodref          #6.#453       // org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #453 = NameAndType        #394:#202     // lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #454 = MethodHandle       6:#455        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #455 = Methodref          #6.#456       // org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #456 = NameAndType        #391:#199     // lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+  #457 = MethodType         #169          //  (Ljava/lang/Object;)V\n+  #458 = MethodHandle       6:#459        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #459 = Methodref          #6.#460       // org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #460 = NameAndType        #390:#196     // lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+  #461 = MethodType         #75           //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #462 = MethodHandle       6:#463        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #463 = Methodref          #6.#464       // org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #464 = NameAndType        #389:#193     // lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #465 = MethodType         #182          //  (Ljava/lang/Object;)Z\n+  #466 = MethodHandle       6:#467        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #467 = Methodref          #6.#468       // org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #468 = NameAndType        #388:#190     // lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #469 = MethodHandle       6:#470        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #470 = Methodref          #6.#471       // org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #471 = NameAndType        #387:#9       // lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+  #472 = MethodHandle       6:#473        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+  #473 = Methodref          #6.#474       // org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+  #474 = NameAndType        #386:#28      // lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+  #475 = MethodHandle       9:#476        // REF_invokeInterface org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n+  #476 = InterfaceMethodref #477.#478     // org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n+  #477 = Class              #479          // org/apache/commons/lang3/function/FailableCallable\n+  #478 = NameAndType        #53:#83       // call:()Ljava/lang/Object;\n+  #479 = Utf8               org/apache/commons/lang3/function/FailableCallable\n+  #480 = MethodType         #95           //  ()Z\n+  #481 = MethodHandle       6:#482        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #482 = Methodref          #6.#483       // org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #483 = NameAndType        #385:#202     // lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #484 = MethodHandle       6:#485        // REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #485 = Methodref          #6.#486       // org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #486 = NameAndType        #383:#190     // lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+  #487 = MethodHandle       6:#86         // REF_invokeStatic org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+  #488 = MethodType         #134          //  (Ljava/lang/Throwable;)V\n+  #489 = Utf8               InnerClasses\n+  #490 = Class              #491          // org/apache/commons/lang3/stream/Streams\n+  #491 = Utf8               org/apache/commons/lang3/stream/Streams\n+  #492 = Utf8               FailableStream\n+  #493 = Class              #494          // java/lang/invoke/MethodHandles$Lookup\n+  #494 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #495 = Class              #496          // java/lang/invoke/MethodHandles\n+  #496 = Utf8               java/lang/invoke/MethodHandles\n+  #497 = Utf8               Lookup\n {\n   public static <T extends java.lang.Object, U extends java.lang.Object, E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableBiConsumer<T, U, E>, T, U);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: invokedynamic #1,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-         8: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         8: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n         11: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer;\n             0      12     1 object1   Ljava/lang/Object;\n             0      12     2 object2   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;\n             0      12     1 object1   TT;\n             0      12     2 object2   TU;\n-    Signature: #84                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;TT;TU;)V\n+    Signature: #257                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;TE;>;TT;TU;)V\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableConsumer<T, E>, T);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #3,  0              // InvokeDynamic #1:run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n-         7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         2: invokedynamic #10,  0             // InvokeDynamic #1:run:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableRunnable;\n+         7: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n         10: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer;\n             0      11     1 object   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;\n             0      11     1 object   TT;\n-    Signature: #89                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;TT;)V\n+    Signature: #261                         // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;TE;>;TT;)V\n \n   public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableDoubleConsumer<E>, double);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: invokedynamic #4,  0              // InvokeDynamic #2:run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n-         7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         2: invokedynamic #13,  0             // InvokeDynamic #2:run:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)Lorg/apache/commons/lang3/function/FailableRunnable;\n+         7: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n         10: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableDoubleConsumer;\n             0      11     1 value   D\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;\n-    Signature: #95                          // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;D)V\n+    Signature: #267                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleConsumer<TE;>;D)V\n \n   public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableIntConsumer<E>, int);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokedynamic #5,  0              // InvokeDynamic #3:run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n-         7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         2: invokedynamic #16,  0             // InvokeDynamic #3:run:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)Lorg/apache/commons/lang3/function/FailableRunnable;\n+         7: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n         10: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableIntConsumer;\n             0      11     1 value   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;\n-    Signature: #100                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;I)V\n+    Signature: #272                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntConsumer<TE;>;I)V\n \n   public static <E extends java.lang.Throwable> void accept(org.apache.commons.lang3.function.FailableLongConsumer<E>, long);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokedynamic #6,  0              // InvokeDynamic #4:run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n-         7: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         2: invokedynamic #19,  0             // InvokeDynamic #4:run:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)Lorg/apache/commons/lang3/function/FailableRunnable;\n+         7: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n         10: return\n       LineNumberTable:\n         line 128: 0\n         line 129: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableLongConsumer;\n             0      11     1 value   J\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 consumer   Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;\n-    Signature: #105                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;J)V\n+    Signature: #277                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongConsumer<TE;>;J)V\n \n   public static <T extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable> R apply(org.apache.commons.lang3.function.FailableBiFunction<T, U, R, E>, T, U);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokedynamic #7,  0              // InvokeDynamic #5:get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-         8: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+         3: invokedynamic #22,  0             // InvokeDynamic #5:get:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+         8: invokestatic  #26                 // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n         11: areturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction;\n             0      12     1 input1   Ljava/lang/Object;\n             0      12     2 input2   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;\n             0      12     1 input1   TT;\n             0      12     2 input2   TU;\n-    Signature: #113                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;TT;TU;)TR;\n+    Signature: #283                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;TE;>;TT;TU;)TR;\n \n   public static <T extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable> R apply(org.apache.commons.lang3.function.FailableFunction<T, R, E>, T);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #9,  0              // InvokeDynamic #6:get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-         7: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+         2: invokedynamic #29,  0             // InvokeDynamic #6:get:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+         7: invokestatic  #26                 // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 159: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 function   Lorg/apache/commons/lang3/function/FailableFunction;\n             0      11     1 input   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 function   Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n             0      11     1 input   TT;\n-    Signature: #118                         // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;TT;)TR;\n+    Signature: #287                         // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;TT;)TR;\n \n   public static <E extends java.lang.Throwable> double applyAsDouble(org.apache.commons.lang3.function.FailableDoubleBinaryOperator<E>, double, double);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=5, args_size=3\n          0: aload_0\n          1: dload_1\n          2: dload_3\n-         3: invokedynamic #10,  0             // InvokeDynamic #7:getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n-         8: invokestatic  #11                 // Method getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n+         3: invokedynamic #32,  0             // InvokeDynamic #7:getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n+         8: invokestatic  #36                 // Method getAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n         11: dreturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 function   Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;\n             0      12     1  left   D\n             0      12     3 right   D\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 function   Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;\n-    Signature: #125                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;DD)D\n+    Signature: #293                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator<TE;>;DD)D\n \n   public static <T extends java.lang.Object, U extends java.lang.Object> java.util.function.BiConsumer<T, U> asBiConsumer(org.apache.commons.lang3.function.FailableBiConsumer<T, U, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #12,  0             // InvokeDynamic #8:accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n+         1: invokedynamic #39,  0             // InvokeDynamic #8:accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;)Ljava/util/function/BiConsumer;\n          6: areturn\n       LineNumberTable:\n         line 185: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;\n-    Signature: #129                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;)Ljava/util/function/BiConsumer<TT;TU;>;\n+    Signature: #296                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiConsumer<TT;TU;*>;)Ljava/util/function/BiConsumer<TT;TU;>;\n \n   public static <T extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object> java.util.function.BiFunction<T, U, R> asBiFunction(org.apache.commons.lang3.function.FailableBiFunction<T, U, R, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #13,  0             // InvokeDynamic #9:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n+         1: invokedynamic #43,  0             // InvokeDynamic #9:apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;)Ljava/util/function/BiFunction;\n          6: areturn\n       LineNumberTable:\n         line 198: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;\n-    Signature: #133                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;)Ljava/util/function/BiFunction<TT;TU;TR;>;\n+    Signature: #299                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiFunction<TT;TU;TR;*>;)Ljava/util/function/BiFunction<TT;TU;TR;>;\n \n   public static <T extends java.lang.Object, U extends java.lang.Object> java.util.function.BiPredicate<T, U> asBiPredicate(org.apache.commons.lang3.function.FailableBiPredicate<T, U, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #14,  0             // InvokeDynamic #10:test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n+         1: invokedynamic #47,  0             // InvokeDynamic #10:test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;)Ljava/util/function/BiPredicate;\n          6: areturn\n       LineNumberTable:\n         line 210: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;\n-    Signature: #139                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;)Ljava/util/function/BiPredicate<TT;TU;>;\n+    Signature: #304                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;*>;)Ljava/util/function/BiPredicate<TT;TU;>;\n \n   public static <V extends java.lang.Object> java.util.concurrent.Callable<V> asCallable(org.apache.commons.lang3.function.FailableCallable<V, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #15,  0             // InvokeDynamic #11:call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n+         1: invokedynamic #51,  0             // InvokeDynamic #11:call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/util/concurrent/Callable;\n          6: areturn\n       LineNumberTable:\n         line 221: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 callable   Lorg/apache/commons/lang3/function/FailableCallable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 callable   Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;\n-    Signature: #145                         // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;)Ljava/util/concurrent/Callable<TV;>;\n+    Signature: #309                         // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;*>;)Ljava/util/concurrent/Callable<TV;>;\n \n   public static <T extends java.lang.Object> java.util.function.Consumer<T> asConsumer(org.apache.commons.lang3.function.FailableConsumer<T, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #16,  0             // InvokeDynamic #12:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n+         1: invokedynamic #55,  0             // InvokeDynamic #12:accept:(Lorg/apache/commons/lang3/function/FailableConsumer;)Ljava/util/function/Consumer;\n          6: areturn\n       LineNumberTable:\n         line 232: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;\n-    Signature: #149                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;)Ljava/util/function/Consumer<TT;>;\n+    Signature: #312                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableConsumer<TT;*>;)Ljava/util/function/Consumer<TT;>;\n \n   public static <T extends java.lang.Object, R extends java.lang.Object> java.util.function.Function<T, R> asFunction(org.apache.commons.lang3.function.FailableFunction<T, R, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #17,  0             // InvokeDynamic #13:apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n+         1: invokedynamic #58,  0             // InvokeDynamic #13:apply:(Lorg/apache/commons/lang3/function/FailableFunction;)Ljava/util/function/Function;\n          6: areturn\n       LineNumberTable:\n         line 244: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 function   Lorg/apache/commons/lang3/function/FailableFunction;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 function   Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;\n-    Signature: #153                         // <T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;)Ljava/util/function/Function<TT;TR;>;\n+    Signature: #315                         // <T:Ljava/lang/Object;R:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;*>;)Ljava/util/function/Function<TT;TR;>;\n \n   public static <T extends java.lang.Object> java.util.function.Predicate<T> asPredicate(org.apache.commons.lang3.function.FailablePredicate<T, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #18,  0             // InvokeDynamic #14:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n+         1: invokedynamic #61,  0             // InvokeDynamic #14:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Ljava/util/function/Predicate;\n          6: areturn\n       LineNumberTable:\n         line 255: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;\n-    Signature: #158                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;)Ljava/util/function/Predicate<TT;>;\n+    Signature: #319                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;*>;)Ljava/util/function/Predicate<TT;>;\n \n   public static java.lang.Runnable asRunnable(org.apache.commons.lang3.function.FailableRunnable<?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #19,  0             // InvokeDynamic #15:run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n+         1: invokedynamic #64,  0             // InvokeDynamic #15:run:(Lorg/apache/commons/lang3/function/FailableRunnable;)Ljava/lang/Runnable;\n          6: areturn\n       LineNumberTable:\n         line 265: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 runnable   Lorg/apache/commons/lang3/function/FailableRunnable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 runnable   Lorg/apache/commons/lang3/function/FailableRunnable<*>;\n-    Signature: #164                         // (Lorg/apache/commons/lang3/function/FailableRunnable<*>;)Ljava/lang/Runnable;\n+    Signature: #323                         // (Lorg/apache/commons/lang3/function/FailableRunnable<*>;)Ljava/lang/Runnable;\n \n   public static <T extends java.lang.Object> java.util.function.Supplier<T> asSupplier(org.apache.commons.lang3.function.FailableSupplier<T, ?>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #20,  0             // InvokeDynamic #16:get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n+         1: invokedynamic #67,  0             // InvokeDynamic #16:get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/util/function/Supplier;\n          6: areturn\n       LineNumberTable:\n         line 276: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 supplier   Lorg/apache/commons/lang3/function/FailableSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 supplier   Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;\n-    Signature: #170                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;)Ljava/util/function/Supplier<TT;>;\n+    Signature: #328                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;*>;)Ljava/util/function/Supplier<TT;>;\n \n   public static <V extends java.lang.Object, E extends java.lang.Throwable> V call(org.apache.commons.lang3.function.FailableCallable<V, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         2: invokestatic  #70                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          5: pop\n-         6: invokedynamic #22,  0             // InvokeDynamic #17:get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n-        11: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+         6: invokedynamic #76,  0             // InvokeDynamic #17:get:(Lorg/apache/commons/lang3/function/FailableCallable;)Lorg/apache/commons/lang3/function/FailableSupplier;\n+        11: invokestatic  #26                 // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n         14: areturn\n       LineNumberTable:\n         line 288: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 callable   Lorg/apache/commons/lang3/function/FailableCallable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 callable   Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;\n-    Signature: #174                         // <V:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;)TV;\n+    Signature: #330                         // <V:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableCallable<TV;TE;>;)TV;\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> T get(org.apache.commons.lang3.function.FailableSupplier<T, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableSupplier.get:()Ljava/lang/Object;\n+         1: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableSupplier.get:()Ljava/lang/Object;\n          6: areturn\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+         9: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         12: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/lang/Throwable\n       LineNumberTable:\n         line 301: 0\n         line 302: 7\n@@ -900,27 +900,27 @@\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #181                         // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;)TT;\n+    Signature: #335                         // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableSupplier<TT;TE;>;)TT;\n \n   public static <E extends java.lang.Throwable> boolean getAsBoolean(org.apache.commons.lang3.function.FailableBooleanSupplier<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z\n+         1: invokeinterface #90,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableBooleanSupplier.getAsBoolean:()Z\n          6: ireturn\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+         9: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         12: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/lang/Throwable\n       LineNumberTable:\n         line 316: 0\n         line 317: 7\n@@ -931,27 +931,27 @@\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #186                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;)Z\n+    Signature: #338                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBooleanSupplier<TE;>;)Z\n \n   public static <E extends java.lang.Throwable> double getAsDouble(org.apache.commons.lang3.function.FailableDoubleSupplier<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleSupplier;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleSupplier.getAsDouble:()D\n+         1: invokeinterface #96,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleSupplier.getAsDouble:()D\n          6: dreturn\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+         9: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         12: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/lang/Throwable\n       LineNumberTable:\n         line 331: 0\n         line 332: 7\n@@ -962,27 +962,27 @@\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableDoubleSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #191                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;)D\n+    Signature: #341                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableDoubleSupplier<TE;>;)D\n \n   public static <E extends java.lang.Throwable> int getAsInt(org.apache.commons.lang3.function.FailableIntSupplier<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntSupplier;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableIntSupplier.getAsInt:()I\n+         1: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/lang3/function/FailableIntSupplier.getAsInt:()I\n          6: ireturn\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+         9: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         12: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/lang/Throwable\n       LineNumberTable:\n         line 346: 0\n         line 347: 7\n@@ -993,27 +993,27 @@\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableIntSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #196                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;)I\n+    Signature: #345                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableIntSupplier<TE;>;)I\n \n   public static <E extends java.lang.Throwable> long getAsLong(org.apache.commons.lang3.function.FailableLongSupplier<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableLongSupplier;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableLongSupplier.getAsLong:()J\n+         1: invokeinterface #107,  1          // InterfaceMethod org/apache/commons/lang3/function/FailableLongSupplier.getAsLong:()J\n          6: lreturn\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+         9: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         12: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class java/lang/Throwable\n       LineNumberTable:\n         line 361: 0\n         line 362: 7\n@@ -1024,50 +1024,50 @@\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableLongSupplier;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 supplier   Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #201                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;)J\n+    Signature: #349                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableLongSupplier<TE;>;)J\n \n   public static java.lang.RuntimeException rethrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #30                 // String throwable\n-         3: invokestatic  #31                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #113                // String throwable\n+         3: invokestatic  #115                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: instanceof    #32                 // class java/lang/RuntimeException\n+         8: instanceof    #118                // class java/lang/RuntimeException\n         11: ifeq          19\n         14: aload_0\n-        15: checkcast     #32                 // class java/lang/RuntimeException\n+        15: checkcast     #118                // class java/lang/RuntimeException\n         18: athrow\n         19: aload_0\n-        20: instanceof    #33                 // class java/lang/Error\n+        20: instanceof    #120                // class java/lang/Error\n         23: ifeq          31\n         26: aload_0\n-        27: checkcast     #33                 // class java/lang/Error\n+        27: checkcast     #120                // class java/lang/Error\n         30: athrow\n         31: aload_0\n-        32: instanceof    #34                 // class java/io/IOException\n+        32: instanceof    #122                // class java/io/IOException\n         35: ifeq          50\n-        38: new           #35                 // class java/io/UncheckedIOException\n+        38: new           #124                // class java/io/UncheckedIOException\n         41: dup\n         42: aload_0\n-        43: checkcast     #34                 // class java/io/IOException\n-        46: invokespecial #36                 // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+        43: checkcast     #122                // class java/io/IOException\n+        46: invokespecial #126                // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n         49: athrow\n-        50: new           #37                 // class java/lang/reflect/UndeclaredThrowableException\n+        50: new           #130                // class java/lang/reflect/UndeclaredThrowableException\n         53: dup\n         54: aload_0\n-        55: invokespecial #38                 // Method java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+        55: invokespecial #132                // Method java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n         58: athrow\n       LineNumberTable:\n         line 395: 0\n         line 396: 7\n         line 397: 14\n         line 398: 19\n         line 399: 26\n@@ -1084,19 +1084,19 @@\n \n   public static <E extends java.lang.Throwable> void run(org.apache.commons.lang3.function.FailableRunnable<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableRunnable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n+         1: invokeinterface #135,  1          // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n          6: goto          15\n          9: astore_1\n         10: aload_1\n-        11: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+        11: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n         14: athrow\n         15: return\n       Exception table:\n          from    to  target type\n              0     6     9   Class java/lang/Throwable\n       LineNumberTable:\n         line 415: 0\n@@ -1111,112 +1111,112 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 runnable   Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n-    Signature: #208                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;)V\n+    Signature: #351                         // <E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableRunnable<TE;>;)V\n \n   public static <E extends java.lang.Object> org.apache.commons.lang3.stream.Streams$FailableStream<E> stream(java.util.Collection<E>);\n     descriptor: (Ljava/util/Collection;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #40                 // class org/apache/commons/lang3/stream/Streams$FailableStream\n+         0: new           #140                // class org/apache/commons/lang3/stream/Streams$FailableStream\n          3: dup\n          4: aload_0\n-         5: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n-        10: invokespecial #42                 // Method org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n+         5: invokeinterface #142,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n+        10: invokespecial #148                // Method org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n         13: areturn\n       LineNumberTable:\n         line 434: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 collection   Ljava/util/Collection;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 collection   Ljava/util/Collection<TE;>;\n-    Signature: #216                         // <E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TE;>;\n+    Signature: #356                         // <E:Ljava/lang/Object;>(Ljava/util/Collection<TE;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TE;>;\n \n   public static <T extends java.lang.Object> org.apache.commons.lang3.stream.Streams$FailableStream<T> stream(java.util.stream.Stream<T>);\n     descriptor: (Ljava/util/stream/Stream;)Lorg/apache/commons/lang3/stream/Streams$FailableStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #40                 // class org/apache/commons/lang3/stream/Streams$FailableStream\n+         0: new           #140                // class org/apache/commons/lang3/stream/Streams$FailableStream\n          3: dup\n          4: aload_0\n-         5: invokespecial #42                 // Method org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n+         5: invokespecial #148                // Method org/apache/commons/lang3/stream/Streams$FailableStream.\"<init>\":(Ljava/util/stream/Stream;)V\n          8: areturn\n       LineNumberTable:\n         line 448: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 stream   Ljava/util/stream/Stream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 stream   Ljava/util/stream/Stream<TT;>;\n-    Signature: #220                         // <T:Ljava/lang/Object;>(Ljava/util/stream/Stream<TT;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TT;>;\n+    Signature: #360                         // <T:Ljava/lang/Object;>(Ljava/util/stream/Stream<TT;>;)Lorg/apache/commons/lang3/stream/Streams$FailableStream<TT;>;\n \n   public static <T extends java.lang.Object, U extends java.lang.Object, E extends java.lang.Throwable> boolean test(org.apache.commons.lang3.function.FailableBiPredicate<T, U, E>, T, U);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokedynamic #43,  0             // InvokeDynamic #18:getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-         8: invokestatic  #44                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n+         3: invokedynamic #151,  0            // InvokeDynamic #18:getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+         8: invokestatic  #154                // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n         11: ireturn\n       LineNumberTable:\n         line 464: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate;\n             0      12     1 object1   Ljava/lang/Object;\n             0      12     2 object2   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;\n             0      12     1 object1   TT;\n             0      12     2 object2   TU;\n-    Signature: #224                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;TT;TU;)Z\n+    Signature: #362                         // <T:Ljava/lang/Object;U:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailableBiPredicate<TT;TU;TE;>;TT;TU;)Z\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> boolean test(org.apache.commons.lang3.function.FailablePredicate<T, E>, T);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #45,  0             // InvokeDynamic #19:getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n-         7: invokestatic  #44                 // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n+         2: invokedynamic #157,  0            // InvokeDynamic #19:getAsBoolean:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Lorg/apache/commons/lang3/function/FailableBooleanSupplier;\n+         7: invokestatic  #154                // Method getAsBoolean:(Lorg/apache/commons/lang3/function/FailableBooleanSupplier;)Z\n         10: ireturn\n       LineNumberTable:\n         line 477: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n             0      11     1 object   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n             0      11     1 object   TT;\n-    Signature: #227                         // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;TT;)Z\n+    Signature: #364                         // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;TT;)Z\n \n   public static void tryWithResources(org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableConsumer<java.lang.Throwable, ? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>...);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=10, args_size=3\n          0: aload_1\n          1: ifnonnull     13\n-         4: invokedynamic #46,  0             // InvokeDynamic #20:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n+         4: invokedynamic #160,  0            // InvokeDynamic #20:accept:()Lorg/apache/commons/lang3/function/FailableConsumer;\n          9: astore_3\n         10: goto          15\n         13: aload_1\n         14: astore_3\n         15: aload_2\n         16: ifnull        58\n         19: aload_2\n@@ -1230,23 +1230,23 @@\n         32: iload         5\n         34: if_icmpge     58\n         37: aload         4\n         39: iload         6\n         41: aaload\n         42: astore        7\n         44: aload         7\n-        46: ldc           #47                 // String runnable\n-        48: invokestatic  #31                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        46: ldc           #163                // String runnable\n+        48: invokestatic  #115                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         51: pop\n         52: iinc          6, 1\n         55: goto          30\n         58: aconst_null\n         59: astore        4\n         61: aload_0\n-        62: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n+        62: invokeinterface #135,  1          // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n         67: goto          76\n         70: astore        5\n         72: aload         5\n         74: astore        4\n         76: aload_2\n         77: ifnull        132\n         80: aload_2\n@@ -1260,32 +1260,32 @@\n         93: iload         6\n         95: if_icmpge     132\n         98: aload         5\n        100: iload         7\n        102: aaload\n        103: astore        8\n        105: aload         8\n-       107: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n+       107: invokeinterface #135,  1          // InterfaceMethod org/apache/commons/lang3/function/FailableRunnable.run:()V\n        112: goto          126\n        115: astore        9\n        117: aload         4\n        119: ifnonnull     126\n        122: aload         9\n        124: astore        4\n        126: iinc          7, 1\n        129: goto          91\n        132: aload         4\n        134: ifnull        156\n        137: aload_3\n        138: aload         4\n-       140: invokeinterface #48,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n+       140: invokeinterface #165,  2          // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n        145: goto          156\n        148: astore        5\n        150: aload         5\n-       152: invokestatic  #25                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+       152: invokestatic  #86                 // Method rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n        155: athrow\n        156: return\n       Exception table:\n          from    to  target type\n             61    67    70   Class java/lang/Throwable\n            105   112   115   Class java/lang/Throwable\n            137   145   148   Class java/lang/Throwable\n@@ -1363,52 +1363,52 @@\n         frame_type = 250 /* chop */\n           offset_delta = 10\n         frame_type = 248 /* chop */\n           offset_delta = 5\n         frame_type = 79 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 7 /* same */\n-    Signature: #243                         // (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n+    Signature: #376                         // (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/function/FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n     RuntimeVisibleAnnotations:\n-      0: #245()\n+      0: #378()\n         java.lang.SafeVarargs\n \n   public static void tryWithResources(org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.function.FailableRunnable<? extends java.lang.Throwable>...);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableRunnable;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n-         3: invokestatic  #49                 // Method tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         3: invokestatic  #170                // Method tryWithResources:(Lorg/apache/commons/lang3/function/FailableRunnable;Lorg/apache/commons/lang3/function/FailableConsumer;[Lorg/apache/commons/lang3/function/FailableRunnable;)V\n          6: return\n       LineNumberTable:\n         line 560: 0\n         line 561: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 action   Lorg/apache/commons/lang3/function/FailableRunnable;\n             0       7     1 resources   [Lorg/apache/commons/lang3/function/FailableRunnable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 action   Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n             0       7     1 resources   [Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;\n-    Signature: #247                         // (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n+    Signature: #380                         // (Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/function/FailableRunnable<+Ljava/lang/Throwable;>;)V\n     RuntimeVisibleAnnotations:\n-      0: #245()\n+      0: #378()\n         java.lang.SafeVarargs\n \n   private org.apache.commons.lang3.function.Failable();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #50                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #174                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 563: 0\n         line 565: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/function/Failable;\n@@ -1416,15 +1416,15 @@\n   private static boolean lambda$test$18(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n+         2: invokeinterface #178,  2          // InterfaceMethod org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n          7: ireturn\n       LineNumberTable:\n         line 477: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n             0       8     1 object   Ljava/lang/Object;\n@@ -1435,15 +1435,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokeinterface #52,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         3: invokeinterface #183,  3          // InterfaceMethod org/apache/commons/lang3/function/FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n          8: ireturn\n       LineNumberTable:\n         line 464: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate;\n             0       9     1 object1   Ljava/lang/Object;\n@@ -1453,44 +1453,44 @@\n \n   private static java.lang.Object lambda$asSupplier$16(org.apache.commons.lang3.function.FailableSupplier);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #8                  // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+         1: invokestatic  #26                 // Method get:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 276: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 supplier   Lorg/apache/commons/lang3/function/FailableSupplier;\n \n   private static void lambda$asRunnable$15(org.apache.commons.lang3.function.FailableRunnable);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableRunnable;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #2                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+         1: invokestatic  #5                  // Method run:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n          4: return\n       LineNumberTable:\n         line 265: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 runnable   Lorg/apache/commons/lang3/function/FailableRunnable;\n \n   private static boolean lambda$asPredicate$14(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #53                 // Method test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+         2: invokestatic  #188                // Method test:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n          5: ireturn\n       LineNumberTable:\n         line 255: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 predicate   Lorg/apache/commons/lang3/function/FailablePredicate;\n             0       6     1 input   Ljava/lang/Object;\n@@ -1498,15 +1498,15 @@\n   private static java.lang.Object lambda$asFunction$13(org.apache.commons.lang3.function.FailableFunction, java.lang.Object);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #54                 // Method apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+         2: invokestatic  #191                // Method apply:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n          5: areturn\n       LineNumberTable:\n         line 244: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 function   Lorg/apache/commons/lang3/function/FailableFunction;\n             0       6     1 input   Ljava/lang/Object;\n@@ -1514,30 +1514,30 @@\n   private static void lambda$asConsumer$12(org.apache.commons.lang3.function.FailableConsumer, java.lang.Object);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #55                 // Method accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+         2: invokestatic  #194                // Method accept:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n          5: return\n       LineNumberTable:\n         line 232: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer;\n             0       6     1 input   Ljava/lang/Object;\n \n   private static java.lang.Object lambda$asCallable$11(org.apache.commons.lang3.function.FailableCallable) throws java.lang.Exception;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #56                 // Method call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+         1: invokestatic  #197                // Method call:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 221: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 callable   Lorg/apache/commons/lang3/function/FailableCallable;\n     Exceptions:\n@@ -1547,15 +1547,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #57                 // Method test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+         3: invokestatic  #200                // Method test:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n          6: ireturn\n       LineNumberTable:\n         line 210: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 predicate   Lorg/apache/commons/lang3/function/FailableBiPredicate;\n             0       7     1 input1   Ljava/lang/Object;\n@@ -1565,15 +1565,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #58                 // Method apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         3: invokestatic  #203                // Method apply:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n          6: areturn\n       LineNumberTable:\n         line 198: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction;\n             0       7     1 input1   Ljava/lang/Object;\n@@ -1583,15 +1583,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #59                 // Method accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+         3: invokestatic  #206                // Method accept:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n          6: return\n       LineNumberTable:\n         line 185: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer;\n             0       7     1 input1   Ljava/lang/Object;\n@@ -1601,15 +1601,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=5, args_size=3\n          0: aload_0\n          1: dload_1\n          2: dload_3\n-         3: invokeinterface #60,  5           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleBinaryOperator.applyAsDouble:(DD)D\n+         3: invokeinterface #209,  5          // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleBinaryOperator.applyAsDouble:(DD)D\n          8: dreturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 function   Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;\n             0       9     1  left   D\n@@ -1620,15 +1620,15 @@\n   private static java.lang.Object lambda$apply$6(org.apache.commons.lang3.function.FailableFunction, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         2: invokeinterface #215,  2          // InterfaceMethod org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n          7: areturn\n       LineNumberTable:\n         line 159: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 function   Lorg/apache/commons/lang3/function/FailableFunction;\n             0       8     1 input   Ljava/lang/Object;\n@@ -1639,15 +1639,15 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokeinterface #62,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         3: invokeinterface #219,  3          // InterfaceMethod org/apache/commons/lang3/function/FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n          8: areturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 function   Lorg/apache/commons/lang3/function/FailableBiFunction;\n             0       9     1 input1   Ljava/lang/Object;\n@@ -1658,15 +1658,15 @@\n   private static void lambda$accept$4(org.apache.commons.lang3.function.FailableLongConsumer, long) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableLongConsumer.accept:(J)V\n+         2: invokeinterface #224,  3          // InterfaceMethod org/apache/commons/lang3/function/FailableLongConsumer.accept:(J)V\n          7: return\n       LineNumberTable:\n         line 128: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 consumer   Lorg/apache/commons/lang3/function/FailableLongConsumer;\n             0       8     1 value   J\n@@ -1676,15 +1676,15 @@\n   private static void lambda$accept$3(org.apache.commons.lang3.function.FailableIntConsumer, int) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokeinterface #64,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableIntConsumer.accept:(I)V\n+         2: invokeinterface #229,  2          // InterfaceMethod org/apache/commons/lang3/function/FailableIntConsumer.accept:(I)V\n          7: return\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 consumer   Lorg/apache/commons/lang3/function/FailableIntConsumer;\n             0       8     1 value   I\n@@ -1694,15 +1694,15 @@\n   private static void lambda$accept$2(org.apache.commons.lang3.function.FailableDoubleConsumer, double) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: invokeinterface #65,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleConsumer.accept:(D)V\n+         2: invokeinterface #234,  3          // InterfaceMethod org/apache/commons/lang3/function/FailableDoubleConsumer.accept:(D)V\n          7: return\n       LineNumberTable:\n         line 106: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 consumer   Lorg/apache/commons/lang3/function/FailableDoubleConsumer;\n             0       8     1 value   D\n@@ -1712,15 +1712,15 @@\n   private static void lambda$accept$1(org.apache.commons.lang3.function.FailableConsumer, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #48,  2           // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n+         2: invokeinterface #165,  2          // InterfaceMethod org/apache/commons/lang3/function/FailableConsumer.accept:(Ljava/lang/Object;)V\n          7: return\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 consumer   Lorg/apache/commons/lang3/function/FailableConsumer;\n             0       8     1 object   Ljava/lang/Object;\n@@ -1731,129 +1731,129 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokeinterface #66,  3           // InterfaceMethod org/apache/commons/lang3/function/FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n+         3: invokeinterface #239,  3          // InterfaceMethod org/apache/commons/lang3/function/FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n          8: return\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 consumer   Lorg/apache/commons/lang3/function/FailableBiConsumer;\n             0       9     1 object1   Ljava/lang/Object;\n             0       9     2 object2   Ljava/lang/Object;\n     Exceptions:\n       throws java.lang.Throwable\n }\n SourceFile: \"Failable.java\"\n-InnerClasses:\n-  public static #210= #40 of #348;        // FailableStream=class org/apache/commons/lang3/stream/Streams$FailableStream of class org/apache/commons/lang3/stream/Streams\n-  public static final #492= #491 of #495; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #277 ()V\n-      #278 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-      #277 ()V\n-  1: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #277 ()V\n-      #281 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-      #277 ()V\n-  2: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #277 ()V\n-      #283 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n-      #277 ()V\n-  3: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #277 ()V\n-      #285 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n-      #277 ()V\n-  4: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #277 ()V\n-      #287 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n-      #277 ()V\n-  5: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #289 ()Ljava/lang/Object;\n-      #290 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #289 ()Ljava/lang/Object;\n-  6: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #289 ()Ljava/lang/Object;\n-      #293 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-      #289 ()Ljava/lang/Object;\n-  7: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #295 ()D\n-      #296 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n-      #295 ()D\n-  8: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #299 (Ljava/lang/Object;Ljava/lang/Object;)V\n-      #300 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-      #299 (Ljava/lang/Object;Ljava/lang/Object;)V\n-  9: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #302 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #303 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #302 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  10: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #305 (Ljava/lang/Object;Ljava/lang/Object;)Z\n-      #306 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-      #305 (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  11: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #289 ()Ljava/lang/Object;\n-      #308 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n-      #289 ()Ljava/lang/Object;\n-  12: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #310 (Ljava/lang/Object;)V\n-      #311 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n-      #310 (Ljava/lang/Object;)V\n-  13: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #313 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #314 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-      #313 (Ljava/lang/Object;)Ljava/lang/Object;\n-  14: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #316 (Ljava/lang/Object;)Z\n-      #317 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-      #316 (Ljava/lang/Object;)Z\n-  15: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #277 ()V\n-      #319 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n-      #277 ()V\n-  16: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #289 ()Ljava/lang/Object;\n-      #321 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n-      #289 ()Ljava/lang/Object;\n-  17: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #289 ()Ljava/lang/Object;\n-      #325 REF_invokeInterface org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n-      #289 ()Ljava/lang/Object;\n-  18: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #353 ()Z\n-      #354 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-      #353 ()Z\n-  19: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #353 ()Z\n-      #357 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-      #353 ()Z\n-  20: #276 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #310 (Ljava/lang/Object;)V\n-      #359 REF_invokeStatic org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-      #360 (Ljava/lang/Throwable;)V\n+      #415 ()V\n+      #416 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$0:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+      #415 ()V\n+  1: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #415 ()V\n+      #419 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$1:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+      #415 ()V\n+  2: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #415 ()V\n+      #422 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$2:(Lorg/apache/commons/lang3/function/FailableDoubleConsumer;D)V\n+      #415 ()V\n+  3: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #415 ()V\n+      #425 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$3:(Lorg/apache/commons/lang3/function/FailableIntConsumer;I)V\n+      #415 ()V\n+  4: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #415 ()V\n+      #428 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$accept$4:(Lorg/apache/commons/lang3/function/FailableLongConsumer;J)V\n+      #415 ()V\n+  5: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #431 ()Ljava/lang/Object;\n+      #432 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$5:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #431 ()Ljava/lang/Object;\n+  6: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #431 ()Ljava/lang/Object;\n+      #435 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$apply$6:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+      #431 ()Ljava/lang/Object;\n+  7: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #438 ()D\n+      #439 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$applyAsDouble$7:(Lorg/apache/commons/lang3/function/FailableDoubleBinaryOperator;DD)D\n+      #438 ()D\n+  8: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #442 (Ljava/lang/Object;Ljava/lang/Object;)V\n+      #443 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiConsumer$8:(Lorg/apache/commons/lang3/function/FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+      #442 (Ljava/lang/Object;Ljava/lang/Object;)V\n+  9: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #446 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #447 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiFunction$9:(Lorg/apache/commons/lang3/function/FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #446 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  10: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #450 (Ljava/lang/Object;Ljava/lang/Object;)Z\n+      #451 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asBiPredicate$10:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+      #450 (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  11: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #431 ()Ljava/lang/Object;\n+      #454 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asCallable$11:(Lorg/apache/commons/lang3/function/FailableCallable;)Ljava/lang/Object;\n+      #431 ()Ljava/lang/Object;\n+  12: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #457 (Ljava/lang/Object;)V\n+      #458 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asConsumer$12:(Lorg/apache/commons/lang3/function/FailableConsumer;Ljava/lang/Object;)V\n+      #457 (Ljava/lang/Object;)V\n+  13: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #461 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #462 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asFunction$13:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+      #461 (Ljava/lang/Object;)Ljava/lang/Object;\n+  14: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #465 (Ljava/lang/Object;)Z\n+      #466 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asPredicate$14:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+      #465 (Ljava/lang/Object;)Z\n+  15: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #415 ()V\n+      #469 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asRunnable$15:(Lorg/apache/commons/lang3/function/FailableRunnable;)V\n+      #415 ()V\n+  16: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #431 ()Ljava/lang/Object;\n+      #472 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$asSupplier$16:(Lorg/apache/commons/lang3/function/FailableSupplier;)Ljava/lang/Object;\n+      #431 ()Ljava/lang/Object;\n+  17: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #431 ()Ljava/lang/Object;\n+      #475 REF_invokeInterface org/apache/commons/lang3/function/FailableCallable.call:()Ljava/lang/Object;\n+      #431 ()Ljava/lang/Object;\n+  18: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #480 ()Z\n+      #481 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$17:(Lorg/apache/commons/lang3/function/FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+      #480 ()Z\n+  19: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #480 ()Z\n+      #484 REF_invokeStatic org/apache/commons/lang3/function/Failable.lambda$test$18:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+      #480 ()Z\n+  20: #408 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #457 (Ljava/lang/Object;)V\n+      #487 REF_invokeStatic org/apache/commons/lang3/function/Failable.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+      #488 (Ljava/lang/Throwable;)V\n+InnerClasses:\n+  public static #492= #140 of #490;       // FailableStream=class org/apache/commons/lang3/stream/Streams$FailableStream of class org/apache/commons/lang3/stream/Streams\n+  public static final #497= #493 of #495; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
