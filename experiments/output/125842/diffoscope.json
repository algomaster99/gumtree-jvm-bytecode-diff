{"diffoscope-json-version": 1, "source1": "first/ParallelScatterZipCreator$DefaultBackingStoreSupplier.class", "source2": "second/ParallelScatterZipCreator$DefaultBackingStoreSupplier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,168 +1,160 @@\n-  SHA-256 checksum 60c2aa8b06da2fcfde5618f6fa99cfc844717f8520da103aa0d69e7b6f254e30\n+  SHA-256 checksum 4fc9e7f4d2cf4dc388092292c2563849950f2a5de7144a30cee2dd4ffa4fdf9f\n   Compiled from \"ParallelScatterZipCreator.java\"\n class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier implements org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n-   #4 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n-   #8 = Class              #9             // java/lang/Object\n-   #9 = Utf8               java/lang/Object\n-  #10 = Class              #11            // java/util/concurrent/atomic/AtomicInteger\n-  #11 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-  #12 = Methodref          #10.#13        // java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n-  #13 = NameAndType        #5:#14         // \"<init>\":(I)V\n-  #14 = Utf8               (I)V\n-  #15 = Fieldref           #2.#16         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-  #16 = NameAndType        #17:#18        // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-  #17 = Utf8               storeNum\n-  #18 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n-  #19 = String             #20            // parallelscatter\n-  #20 = Utf8               parallelscatter\n-  #21 = Class              #22            // java/lang/StringBuilder\n-  #22 = Utf8               java/lang/StringBuilder\n-  #23 = Methodref          #21.#3         // java/lang/StringBuilder.\"<init>\":()V\n-  #24 = String             #25            // n\n-  #25 = Utf8               n\n-  #26 = Methodref          #21.#27        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #27 = NameAndType        #28:#29        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #28 = Utf8               append\n-  #29 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #30 = Methodref          #10.#31        // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-  #31 = NameAndType        #32:#33        // incrementAndGet:()I\n-  #32 = Utf8               incrementAndGet\n-  #33 = Utf8               ()I\n-  #34 = Methodref          #21.#35        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #35 = NameAndType        #28:#36        // append:(I)Ljava/lang/StringBuilder;\n-  #36 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #37 = Methodref          #21.#38        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #38 = NameAndType        #39:#40        // toString:()Ljava/lang/String;\n-  #39 = Utf8               toString\n-  #40 = Utf8               ()Ljava/lang/String;\n-  #41 = Class              #42            // java/nio/file/attribute/FileAttribute\n-  #42 = Utf8               java/nio/file/attribute/FileAttribute\n-  #43 = Methodref          #44.#45        // java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #44 = Class              #46            // java/nio/file/Files\n-  #45 = NameAndType        #47:#48        // createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #46 = Utf8               java/nio/file/Files\n-  #47 = Utf8               createTempFile\n-  #48 = Utf8               (Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #49 = Class              #50            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #50 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #51 = Methodref          #49.#52        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-  #52 = NameAndType        #5:#53         // \"<init>\":(Ljava/nio/file/Path;)V\n-  #53 = Utf8               (Ljava/nio/file/Path;)V\n-  #54 = Class              #55            // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #55 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #56 = Utf8               Code\n-  #57 = Utf8               LineNumberTable\n-  #58 = Utf8               LocalVariableTable\n-  #59 = Utf8               this\n-  #60 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-  #61 = Utf8               get\n-  #62 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #63 = Utf8               tempFile\n-  #64 = Utf8               Ljava/nio/file/Path;\n-  #65 = Utf8               Exceptions\n-  #66 = Class              #67            // java/io/IOException\n-  #67 = Utf8               java/io/IOException\n-  #68 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #69 = Utf8               x0\n-  #70 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;\n-  #71 = Utf8               SourceFile\n-  #72 = Utf8               ParallelScatterZipCreator.java\n-  #73 = Utf8               InnerClasses\n-  #74 = Class              #75            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #75 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #76 = Utf8               DefaultBackingStoreSupplier\n-  #77 = Class              #78            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  #78 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #6 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #7 = Utf8               storeNum\n+   #8 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               ()V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#10         // \"<init>\":()V\n+  #14 = Class              #15            // java/util/concurrent/atomic/AtomicInteger\n+  #15 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #16 = Methodref          #14.#17        // java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n+  #17 = NameAndType        #9:#18         // \"<init>\":(I)V\n+  #18 = Utf8               (I)V\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #20 = NameAndType        #7:#8          // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               LocalVariableTable\n+  #23 = Utf8               this\n+  #24 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n+  #25 = Utf8               get\n+  #26 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #27 = Utf8               Exceptions\n+  #28 = Class              #29            // java/io/IOException\n+  #29 = Utf8               java/io/IOException\n+  #30 = String             #31            // parallelscatter\n+  #31 = Utf8               parallelscatter\n+  #32 = Class              #33            // java/lang/StringBuilder\n+  #33 = Utf8               java/lang/StringBuilder\n+  #34 = String             #35            // n\n+  #35 = Utf8               n\n+  #36 = Methodref          #32.#37        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #37 = NameAndType        #9:#38         // \"<init>\":(Ljava/lang/String;)V\n+  #38 = Utf8               (Ljava/lang/String;)V\n+  #39 = Methodref          #14.#40        // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+  #40 = NameAndType        #41:#42        // incrementAndGet:()I\n+  #41 = Utf8               incrementAndGet\n+  #42 = Utf8               ()I\n+  #43 = Methodref          #32.#44        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #44 = NameAndType        #45:#46        // append:(I)Ljava/lang/StringBuilder;\n+  #45 = Utf8               append\n+  #46 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #47 = Methodref          #32.#48        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #48 = NameAndType        #49:#50        // toString:()Ljava/lang/String;\n+  #49 = Utf8               toString\n+  #50 = Utf8               ()Ljava/lang/String;\n+  #51 = Class              #52            // java/nio/file/attribute/FileAttribute\n+  #52 = Utf8               java/nio/file/attribute/FileAttribute\n+  #53 = Methodref          #54.#56        // java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #54 = Class              #55            // java/nio/file/Files\n+  #55 = Utf8               java/nio/file/Files\n+  #56 = NameAndType        #57:#58        // createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #57 = Utf8               createTempFile\n+  #58 = Utf8               (Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #59 = Class              #60            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #60 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #61 = Methodref          #59.#62        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+  #62 = NameAndType        #9:#63         // \"<init>\":(Ljava/nio/file/Path;)V\n+  #63 = Utf8               (Ljava/nio/file/Path;)V\n+  #64 = Utf8               tempFile\n+  #65 = Utf8               Ljava/nio/file/Path;\n+  #66 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;)V\n+  #67 = Methodref          #1.#13         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":()V\n+  #68 = Utf8               SourceFile\n+  #69 = Utf8               ParallelScatterZipCreator.java\n+  #70 = Utf8               InnerClasses\n+  #71 = Class              #72            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #72 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #73 = Utf8               DefaultBackingStoreSupplier\n {\n   final java.util.concurrent.atomic.AtomicInteger storeNum;\n     descriptor: Ljava/util/concurrent/atomic/AtomicInteger;\n     flags: (0x0010) ACC_FINAL\n \n   private org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #10                 // class java/util/concurrent/atomic/AtomicInteger\n+         5: new           #14                 // class java/util/concurrent/atomic/AtomicInteger\n          8: dup\n          9: iconst_0\n-        10: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n-        13: putfield      #15                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+        10: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n+        13: putfield      #19                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n         16: return\n       LineNumberTable:\n         line 66: 0\n         line 67: 4\n+        line 66: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n \n   public org.apache.commons.compress.parallel.ScatterGatherBackingStore get() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=3, locals=2, args_size=1\n-         0: ldc           #19                 // String parallelscatter\n-         2: new           #21                 // class java/lang/StringBuilder\n+      stack=4, locals=2, args_size=1\n+         0: ldc           #30                 // String parallelscatter\n+         2: new           #32                 // class java/lang/StringBuilder\n          5: dup\n-         6: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         9: ldc           #24                 // String n\n-        11: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: aload_0\n-        15: getfield      #15                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-        18: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-        21: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        24: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        27: iconst_0\n-        28: anewarray     #41                 // class java/nio/file/attribute/FileAttribute\n-        31: invokestatic  #43                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-        34: astore_1\n-        35: new           #49                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-        38: dup\n-        39: aload_1\n-        40: invokespecial #51                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-        43: areturn\n+         6: ldc           #34                 // String n\n+         8: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        11: aload_0\n+        12: getfield      #19                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+        15: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+        18: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        21: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        24: iconst_0\n+        25: anewarray     #51                 // class java/nio/file/attribute/FileAttribute\n+        28: invokestatic  #53                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        31: astore_1\n+        32: new           #59                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+        35: dup\n+        36: aload_1\n+        37: invokespecial #61                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+        40: areturn\n       LineNumberTable:\n         line 71: 0\n-        line 72: 35\n+        line 72: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      44     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-           35       9     1 tempFile   Ljava/nio/file/Path;\n-    Exceptions:\n-      throws java.io.IOException\n+            0      41     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n+           32       9     1 tempFile   Ljava/nio/file/Path;\n \n-  org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$1);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+  org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #67                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 66: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-            0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;\n }\n SourceFile: \"ParallelScatterZipCreator.java\"\n InnerClasses:\n-  private static #76= #2 of #74;          // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #77;                                    // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+  private static #73= #1 of #71;          // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n"}]}
