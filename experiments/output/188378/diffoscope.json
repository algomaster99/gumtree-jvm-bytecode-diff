{"diffoscope-json-version": 1, "source1": "first/MemoryLimitException.class", "source2": "second/MemoryLimitException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,81 +1,81 @@\n-  SHA-256 checksum a7007dfd372f71e4c771cadee2c22d6850e1428987bd001ee8aa582d6b6792ec\n+  SHA-256 checksum 2cb186e65b5f13bc36a91a78ba2460fa1b4717264f07165f5a7f71430958bdd1\n   Compiled from \"MemoryLimitException.java\"\n public class org.apache.commons.compress.MemoryLimitException extends java.io.IOException\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/MemoryLimitException\n-  super_class: #15                        // java/io/IOException\n+  this_class: #2                          // org/apache/commons/compress/MemoryLimitException\n+  super_class: #8                         // java/io/IOException\n   interfaces: 0, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#42        // org/apache/commons/compress/MemoryLimitException.buildMessage:(JI)Ljava/lang/String;\n-   #2 = Methodref          #15.#43        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #3 = Fieldref           #14.#44        // org/apache/commons/compress/MemoryLimitException.memoryNeededInKb:J\n-   #4 = Fieldref           #14.#45        // org/apache/commons/compress/MemoryLimitException.memoryLimitInKb:I\n-   #5 = Methodref          #15.#46        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #6 = Class              #47            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#48         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = Methodref          #6.#49         // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #9 = String             #50            //  kb of memory would be needed; limit was\n-  #10 = Methodref          #6.#51         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #6.#52         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #12 = String             #53            //  kb. If the file is not corrupt, consider increasing the memory limit.\n-  #13 = Methodref          #6.#54         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #14 = Class              #55            // org/apache/commons/compress/MemoryLimitException\n-  #15 = Class              #56            // java/io/IOException\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               1l\n-  #21 = Utf8               memoryNeededInKb\n-  #22 = Utf8               memoryLimitInKb\n-  #23 = Utf8               I\n-  #24 = Utf8               <init>\n-  #25 = Utf8               (JI)V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/compress/MemoryLimitException;\n-  #31 = Utf8               (JILjava/lang/Exception;)V\n-  #32 = Utf8               e\n-  #33 = Utf8               Ljava/lang/Exception;\n-  #34 = Utf8               getMemoryNeededInKb\n-  #35 = Utf8               ()J\n-  #36 = Utf8               getMemoryLimitInKb\n-  #37 = Utf8               ()I\n-  #38 = Utf8               buildMessage\n-  #39 = Utf8               (JI)Ljava/lang/String;\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               MemoryLimitException.java\n-  #42 = NameAndType        #38:#39        // buildMessage:(JI)Ljava/lang/String;\n-  #43 = NameAndType        #24:#57        // \"<init>\":(Ljava/lang/String;)V\n-  #44 = NameAndType        #21:#17        // memoryNeededInKb:J\n-  #45 = NameAndType        #22:#23        // memoryLimitInKb:I\n-  #46 = NameAndType        #24:#58        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #47 = Utf8               java/lang/StringBuilder\n-  #48 = NameAndType        #24:#59        // \"<init>\":()V\n-  #49 = NameAndType        #60:#61        // append:(J)Ljava/lang/StringBuilder;\n-  #50 = Utf8                kb of memory would be needed; limit was\n-  #51 = NameAndType        #60:#62        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #52 = NameAndType        #60:#63        // append:(I)Ljava/lang/StringBuilder;\n-  #53 = Utf8                kb. If the file is not corrupt, consider increasing the memory limit.\n-  #54 = NameAndType        #64:#65        // toString:()Ljava/lang/String;\n-  #55 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #56 = Utf8               java/io/IOException\n-  #57 = Utf8               (Ljava/lang/String;)V\n-  #58 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #59 = Utf8               ()V\n-  #60 = Utf8               append\n-  #61 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #62 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #63 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #64 = Utf8               toString\n-  #65 = Utf8               ()Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/MemoryLimitException.buildMessage:(JI)Ljava/lang/String;\n+   #2 = Class              #4             // org/apache/commons/compress/MemoryLimitException\n+   #3 = NameAndType        #5:#6          // buildMessage:(JI)Ljava/lang/String;\n+   #4 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #5 = Utf8               buildMessage\n+   #6 = Utf8               (JI)Ljava/lang/String;\n+   #7 = Methodref          #8.#9          // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #8 = Class              #10            // java/io/IOException\n+   #9 = NameAndType        #11:#12        // \"<init>\":(Ljava/lang/String;)V\n+  #10 = Utf8               java/io/IOException\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Ljava/lang/String;)V\n+  #13 = Fieldref           #2.#14         // org/apache/commons/compress/MemoryLimitException.memoryNeededInKb:J\n+  #14 = NameAndType        #15:#16        // memoryNeededInKb:J\n+  #15 = Utf8               memoryNeededInKb\n+  #16 = Utf8               J\n+  #17 = Fieldref           #2.#18         // org/apache/commons/compress/MemoryLimitException.memoryLimitInKb:I\n+  #18 = NameAndType        #19:#20        // memoryLimitInKb:I\n+  #19 = Utf8               memoryLimitInKb\n+  #20 = Utf8               I\n+  #21 = Methodref          #8.#22         // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #22 = NameAndType        #11:#23        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #23 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #24 = Class              #25            // java/lang/StringBuilder\n+  #25 = Utf8               java/lang/StringBuilder\n+  #26 = Methodref          #24.#27        // java/lang/StringBuilder.\"<init>\":()V\n+  #27 = NameAndType        #11:#28        // \"<init>\":()V\n+  #28 = Utf8               ()V\n+  #29 = Methodref          #24.#30        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #30 = NameAndType        #31:#32        // append:(J)Ljava/lang/StringBuilder;\n+  #31 = Utf8               append\n+  #32 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #33 = String             #34            //  kb of memory would be needed; limit was\n+  #34 = Utf8                kb of memory would be needed; limit was\n+  #35 = Methodref          #24.#36        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #36 = NameAndType        #31:#37        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Methodref          #24.#39        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #39 = NameAndType        #31:#40        // append:(I)Ljava/lang/StringBuilder;\n+  #40 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #41 = String             #42            //  kb. If the file is not corrupt, consider increasing the memory limit.\n+  #42 = Utf8                kb. If the file is not corrupt, consider increasing the memory limit.\n+  #43 = Methodref          #24.#44        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #44 = NameAndType        #45:#46        // toString:()Ljava/lang/String;\n+  #45 = Utf8               toString\n+  #46 = Utf8               ()Ljava/lang/String;\n+  #47 = Utf8               serialVersionUID\n+  #48 = Utf8               ConstantValue\n+  #49 = Long               1l\n+  #51 = Utf8               (JI)V\n+  #52 = Utf8               Code\n+  #53 = Utf8               LineNumberTable\n+  #54 = Utf8               LocalVariableTable\n+  #55 = Utf8               this\n+  #56 = Utf8               Lorg/apache/commons/compress/MemoryLimitException;\n+  #57 = Utf8               (JILjava/lang/Exception;)V\n+  #58 = Utf8               e\n+  #59 = Utf8               Ljava/lang/Exception;\n+  #60 = Utf8               getMemoryNeededInKb\n+  #61 = Utf8               ()J\n+  #62 = Utf8               getMemoryLimitInKb\n+  #63 = Utf8               ()I\n+  #64 = Utf8               SourceFile\n+  #65 = Utf8               MemoryLimitException.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final long memoryNeededInKb;\n@@ -91,21 +91,21 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n          1: lload_1\n          2: iload_3\n          3: invokestatic  #1                  // Method buildMessage:(JI)Ljava/lang/String;\n-         6: invokespecial #2                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #7                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          9: aload_0\n         10: lload_1\n-        11: putfield      #3                  // Field memoryNeededInKb:J\n+        11: putfield      #13                 // Field memoryNeededInKb:J\n         14: aload_0\n         15: iload_3\n-        16: putfield      #4                  // Field memoryLimitInKb:I\n+        16: putfield      #17                 // Field memoryLimitInKb:I\n         19: return\n       LineNumberTable:\n         line 40: 0\n         line 41: 9\n         line 42: 14\n         line 43: 19\n       LocalVariableTable:\n@@ -120,21 +120,21 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: lload_1\n          2: iload_3\n          3: invokestatic  #1                  // Method buildMessage:(JI)Ljava/lang/String;\n          6: aload         4\n-         8: invokespecial #5                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+         8: invokespecial #21                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         11: aload_0\n         12: lload_1\n-        13: putfield      #3                  // Field memoryNeededInKb:J\n+        13: putfield      #13                 // Field memoryNeededInKb:J\n         16: aload_0\n         17: iload_3\n-        18: putfield      #4                  // Field memoryLimitInKb:I\n+        18: putfield      #17                 // Field memoryLimitInKb:I\n         21: return\n       LineNumberTable:\n         line 46: 0\n         line 47: 11\n         line 48: 16\n         line 49: 21\n       LocalVariableTable:\n@@ -146,53 +146,53 @@\n \n   public long getMemoryNeededInKb();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field memoryNeededInKb:J\n+         1: getfield      #13                 // Field memoryNeededInKb:J\n          4: lreturn\n       LineNumberTable:\n         line 52: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/MemoryLimitException;\n \n   public int getMemoryLimitInKb();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field memoryLimitInKb:I\n+         1: getfield      #17                 // Field memoryLimitInKb:I\n          4: ireturn\n       LineNumberTable:\n         line 56: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/MemoryLimitException;\n \n   private static java.lang.String buildMessage(long, int);\n     descriptor: (JI)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #6                  // class java/lang/StringBuilder\n+         0: new           #24                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: lload_0\n-         8: invokevirtual #8                  // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        11: ldc           #9                  // String  kb of memory would be needed; limit was\n-        13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         8: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        11: ldc           #33                 // String  kb of memory would be needed; limit was\n+        13: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: iload_2\n-        17: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        20: ldc           #12                 // String  kb. If the file is not corrupt, consider increasing the memory limit.\n-        22: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        17: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        20: ldc           #41                 // String  kb. If the file is not corrupt, consider increasing the memory limit.\n+        22: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         28: areturn\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0 memoryNeededInKb   J\n             0      29     2 memoryLimitInKb   I\n"}]}
