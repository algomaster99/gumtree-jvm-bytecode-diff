{"diffoscope-json-version": 1, "source1": "first/ToStringStyle$JsonToStringStyle.class", "source2": "second/ToStringStyle$JsonToStringStyle.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,155 +20,155 @@\n         this.setNullText(\"null\");\n         this.setSummaryObjectStartText(\"\\\"<\");\n         this.setSummaryObjectEndText(\">\\\"\");\n         this.setSizeStartText(\"\\\"<size=\");\n         this.setSizeEndText(\">\\\"\");\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final Object[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final Object[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final long[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final long[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final int[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final int[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final short[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final short[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final byte[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final byte[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final char[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final char[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final double[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final double[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final float[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final float[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final boolean[] array, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final boolean[] array, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, array, fullDetail);\n+        super.append(sb, s, array, b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final Object value, final Boolean fullDetail) {\n-        if (fieldName == null) {\n+    public void append(final StringBuffer sb, final String s, final Object o, final Boolean b) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        if (!this.isFullDetail(fullDetail)) {\n+        if (!this.isFullDetail(b)) {\n             throw new UnsupportedOperationException(\"FullDetail must be true when using JsonToStringStyle\");\n         }\n-        super.append(buffer, fieldName, value, fullDetail);\n+        super.append(sb, s, o, b);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final char value) {\n-        this.appendValueAsString(buffer, String.valueOf(value));\n+    protected void appendDetail(final StringBuffer sb, final String s, final char c) {\n+        this.appendValueAsString(sb, String.valueOf(c));\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final Object value) {\n-        if (value == null) {\n-            this.appendNullText(buffer, fieldName);\n+    protected void appendDetail(final StringBuffer sb, final String s, final Object o) {\n+        if (o == null) {\n+            this.appendNullText(sb, s);\n             return;\n         }\n-        if (value instanceof String || value instanceof Character) {\n-            this.appendValueAsString(buffer, value.toString());\n+        if (o instanceof String || o instanceof Character) {\n+            this.appendValueAsString(sb, o.toString());\n             return;\n         }\n-        if (value instanceof Number || value instanceof Boolean) {\n-            buffer.append(value);\n+        if (o instanceof Number || o instanceof Boolean) {\n+            sb.append(o);\n             return;\n         }\n-        final String valueAsString = value.toString();\n-        if (this.isJsonObject(valueAsString) || this.isJsonArray(valueAsString)) {\n-            buffer.append(value);\n+        final String string = o.toString();\n+        if (this.isJsonObject(string) || this.isJsonArray(string)) {\n+            sb.append(o);\n             return;\n         }\n-        this.appendDetail(buffer, fieldName, valueAsString);\n+        this.appendDetail(sb, s, string);\n     }\n     \n-    private boolean isJsonArray(final String valueAsString) {\n-        return valueAsString.startsWith(this.getArrayStart()) && valueAsString.endsWith(this.getArrayEnd());\n+    private boolean isJsonArray(final String s) {\n+        return s.startsWith(this.getArrayStart()) && s.endsWith(this.getArrayEnd());\n     }\n     \n-    private boolean isJsonObject(final String valueAsString) {\n-        return valueAsString.startsWith(this.getContentStart()) && valueAsString.endsWith(this.getContentEnd());\n+    private boolean isJsonObject(final String s) {\n+        return s.startsWith(this.getContentStart()) && s.endsWith(this.getContentEnd());\n     }\n     \n-    private void appendValueAsString(final StringBuffer buffer, final String value) {\n-        buffer.append('\\\"').append(StringEscapeUtils.escapeJson(value)).append('\\\"');\n+    private void appendValueAsString(final StringBuffer sb, final String s) {\n+        sb.append('\\\"').append(StringEscapeUtils.escapeJson(s)).append('\\\"');\n     }\n     \n-    protected void appendFieldStart(final StringBuffer buffer, final String fieldName) {\n-        if (fieldName == null) {\n+    protected void appendFieldStart(final StringBuffer sb, final String s) {\n+        if (s == null) {\n             throw new UnsupportedOperationException(\"Field names are mandatory when using JsonToStringStyle\");\n         }\n-        super.appendFieldStart(buffer, \"\\\"\" + StringEscapeUtils.escapeJson(fieldName) + \"\\\"\");\n+        super.appendFieldStart(sb, \"\\\"\" + StringEscapeUtils.escapeJson(s) + \"\\\"\");\n     }\n     \n     private Object readResolve() {\n         return JsonToStringStyle.JSON_STYLE;\n     }\n }\n"}]}
