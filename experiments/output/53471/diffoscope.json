{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntryRequest.class", "source2": "second/ZipArchiveEntryRequest.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,64 +1,64 @@\n-  SHA-256 checksum dd13688510ed98f7f616bfcf29523ff80aac1aa95b8dcd496fce49c69e9e576a\n+  SHA-256 checksum 44e61245fc650420f4657e09d0611f4523413c9f75db98773d78163a7760faf9\n   Compiled from \"ZipArchiveEntryRequest.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  super_class: #9                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #9.#33         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #6.#34         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #3 = Fieldref           #6.#35         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-   #4 = Methodref          #36.#37        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-   #5 = Fieldref           #6.#38         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.method:I\n-   #6 = Class              #39            // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-   #7 = Methodref          #6.#40         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-   #8 = InterfaceMethodref #41.#42        // org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n-   #9 = Class              #43            // java/lang/Object\n-  #10 = Utf8               zipArchiveEntry\n-  #11 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #12 = Utf8               payloadSupplier\n-  #13 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #14 = Utf8               method\n-  #15 = Utf8               I\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               LocalVariableTable\n-  #21 = Utf8               this\n-  #22 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #23 = Utf8               createZipArchiveEntryRequest\n-  #24 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #25 = Utf8               getPayloadStream\n-  #26 = Utf8               ()Ljava/io/InputStream;\n-  #27 = Utf8               getMethod\n-  #28 = Utf8               ()I\n-  #29 = Utf8               getZipArchiveEntry\n-  #30 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               ZipArchiveEntryRequest.java\n-  #33 = NameAndType        #16:#44        // \"<init>\":()V\n-  #34 = NameAndType        #10:#11        // zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #35 = NameAndType        #12:#13        // payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #36 = Class              #45            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #37 = NameAndType        #27:#28        // getMethod:()I\n-  #38 = NameAndType        #14:#15        // method:I\n-  #39 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #40 = NameAndType        #16:#17        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-  #41 = Class              #46            // org/apache/commons/compress/parallel/InputStreamSupplier\n-  #42 = NameAndType        #47:#26        // get:()Ljava/io/InputStream;\n-  #43 = Utf8               java/lang/Object\n-  #44 = Utf8               ()V\n-  #45 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #46 = Utf8               org/apache/commons/compress/parallel/InputStreamSupplier\n-  #47 = Utf8               get\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               zipArchiveEntry\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #7 = Utf8               payloadSupplier\n+   #8 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+   #9 = Utf8               method\n+  #10 = Utf8               I\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #13 = Utf8               Code\n+  #14 = Methodref          #3.#15         // java/lang/Object.\"<init>\":()V\n+  #15 = NameAndType        #11:#16        // \"<init>\":()V\n+  #16 = Utf8               ()V\n+  #17 = Fieldref           #1.#18         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #18 = NameAndType        #5:#6          // zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+  #20 = NameAndType        #7:#8          // payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+  #21 = Methodref          #22.#24        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #22 = Class              #23            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #23 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #24 = NameAndType        #25:#26        // getMethod:()I\n+  #25 = Utf8               getMethod\n+  #26 = Utf8               ()I\n+  #27 = Fieldref           #1.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.method:I\n+  #28 = NameAndType        #9:#10         // method:I\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               LocalVariableTable\n+  #31 = Utf8               this\n+  #32 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #33 = Utf8               createZipArchiveEntryRequest\n+  #34 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #35 = Methodref          #1.#36         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #36 = NameAndType        #11:#12        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #37 = Utf8               getPayloadStream\n+  #38 = Utf8               ()Ljava/io/InputStream;\n+  #39 = InterfaceMethodref #40.#42        // org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n+  #40 = Class              #41            // org/apache/commons/compress/parallel/InputStreamSupplier\n+  #41 = Utf8               org/apache/commons/compress/parallel/InputStreamSupplier\n+  #42 = NameAndType        #43:#38        // get:()Ljava/io/InputStream;\n+  #43 = Utf8               get\n+  #44 = Utf8               getZipArchiveEntry\n+  #45 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #46 = Utf8               SourceFile\n+  #47 = Utf8               ZipArchiveEntryRequest.java\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry zipArchiveEntry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.apache.commons.compress.parallel.InputStreamSupplier payloadSupplier;\n     descriptor: Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n@@ -70,25 +70,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         6: putfield      #17                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+        11: putfield      #19                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n         14: aload_0\n         15: aload_1\n-        16: invokevirtual #4                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-        19: putfield      #5                  // Field method:I\n+        16: invokevirtual #21                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+        19: putfield      #27                 // Field method:I\n         22: return\n       LineNumberTable:\n         line 40: 0\n         line 42: 4\n         line 43: 9\n         line 44: 14\n         line 45: 22\n@@ -99,63 +99,63 @@\n             0      23     2 payloadSupplier   Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n \n   public static org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest createZipArchiveEntryRequest(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #6                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+         0: new           #1                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #7                  // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+         6: invokespecial #35                 // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n          9: areturn\n       LineNumberTable:\n         line 54: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 zipArchiveEntry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      10     1 payloadSupplier   Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n \n   public java.io.InputStream getPayloadStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-         4: invokeinterface #8,  1            // InterfaceMethod org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n+         1: getfield      #19                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+         4: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n          9: areturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n \n   public int getMethod();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field method:I\n+         1: getfield      #27                 // Field method:I\n          4: ireturn\n       LineNumberTable:\n         line 70: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveEntry getZipArchiveEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #17                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n }\n"}]}
