{"diffoscope-json-version": 1, "source1": "first/FileNameUtils.class", "source2": "second/FileNameUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,118 +1,116 @@\n-  SHA-256 checksum 1f4ae51ab64cd60ac8d64a8c20e56896e26450317c050c0e171a65e25435c5c0\n+  SHA-256 checksum c19cec77b562f28b1267e563ffc267dde3d410512940668e80302b7e54d0cdd3\n   Compiled from \"FileNameUtils.java\"\n public class org.apache.commons.compress.utils.FileNameUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/compress/utils/FileNameUtils\n-  super_class: #14                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/utils/FileNameUtils\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#41        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #42.#43        // java/lang/String.lastIndexOf:(I)I\n-   #3 = Methodref          #42.#44        // java/lang/String.substring:(II)Ljava/lang/String;\n-   #4 = String             #45            //\n-   #5 = Methodref          #42.#46        // java/lang/String.substring:(I)Ljava/lang/String;\n-   #6 = InterfaceMethodref #47.#48        // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #7 = InterfaceMethodref #47.#49        // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #8 = Methodref          #13.#50        // org/apache/commons/compress/utils/FileNameUtils.fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n-   #9 = Class              #51            // java/io/File\n-  #10 = Methodref          #9.#52         // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Methodref          #9.#53         // java/io/File.getName:()Ljava/lang/String;\n-  #12 = Methodref          #13.#54        // org/apache/commons/compress/utils/FileNameUtils.fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #13 = Class              #55            // org/apache/commons/compress/utils/FileNameUtils\n-  #14 = Class              #56            // java/lang/Object\n-  #15 = Utf8               <init>\n-  #16 = Utf8               ()V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               this\n-  #21 = Utf8               Lorg/apache/commons/compress/utils/FileNameUtils;\n-  #22 = Utf8               fileNameToBaseName\n-  #23 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #24 = Utf8               name\n-  #25 = Utf8               Ljava/lang/String;\n-  #26 = Utf8               extensionIndex\n-  #27 = Utf8               I\n-  #28 = Utf8               StackMapTable\n-  #29 = Class              #57            // java/lang/String\n-  #30 = Utf8               fileNameToExtension\n-  #31 = Utf8               getBaseName\n-  #32 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n-  #33 = Utf8               path\n-  #34 = Utf8               Ljava/nio/file/Path;\n-  #35 = Utf8               fileName\n-  #36 = Class              #58            // java/nio/file/Path\n-  #37 = Utf8               filename\n-  #38 = Utf8               getExtension\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               FileNameUtils.java\n-  #41 = NameAndType        #15:#16        // \"<init>\":()V\n-  #42 = Class              #57            // java/lang/String\n-  #43 = NameAndType        #59:#60        // lastIndexOf:(I)I\n-  #44 = NameAndType        #61:#62        // substring:(II)Ljava/lang/String;\n-  #45 = Utf8\n-  #46 = NameAndType        #61:#63        // substring:(I)Ljava/lang/String;\n-  #47 = Class              #58            // java/nio/file/Path\n-  #48 = NameAndType        #64:#65        // getFileName:()Ljava/nio/file/Path;\n-  #49 = NameAndType        #66:#67        // toString:()Ljava/lang/String;\n-  #50 = NameAndType        #22:#23        // fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n-  #51 = Utf8               java/io/File\n-  #52 = NameAndType        #15:#68        // \"<init>\":(Ljava/lang/String;)V\n-  #53 = NameAndType        #69:#67        // getName:()Ljava/lang/String;\n-  #54 = NameAndType        #30:#23        // fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #55 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n-  #56 = Utf8               java/lang/Object\n-  #57 = Utf8               java/lang/String\n-  #58 = Utf8               java/nio/file/Path\n-  #59 = Utf8               lastIndexOf\n-  #60 = Utf8               (I)I\n-  #61 = Utf8               substring\n-  #62 = Utf8               (II)Ljava/lang/String;\n-  #63 = Utf8               (I)Ljava/lang/String;\n-  #64 = Utf8               getFileName\n-  #65 = Utf8               ()Ljava/nio/file/Path;\n-  #66 = Utf8               toString\n-  #67 = Utf8               ()Ljava/lang/String;\n-  #68 = Utf8               (Ljava/lang/String;)V\n-  #69 = Utf8               getName\n+   #1 = Class              #2             // org/apache/commons/compress/utils/FileNameUtils\n+   #2 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/compress/utils/FileNameUtils;\n+  #14 = Utf8               fileNameToBaseName\n+  #15 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #16 = Methodref          #17.#19        // java/lang/String.lastIndexOf:(I)I\n+  #17 = Class              #18            // java/lang/String\n+  #18 = Utf8               java/lang/String\n+  #19 = NameAndType        #20:#21        // lastIndexOf:(I)I\n+  #20 = Utf8               lastIndexOf\n+  #21 = Utf8               (I)I\n+  #22 = Methodref          #17.#23        // java/lang/String.substring:(II)Ljava/lang/String;\n+  #23 = NameAndType        #24:#25        // substring:(II)Ljava/lang/String;\n+  #24 = Utf8               substring\n+  #25 = Utf8               (II)Ljava/lang/String;\n+  #26 = Utf8               name\n+  #27 = Utf8               Ljava/lang/String;\n+  #28 = Utf8               extensionIndex\n+  #29 = Utf8               I\n+  #30 = Utf8               StackMapTable\n+  #31 = Utf8               fileNameToExtension\n+  #32 = String             #33            //\n+  #33 = Utf8\n+  #34 = Methodref          #17.#35        // java/lang/String.substring:(I)Ljava/lang/String;\n+  #35 = NameAndType        #24:#36        // substring:(I)Ljava/lang/String;\n+  #36 = Utf8               (I)Ljava/lang/String;\n+  #37 = Utf8               getBaseName\n+  #38 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #39 = InterfaceMethodref #40.#42        // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+  #40 = Class              #41            // java/nio/file/Path\n+  #41 = Utf8               java/nio/file/Path\n+  #42 = NameAndType        #43:#44        // getFileName:()Ljava/nio/file/Path;\n+  #43 = Utf8               getFileName\n+  #44 = Utf8               ()Ljava/nio/file/Path;\n+  #45 = InterfaceMethodref #40.#46        // java/nio/file/Path.toString:()Ljava/lang/String;\n+  #46 = NameAndType        #47:#48        // toString:()Ljava/lang/String;\n+  #47 = Utf8               toString\n+  #48 = Utf8               ()Ljava/lang/String;\n+  #49 = Methodref          #1.#50         // org/apache/commons/compress/utils/FileNameUtils.fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n+  #50 = NameAndType        #14:#15        // fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n+  #51 = Utf8               path\n+  #52 = Utf8               Ljava/nio/file/Path;\n+  #53 = Utf8               fileName\n+  #54 = Class              #55            // java/io/File\n+  #55 = Utf8               java/io/File\n+  #56 = Methodref          #54.#57        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+  #57 = NameAndType        #5:#58         // \"<init>\":(Ljava/lang/String;)V\n+  #58 = Utf8               (Ljava/lang/String;)V\n+  #59 = Methodref          #54.#60        // java/io/File.getName:()Ljava/lang/String;\n+  #60 = NameAndType        #61:#48        // getName:()Ljava/lang/String;\n+  #61 = Utf8               getName\n+  #62 = Utf8               filename\n+  #63 = Utf8               getExtension\n+  #64 = Methodref          #1.#65         // org/apache/commons/compress/utils/FileNameUtils.fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #65 = NameAndType        #31:#15        // fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               FileNameUtils.java\n {\n   public org.apache.commons.compress.utils.FileNameUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 28: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/FileNameUtils;\n \n   private static java.lang.String fileNameToBaseName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: bipush        46\n-         3: invokevirtual #2                  // Method java/lang/String.lastIndexOf:(I)I\n+         3: invokevirtual #16                 // Method java/lang/String.lastIndexOf:(I)I\n          6: istore_1\n          7: iload_1\n          8: ifge          15\n         11: aload_0\n         12: goto          21\n         15: aload_0\n         16: iconst_0\n         17: iload_1\n-        18: invokevirtual #3                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        18: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         21: areturn\n       LineNumberTable:\n         line 31: 0\n         line 32: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  name   Ljava/lang/String;\n@@ -127,25 +125,25 @@\n   private static java.lang.String fileNameToExtension(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: bipush        46\n-         3: invokevirtual #2                  // Method java/lang/String.lastIndexOf:(I)I\n+         3: invokevirtual #16                 // Method java/lang/String.lastIndexOf:(I)I\n          6: istore_1\n          7: iload_1\n          8: ifge          16\n-        11: ldc           #4                  // String\n+        11: ldc           #32                 // String\n         13: goto          23\n         16: aload_0\n         17: iload_1\n         18: iconst_1\n         19: iadd\n-        20: invokevirtual #5                  // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        20: invokevirtual #34                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n         23: areturn\n       LineNumberTable:\n         line 36: 0\n         line 37: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  name   Ljava/lang/String;\n@@ -163,21 +161,21 @@\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokeinterface #6,  1            // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         7: invokeinterface #39,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n         12: astore_1\n         13: aload_1\n         14: ifnull        29\n         17: aload_1\n-        18: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n-        23: invokestatic  #8                  // Method fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n+        18: invokeinterface #45,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+        23: invokestatic  #49                 // Method fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n         26: goto          30\n         29: aconst_null\n         30: areturn\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 54: 6\n@@ -199,20 +197,20 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #9                  // class java/io/File\n+         6: new           #54                 // class java/io/File\n          9: dup\n         10: aload_0\n-        11: invokespecial #10                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n-        14: invokevirtual #11                 // Method java/io/File.getName:()Ljava/lang/String;\n-        17: invokestatic  #8                  // Method fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n+        11: invokespecial #56                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+        14: invokevirtual #59                 // Method java/io/File.getName:()Ljava/lang/String;\n+        17: invokestatic  #49                 // Method fileNameToBaseName:(Ljava/lang/String;)Ljava/lang/String;\n         20: areturn\n       LineNumberTable:\n         line 70: 0\n         line 71: 4\n         line 73: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -226,21 +224,21 @@\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokeinterface #6,  1            // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         7: invokeinterface #39,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n         12: astore_1\n         13: aload_1\n         14: ifnull        29\n         17: aload_1\n-        18: invokeinterface #7,  1            // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n-        23: invokestatic  #12                 // Method fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        18: invokeinterface #45,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+        23: invokestatic  #64                 // Method fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n         26: goto          30\n         29: aconst_null\n         30: areturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 4\n         line 90: 6\n@@ -262,20 +260,20 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #9                  // class java/io/File\n+         6: new           #54                 // class java/io/File\n          9: dup\n         10: aload_0\n-        11: invokespecial #10                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n-        14: invokevirtual #11                 // Method java/io/File.getName:()Ljava/lang/String;\n-        17: invokestatic  #12                 // Method fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        11: invokespecial #56                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+        14: invokevirtual #59                 // Method java/io/File.getName:()Ljava/lang/String;\n+        17: invokestatic  #64                 // Method fileNameToExtension:(Ljava/lang/String;)Ljava/lang/String;\n         20: areturn\n       LineNumberTable:\n         line 106: 0\n         line 107: 4\n         line 109: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
