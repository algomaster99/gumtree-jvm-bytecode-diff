{"diffoscope-json-version": 1, "source1": "first/TarArchiveInputStream.class", "source2": "second/TarArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -211,18 +211,18 @@\n         final Map<String, String> headers = this.parsePaxHeaders((InputStream)this);\n         this.getNextEntry();\n         this.applyPaxHeadersToCurrentEntry(headers);\n     }\n     \n     Map<String, String> parsePaxHeaders(final InputStream i) throws IOException {\n         final Map<String, String> headers = new HashMap<String, String>(this.globalPaxHeaders);\n-        while (true) {\n+        int ch;\n+        do {\n             int len = 0;\n             int read = 0;\n-            int ch;\n             while ((ch = i.read()) != -1) {\n                 ++read;\n                 if (ch == 10) {\n                     break;\n                 }\n                 if (ch == 32) {\n                     final ByteArrayOutputStream coll = new ByteArrayOutputStream();\n@@ -249,18 +249,16 @@\n                         }\n                     }\n                     break;\n                 }\n                 len *= 10;\n                 len += ch - 48;\n             }\n-            if (ch == -1) {\n-                return headers;\n-            }\n-        }\n+        } while (ch != -1);\n+        return headers;\n     }\n     \n     private void applyPaxHeadersToCurrentEntry(final Map<String, String> headers) {\n         this.currEntry.updateEntryFromPaxHeaders((Map)headers);\n     }\n     \n     private void readOldGNUSparse() throws IOException {\n@@ -296,14 +294,18 @@\n         }\n         finally {\n             if (shouldReset && marked) {\n                 this.pushedBackBytes((long)this.recordSize);\n                 this.is.reset();\n             }\n         }\n+        if (shouldReset && marked) {\n+            this.pushedBackBytes((long)this.recordSize);\n+            this.is.reset();\n+        }\n     }\n     \n     public int read(final byte[] buf, final int offset, int numToRead) throws IOException {\n         int totalRead = 0;\n         if (this.isAtEOF() || this.isDirectory() || this.entryOffset >= this.entrySize) {\n             return -1;\n         }\n"}]}
