{"diffoscope-json-version": 1, "source1": "first/FileEntry.class", "source2": "second/FileEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum bc42245ac7ab514bf82a39e7f0f7508f9eff12e05714e069f31da34ce8d3a4ae\n+  SHA-256 checksum ffbdb4d2a4272b3012679792110b2ab9f1edf948d5f23d52fa4dcc1f6259676c\n   Compiled from \"FileEntry.java\"\n public class org.apache.commons.io.monitor.FileEntry implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #18                         // org/apache/commons/io/monitor/FileEntry\n   super_class: #22                        // java/lang/Object\n   interfaces: 1, fields: 10, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Methodref          #18.#86       // org/apache/commons/io/monitor/FileEntry.\"<init>\":(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V\n-    #2 = Methodref          #22.#87       // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #88           // java/lang/IllegalArgumentException\n-    #4 = String             #89           // File is missing\n-    #5 = Methodref          #3.#90        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #6 = Fieldref           #18.#91       // org/apache/commons/io/monitor/FileEntry.file:Ljava/io/File;\n-    #7 = Fieldref           #18.#92       // org/apache/commons/io/monitor/FileEntry.parent:Lorg/apache/commons/io/monitor/FileEntry;\n-    #8 = Methodref          #93.#94       // java/io/File.getName:()Ljava/lang/String;\n-    #9 = Fieldref           #18.#95       // org/apache/commons/io/monitor/FileEntry.name:Ljava/lang/String;\n-   #10 = Fieldref           #18.#96       // org/apache/commons/io/monitor/FileEntry.exists:Z\n-   #11 = Fieldref           #18.#97       // org/apache/commons/io/monitor/FileEntry.lastModified:J\n-   #12 = Fieldref           #18.#98       // org/apache/commons/io/monitor/FileEntry.directory:Z\n-   #13 = Fieldref           #18.#99       // org/apache/commons/io/monitor/FileEntry.length:J\n-   #14 = Methodref          #93.#100      // java/io/File.exists:()Z\n-   #15 = Methodref          #93.#101      // java/io/File.isDirectory:()Z\n-   #16 = Methodref          #93.#102      // java/io/File.lastModified:()J\n-   #17 = Methodref          #93.#103      // java/io/File.length:()J\n-   #18 = Class              #104          // org/apache/commons/io/monitor/FileEntry\n-   #19 = Methodref          #18.#105      // org/apache/commons/io/monitor/FileEntry.getLevel:()I\n-   #20 = Fieldref           #18.#106      // org/apache/commons/io/monitor/FileEntry.children:[Lorg/apache/commons/io/monitor/FileEntry;\n-   #21 = Fieldref           #18.#107      // org/apache/commons/io/monitor/FileEntry.EMPTY_ENTRIES:[Lorg/apache/commons/io/monitor/FileEntry;\n-   #22 = Class              #108          // java/lang/Object\n-   #23 = Class              #109          // java/io/Serializable\n+    #1 = Methodref          #18.#85       // org/apache/commons/io/monitor/FileEntry.\"<init>\":(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V\n+    #2 = Methodref          #22.#86       // java/lang/Object.\"<init>\":()V\n+    #3 = Class              #87           // java/lang/IllegalArgumentException\n+    #4 = String             #88           // File is missing\n+    #5 = Methodref          #3.#89        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #6 = Fieldref           #18.#90       // org/apache/commons/io/monitor/FileEntry.file:Ljava/io/File;\n+    #7 = Fieldref           #18.#91       // org/apache/commons/io/monitor/FileEntry.parent:Lorg/apache/commons/io/monitor/FileEntry;\n+    #8 = Methodref          #49.#92       // java/io/File.getName:()Ljava/lang/String;\n+    #9 = Fieldref           #18.#93       // org/apache/commons/io/monitor/FileEntry.name:Ljava/lang/String;\n+   #10 = Fieldref           #18.#94       // org/apache/commons/io/monitor/FileEntry.exists:Z\n+   #11 = Fieldref           #18.#95       // org/apache/commons/io/monitor/FileEntry.lastModified:J\n+   #12 = Fieldref           #18.#96       // org/apache/commons/io/monitor/FileEntry.directory:Z\n+   #13 = Fieldref           #18.#97       // org/apache/commons/io/monitor/FileEntry.length:J\n+   #14 = Methodref          #49.#98       // java/io/File.exists:()Z\n+   #15 = Methodref          #49.#99       // java/io/File.isDirectory:()Z\n+   #16 = Methodref          #49.#100      // java/io/File.lastModified:()J\n+   #17 = Methodref          #49.#101      // java/io/File.length:()J\n+   #18 = Class              #102          // org/apache/commons/io/monitor/FileEntry\n+   #19 = Methodref          #18.#103      // org/apache/commons/io/monitor/FileEntry.getLevel:()I\n+   #20 = Fieldref           #18.#104      // org/apache/commons/io/monitor/FileEntry.children:[Lorg/apache/commons/io/monitor/FileEntry;\n+   #21 = Fieldref           #18.#105      // org/apache/commons/io/monitor/FileEntry.EMPTY_ENTRIES:[Lorg/apache/commons/io/monitor/FileEntry;\n+   #22 = Class              #106          // java/lang/Object\n+   #23 = Class              #107          // java/io/Serializable\n    #24 = Utf8               serialVersionUID\n    #25 = Utf8               J\n    #26 = Utf8               ConstantValue\n    #27 = Long               -2505664948818681153l\n    #29 = Utf8               EMPTY_ENTRIES\n    #30 = Utf8               [Lorg/apache/commons/io/monitor/FileEntry;\n    #31 = Utf8               parent\n@@ -51,76 +51,74 @@\n    #42 = Utf8               length\n    #43 = Utf8               <init>\n    #44 = Utf8               (Ljava/io/File;)V\n    #45 = Utf8               Code\n    #46 = Utf8               LineNumberTable\n    #47 = Utf8               (Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V\n    #48 = Utf8               StackMapTable\n-   #49 = Class              #104          // org/apache/commons/io/monitor/FileEntry\n-   #50 = Class              #110          // java/io/File\n-   #51 = Utf8               refresh\n-   #52 = Utf8               (Ljava/io/File;)Z\n-   #53 = Utf8               newChildInstance\n-   #54 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;\n-   #55 = Utf8               getParent\n-   #56 = Utf8               ()Lorg/apache/commons/io/monitor/FileEntry;\n-   #57 = Utf8               getLevel\n-   #58 = Utf8               ()I\n-   #59 = Utf8               getChildren\n-   #60 = Utf8               ()[Lorg/apache/commons/io/monitor/FileEntry;\n-   #61 = Class              #30           // \"[Lorg/apache/commons/io/monitor/FileEntry;\"\n-   #62 = Utf8               setChildren\n-   #63 = Utf8               ([Lorg/apache/commons/io/monitor/FileEntry;)V\n-   #64 = Utf8               getFile\n-   #65 = Utf8               ()Ljava/io/File;\n-   #66 = Utf8               getName\n-   #67 = Utf8               ()Ljava/lang/String;\n-   #68 = Utf8               setName\n-   #69 = Utf8               (Ljava/lang/String;)V\n-   #70 = Utf8               getLastModified\n-   #71 = Utf8               ()J\n-   #72 = Utf8               setLastModified\n-   #73 = Utf8               (J)V\n-   #74 = Utf8               getLength\n-   #75 = Utf8               setLength\n-   #76 = Utf8               isExists\n-   #77 = Utf8               ()Z\n-   #78 = Utf8               setExists\n-   #79 = Utf8               (Z)V\n-   #80 = Utf8               isDirectory\n-   #81 = Utf8               setDirectory\n-   #82 = Utf8               <clinit>\n-   #83 = Utf8               ()V\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               FileEntry.java\n-   #86 = NameAndType        #43:#47       // \"<init>\":(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V\n-   #87 = NameAndType        #43:#83       // \"<init>\":()V\n-   #88 = Utf8               java/lang/IllegalArgumentException\n-   #89 = Utf8               File is missing\n-   #90 = NameAndType        #43:#69       // \"<init>\":(Ljava/lang/String;)V\n-   #91 = NameAndType        #34:#35       // file:Ljava/io/File;\n-   #92 = NameAndType        #31:#32       // parent:Lorg/apache/commons/io/monitor/FileEntry;\n-   #93 = Class              #110          // java/io/File\n-   #94 = NameAndType        #66:#67       // getName:()Ljava/lang/String;\n-   #95 = NameAndType        #36:#37       // name:Ljava/lang/String;\n-   #96 = NameAndType        #38:#39       // exists:Z\n-   #97 = NameAndType        #41:#25       // lastModified:J\n-   #98 = NameAndType        #40:#39       // directory:Z\n-   #99 = NameAndType        #42:#25       // length:J\n-  #100 = NameAndType        #38:#77       // exists:()Z\n-  #101 = NameAndType        #80:#77       // isDirectory:()Z\n-  #102 = NameAndType        #41:#71       // lastModified:()J\n-  #103 = NameAndType        #42:#71       // length:()J\n-  #104 = Utf8               org/apache/commons/io/monitor/FileEntry\n-  #105 = NameAndType        #57:#58       // getLevel:()I\n-  #106 = NameAndType        #33:#30       // children:[Lorg/apache/commons/io/monitor/FileEntry;\n-  #107 = NameAndType        #29:#30       // EMPTY_ENTRIES:[Lorg/apache/commons/io/monitor/FileEntry;\n-  #108 = Utf8               java/lang/Object\n-  #109 = Utf8               java/io/Serializable\n-  #110 = Utf8               java/io/File\n+   #49 = Class              #108          // java/io/File\n+   #50 = Utf8               refresh\n+   #51 = Utf8               (Ljava/io/File;)Z\n+   #52 = Utf8               newChildInstance\n+   #53 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/monitor/FileEntry;\n+   #54 = Utf8               getParent\n+   #55 = Utf8               ()Lorg/apache/commons/io/monitor/FileEntry;\n+   #56 = Utf8               getLevel\n+   #57 = Utf8               ()I\n+   #58 = Utf8               getChildren\n+   #59 = Utf8               ()[Lorg/apache/commons/io/monitor/FileEntry;\n+   #60 = Class              #30           // \"[Lorg/apache/commons/io/monitor/FileEntry;\"\n+   #61 = Utf8               setChildren\n+   #62 = Utf8               ([Lorg/apache/commons/io/monitor/FileEntry;)V\n+   #63 = Utf8               getFile\n+   #64 = Utf8               ()Ljava/io/File;\n+   #65 = Utf8               getName\n+   #66 = Utf8               ()Ljava/lang/String;\n+   #67 = Utf8               setName\n+   #68 = Utf8               (Ljava/lang/String;)V\n+   #69 = Utf8               getLastModified\n+   #70 = Utf8               ()J\n+   #71 = Utf8               setLastModified\n+   #72 = Utf8               (J)V\n+   #73 = Utf8               getLength\n+   #74 = Utf8               setLength\n+   #75 = Utf8               isExists\n+   #76 = Utf8               ()Z\n+   #77 = Utf8               setExists\n+   #78 = Utf8               (Z)V\n+   #79 = Utf8               isDirectory\n+   #80 = Utf8               setDirectory\n+   #81 = Utf8               <clinit>\n+   #82 = Utf8               ()V\n+   #83 = Utf8               SourceFile\n+   #84 = Utf8               FileEntry.java\n+   #85 = NameAndType        #43:#47       // \"<init>\":(Lorg/apache/commons/io/monitor/FileEntry;Ljava/io/File;)V\n+   #86 = NameAndType        #43:#82       // \"<init>\":()V\n+   #87 = Utf8               java/lang/IllegalArgumentException\n+   #88 = Utf8               File is missing\n+   #89 = NameAndType        #43:#68       // \"<init>\":(Ljava/lang/String;)V\n+   #90 = NameAndType        #34:#35       // file:Ljava/io/File;\n+   #91 = NameAndType        #31:#32       // parent:Lorg/apache/commons/io/monitor/FileEntry;\n+   #92 = NameAndType        #65:#66       // getName:()Ljava/lang/String;\n+   #93 = NameAndType        #36:#37       // name:Ljava/lang/String;\n+   #94 = NameAndType        #38:#39       // exists:Z\n+   #95 = NameAndType        #41:#25       // lastModified:J\n+   #96 = NameAndType        #40:#39       // directory:Z\n+   #97 = NameAndType        #42:#25       // length:J\n+   #98 = NameAndType        #38:#76       // exists:()Z\n+   #99 = NameAndType        #79:#76       // isDirectory:()Z\n+  #100 = NameAndType        #41:#70       // lastModified:()J\n+  #101 = NameAndType        #42:#70       // length:()J\n+  #102 = Utf8               org/apache/commons/io/monitor/FileEntry\n+  #103 = NameAndType        #56:#57       // getLevel:()I\n+  #104 = NameAndType        #33:#30       // children:[Lorg/apache/commons/io/monitor/FileEntry;\n+  #105 = NameAndType        #29:#30       // EMPTY_ENTRIES:[Lorg/apache/commons/io/monitor/FileEntry;\n+  #106 = Utf8               java/lang/Object\n+  #107 = Utf8               java/io/Serializable\n+  #108 = Utf8               java/io/File\n {\n   private static final long serialVersionUID = -2505664948818681153l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -2505664948818681153l\n \n   static final org.apache.commons.io.monitor.FileEntry[] EMPTY_ENTRIES;\n"}]}
