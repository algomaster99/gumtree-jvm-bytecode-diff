{"diffoscope-json-version": 1, "source1": "first/FilterCollectionWriter.class", "source2": "second/FilterCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,194 +1,194 @@\n-  SHA-256 checksum cfc890f2ef12c1172059dd75a99f18072e5b68f2cbe056d8c18b0213000b6c8a\n+  SHA-256 checksum aedcf43b42e3dcb244399e5df472b93fe36811f81ad77bad70608f0c88afe636\n   Compiled from \"FilterCollectionWriter.java\"\n public class org.apache.commons.io.output.FilterCollectionWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #32                         // org/apache/commons/io/output/FilterCollectionWriter\n-  super_class: #11                        // java/io/Writer\n+  this_class: #14                         // org/apache/commons/io/output/FilterCollectionWriter\n+  super_class: #2                         // java/io/Writer\n   interfaces: 0, fields: 2, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #11.#97       // java/io/Writer.\"<init>\":()V\n-    #2 = Methodref          #98.#99       // java/util/Collections.emptyList:()Ljava/util/List;\n-    #3 = Fieldref           #32.#100      // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n-    #4 = Fieldref           #32.#101      // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n-    #5 = Methodref          #102.#103     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-    #6 = Class              #104          // java/util/ArrayList\n-    #7 = Methodref          #6.#97        // java/util/ArrayList.\"<init>\":()V\n-    #8 = InterfaceMethodref #47.#105      // java/util/Collection.iterator:()Ljava/util/Iterator;\n-    #9 = InterfaceMethodref #66.#106      // java/util/Iterator.hasNext:()Z\n-   #10 = InterfaceMethodref #66.#107      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #11 = Class              #108          // java/io/Writer\n-   #12 = Methodref          #11.#109      // java/io/Writer.append:(C)Ljava/io/Writer;\n-   #13 = Class              #110          // java/io/IOException\n-   #14 = Class              #111          // org/apache/commons/io/IOIndexedException\n-   #15 = Methodref          #14.#112      // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-   #16 = InterfaceMethodref #65.#113      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #17 = InterfaceMethodref #65.#114      // java/util/List.isEmpty:()Z\n-   #18 = Class              #115          // org/apache/commons/io/IOExceptionList\n-   #19 = Methodref          #18.#116      // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n-   #20 = Methodref          #11.#117      // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #21 = Methodref          #11.#118      // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #22 = Methodref          #11.#119      // java/io/Writer.close:()V\n-   #23 = Methodref          #11.#120      // java/io/Writer.flush:()V\n-   #24 = Methodref          #11.#121      // java/io/Writer.write:([CII)V\n-   #25 = Methodref          #11.#122      // java/io/Writer.write:([C)V\n-   #26 = Methodref          #11.#123      // java/io/Writer.write:(I)V\n-   #27 = Methodref          #11.#124      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #28 = Methodref          #11.#125      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #29 = Methodref          #32.#109      // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #30 = Methodref          #32.#118      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #31 = Methodref          #32.#117      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #32 = Class              #126          // org/apache/commons/io/output/FilterCollectionWriter\n-   #33 = Utf8               EMPTY_WRITERS\n-   #34 = Utf8               Ljava/util/Collection;\n-   #35 = Utf8               Signature\n-   #36 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n-   #37 = Utf8               writers\n-   #38 = Utf8               <init>\n-   #39 = Utf8               (Ljava/util/Collection;)V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n-   #45 = Utf8               LocalVariableTypeTable\n-   #46 = Utf8               StackMapTable\n-   #47 = Class              #127          // java/util/Collection\n-   #48 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n-   #49 = Utf8               ([Ljava/io/Writer;)V\n-   #50 = Utf8               [Ljava/io/Writer;\n-   #51 = Class              #50           // \"[Ljava/io/Writer;\"\n-   #52 = Utf8               append\n-   #53 = Utf8               (C)Ljava/io/Writer;\n-   #54 = Utf8               e\n-   #55 = Utf8               Ljava/io/IOException;\n-   #56 = Utf8               w\n-   #57 = Utf8               Ljava/io/Writer;\n-   #58 = Utf8               c\n-   #59 = Utf8               C\n-   #60 = Utf8               causeList\n-   #61 = Utf8               Ljava/util/List;\n-   #62 = Utf8               i\n-   #63 = Utf8               I\n-   #64 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n-   #65 = Class              #128          // java/util/List\n-   #66 = Class              #129          // java/util/Iterator\n-   #67 = Utf8               Exceptions\n-   #68 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #69 = Utf8               csq\n-   #70 = Utf8               Ljava/lang/CharSequence;\n-   #71 = Class              #130          // java/lang/CharSequence\n-   #72 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #73 = Utf8               start\n-   #74 = Utf8               end\n-   #75 = Utf8               close\n-   #76 = Utf8               ()V\n-   #77 = Utf8               flush\n-   #78 = Utf8               write\n-   #79 = Utf8               ([CII)V\n-   #80 = Utf8               cbuf\n-   #81 = Utf8               [C\n-   #82 = Utf8               off\n-   #83 = Utf8               len\n-   #84 = Class              #81           // \"[C\"\n-   #85 = Utf8               ([C)V\n-   #86 = Utf8               (I)V\n-   #87 = Utf8               (Ljava/lang/String;)V\n-   #88 = Utf8               str\n-   #89 = Utf8               Ljava/lang/String;\n-   #90 = Class              #131          // java/lang/String\n-   #91 = Utf8               (Ljava/lang/String;II)V\n-   #92 = Utf8               (C)Ljava/lang/Appendable;\n-   #93 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #94 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               FilterCollectionWriter.java\n-   #97 = NameAndType        #38:#76       // \"<init>\":()V\n-   #98 = Class              #132          // java/util/Collections\n-   #99 = NameAndType        #133:#134     // emptyList:()Ljava/util/List;\n-  #100 = NameAndType        #33:#34       // EMPTY_WRITERS:Ljava/util/Collection;\n-  #101 = NameAndType        #37:#34       // writers:Ljava/util/Collection;\n-  #102 = Class              #135          // java/util/Arrays\n-  #103 = NameAndType        #136:#137     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #104 = Utf8               java/util/ArrayList\n-  #105 = NameAndType        #138:#139     // iterator:()Ljava/util/Iterator;\n-  #106 = NameAndType        #140:#141     // hasNext:()Z\n-  #107 = NameAndType        #142:#143     // next:()Ljava/lang/Object;\n-  #108 = Utf8               java/io/Writer\n-  #109 = NameAndType        #52:#53       // append:(C)Ljava/io/Writer;\n-  #110 = Utf8               java/io/IOException\n-  #111 = Utf8               org/apache/commons/io/IOIndexedException\n-  #112 = NameAndType        #38:#144      // \"<init>\":(ILjava/lang/Throwable;)V\n-  #113 = NameAndType        #145:#146     // add:(Ljava/lang/Object;)Z\n-  #114 = NameAndType        #147:#141     // isEmpty:()Z\n-  #115 = Utf8               org/apache/commons/io/IOExceptionList\n-  #116 = NameAndType        #38:#148      // \"<init>\":(Ljava/util/List;)V\n-  #117 = NameAndType        #52:#68       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #118 = NameAndType        #52:#72       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #119 = NameAndType        #75:#76       // close:()V\n-  #120 = NameAndType        #77:#76       // flush:()V\n-  #121 = NameAndType        #78:#79       // write:([CII)V\n-  #122 = NameAndType        #78:#85       // write:([C)V\n-  #123 = NameAndType        #78:#86       // write:(I)V\n-  #124 = NameAndType        #78:#87       // write:(Ljava/lang/String;)V\n-  #125 = NameAndType        #78:#91       // write:(Ljava/lang/String;II)V\n-  #126 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-  #127 = Utf8               java/util/Collection\n-  #128 = Utf8               java/util/List\n-  #129 = Utf8               java/util/Iterator\n-  #130 = Utf8               java/lang/CharSequence\n-  #131 = Utf8               java/lang/String\n-  #132 = Utf8               java/util/Collections\n-  #133 = Utf8               emptyList\n-  #134 = Utf8               ()Ljava/util/List;\n-  #135 = Utf8               java/util/Arrays\n-  #136 = Utf8               asList\n-  #137 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #138 = Utf8               iterator\n-  #139 = Utf8               ()Ljava/util/Iterator;\n-  #140 = Utf8               hasNext\n-  #141 = Utf8               ()Z\n-  #142 = Utf8               next\n-  #143 = Utf8               ()Ljava/lang/Object;\n-  #144 = Utf8               (ILjava/lang/Throwable;)V\n-  #145 = Utf8               add\n-  #146 = Utf8               (Ljava/lang/Object;)Z\n-  #147 = Utf8               isEmpty\n-  #148 = Utf8               (Ljava/util/List;)V\n+    #1 = Methodref          #2.#3         // java/io/Writer.\"<init>\":()V\n+    #2 = Class              #4            // java/io/Writer\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/io/Writer\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/util/Collections.emptyList:()Ljava/util/List;\n+    #8 = Class              #10           // java/util/Collections\n+    #9 = NameAndType        #11:#12       // emptyList:()Ljava/util/List;\n+   #10 = Utf8               java/util/Collections\n+   #11 = Utf8               emptyList\n+   #12 = Utf8               ()Ljava/util/List;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n+   #14 = Class              #16           // org/apache/commons/io/output/FilterCollectionWriter\n+   #15 = NameAndType        #17:#18       // EMPTY_WRITERS:Ljava/util/Collection;\n+   #16 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+   #17 = Utf8               EMPTY_WRITERS\n+   #18 = Utf8               Ljava/util/Collection;\n+   #19 = Fieldref           #14.#20       // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n+   #20 = NameAndType        #21:#18       // writers:Ljava/util/Collection;\n+   #21 = Utf8               writers\n+   #22 = Methodref          #23.#24       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #23 = Class              #25           // java/util/Arrays\n+   #24 = NameAndType        #26:#27       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #25 = Utf8               java/util/Arrays\n+   #26 = Utf8               asList\n+   #27 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #28 = Class              #29           // java/util/ArrayList\n+   #29 = Utf8               java/util/ArrayList\n+   #30 = Methodref          #28.#3        // java/util/ArrayList.\"<init>\":()V\n+   #31 = InterfaceMethodref #32.#33       // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #32 = Class              #34           // java/util/Collection\n+   #33 = NameAndType        #35:#36       // iterator:()Ljava/util/Iterator;\n+   #34 = Utf8               java/util/Collection\n+   #35 = Utf8               iterator\n+   #36 = Utf8               ()Ljava/util/Iterator;\n+   #37 = InterfaceMethodref #38.#39       // java/util/Iterator.hasNext:()Z\n+   #38 = Class              #40           // java/util/Iterator\n+   #39 = NameAndType        #41:#42       // hasNext:()Z\n+   #40 = Utf8               java/util/Iterator\n+   #41 = Utf8               hasNext\n+   #42 = Utf8               ()Z\n+   #43 = InterfaceMethodref #38.#44       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #44 = NameAndType        #45:#46       // next:()Ljava/lang/Object;\n+   #45 = Utf8               next\n+   #46 = Utf8               ()Ljava/lang/Object;\n+   #47 = Methodref          #2.#48        // java/io/Writer.append:(C)Ljava/io/Writer;\n+   #48 = NameAndType        #49:#50       // append:(C)Ljava/io/Writer;\n+   #49 = Utf8               append\n+   #50 = Utf8               (C)Ljava/io/Writer;\n+   #51 = Class              #52           // java/io/IOException\n+   #52 = Utf8               java/io/IOException\n+   #53 = Class              #54           // org/apache/commons/io/IOIndexedException\n+   #54 = Utf8               org/apache/commons/io/IOIndexedException\n+   #55 = Methodref          #53.#56       // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+   #56 = NameAndType        #5:#57        // \"<init>\":(ILjava/lang/Throwable;)V\n+   #57 = Utf8               (ILjava/lang/Throwable;)V\n+   #58 = InterfaceMethodref #59.#60       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #59 = Class              #61           // java/util/List\n+   #60 = NameAndType        #62:#63       // add:(Ljava/lang/Object;)Z\n+   #61 = Utf8               java/util/List\n+   #62 = Utf8               add\n+   #63 = Utf8               (Ljava/lang/Object;)Z\n+   #64 = InterfaceMethodref #59.#65       // java/util/List.isEmpty:()Z\n+   #65 = NameAndType        #66:#42       // isEmpty:()Z\n+   #66 = Utf8               isEmpty\n+   #67 = Class              #68           // org/apache/commons/io/IOExceptionList\n+   #68 = Utf8               org/apache/commons/io/IOExceptionList\n+   #69 = Methodref          #67.#70       // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+   #70 = NameAndType        #5:#71        // \"<init>\":(Ljava/util/List;)V\n+   #71 = Utf8               (Ljava/util/List;)V\n+   #72 = Methodref          #2.#73        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #73 = NameAndType        #49:#74       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #74 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #75 = Methodref          #2.#76        // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #76 = NameAndType        #49:#77       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #77 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #78 = Methodref          #2.#79        // java/io/Writer.close:()V\n+   #79 = NameAndType        #80:#6        // close:()V\n+   #80 = Utf8               close\n+   #81 = Methodref          #2.#82        // java/io/Writer.flush:()V\n+   #82 = NameAndType        #83:#6        // flush:()V\n+   #83 = Utf8               flush\n+   #84 = Methodref          #2.#85        // java/io/Writer.write:([CII)V\n+   #85 = NameAndType        #86:#87       // write:([CII)V\n+   #86 = Utf8               write\n+   #87 = Utf8               ([CII)V\n+   #88 = Methodref          #2.#89        // java/io/Writer.write:([C)V\n+   #89 = NameAndType        #86:#90       // write:([C)V\n+   #90 = Utf8               ([C)V\n+   #91 = Methodref          #2.#92        // java/io/Writer.write:(I)V\n+   #92 = NameAndType        #86:#93       // write:(I)V\n+   #93 = Utf8               (I)V\n+   #94 = Methodref          #2.#95        // java/io/Writer.write:(Ljava/lang/String;)V\n+   #95 = NameAndType        #86:#96       // write:(Ljava/lang/String;)V\n+   #96 = Utf8               (Ljava/lang/String;)V\n+   #97 = Methodref          #2.#98        // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #98 = NameAndType        #86:#99       // write:(Ljava/lang/String;II)V\n+   #99 = Utf8               (Ljava/lang/String;II)V\n+  #100 = Methodref          #14.#48       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+  #101 = Methodref          #14.#76       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #102 = Methodref          #14.#73       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #103 = Utf8               Signature\n+  #104 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n+  #105 = Utf8               (Ljava/util/Collection;)V\n+  #106 = Utf8               Code\n+  #107 = Utf8               LineNumberTable\n+  #108 = Utf8               LocalVariableTable\n+  #109 = Utf8               this\n+  #110 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n+  #111 = Utf8               LocalVariableTypeTable\n+  #112 = Utf8               StackMapTable\n+  #113 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+  #114 = Utf8               ([Ljava/io/Writer;)V\n+  #115 = Utf8               [Ljava/io/Writer;\n+  #116 = Class              #115          // \"[Ljava/io/Writer;\"\n+  #117 = Utf8               e\n+  #118 = Utf8               Ljava/io/IOException;\n+  #119 = Utf8               w\n+  #120 = Utf8               Ljava/io/Writer;\n+  #121 = Utf8               c\n+  #122 = Utf8               C\n+  #123 = Utf8               causeList\n+  #124 = Utf8               Ljava/util/List;\n+  #125 = Utf8               i\n+  #126 = Utf8               I\n+  #127 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n+  #128 = Utf8               Exceptions\n+  #129 = Utf8               csq\n+  #130 = Utf8               Ljava/lang/CharSequence;\n+  #131 = Class              #132          // java/lang/CharSequence\n+  #132 = Utf8               java/lang/CharSequence\n+  #133 = Utf8               start\n+  #134 = Utf8               end\n+  #135 = Utf8               cbuf\n+  #136 = Utf8               [C\n+  #137 = Utf8               off\n+  #138 = Utf8               len\n+  #139 = Class              #136          // \"[C\"\n+  #140 = Utf8               str\n+  #141 = Utf8               Ljava/lang/String;\n+  #142 = Class              #143          // java/lang/String\n+  #143 = Utf8               java/lang/String\n+  #144 = Utf8               (C)Ljava/lang/Appendable;\n+  #145 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #146 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #147 = Utf8               SourceFile\n+  #148 = Utf8               FilterCollectionWriter.java\n {\n   protected final java.util.Collection<java.io.Writer> EMPTY_WRITERS;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #36                          // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #104                         // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected final java.util.Collection<java.io.Writer> writers;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #36                          // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #104                         // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          24\n         23: aload_1\n-        24: putfield      #4                  // Field writers:Ljava/util/Collection;\n+        24: putfield      #19                 // Field writers:Ljava/util/Collection;\n         27: return\n       LineNumberTable:\n         line 63: 0\n         line 51: 4\n         line 64: 11\n         line 65: 27\n       LocalVariableTable:\n@@ -203,35 +203,35 @@\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n-    Signature: #48                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+    Signature: #113                         // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.io.Writer...);\n     descriptor: ([Ljava/io/Writer;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          27\n         23: aload_1\n-        24: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        27: putfield      #4                  // Field writers:Ljava/util/Collection;\n+        24: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        27: putfield      #19                 // Field writers:Ljava/util/Collection;\n         30: return\n       LineNumberTable:\n         line 72: 0\n         line 51: 4\n         line 73: 11\n         line 74: 30\n       LocalVariableTable:\n@@ -249,56 +249,56 @@\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore        4\n         21: aload         4\n-        23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          83\n         31: aload         4\n-        33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        38: checkcast     #11                 // class java/io/Writer\n+        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        38: checkcast     #2                  // class java/io/Writer\n         41: astore        5\n         43: aload         5\n         45: ifnull        77\n         48: aload         5\n         50: iload_1\n-        51: invokevirtual #12                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n+        51: invokevirtual #47                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n         54: pop\n         55: goto          77\n         58: astore        6\n         60: aload_2\n-        61: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        61: new           #53                 // class org/apache/commons/io/IOIndexedException\n         64: dup\n         65: iload_3\n         66: aload         6\n-        68: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        71: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        68: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        71: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         76: pop\n         77: iinc          3, 1\n         80: goto          21\n         83: aload_2\n-        84: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        84: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         89: ifne          101\n-        92: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        92: new           #67                 // class org/apache/commons/io/IOExceptionList\n         95: dup\n         96: aload_2\n-        97: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        97: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n        100: athrow\n        101: aload_0\n        102: areturn\n       Exception table:\n          from    to  target type\n             48    55    58   Class java/io/IOException\n       LineNumberTable:\n@@ -342,56 +342,56 @@\n       throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore        4\n         21: aload         4\n-        23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          83\n         31: aload         4\n-        33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        38: checkcast     #11                 // class java/io/Writer\n+        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        38: checkcast     #2                  // class java/io/Writer\n         41: astore        5\n         43: aload         5\n         45: ifnull        77\n         48: aload         5\n         50: aload_1\n-        51: invokevirtual #20                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        51: invokevirtual #72                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         54: pop\n         55: goto          77\n         58: astore        6\n         60: aload_2\n-        61: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        61: new           #53                 // class org/apache/commons/io/IOIndexedException\n         64: dup\n         65: iload_3\n         66: aload         6\n-        68: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        71: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        68: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        71: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         76: pop\n         77: iinc          3, 1\n         80: goto          21\n         83: aload_2\n-        84: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        84: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         89: ifne          101\n-        92: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        92: new           #67                 // class org/apache/commons/io/IOExceptionList\n         95: dup\n         96: aload_2\n-        97: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        97: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n        100: athrow\n        101: aload_0\n        102: areturn\n       Exception table:\n          from    to  target type\n             48    55    58   Class java/io/IOException\n       LineNumberTable:\n@@ -435,58 +435,58 @@\n       throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=9, args_size=4\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore        4\n          9: iconst_0\n         10: istore        5\n         12: aload_0\n-        13: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        16: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        13: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        16: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         21: astore        6\n         23: aload         6\n-        25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        25: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         30: ifeq          89\n         33: aload         6\n-        35: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        40: checkcast     #11                 // class java/io/Writer\n+        35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        40: checkcast     #2                  // class java/io/Writer\n         43: astore        7\n         45: aload         7\n         47: ifnull        83\n         50: aload         7\n         52: aload_1\n         53: iload_2\n         54: iload_3\n-        55: invokevirtual #21                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+        55: invokevirtual #75                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n         58: pop\n         59: goto          83\n         62: astore        8\n         64: aload         4\n-        66: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        66: new           #53                 // class org/apache/commons/io/IOIndexedException\n         69: dup\n         70: iload         5\n         72: aload         8\n-        74: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        77: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        74: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        77: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         82: pop\n         83: iinc          5, 1\n         86: goto          23\n         89: aload         4\n-        91: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        91: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         96: ifne          109\n-        99: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        99: new           #67                 // class org/apache/commons/io/IOExceptionList\n        102: dup\n        103: aload         4\n-       105: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+       105: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n        108: athrow\n        109: aload_0\n        110: areturn\n       Exception table:\n          from    to  target type\n             50    59    62   Class java/io/IOException\n       LineNumberTable:\n@@ -532,54 +532,54 @@\n       throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=1\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_2\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore_3\n         20: aload_3\n-        21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        21: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         26: ifeq          78\n         29: aload_3\n-        30: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        35: checkcast     #11                 // class java/io/Writer\n+        30: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        35: checkcast     #2                  // class java/io/Writer\n         38: astore        4\n         40: aload         4\n         42: ifnull        72\n         45: aload         4\n-        47: invokevirtual #22                 // Method java/io/Writer.close:()V\n+        47: invokevirtual #78                 // Method java/io/Writer.close:()V\n         50: goto          72\n         53: astore        5\n         55: aload_1\n-        56: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        56: new           #53                 // class org/apache/commons/io/IOIndexedException\n         59: dup\n         60: iload_2\n         61: aload         5\n-        63: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        66: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        63: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        66: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         71: pop\n         72: iinc          2, 1\n         75: goto          20\n         78: aload_1\n-        79: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        79: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         84: ifne          96\n-        87: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        87: new           #67                 // class org/apache/commons/io/IOExceptionList\n         90: dup\n         91: aload_1\n-        92: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        92: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n         95: athrow\n         96: return\n       Exception table:\n          from    to  target type\n             45    50    53   Class java/io/IOException\n       LineNumberTable:\n         line 139: 0\n@@ -621,54 +621,54 @@\n       throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=1\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_2\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore_3\n         20: aload_3\n-        21: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        21: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         26: ifeq          78\n         29: aload_3\n-        30: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        35: checkcast     #11                 // class java/io/Writer\n+        30: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        35: checkcast     #2                  // class java/io/Writer\n         38: astore        4\n         40: aload         4\n         42: ifnull        72\n         45: aload         4\n-        47: invokevirtual #23                 // Method java/io/Writer.flush:()V\n+        47: invokevirtual #81                 // Method java/io/Writer.flush:()V\n         50: goto          72\n         53: astore        5\n         55: aload_1\n-        56: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        56: new           #53                 // class org/apache/commons/io/IOIndexedException\n         59: dup\n         60: iload_2\n         61: aload         5\n-        63: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        66: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        63: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        66: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         71: pop\n         72: iinc          2, 1\n         75: goto          20\n         78: aload_1\n-        79: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        79: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         84: ifne          96\n-        87: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        87: new           #67                 // class org/apache/commons/io/IOExceptionList\n         90: dup\n         91: aload_1\n-        92: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        92: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n         95: athrow\n         96: return\n       Exception table:\n          from    to  target type\n             45    50    53   Class java/io/IOException\n       LineNumberTable:\n         line 164: 0\n@@ -710,57 +710,57 @@\n       throws java.io.IOException\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=9, args_size=4\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore        4\n          9: iconst_0\n         10: istore        5\n         12: aload_0\n-        13: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        16: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        13: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        16: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         21: astore        6\n         23: aload         6\n-        25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        25: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         30: ifeq          88\n         33: aload         6\n-        35: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        40: checkcast     #11                 // class java/io/Writer\n+        35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        40: checkcast     #2                  // class java/io/Writer\n         43: astore        7\n         45: aload         7\n         47: ifnull        82\n         50: aload         7\n         52: aload_1\n         53: iload_2\n         54: iload_3\n-        55: invokevirtual #24                 // Method java/io/Writer.write:([CII)V\n+        55: invokevirtual #84                 // Method java/io/Writer.write:([CII)V\n         58: goto          82\n         61: astore        8\n         63: aload         4\n-        65: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        65: new           #53                 // class org/apache/commons/io/IOIndexedException\n         68: dup\n         69: iload         5\n         71: aload         8\n-        73: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        76: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        73: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        76: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         81: pop\n         82: iinc          5, 1\n         85: goto          23\n         88: aload         4\n-        90: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        90: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         95: ifne          108\n-        98: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        98: new           #67                 // class org/apache/commons/io/IOExceptionList\n        101: dup\n        102: aload         4\n-       104: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+       104: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n        107: athrow\n        108: return\n       Exception table:\n          from    to  target type\n             50    58    61   Class java/io/IOException\n       LineNumberTable:\n         line 193: 0\n@@ -805,55 +805,55 @@\n       throws java.io.IOException\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore        4\n         21: aload         4\n-        23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          82\n         31: aload         4\n-        33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        38: checkcast     #11                 // class java/io/Writer\n+        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        38: checkcast     #2                  // class java/io/Writer\n         41: astore        5\n         43: aload         5\n         45: ifnull        76\n         48: aload         5\n         50: aload_1\n-        51: invokevirtual #25                 // Method java/io/Writer.write:([C)V\n+        51: invokevirtual #88                 // Method java/io/Writer.write:([C)V\n         54: goto          76\n         57: astore        6\n         59: aload_2\n-        60: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        60: new           #53                 // class org/apache/commons/io/IOIndexedException\n         63: dup\n         64: iload_3\n         65: aload         6\n-        67: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        70: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        67: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        70: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         75: pop\n         76: iinc          3, 1\n         79: goto          21\n         82: aload_2\n-        83: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        83: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         88: ifne          100\n-        91: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        91: new           #67                 // class org/apache/commons/io/IOExceptionList\n         94: dup\n         95: aload_2\n-        96: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        96: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n         99: athrow\n        100: return\n       Exception table:\n          from    to  target type\n             48    54    57   Class java/io/IOException\n       LineNumberTable:\n         line 212: 0\n@@ -896,55 +896,55 @@\n       throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore        4\n         21: aload         4\n-        23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          82\n         31: aload         4\n-        33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        38: checkcast     #11                 // class java/io/Writer\n+        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        38: checkcast     #2                  // class java/io/Writer\n         41: astore        5\n         43: aload         5\n         45: ifnull        76\n         48: aload         5\n         50: iload_1\n-        51: invokevirtual #26                 // Method java/io/Writer.write:(I)V\n+        51: invokevirtual #91                 // Method java/io/Writer.write:(I)V\n         54: goto          76\n         57: astore        6\n         59: aload_2\n-        60: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        60: new           #53                 // class org/apache/commons/io/IOIndexedException\n         63: dup\n         64: iload_3\n         65: aload         6\n-        67: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        70: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        67: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        70: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         75: pop\n         76: iinc          3, 1\n         79: goto          21\n         82: aload_2\n-        83: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        83: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         88: ifne          100\n-        91: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        91: new           #67                 // class org/apache/commons/io/IOExceptionList\n         94: dup\n         95: aload_2\n-        96: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        96: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n         99: athrow\n        100: return\n       Exception table:\n          from    to  target type\n             48    54    57   Class java/io/IOException\n       LineNumberTable:\n         line 236: 0\n@@ -987,55 +987,55 @@\n       throws java.io.IOException\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        14: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        11: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        14: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         19: astore        4\n         21: aload         4\n-        23: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         28: ifeq          82\n         31: aload         4\n-        33: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        38: checkcast     #11                 // class java/io/Writer\n+        33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        38: checkcast     #2                  // class java/io/Writer\n         41: astore        5\n         43: aload         5\n         45: ifnull        76\n         48: aload         5\n         50: aload_1\n-        51: invokevirtual #27                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        51: invokevirtual #94                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n         54: goto          76\n         57: astore        6\n         59: aload_2\n-        60: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        60: new           #53                 // class org/apache/commons/io/IOIndexedException\n         63: dup\n         64: iload_3\n         65: aload         6\n-        67: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        70: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        67: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        70: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         75: pop\n         76: iinc          3, 1\n         79: goto          21\n         82: aload_2\n-        83: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        83: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         88: ifne          100\n-        91: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        91: new           #67                 // class org/apache/commons/io/IOExceptionList\n         94: dup\n         95: aload_2\n-        96: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+        96: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n         99: athrow\n        100: return\n       Exception table:\n          from    to  target type\n             48    54    57   Class java/io/IOException\n       LineNumberTable:\n         line 255: 0\n@@ -1078,57 +1078,57 @@\n       throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=9, args_size=4\n-         0: new           #6                  // class java/util/ArrayList\n+         0: new           #28                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore        4\n          9: iconst_0\n         10: istore        5\n         12: aload_0\n-        13: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        16: invokeinterface #8,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        13: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        16: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         21: astore        6\n         23: aload         6\n-        25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        25: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         30: ifeq          88\n         33: aload         6\n-        35: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        40: checkcast     #11                 // class java/io/Writer\n+        35: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        40: checkcast     #2                  // class java/io/Writer\n         43: astore        7\n         45: aload         7\n         47: ifnull        82\n         50: aload         7\n         52: aload_1\n         53: iload_2\n         54: iload_3\n-        55: invokevirtual #28                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+        55: invokevirtual #97                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         58: goto          82\n         61: astore        8\n         63: aload         4\n-        65: new           #14                 // class org/apache/commons/io/IOIndexedException\n+        65: new           #53                 // class org/apache/commons/io/IOIndexedException\n         68: dup\n         69: iload         5\n         71: aload         8\n-        73: invokespecial #15                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        76: invokeinterface #16,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        73: invokespecial #55                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        76: invokeinterface #58,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         81: pop\n         82: iinc          5, 1\n         85: goto          23\n         88: aload         4\n-        90: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        90: invokeinterface #64,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         95: ifne          108\n-        98: new           #18                 // class org/apache/commons/io/IOExceptionList\n+        98: new           #67                 // class org/apache/commons/io/IOExceptionList\n        101: dup\n        102: aload         4\n-       104: invokespecial #19                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n+       104: invokespecial #69                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/util/List;)V\n        107: athrow\n        108: return\n       Exception table:\n          from    to  target type\n             50    58    61   Class java/io/IOException\n       LineNumberTable:\n         line 284: 0\n@@ -1175,15 +1175,15 @@\n   public java.lang.Appendable append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #29                 // Method append:(C)Ljava/io/Writer;\n+         2: invokevirtual #100                // Method append:(C)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n@@ -1194,15 +1194,15 @@\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #30                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #101                // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n@@ -1211,15 +1211,15 @@\n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #31                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #102                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n"}]}
