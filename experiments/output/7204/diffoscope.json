{"diffoscope-json-version": 1, "source1": "first/AbstractFloatingPointBitsFromCharArray.class", "source2": "second/AbstractFloatingPointBitsFromCharArray.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 953ed65018f20103805bb8acd4086f6fa264a8851a601bf14fac3b4b8c320f20\n+  SHA-256 checksum cf3a74668e53e6efbc19a774de2cb6efe76bd38b285781ee353d563b859e1582\n   Compiled from \"AbstractFloatingPointBitsFromCharArray.java\"\n abstract class com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharArray extends com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser\n   minor version: 0\n   major version: 52\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n   this_class: #29                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n   super_class: #10                        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #10.#95       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n-    #2 = Methodref          #29.#96       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.isDigit:(C)Z\n+    #1 = Methodref          #10.#94       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n+    #2 = Methodref          #29.#95       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.isDigit:(C)Z\n     #3 = Long               10l\n     #5 = Long               48l\n-    #7 = Methodref          #29.#97       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.tryToParseEightDigits:([CI)I\n+    #7 = Methodref          #29.#96       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.tryToParseEightDigits:([CI)I\n     #8 = Long               100000000l\n-   #10 = Class              #98           // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-   #11 = Methodref          #29.#99       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.skipWhitespace:([CII)I\n+   #10 = Class              #97           // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+   #11 = Methodref          #29.#98       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.skipWhitespace:([CII)I\n    #12 = Long               -1l\n    #14 = Long               1000000000000000000l\n-   #16 = Methodref          #100.#101     // java/lang/Long.compareUnsigned:(JJ)I\n-   #17 = Methodref          #29.#102      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.valueOfFloatLiteral:([CIIZJIZI)J\n-   #18 = Methodref          #29.#103      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseNaN:([CII)J\n-   #19 = Methodref          #29.#104      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseInfinity:([CIIZ)J\n-   #20 = Methodref          #29.#105      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseHexFloatLiteral:([CIIIZ)J\n-   #21 = Methodref          #29.#106      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseDecFloatLiteral:([CIIIZZ)J\n-   #22 = Fieldref           #10.#107      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n-   #23 = Methodref          #108.#109     // java/lang/Math.min:(II)I\n-   #24 = Methodref          #29.#110      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.valueOfHexLiteral:([CIIZJIZI)J\n-   #25 = Methodref          #29.#111      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.negativeInfinity:()J\n-   #26 = Methodref          #29.#112      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.positiveInfinity:()J\n-   #27 = Methodref          #29.#113      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.nan:()J\n-   #28 = Methodref          #114.#115     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:([CI)I\n-   #29 = Class              #116          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n+   #16 = Methodref          #99.#100      // java/lang/Long.compareUnsigned:(JJ)I\n+   #17 = Methodref          #29.#101      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.valueOfFloatLiteral:([CIIZJIZI)J\n+   #18 = Methodref          #29.#102      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseNaN:([CII)J\n+   #19 = Methodref          #29.#103      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseInfinity:([CIIZ)J\n+   #20 = Methodref          #29.#104      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseHexFloatLiteral:([CIIIZ)J\n+   #21 = Methodref          #29.#105      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.parseDecFloatLiteral:([CIIIZZ)J\n+   #22 = Fieldref           #10.#106      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n+   #23 = Methodref          #107.#108     // java/lang/Math.min:(II)I\n+   #24 = Methodref          #29.#109      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.valueOfHexLiteral:([CIIZJIZI)J\n+   #25 = Methodref          #29.#110      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.negativeInfinity:()J\n+   #26 = Methodref          #29.#111      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.positiveInfinity:()J\n+   #27 = Methodref          #29.#112      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.nan:()J\n+   #28 = Methodref          #113.#114     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:([CI)I\n+   #29 = Class              #115          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n    #30 = Utf8               <init>\n    #31 = Utf8               ()V\n    #32 = Utf8               Code\n    #33 = Utf8               LineNumberTable\n    #34 = Utf8               LocalVariableTable\n    #35 = Utf8               this\n    #36 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray;\n@@ -68,71 +68,70 @@\n    #63 = Utf8               significandStartIndex\n    #64 = Utf8               virtualIndexOfPoint\n    #65 = Utf8               illegal\n    #66 = Utf8               ch\n    #67 = Utf8               significandEndIndex\n    #68 = Utf8               expNumber\n    #69 = Utf8               skipCountInTruncatedDigits\n-   #70 = Class              #116          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n-   #71 = Class              #45           // \"[C\"\n-   #72 = Utf8               parseFloatingPointLiteral\n-   #73 = Utf8               ([CII)J\n-   #74 = Utf8               offset\n-   #75 = Utf8               length\n-   #76 = Utf8               parseHexFloatLiteral\n-   #77 = Utf8               ([CIIIZ)J\n-   #78 = Utf8               hexValue\n-   #79 = Utf8               hasExponent\n-   #80 = Utf8               parseInfinity\n-   #81 = Utf8               ([CIIZ)J\n-   #82 = Utf8               negative\n-   #83 = Utf8               parseNaN\n-   #84 = Utf8               tryToParseEightDigits\n-   #85 = Utf8               ([CI)I\n-   #86 = Utf8               nan\n-   #87 = Utf8               ()J\n-   #88 = Utf8               negativeInfinity\n-   #89 = Utf8               positiveInfinity\n-   #90 = Utf8               valueOfFloatLiteral\n-   #91 = Utf8               ([CIIZJIZI)J\n-   #92 = Utf8               valueOfHexLiteral\n-   #93 = Utf8               SourceFile\n-   #94 = Utf8               AbstractFloatingPointBitsFromCharArray.java\n-   #95 = NameAndType        #30:#31       // \"<init>\":()V\n-   #96 = NameAndType        #37:#38       // isDigit:(C)Z\n-   #97 = NameAndType        #84:#85       // tryToParseEightDigits:([CI)I\n-   #98 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-   #99 = NameAndType        #42:#43       // skipWhitespace:([CII)I\n-  #100 = Class              #117          // java/lang/Long\n-  #101 = NameAndType        #118:#119     // compareUnsigned:(JJ)I\n-  #102 = NameAndType        #90:#91       // valueOfFloatLiteral:([CIIZJIZI)J\n-  #103 = NameAndType        #83:#73       // parseNaN:([CII)J\n-  #104 = NameAndType        #80:#81       // parseInfinity:([CIIZ)J\n-  #105 = NameAndType        #76:#77       // parseHexFloatLiteral:([CIIIZ)J\n-  #106 = NameAndType        #49:#50       // parseDecFloatLiteral:([CIIIZZ)J\n-  #107 = NameAndType        #120:#121     // CHAR_TO_HEX_MAP:[B\n-  #108 = Class              #122          // java/lang/Math\n-  #109 = NameAndType        #123:#124     // min:(II)I\n-  #110 = NameAndType        #92:#91       // valueOfHexLiteral:([CIIZJIZI)J\n-  #111 = NameAndType        #88:#87       // negativeInfinity:()J\n-  #112 = NameAndType        #89:#87       // positiveInfinity:()J\n-  #113 = NameAndType        #86:#87       // nan:()J\n-  #114 = Class              #125          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #115 = NameAndType        #126:#85      // tryToParseEightDigitsUtf16:([CI)I\n-  #116 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n-  #117 = Utf8               java/lang/Long\n-  #118 = Utf8               compareUnsigned\n-  #119 = Utf8               (JJ)I\n-  #120 = Utf8               CHAR_TO_HEX_MAP\n-  #121 = Utf8               [B\n-  #122 = Utf8               java/lang/Math\n-  #123 = Utf8               min\n-  #124 = Utf8               (II)I\n-  #125 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #126 = Utf8               tryToParseEightDigitsUtf16\n+   #70 = Class              #45           // \"[C\"\n+   #71 = Utf8               parseFloatingPointLiteral\n+   #72 = Utf8               ([CII)J\n+   #73 = Utf8               offset\n+   #74 = Utf8               length\n+   #75 = Utf8               parseHexFloatLiteral\n+   #76 = Utf8               ([CIIIZ)J\n+   #77 = Utf8               hexValue\n+   #78 = Utf8               hasExponent\n+   #79 = Utf8               parseInfinity\n+   #80 = Utf8               ([CIIZ)J\n+   #81 = Utf8               negative\n+   #82 = Utf8               parseNaN\n+   #83 = Utf8               tryToParseEightDigits\n+   #84 = Utf8               ([CI)I\n+   #85 = Utf8               nan\n+   #86 = Utf8               ()J\n+   #87 = Utf8               negativeInfinity\n+   #88 = Utf8               positiveInfinity\n+   #89 = Utf8               valueOfFloatLiteral\n+   #90 = Utf8               ([CIIZJIZI)J\n+   #91 = Utf8               valueOfHexLiteral\n+   #92 = Utf8               SourceFile\n+   #93 = Utf8               AbstractFloatingPointBitsFromCharArray.java\n+   #94 = NameAndType        #30:#31       // \"<init>\":()V\n+   #95 = NameAndType        #37:#38       // isDigit:(C)Z\n+   #96 = NameAndType        #83:#84       // tryToParseEightDigits:([CI)I\n+   #97 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+   #98 = NameAndType        #42:#43       // skipWhitespace:([CII)I\n+   #99 = Class              #116          // java/lang/Long\n+  #100 = NameAndType        #117:#118     // compareUnsigned:(JJ)I\n+  #101 = NameAndType        #89:#90       // valueOfFloatLiteral:([CIIZJIZI)J\n+  #102 = NameAndType        #82:#72       // parseNaN:([CII)J\n+  #103 = NameAndType        #79:#80       // parseInfinity:([CIIZ)J\n+  #104 = NameAndType        #75:#76       // parseHexFloatLiteral:([CIIIZ)J\n+  #105 = NameAndType        #49:#50       // parseDecFloatLiteral:([CIIIZZ)J\n+  #106 = NameAndType        #119:#120     // CHAR_TO_HEX_MAP:[B\n+  #107 = Class              #121          // java/lang/Math\n+  #108 = NameAndType        #122:#123     // min:(II)I\n+  #109 = NameAndType        #91:#90       // valueOfHexLiteral:([CIIZJIZI)J\n+  #110 = NameAndType        #87:#86       // negativeInfinity:()J\n+  #111 = NameAndType        #88:#86       // positiveInfinity:()J\n+  #112 = NameAndType        #85:#86       // nan:()J\n+  #113 = Class              #124          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+  #114 = NameAndType        #125:#84      // tryToParseEightDigitsUtf16:([CI)I\n+  #115 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n+  #116 = Utf8               java/lang/Long\n+  #117 = Utf8               compareUnsigned\n+  #118 = Utf8               (JJ)I\n+  #119 = Utf8               CHAR_TO_HEX_MAP\n+  #120 = Utf8               [B\n+  #121 = Utf8               java/lang/Math\n+  #122 = Utf8               min\n+  #123 = Utf8               (II)I\n+  #124 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+  #125 = Utf8               tryToParseEightDigitsUtf16\n {\n   com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharArray();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -782,16 +781,16 @@\n         line 210: 47\n         line 211: 61\n         line 212: 73\n         line 213: 93\n         line 214: 98\n         line 220: 102\n         line 221: 109\n-        line 222: 122\n-        line 223: 136\n+        line 222: 116\n+        line 223: 128\n         line 221: 139\n         line 228: 140\n         line 229: 154\n         line 230: 159\n         line 231: 179\n         line 232: 193\n         line 236: 208\n"}]}
