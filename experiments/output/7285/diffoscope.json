{"diffoscope-json-version": 1, "source1": "first/WriterBasedJsonGenerator.class", "source2": "second/WriterBasedJsonGenerator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,186 +1,186 @@\n-  SHA-256 checksum da463cdcb05514fc27ed4686238814b80311e865c89c067513cde06625268e37\n+  SHA-256 checksum 7fbda2d621f7cfae669c7f6dc9d648e004b4b82d0beef5c747703887d4213732\n   Compiled from \"WriterBasedJsonGenerator.java\"\n public class com.fasterxml.jackson.core.json.WriterBasedJsonGenerator extends com.fasterxml.jackson.core.json.JsonGeneratorImpl\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #72                         // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n   super_class: #169                       // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n   interfaces: 0, fields: 12, methods: 79, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #72.#402      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgWriteHexUppercase:Z\n-    #2 = Fieldref           #72.#403      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.HEX_CHARS_UPPER:[C\n-    #3 = Fieldref           #72.#404      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.HEX_CHARS_LOWER:[C\n-    #4 = Class              #405          // com/fasterxml/jackson/core/JsonFactory\n-    #5 = Methodref          #72.#406      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;C)V\n-    #6 = Methodref          #169.#407     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-    #7 = Fieldref           #72.#408      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writer:Ljava/io/Writer;\n-    #8 = Methodref          #409.#410     // com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer:()[C\n-    #9 = Fieldref           #72.#411      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputBuffer:[C\n-   #10 = Fieldref           #72.#412      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputEnd:I\n-   #11 = Fieldref           #72.#413      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._quoteChar:C\n-   #12 = Methodref          #414.#415     // com/fasterxml/jackson/core/io/CharTypes.get7BitOutputEscapes:(I)[I\n-   #13 = Fieldref           #72.#416      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputEscapes:[I\n-   #14 = Fieldref           #72.#417      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputTail:I\n-   #15 = Fieldref           #72.#418      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputHead:I\n-   #16 = Methodref          #419.#420     // java/lang/Math.max:(II)I\n-   #17 = Fieldref           #72.#421      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #18 = Methodref          #19.#422      // com/fasterxml/jackson/core/json/JsonWriteContext.writeFieldName:(Ljava/lang/String;)I\n-   #19 = Class              #423          // com/fasterxml/jackson/core/json/JsonWriteContext\n-   #20 = String             #424          // Can not write a field name, expecting a value\n-   #21 = Methodref          #72.#425      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportError:(Ljava/lang/String;)V\n-   #22 = Methodref          #72.#426      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldName:(Ljava/lang/String;Z)V\n-   #23 = InterfaceMethodref #427.#428     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #24 = Methodref          #72.#429      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n-   #25 = Fieldref           #72.#430      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-   #26 = Methodref          #72.#431      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writePPFieldName:(Ljava/lang/String;Z)V\n-   #27 = Methodref          #72.#432      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._flushBuffer:()V\n-   #28 = Fieldref           #72.#433      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgUnqNames:Z\n-   #29 = Methodref          #72.#434      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString:(Ljava/lang/String;)V\n-   #30 = Methodref          #72.#435      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n-   #31 = InterfaceMethodref #427.#436     // com/fasterxml/jackson/core/SerializableString.asQuotedChars:()[C\n-   #32 = Methodref          #72.#437      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRaw:([CII)V\n-   #33 = InterfaceMethodref #427.#438     // com/fasterxml/jackson/core/SerializableString.appendQuoted:([CI)I\n-   #34 = Methodref          #72.#439      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldNameTail:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-   #35 = String             #440          // start an array\n-   #36 = Methodref          #72.#441      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._verifyValueWrite:(Ljava/lang/String;)V\n-   #37 = Methodref          #19.#442      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #38 = InterfaceMethodref #443.#444     // com/fasterxml/jackson/core/PrettyPrinter.writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #39 = Methodref          #19.#445      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #40 = Methodref          #19.#446      // com/fasterxml/jackson/core/json/JsonWriteContext.inArray:()Z\n-   #41 = Class              #447          // java/lang/StringBuilder\n-   #42 = Methodref          #41.#448      // java/lang/StringBuilder.\"<init>\":()V\n-   #43 = String             #449          // Current context not Array but\n-   #44 = Methodref          #41.#450      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = Methodref          #19.#451      // com/fasterxml/jackson/core/json/JsonWriteContext.typeDesc:()Ljava/lang/String;\n-   #46 = Methodref          #41.#452      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #47 = Methodref          #19.#453      // com/fasterxml/jackson/core/json/JsonWriteContext.getEntryCount:()I\n-   #48 = InterfaceMethodref #443.#454     // com/fasterxml/jackson/core/PrettyPrinter.writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-   #49 = Methodref          #19.#455      // com/fasterxml/jackson/core/json/JsonWriteContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #50 = String             #456          // start an object\n-   #51 = Methodref          #19.#457      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #52 = InterfaceMethodref #443.#458     // com/fasterxml/jackson/core/PrettyPrinter.writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #53 = Methodref          #19.#459      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-   #54 = Methodref          #72.#460      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n-   #55 = Methodref          #19.#461      // com/fasterxml/jackson/core/json/JsonWriteContext.inObject:()Z\n-   #56 = String             #462          // Current context not Object but\n-   #57 = InterfaceMethodref #443.#463     // com/fasterxml/jackson/core/PrettyPrinter.writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-   #58 = InterfaceMethodref #443.#464     // com/fasterxml/jackson/core/PrettyPrinter.writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #59 = InterfaceMethodref #443.#465     // com/fasterxml/jackson/core/PrettyPrinter.beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #60 = Class              #466          // com/fasterxml/jackson/core/base/GeneratorBase\n-   #61 = String             #467          // write a string\n-   #62 = Methodref          #72.#468      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeNull:()V\n-   #63 = String             #469          // null reader\n-   #64 = Class              #470          // java/lang/Integer\n+    #1 = Fieldref           #72.#398      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgWriteHexUppercase:Z\n+    #2 = Fieldref           #72.#399      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.HEX_CHARS_UPPER:[C\n+    #3 = Fieldref           #72.#400      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.HEX_CHARS_LOWER:[C\n+    #4 = Class              #401          // com/fasterxml/jackson/core/JsonFactory\n+    #5 = Methodref          #72.#402      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;C)V\n+    #6 = Methodref          #169.#403     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+    #7 = Fieldref           #72.#404      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writer:Ljava/io/Writer;\n+    #8 = Methodref          #211.#405     // com/fasterxml/jackson/core/io/IOContext.allocConcatBuffer:()[C\n+    #9 = Fieldref           #72.#406      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputBuffer:[C\n+   #10 = Fieldref           #72.#407      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputEnd:I\n+   #11 = Fieldref           #72.#408      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._quoteChar:C\n+   #12 = Methodref          #409.#410     // com/fasterxml/jackson/core/io/CharTypes.get7BitOutputEscapes:(I)[I\n+   #13 = Fieldref           #72.#411      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputEscapes:[I\n+   #14 = Fieldref           #72.#412      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputTail:I\n+   #15 = Fieldref           #72.#413      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._outputHead:I\n+   #16 = Methodref          #414.#415     // java/lang/Math.max:(II)I\n+   #17 = Fieldref           #72.#416      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #18 = Methodref          #19.#417      // com/fasterxml/jackson/core/json/JsonWriteContext.writeFieldName:(Ljava/lang/String;)I\n+   #19 = Class              #418          // com/fasterxml/jackson/core/json/JsonWriteContext\n+   #20 = String             #419          // Can not write a field name, expecting a value\n+   #21 = Methodref          #72.#420      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportError:(Ljava/lang/String;)V\n+   #22 = Methodref          #72.#421      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldName:(Ljava/lang/String;Z)V\n+   #23 = InterfaceMethodref #229.#422     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+   #24 = Methodref          #72.#423      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n+   #25 = Fieldref           #72.#424      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #26 = Methodref          #72.#425      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writePPFieldName:(Ljava/lang/String;Z)V\n+   #27 = Methodref          #72.#426      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._flushBuffer:()V\n+   #28 = Fieldref           #72.#427      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgUnqNames:Z\n+   #29 = Methodref          #72.#428      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString:(Ljava/lang/String;)V\n+   #30 = Methodref          #72.#429      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n+   #31 = InterfaceMethodref #229.#430     // com/fasterxml/jackson/core/SerializableString.asQuotedChars:()[C\n+   #32 = Methodref          #72.#431      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRaw:([CII)V\n+   #33 = InterfaceMethodref #229.#432     // com/fasterxml/jackson/core/SerializableString.appendQuoted:([CI)I\n+   #34 = Methodref          #72.#433      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeFieldNameTail:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+   #35 = String             #434          // start an array\n+   #36 = Methodref          #72.#435      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._verifyValueWrite:(Ljava/lang/String;)V\n+   #37 = Methodref          #19.#436      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #38 = InterfaceMethodref #437.#438     // com/fasterxml/jackson/core/PrettyPrinter.writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #39 = Methodref          #19.#439      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #40 = Methodref          #19.#440      // com/fasterxml/jackson/core/json/JsonWriteContext.inArray:()Z\n+   #41 = Class              #441          // java/lang/StringBuilder\n+   #42 = Methodref          #41.#442      // java/lang/StringBuilder.\"<init>\":()V\n+   #43 = String             #443          // Current context not Array but\n+   #44 = Methodref          #41.#444      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #45 = Methodref          #19.#445      // com/fasterxml/jackson/core/json/JsonWriteContext.typeDesc:()Ljava/lang/String;\n+   #46 = Methodref          #41.#446      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #47 = Methodref          #19.#447      // com/fasterxml/jackson/core/json/JsonWriteContext.getEntryCount:()I\n+   #48 = InterfaceMethodref #437.#448     // com/fasterxml/jackson/core/PrettyPrinter.writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+   #49 = Methodref          #19.#449      // com/fasterxml/jackson/core/json/JsonWriteContext.clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #50 = String             #450          // start an object\n+   #51 = Methodref          #19.#451      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #52 = InterfaceMethodref #437.#452     // com/fasterxml/jackson/core/PrettyPrinter.writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #53 = Methodref          #19.#453      // com/fasterxml/jackson/core/json/JsonWriteContext.createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+   #54 = Methodref          #72.#454      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n+   #55 = Methodref          #19.#455      // com/fasterxml/jackson/core/json/JsonWriteContext.inObject:()Z\n+   #56 = String             #456          // Current context not Object but\n+   #57 = InterfaceMethodref #437.#457     // com/fasterxml/jackson/core/PrettyPrinter.writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+   #58 = InterfaceMethodref #437.#458     // com/fasterxml/jackson/core/PrettyPrinter.writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #59 = InterfaceMethodref #437.#459     // com/fasterxml/jackson/core/PrettyPrinter.beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #60 = Class              #460          // com/fasterxml/jackson/core/base/GeneratorBase\n+   #61 = String             #461          // write a string\n+   #62 = Methodref          #72.#462      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeNull:()V\n+   #63 = String             #463          // null reader\n+   #64 = Class              #464          // java/lang/Integer\n    #65 = Integer            2147483647\n-   #66 = Methodref          #72.#471      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._allocateCopyBuffer:()[C\n-   #67 = Methodref          #419.#472     // java/lang/Math.min:(II)I\n-   #68 = Methodref          #473.#474     // java/io/Reader.read:([CII)I\n-   #69 = Methodref          #72.#475      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString:([CII)V\n-   #70 = String             #476          // Didn\\'t read enough from reader\n-   #71 = Methodref          #72.#477      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString2:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-   #72 = Class              #478          // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n-   #73 = Methodref          #479.#480     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #74 = Methodref          #481.#482     // java/io/Writer.write:([CII)V\n-   #75 = Methodref          #72.#483      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportUnsupportedOperation:()V\n-   #76 = Methodref          #484.#485     // java/lang/String.length:()I\n-   #77 = Methodref          #484.#486     // java/lang/String.getChars:(II[CI)V\n-   #78 = Methodref          #72.#487      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRawLong:(Ljava/lang/String;)V\n-   #79 = Methodref          #72.#488      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForString:(Ljava/lang/String;II)V\n-   #80 = Methodref          #484.#489     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #81 = InterfaceMethodref #427.#490     // com/fasterxml/jackson/core/SerializableString.appendUnquoted:([CI)I\n-   #82 = Methodref          #72.#491      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRaw:(Ljava/lang/String;)V\n-   #83 = Methodref          #72.#492      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForCharArray:([CII)V\n-   #84 = Methodref          #72.#493      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForByteArray:([BII)V\n-   #85 = String             #494          // write a binary value\n-   #86 = Methodref          #72.#495      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-   #87 = Fieldref           #72.#496      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-   #88 = Methodref          #409.#497     // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n-   #89 = Methodref          #72.#498      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-   #90 = Methodref          #72.#499      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-   #91 = String             #500          // Too few bytes available: missing\n-   #92 = Methodref          #41.#501      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #93 = String             #502          //  bytes (out of\n-   #94 = String             #503          // )\n-   #95 = Methodref          #409.#504     // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n-   #96 = String             #505          // write a number\n-   #97 = Fieldref           #72.#506      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgNumbersAsStrings:Z\n-   #98 = Methodref          #72.#507      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedShort:(S)V\n-   #99 = Methodref          #508.#509     // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[CI)I\n-  #100 = Methodref          #72.#510      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedInt:(I)V\n-  #101 = Methodref          #72.#511      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedLong:(J)V\n-  #102 = Methodref          #508.#512     // com/fasterxml/jackson/core/io/NumberOutput.outputLong:(J[CI)I\n-  #103 = Methodref          #513.#452     // java/math/BigInteger.toString:()Ljava/lang/String;\n-  #104 = Methodref          #72.#514      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedRaw:(Ljava/lang/String;)V\n-  #105 = Methodref          #508.#515     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(D)Z\n-  #106 = Fieldref           #516.#517     // com/fasterxml/jackson/core/JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #107 = Methodref          #72.#518      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #108 = Fieldref           #516.#519     // com/fasterxml/jackson/core/JsonGenerator$Feature.USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #109 = Methodref          #508.#520     // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n-  #110 = Methodref          #72.#521      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeString:(Ljava/lang/String;)V\n-  #111 = Methodref          #508.#522     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(F)Z\n-  #112 = Methodref          #508.#523     // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n-  #113 = Methodref          #72.#524      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #114 = Methodref          #72.#525      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedRaw:([CII)V\n-  #115 = String             #526          // write a boolean value\n-  #116 = String             #527          // write a null\n-  #117 = Methodref          #19.#528      // com/fasterxml/jackson/core/json/JsonWriteContext.writeValue:()I\n-  #118 = Methodref          #72.#529      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._verifyPrettyValueWrite:(Ljava/lang/String;I)V\n-  #119 = Fieldref           #72.#530      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n-  #120 = Methodref          #72.#531      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportCantWriteValueExpectName:(Ljava/lang/String;)V\n-  #121 = Fieldref           #516.#532     // com/fasterxml/jackson/core/JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #122 = Methodref          #481.#533     // java/io/Writer.flush:()V\n-  #123 = Methodref          #169.#534     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.close:()V\n-  #124 = Fieldref           #516.#535     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #125 = Methodref          #72.#536      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #126 = Methodref          #537.#446     // com/fasterxml/jackson/core/JsonStreamContext.inArray:()Z\n-  #127 = Methodref          #72.#538      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeEndArray:()V\n-  #128 = Methodref          #537.#461     // com/fasterxml/jackson/core/JsonStreamContext.inObject:()Z\n-  #129 = Methodref          #72.#539      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeEndObject:()V\n-  #130 = Class              #540          // java/io/IOException\n-  #131 = Methodref          #409.#541     // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n-  #132 = Fieldref           #516.#542     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #133 = Methodref          #481.#534     // java/io/Writer.close:()V\n-  #134 = Class              #543          // java/lang/RuntimeException\n-  #135 = Methodref          #544.#545     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n-  #136 = Methodref          #72.#546      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._releaseBuffers:()V\n-  #137 = Methodref          #409.#547     // com/fasterxml/jackson/core/io/IOContext.releaseConcatBuffer:([C)V\n-  #138 = Fieldref           #72.#548      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._copyBuffer:[C\n-  #139 = Methodref          #409.#549     // com/fasterxml/jackson/core/io/IOContext.releaseNameCopyBuffer:([C)V\n-  #140 = Methodref          #72.#550      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeLongString:(Ljava/lang/String;)V\n-  #141 = Fieldref           #72.#551      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #142 = Methodref          #72.#552      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringCustom:(I)V\n-  #143 = Fieldref           #72.#553      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._maximumNonEscapedChar:I\n-  #144 = Methodref          #72.#554      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringASCII:(II)V\n-  #145 = Methodref          #72.#555      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString2:(I)V\n-  #146 = Methodref          #72.#556      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._prependOrWriteCharacterEscape:(CI)V\n-  #147 = Methodref          #72.#557      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegmentCustom:(I)V\n-  #148 = Methodref          #72.#558      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegmentASCII:(II)V\n-  #149 = Methodref          #72.#559      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegment:(I)V\n-  #150 = Methodref          #72.#560      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._prependOrWriteCharacterEscape:([CIICI)I\n-  #151 = Methodref          #72.#561      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringCustom:([CII)V\n-  #152 = Methodref          #72.#562      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringASCII:([CIII)V\n-  #153 = Methodref          #72.#563      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._appendCharacterEscape:(CI)V\n-  #154 = Class              #564          // com/fasterxml/jackson/core/io/CharacterEscapes\n+   #66 = Methodref          #72.#465      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._allocateCopyBuffer:()[C\n+   #67 = Methodref          #414.#466     // java/lang/Math.min:(II)I\n+   #68 = Methodref          #467.#468     // java/io/Reader.read:([CII)I\n+   #69 = Methodref          #72.#469      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString:([CII)V\n+   #70 = String             #470          // Didn\\'t read enough from reader\n+   #71 = Methodref          #72.#471      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString2:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+   #72 = Class              #472          // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n+   #73 = Methodref          #473.#474     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #74 = Methodref          #213.#475     // java/io/Writer.write:([CII)V\n+   #75 = Methodref          #72.#476      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportUnsupportedOperation:()V\n+   #76 = Methodref          #226.#477     // java/lang/String.length:()I\n+   #77 = Methodref          #226.#478     // java/lang/String.getChars:(II[CI)V\n+   #78 = Methodref          #72.#479      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRawLong:(Ljava/lang/String;)V\n+   #79 = Methodref          #72.#480      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForString:(Ljava/lang/String;II)V\n+   #80 = Methodref          #226.#481     // java/lang/String.substring:(II)Ljava/lang/String;\n+   #81 = InterfaceMethodref #229.#482     // com/fasterxml/jackson/core/SerializableString.appendUnquoted:([CI)I\n+   #82 = Methodref          #72.#483      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeRaw:(Ljava/lang/String;)V\n+   #83 = Methodref          #72.#484      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForCharArray:([CII)V\n+   #84 = Methodref          #72.#485      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._checkRangeBoundsForByteArray:([BII)V\n+   #85 = String             #486          // write a binary value\n+   #86 = Methodref          #72.#487      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+   #87 = Fieldref           #72.#488      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+   #88 = Methodref          #211.#489     // com/fasterxml/jackson/core/io/IOContext.allocBase64Buffer:()[B\n+   #89 = Methodref          #72.#490      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+   #90 = Methodref          #72.#491      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+   #91 = String             #492          // Too few bytes available: missing\n+   #92 = Methodref          #41.#493      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #93 = String             #494          //  bytes (out of\n+   #94 = String             #495          // )\n+   #95 = Methodref          #211.#496     // com/fasterxml/jackson/core/io/IOContext.releaseBase64Buffer:([B)V\n+   #96 = String             #497          // write a number\n+   #97 = Fieldref           #72.#498      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._cfgNumbersAsStrings:Z\n+   #98 = Methodref          #72.#499      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedShort:(S)V\n+   #99 = Methodref          #500.#501     // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[CI)I\n+  #100 = Methodref          #72.#502      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedInt:(I)V\n+  #101 = Methodref          #72.#503      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedLong:(J)V\n+  #102 = Methodref          #500.#504     // com/fasterxml/jackson/core/io/NumberOutput.outputLong:(J[CI)I\n+  #103 = Methodref          #505.#446     // java/math/BigInteger.toString:()Ljava/lang/String;\n+  #104 = Methodref          #72.#506      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedRaw:(Ljava/lang/String;)V\n+  #105 = Methodref          #500.#507     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(D)Z\n+  #106 = Fieldref           #508.#509     // com/fasterxml/jackson/core/JsonGenerator$Feature.QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #107 = Methodref          #72.#510      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #108 = Fieldref           #508.#511     // com/fasterxml/jackson/core/JsonGenerator$Feature.USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #109 = Methodref          #500.#512     // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n+  #110 = Methodref          #72.#513      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeString:(Ljava/lang/String;)V\n+  #111 = Methodref          #500.#514     // com/fasterxml/jackson/core/io/NumberOutput.notFinite:(F)Z\n+  #112 = Methodref          #500.#515     // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n+  #113 = Methodref          #72.#516      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #114 = Methodref          #72.#517      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeQuotedRaw:([CII)V\n+  #115 = String             #518          // write a boolean value\n+  #116 = String             #519          // write a null\n+  #117 = Methodref          #19.#520      // com/fasterxml/jackson/core/json/JsonWriteContext.writeValue:()I\n+  #118 = Methodref          #72.#521      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._verifyPrettyValueWrite:(Ljava/lang/String;I)V\n+  #119 = Fieldref           #72.#522      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n+  #120 = Methodref          #72.#523      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._reportCantWriteValueExpectName:(Ljava/lang/String;)V\n+  #121 = Fieldref           #508.#524     // com/fasterxml/jackson/core/JsonGenerator$Feature.FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #122 = Methodref          #213.#525     // java/io/Writer.flush:()V\n+  #123 = Methodref          #169.#526     // com/fasterxml/jackson/core/json/JsonGeneratorImpl.close:()V\n+  #124 = Fieldref           #508.#527     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #125 = Methodref          #72.#528      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #126 = Methodref          #333.#440     // com/fasterxml/jackson/core/JsonStreamContext.inArray:()Z\n+  #127 = Methodref          #72.#529      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeEndArray:()V\n+  #128 = Methodref          #333.#455     // com/fasterxml/jackson/core/JsonStreamContext.inObject:()Z\n+  #129 = Methodref          #72.#530      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.writeEndObject:()V\n+  #130 = Class              #531          // java/io/IOException\n+  #131 = Methodref          #211.#532     // com/fasterxml/jackson/core/io/IOContext.isResourceManaged:()Z\n+  #132 = Fieldref           #508.#533     // com/fasterxml/jackson/core/JsonGenerator$Feature.AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #133 = Methodref          #213.#526     // java/io/Writer.close:()V\n+  #134 = Class              #534          // java/lang/RuntimeException\n+  #135 = Methodref          #334.#535     // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+  #136 = Methodref          #72.#536      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._releaseBuffers:()V\n+  #137 = Methodref          #211.#537     // com/fasterxml/jackson/core/io/IOContext.releaseConcatBuffer:([C)V\n+  #138 = Fieldref           #72.#538      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._copyBuffer:[C\n+  #139 = Methodref          #211.#539     // com/fasterxml/jackson/core/io/IOContext.releaseNameCopyBuffer:([C)V\n+  #140 = Methodref          #72.#540      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeLongString:(Ljava/lang/String;)V\n+  #141 = Fieldref           #72.#541      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #142 = Methodref          #72.#542      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringCustom:(I)V\n+  #143 = Fieldref           #72.#543      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._maximumNonEscapedChar:I\n+  #144 = Methodref          #72.#544      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringASCII:(II)V\n+  #145 = Methodref          #72.#545      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeString2:(I)V\n+  #146 = Methodref          #72.#546      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._prependOrWriteCharacterEscape:(CI)V\n+  #147 = Methodref          #72.#547      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegmentCustom:(I)V\n+  #148 = Methodref          #72.#548      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegmentASCII:(II)V\n+  #149 = Methodref          #72.#549      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeSegment:(I)V\n+  #150 = Methodref          #72.#550      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._prependOrWriteCharacterEscape:([CIICI)I\n+  #151 = Methodref          #72.#551      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringCustom:([CII)V\n+  #152 = Methodref          #72.#552      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._writeStringASCII:([CIII)V\n+  #153 = Methodref          #72.#553      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._appendCharacterEscape:(CI)V\n+  #154 = Class              #554          // com/fasterxml/jackson/core/io/CharacterEscapes\n   #155 = Integer            65535\n-  #156 = Methodref          #154.#565     // com/fasterxml/jackson/core/io/CharacterEscapes.getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #157 = Fieldref           #72.#566      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._currentEscape:Lcom/fasterxml/jackson/core/SerializableString;\n-  #158 = Methodref          #567.#568     // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n-  #159 = Methodref          #567.#569     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(I[CI)I\n-  #160 = Methodref          #567.#570     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(II[CI)I\n-  #161 = Methodref          #72.#571      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._readMore:(Ljava/io/InputStream;[BIII)I\n-  #162 = Methodref          #572.#573     // java/io/InputStream.read:([BII)I\n-  #163 = Fieldref           #72.#574      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._entityBuffer:[C\n-  #164 = Methodref          #72.#575      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._allocateEntityBuffer:()[C\n-  #165 = Methodref          #72.#576      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.getHexChars:()[C\n-  #166 = Methodref          #481.#577     // java/io/Writer.write:(Ljava/lang/String;)V\n-  #167 = Methodref          #409.#578     // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n-  #168 = Methodref          #414.#579     // com/fasterxml/jackson/core/io/CharTypes.copyHexChars:(Z)[C\n-  #169 = Class              #580          // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n+  #156 = Methodref          #154.#555     // com/fasterxml/jackson/core/io/CharacterEscapes.getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #157 = Fieldref           #72.#556      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._currentEscape:Lcom/fasterxml/jackson/core/SerializableString;\n+  #158 = Methodref          #290.#557     // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n+  #159 = Methodref          #290.#558     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(I[CI)I\n+  #160 = Methodref          #290.#559     // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(II[CI)I\n+  #161 = Methodref          #72.#560      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._readMore:(Ljava/io/InputStream;[BIII)I\n+  #162 = Methodref          #291.#561     // java/io/InputStream.read:([BII)I\n+  #163 = Fieldref           #72.#562      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._entityBuffer:[C\n+  #164 = Methodref          #72.#563      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator._allocateEntityBuffer:()[C\n+  #165 = Methodref          #72.#564      // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.getHexChars:()[C\n+  #166 = Methodref          #213.#565     // java/io/Writer.write:(Ljava/lang/String;)V\n+  #167 = Methodref          #211.#566     // com/fasterxml/jackson/core/io/IOContext.allocNameCopyBuffer:(I)[C\n+  #168 = Methodref          #409.#567     // com/fasterxml/jackson/core/io/CharTypes.copyHexChars:(Z)[C\n+  #169 = Class              #568          // com/fasterxml/jackson/core/json/JsonGeneratorImpl\n   #170 = Utf8               SHORT_WRITE\n   #171 = Utf8               I\n   #172 = Utf8               ConstantValue\n   #173 = Integer            32\n   #174 = Utf8               HEX_CHARS_UPPER\n   #175 = Utf8               [C\n   #176 = Utf8               HEX_CHARS_LOWER\n@@ -214,508 +214,496 @@\n   #204 = Utf8               Lcom/fasterxml/jackson/core/ObjectCodec;\n   #205 = Utf8               w\n   #206 = Utf8               Deprecated\n   #207 = Utf8               RuntimeVisibleAnnotations\n   #208 = Utf8               Ljava/lang/Deprecated;\n   #209 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;C)V\n   #210 = Utf8               quoteChar\n-  #211 = Class              #478          // com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n-  #212 = Class              #581          // com/fasterxml/jackson/core/io/IOContext\n-  #213 = Class              #582          // com/fasterxml/jackson/core/ObjectCodec\n-  #214 = Class              #583          // java/io/Writer\n-  #215 = Utf8               getOutputTarget\n-  #216 = Utf8               ()Ljava/lang/Object;\n-  #217 = Utf8               getOutputBuffered\n-  #218 = Utf8               ()I\n-  #219 = Utf8               len\n-  #220 = Utf8               canWriteFormattedNumbers\n-  #221 = Utf8               ()Z\n-  #222 = Utf8               writeFieldName\n-  #223 = Utf8               (Ljava/lang/String;)V\n-  #224 = Utf8               name\n-  #225 = Utf8               Ljava/lang/String;\n-  #226 = Utf8               status\n-  #227 = Class              #584          // java/lang/String\n-  #228 = Utf8               Exceptions\n-  #229 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #230 = Class              #585          // com/fasterxml/jackson/core/SerializableString\n-  #231 = Utf8               _writeFieldName\n-  #232 = Utf8               (Ljava/lang/String;Z)V\n-  #233 = Utf8               commaBefore\n-  #234 = Utf8               Z\n-  #235 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;Z)V\n-  #236 = Utf8               ch\n-  #237 = Utf8               _writeFieldNameTail\n-  #238 = Utf8               quoted\n-  #239 = Utf8               writeStartArray\n-  #240 = Utf8               ()V\n-  #241 = Utf8               (Ljava/lang/Object;)V\n-  #242 = Utf8               currentValue\n-  #243 = Utf8               Ljava/lang/Object;\n-  #244 = Utf8               (Ljava/lang/Object;I)V\n-  #245 = Utf8               size\n-  #246 = Utf8               writeEndArray\n-  #247 = Utf8               writeStartObject\n-  #248 = Utf8               forValue\n-  #249 = Utf8               Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #250 = Class              #423          // com/fasterxml/jackson/core/json/JsonWriteContext\n-  #251 = Utf8               writeEndObject\n-  #252 = Utf8               _writePPFieldName\n-  #253 = Utf8               writeString\n-  #254 = Utf8               text\n-  #255 = Utf8               (Ljava/io/Reader;I)V\n-  #256 = Utf8               toReadNow\n-  #257 = Utf8               numRead\n-  #258 = Utf8               reader\n-  #259 = Utf8               Ljava/io/Reader;\n-  #260 = Utf8               toRead\n-  #261 = Utf8               buf\n-  #262 = Utf8               ([CII)V\n-  #263 = Utf8               offset\n-  #264 = Utf8               sstr\n-  #265 = Utf8               _writeString2\n-  #266 = Utf8               room\n-  #267 = Utf8               writeRawUTF8String\n-  #268 = Utf8               ([BII)V\n-  #269 = Utf8               [B\n-  #270 = Utf8               length\n-  #271 = Utf8               writeUTF8String\n-  #272 = Utf8               writeRaw\n-  #273 = Utf8               (Ljava/lang/String;II)V\n-  #274 = Utf8               cbuf\n-  #275 = Utf8               (C)V\n-  #276 = Utf8               c\n-  #277 = Utf8               writeRawLong\n-  #278 = Utf8               amount\n-  #279 = Utf8               writeBinary\n-  #280 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #281 = Utf8               b64variant\n-  #282 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #283 = Utf8               data\n-  #284 = Class              #586          // com/fasterxml/jackson/core/JsonGenerationException\n-  #285 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #286 = Utf8               bytes\n-  #287 = Utf8               missing\n-  #288 = Utf8               Ljava/io/InputStream;\n-  #289 = Utf8               dataLength\n-  #290 = Utf8               encodingBuffer\n-  #291 = Class              #269          // \"[B\"\n-  #292 = Class              #587          // com/fasterxml/jackson/core/Base64Variant\n-  #293 = Class              #588          // java/io/InputStream\n-  #294 = Class              #589          // java/lang/Throwable\n-  #295 = Utf8               writeNumber\n-  #296 = Utf8               (S)V\n-  #297 = Utf8               s\n-  #298 = Utf8               S\n-  #299 = Utf8               _writeQuotedShort\n-  #300 = Utf8               (I)V\n-  #301 = Utf8               i\n-  #302 = Utf8               _writeQuotedInt\n-  #303 = Utf8               (J)V\n-  #304 = Utf8               l\n-  #305 = Utf8               J\n-  #306 = Utf8               _writeQuotedLong\n-  #307 = Utf8               (Ljava/math/BigInteger;)V\n-  #308 = Utf8               value\n-  #309 = Utf8               Ljava/math/BigInteger;\n-  #310 = Utf8               (D)V\n-  #311 = Utf8               d\n-  #312 = Utf8               D\n-  #313 = Utf8               (F)V\n-  #314 = Utf8               f\n-  #315 = Utf8               F\n-  #316 = Utf8               (Ljava/math/BigDecimal;)V\n-  #317 = Utf8               Ljava/math/BigDecimal;\n-  #318 = Utf8               encodedValue\n-  #319 = Utf8               encodedValueBuffer\n-  #320 = Utf8               _writeQuotedRaw\n-  #321 = Utf8               writeBoolean\n-  #322 = Utf8               (Z)V\n-  #323 = Utf8               state\n-  #324 = Utf8               ptr\n-  #325 = Utf8               writeNull\n-  #326 = Utf8               _verifyValueWrite\n-  #327 = Utf8               typeMsg\n-  #328 = Utf8               flush\n-  #329 = Utf8               close\n-  #330 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #331 = Utf8               e\n-  #332 = Utf8               Ljava/io/IOException;\n-  #333 = Utf8               Ljava/lang/Exception;\n-  #334 = Utf8               flushFail\n-  #335 = Class              #540          // java/io/IOException\n-  #336 = Class              #590          // com/fasterxml/jackson/core/JsonStreamContext\n-  #337 = Class              #591          // java/lang/Exception\n-  #338 = Utf8               _releaseBuffers\n-  #339 = Utf8               _writeString\n-  #340 = Utf8               flushLen\n-  #341 = Utf8               end\n-  #342 = Utf8               escCodes\n-  #343 = Utf8               [I\n-  #344 = Utf8               escLen\n-  #345 = Class              #343          // \"[I\"\n-  #346 = Utf8               _writeLongString\n-  #347 = Utf8               max\n-  #348 = Utf8               segmentLen\n-  #349 = Utf8               textLen\n-  #350 = Utf8               _writeSegment\n-  #351 = Utf8               start\n-  #352 = Utf8               newAmount\n-  #353 = Utf8               _writeStringASCII\n-  #354 = Utf8               (II)V\n-  #355 = Utf8               maxNonEscaped\n-  #356 = Utf8               escLimit\n-  #357 = Utf8               escCode\n-  #358 = Utf8               _writeSegmentASCII\n-  #359 = Utf8               ([CIII)V\n-  #360 = Utf8               _writeStringCustom\n-  #361 = Utf8               customEscapes\n-  #362 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #363 = Class              #564          // com/fasterxml/jackson/core/io/CharacterEscapes\n-  #364 = Utf8               _writeSegmentCustom\n-  #365 = Utf8               _writeBinary\n-  #366 = Utf8               b24\n-  #367 = Utf8               input\n-  #368 = Utf8               inputPtr\n-  #369 = Utf8               inputEnd\n-  #370 = Utf8               safeInputEnd\n-  #371 = Utf8               safeOutputEnd\n-  #372 = Utf8               chunksBeforeLF\n-  #373 = Utf8               inputLeft\n-  #374 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-  #375 = Utf8               readBuffer\n-  #376 = Utf8               bytesLeft\n-  #377 = Utf8               lastFullOffset\n-  #378 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-  #379 = Utf8               bytesDone\n-  #380 = Utf8               _readMore\n-  #381 = Utf8               (Ljava/io/InputStream;[BIII)I\n-  #382 = Utf8               count\n-  #383 = Utf8               in\n-  #384 = Utf8               maxRead\n-  #385 = Utf8               _writeNull\n-  #386 = Utf8               _prependOrWriteCharacterEscape\n-  #387 = Utf8               (CI)V\n-  #388 = Utf8               hi\n-  #389 = Utf8               lo\n-  #390 = Utf8               HEX_CHARS\n-  #391 = Utf8               escape\n-  #392 = Utf8               ([CIICI)I\n-  #393 = Utf8               ent\n-  #394 = Utf8               buffer\n-  #395 = Utf8               _appendCharacterEscape\n-  #396 = Utf8               _allocateEntityBuffer\n-  #397 = Utf8               _allocateCopyBuffer\n-  #398 = Utf8               _flushBuffer\n-  #399 = Utf8               <clinit>\n-  #400 = Utf8               SourceFile\n-  #401 = Utf8               WriterBasedJsonGenerator.java\n-  #402 = NameAndType        #592:#234     // _cfgWriteHexUppercase:Z\n-  #403 = NameAndType        #174:#175     // HEX_CHARS_UPPER:[C\n-  #404 = NameAndType        #176:#175     // HEX_CHARS_LOWER:[C\n-  #405 = Utf8               com/fasterxml/jackson/core/JsonFactory\n-  #406 = NameAndType        #198:#209     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;C)V\n-  #407 = NameAndType        #198:#593     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-  #408 = NameAndType        #177:#178     // _writer:Ljava/io/Writer;\n-  #409 = Class              #581          // com/fasterxml/jackson/core/io/IOContext\n-  #410 = NameAndType        #594:#190     // allocConcatBuffer:()[C\n-  #411 = NameAndType        #181:#175     // _outputBuffer:[C\n-  #412 = NameAndType        #184:#171     // _outputEnd:I\n-  #413 = NameAndType        #179:#180     // _quoteChar:C\n-  #414 = Class              #595          // com/fasterxml/jackson/core/io/CharTypes\n-  #415 = NameAndType        #596:#597     // get7BitOutputEscapes:(I)[I\n-  #416 = NameAndType        #598:#343     // _outputEscapes:[I\n-  #417 = NameAndType        #183:#171     // _outputTail:I\n-  #418 = NameAndType        #182:#171     // _outputHead:I\n-  #419 = Class              #599          // java/lang/Math\n-  #420 = NameAndType        #347:#600     // max:(II)I\n-  #421 = NameAndType        #601:#249     // _writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #422 = NameAndType        #222:#602     // writeFieldName:(Ljava/lang/String;)I\n-  #423 = Utf8               com/fasterxml/jackson/core/json/JsonWriteContext\n-  #424 = Utf8               Can not write a field name, expecting a value\n-  #425 = NameAndType        #603:#223     // _reportError:(Ljava/lang/String;)V\n-  #426 = NameAndType        #231:#232     // _writeFieldName:(Ljava/lang/String;Z)V\n-  #427 = Class              #585          // com/fasterxml/jackson/core/SerializableString\n-  #428 = NameAndType        #604:#605     // getValue:()Ljava/lang/String;\n-  #429 = NameAndType        #231:#235     // _writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n-  #430 = NameAndType        #606:#607     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #431 = NameAndType        #252:#232     // _writePPFieldName:(Ljava/lang/String;Z)V\n-  #432 = NameAndType        #398:#240     // _flushBuffer:()V\n-  #433 = NameAndType        #608:#234     // _cfgUnqNames:Z\n-  #434 = NameAndType        #339:#223     // _writeString:(Ljava/lang/String;)V\n-  #435 = NameAndType        #252:#235     // _writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n-  #436 = NameAndType        #609:#190     // asQuotedChars:()[C\n-  #437 = NameAndType        #272:#262     // writeRaw:([CII)V\n-  #438 = NameAndType        #610:#611     // appendQuoted:([CI)I\n-  #439 = NameAndType        #237:#229     // _writeFieldNameTail:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #440 = Utf8               start an array\n-  #441 = NameAndType        #326:#223     // _verifyValueWrite:(Ljava/lang/String;)V\n-  #442 = NameAndType        #612:#613     // createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #443 = Class              #614          // com/fasterxml/jackson/core/PrettyPrinter\n-  #444 = NameAndType        #239:#615     // writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #445 = NameAndType        #612:#616     // createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #446 = NameAndType        #617:#221     // inArray:()Z\n-  #447 = Utf8               java/lang/StringBuilder\n-  #448 = NameAndType        #198:#240     // \"<init>\":()V\n-  #449 = Utf8               Current context not Array but\n-  #450 = NameAndType        #618:#619     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #451 = NameAndType        #620:#605     // typeDesc:()Ljava/lang/String;\n-  #452 = NameAndType        #621:#605     // toString:()Ljava/lang/String;\n-  #453 = NameAndType        #622:#218     // getEntryCount:()I\n-  #454 = NameAndType        #246:#623     // writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #455 = NameAndType        #624:#613     // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #456 = Utf8               start an object\n-  #457 = NameAndType        #625:#613     // createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #458 = NameAndType        #247:#615     // writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #459 = NameAndType        #625:#616     // createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #460 = NameAndType        #247:#241     // writeStartObject:(Ljava/lang/Object;)V\n-  #461 = NameAndType        #626:#221     // inObject:()Z\n-  #462 = Utf8               Current context not Object but\n-  #463 = NameAndType        #251:#623     // writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #464 = NameAndType        #627:#615     // writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #465 = NameAndType        #628:#615     // beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #466 = Utf8               com/fasterxml/jackson/core/base/GeneratorBase\n-  #467 = Utf8               write a string\n-  #468 = NameAndType        #385:#240     // _writeNull:()V\n-  #469 = Utf8               null reader\n-  #470 = Utf8               java/lang/Integer\n-  #471 = NameAndType        #397:#190     // _allocateCopyBuffer:()[C\n-  #472 = NameAndType        #629:#600     // min:(II)I\n-  #473 = Class              #630          // java/io/Reader\n-  #474 = NameAndType        #631:#632     // read:([CII)I\n-  #475 = NameAndType        #339:#262     // _writeString:([CII)V\n-  #476 = Utf8               Didn\\'t read enough from reader\n-  #477 = NameAndType        #265:#229     // _writeString2:(Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #478 = Utf8               com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n-  #479 = Class              #633          // java/lang/System\n-  #480 = NameAndType        #634:#635     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #481 = Class              #583          // java/io/Writer\n-  #482 = NameAndType        #636:#262     // write:([CII)V\n-  #483 = NameAndType        #637:#240     // _reportUnsupportedOperation:()V\n-  #484 = Class              #584          // java/lang/String\n-  #485 = NameAndType        #270:#218     // length:()I\n-  #486 = NameAndType        #638:#639     // getChars:(II[CI)V\n-  #487 = NameAndType        #277:#223     // writeRawLong:(Ljava/lang/String;)V\n-  #488 = NameAndType        #640:#273     // _checkRangeBoundsForString:(Ljava/lang/String;II)V\n-  #489 = NameAndType        #641:#642     // substring:(II)Ljava/lang/String;\n-  #490 = NameAndType        #643:#611     // appendUnquoted:([CI)I\n-  #491 = NameAndType        #272:#223     // writeRaw:(Ljava/lang/String;)V\n-  #492 = NameAndType        #644:#262     // _checkRangeBoundsForCharArray:([CII)V\n-  #493 = NameAndType        #645:#268     // _checkRangeBoundsForByteArray:([BII)V\n-  #494 = Utf8               write a binary value\n-  #495 = NameAndType        #365:#280     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #496 = NameAndType        #646:#201     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n-  #497 = NameAndType        #647:#648     // allocBase64Buffer:()[B\n-  #498 = NameAndType        #365:#378     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n-  #499 = NameAndType        #365:#374     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n-  #500 = Utf8               Too few bytes available: missing\n-  #501 = NameAndType        #618:#649     // append:(I)Ljava/lang/StringBuilder;\n-  #502 = Utf8                bytes (out of\n-  #503 = Utf8               )\n-  #504 = NameAndType        #650:#651     // releaseBase64Buffer:([B)V\n-  #505 = Utf8               write a number\n-  #506 = NameAndType        #652:#234     // _cfgNumbersAsStrings:Z\n-  #507 = NameAndType        #299:#296     // _writeQuotedShort:(S)V\n-  #508 = Class              #653          // com/fasterxml/jackson/core/io/NumberOutput\n-  #509 = NameAndType        #654:#655     // outputInt:(I[CI)I\n-  #510 = NameAndType        #302:#300     // _writeQuotedInt:(I)V\n-  #511 = NameAndType        #306:#303     // _writeQuotedLong:(J)V\n-  #512 = NameAndType        #656:#657     // outputLong:(J[CI)I\n-  #513 = Class              #658          // java/math/BigInteger\n-  #514 = NameAndType        #320:#223     // _writeQuotedRaw:(Ljava/lang/String;)V\n-  #515 = NameAndType        #659:#660     // notFinite:(D)Z\n-  #516 = Class              #662          // com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #517 = NameAndType        #665:#666     // QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #518 = NameAndType        #667:#668     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #519 = NameAndType        #669:#666     // USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #520 = NameAndType        #621:#670     // toString:(DZ)Ljava/lang/String;\n-  #521 = NameAndType        #253:#223     // writeString:(Ljava/lang/String;)V\n-  #522 = NameAndType        #659:#671     // notFinite:(F)Z\n-  #523 = NameAndType        #621:#672     // toString:(FZ)Ljava/lang/String;\n-  #524 = NameAndType        #673:#674     // _asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #525 = NameAndType        #320:#262     // _writeQuotedRaw:([CII)V\n-  #526 = Utf8               write a boolean value\n-  #527 = Utf8               write a null\n-  #528 = NameAndType        #675:#218     // writeValue:()I\n-  #529 = NameAndType        #676:#677     // _verifyPrettyValueWrite:(Ljava/lang/String;I)V\n-  #530 = NameAndType        #678:#187     // _rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n-  #531 = NameAndType        #679:#223     // _reportCantWriteValueExpectName:(Ljava/lang/String;)V\n-  #532 = NameAndType        #680:#666     // FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #533 = NameAndType        #328:#240     // flush:()V\n-  #534 = NameAndType        #329:#240     // close:()V\n-  #535 = NameAndType        #681:#666     // AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #536 = NameAndType        #682:#683     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #537 = Class              #590          // com/fasterxml/jackson/core/JsonStreamContext\n-  #538 = NameAndType        #246:#240     // writeEndArray:()V\n-  #539 = NameAndType        #251:#240     // writeEndObject:()V\n-  #540 = Utf8               java/io/IOException\n-  #541 = NameAndType        #684:#221     // isResourceManaged:()Z\n-  #542 = NameAndType        #685:#666     // AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #543 = Utf8               java/lang/RuntimeException\n-  #544 = Class              #591          // java/lang/Exception\n-  #545 = NameAndType        #686:#687     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #546 = NameAndType        #338:#240     // _releaseBuffers:()V\n-  #547 = NameAndType        #688:#689     // releaseConcatBuffer:([C)V\n-  #548 = NameAndType        #188:#175     // _copyBuffer:[C\n-  #549 = NameAndType        #690:#689     // releaseNameCopyBuffer:([C)V\n-  #550 = NameAndType        #346:#223     // _writeLongString:(Ljava/lang/String;)V\n-  #551 = NameAndType        #691:#362     // _characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #552 = NameAndType        #360:#300     // _writeStringCustom:(I)V\n-  #553 = NameAndType        #692:#171     // _maximumNonEscapedChar:I\n-  #554 = NameAndType        #353:#354     // _writeStringASCII:(II)V\n-  #555 = NameAndType        #265:#300     // _writeString2:(I)V\n-  #556 = NameAndType        #386:#387     // _prependOrWriteCharacterEscape:(CI)V\n-  #557 = NameAndType        #364:#300     // _writeSegmentCustom:(I)V\n-  #558 = NameAndType        #358:#354     // _writeSegmentASCII:(II)V\n-  #559 = NameAndType        #350:#300     // _writeSegment:(I)V\n-  #560 = NameAndType        #386:#392     // _prependOrWriteCharacterEscape:([CIICI)I\n-  #561 = NameAndType        #360:#262     // _writeStringCustom:([CII)V\n-  #562 = NameAndType        #353:#359     // _writeStringASCII:([CIII)V\n-  #563 = NameAndType        #395:#387     // _appendCharacterEscape:(CI)V\n-  #564 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n-  #565 = NameAndType        #693:#694     // getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #566 = NameAndType        #186:#187     // _currentEscape:Lcom/fasterxml/jackson/core/SerializableString;\n-  #567 = Class              #587          // com/fasterxml/jackson/core/Base64Variant\n-  #568 = NameAndType        #695:#218     // getMaxLineLength:()I\n-  #569 = NameAndType        #696:#655     // encodeBase64Chunk:(I[CI)I\n-  #570 = NameAndType        #697:#698     // encodeBase64Partial:(II[CI)I\n-  #571 = NameAndType        #380:#381     // _readMore:(Ljava/io/InputStream;[BIII)I\n-  #572 = Class              #588          // java/io/InputStream\n-  #573 = NameAndType        #631:#699     // read:([BII)I\n-  #574 = NameAndType        #185:#175     // _entityBuffer:[C\n-  #575 = NameAndType        #396:#190     // _allocateEntityBuffer:()[C\n-  #576 = NameAndType        #189:#190     // getHexChars:()[C\n-  #577 = NameAndType        #636:#223     // write:(Ljava/lang/String;)V\n-  #578 = NameAndType        #700:#701     // allocNameCopyBuffer:(I)[C\n-  #579 = NameAndType        #702:#703     // copyHexChars:(Z)[C\n-  #580 = Utf8               com/fasterxml/jackson/core/json/JsonGeneratorImpl\n-  #581 = Utf8               com/fasterxml/jackson/core/io/IOContext\n-  #582 = Utf8               com/fasterxml/jackson/core/ObjectCodec\n-  #583 = Utf8               java/io/Writer\n-  #584 = Utf8               java/lang/String\n-  #585 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #586 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n-  #587 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #588 = Utf8               java/io/InputStream\n-  #589 = Utf8               java/lang/Throwable\n-  #590 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n-  #591 = Utf8               java/lang/Exception\n-  #592 = Utf8               _cfgWriteHexUppercase\n-  #593 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n-  #594 = Utf8               allocConcatBuffer\n-  #595 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n-  #596 = Utf8               get7BitOutputEscapes\n-  #597 = Utf8               (I)[I\n-  #598 = Utf8               _outputEscapes\n-  #599 = Utf8               java/lang/Math\n-  #600 = Utf8               (II)I\n-  #601 = Utf8               _writeContext\n-  #602 = Utf8               (Ljava/lang/String;)I\n-  #603 = Utf8               _reportError\n-  #604 = Utf8               getValue\n-  #605 = Utf8               ()Ljava/lang/String;\n-  #606 = Utf8               _cfgPrettyPrinter\n-  #607 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #608 = Utf8               _cfgUnqNames\n-  #609 = Utf8               asQuotedChars\n-  #610 = Utf8               appendQuoted\n-  #611 = Utf8               ([CI)I\n-  #612 = Utf8               createChildArrayContext\n-  #613 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #614 = Utf8               com/fasterxml/jackson/core/PrettyPrinter\n-  #615 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #616 = Utf8               (Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n-  #617 = Utf8               inArray\n-  #618 = Utf8               append\n-  #619 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #620 = Utf8               typeDesc\n-  #621 = Utf8               toString\n-  #622 = Utf8               getEntryCount\n-  #623 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n-  #624 = Utf8               clearAndGetParent\n-  #625 = Utf8               createChildObjectContext\n-  #626 = Utf8               inObject\n-  #627 = Utf8               writeObjectEntrySeparator\n-  #628 = Utf8               beforeObjectEntries\n-  #629 = Utf8               min\n-  #630 = Utf8               java/io/Reader\n-  #631 = Utf8               read\n-  #632 = Utf8               ([CII)I\n-  #633 = Utf8               java/lang/System\n-  #634 = Utf8               arraycopy\n-  #635 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #636 = Utf8               write\n-  #637 = Utf8               _reportUnsupportedOperation\n-  #638 = Utf8               getChars\n-  #639 = Utf8               (II[CI)V\n-  #640 = Utf8               _checkRangeBoundsForString\n-  #641 = Utf8               substring\n-  #642 = Utf8               (II)Ljava/lang/String;\n-  #643 = Utf8               appendUnquoted\n-  #644 = Utf8               _checkRangeBoundsForCharArray\n-  #645 = Utf8               _checkRangeBoundsForByteArray\n-  #646 = Utf8               _ioContext\n-  #647 = Utf8               allocBase64Buffer\n-  #648 = Utf8               ()[B\n-  #649 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #650 = Utf8               releaseBase64Buffer\n-  #651 = Utf8               ([B)V\n-  #652 = Utf8               _cfgNumbersAsStrings\n-  #653 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n-  #654 = Utf8               outputInt\n-  #655 = Utf8               (I[CI)I\n-  #656 = Utf8               outputLong\n-  #657 = Utf8               (J[CI)I\n-  #658 = Utf8               java/math/BigInteger\n-  #659 = Utf8               notFinite\n-  #660 = Utf8               (D)Z\n-  #661 = Class              #704          // com/fasterxml/jackson/core/JsonGenerator\n-  #662 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #663 = Utf8               Feature\n-  #664 = Utf8               InnerClasses\n-  #665 = Utf8               QUOTE_NON_NUMERIC_NUMBERS\n-  #666 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #667 = Utf8               isEnabled\n-  #668 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #669 = Utf8               USE_FAST_DOUBLE_WRITER\n-  #670 = Utf8               (DZ)Ljava/lang/String;\n-  #671 = Utf8               (F)Z\n-  #672 = Utf8               (FZ)Ljava/lang/String;\n-  #673 = Utf8               _asString\n-  #674 = Utf8               (Ljava/math/BigDecimal;)Ljava/lang/String;\n-  #675 = Utf8               writeValue\n-  #676 = Utf8               _verifyPrettyValueWrite\n-  #677 = Utf8               (Ljava/lang/String;I)V\n-  #678 = Utf8               _rootValueSeparator\n-  #679 = Utf8               _reportCantWriteValueExpectName\n-  #680 = Utf8               FLUSH_PASSED_TO_STREAM\n-  #681 = Utf8               AUTO_CLOSE_JSON_CONTENT\n-  #682 = Utf8               getOutputContext\n-  #683 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #684 = Utf8               isResourceManaged\n-  #685 = Utf8               AUTO_CLOSE_TARGET\n-  #686 = Utf8               addSuppressed\n-  #687 = Utf8               (Ljava/lang/Throwable;)V\n-  #688 = Utf8               releaseConcatBuffer\n-  #689 = Utf8               ([C)V\n-  #690 = Utf8               releaseNameCopyBuffer\n-  #691 = Utf8               _characterEscapes\n-  #692 = Utf8               _maximumNonEscapedChar\n-  #693 = Utf8               getEscapeSequence\n-  #694 = Utf8               (I)Lcom/fasterxml/jackson/core/SerializableString;\n-  #695 = Utf8               getMaxLineLength\n-  #696 = Utf8               encodeBase64Chunk\n-  #697 = Utf8               encodeBase64Partial\n-  #698 = Utf8               (II[CI)I\n-  #699 = Utf8               ([BII)I\n-  #700 = Utf8               allocNameCopyBuffer\n-  #701 = Utf8               (I)[C\n-  #702 = Utf8               copyHexChars\n-  #703 = Utf8               (Z)[C\n-  #704 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #211 = Class              #569          // com/fasterxml/jackson/core/io/IOContext\n+  #212 = Class              #570          // com/fasterxml/jackson/core/ObjectCodec\n+  #213 = Class              #571          // java/io/Writer\n+  #214 = Utf8               getOutputTarget\n+  #215 = Utf8               ()Ljava/lang/Object;\n+  #216 = Utf8               getOutputBuffered\n+  #217 = Utf8               ()I\n+  #218 = Utf8               len\n+  #219 = Utf8               canWriteFormattedNumbers\n+  #220 = Utf8               ()Z\n+  #221 = Utf8               writeFieldName\n+  #222 = Utf8               (Ljava/lang/String;)V\n+  #223 = Utf8               name\n+  #224 = Utf8               Ljava/lang/String;\n+  #225 = Utf8               status\n+  #226 = Class              #572          // java/lang/String\n+  #227 = Utf8               Exceptions\n+  #228 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #229 = Class              #573          // com/fasterxml/jackson/core/SerializableString\n+  #230 = Utf8               _writeFieldName\n+  #231 = Utf8               (Ljava/lang/String;Z)V\n+  #232 = Utf8               commaBefore\n+  #233 = Utf8               Z\n+  #234 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;Z)V\n+  #235 = Utf8               ch\n+  #236 = Utf8               _writeFieldNameTail\n+  #237 = Utf8               quoted\n+  #238 = Utf8               writeStartArray\n+  #239 = Utf8               ()V\n+  #240 = Utf8               (Ljava/lang/Object;)V\n+  #241 = Utf8               currentValue\n+  #242 = Utf8               Ljava/lang/Object;\n+  #243 = Utf8               (Ljava/lang/Object;I)V\n+  #244 = Utf8               size\n+  #245 = Utf8               writeEndArray\n+  #246 = Utf8               writeStartObject\n+  #247 = Utf8               forValue\n+  #248 = Utf8               Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #249 = Utf8               writeEndObject\n+  #250 = Utf8               _writePPFieldName\n+  #251 = Utf8               writeString\n+  #252 = Utf8               text\n+  #253 = Utf8               (Ljava/io/Reader;I)V\n+  #254 = Utf8               toReadNow\n+  #255 = Utf8               numRead\n+  #256 = Utf8               reader\n+  #257 = Utf8               Ljava/io/Reader;\n+  #258 = Utf8               toRead\n+  #259 = Utf8               buf\n+  #260 = Utf8               ([CII)V\n+  #261 = Utf8               offset\n+  #262 = Utf8               sstr\n+  #263 = Utf8               _writeString2\n+  #264 = Utf8               room\n+  #265 = Utf8               writeRawUTF8String\n+  #266 = Utf8               ([BII)V\n+  #267 = Utf8               [B\n+  #268 = Utf8               length\n+  #269 = Utf8               writeUTF8String\n+  #270 = Utf8               writeRaw\n+  #271 = Utf8               (Ljava/lang/String;II)V\n+  #272 = Utf8               cbuf\n+  #273 = Utf8               (C)V\n+  #274 = Utf8               c\n+  #275 = Utf8               writeRawLong\n+  #276 = Utf8               amount\n+  #277 = Utf8               writeBinary\n+  #278 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #279 = Utf8               b64variant\n+  #280 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #281 = Utf8               data\n+  #282 = Class              #574          // com/fasterxml/jackson/core/JsonGenerationException\n+  #283 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #284 = Utf8               bytes\n+  #285 = Utf8               missing\n+  #286 = Utf8               Ljava/io/InputStream;\n+  #287 = Utf8               dataLength\n+  #288 = Utf8               encodingBuffer\n+  #289 = Class              #267          // \"[B\"\n+  #290 = Class              #575          // com/fasterxml/jackson/core/Base64Variant\n+  #291 = Class              #576          // java/io/InputStream\n+  #292 = Class              #577          // java/lang/Throwable\n+  #293 = Utf8               writeNumber\n+  #294 = Utf8               (S)V\n+  #295 = Utf8               s\n+  #296 = Utf8               S\n+  #297 = Utf8               _writeQuotedShort\n+  #298 = Utf8               (I)V\n+  #299 = Utf8               i\n+  #300 = Utf8               _writeQuotedInt\n+  #301 = Utf8               (J)V\n+  #302 = Utf8               l\n+  #303 = Utf8               J\n+  #304 = Utf8               _writeQuotedLong\n+  #305 = Utf8               (Ljava/math/BigInteger;)V\n+  #306 = Utf8               value\n+  #307 = Utf8               Ljava/math/BigInteger;\n+  #308 = Utf8               (D)V\n+  #309 = Utf8               d\n+  #310 = Utf8               D\n+  #311 = Utf8               (F)V\n+  #312 = Utf8               f\n+  #313 = Utf8               F\n+  #314 = Utf8               (Ljava/math/BigDecimal;)V\n+  #315 = Utf8               Ljava/math/BigDecimal;\n+  #316 = Utf8               encodedValue\n+  #317 = Utf8               encodedValueBuffer\n+  #318 = Utf8               _writeQuotedRaw\n+  #319 = Utf8               writeBoolean\n+  #320 = Utf8               (Z)V\n+  #321 = Utf8               state\n+  #322 = Utf8               ptr\n+  #323 = Utf8               writeNull\n+  #324 = Utf8               _verifyValueWrite\n+  #325 = Utf8               typeMsg\n+  #326 = Utf8               flush\n+  #327 = Utf8               close\n+  #328 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #329 = Utf8               e\n+  #330 = Utf8               Ljava/io/IOException;\n+  #331 = Utf8               Ljava/lang/Exception;\n+  #332 = Utf8               flushFail\n+  #333 = Class              #578          // com/fasterxml/jackson/core/JsonStreamContext\n+  #334 = Class              #579          // java/lang/Exception\n+  #335 = Utf8               _releaseBuffers\n+  #336 = Utf8               _writeString\n+  #337 = Utf8               flushLen\n+  #338 = Utf8               end\n+  #339 = Utf8               escCodes\n+  #340 = Utf8               [I\n+  #341 = Utf8               escLen\n+  #342 = Class              #340          // \"[I\"\n+  #343 = Utf8               _writeLongString\n+  #344 = Utf8               max\n+  #345 = Utf8               segmentLen\n+  #346 = Utf8               textLen\n+  #347 = Utf8               _writeSegment\n+  #348 = Utf8               start\n+  #349 = Utf8               newAmount\n+  #350 = Utf8               _writeStringASCII\n+  #351 = Utf8               (II)V\n+  #352 = Utf8               maxNonEscaped\n+  #353 = Utf8               escLimit\n+  #354 = Utf8               escCode\n+  #355 = Utf8               _writeSegmentASCII\n+  #356 = Utf8               ([CIII)V\n+  #357 = Utf8               _writeStringCustom\n+  #358 = Utf8               customEscapes\n+  #359 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #360 = Utf8               _writeSegmentCustom\n+  #361 = Utf8               _writeBinary\n+  #362 = Utf8               b24\n+  #363 = Utf8               input\n+  #364 = Utf8               inputPtr\n+  #365 = Utf8               inputEnd\n+  #366 = Utf8               safeInputEnd\n+  #367 = Utf8               safeOutputEnd\n+  #368 = Utf8               chunksBeforeLF\n+  #369 = Utf8               inputLeft\n+  #370 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+  #371 = Utf8               readBuffer\n+  #372 = Utf8               bytesLeft\n+  #373 = Utf8               lastFullOffset\n+  #374 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+  #375 = Utf8               bytesDone\n+  #376 = Utf8               _readMore\n+  #377 = Utf8               (Ljava/io/InputStream;[BIII)I\n+  #378 = Utf8               count\n+  #379 = Utf8               in\n+  #380 = Utf8               maxRead\n+  #381 = Utf8               _writeNull\n+  #382 = Utf8               _prependOrWriteCharacterEscape\n+  #383 = Utf8               (CI)V\n+  #384 = Utf8               hi\n+  #385 = Utf8               lo\n+  #386 = Utf8               HEX_CHARS\n+  #387 = Utf8               escape\n+  #388 = Utf8               ([CIICI)I\n+  #389 = Utf8               ent\n+  #390 = Utf8               buffer\n+  #391 = Utf8               _appendCharacterEscape\n+  #392 = Utf8               _allocateEntityBuffer\n+  #393 = Utf8               _allocateCopyBuffer\n+  #394 = Utf8               _flushBuffer\n+  #395 = Utf8               <clinit>\n+  #396 = Utf8               SourceFile\n+  #397 = Utf8               WriterBasedJsonGenerator.java\n+  #398 = NameAndType        #580:#233     // _cfgWriteHexUppercase:Z\n+  #399 = NameAndType        #174:#175     // HEX_CHARS_UPPER:[C\n+  #400 = NameAndType        #176:#175     // HEX_CHARS_LOWER:[C\n+  #401 = Utf8               com/fasterxml/jackson/core/JsonFactory\n+  #402 = NameAndType        #198:#209     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;C)V\n+  #403 = NameAndType        #198:#581     // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+  #404 = NameAndType        #177:#178     // _writer:Ljava/io/Writer;\n+  #405 = NameAndType        #582:#190     // allocConcatBuffer:()[C\n+  #406 = NameAndType        #181:#175     // _outputBuffer:[C\n+  #407 = NameAndType        #184:#171     // _outputEnd:I\n+  #408 = NameAndType        #179:#180     // _quoteChar:C\n+  #409 = Class              #583          // com/fasterxml/jackson/core/io/CharTypes\n+  #410 = NameAndType        #584:#585     // get7BitOutputEscapes:(I)[I\n+  #411 = NameAndType        #586:#340     // _outputEscapes:[I\n+  #412 = NameAndType        #183:#171     // _outputTail:I\n+  #413 = NameAndType        #182:#171     // _outputHead:I\n+  #414 = Class              #587          // java/lang/Math\n+  #415 = NameAndType        #344:#588     // max:(II)I\n+  #416 = NameAndType        #589:#248     // _writeContext:Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #417 = NameAndType        #221:#590     // writeFieldName:(Ljava/lang/String;)I\n+  #418 = Utf8               com/fasterxml/jackson/core/json/JsonWriteContext\n+  #419 = Utf8               Can not write a field name, expecting a value\n+  #420 = NameAndType        #591:#222     // _reportError:(Ljava/lang/String;)V\n+  #421 = NameAndType        #230:#231     // _writeFieldName:(Ljava/lang/String;Z)V\n+  #422 = NameAndType        #592:#593     // getValue:()Ljava/lang/String;\n+  #423 = NameAndType        #230:#234     // _writeFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n+  #424 = NameAndType        #594:#595     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #425 = NameAndType        #250:#231     // _writePPFieldName:(Ljava/lang/String;Z)V\n+  #426 = NameAndType        #394:#239     // _flushBuffer:()V\n+  #427 = NameAndType        #596:#233     // _cfgUnqNames:Z\n+  #428 = NameAndType        #336:#222     // _writeString:(Ljava/lang/String;)V\n+  #429 = NameAndType        #250:#234     // _writePPFieldName:(Lcom/fasterxml/jackson/core/SerializableString;Z)V\n+  #430 = NameAndType        #597:#190     // asQuotedChars:()[C\n+  #431 = NameAndType        #270:#260     // writeRaw:([CII)V\n+  #432 = NameAndType        #598:#599     // appendQuoted:([CI)I\n+  #433 = NameAndType        #236:#228     // _writeFieldNameTail:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #434 = Utf8               start an array\n+  #435 = NameAndType        #324:#222     // _verifyValueWrite:(Ljava/lang/String;)V\n+  #436 = NameAndType        #600:#601     // createChildArrayContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #437 = Class              #602          // com/fasterxml/jackson/core/PrettyPrinter\n+  #438 = NameAndType        #238:#603     // writeStartArray:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #439 = NameAndType        #600:#604     // createChildArrayContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #440 = NameAndType        #605:#220     // inArray:()Z\n+  #441 = Utf8               java/lang/StringBuilder\n+  #442 = NameAndType        #198:#239     // \"<init>\":()V\n+  #443 = Utf8               Current context not Array but\n+  #444 = NameAndType        #606:#607     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #445 = NameAndType        #608:#593     // typeDesc:()Ljava/lang/String;\n+  #446 = NameAndType        #609:#593     // toString:()Ljava/lang/String;\n+  #447 = NameAndType        #610:#217     // getEntryCount:()I\n+  #448 = NameAndType        #245:#611     // writeEndArray:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #449 = NameAndType        #612:#601     // clearAndGetParent:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #450 = Utf8               start an object\n+  #451 = NameAndType        #613:#601     // createChildObjectContext:()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #452 = NameAndType        #246:#603     // writeStartObject:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #453 = NameAndType        #613:#604     // createChildObjectContext:(Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #454 = NameAndType        #246:#240     // writeStartObject:(Ljava/lang/Object;)V\n+  #455 = NameAndType        #614:#220     // inObject:()Z\n+  #456 = Utf8               Current context not Object but\n+  #457 = NameAndType        #249:#611     // writeEndObject:(Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #458 = NameAndType        #615:#603     // writeObjectEntrySeparator:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #459 = NameAndType        #616:#603     // beforeObjectEntries:(Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #460 = Utf8               com/fasterxml/jackson/core/base/GeneratorBase\n+  #461 = Utf8               write a string\n+  #462 = NameAndType        #381:#239     // _writeNull:()V\n+  #463 = Utf8               null reader\n+  #464 = Utf8               java/lang/Integer\n+  #465 = NameAndType        #393:#190     // _allocateCopyBuffer:()[C\n+  #466 = NameAndType        #617:#588     // min:(II)I\n+  #467 = Class              #618          // java/io/Reader\n+  #468 = NameAndType        #619:#620     // read:([CII)I\n+  #469 = NameAndType        #336:#260     // _writeString:([CII)V\n+  #470 = Utf8               Didn\\'t read enough from reader\n+  #471 = NameAndType        #263:#228     // _writeString2:(Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #472 = Utf8               com/fasterxml/jackson/core/json/WriterBasedJsonGenerator\n+  #473 = Class              #621          // java/lang/System\n+  #474 = NameAndType        #622:#623     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #475 = NameAndType        #624:#260     // write:([CII)V\n+  #476 = NameAndType        #625:#239     // _reportUnsupportedOperation:()V\n+  #477 = NameAndType        #268:#217     // length:()I\n+  #478 = NameAndType        #626:#627     // getChars:(II[CI)V\n+  #479 = NameAndType        #275:#222     // writeRawLong:(Ljava/lang/String;)V\n+  #480 = NameAndType        #628:#271     // _checkRangeBoundsForString:(Ljava/lang/String;II)V\n+  #481 = NameAndType        #629:#630     // substring:(II)Ljava/lang/String;\n+  #482 = NameAndType        #631:#599     // appendUnquoted:([CI)I\n+  #483 = NameAndType        #270:#222     // writeRaw:(Ljava/lang/String;)V\n+  #484 = NameAndType        #632:#260     // _checkRangeBoundsForCharArray:([CII)V\n+  #485 = NameAndType        #633:#266     // _checkRangeBoundsForByteArray:([BII)V\n+  #486 = Utf8               write a binary value\n+  #487 = NameAndType        #361:#278     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #488 = NameAndType        #634:#201     // _ioContext:Lcom/fasterxml/jackson/core/io/IOContext;\n+  #489 = NameAndType        #635:#636     // allocBase64Buffer:()[B\n+  #490 = NameAndType        #361:#374     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[B)I\n+  #491 = NameAndType        #361:#370     // _writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;[BI)I\n+  #492 = Utf8               Too few bytes available: missing\n+  #493 = NameAndType        #606:#637     // append:(I)Ljava/lang/StringBuilder;\n+  #494 = Utf8                bytes (out of\n+  #495 = Utf8               )\n+  #496 = NameAndType        #638:#639     // releaseBase64Buffer:([B)V\n+  #497 = Utf8               write a number\n+  #498 = NameAndType        #640:#233     // _cfgNumbersAsStrings:Z\n+  #499 = NameAndType        #297:#294     // _writeQuotedShort:(S)V\n+  #500 = Class              #641          // com/fasterxml/jackson/core/io/NumberOutput\n+  #501 = NameAndType        #642:#643     // outputInt:(I[CI)I\n+  #502 = NameAndType        #300:#298     // _writeQuotedInt:(I)V\n+  #503 = NameAndType        #304:#301     // _writeQuotedLong:(J)V\n+  #504 = NameAndType        #644:#645     // outputLong:(J[CI)I\n+  #505 = Class              #646          // java/math/BigInteger\n+  #506 = NameAndType        #318:#222     // _writeQuotedRaw:(Ljava/lang/String;)V\n+  #507 = NameAndType        #647:#648     // notFinite:(D)Z\n+  #508 = Class              #650          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #509 = NameAndType        #653:#654     // QUOTE_NON_NUMERIC_NUMBERS:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #510 = NameAndType        #655:#656     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #511 = NameAndType        #657:#654     // USE_FAST_DOUBLE_WRITER:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #512 = NameAndType        #609:#658     // toString:(DZ)Ljava/lang/String;\n+  #513 = NameAndType        #251:#222     // writeString:(Ljava/lang/String;)V\n+  #514 = NameAndType        #647:#659     // notFinite:(F)Z\n+  #515 = NameAndType        #609:#660     // toString:(FZ)Ljava/lang/String;\n+  #516 = NameAndType        #661:#662     // _asString:(Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #517 = NameAndType        #318:#260     // _writeQuotedRaw:([CII)V\n+  #518 = Utf8               write a boolean value\n+  #519 = Utf8               write a null\n+  #520 = NameAndType        #663:#217     // writeValue:()I\n+  #521 = NameAndType        #664:#665     // _verifyPrettyValueWrite:(Ljava/lang/String;I)V\n+  #522 = NameAndType        #666:#187     // _rootValueSeparator:Lcom/fasterxml/jackson/core/SerializableString;\n+  #523 = NameAndType        #667:#222     // _reportCantWriteValueExpectName:(Ljava/lang/String;)V\n+  #524 = NameAndType        #668:#654     // FLUSH_PASSED_TO_STREAM:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #525 = NameAndType        #326:#239     // flush:()V\n+  #526 = NameAndType        #327:#239     // close:()V\n+  #527 = NameAndType        #669:#654     // AUTO_CLOSE_JSON_CONTENT:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #528 = NameAndType        #670:#671     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #529 = NameAndType        #245:#239     // writeEndArray:()V\n+  #530 = NameAndType        #249:#239     // writeEndObject:()V\n+  #531 = Utf8               java/io/IOException\n+  #532 = NameAndType        #672:#220     // isResourceManaged:()Z\n+  #533 = NameAndType        #673:#654     // AUTO_CLOSE_TARGET:Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #534 = Utf8               java/lang/RuntimeException\n+  #535 = NameAndType        #674:#675     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #536 = NameAndType        #335:#239     // _releaseBuffers:()V\n+  #537 = NameAndType        #676:#677     // releaseConcatBuffer:([C)V\n+  #538 = NameAndType        #188:#175     // _copyBuffer:[C\n+  #539 = NameAndType        #678:#677     // releaseNameCopyBuffer:([C)V\n+  #540 = NameAndType        #343:#222     // _writeLongString:(Ljava/lang/String;)V\n+  #541 = NameAndType        #679:#359     // _characterEscapes:Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #542 = NameAndType        #357:#298     // _writeStringCustom:(I)V\n+  #543 = NameAndType        #680:#171     // _maximumNonEscapedChar:I\n+  #544 = NameAndType        #350:#351     // _writeStringASCII:(II)V\n+  #545 = NameAndType        #263:#298     // _writeString2:(I)V\n+  #546 = NameAndType        #382:#383     // _prependOrWriteCharacterEscape:(CI)V\n+  #547 = NameAndType        #360:#298     // _writeSegmentCustom:(I)V\n+  #548 = NameAndType        #355:#351     // _writeSegmentASCII:(II)V\n+  #549 = NameAndType        #347:#298     // _writeSegment:(I)V\n+  #550 = NameAndType        #382:#388     // _prependOrWriteCharacterEscape:([CIICI)I\n+  #551 = NameAndType        #357:#260     // _writeStringCustom:([CII)V\n+  #552 = NameAndType        #350:#356     // _writeStringASCII:([CIII)V\n+  #553 = NameAndType        #391:#383     // _appendCharacterEscape:(CI)V\n+  #554 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n+  #555 = NameAndType        #681:#682     // getEscapeSequence:(I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #556 = NameAndType        #186:#187     // _currentEscape:Lcom/fasterxml/jackson/core/SerializableString;\n+  #557 = NameAndType        #683:#217     // getMaxLineLength:()I\n+  #558 = NameAndType        #684:#643     // encodeBase64Chunk:(I[CI)I\n+  #559 = NameAndType        #685:#686     // encodeBase64Partial:(II[CI)I\n+  #560 = NameAndType        #376:#377     // _readMore:(Ljava/io/InputStream;[BIII)I\n+  #561 = NameAndType        #619:#687     // read:([BII)I\n+  #562 = NameAndType        #185:#175     // _entityBuffer:[C\n+  #563 = NameAndType        #392:#190     // _allocateEntityBuffer:()[C\n+  #564 = NameAndType        #189:#190     // getHexChars:()[C\n+  #565 = NameAndType        #624:#222     // write:(Ljava/lang/String;)V\n+  #566 = NameAndType        #688:#689     // allocNameCopyBuffer:(I)[C\n+  #567 = NameAndType        #690:#691     // copyHexChars:(Z)[C\n+  #568 = Utf8               com/fasterxml/jackson/core/json/JsonGeneratorImpl\n+  #569 = Utf8               com/fasterxml/jackson/core/io/IOContext\n+  #570 = Utf8               com/fasterxml/jackson/core/ObjectCodec\n+  #571 = Utf8               java/io/Writer\n+  #572 = Utf8               java/lang/String\n+  #573 = Utf8               com/fasterxml/jackson/core/SerializableString\n+  #574 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n+  #575 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+  #576 = Utf8               java/io/InputStream\n+  #577 = Utf8               java/lang/Throwable\n+  #578 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n+  #579 = Utf8               java/lang/Exception\n+  #580 = Utf8               _cfgWriteHexUppercase\n+  #581 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V\n+  #582 = Utf8               allocConcatBuffer\n+  #583 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n+  #584 = Utf8               get7BitOutputEscapes\n+  #585 = Utf8               (I)[I\n+  #586 = Utf8               _outputEscapes\n+  #587 = Utf8               java/lang/Math\n+  #588 = Utf8               (II)I\n+  #589 = Utf8               _writeContext\n+  #590 = Utf8               (Ljava/lang/String;)I\n+  #591 = Utf8               _reportError\n+  #592 = Utf8               getValue\n+  #593 = Utf8               ()Ljava/lang/String;\n+  #594 = Utf8               _cfgPrettyPrinter\n+  #595 = Utf8               Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #596 = Utf8               _cfgUnqNames\n+  #597 = Utf8               asQuotedChars\n+  #598 = Utf8               appendQuoted\n+  #599 = Utf8               ([CI)I\n+  #600 = Utf8               createChildArrayContext\n+  #601 = Utf8               ()Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #602 = Utf8               com/fasterxml/jackson/core/PrettyPrinter\n+  #603 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #604 = Utf8               (Ljava/lang/Object;)Lcom/fasterxml/jackson/core/json/JsonWriteContext;\n+  #605 = Utf8               inArray\n+  #606 = Utf8               append\n+  #607 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #608 = Utf8               typeDesc\n+  #609 = Utf8               toString\n+  #610 = Utf8               getEntryCount\n+  #611 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator;I)V\n+  #612 = Utf8               clearAndGetParent\n+  #613 = Utf8               createChildObjectContext\n+  #614 = Utf8               inObject\n+  #615 = Utf8               writeObjectEntrySeparator\n+  #616 = Utf8               beforeObjectEntries\n+  #617 = Utf8               min\n+  #618 = Utf8               java/io/Reader\n+  #619 = Utf8               read\n+  #620 = Utf8               ([CII)I\n+  #621 = Utf8               java/lang/System\n+  #622 = Utf8               arraycopy\n+  #623 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #624 = Utf8               write\n+  #625 = Utf8               _reportUnsupportedOperation\n+  #626 = Utf8               getChars\n+  #627 = Utf8               (II[CI)V\n+  #628 = Utf8               _checkRangeBoundsForString\n+  #629 = Utf8               substring\n+  #630 = Utf8               (II)Ljava/lang/String;\n+  #631 = Utf8               appendUnquoted\n+  #632 = Utf8               _checkRangeBoundsForCharArray\n+  #633 = Utf8               _checkRangeBoundsForByteArray\n+  #634 = Utf8               _ioContext\n+  #635 = Utf8               allocBase64Buffer\n+  #636 = Utf8               ()[B\n+  #637 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #638 = Utf8               releaseBase64Buffer\n+  #639 = Utf8               ([B)V\n+  #640 = Utf8               _cfgNumbersAsStrings\n+  #641 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n+  #642 = Utf8               outputInt\n+  #643 = Utf8               (I[CI)I\n+  #644 = Utf8               outputLong\n+  #645 = Utf8               (J[CI)I\n+  #646 = Utf8               java/math/BigInteger\n+  #647 = Utf8               notFinite\n+  #648 = Utf8               (D)Z\n+  #649 = Class              #692          // com/fasterxml/jackson/core/JsonGenerator\n+  #650 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #651 = Utf8               Feature\n+  #652 = Utf8               InnerClasses\n+  #653 = Utf8               QUOTE_NON_NUMERIC_NUMBERS\n+  #654 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #655 = Utf8               isEnabled\n+  #656 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #657 = Utf8               USE_FAST_DOUBLE_WRITER\n+  #658 = Utf8               (DZ)Ljava/lang/String;\n+  #659 = Utf8               (F)Z\n+  #660 = Utf8               (FZ)Ljava/lang/String;\n+  #661 = Utf8               _asString\n+  #662 = Utf8               (Ljava/math/BigDecimal;)Ljava/lang/String;\n+  #663 = Utf8               writeValue\n+  #664 = Utf8               _verifyPrettyValueWrite\n+  #665 = Utf8               (Ljava/lang/String;I)V\n+  #666 = Utf8               _rootValueSeparator\n+  #667 = Utf8               _reportCantWriteValueExpectName\n+  #668 = Utf8               FLUSH_PASSED_TO_STREAM\n+  #669 = Utf8               AUTO_CLOSE_JSON_CONTENT\n+  #670 = Utf8               getOutputContext\n+  #671 = Utf8               ()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #672 = Utf8               isResourceManaged\n+  #673 = Utf8               AUTO_CLOSE_TARGET\n+  #674 = Utf8               addSuppressed\n+  #675 = Utf8               (Ljava/lang/Throwable;)V\n+  #676 = Utf8               releaseConcatBuffer\n+  #677 = Utf8               ([C)V\n+  #678 = Utf8               releaseNameCopyBuffer\n+  #679 = Utf8               _characterEscapes\n+  #680 = Utf8               _maximumNonEscapedChar\n+  #681 = Utf8               getEscapeSequence\n+  #682 = Utf8               (I)Lcom/fasterxml/jackson/core/SerializableString;\n+  #683 = Utf8               getMaxLineLength\n+  #684 = Utf8               encodeBase64Chunk\n+  #685 = Utf8               encodeBase64Partial\n+  #686 = Utf8               (II[CI)I\n+  #687 = Utf8               ([BII)I\n+  #688 = Utf8               allocNameCopyBuffer\n+  #689 = Utf8               (I)[C\n+  #690 = Utf8               copyHexChars\n+  #691 = Utf8               (Z)[C\n+  #692 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n {\n   protected static final int SHORT_WRITE = 32;\n     descriptor: I\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 32\n \n   protected static final char[] HEX_CHARS_UPPER;\n@@ -3177,15 +3165,14 @@\n         line 699: 67\n         line 700: 78\n         line 701: 83\n         line 703: 121\n         line 706: 124\n         line 707: 133\n         line 706: 136\n-        line 707: 147\n         line 709: 150\n         line 710: 161\n         line 712: 165\n         line 713: 185\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            64       3     5 bytes   I\n@@ -4728,14 +4715,15 @@\n        101: return\n       LineNumberTable:\n         line 1142: 0\n         line 1145: 4\n         line 1146: 9\n         line 1148: 11\n         line 1149: 17\n+        line 1150: 25\n         line 1151: 35\n         line 1152: 49\n         line 1153: 56\n         line 1154: 65\n         line 1155: 72\n         line 1157: 85\n         line 1159: 91\n@@ -8094,8 +8082,8 @@\n         14: return\n       LineNumberTable:\n         line 22: 0\n         line 23: 7\n }\n SourceFile: \"WriterBasedJsonGenerator.java\"\n InnerClasses:\n-  public static final #663= #516 of #661; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #651= #508 of #649; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n"}]}
