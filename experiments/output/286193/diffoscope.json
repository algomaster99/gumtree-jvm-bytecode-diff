{"diffoscope-json-version": 1, "source1": "first/BlockSort.class", "source2": "second/BlockSort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,72 +1,72 @@\n-  SHA-256 checksum d7f29bc5d197cf895cd60eb37aa49c7f3623ac6b7ee1b17cbd31ed1f0c3aebe6\n+  SHA-256 checksum 2d1fdfd4c0b9b5e00a463df65439ab042edb1e2b955a3ccd62da775b72383717\n   Compiled from \"BlockSort.java\"\n class org.apache.commons.compress.compressors.bzip2.BlockSort\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/bzip2/BlockSort\n   super_class: #58                        // java/lang/Object\n   interfaces: 0, fields: 22, methods: 18, attributes: 2\n Constant pool:\n-    #1 = Class              #138          // org/apache/commons/compress/compressors/bzip2/BlockSort\n-    #2 = Methodref          #58.#139      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #1.#140       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_ll:[I\n-    #4 = Fieldref           #1.#141       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_hh:[I\n-    #5 = Fieldref           #1.#142       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_dd:[I\n-    #6 = Fieldref           #1.#143       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_runningOrder:[I\n-    #7 = Fieldref           #1.#144       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_copy:[I\n-    #8 = Fieldref           #1.#145       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_bigDone:[Z\n+    #1 = Class              #135          // org/apache/commons/compress/compressors/bzip2/BlockSort\n+    #2 = Methodref          #58.#136      // java/lang/Object.\"<init>\":()V\n+    #3 = Fieldref           #1.#137       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_ll:[I\n+    #4 = Fieldref           #1.#138       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_hh:[I\n+    #5 = Fieldref           #1.#139       // org/apache/commons/compress/compressors/bzip2/BlockSort.stack_dd:[I\n+    #6 = Fieldref           #1.#140       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_runningOrder:[I\n+    #7 = Fieldref           #1.#141       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_copy:[I\n+    #8 = Fieldref           #1.#142       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort_bigDone:[Z\n     #9 = Integer            65537\n-   #10 = Fieldref           #1.#146       // org/apache/commons/compress/compressors/bzip2/BlockSort.ftab:[I\n-   #11 = Fieldref           #93.#147      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n-   #12 = Fieldref           #1.#148       // org/apache/commons/compress/compressors/bzip2/BlockSort.quadrant:[C\n-   #13 = Fieldref           #1.#149       // org/apache/commons/compress/compressors/bzip2/BlockSort.workLimit:I\n-   #14 = Fieldref           #1.#150       // org/apache/commons/compress/compressors/bzip2/BlockSort.workDone:I\n-   #15 = Fieldref           #1.#151       // org/apache/commons/compress/compressors/bzip2/BlockSort.firstAttempt:Z\n-   #16 = Methodref          #1.#152       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-   #17 = Methodref          #1.#153       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-   #18 = Fieldref           #93.#154      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n-   #19 = Fieldref           #93.#155      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n-   #20 = Fieldref           #93.#156      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n-   #21 = Methodref          #1.#157       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:([I[BI)V\n-   #22 = Methodref          #1.#158       // org/apache/commons/compress/compressors/bzip2/BlockSort.fswap:([III)V\n-   #23 = Methodref          #1.#159       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpush:(III)V\n-   #24 = Methodref          #1.#160       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpop:(I)[I\n-   #25 = Methodref          #1.#161       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSimpleSort:([I[III)V\n+   #10 = Fieldref           #1.#143       // org/apache/commons/compress/compressors/bzip2/BlockSort.ftab:[I\n+   #11 = Fieldref           #93.#144      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.sfmap:[C\n+   #12 = Fieldref           #1.#145       // org/apache/commons/compress/compressors/bzip2/BlockSort.quadrant:[C\n+   #13 = Fieldref           #1.#146       // org/apache/commons/compress/compressors/bzip2/BlockSort.workLimit:I\n+   #14 = Fieldref           #1.#147       // org/apache/commons/compress/compressors/bzip2/BlockSort.workDone:I\n+   #15 = Fieldref           #1.#148       // org/apache/commons/compress/compressors/bzip2/BlockSort.firstAttempt:Z\n+   #16 = Methodref          #1.#149       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #17 = Methodref          #1.#150       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+   #18 = Fieldref           #93.#151      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.fmap:[I\n+   #19 = Fieldref           #93.#152      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.origPtr:I\n+   #20 = Fieldref           #93.#153      // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data.block:[B\n+   #21 = Methodref          #1.#154       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSort:([I[BI)V\n+   #22 = Methodref          #1.#155       // org/apache/commons/compress/compressors/bzip2/BlockSort.fswap:([III)V\n+   #23 = Methodref          #1.#156       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpush:(III)V\n+   #24 = Methodref          #1.#157       // org/apache/commons/compress/compressors/bzip2/BlockSort.fpop:(I)[I\n+   #25 = Methodref          #1.#158       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackSimpleSort:([I[III)V\n    #26 = Long               7621l\n    #28 = Long               32768l\n    #30 = Long               3l\n-   #32 = Methodref          #1.#162       // org/apache/commons/compress/compressors/bzip2/BlockSort.fmin:(II)I\n-   #33 = Methodref          #1.#163       // org/apache/commons/compress/compressors/bzip2/BlockSort.fvswap:([IIII)V\n-   #34 = Fieldref           #1.#164       // org/apache/commons/compress/compressors/bzip2/BlockSort.eclass:[I\n-   #35 = Methodref          #1.#165       // org/apache/commons/compress/compressors/bzip2/BlockSort.getEclass:()[I\n-   #36 = Class              #166          // java/util/BitSet\n-   #37 = Methodref          #36.#167      // java/util/BitSet.\"<init>\":(I)V\n-   #38 = Methodref          #36.#168      // java/util/BitSet.set:(I)V\n-   #39 = Methodref          #36.#169      // java/util/BitSet.clear:(I)V\n-   #40 = Methodref          #36.#170      // java/util/BitSet.get:(I)Z\n-   #41 = Methodref          #36.#171      // java/util/BitSet.nextClearBit:(I)I\n-   #42 = Methodref          #36.#172      // java/util/BitSet.nextSetBit:(I)I\n-   #43 = Methodref          #1.#173       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackQSort3:([I[III)V\n-   #44 = Fieldref           #1.#174       // org/apache/commons/compress/compressors/bzip2/BlockSort.INCS:[I\n-   #45 = Methodref          #1.#175       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-   #46 = Methodref          #1.#176       // org/apache/commons/compress/compressors/bzip2/BlockSort.med3:(BBB)B\n-   #47 = Methodref          #1.#177       // org/apache/commons/compress/compressors/bzip2/BlockSort.vswap:([IIII)V\n-   #48 = Class              #178          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+   #32 = Methodref          #1.#159       // org/apache/commons/compress/compressors/bzip2/BlockSort.fmin:(II)I\n+   #33 = Methodref          #1.#160       // org/apache/commons/compress/compressors/bzip2/BlockSort.fvswap:([IIII)V\n+   #34 = Fieldref           #1.#161       // org/apache/commons/compress/compressors/bzip2/BlockSort.eclass:[I\n+   #35 = Methodref          #1.#162       // org/apache/commons/compress/compressors/bzip2/BlockSort.getEclass:()[I\n+   #36 = Class              #163          // java/util/BitSet\n+   #37 = Methodref          #36.#164      // java/util/BitSet.\"<init>\":(I)V\n+   #38 = Methodref          #36.#165      // java/util/BitSet.set:(I)V\n+   #39 = Methodref          #36.#166      // java/util/BitSet.clear:(I)V\n+   #40 = Methodref          #36.#167      // java/util/BitSet.get:(I)Z\n+   #41 = Methodref          #36.#168      // java/util/BitSet.nextClearBit:(I)I\n+   #42 = Methodref          #36.#169      // java/util/BitSet.nextSetBit:(I)I\n+   #43 = Methodref          #1.#170       // org/apache/commons/compress/compressors/bzip2/BlockSort.fallbackQSort3:([I[III)V\n+   #44 = Fieldref           #1.#171       // org/apache/commons/compress/compressors/bzip2/BlockSort.INCS:[I\n+   #45 = Methodref          #1.#172       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+   #46 = Methodref          #1.#173       // org/apache/commons/compress/compressors/bzip2/BlockSort.med3:(BBB)B\n+   #47 = Methodref          #1.#174       // org/apache/commons/compress/compressors/bzip2/BlockSort.vswap:([IIII)V\n+   #48 = Class              #175          // org/apache/commons/compress/compressors/bzip2/BZip2Constants\n    #49 = Integer            65536\n    #50 = Integer            2097152\n    #51 = Integer            -2097153\n-   #52 = Methodref          #1.#179       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+   #52 = Methodref          #1.#176       // org/apache/commons/compress/compressors/bzip2/BlockSort.mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n    #53 = Integer            65534\n    #54 = Integer            88573\n    #55 = Integer            265720\n    #56 = Integer            797161\n    #57 = Integer            2391484\n-   #58 = Class              #180          // java/lang/Object\n+   #58 = Class              #177          // java/lang/Object\n    #59 = Utf8               QSORT_STACK_SIZE\n    #60 = Utf8               I\n    #61 = Utf8               ConstantValue\n    #62 = Integer            1000\n    #63 = Utf8               FALLBACK_QSORT_STACK_SIZE\n    #64 = Integer            100\n    #65 = Utf8               STACK_SIZE\n@@ -93,118 +93,115 @@\n    #86 = Integer            20\n    #87 = Utf8               DEPTH_THRESH\n    #88 = Utf8               WORK_FACTOR\n    #89 = Integer            30\n    #90 = Utf8               SETMASK\n    #91 = Utf8               CLEARMASK\n    #92 = Utf8               <init>\n-   #93 = Class              #182          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+   #93 = Class              #179          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n    #94 = Utf8               Data\n    #95 = Utf8               InnerClasses\n    #96 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;)V\n    #97 = Utf8               Code\n    #98 = Utf8               LineNumberTable\n    #99 = Utf8               blockSort\n   #100 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n   #101 = Utf8               StackMapTable\n   #102 = Class              #71           // \"[I\"\n   #103 = Utf8               fallbackSort\n   #104 = Utf8               fallbackSimpleSort\n   #105 = Utf8               ([I[III)V\n-  #106 = Class              #138          // org/apache/commons/compress/compressors/bzip2/BlockSort\n-  #107 = Utf8               fswap\n-  #108 = Utf8               ([III)V\n-  #109 = Utf8               fvswap\n-  #110 = Utf8               ([IIII)V\n-  #111 = Utf8               fmin\n-  #112 = Utf8               (II)I\n-  #113 = Utf8               fpush\n-  #114 = Utf8               (III)V\n-  #115 = Utf8               fpop\n-  #116 = Utf8               (I)[I\n-  #117 = Utf8               fallbackQSort3\n-  #118 = Utf8               getEclass\n-  #119 = Utf8               ()[I\n-  #120 = Utf8               ([I[BI)V\n-  #121 = Class              #183          // \"[B\"\n-  #122 = Class              #166          // java/util/BitSet\n-  #123 = Utf8               mainSimpleSort\n-  #124 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-  #125 = Class              #182          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-  #126 = Class              #80           // \"[C\"\n-  #127 = Utf8               vswap\n-  #128 = Utf8               med3\n-  #129 = Utf8               (BBB)B\n-  #130 = Utf8               mainQSort3\n-  #131 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n-  #132 = Utf8               mainSort\n-  #133 = Class              #77           // \"[Z\"\n-  #134 = Utf8               <clinit>\n-  #135 = Utf8               ()V\n-  #136 = Utf8               SourceFile\n-  #137 = Utf8               BlockSort.java\n-  #138 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n-  #139 = NameAndType        #92:#135      // \"<init>\":()V\n-  #140 = NameAndType        #70:#71       // stack_ll:[I\n-  #141 = NameAndType        #72:#71       // stack_hh:[I\n-  #142 = NameAndType        #73:#71       // stack_dd:[I\n-  #143 = NameAndType        #74:#71       // mainSort_runningOrder:[I\n-  #144 = NameAndType        #75:#71       // mainSort_copy:[I\n-  #145 = NameAndType        #76:#77       // mainSort_bigDone:[Z\n-  #146 = NameAndType        #78:#71       // ftab:[I\n-  #147 = NameAndType        #184:#80      // sfmap:[C\n-  #148 = NameAndType        #79:#80       // quadrant:[C\n-  #149 = NameAndType        #67:#60       // workLimit:I\n-  #150 = NameAndType        #66:#60       // workDone:I\n-  #151 = NameAndType        #68:#69       // firstAttempt:Z\n-  #152 = NameAndType        #103:#100     // fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #153 = NameAndType        #132:#100     // mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n-  #154 = NameAndType        #185:#71      // fmap:[I\n-  #155 = NameAndType        #186:#60      // origPtr:I\n-  #156 = NameAndType        #187:#183     // block:[B\n-  #157 = NameAndType        #103:#120     // fallbackSort:([I[BI)V\n-  #158 = NameAndType        #107:#108     // fswap:([III)V\n-  #159 = NameAndType        #113:#114     // fpush:(III)V\n-  #160 = NameAndType        #115:#116     // fpop:(I)[I\n-  #161 = NameAndType        #104:#105     // fallbackSimpleSort:([I[III)V\n-  #162 = NameAndType        #111:#112     // fmin:(II)I\n-  #163 = NameAndType        #109:#110     // fvswap:([IIII)V\n-  #164 = NameAndType        #83:#71       // eclass:[I\n-  #165 = NameAndType        #118:#119     // getEclass:()[I\n-  #166 = Utf8               java/util/BitSet\n-  #167 = NameAndType        #92:#188      // \"<init>\":(I)V\n-  #168 = NameAndType        #189:#188     // set:(I)V\n-  #169 = NameAndType        #190:#188     // clear:(I)V\n-  #170 = NameAndType        #191:#192     // get:(I)Z\n-  #171 = NameAndType        #193:#194     // nextClearBit:(I)I\n-  #172 = NameAndType        #195:#194     // nextSetBit:(I)I\n-  #173 = NameAndType        #117:#105     // fallbackQSort3:([I[III)V\n-  #174 = NameAndType        #84:#71       // INCS:[I\n-  #175 = NameAndType        #123:#124     // mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n-  #176 = NameAndType        #128:#129     // med3:(BBB)B\n-  #177 = NameAndType        #127:#110     // vswap:([IIII)V\n-  #178 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n-  #179 = NameAndType        #130:#131     // mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n-  #180 = Utf8               java/lang/Object\n-  #181 = Class              #196          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n-  #182 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n-  #183 = Utf8               [B\n-  #184 = Utf8               sfmap\n-  #185 = Utf8               fmap\n-  #186 = Utf8               origPtr\n-  #187 = Utf8               block\n-  #188 = Utf8               (I)V\n-  #189 = Utf8               set\n-  #190 = Utf8               clear\n-  #191 = Utf8               get\n-  #192 = Utf8               (I)Z\n-  #193 = Utf8               nextClearBit\n-  #194 = Utf8               (I)I\n-  #195 = Utf8               nextSetBit\n-  #196 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #106 = Utf8               fswap\n+  #107 = Utf8               ([III)V\n+  #108 = Utf8               fvswap\n+  #109 = Utf8               ([IIII)V\n+  #110 = Utf8               fmin\n+  #111 = Utf8               (II)I\n+  #112 = Utf8               fpush\n+  #113 = Utf8               (III)V\n+  #114 = Utf8               fpop\n+  #115 = Utf8               (I)[I\n+  #116 = Utf8               fallbackQSort3\n+  #117 = Utf8               getEclass\n+  #118 = Utf8               ()[I\n+  #119 = Utf8               ([I[BI)V\n+  #120 = Class              #180          // \"[B\"\n+  #121 = Utf8               mainSimpleSort\n+  #122 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+  #123 = Class              #80           // \"[C\"\n+  #124 = Utf8               vswap\n+  #125 = Utf8               med3\n+  #126 = Utf8               (BBB)B\n+  #127 = Utf8               mainQSort3\n+  #128 = Utf8               (Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+  #129 = Utf8               mainSort\n+  #130 = Class              #77           // \"[Z\"\n+  #131 = Utf8               <clinit>\n+  #132 = Utf8               ()V\n+  #133 = Utf8               SourceFile\n+  #134 = Utf8               BlockSort.java\n+  #135 = Utf8               org/apache/commons/compress/compressors/bzip2/BlockSort\n+  #136 = NameAndType        #92:#132      // \"<init>\":()V\n+  #137 = NameAndType        #70:#71       // stack_ll:[I\n+  #138 = NameAndType        #72:#71       // stack_hh:[I\n+  #139 = NameAndType        #73:#71       // stack_dd:[I\n+  #140 = NameAndType        #74:#71       // mainSort_runningOrder:[I\n+  #141 = NameAndType        #75:#71       // mainSort_copy:[I\n+  #142 = NameAndType        #76:#77       // mainSort_bigDone:[Z\n+  #143 = NameAndType        #78:#71       // ftab:[I\n+  #144 = NameAndType        #181:#80      // sfmap:[C\n+  #145 = NameAndType        #79:#80       // quadrant:[C\n+  #146 = NameAndType        #67:#60       // workLimit:I\n+  #147 = NameAndType        #66:#60       // workDone:I\n+  #148 = NameAndType        #68:#69       // firstAttempt:Z\n+  #149 = NameAndType        #103:#100     // fallbackSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+  #150 = NameAndType        #129:#100     // mainSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;I)V\n+  #151 = NameAndType        #182:#71      // fmap:[I\n+  #152 = NameAndType        #183:#60      // origPtr:I\n+  #153 = NameAndType        #184:#180     // block:[B\n+  #154 = NameAndType        #103:#119     // fallbackSort:([I[BI)V\n+  #155 = NameAndType        #106:#107     // fswap:([III)V\n+  #156 = NameAndType        #112:#113     // fpush:(III)V\n+  #157 = NameAndType        #114:#115     // fpop:(I)[I\n+  #158 = NameAndType        #104:#105     // fallbackSimpleSort:([I[III)V\n+  #159 = NameAndType        #110:#111     // fmin:(II)I\n+  #160 = NameAndType        #108:#109     // fvswap:([IIII)V\n+  #161 = NameAndType        #83:#71       // eclass:[I\n+  #162 = NameAndType        #117:#118     // getEclass:()[I\n+  #163 = Utf8               java/util/BitSet\n+  #164 = NameAndType        #92:#185      // \"<init>\":(I)V\n+  #165 = NameAndType        #186:#185     // set:(I)V\n+  #166 = NameAndType        #187:#185     // clear:(I)V\n+  #167 = NameAndType        #188:#189     // get:(I)Z\n+  #168 = NameAndType        #190:#191     // nextClearBit:(I)I\n+  #169 = NameAndType        #192:#191     // nextSetBit:(I)I\n+  #170 = NameAndType        #116:#105     // fallbackQSort3:([I[III)V\n+  #171 = NameAndType        #84:#71       // INCS:[I\n+  #172 = NameAndType        #121:#122     // mainSimpleSort:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)Z\n+  #173 = NameAndType        #125:#126     // med3:(BBB)B\n+  #174 = NameAndType        #124:#109     // vswap:([IIII)V\n+  #175 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2Constants\n+  #176 = NameAndType        #127:#128     // mainQSort3:(Lorg/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data;IIII)V\n+  #177 = Utf8               java/lang/Object\n+  #178 = Class              #193          // org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  #179 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data\n+  #180 = Utf8               [B\n+  #181 = Utf8               sfmap\n+  #182 = Utf8               fmap\n+  #183 = Utf8               origPtr\n+  #184 = Utf8               block\n+  #185 = Utf8               (I)V\n+  #186 = Utf8               set\n+  #187 = Utf8               clear\n+  #188 = Utf8               get\n+  #189 = Utf8               (I)Z\n+  #190 = Utf8               nextClearBit\n+  #191 = Utf8               (I)I\n+  #192 = Utf8               nextSetBit\n+  #193 = Utf8               org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n {\n   private static final int QSORT_STACK_SIZE = 1000;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1000\n \n   private static final int FALLBACK_QSORT_STACK_SIZE = 100;\n@@ -2317,14 +2314,16 @@\n         38: if_icmple     45\n         41: iload_2\n         42: goto          46\n         45: iload_0\n         46: ireturn\n       LineNumberTable:\n         line 796: 0\n+        line 797: 45\n+        line 796: 46\n       StackMapTable: number_of_entries = 6\n         frame_type = 14 /* same */\n         frame_type = 8 /* same */\n         frame_type = 3 /* same */\n         frame_type = 8 /* same */\n         frame_type = 8 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n@@ -2704,16 +2703,18 @@\n         line 872: 370\n         line 877: 373\n         line 878: 380\n         line 879: 387\n         line 880: 394\n         line 881: 401\n         line 883: 407\n+        line 884: 428\n         line 885: 435\n         line 886: 449\n+        line 887: 470\n         line 888: 477\n         line 890: 493\n         line 891: 505\n         line 893: 517\n         line 894: 524\n         line 895: 531\n         line 896: 538\n@@ -3574,8 +3575,8 @@\n         85: putstatic     #44                 // Field INCS:[I\n         88: return\n       LineNumberTable:\n         line 583: 0\n }\n SourceFile: \"BlockSort.java\"\n InnerClasses:\n-  static final #94= #93 of #181;          // Data=class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data of class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n+  static final #94= #93 of #178;          // Data=class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream$Data of class org/apache/commons/compress/compressors/bzip2/BZip2CompressorOutputStream\n"}]}
