{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorInputStream.class", "source2": "second/BlockLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum 9b8340377be981f84950efd3dfda18fb9c57eb6aca4afb1544bc636ac965f375\n+  SHA-256 checksum 7fbf94b06b40233a51c7e024d35f936ebe97cdf715687b2a4024a606000c7586\n   Compiled from \"BlockLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream extends org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  super_class: #44                        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  super_class: #5                         // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n   interfaces: 0, fields: 6, methods: 5, attributes: 2\n Constant pool:\n-    #1 = Class              #77           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-    #2 = Integer            65536\n-    #3 = Methodref          #44.#78       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #47.#79       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #5 = Fieldref           #1.#80        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #6 = Fieldref           #1.#81        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #7 = Methodref          #82.#83       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-    #8 = Class              #84           // java/io/IOException\n-    #9 = Fieldref           #1.#85        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n-   #10 = Methodref          #1.#86        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n-   #11 = String             #87           // Illegal block with a negative match length found\n-   #12 = Methodref          #8.#88        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Long               4l\n-   #15 = Methodref          #1.#89        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n-   #16 = Class              #90           // java/lang/IllegalArgumentException\n-   #17 = String             #91           // Illegal block with bad offset found\n-   #18 = Methodref          #8.#92        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #19 = Fieldref           #47.#93       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #20 = Fieldref           #45.#94       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-   #21 = Methodref          #47.#95       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n-   #22 = Methodref          #1.#96        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n-   #23 = Methodref          #1.#97        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n-   #24 = Methodref          #1.#98        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n-   #25 = Fieldref           #47.#99       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #26 = Methodref          #1.#100       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n-   #27 = Methodref          #1.#101       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n-   #28 = Fieldref           #47.#102      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #29 = Methodref          #1.#103       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n-   #30 = Class              #104          // java/lang/StringBuilder\n-   #31 = Methodref          #30.#105      // java/lang/StringBuilder.\"<init>\":()V\n-   #32 = String             #106          // Unknown stream state\n-   #33 = Methodref          #30.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #34 = Methodref          #30.#108      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #35 = Methodref          #30.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #36 = Methodref          #1.#110       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n-   #37 = String             #111          // Premature end of stream while parsing length\n-   #38 = String             #112          // Premature end of stream while looking for next block\n-   #39 = Long               15l\n-   #41 = String             #113          // Illegal block with a negative literal size found\n-   #42 = Methodref          #1.#114       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n-   #43 = Fieldref           #47.#115      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #44 = Class              #116          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #45 = Class              #117          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-   #46 = Utf8               InnerClasses\n-   #47 = Class              #118          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n-   #48 = Utf8               State\n-   #49 = Utf8               WINDOW_SIZE\n-   #50 = Utf8               I\n-   #51 = Utf8               ConstantValue\n-   #52 = Utf8               SIZE_BITS\n-   #53 = Integer            4\n-   #54 = Utf8               BACK_REFERENCE_SIZE_MASK\n-   #55 = Integer            15\n-   #56 = Utf8               LITERAL_SIZE_MASK\n-   #57 = Integer            240\n-   #58 = Utf8               nextBackReferenceSize\n-   #59 = Utf8               state\n-   #60 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #61 = Utf8               <init>\n-   #62 = Utf8               (Ljava/io/InputStream;)V\n-   #63 = Utf8               Code\n-   #64 = Utf8               LineNumberTable\n-   #65 = Utf8               initializeBackReference\n-   #66 = Utf8               ()Z\n-   #67 = Utf8               StackMapTable\n-   #68 = Utf8               Exceptions\n-   #69 = Utf8               read\n-   #70 = Utf8               ([BII)I\n-   #71 = Utf8               readSizeBytes\n-   #72 = Utf8               ()J\n-   #73 = Utf8               readSizes\n-   #74 = Utf8               ()V\n-   #75 = Utf8               SourceFile\n-   #76 = Utf8               BlockLZ4CompressorInputStream.java\n-   #77 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #78 = NameAndType        #61:#119      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #79 = NameAndType        #120:#60      // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #80 = NameAndType        #59:#60       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #81 = NameAndType        #121:#124     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #82 = Class              #125          // org/apache/commons/compress/utils/ByteUtils\n-   #83 = NameAndType        #126:#127     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #84 = Utf8               java/io/IOException\n-   #85 = NameAndType        #58:#50       // nextBackReferenceSize:I\n-   #86 = NameAndType        #71:#72       // readSizeBytes:()J\n-   #87 = Utf8               Illegal block with a negative match length found\n-   #88 = NameAndType        #61:#128      // \"<init>\":(Ljava/lang/String;)V\n-   #89 = NameAndType        #129:#130     // startBackReference:(IJ)V\n-   #90 = Utf8               java/lang/IllegalArgumentException\n-   #91 = Utf8               Illegal block with bad offset found\n-   #92 = NameAndType        #61:#131      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #93 = NameAndType        #132:#60      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #94 = NameAndType        #133:#134     // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-   #95 = NameAndType        #135:#136     // ordinal:()I\n-   #96 = NameAndType        #73:#74       // readSizes:()V\n-   #97 = NameAndType        #137:#70      // readLiteral:([BII)I\n-   #98 = NameAndType        #138:#66      // hasMoreDataInBlock:()Z\n-   #99 = NameAndType        #139:#60      // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #100 = NameAndType        #69:#70       // read:([BII)I\n-  #101 = NameAndType        #65:#66       // initializeBackReference:()Z\n-  #102 = NameAndType        #140:#60      // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #103 = NameAndType        #141:#70      // readBackReference:([BII)I\n-  #104 = Utf8               java/lang/StringBuilder\n-  #105 = NameAndType        #61:#74       // \"<init>\":()V\n-  #106 = Utf8               Unknown stream state\n-  #107 = NameAndType        #142:#143     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = NameAndType        #142:#144     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #109 = NameAndType        #145:#146     // toString:()Ljava/lang/String;\n-  #110 = NameAndType        #147:#136     // readOneByte:()I\n-  #111 = Utf8               Premature end of stream while parsing length\n-  #112 = Utf8               Premature end of stream while looking for next block\n-  #113 = Utf8               Illegal block with a negative literal size found\n-  #114 = NameAndType        #148:#149     // startLiteral:(J)V\n-  #115 = NameAndType        #150:#60      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #116 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  #117 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-  #118 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n-  #119 = Utf8               (Ljava/io/InputStream;I)V\n-  #120 = Utf8               NO_BLOCK\n-  #121 = Utf8               supplier\n-  #122 = Class              #151          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #123 = Utf8               ByteSupplier\n-  #124 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #125 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #126 = Utf8               fromLittleEndian\n-  #127 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #128 = Utf8               (Ljava/lang/String;)V\n-  #129 = Utf8               startBackReference\n-  #130 = Utf8               (IJ)V\n-  #131 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #132 = Utf8               IN_BACK_REFERENCE\n-  #133 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n-  #134 = Utf8               [I\n-  #135 = Utf8               ordinal\n-  #136 = Utf8               ()I\n-  #137 = Utf8               readLiteral\n-  #138 = Utf8               hasMoreDataInBlock\n-  #139 = Utf8               LOOKING_FOR_BACK_REFERENCE\n-  #140 = Utf8               EOF\n-  #141 = Utf8               readBackReference\n-  #142 = Utf8               append\n-  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               toString\n-  #146 = Utf8               ()Ljava/lang/String;\n-  #147 = Utf8               readOneByte\n-  #148 = Utf8               startLiteral\n-  #149 = Utf8               (J)V\n-  #150 = Utf8               IN_LITERAL\n-  #151 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+    #3 = Integer            65536\n+    #4 = Methodref          #5.#6         // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #5 = Class              #7            // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+    #6 = NameAndType        #8:#9         // \"<init>\":(Ljava/io/InputStream;I)V\n+    #7 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+    #8 = Utf8               <init>\n+    #9 = Utf8               (Ljava/io/InputStream;I)V\n+   #10 = Fieldref           #11.#12       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #11 = Class              #13           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+   #12 = NameAndType        #14:#15       // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #13 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+   #14 = Utf8               NO_BLOCK\n+   #15 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #16 = Fieldref           #1.#17        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #17 = NameAndType        #18:#15       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #18 = Utf8               state\n+   #19 = Fieldref           #1.#20        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #20 = NameAndType        #21:#22       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #21 = Utf8               supplier\n+   #22 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #23 = Methodref          #24.#25       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #24 = Class              #26           // org/apache/commons/compress/utils/ByteUtils\n+   #25 = NameAndType        #27:#28       // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #26 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #27 = Utf8               fromLittleEndian\n+   #28 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #29 = Class              #30           // java/io/IOException\n+   #30 = Utf8               java/io/IOException\n+   #31 = Fieldref           #1.#32        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n+   #32 = NameAndType        #33:#34       // nextBackReferenceSize:I\n+   #33 = Utf8               nextBackReferenceSize\n+   #34 = Utf8               I\n+   #35 = Methodref          #1.#36        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n+   #36 = NameAndType        #37:#38       // readSizeBytes:()J\n+   #37 = Utf8               readSizeBytes\n+   #38 = Utf8               ()J\n+   #39 = String             #40           // Illegal block with a negative match length found\n+   #40 = Utf8               Illegal block with a negative match length found\n+   #41 = Methodref          #29.#42       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #42 = NameAndType        #8:#43        // \"<init>\":(Ljava/lang/String;)V\n+   #43 = Utf8               (Ljava/lang/String;)V\n+   #44 = Long               4l\n+   #46 = Methodref          #1.#47        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n+   #47 = NameAndType        #48:#49       // startBackReference:(IJ)V\n+   #48 = Utf8               startBackReference\n+   #49 = Utf8               (IJ)V\n+   #50 = Class              #51           // java/lang/IllegalArgumentException\n+   #51 = Utf8               java/lang/IllegalArgumentException\n+   #52 = String             #53           // Illegal block with bad offset found\n+   #53 = Utf8               Illegal block with bad offset found\n+   #54 = Methodref          #29.#55       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #55 = NameAndType        #8:#56        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #56 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #57 = Fieldref           #11.#58       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #58 = NameAndType        #59:#15       // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #59 = Utf8               IN_BACK_REFERENCE\n+   #60 = Fieldref           #61.#62       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+   #61 = Class              #63           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+   #62 = NameAndType        #64:#65       // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+   #63 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+   #64 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n+   #65 = Utf8               [I\n+   #66 = Methodref          #11.#67       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n+   #67 = NameAndType        #68:#69       // ordinal:()I\n+   #68 = Utf8               ordinal\n+   #69 = Utf8               ()I\n+   #70 = Methodref          #1.#71        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n+   #71 = NameAndType        #72:#73       // readSizes:()V\n+   #72 = Utf8               readSizes\n+   #73 = Utf8               ()V\n+   #74 = Methodref          #1.#75        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n+   #75 = NameAndType        #76:#77       // readLiteral:([BII)I\n+   #76 = Utf8               readLiteral\n+   #77 = Utf8               ([BII)I\n+   #78 = Methodref          #1.#79        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n+   #79 = NameAndType        #80:#81       // hasMoreDataInBlock:()Z\n+   #80 = Utf8               hasMoreDataInBlock\n+   #81 = Utf8               ()Z\n+   #82 = Fieldref           #11.#83       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #83 = NameAndType        #84:#15       // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #84 = Utf8               LOOKING_FOR_BACK_REFERENCE\n+   #85 = Methodref          #1.#86        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n+   #86 = NameAndType        #87:#77       // read:([BII)I\n+   #87 = Utf8               read\n+   #88 = Methodref          #1.#89        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n+   #89 = NameAndType        #90:#81       // initializeBackReference:()Z\n+   #90 = Utf8               initializeBackReference\n+   #91 = Fieldref           #11.#92       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #92 = NameAndType        #93:#15       // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #93 = Utf8               EOF\n+   #94 = Methodref          #1.#95        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n+   #95 = NameAndType        #96:#77       // readBackReference:([BII)I\n+   #96 = Utf8               readBackReference\n+   #97 = Class              #98           // java/lang/StringBuilder\n+   #98 = Utf8               java/lang/StringBuilder\n+   #99 = Methodref          #97.#100      // java/lang/StringBuilder.\"<init>\":()V\n+  #100 = NameAndType        #8:#73        // \"<init>\":()V\n+  #101 = String             #102          // Unknown stream state\n+  #102 = Utf8               Unknown stream state\n+  #103 = Methodref          #97.#104      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #104 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #105 = Utf8               append\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = Methodref          #97.#108      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #108 = NameAndType        #105:#109     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #109 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #110 = Methodref          #97.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #111 = NameAndType        #112:#113     // toString:()Ljava/lang/String;\n+  #112 = Utf8               toString\n+  #113 = Utf8               ()Ljava/lang/String;\n+  #114 = Methodref          #1.#115       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n+  #115 = NameAndType        #116:#69      // readOneByte:()I\n+  #116 = Utf8               readOneByte\n+  #117 = String             #118          // Premature end of stream while parsing length\n+  #118 = Utf8               Premature end of stream while parsing length\n+  #119 = String             #120          // Premature end of stream while looking for next block\n+  #120 = Utf8               Premature end of stream while looking for next block\n+  #121 = Long               15l\n+  #123 = String             #124          // Illegal block with a negative literal size found\n+  #124 = Utf8               Illegal block with a negative literal size found\n+  #125 = Methodref          #1.#126       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n+  #126 = NameAndType        #127:#128     // startLiteral:(J)V\n+  #127 = Utf8               startLiteral\n+  #128 = Utf8               (J)V\n+  #129 = Fieldref           #11.#130      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #130 = NameAndType        #131:#15      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #131 = Utf8               IN_LITERAL\n+  #132 = Utf8               WINDOW_SIZE\n+  #133 = Utf8               ConstantValue\n+  #134 = Utf8               SIZE_BITS\n+  #135 = Integer            4\n+  #136 = Utf8               BACK_REFERENCE_SIZE_MASK\n+  #137 = Integer            15\n+  #138 = Utf8               LITERAL_SIZE_MASK\n+  #139 = Integer            240\n+  #140 = Utf8               (Ljava/io/InputStream;)V\n+  #141 = Utf8               Code\n+  #142 = Utf8               LineNumberTable\n+  #143 = Utf8               StackMapTable\n+  #144 = Utf8               Exceptions\n+  #145 = Utf8               SourceFile\n+  #146 = Utf8               BlockLZ4CompressorInputStream.java\n+  #147 = Utf8               InnerClasses\n+  #148 = Utf8               State\n+  #149 = Class              #150          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #150 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #151 = Utf8               ByteSupplier\n {\n   static final int WINDOW_SIZE = 65536;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 65536\n \n   static final int SIZE_BITS = 4;\n@@ -189,86 +189,86 @@\n   public org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #2                  // int 65536\n-         4: invokespecial #3                  // Method org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+         2: ldc           #3                  // int 65536\n+         4: invokespecial #4                  // Method org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n          7: aload_0\n-         8: getstatic     #4                  // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-        11: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+         8: getstatic     #10                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        11: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         14: return\n       LineNumberTable:\n         line 58: 0\n         line 49: 7\n         line 59: 14\n \n   private boolean initializeBackReference() throws java.io.IOException;\n     descriptor: ()Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: aload_0\n-         3: getfield      #6                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         3: getfield      #19                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          6: iconst_2\n-         7: invokestatic  #7                  // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         7: invokestatic  #23                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         10: l2i\n         11: istore_1\n         12: goto          27\n         15: astore_2\n         16: aload_0\n-        17: getfield      #9                  // Field nextBackReferenceSize:I\n+        17: getfield      #31                 // Field nextBackReferenceSize:I\n         20: ifne          25\n         23: iconst_0\n         24: ireturn\n         25: aload_2\n         26: athrow\n         27: aload_0\n-        28: getfield      #9                  // Field nextBackReferenceSize:I\n+        28: getfield      #31                 // Field nextBackReferenceSize:I\n         31: i2l\n         32: lstore_2\n         33: aload_0\n-        34: getfield      #9                  // Field nextBackReferenceSize:I\n+        34: getfield      #31                 // Field nextBackReferenceSize:I\n         37: bipush        15\n         39: if_icmpne     49\n         42: lload_2\n         43: aload_0\n-        44: invokespecial #10                 // Method readSizeBytes:()J\n+        44: invokespecial #35                 // Method readSizeBytes:()J\n         47: ladd\n         48: lstore_2\n         49: lload_2\n         50: lconst_0\n         51: lcmp\n         52: ifge          65\n-        55: new           #8                  // class java/io/IOException\n+        55: new           #29                 // class java/io/IOException\n         58: dup\n-        59: ldc           #11                 // String Illegal block with a negative match length found\n-        61: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        59: ldc           #39                 // String Illegal block with a negative match length found\n+        61: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         64: athrow\n         65: aload_0\n         66: iload_1\n         67: lload_2\n-        68: ldc2_w        #13                 // long 4l\n+        68: ldc2_w        #44                 // long 4l\n         71: ladd\n-        72: invokevirtual #15                 // Method startBackReference:(IJ)V\n+        72: invokevirtual #46                 // Method startBackReference:(IJ)V\n         75: goto          92\n         78: astore        4\n-        80: new           #8                  // class java/io/IOException\n+        80: new           #29                 // class java/io/IOException\n         83: dup\n-        84: ldc           #17                 // String Illegal block with bad offset found\n+        84: ldc           #52                 // String Illegal block with bad offset found\n         86: aload         4\n-        88: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        88: invokespecial #54                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         91: athrow\n         92: aload_0\n-        93: getstatic     #19                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-        96: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        93: getstatic     #57                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        96: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         99: iconst_1\n        100: ireturn\n       Exception table:\n          from    to  target type\n              2    12    15   Class java/io/IOException\n             65    75    78   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n@@ -315,95 +315,95 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n-         6: getstatic     #20                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+         6: getstatic     #60                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n          9: aload_0\n-        10: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-        13: invokevirtual #21                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n+        10: getfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        13: invokevirtual #66                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n         16: iaload\n         17: tableswitch   { // 1 to 5\n                        1: 52\n                        2: 54\n                        3: 58\n                        4: 99\n                        5: 115\n                  default: 156\n             }\n         52: iconst_m1\n         53: ireturn\n         54: aload_0\n-        55: invokespecial #22                 // Method readSizes:()V\n+        55: invokespecial #70                 // Method readSizes:()V\n         58: aload_0\n         59: aload_1\n         60: iload_2\n         61: iload_3\n-        62: invokevirtual #23                 // Method readLiteral:([BII)I\n+        62: invokevirtual #74                 // Method readLiteral:([BII)I\n         65: istore        4\n         67: aload_0\n-        68: invokevirtual #24                 // Method hasMoreDataInBlock:()Z\n+        68: invokevirtual #78                 // Method hasMoreDataInBlock:()Z\n         71: ifne          81\n         74: aload_0\n-        75: getstatic     #25                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-        78: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        75: getstatic     #82                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        78: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         81: iload         4\n         83: ifle          91\n         86: iload         4\n         88: goto          98\n         91: aload_0\n         92: aload_1\n         93: iload_2\n         94: iload_3\n-        95: invokevirtual #26                 // Method read:([BII)I\n+        95: invokevirtual #85                 // Method read:([BII)I\n         98: ireturn\n         99: aload_0\n-       100: invokespecial #27                 // Method initializeBackReference:()Z\n+       100: invokespecial #88                 // Method initializeBackReference:()Z\n        103: ifne          115\n        106: aload_0\n-       107: getstatic     #28                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-       110: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       107: getstatic     #91                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       110: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n        113: iconst_m1\n        114: ireturn\n        115: aload_0\n        116: aload_1\n        117: iload_2\n        118: iload_3\n-       119: invokevirtual #29                 // Method readBackReference:([BII)I\n+       119: invokevirtual #94                 // Method readBackReference:([BII)I\n        122: istore        5\n        124: aload_0\n-       125: invokevirtual #24                 // Method hasMoreDataInBlock:()Z\n+       125: invokevirtual #78                 // Method hasMoreDataInBlock:()Z\n        128: ifne          138\n        131: aload_0\n-       132: getstatic     #4                  // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-       135: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       132: getstatic     #10                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       135: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n        138: iload         5\n        140: ifle          148\n        143: iload         5\n        145: goto          155\n        148: aload_0\n        149: aload_1\n        150: iload_2\n        151: iload_3\n-       152: invokevirtual #26                 // Method read:([BII)I\n+       152: invokevirtual #85                 // Method read:([BII)I\n        155: ireturn\n-       156: new           #8                  // class java/io/IOException\n+       156: new           #29                 // class java/io/IOException\n        159: dup\n-       160: new           #30                 // class java/lang/StringBuilder\n+       160: new           #97                 // class java/lang/StringBuilder\n        163: dup\n-       164: invokespecial #31                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       167: ldc           #32                 // String Unknown stream state\n-       169: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       164: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       167: ldc           #101                // String Unknown stream state\n+       169: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        172: aload_0\n-       173: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-       176: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       179: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       182: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       173: getfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       176: invokevirtual #107                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       179: invokevirtual #110                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       182: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        185: athrow\n       LineNumberTable:\n         line 97: 0\n         line 98: 4\n         line 100: 6\n         line 102: 52\n         line 104: 54\n@@ -448,23 +448,23 @@\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: lconst_0\n          1: lstore_1\n          2: aload_0\n-         3: invokevirtual #36                 // Method readOneByte:()I\n+         3: invokevirtual #114                // Method readOneByte:()I\n          6: istore_3\n          7: iload_3\n          8: iconst_m1\n          9: if_icmpne     22\n-        12: new           #8                  // class java/io/IOException\n+        12: new           #29                 // class java/io/IOException\n         15: dup\n-        16: ldc           #37                 // String Premature end of stream while parsing length\n-        18: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #117                // String Premature end of stream while parsing length\n+        18: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: lload_1\n         23: iload_3\n         24: i2l\n         25: ladd\n         26: lstore_1\n         27: iload_3\n@@ -492,60 +492,60 @@\n \n   private void readSizes() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokevirtual #36                 // Method readOneByte:()I\n+         1: invokevirtual #114                // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n-        10: new           #8                  // class java/io/IOException\n+        10: new           #29                 // class java/io/IOException\n         13: dup\n-        14: ldc           #38                 // String Premature end of stream while looking for next block\n-        16: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #119                // String Premature end of stream while looking for next block\n+        16: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: iload_1\n         22: bipush        15\n         24: iand\n-        25: putfield      #9                  // Field nextBackReferenceSize:I\n+        25: putfield      #31                 // Field nextBackReferenceSize:I\n         28: iload_1\n         29: sipush        240\n         32: iand\n         33: iconst_4\n         34: ishr\n         35: i2l\n         36: lstore_2\n         37: lload_2\n-        38: ldc2_w        #39                 // long 15l\n+        38: ldc2_w        #121                // long 15l\n         41: lcmp\n         42: ifne          52\n         45: lload_2\n         46: aload_0\n-        47: invokespecial #10                 // Method readSizeBytes:()J\n+        47: invokespecial #35                 // Method readSizeBytes:()J\n         50: ladd\n         51: lstore_2\n         52: lload_2\n         53: lconst_0\n         54: lcmp\n         55: ifge          68\n-        58: new           #8                  // class java/io/IOException\n+        58: new           #29                 // class java/io/IOException\n         61: dup\n-        62: ldc           #41                 // String Illegal block with a negative literal size found\n-        64: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        62: ldc           #123                // String Illegal block with a negative literal size found\n+        64: invokespecial #41                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: aload_0\n         69: lload_2\n-        70: invokevirtual #42                 // Method startLiteral:(J)V\n+        70: invokevirtual #125                // Method startLiteral:(J)V\n         73: aload_0\n-        74: getstatic     #43                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-        77: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        74: getstatic     #129                // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        77: putfield      #16                 // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         80: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 5\n         line 145: 10\n         line 147: 20\n         line 148: 28\n@@ -565,10 +565,10 @@\n           locals = [ long ]\n         frame_type = 15 /* same */\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BlockLZ4CompressorInputStream.java\"\n InnerClasses:\n-  static #45;                             // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-  private static final #48= #47 of #1;    // State=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  public static #123= #122 of #82;        // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  private static final #148= #11 of #1;   // State=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  public static #151= #149 of #24;        // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  static #61;                             // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n"}]}
