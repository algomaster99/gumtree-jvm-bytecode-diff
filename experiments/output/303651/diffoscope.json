{"diffoscope-json-version": 1, "source1": "first/HeaderCheck.class", "source2": "second/HeaderCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,100 +1,100 @@\n-  SHA-256 checksum 62fcf4e9f4d3ce719f152d6abea074d2942cfe10f759332fa56663768b3cd759\n+  SHA-256 checksum 17cbdc72b2dbd9e07bd7e92490cb775915dcdd10dabaee75e205193a7f04b68c\n   Compiled from \"HeaderCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck extends com.puppycrawl.tools.checkstyle.checks.header.AbstractHeaderCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n-  super_class: #21                        // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n+  this_class: #11                         // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n   interfaces: 0, fields: 3, methods: 6, attributes: 2\n Constant pool:\n-   #1 = Methodref          #21.#46        // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.\"<init>\":()V\n-   #2 = Class              #47            // java/util/BitSet\n-   #3 = Methodref          #2.#46         // java/util/BitSet.\"<init>\":()V\n-   #4 = Fieldref           #14.#48        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.ignoreLines:Ljava/util/BitSet;\n-   #5 = Methodref          #2.#49         // java/util/BitSet.get:(I)Z\n-   #6 = Methodref          #14.#50        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.isIgnoreLine:(I)Z\n-   #7 = Methodref          #14.#51        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.getHeaderLines:()Ljava/util/List;\n-   #8 = InterfaceMethodref #52.#53        // java/util/List.get:(I)Ljava/lang/Object;\n-   #9 = Class              #54            // java/lang/String\n-  #10 = Methodref          #9.#55         // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #11 = Methodref          #56.#57        // com/puppycrawl/tools/checkstyle/utils/TokenUtil.asBitSet:([I)Ljava/util/BitSet;\n-  #12 = InterfaceMethodref #52.#58        // java/util/List.size:()I\n-  #13 = Methodref          #59.#58        // com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n-  #14 = Class              #60            // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n-  #15 = String             #61            // header.missing\n-  #16 = Class              #62            // java/lang/Object\n-  #17 = Methodref          #14.#63        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.log:(ILjava/lang/String;[Ljava/lang/Object;)V\n-  #18 = Methodref          #59.#64        // com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n-  #19 = Methodref          #14.#65        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.isMatch:(ILjava/lang/String;)Z\n-  #20 = String             #66            // header.mismatch\n-  #21 = Class              #67            // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n-  #22 = Utf8               MSG_MISSING\n-  #23 = Utf8               Ljava/lang/String;\n-  #24 = Utf8               ConstantValue\n-  #25 = Utf8               MSG_MISMATCH\n-  #26 = Utf8               ignoreLines\n-  #27 = Utf8               Ljava/util/BitSet;\n-  #28 = Utf8               <init>\n-  #29 = Utf8               ()V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               isIgnoreLine\n-  #33 = Utf8               (I)Z\n-  #34 = Utf8               isMatch\n-  #35 = Utf8               (ILjava/lang/String;)Z\n-  #36 = Utf8               StackMapTable\n-  #37 = Utf8               setIgnoreLines\n-  #38 = Utf8               ([I)V\n-  #39 = Utf8               processFiltered\n-  #40 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n-  #41 = Utf8               postProcessHeaderLines\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               HeaderCheck.java\n-  #44 = Utf8               RuntimeVisibleAnnotations\n-  #45 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-  #46 = NameAndType        #28:#29        // \"<init>\":()V\n-  #47 = Utf8               java/util/BitSet\n-  #48 = NameAndType        #26:#27        // ignoreLines:Ljava/util/BitSet;\n-  #49 = NameAndType        #68:#33        // get:(I)Z\n-  #50 = NameAndType        #32:#33        // isIgnoreLine:(I)Z\n-  #51 = NameAndType        #69:#70        // getHeaderLines:()Ljava/util/List;\n-  #52 = Class              #71            // java/util/List\n-  #53 = NameAndType        #68:#72        // get:(I)Ljava/lang/Object;\n-  #54 = Utf8               java/lang/String\n-  #55 = NameAndType        #73:#74        // equals:(Ljava/lang/Object;)Z\n-  #56 = Class              #75            // com/puppycrawl/tools/checkstyle/utils/TokenUtil\n-  #57 = NameAndType        #76:#77        // asBitSet:([I)Ljava/util/BitSet;\n-  #58 = NameAndType        #78:#79        // size:()I\n-  #59 = Class              #80            // com/puppycrawl/tools/checkstyle/api/FileText\n-  #60 = Utf8               com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n-  #61 = Utf8               header.missing\n-  #62 = Utf8               java/lang/Object\n-  #63 = NameAndType        #81:#82        // log:(ILjava/lang/String;[Ljava/lang/Object;)V\n-  #64 = NameAndType        #68:#83        // get:(I)Ljava/lang/String;\n-  #65 = NameAndType        #34:#35        // isMatch:(ILjava/lang/String;)Z\n-  #66 = Utf8               header.mismatch\n-  #67 = Utf8               com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n-  #68 = Utf8               get\n-  #69 = Utf8               getHeaderLines\n-  #70 = Utf8               ()Ljava/util/List;\n-  #71 = Utf8               java/util/List\n-  #72 = Utf8               (I)Ljava/lang/Object;\n-  #73 = Utf8               equals\n-  #74 = Utf8               (Ljava/lang/Object;)Z\n-  #75 = Utf8               com/puppycrawl/tools/checkstyle/utils/TokenUtil\n-  #76 = Utf8               asBitSet\n-  #77 = Utf8               ([I)Ljava/util/BitSet;\n-  #78 = Utf8               size\n-  #79 = Utf8               ()I\n-  #80 = Utf8               com/puppycrawl/tools/checkstyle/api/FileText\n-  #81 = Utf8               log\n-  #82 = Utf8               (ILjava/lang/String;[Ljava/lang/Object;)V\n-  #83 = Utf8               (I)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.\"<init>\":()V\n+   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/util/BitSet\n+   #8 = Utf8               java/util/BitSet\n+   #9 = Methodref          #7.#3          // java/util/BitSet.\"<init>\":()V\n+  #10 = Fieldref           #11.#12        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.ignoreLines:Ljava/util/BitSet;\n+  #11 = Class              #13            // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n+  #12 = NameAndType        #14:#15        // ignoreLines:Ljava/util/BitSet;\n+  #13 = Utf8               com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck\n+  #14 = Utf8               ignoreLines\n+  #15 = Utf8               Ljava/util/BitSet;\n+  #16 = Methodref          #7.#17         // java/util/BitSet.get:(I)Z\n+  #17 = NameAndType        #18:#19        // get:(I)Z\n+  #18 = Utf8               get\n+  #19 = Utf8               (I)Z\n+  #20 = Methodref          #11.#21        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.isIgnoreLine:(I)Z\n+  #21 = NameAndType        #22:#19        // isIgnoreLine:(I)Z\n+  #22 = Utf8               isIgnoreLine\n+  #23 = Methodref          #11.#24        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.getHeaderLines:()Ljava/util/List;\n+  #24 = NameAndType        #25:#26        // getHeaderLines:()Ljava/util/List;\n+  #25 = Utf8               getHeaderLines\n+  #26 = Utf8               ()Ljava/util/List;\n+  #27 = InterfaceMethodref #28.#29        // java/util/List.get:(I)Ljava/lang/Object;\n+  #28 = Class              #30            // java/util/List\n+  #29 = NameAndType        #18:#31        // get:(I)Ljava/lang/Object;\n+  #30 = Utf8               java/util/List\n+  #31 = Utf8               (I)Ljava/lang/Object;\n+  #32 = Class              #33            // java/lang/String\n+  #33 = Utf8               java/lang/String\n+  #34 = Methodref          #32.#35        // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #35 = NameAndType        #36:#37        // equals:(Ljava/lang/Object;)Z\n+  #36 = Utf8               equals\n+  #37 = Utf8               (Ljava/lang/Object;)Z\n+  #38 = Methodref          #39.#40        // com/puppycrawl/tools/checkstyle/utils/TokenUtil.asBitSet:([I)Ljava/util/BitSet;\n+  #39 = Class              #41            // com/puppycrawl/tools/checkstyle/utils/TokenUtil\n+  #40 = NameAndType        #42:#43        // asBitSet:([I)Ljava/util/BitSet;\n+  #41 = Utf8               com/puppycrawl/tools/checkstyle/utils/TokenUtil\n+  #42 = Utf8               asBitSet\n+  #43 = Utf8               ([I)Ljava/util/BitSet;\n+  #44 = InterfaceMethodref #28.#45        // java/util/List.size:()I\n+  #45 = NameAndType        #46:#47        // size:()I\n+  #46 = Utf8               size\n+  #47 = Utf8               ()I\n+  #48 = Methodref          #49.#45        // com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n+  #49 = Class              #50            // com/puppycrawl/tools/checkstyle/api/FileText\n+  #50 = Utf8               com/puppycrawl/tools/checkstyle/api/FileText\n+  #51 = String             #52            // header.missing\n+  #52 = Utf8               header.missing\n+  #53 = Class              #54            // java/lang/Object\n+  #54 = Utf8               java/lang/Object\n+  #55 = Methodref          #11.#56        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+  #56 = NameAndType        #57:#58        // log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+  #57 = Utf8               log\n+  #58 = Utf8               (ILjava/lang/String;[Ljava/lang/Object;)V\n+  #59 = Methodref          #49.#60        // com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n+  #60 = NameAndType        #18:#61        // get:(I)Ljava/lang/String;\n+  #61 = Utf8               (I)Ljava/lang/String;\n+  #62 = Methodref          #11.#63        // com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.isMatch:(ILjava/lang/String;)Z\n+  #63 = NameAndType        #64:#65        // isMatch:(ILjava/lang/String;)Z\n+  #64 = Utf8               isMatch\n+  #65 = Utf8               (ILjava/lang/String;)Z\n+  #66 = String             #67            // header.mismatch\n+  #67 = Utf8               header.mismatch\n+  #68 = Utf8               MSG_MISSING\n+  #69 = Utf8               Ljava/lang/String;\n+  #70 = Utf8               ConstantValue\n+  #71 = Utf8               MSG_MISMATCH\n+  #72 = Utf8               Code\n+  #73 = Utf8               LineNumberTable\n+  #74 = Utf8               StackMapTable\n+  #75 = Utf8               setIgnoreLines\n+  #76 = Utf8               ([I)V\n+  #77 = Utf8               processFiltered\n+  #78 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n+  #79 = Utf8               postProcessHeaderLines\n+  #80 = Utf8               SourceFile\n+  #81 = Utf8               HeaderCheck.java\n+  #82 = Utf8               RuntimeVisibleAnnotations\n+  #83 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public static final java.lang.String MSG_MISSING = \"header.missing\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String header.missing\n \n   public static final java.lang.String MSG_MISMATCH = \"header.mismatch\";\n@@ -110,54 +110,54 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/checks/header/AbstractHeaderCheck.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/BitSet\n+         5: new           #7                  // class java/util/BitSet\n          8: dup\n-         9: invokespecial #3                  // Method java/util/BitSet.\"<init>\":()V\n-        12: putfield      #4                  // Field ignoreLines:Ljava/util/BitSet;\n+         9: invokespecial #9                  // Method java/util/BitSet.\"<init>\":()V\n+        12: putfield      #10                 // Field ignoreLines:Ljava/util/BitSet;\n         15: return\n       LineNumberTable:\n         line 104: 0\n         line 119: 4\n \n   private boolean isIgnoreLine(int);\n     descriptor: (I)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field ignoreLines:Ljava/util/BitSet;\n+         1: getfield      #10                 // Field ignoreLines:Ljava/util/BitSet;\n          4: iload_1\n-         5: invokevirtual #5                  // Method java/util/BitSet.get:(I)Z\n+         5: invokevirtual #16                 // Method java/util/BitSet.get:(I)Z\n          8: ireturn\n       LineNumberTable:\n         line 128: 0\n \n   private boolean isMatch(int, java.lang.String);\n     descriptor: (ILjava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iconst_1\n          3: iadd\n-         4: invokevirtual #6                  // Method isIgnoreLine:(I)Z\n+         4: invokevirtual #20                 // Method isIgnoreLine:(I)Z\n          7: ifne          30\n         10: aload_0\n-        11: invokevirtual #7                  // Method getHeaderLines:()Ljava/util/List;\n+        11: invokevirtual #23                 // Method getHeaderLines:()Ljava/util/List;\n         14: iload_1\n-        15: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        20: checkcast     #9                  // class java/lang/String\n+        15: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        20: checkcast     #32                 // class java/lang/String\n         23: aload_2\n-        24: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        24: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         27: ifeq          34\n         30: iconst_1\n         31: goto          35\n         34: iconst_0\n         35: ireturn\n       LineNumberTable:\n         line 140: 0\n@@ -172,68 +172,68 @@\n   public void setIgnoreLines(int...);\n     descriptor: ([I)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #11                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.asBitSet:([I)Ljava/util/BitSet;\n-         5: putfield      #4                  // Field ignoreLines:Ljava/util/BitSet;\n+         2: invokestatic  #38                 // Method com/puppycrawl/tools/checkstyle/utils/TokenUtil.asBitSet:([I)Ljava/util/BitSet;\n+         5: putfield      #10                 // Field ignoreLines:Ljava/util/BitSet;\n          8: return\n       LineNumberTable:\n         line 151: 0\n         line 152: 8\n \n   protected void processFiltered(java.io.File, com.puppycrawl.tools.checkstyle.api.FileText);\n     descriptor: (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=8, locals=4, args_size=3\n          0: aload_0\n-         1: invokevirtual #7                  // Method getHeaderLines:()Ljava/util/List;\n-         4: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I\n+         1: invokevirtual #23                 // Method getHeaderLines:()Ljava/util/List;\n+         4: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I\n          9: aload_2\n-        10: invokevirtual #13                 // Method com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n+        10: invokevirtual #48                 // Method com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n         13: if_icmple     30\n         16: aload_0\n         17: iconst_1\n-        18: ldc           #15                 // String header.missing\n+        18: ldc           #51                 // String header.missing\n         20: iconst_0\n-        21: anewarray     #16                 // class java/lang/Object\n-        24: invokevirtual #17                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+        21: anewarray     #53                 // class java/lang/Object\n+        24: invokevirtual #55                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n         27: goto          93\n         30: iconst_0\n         31: istore_3\n         32: iload_3\n         33: aload_0\n-        34: invokevirtual #7                  // Method getHeaderLines:()Ljava/util/List;\n-        37: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I\n+        34: invokevirtual #23                 // Method getHeaderLines:()Ljava/util/List;\n+        37: invokeinterface #44,  1           // InterfaceMethod java/util/List.size:()I\n         42: if_icmpge     93\n         45: aload_0\n         46: iload_3\n         47: aload_2\n         48: iload_3\n-        49: invokevirtual #18                 // Method com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n-        52: invokevirtual #19                 // Method isMatch:(ILjava/lang/String;)Z\n+        49: invokevirtual #59                 // Method com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n+        52: invokevirtual #62                 // Method isMatch:(ILjava/lang/String;)Z\n         55: ifne          87\n         58: aload_0\n         59: iload_3\n         60: iconst_1\n         61: iadd\n-        62: ldc           #20                 // String header.mismatch\n+        62: ldc           #66                 // String header.mismatch\n         64: iconst_1\n-        65: anewarray     #16                 // class java/lang/Object\n+        65: anewarray     #53                 // class java/lang/Object\n         68: dup\n         69: iconst_0\n         70: aload_0\n-        71: invokevirtual #7                  // Method getHeaderLines:()Ljava/util/List;\n+        71: invokevirtual #23                 // Method getHeaderLines:()Ljava/util/List;\n         74: iload_3\n-        75: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        75: invokeinterface #27,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n         80: aastore\n-        81: invokevirtual #17                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+        81: invokevirtual #55                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n         84: goto          93\n         87: iinc          3, 1\n         90: goto          32\n         93: return\n       LineNumberTable:\n         line 156: 0\n         line 157: 16\n@@ -259,9 +259,9 @@\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 172: 0\n }\n SourceFile: \"HeaderCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #45()\n+  0: #83()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
