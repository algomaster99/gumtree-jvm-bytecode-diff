{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIOutputStream.class", "source2": "second/FromNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,70 +1,70 @@\n-  SHA-256 checksum 0eb2fc1c96b0351034419c37f94d9c05736f387b7153b5bf994470a0c9a35176\n+  SHA-256 checksum 5594491258f449f3cf60fa9e486b7718ded15f4427c80d13a5714f73f6d70784\n   Compiled from \"FromNetASCIIOutputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  super_class: #13                        // java/io/FilterOutputStream\n+  this_class: #8                          // org/apache/commons/net/io/FromNetASCIIOutputStream\n+  super_class: #2                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#32        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #12.#33        // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n-   #3 = Fieldref           #34.#35        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-   #4 = Methodref          #13.#36        // java/io/FilterOutputStream.close:()V\n-   #5 = Fieldref           #12.#37        // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n-   #6 = Methodref          #38.#39        // java/io/OutputStream.write:(I)V\n-   #7 = Methodref          #12.#40        // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n-   #8 = Methodref          #38.#40        // java/io/OutputStream.write:([BII)V\n-   #9 = Methodref          #12.#41        // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n-  #10 = Fieldref           #34.#42        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-  #11 = Methodref          #38.#43        // java/io/OutputStream.write:([B)V\n-  #12 = Class              #44            // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #13 = Class              #45            // java/io/FilterOutputStream\n-  #14 = Utf8               lastWasCR\n-  #15 = Utf8               Z\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/io/OutputStream;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n+   #1 = Methodref          #2.#3          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Class              #4             // java/io/FilterOutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n+   #8 = Class              #10            // org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #9 = NameAndType        #11:#12        // lastWasCR:Z\n+  #10 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n+  #11 = Utf8               lastWasCR\n+  #12 = Utf8               Z\n+  #13 = Fieldref           #14.#15        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+  #14 = Class              #16            // org/apache/commons/net/io/FromNetASCIIInputStream\n+  #15 = NameAndType        #17:#12        // _noConversionRequired:Z\n+  #16 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+  #17 = Utf8               _noConversionRequired\n+  #18 = Methodref          #2.#19         // java/io/FilterOutputStream.close:()V\n+  #19 = NameAndType        #20:#21        // close:()V\n   #20 = Utf8               close\n   #21 = Utf8               ()V\n-  #22 = Utf8               StackMapTable\n-  #23 = Utf8               Exceptions\n-  #24 = Class              #46            // java/io/IOException\n-  #25 = Utf8               write\n-  #26 = Utf8               ([B)V\n-  #27 = Utf8               ([BII)V\n-  #28 = Utf8               (I)V\n-  #29 = Utf8               writeInt\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               FromNetASCIIOutputStream.java\n-  #32 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #33 = NameAndType        #14:#15        // lastWasCR:Z\n-  #34 = Class              #47            // org/apache/commons/net/io/FromNetASCIIInputStream\n-  #35 = NameAndType        #48:#15        // _noConversionRequired:Z\n-  #36 = NameAndType        #20:#21        // close:()V\n-  #37 = NameAndType        #49:#50        // out:Ljava/io/OutputStream;\n-  #38 = Class              #51            // java/io/OutputStream\n-  #39 = NameAndType        #25:#28        // write:(I)V\n-  #40 = NameAndType        #25:#27        // write:([BII)V\n-  #41 = NameAndType        #29:#28        // writeInt:(I)V\n-  #42 = NameAndType        #52:#53        // _lineSeparatorBytes:[B\n-  #43 = NameAndType        #25:#26        // write:([B)V\n-  #44 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #45 = Utf8               java/io/FilterOutputStream\n-  #46 = Utf8               java/io/IOException\n-  #47 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #48 = Utf8               _noConversionRequired\n-  #49 = Utf8               out\n-  #50 = Utf8               Ljava/io/OutputStream;\n-  #51 = Utf8               java/io/OutputStream\n-  #52 = Utf8               _lineSeparatorBytes\n-  #53 = Utf8               [B\n+  #22 = Fieldref           #8.#23         // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n+  #23 = NameAndType        #24:#25        // out:Ljava/io/OutputStream;\n+  #24 = Utf8               out\n+  #25 = Utf8               Ljava/io/OutputStream;\n+  #26 = Methodref          #27.#28        // java/io/OutputStream.write:(I)V\n+  #27 = Class              #29            // java/io/OutputStream\n+  #28 = NameAndType        #30:#31        // write:(I)V\n+  #29 = Utf8               java/io/OutputStream\n+  #30 = Utf8               write\n+  #31 = Utf8               (I)V\n+  #32 = Methodref          #8.#33         // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n+  #33 = NameAndType        #30:#34        // write:([BII)V\n+  #34 = Utf8               ([BII)V\n+  #35 = Methodref          #27.#33        // java/io/OutputStream.write:([BII)V\n+  #36 = Methodref          #8.#37         // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n+  #37 = NameAndType        #38:#31        // writeInt:(I)V\n+  #38 = Utf8               writeInt\n+  #39 = Fieldref           #14.#40        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+  #40 = NameAndType        #41:#42        // _lineSeparatorBytes:[B\n+  #41 = Utf8               _lineSeparatorBytes\n+  #42 = Utf8               [B\n+  #43 = Methodref          #27.#44        // java/io/OutputStream.write:([B)V\n+  #44 = NameAndType        #30:#45        // write:([B)V\n+  #45 = Utf8               ([B)V\n+  #46 = Utf8               Code\n+  #47 = Utf8               LineNumberTable\n+  #48 = Utf8               StackMapTable\n+  #49 = Utf8               Exceptions\n+  #50 = Class              #51            // java/io/IOException\n+  #51 = Utf8               java/io/IOException\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               FromNetASCIIOutputStream.java\n {\n   private boolean lastWasCR;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.net.io.FromNetASCIIOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n@@ -72,40 +72,40 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #2                  // Field lastWasCR:Z\n+         7: putfield      #7                  // Field lastWasCR:Z\n         10: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 5\n         line 46: 10\n \n   public synchronized void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #3                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          11\n          6: aload_0\n-         7: invokespecial #4                  // Method java/io/FilterOutputStream.close:()V\n+         7: invokespecial #18                 // Method java/io/FilterOutputStream.close:()V\n         10: return\n         11: aload_0\n-        12: getfield      #2                  // Field lastWasCR:Z\n+        12: getfield      #7                  // Field lastWasCR:Z\n         15: ifeq          27\n         18: aload_0\n-        19: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+        19: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         22: bipush        13\n-        24: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        24: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n         27: aload_0\n-        28: invokespecial #4                  // Method java/io/FilterOutputStream.close:()V\n+        28: invokespecial #18                 // Method java/io/FilterOutputStream.close:()V\n         31: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 6\n         line 57: 10\n         line 60: 11\n         line 61: 18\n@@ -123,45 +123,45 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #7                  // Method write:([BII)V\n+         5: invokevirtual #32                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 74: 0\n         line 75: 8\n     Exceptions:\n       throws java.io.IOException\n \n   public synchronized void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=4, args_size=4\n-         0: getstatic     #3                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          17\n          6: aload_0\n-         7: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V\n+        13: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V\n         16: return\n         17: iload_3\n         18: iinc          3, -1\n         21: ifle          37\n         24: aload_0\n         25: aload_1\n         26: iload_2\n         27: iinc          2, 1\n         30: baload\n-        31: invokespecial #9                  // Method writeInt:(I)V\n+        31: invokespecial #36                 // Method writeInt:(I)V\n         34: goto          17\n         37: return\n       LineNumberTable:\n         line 87: 0\n         line 90: 6\n         line 91: 16\n         line 94: 17\n@@ -174,24 +174,24 @@\n       throws java.io.IOException\n \n   public synchronized void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #3                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #13                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          15\n          6: aload_0\n-         7: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         10: iload_1\n-        11: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n         14: return\n         15: aload_0\n         16: iload_1\n-        17: invokespecial #9                  // Method writeInt:(I)V\n+        17: invokespecial #36                 // Method writeInt:(I)V\n         20: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 6\n         line 111: 14\n         line 114: 15\n         line 115: 20\n@@ -209,46 +209,46 @@\n          1: lookupswitch  { // 2\n                       10: 36\n                       13: 28\n                  default: 73\n             }\n         28: aload_0\n         29: iconst_1\n-        30: putfield      #2                  // Field lastWasCR:Z\n+        30: putfield      #7                  // Field lastWasCR:Z\n         33: goto          102\n         36: aload_0\n-        37: getfield      #2                  // Field lastWasCR:Z\n+        37: getfield      #7                  // Field lastWasCR:Z\n         40: ifeq          61\n         43: aload_0\n-        44: getfield      #5                  // Field out:Ljava/io/OutputStream;\n-        47: getstatic     #10                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-        50: invokevirtual #11                 // Method java/io/OutputStream.write:([B)V\n+        44: getfield      #22                 // Field out:Ljava/io/OutputStream;\n+        47: getstatic     #39                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+        50: invokevirtual #43                 // Method java/io/OutputStream.write:([B)V\n         53: aload_0\n         54: iconst_0\n-        55: putfield      #2                  // Field lastWasCR:Z\n+        55: putfield      #7                  // Field lastWasCR:Z\n         58: goto          102\n         61: aload_0\n-        62: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+        62: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         65: bipush        10\n-        67: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        67: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n         70: goto          102\n         73: aload_0\n-        74: getfield      #2                  // Field lastWasCR:Z\n+        74: getfield      #7                  // Field lastWasCR:Z\n         77: ifeq          94\n         80: aload_0\n-        81: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+        81: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         84: bipush        13\n-        86: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        86: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n         89: aload_0\n         90: iconst_0\n-        91: putfield      #2                  // Field lastWasCR:Z\n+        91: putfield      #7                  // Field lastWasCR:Z\n         94: aload_0\n-        95: getfield      #5                  // Field out:Ljava/io/OutputStream;\n+        95: getfield      #22                 // Field out:Ljava/io/OutputStream;\n         98: iload_1\n-        99: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        99: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n        102: return\n       LineNumberTable:\n         line 118: 0\n         line 120: 28\n         line 122: 33\n         line 124: 36\n         line 125: 43\n"}]}
