{"diffoscope-json-version": 1, "source1": "first/ChecksumCalculatingInputStream.class", "source2": "second/ChecksumCalculatingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum 20f3beba54703387b127021d4a0723078543cca7536c2dda4ef50b307a6f1126\n+  SHA-256 checksum bc1241b884b977be1ba04ed38004d605ce0811213df9115c709d4ac3e004921a\n   Compiled from \"ChecksumCalculatingInputStream.java\"\n public class org.apache.commons.compress.utils.ChecksumCalculatingInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  super_class: #15                        // java/io/InputStream\n+  this_class: #18                         // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  super_class: #2                         // java/io/InputStream\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #15.#49        // java/io/InputStream.\"<init>\":()V\n-   #2 = String             #18            // checksum\n-   #3 = Methodref          #50.#51        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #4 = String             #16            // in\n-   #5 = Fieldref           #14.#52        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.checksum:Ljava/util/zip/Checksum;\n-   #6 = Fieldref           #14.#53        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.in:Ljava/io/InputStream;\n-   #7 = Methodref          #15.#54        // java/io/InputStream.read:()I\n-   #8 = InterfaceMethodref #55.#56        // java/util/zip/Checksum.update:(I)V\n-   #9 = Methodref          #14.#57        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.read:([BII)I\n-  #10 = Methodref          #15.#57        // java/io/InputStream.read:([BII)I\n-  #11 = InterfaceMethodref #55.#58        // java/util/zip/Checksum.update:([BII)V\n-  #12 = Methodref          #14.#54        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.read:()I\n-  #13 = InterfaceMethodref #55.#59        // java/util/zip/Checksum.getValue:()J\n-  #14 = Class              #60            // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #15 = Class              #61            // java/io/InputStream\n+   #1 = Methodref          #2.#3          // java/io/InputStream.\"<init>\":()V\n+   #2 = Class              #4             // java/io/InputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = String             #8             // checksum\n+   #8 = Utf8               checksum\n+   #9 = Methodref          #10.#11        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #10 = Class              #12            // java/util/Objects\n+  #11 = NameAndType        #13:#14        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #12 = Utf8               java/util/Objects\n+  #13 = Utf8               requireNonNull\n+  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #15 = String             #16            // in\n   #16 = Utf8               in\n-  #17 = Utf8               Ljava/io/InputStream;\n-  #18 = Utf8               checksum\n-  #19 = Utf8               Ljava/util/zip/Checksum;\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               this\n-  #26 = Utf8               Lorg/apache/commons/compress/utils/ChecksumCalculatingInputStream;\n-  #27 = Utf8               inputStream\n-  #28 = Utf8               read\n-  #29 = Utf8               ()I\n-  #30 = Utf8               ret\n-  #31 = Utf8               I\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               Exceptions\n-  #34 = Class              #62            // java/io/IOException\n-  #35 = Utf8               ([B)I\n-  #36 = Utf8               b\n-  #37 = Utf8               [B\n-  #38 = Utf8               ([BII)I\n-  #39 = Utf8               off\n-  #40 = Utf8               len\n-  #41 = Utf8               skip\n-  #42 = Utf8               (J)J\n-  #43 = Utf8               n\n-  #44 = Utf8               J\n+  #17 = Fieldref           #18.#19        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.checksum:Ljava/util/zip/Checksum;\n+  #18 = Class              #20            // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #19 = NameAndType        #8:#21         // checksum:Ljava/util/zip/Checksum;\n+  #20 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #21 = Utf8               Ljava/util/zip/Checksum;\n+  #22 = Fieldref           #18.#23        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.in:Ljava/io/InputStream;\n+  #23 = NameAndType        #16:#24        // in:Ljava/io/InputStream;\n+  #24 = Utf8               Ljava/io/InputStream;\n+  #25 = Methodref          #2.#26         // java/io/InputStream.read:()I\n+  #26 = NameAndType        #27:#28        // read:()I\n+  #27 = Utf8               read\n+  #28 = Utf8               ()I\n+  #29 = InterfaceMethodref #30.#31        // java/util/zip/Checksum.update:(I)V\n+  #30 = Class              #32            // java/util/zip/Checksum\n+  #31 = NameAndType        #33:#34        // update:(I)V\n+  #32 = Utf8               java/util/zip/Checksum\n+  #33 = Utf8               update\n+  #34 = Utf8               (I)V\n+  #35 = Methodref          #18.#36        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.read:([BII)I\n+  #36 = NameAndType        #27:#37        // read:([BII)I\n+  #37 = Utf8               ([BII)I\n+  #38 = Methodref          #2.#36         // java/io/InputStream.read:([BII)I\n+  #39 = InterfaceMethodref #30.#40        // java/util/zip/Checksum.update:([BII)V\n+  #40 = NameAndType        #33:#41        // update:([BII)V\n+  #41 = Utf8               ([BII)V\n+  #42 = Methodref          #18.#26        // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.read:()I\n+  #43 = InterfaceMethodref #30.#44        // java/util/zip/Checksum.getValue:()J\n+  #44 = NameAndType        #45:#46        // getValue:()J\n   #45 = Utf8               getValue\n   #46 = Utf8               ()J\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               ChecksumCalculatingInputStream.java\n-  #49 = NameAndType        #20:#63        // \"<init>\":()V\n-  #50 = Class              #64            // java/util/Objects\n-  #51 = NameAndType        #65:#66        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #52 = NameAndType        #18:#19        // checksum:Ljava/util/zip/Checksum;\n-  #53 = NameAndType        #16:#17        // in:Ljava/io/InputStream;\n-  #54 = NameAndType        #28:#29        // read:()I\n-  #55 = Class              #67            // java/util/zip/Checksum\n-  #56 = NameAndType        #68:#69        // update:(I)V\n-  #57 = NameAndType        #28:#38        // read:([BII)I\n-  #58 = NameAndType        #68:#70        // update:([BII)V\n-  #59 = NameAndType        #45:#46        // getValue:()J\n-  #60 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #61 = Utf8               java/io/InputStream\n-  #62 = Utf8               java/io/IOException\n-  #63 = Utf8               ()V\n-  #64 = Utf8               java/util/Objects\n-  #65 = Utf8               requireNonNull\n-  #66 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #67 = Utf8               java/util/zip/Checksum\n-  #68 = Utf8               update\n-  #69 = Utf8               (I)V\n-  #70 = Utf8               ([BII)V\n+  #47 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               this\n+  #52 = Utf8               Lorg/apache/commons/compress/utils/ChecksumCalculatingInputStream;\n+  #53 = Utf8               inputStream\n+  #54 = Utf8               ret\n+  #55 = Utf8               I\n+  #56 = Utf8               StackMapTable\n+  #57 = Utf8               Exceptions\n+  #58 = Class              #59            // java/io/IOException\n+  #59 = Utf8               java/io/IOException\n+  #60 = Utf8               ([B)I\n+  #61 = Utf8               b\n+  #62 = Utf8               [B\n+  #63 = Utf8               off\n+  #64 = Utf8               len\n+  #65 = Utf8               skip\n+  #66 = Utf8               (J)J\n+  #67 = Utf8               n\n+  #68 = Utf8               J\n+  #69 = Utf8               SourceFile\n+  #70 = Utf8               ChecksumCalculatingInputStream.java\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.zip.Checksum checksum;\n     descriptor: Ljava/util/zip/Checksum;\n@@ -91,27 +91,27 @@\n     descriptor: (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_1\n-         5: ldc           #2                  // String checksum\n-         7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         5: ldc           #7                  // String checksum\n+         7: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         10: pop\n         11: aload_2\n-        12: ldc           #4                  // String in\n-        14: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        12: ldc           #15                 // String in\n+        14: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         17: pop\n         18: aload_0\n         19: aload_1\n-        20: putfield      #5                  // Field checksum:Ljava/util/zip/Checksum;\n+        20: putfield      #17                 // Field checksum:Ljava/util/zip/Checksum;\n         23: aload_0\n         24: aload_2\n-        25: putfield      #6                  // Field in:Ljava/io/InputStream;\n+        25: putfield      #22                 // Field in:Ljava/io/InputStream;\n         28: return\n       LineNumberTable:\n         line 34: 0\n         line 36: 4\n         line 37: 11\n         line 39: 18\n         line 40: 23\n@@ -124,23 +124,23 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #7                  // Method java/io/InputStream.read:()I\n+         1: getfield      #22                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #25                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iflt          22\n         12: aload_0\n-        13: getfield      #5                  // Field checksum:Ljava/util/zip/Checksum;\n+        13: getfield      #17                 // Field checksum:Ljava/util/zip/Checksum;\n         16: iload_1\n-        17: invokeinterface #8,  2            // InterfaceMethod java/util/zip/Checksum.update:(I)V\n+        17: invokeinterface #29,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 51: 0\n         line 52: 8\n         line 53: 12\n         line 55: 22\n@@ -161,15 +161,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #9                  // Method read:([BII)I\n+         5: invokevirtual #35                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 66: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/utils/ChecksumCalculatingInputStream;\n             0       9     1     b   [B\n@@ -182,28 +182,28 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #6                  // Field in:Ljava/io/InputStream;\n+         7: getfield      #22                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #10                 // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #38                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iflt          36\n         23: aload_0\n-        24: getfield      #5                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #17                 // Field checksum:Ljava/util/zip/Checksum;\n         27: aload_1\n         28: iload_2\n         29: iload         4\n-        31: invokeinterface #11,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n+        31: invokeinterface #39,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n         36: iload         4\n         38: ireturn\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 80: 6\n         line 81: 18\n@@ -226,15 +226,15 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #12                 // Method read:()I\n+         1: invokevirtual #42                 // Method read:()I\n          4: iflt          9\n          7: lconst_1\n          8: lreturn\n          9: lconst_0\n         10: lreturn\n       LineNumberTable:\n         line 90: 0\n@@ -251,16 +251,16 @@\n \n   public long getValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field checksum:Ljava/util/zip/Checksum;\n-         4: invokeinterface #13,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+         1: getfield      #17                 // Field checksum:Ljava/util/zip/Checksum;\n+         4: invokeinterface #43,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n          9: lreturn\n       LineNumberTable:\n         line 101: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/utils/ChecksumCalculatingInputStream;\n }\n"}]}
