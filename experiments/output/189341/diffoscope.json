{"diffoscope-json-version": 1, "source1": "first/Parameters$Builder.class", "source2": "second/Parameters$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,140 @@\n-  SHA-256 checksum a090ef48903178df7cb7289c8cf3c3ac3d6a01f2c06481764bc13169a7544790\n+  SHA-256 checksum 3616ef700385991e34fccf45d50eb11b5a9d70bf88d38609a32a5801dba44458\n   Compiled from \"Parameters.java\"\n public class org.apache.commons.compress.compressors.lz77support.Parameters$Builder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #25                         // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  super_class: #26                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+  super_class: #10                        // java/lang/Object\n   interfaces: 0, fields: 9, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Class              #76           // org/apache/commons/compress/compressors/lz77support/Parameters\n-    #2 = Methodref          #25.#77       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.\"<init>\":(I)V\n-    #3 = Methodref          #26.#78       // java/lang/Object.\"<init>\":()V\n-    #4 = Methodref          #1.#79        // org/apache/commons/compress/compressors/lz77support/Parameters.access$000:(I)Z\n-    #5 = Class              #80           // java/lang/IllegalArgumentException\n-    #6 = String             #81           // windowSize must be a power of two\n-    #7 = Methodref          #5.#82        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Fieldref           #25.#83       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.windowSize:I\n-    #9 = Fieldref           #25.#84       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.minBackReferenceLength:I\n-   #10 = Fieldref           #25.#85       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxBackReferenceLength:I\n-   #11 = Fieldref           #25.#86       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxOffset:I\n-   #12 = Fieldref           #25.#87       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxLiteralLength:I\n-   #13 = Fieldref           #25.#88       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.niceBackReferenceLength:Ljava/lang/Integer;\n-   #14 = Methodref          #89.#90       // java/lang/Integer.intValue:()I\n-   #15 = Methodref          #91.#92       // java/lang/Math.max:(II)I\n-   #16 = Fieldref           #25.#93       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxCandidates:Ljava/lang/Integer;\n-   #17 = Fieldref           #25.#94       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.lazyMatches:Ljava/lang/Boolean;\n-   #18 = Methodref          #95.#96       // java/lang/Boolean.booleanValue:()Z\n-   #19 = Fieldref           #25.#97       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.lazyThreshold:Ljava/lang/Integer;\n-   #20 = Methodref          #1.#98        // org/apache/commons/compress/compressors/lz77support/Parameters.\"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n-   #21 = Methodref          #89.#99       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #22 = Methodref          #95.#100      // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-   #23 = Methodref          #91.#101      // java/lang/Math.min:(II)I\n-   #24 = String             #102          // minBackReferenceLength can\\'t be bigger than windowSize\n-   #25 = Class              #103          // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-   #26 = Class              #104          // java/lang/Object\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lz77support/Parameters\n+    #2 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+    #3 = Methodref          #4.#5         // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.\"<init>\":(I)V\n+    #4 = Class              #6            // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+    #5 = NameAndType        #7:#8         // \"<init>\":(I)V\n+    #6 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (I)V\n+    #9 = Methodref          #10.#11       // java/lang/Object.\"<init>\":()V\n+   #10 = Class              #12           // java/lang/Object\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/lang/Object\n+   #13 = Utf8               ()V\n+   #14 = Methodref          #1.#15        // org/apache/commons/compress/compressors/lz77support/Parameters.access$000:(I)Z\n+   #15 = NameAndType        #16:#17       // access$000:(I)Z\n+   #16 = Utf8               access$000\n+   #17 = Utf8               (I)Z\n+   #18 = Class              #19           // java/lang/IllegalArgumentException\n+   #19 = Utf8               java/lang/IllegalArgumentException\n+   #20 = String             #21           // windowSize must be a power of two\n+   #21 = Utf8               windowSize must be a power of two\n+   #22 = Methodref          #18.#23       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = NameAndType        #7:#24        // \"<init>\":(Ljava/lang/String;)V\n+   #24 = Utf8               (Ljava/lang/String;)V\n+   #25 = Fieldref           #4.#26        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.windowSize:I\n+   #26 = NameAndType        #27:#28       // windowSize:I\n    #27 = Utf8               windowSize\n    #28 = Utf8               I\n-   #29 = Utf8               minBackReferenceLength\n-   #30 = Utf8               maxBackReferenceLength\n-   #31 = Utf8               maxOffset\n-   #32 = Utf8               maxLiteralLength\n-   #33 = Utf8               niceBackReferenceLength\n-   #34 = Utf8               Ljava/lang/Integer;\n-   #35 = Utf8               maxCandidates\n-   #36 = Utf8               lazyThreshold\n-   #37 = Utf8               lazyMatches\n-   #38 = Utf8               Ljava/lang/Boolean;\n-   #39 = Utf8               <init>\n-   #40 = Utf8               (I)V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Builder\n-   #46 = Utf8               InnerClasses\n-   #47 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #48 = Utf8               StackMapTable\n-   #49 = Utf8               build\n-   #50 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #51 = Utf8               niceLen\n-   #52 = Utf8               candidates\n-   #53 = Utf8               lazy\n-   #54 = Utf8               Z\n-   #55 = Utf8               threshold\n-   #56 = Utf8               tunedForCompressionRatio\n-   #57 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #58 = Utf8               tunedForSpeed\n-   #59 = Utf8               withLazyMatching\n-   #60 = Utf8               (Z)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #61 = Utf8               withLazyThreshold\n-   #62 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #63 = Utf8               withMaxBackReferenceLength\n-   #64 = Utf8               withMaxLiteralLength\n-   #65 = Utf8               withMaxNumberOfCandidates\n-   #66 = Utf8               withMaxOffset\n-   #67 = Utf8               withMinBackReferenceLength\n-   #68 = Utf8               withNiceBackReferenceLength\n-   #69 = Class              #105          // org/apache/commons/compress/compressors/lz77support/Parameters$1\n-   #70 = Utf8               (ILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n-   #71 = Utf8               x0\n-   #72 = Utf8               x1\n-   #73 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters$1;\n-   #74 = Utf8               SourceFile\n-   #75 = Utf8               Parameters.java\n-   #76 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n-   #77 = NameAndType        #39:#40       // \"<init>\":(I)V\n-   #78 = NameAndType        #39:#106      // \"<init>\":()V\n-   #79 = NameAndType        #107:#108     // access$000:(I)Z\n-   #80 = Utf8               java/lang/IllegalArgumentException\n-   #81 = Utf8               windowSize must be a power of two\n-   #82 = NameAndType        #39:#109      // \"<init>\":(Ljava/lang/String;)V\n-   #83 = NameAndType        #27:#28       // windowSize:I\n-   #84 = NameAndType        #29:#28       // minBackReferenceLength:I\n-   #85 = NameAndType        #30:#28       // maxBackReferenceLength:I\n-   #86 = NameAndType        #31:#28       // maxOffset:I\n-   #87 = NameAndType        #32:#28       // maxLiteralLength:I\n-   #88 = NameAndType        #33:#34       // niceBackReferenceLength:Ljava/lang/Integer;\n-   #89 = Class              #110          // java/lang/Integer\n-   #90 = NameAndType        #111:#112     // intValue:()I\n-   #91 = Class              #113          // java/lang/Math\n-   #92 = NameAndType        #114:#115     // max:(II)I\n-   #93 = NameAndType        #35:#34       // maxCandidates:Ljava/lang/Integer;\n-   #94 = NameAndType        #37:#38       // lazyMatches:Ljava/lang/Boolean;\n-   #95 = Class              #116          // java/lang/Boolean\n-   #96 = NameAndType        #117:#118     // booleanValue:()Z\n-   #97 = NameAndType        #36:#34       // lazyThreshold:Ljava/lang/Integer;\n-   #98 = NameAndType        #39:#119      // \"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n-   #99 = NameAndType        #120:#121     // valueOf:(I)Ljava/lang/Integer;\n-  #100 = NameAndType        #120:#122     // valueOf:(Z)Ljava/lang/Boolean;\n-  #101 = NameAndType        #123:#115     // min:(II)I\n-  #102 = Utf8               minBackReferenceLength can\\'t be bigger than windowSize\n-  #103 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #104 = Utf8               java/lang/Object\n-  #105 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$1\n-  #106 = Utf8               ()V\n-  #107 = Utf8               access$000\n-  #108 = Utf8               (I)Z\n-  #109 = Utf8               (Ljava/lang/String;)V\n-  #110 = Utf8               java/lang/Integer\n-  #111 = Utf8               intValue\n-  #112 = Utf8               ()I\n-  #113 = Utf8               java/lang/Math\n-  #114 = Utf8               max\n-  #115 = Utf8               (II)I\n-  #116 = Utf8               java/lang/Boolean\n-  #117 = Utf8               booleanValue\n-  #118 = Utf8               ()Z\n-  #119 = Utf8               (IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n-  #120 = Utf8               valueOf\n-  #121 = Utf8               (I)Ljava/lang/Integer;\n-  #122 = Utf8               (Z)Ljava/lang/Boolean;\n-  #123 = Utf8               min\n+   #29 = Fieldref           #4.#30        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.minBackReferenceLength:I\n+   #30 = NameAndType        #31:#28       // minBackReferenceLength:I\n+   #31 = Utf8               minBackReferenceLength\n+   #32 = Fieldref           #4.#33        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxBackReferenceLength:I\n+   #33 = NameAndType        #34:#28       // maxBackReferenceLength:I\n+   #34 = Utf8               maxBackReferenceLength\n+   #35 = Fieldref           #4.#36        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxOffset:I\n+   #36 = NameAndType        #37:#28       // maxOffset:I\n+   #37 = Utf8               maxOffset\n+   #38 = Fieldref           #4.#39        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxLiteralLength:I\n+   #39 = NameAndType        #40:#28       // maxLiteralLength:I\n+   #40 = Utf8               maxLiteralLength\n+   #41 = Fieldref           #4.#42        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.niceBackReferenceLength:Ljava/lang/Integer;\n+   #42 = NameAndType        #43:#44       // niceBackReferenceLength:Ljava/lang/Integer;\n+   #43 = Utf8               niceBackReferenceLength\n+   #44 = Utf8               Ljava/lang/Integer;\n+   #45 = Methodref          #46.#47       // java/lang/Integer.intValue:()I\n+   #46 = Class              #48           // java/lang/Integer\n+   #47 = NameAndType        #49:#50       // intValue:()I\n+   #48 = Utf8               java/lang/Integer\n+   #49 = Utf8               intValue\n+   #50 = Utf8               ()I\n+   #51 = Methodref          #52.#53       // java/lang/Math.max:(II)I\n+   #52 = Class              #54           // java/lang/Math\n+   #53 = NameAndType        #55:#56       // max:(II)I\n+   #54 = Utf8               java/lang/Math\n+   #55 = Utf8               max\n+   #56 = Utf8               (II)I\n+   #57 = Fieldref           #4.#58        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.maxCandidates:Ljava/lang/Integer;\n+   #58 = NameAndType        #59:#44       // maxCandidates:Ljava/lang/Integer;\n+   #59 = Utf8               maxCandidates\n+   #60 = Fieldref           #4.#61        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.lazyMatches:Ljava/lang/Boolean;\n+   #61 = NameAndType        #62:#63       // lazyMatches:Ljava/lang/Boolean;\n+   #62 = Utf8               lazyMatches\n+   #63 = Utf8               Ljava/lang/Boolean;\n+   #64 = Methodref          #65.#66       // java/lang/Boolean.booleanValue:()Z\n+   #65 = Class              #67           // java/lang/Boolean\n+   #66 = NameAndType        #68:#69       // booleanValue:()Z\n+   #67 = Utf8               java/lang/Boolean\n+   #68 = Utf8               booleanValue\n+   #69 = Utf8               ()Z\n+   #70 = Fieldref           #4.#71        // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.lazyThreshold:Ljava/lang/Integer;\n+   #71 = NameAndType        #72:#44       // lazyThreshold:Ljava/lang/Integer;\n+   #72 = Utf8               lazyThreshold\n+   #73 = Methodref          #1.#74        // org/apache/commons/compress/compressors/lz77support/Parameters.\"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n+   #74 = NameAndType        #7:#75        // \"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n+   #75 = Utf8               (IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n+   #76 = Methodref          #46.#77       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #77 = NameAndType        #78:#79       // valueOf:(I)Ljava/lang/Integer;\n+   #78 = Utf8               valueOf\n+   #79 = Utf8               (I)Ljava/lang/Integer;\n+   #80 = Methodref          #65.#81       // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+   #81 = NameAndType        #78:#82       // valueOf:(Z)Ljava/lang/Boolean;\n+   #82 = Utf8               (Z)Ljava/lang/Boolean;\n+   #83 = Methodref          #52.#84       // java/lang/Math.min:(II)I\n+   #84 = NameAndType        #85:#56       // min:(II)I\n+   #85 = Utf8               min\n+   #86 = String             #87           // minBackReferenceLength can\\'t be bigger than windowSize\n+   #87 = Utf8               minBackReferenceLength can\\'t be bigger than windowSize\n+   #88 = Utf8               Code\n+   #89 = Utf8               LineNumberTable\n+   #90 = Utf8               LocalVariableTable\n+   #91 = Utf8               this\n+   #92 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               build\n+   #95 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #96 = Utf8               niceLen\n+   #97 = Utf8               candidates\n+   #98 = Utf8               lazy\n+   #99 = Utf8               Z\n+  #100 = Utf8               threshold\n+  #101 = Utf8               tunedForCompressionRatio\n+  #102 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #103 = Utf8               tunedForSpeed\n+  #104 = Utf8               withLazyMatching\n+  #105 = Utf8               (Z)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #106 = Utf8               withLazyThreshold\n+  #107 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #108 = Utf8               withMaxBackReferenceLength\n+  #109 = Utf8               withMaxLiteralLength\n+  #110 = Utf8               withMaxNumberOfCandidates\n+  #111 = Utf8               withMaxOffset\n+  #112 = Utf8               withMinBackReferenceLength\n+  #113 = Utf8               withNiceBackReferenceLength\n+  #114 = Utf8               (ILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n+  #115 = Utf8               x0\n+  #116 = Utf8               x1\n+  #117 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters$1;\n+  #118 = Utf8               SourceFile\n+  #119 = Utf8               Parameters.java\n+  #120 = Utf8               InnerClasses\n+  #121 = Utf8               Builder\n+  #122 = Class              #123          // org/apache/commons/compress/compressors/lz77support/Parameters$1\n+  #123 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$1\n {\n   private final int windowSize;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private int minBackReferenceLength;\n     descriptor: I\n@@ -170,45 +170,45 @@\n \n   private org.apache.commons.compress.compressors.lz77support.Parameters$Builder(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/lang/Object.\"<init>\":()V\n          4: iload_1\n          5: iconst_2\n          6: if_icmplt     16\n          9: iload_1\n-        10: invokestatic  #4                  // Method org/apache/commons/compress/compressors/lz77support/Parameters.access$000:(I)Z\n+        10: invokestatic  #14                 // Method org/apache/commons/compress/compressors/lz77support/Parameters.access$000:(I)Z\n         13: ifne          26\n-        16: new           #5                  // class java/lang/IllegalArgumentException\n+        16: new           #18                 // class java/lang/IllegalArgumentException\n         19: dup\n-        20: ldc           #6                  // String windowSize must be a power of two\n-        22: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: ldc           #20                 // String windowSize must be a power of two\n+        22: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         25: athrow\n         26: aload_0\n         27: iload_1\n-        28: putfield      #8                  // Field windowSize:I\n+        28: putfield      #25                 // Field windowSize:I\n         31: aload_0\n         32: iconst_3\n-        33: putfield      #9                  // Field minBackReferenceLength:I\n+        33: putfield      #29                 // Field minBackReferenceLength:I\n         36: aload_0\n         37: iload_1\n         38: iconst_1\n         39: isub\n-        40: putfield      #10                 // Field maxBackReferenceLength:I\n+        40: putfield      #32                 // Field maxBackReferenceLength:I\n         43: aload_0\n         44: iload_1\n         45: iconst_1\n         46: isub\n-        47: putfield      #11                 // Field maxOffset:I\n+        47: putfield      #35                 // Field maxOffset:I\n         50: aload_0\n         51: iload_1\n-        52: putfield      #12                 // Field maxLiteralLength:I\n+        52: putfield      #38                 // Field maxLiteralLength:I\n         55: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 4\n         line 36: 16\n         line 38: 26\n         line 39: 31\n@@ -229,85 +229,85 @@\n \n   public org.apache.commons.compress.compressors.lz77support.Parameters build();\n     descriptor: ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=12, locals=5, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n+         1: getfield      #41                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n          4: ifnull        17\n          7: aload_0\n-         8: getfield      #13                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n-        11: invokevirtual #14                 // Method java/lang/Integer.intValue:()I\n+         8: getfield      #41                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n+        11: invokevirtual #45                 // Method java/lang/Integer.intValue:()I\n         14: goto          30\n         17: aload_0\n-        18: getfield      #9                  // Field minBackReferenceLength:I\n+        18: getfield      #29                 // Field minBackReferenceLength:I\n         21: aload_0\n-        22: getfield      #10                 // Field maxBackReferenceLength:I\n+        22: getfield      #32                 // Field maxBackReferenceLength:I\n         25: iconst_2\n         26: idiv\n-        27: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n+        27: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n         30: istore_1\n         31: aload_0\n-        32: getfield      #16                 // Field maxCandidates:Ljava/lang/Integer;\n+        32: getfield      #57                 // Field maxCandidates:Ljava/lang/Integer;\n         35: ifnull        48\n         38: aload_0\n-        39: getfield      #16                 // Field maxCandidates:Ljava/lang/Integer;\n-        42: invokevirtual #14                 // Method java/lang/Integer.intValue:()I\n+        39: getfield      #57                 // Field maxCandidates:Ljava/lang/Integer;\n+        42: invokevirtual #45                 // Method java/lang/Integer.intValue:()I\n         45: goto          62\n         48: sipush        256\n         51: aload_0\n-        52: getfield      #8                  // Field windowSize:I\n+        52: getfield      #25                 // Field windowSize:I\n         55: sipush        128\n         58: idiv\n-        59: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n+        59: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n         62: istore_2\n         63: aload_0\n-        64: getfield      #17                 // Field lazyMatches:Ljava/lang/Boolean;\n+        64: getfield      #60                 // Field lazyMatches:Ljava/lang/Boolean;\n         67: ifnull        80\n         70: aload_0\n-        71: getfield      #17                 // Field lazyMatches:Ljava/lang/Boolean;\n-        74: invokevirtual #18                 // Method java/lang/Boolean.booleanValue:()Z\n+        71: getfield      #60                 // Field lazyMatches:Ljava/lang/Boolean;\n+        74: invokevirtual #64                 // Method java/lang/Boolean.booleanValue:()Z\n         77: ifeq          84\n         80: iconst_1\n         81: goto          85\n         84: iconst_0\n         85: istore_3\n         86: iload_3\n         87: ifeq          111\n         90: aload_0\n-        91: getfield      #19                 // Field lazyThreshold:Ljava/lang/Integer;\n+        91: getfield      #70                 // Field lazyThreshold:Ljava/lang/Integer;\n         94: ifnull        107\n         97: aload_0\n-        98: getfield      #19                 // Field lazyThreshold:Ljava/lang/Integer;\n-       101: invokevirtual #14                 // Method java/lang/Integer.intValue:()I\n+        98: getfield      #70                 // Field lazyThreshold:Ljava/lang/Integer;\n+       101: invokevirtual #45                 // Method java/lang/Integer.intValue:()I\n        104: goto          115\n        107: iload_1\n        108: goto          115\n        111: aload_0\n-       112: getfield      #9                  // Field minBackReferenceLength:I\n+       112: getfield      #29                 // Field minBackReferenceLength:I\n        115: istore        4\n        117: new           #1                  // class org/apache/commons/compress/compressors/lz77support/Parameters\n        120: dup\n        121: aload_0\n-       122: getfield      #8                  // Field windowSize:I\n+       122: getfield      #25                 // Field windowSize:I\n        125: aload_0\n-       126: getfield      #9                  // Field minBackReferenceLength:I\n+       126: getfield      #29                 // Field minBackReferenceLength:I\n        129: aload_0\n-       130: getfield      #10                 // Field maxBackReferenceLength:I\n+       130: getfield      #32                 // Field maxBackReferenceLength:I\n        133: aload_0\n-       134: getfield      #11                 // Field maxOffset:I\n+       134: getfield      #35                 // Field maxOffset:I\n        137: aload_0\n-       138: getfield      #12                 // Field maxLiteralLength:I\n+       138: getfield      #38                 // Field maxLiteralLength:I\n        141: iload_1\n        142: iload_2\n        143: iload_3\n        144: iload         4\n        146: aconst_null\n-       147: invokespecial #20                 // Method org/apache/commons/compress/compressors/lz77support/Parameters.\"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n+       147: invokespecial #73                 // Method org/apache/commons/compress/compressors/lz77support/Parameters.\"<init>\":(IIIIIIIZILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n        150: areturn\n       LineNumberTable:\n         line 51: 0\n         line 52: 17\n         line 53: 31\n         line 54: 63\n         line 55: 86\n@@ -345,32 +345,32 @@\n     descriptor: ()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n          2: aload_0\n-         3: getfield      #10                 // Field maxBackReferenceLength:I\n-         6: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         3: getfield      #32                 // Field maxBackReferenceLength:I\n+         6: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          9: dup_x1\n-        10: putfield      #19                 // Field lazyThreshold:Ljava/lang/Integer;\n-        13: putfield      #13                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n+        10: putfield      #70                 // Field lazyThreshold:Ljava/lang/Integer;\n+        13: putfield      #41                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n         16: aload_0\n         17: bipush        32\n         19: aload_0\n-        20: getfield      #8                  // Field windowSize:I\n+        20: getfield      #25                 // Field windowSize:I\n         23: bipush        16\n         25: idiv\n-        26: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n-        29: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        32: putfield      #16                 // Field maxCandidates:Ljava/lang/Integer;\n+        26: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n+        29: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        32: putfield      #57                 // Field maxCandidates:Ljava/lang/Integer;\n         35: aload_0\n         36: iconst_1\n-        37: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-        40: putfield      #17                 // Field lazyMatches:Ljava/lang/Boolean;\n+        37: invokestatic  #80                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        40: putfield      #60                 // Field lazyMatches:Ljava/lang/Boolean;\n         43: aload_0\n         44: areturn\n       LineNumberTable:\n         line 69: 0\n         line 70: 16\n         line 71: 35\n         line 72: 43\n@@ -381,40 +381,40 @@\n   public org.apache.commons.compress.compressors.lz77support.Parameters$Builder tunedForSpeed();\n     descriptor: ()Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #9                  // Field minBackReferenceLength:I\n+         2: getfield      #29                 // Field minBackReferenceLength:I\n          5: aload_0\n-         6: getfield      #10                 // Field maxBackReferenceLength:I\n+         6: getfield      #32                 // Field maxBackReferenceLength:I\n          9: bipush        8\n         11: idiv\n-        12: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n-        15: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        18: putfield      #13                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n+        12: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n+        15: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        18: putfield      #41                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n         21: aload_0\n         22: bipush        32\n         24: aload_0\n-        25: getfield      #8                  // Field windowSize:I\n+        25: getfield      #25                 // Field windowSize:I\n         28: sipush        1024\n         31: idiv\n-        32: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n-        35: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        38: putfield      #16                 // Field maxCandidates:Ljava/lang/Integer;\n+        32: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n+        35: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        38: putfield      #57                 // Field maxCandidates:Ljava/lang/Integer;\n         41: aload_0\n         42: iconst_0\n-        43: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-        46: putfield      #17                 // Field lazyMatches:Ljava/lang/Boolean;\n+        43: invokestatic  #80                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        46: putfield      #60                 // Field lazyMatches:Ljava/lang/Boolean;\n         49: aload_0\n         50: aload_0\n-        51: getfield      #9                  // Field minBackReferenceLength:I\n-        54: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        57: putfield      #19                 // Field lazyThreshold:Ljava/lang/Integer;\n+        51: getfield      #29                 // Field minBackReferenceLength:I\n+        54: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        57: putfield      #70                 // Field lazyThreshold:Ljava/lang/Integer;\n         60: aload_0\n         61: areturn\n       LineNumberTable:\n         line 83: 0\n         line 84: 21\n         line 85: 41\n         line 86: 49\n@@ -426,16 +426,16 @@\n   public org.apache.commons.compress.compressors.lz77support.Parameters$Builder withLazyMatching(boolean);\n     descriptor: (Z)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #22                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-         5: putfield      #17                 // Field lazyMatches:Ljava/lang/Boolean;\n+         2: invokestatic  #80                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+         5: putfield      #60                 // Field lazyMatches:Ljava/lang/Boolean;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 101: 0\n         line 102: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -445,16 +445,16 @@\n   public org.apache.commons.compress.compressors.lz77support.Parameters$Builder withLazyThreshold(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-         5: putfield      #19                 // Field lazyThreshold:Ljava/lang/Integer;\n+         2: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         5: putfield      #70                 // Field lazyThreshold:Ljava/lang/Integer;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 114: 0\n         line 115: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -465,26 +465,26 @@\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: aload_0\n-         3: getfield      #9                  // Field minBackReferenceLength:I\n+         3: getfield      #29                 // Field minBackReferenceLength:I\n          6: if_icmpge     16\n          9: aload_0\n-        10: getfield      #9                  // Field minBackReferenceLength:I\n+        10: getfield      #29                 // Field minBackReferenceLength:I\n         13: goto          26\n         16: iload_1\n         17: aload_0\n-        18: getfield      #8                  // Field windowSize:I\n+        18: getfield      #25                 // Field windowSize:I\n         21: iconst_1\n         22: isub\n-        23: invokestatic  #23                 // Method java/lang/Math.min:(II)I\n-        26: putfield      #10                 // Field maxBackReferenceLength:I\n+        23: invokestatic  #83                 // Method java/lang/Math.min:(II)I\n+        26: putfield      #32                 // Field maxBackReferenceLength:I\n         29: aload_0\n         30: areturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 16\n         line 136: 29\n       LocalVariableTable:\n@@ -505,21 +505,21 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_1\n          3: if_icmpge     13\n          6: aload_0\n-         7: getfield      #8                  // Field windowSize:I\n+         7: getfield      #25                 // Field windowSize:I\n         10: goto          21\n         13: iload_1\n         14: aload_0\n-        15: getfield      #8                  // Field windowSize:I\n-        18: invokestatic  #23                 // Method java/lang/Math.min:(II)I\n-        21: putfield      #12                 // Field maxLiteralLength:I\n+        15: getfield      #25                 // Field windowSize:I\n+        18: invokestatic  #83                 // Method java/lang/Math.min:(II)I\n+        21: putfield      #38                 // Field maxLiteralLength:I\n         24: aload_0\n         25: areturn\n       LineNumberTable:\n         line 154: 0\n         line 155: 13\n         line 156: 24\n       LocalVariableTable:\n@@ -537,16 +537,16 @@\n   public org.apache.commons.compress.compressors.lz77support.Parameters$Builder withMaxNumberOfCandidates(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-         5: putfield      #16                 // Field maxCandidates:Ljava/lang/Integer;\n+         2: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         5: putfield      #57                 // Field maxCandidates:Ljava/lang/Integer;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 167: 0\n         line 168: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -559,25 +559,25 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_1\n          3: if_icmpge     15\n          6: aload_0\n-         7: getfield      #8                  // Field windowSize:I\n+         7: getfield      #25                 // Field windowSize:I\n         10: iconst_1\n         11: isub\n         12: goto          25\n         15: iload_1\n         16: aload_0\n-        17: getfield      #8                  // Field windowSize:I\n+        17: getfield      #25                 // Field windowSize:I\n         20: iconst_1\n         21: isub\n-        22: invokestatic  #23                 // Method java/lang/Math.min:(II)I\n-        25: putfield      #11                 // Field maxOffset:I\n+        22: invokestatic  #83                 // Method java/lang/Math.min:(II)I\n+        25: putfield      #35                 // Field maxOffset:I\n         28: aload_0\n         29: areturn\n       LineNumberTable:\n         line 186: 0\n         line 187: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -595,35 +595,35 @@\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_3\n          2: iload_1\n-         3: invokestatic  #15                 // Method java/lang/Math.max:(II)I\n-         6: putfield      #9                  // Field minBackReferenceLength:I\n+         3: invokestatic  #51                 // Method java/lang/Math.max:(II)I\n+         6: putfield      #29                 // Field minBackReferenceLength:I\n          9: aload_0\n-        10: getfield      #8                  // Field windowSize:I\n+        10: getfield      #25                 // Field windowSize:I\n         13: aload_0\n-        14: getfield      #9                  // Field minBackReferenceLength:I\n+        14: getfield      #29                 // Field minBackReferenceLength:I\n         17: if_icmpge     30\n-        20: new           #5                  // class java/lang/IllegalArgumentException\n+        20: new           #18                 // class java/lang/IllegalArgumentException\n         23: dup\n-        24: ldc           #24                 // String minBackReferenceLength can\\'t be bigger than windowSize\n-        26: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #86                 // String minBackReferenceLength can\\'t be bigger than windowSize\n+        26: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #10                 // Field maxBackReferenceLength:I\n+        31: getfield      #32                 // Field maxBackReferenceLength:I\n         34: aload_0\n-        35: getfield      #9                  // Field minBackReferenceLength:I\n+        35: getfield      #29                 // Field minBackReferenceLength:I\n         38: if_icmpge     49\n         41: aload_0\n         42: aload_0\n-        43: getfield      #9                  // Field minBackReferenceLength:I\n-        46: putfield      #10                 // Field maxBackReferenceLength:I\n+        43: getfield      #29                 // Field minBackReferenceLength:I\n+        46: putfield      #32                 // Field maxBackReferenceLength:I\n         49: aload_0\n         50: areturn\n       LineNumberTable:\n         line 209: 0\n         line 210: 9\n         line 211: 20\n         line 213: 30\n@@ -640,16 +640,16 @@\n   public org.apache.commons.compress.compressors.lz77support.Parameters$Builder withNiceBackReferenceLength(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-         5: putfield      #13                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n+         2: invokestatic  #76                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         5: putfield      #41                 // Field niceBackReferenceLength:Ljava/lang/Integer;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 229: 0\n         line 230: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -659,21 +659,21 @@\n   org.apache.commons.compress.compressors.lz77support.Parameters$Builder(int, org.apache.commons.compress.compressors.lz77support.Parameters$1);\n     descriptor: (ILorg/apache/commons/compress/compressors/lz77support/Parameters$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #2                  // Method \"<init>\":(I)V\n+         2: invokespecial #3                  // Method \"<init>\":(I)V\n          5: return\n       LineNumberTable:\n         line 28: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n             0       6     1    x0   I\n             0       6     2    x1   Lorg/apache/commons/compress/compressors/lz77support/Parameters$1;\n }\n SourceFile: \"Parameters.java\"\n InnerClasses:\n-  public static #45= #25 of #1;           // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n-  static #69;                             // class org/apache/commons/compress/compressors/lz77support/Parameters$1\n+  public static #121= #4 of #1;           // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n+  static #122;                            // class org/apache/commons/compress/compressors/lz77support/Parameters$1\n"}]}
