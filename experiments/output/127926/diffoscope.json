{"diffoscope-json-version": 1, "source1": "first/ConfigurationInterpolator$DefaultPrefixLookupsHolder.class", "source2": "second/ConfigurationInterpolator$DefaultPrefixLookupsHolder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,18 @@\n import java.util.Map;\n \n static final class DefaultPrefixLookupsHolder\n {\n     static final DefaultPrefixLookupsHolder INSTANCE;\n     private final Map<String, Lookup> defaultLookups;\n     \n+    static {\n+        DefaultPrefixLookupsHolder.INSTANCE = new DefaultPrefixLookupsHolder(System.getProperties());\n+    }\n+    \n     DefaultPrefixLookupsHolder(final Properties props) {\n         final Map<String, Lookup> lookups = props.containsKey(\"org.apache.commons.configuration2.interpol.ConfigurationInterpolator.defaultPrefixLookups\") ? parseLookups(props.getProperty(\"org.apache.commons.configuration2.interpol.ConfigurationInterpolator.defaultPrefixLookups\")) : createDefaultLookups();\n         this.defaultLookups = Collections.unmodifiableMap((Map<?, ?>)lookups);\n     }\n     \n     Map<String, Lookup> getDefaultPrefixLookups() {\n         return this.defaultLookups;\n@@ -38,27 +42,25 @@\n         addLookup(DefaultLookups.XML, (Map)lookupMap);\n         return lookupMap;\n     }\n     \n     private static Map<String, Lookup> parseLookups(final String str) {\n         final Map<String, Lookup> lookupMap = new HashMap<String, Lookup>();\n         try {\n-            for (final String lookupName : str.split(\"[\\\\s,]+\")) {\n+            String[] split;\n+            for (int length = (split = str.split(\"[\\\\s,]+\")).length, i = 0; i < length; ++i) {\n+                final String lookupName = split[i];\n                 if (!lookupName.isEmpty()) {\n                     addLookup(DefaultLookups.valueOf(lookupName.toUpperCase()), (Map)lookupMap);\n                 }\n             }\n         }\n         catch (final IllegalArgumentException exc) {\n             throw new IllegalArgumentException(\"Invalid default lookups definition: \" + str, exc);\n         }\n         return lookupMap;\n     }\n     \n     private static void addLookup(final DefaultLookups lookup, final Map<String, Lookup> map) {\n         map.put(lookup.getPrefix(), lookup.getLookup());\n     }\n-    \n-    static {\n-        DefaultPrefixLookupsHolder.INSTANCE = new DefaultPrefixLookupsHolder(System.getProperties());\n-    }\n }\n"}]}
