{"diffoscope-json-version": 1, "source1": "first/IOExceptionList.class", "source2": "second/IOExceptionList.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,29 +6,29 @@\n import java.io.IOException;\n \n public class IOExceptionList extends IOException\n {\n     private static final long serialVersionUID = 1L;\n     private final List<? extends Throwable> causeList;\n     \n-    public IOExceptionList(final List<? extends Throwable> causeList) {\n-        this(String.format(\"%,d exceptions: %s\", Integer.valueOf((causeList == null) ? 0 : causeList.size()), causeList), causeList);\n+    public IOExceptionList(final List<? extends Throwable> list) {\n+        this(String.format(\"%,d exceptions: %s\", Integer.valueOf((list == null) ? 0 : list.size()), list), list);\n     }\n     \n-    public IOExceptionList(final String message, final List<? extends Throwable> causeList) {\n-        super(message, (causeList == null) ? null : ((Throwable)causeList.get(0)));\n-        this.causeList = ((causeList == null) ? Collections.emptyList() : causeList);\n+    public IOExceptionList(final String message, final List<? extends Throwable> list) {\n+        super(message, (list == null) ? null : ((Throwable)list.get(0)));\n+        this.causeList = ((list == null) ? Collections.emptyList() : list);\n     }\n     \n-    public <T extends Throwable> T getCause(final int index) {\n-        return (T)this.causeList.get(index);\n+    public <T extends Throwable> T getCause(final int n) {\n+        return (T)this.causeList.get(n);\n     }\n     \n-    public <T extends Throwable> T getCause(final int index, final Class<T> clazz) {\n-        return (T)this.causeList.get(index);\n+    public <T extends Throwable> T getCause(final int n, final Class<T> clazz) {\n+        return (T)this.causeList.get(n);\n     }\n     \n     public <T extends Throwable> List<T> getCauseList() {\n         return (List<T>)this.causeList;\n     }\n     \n     public <T extends Throwable> List<T> getCauseList(final Class<T> clazz) {\n"}]}
