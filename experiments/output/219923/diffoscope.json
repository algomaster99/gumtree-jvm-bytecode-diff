{"diffoscope-json-version": 1, "source1": "first/DefaultConfiguration.class", "source2": "second/DefaultConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,10 @@\n \n package com.puppycrawl.tools.checkstyle;\n \n-import java.util.Set;\n import com.puppycrawl.tools.checkstyle.utils.CommonUtil;\n import com.puppycrawl.tools.checkstyle.api.CheckstyleException;\n import java.util.HashMap;\n import java.util.ArrayList;\n import java.util.Map;\n import java.util.List;\n import com.puppycrawl.tools.checkstyle.api.Configuration;\n@@ -16,44 +15,43 @@\n     private static final Configuration[] EMPTY_CONFIGURATION_ARRAY;\n     private final String name;\n     private final List<Configuration> children;\n     private final Map<String, String> propertyMap;\n     private final Map<String, String> messages;\n     private final ThreadModeSettings threadModeSettings;\n     \n-    public DefaultConfiguration(final String name) {\n-        this(name, ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE);\n+    public DefaultConfiguration(final String s) {\n+        this(s, ThreadModeSettings.SINGLE_THREAD_MODE_INSTANCE);\n     }\n     \n     public DefaultConfiguration(final String name, final ThreadModeSettings threadModeSettings) {\n         this.children = new ArrayList<Configuration>();\n         this.propertyMap = new HashMap<String, String>();\n         this.messages = new HashMap<String, String>();\n         this.name = name;\n         this.threadModeSettings = threadModeSettings;\n     }\n     \n     public String[] getAttributeNames() {\n         return this.getPropertyNames();\n     }\n     \n-    public String getAttribute(final String attributeName) throws CheckstyleException {\n-        return this.getProperty(attributeName);\n+    public String getAttribute(final String s) throws CheckstyleException {\n+        return this.getProperty(s);\n     }\n     \n     public String[] getPropertyNames() {\n-        final Set<String> keySet = this.propertyMap.keySet();\n-        return keySet.toArray(CommonUtil.EMPTY_STRING_ARRAY);\n+        return this.propertyMap.keySet().toArray(CommonUtil.EMPTY_STRING_ARRAY);\n     }\n     \n-    public String getProperty(final String propertyName) throws CheckstyleException {\n-        if (!this.propertyMap.containsKey(propertyName)) {\n-            throw new CheckstyleException(\"missing key '\" + propertyName + \"' in \" + this.name);\n+    public String getProperty(final String s) throws CheckstyleException {\n+        if (!this.propertyMap.containsKey(s)) {\n+            throw new CheckstyleException(\"missing key '\" + s + \"' in \" + this.name);\n         }\n-        return this.propertyMap.get(propertyName);\n+        return this.propertyMap.get(s);\n     }\n     \n     public Configuration[] getChildren() {\n         return this.children.toArray(DefaultConfiguration.EMPTY_CONFIGURATION_ARRAY);\n     }\n     \n     public String getName() {\n@@ -65,32 +63,32 @@\n     }\n     \n     public void removeChild(final Configuration configuration) {\n         this.children.remove(configuration);\n     }\n     \n     @Deprecated(since = \"8.45\")\n-    public void addAttribute(final String attributeName, final String value) {\n-        this.addProperty(attributeName, value);\n+    public void addAttribute(final String s, final String s2) {\n+        this.addProperty(s, s2);\n     }\n     \n-    public void addProperty(final String propertyName, final String value) {\n-        final String current = (String)this.propertyMap.get(propertyName);\n-        String newValue;\n-        if (current == null) {\n-            newValue = value;\n+    public void addProperty(final String s, final String s2) {\n+        final String s3 = (String)this.propertyMap.get(s);\n+        String s4;\n+        if (s3 == null) {\n+            s4 = s2;\n         }\n         else {\n-            newValue = current + \",\" + value;\n+            s4 = s3 + \",\" + s2;\n         }\n-        this.propertyMap.put(propertyName, newValue);\n+        this.propertyMap.put(s, s4);\n     }\n     \n-    public void addMessage(final String key, final String value) {\n-        this.messages.put(key, value);\n+    public void addMessage(final String s, final String s2) {\n+        this.messages.put(s, s2);\n     }\n     \n     public Map<String, String> getMessages() {\n         return new HashMap<String, String>(this.messages);\n     }\n     \n     public ThreadModeSettings getThreadModeSettings() {\n"}]}
