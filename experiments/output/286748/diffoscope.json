{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorInputStream.class", "source2": "second/BlockLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,169 +1,167 @@\n-  SHA-256 checksum db38f183d45af9f12318a297acf8d1dc95cd5ca14e955d1f47f8266e78fa430d\n+  SHA-256 checksum d9ba5e5d9b3bd5d70abbebe1b93ad56d3f56fa7a3ec960d6a4c5ef8285eef944\n   Compiled from \"BlockLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream extends org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  super_class: #44                        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  interfaces: 0, fields: 6, methods: 5, attributes: 2\n+  super_class: #39                        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  interfaces: 0, fields: 6, methods: 5, attributes: 3\n Constant pool:\n-    #1 = Class              #80           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+    #1 = Class              #72           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n     #2 = Integer            65536\n-    #3 = Methodref          #44.#81       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #47.#82       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #5 = Fieldref           #1.#83        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #6 = Fieldref           #45.#84       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-    #7 = Methodref          #47.#85       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n-    #8 = Methodref          #1.#86        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n-    #9 = Methodref          #1.#87        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n-   #10 = Methodref          #1.#88        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n-   #11 = Fieldref           #47.#89       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #12 = Methodref          #1.#90        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n-   #13 = Methodref          #1.#91        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n-   #14 = Fieldref           #47.#92       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #15 = Methodref          #1.#93        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n-   #16 = Class              #94           // java/io/IOException\n-   #17 = Class              #95           // java/lang/StringBuilder\n-   #18 = Methodref          #17.#96       // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #97           // Unknown stream state\n-   #20 = Methodref          #17.#98       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#99       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #17.#100      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Methodref          #16.#101      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = Methodref          #1.#102       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n-   #25 = String             #103          // Premature end of stream while looking for next block\n-   #26 = Fieldref           #1.#104       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n-   #27 = Long               15l\n-   #29 = Methodref          #1.#105       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n-   #30 = String             #106          // Illegal block with a negative literal size found\n-   #31 = Methodref          #1.#107       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n-   #32 = Fieldref           #47.#108      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #33 = String             #109          // Premature end of stream while parsing length\n-   #34 = Fieldref           #1.#110       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #35 = Methodref          #111.#112     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #36 = String             #113          // Illegal block with a negative match length found\n-   #37 = Long               4l\n-   #39 = Methodref          #1.#114       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n-   #40 = Class              #115          // java/lang/IllegalArgumentException\n-   #41 = String             #116          // Illegal block with bad offset found\n-   #42 = Methodref          #16.#117      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #43 = Fieldref           #47.#118      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #44 = Class              #119          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #45 = Class              #120          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-   #46 = Utf8               InnerClasses\n-   #47 = Class              #121          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n-   #48 = Utf8               State\n-   #49 = Utf8               WINDOW_SIZE\n-   #50 = Utf8               I\n-   #51 = Utf8               ConstantValue\n-   #52 = Utf8               SIZE_BITS\n-   #53 = Integer            4\n-   #54 = Utf8               BACK_REFERENCE_SIZE_MASK\n-   #55 = Integer            15\n-   #56 = Utf8               LITERAL_SIZE_MASK\n-   #57 = Integer            240\n-   #58 = Utf8               nextBackReferenceSize\n-   #59 = Utf8               state\n-   #60 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #61 = Utf8               <init>\n-   #62 = Utf8               (Ljava/io/InputStream;)V\n-   #63 = Utf8               Code\n-   #64 = Utf8               LineNumberTable\n-   #65 = Utf8               Exceptions\n-   #66 = Utf8               read\n-   #67 = Utf8               ([BII)I\n-   #68 = Utf8               StackMapTable\n-   #69 = Utf8               readSizes\n-   #70 = Utf8               ()V\n-   #71 = Utf8               readSizeBytes\n-   #72 = Utf8               ()J\n-   #73 = Utf8               initializeBackReference\n-   #74 = Utf8               ()Z\n-   #75 = Class              #80           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #76 = Class              #94           // java/io/IOException\n-   #77 = Class              #115          // java/lang/IllegalArgumentException\n-   #78 = Utf8               SourceFile\n-   #79 = Utf8               BlockLZ4CompressorInputStream.java\n-   #80 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #81 = NameAndType        #61:#122      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #82 = NameAndType        #123:#60      // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #83 = NameAndType        #59:#60       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #84 = NameAndType        #124:#125     // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-   #85 = NameAndType        #126:#127     // ordinal:()I\n-   #86 = NameAndType        #69:#70       // readSizes:()V\n-   #87 = NameAndType        #128:#67      // readLiteral:([BII)I\n-   #88 = NameAndType        #129:#74      // hasMoreDataInBlock:()Z\n-   #89 = NameAndType        #130:#60      // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #90 = NameAndType        #66:#67       // read:([BII)I\n-   #91 = NameAndType        #73:#74       // initializeBackReference:()Z\n-   #92 = NameAndType        #131:#60      // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #93 = NameAndType        #132:#67      // readBackReference:([BII)I\n-   #94 = Utf8               java/io/IOException\n-   #95 = Utf8               java/lang/StringBuilder\n-   #96 = NameAndType        #61:#70       // \"<init>\":()V\n-   #97 = Utf8               Unknown stream state\n-   #98 = NameAndType        #133:#134     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #99 = NameAndType        #133:#135     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #100 = NameAndType        #136:#137     // toString:()Ljava/lang/String;\n-  #101 = NameAndType        #61:#138      // \"<init>\":(Ljava/lang/String;)V\n-  #102 = NameAndType        #139:#127     // readOneByte:()I\n-  #103 = Utf8               Premature end of stream while looking for next block\n-  #104 = NameAndType        #58:#50       // nextBackReferenceSize:I\n-  #105 = NameAndType        #71:#72       // readSizeBytes:()J\n-  #106 = Utf8               Illegal block with a negative literal size found\n-  #107 = NameAndType        #140:#141     // startLiteral:(J)V\n-  #108 = NameAndType        #142:#60      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #109 = Utf8               Premature end of stream while parsing length\n-  #110 = NameAndType        #143:#146     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #111 = Class              #147          // org/apache/commons/compress/utils/ByteUtils\n-  #112 = NameAndType        #148:#149     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #113 = Utf8               Illegal block with a negative match length found\n-  #114 = NameAndType        #150:#151     // startBackReference:(IJ)V\n-  #115 = Utf8               java/lang/IllegalArgumentException\n-  #116 = Utf8               Illegal block with bad offset found\n-  #117 = NameAndType        #61:#152      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #118 = NameAndType        #153:#60      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #119 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  #120 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-  #121 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n-  #122 = Utf8               (Ljava/io/InputStream;I)V\n-  #123 = Utf8               NO_BLOCK\n-  #124 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n-  #125 = Utf8               [I\n-  #126 = Utf8               ordinal\n-  #127 = Utf8               ()I\n-  #128 = Utf8               readLiteral\n-  #129 = Utf8               hasMoreDataInBlock\n-  #130 = Utf8               LOOKING_FOR_BACK_REFERENCE\n-  #131 = Utf8               EOF\n-  #132 = Utf8               readBackReference\n-  #133 = Utf8               append\n-  #134 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #135 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               toString\n-  #137 = Utf8               ()Ljava/lang/String;\n-  #138 = Utf8               (Ljava/lang/String;)V\n-  #139 = Utf8               readOneByte\n-  #140 = Utf8               startLiteral\n-  #141 = Utf8               (J)V\n-  #142 = Utf8               IN_LITERAL\n-  #143 = Utf8               supplier\n-  #144 = Class              #154          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #145 = Utf8               ByteSupplier\n-  #146 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #147 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #148 = Utf8               fromLittleEndian\n-  #149 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #150 = Utf8               startBackReference\n-  #151 = Utf8               (IJ)V\n-  #152 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #153 = Utf8               IN_BACK_REFERENCE\n-  #154 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+    #3 = Methodref          #39.#73       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Fieldref           #42.#74       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+    #5 = Fieldref           #1.#75        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+    #6 = Fieldref           #40.#76       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+    #7 = Methodref          #42.#77       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n+    #8 = Methodref          #1.#78        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n+    #9 = Methodref          #1.#79        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n+   #10 = Methodref          #1.#80        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n+   #11 = Fieldref           #42.#81       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #12 = Methodref          #1.#82        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n+   #13 = Methodref          #1.#83        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n+   #14 = Fieldref           #42.#84       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #15 = Methodref          #1.#85        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n+   #16 = Class              #86           // java/io/IOException\n+   #17 = InvokeDynamic      #0:#90        // #0:makeConcatWithConstants:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;)Ljava/lang/String;\n+   #18 = Methodref          #16.#91       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #19 = Methodref          #1.#92        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n+   #20 = String             #93           // Premature end of stream while looking for next block\n+   #21 = Fieldref           #1.#94        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n+   #22 = Long               15l\n+   #24 = Methodref          #1.#95        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n+   #25 = String             #96           // Illegal block with a negative literal size found\n+   #26 = Methodref          #1.#97        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n+   #27 = Fieldref           #42.#98       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #28 = String             #99           // Premature end of stream while parsing length\n+   #29 = Fieldref           #1.#100       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #30 = Methodref          #101.#102     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #31 = String             #103          // Illegal block with a negative match length found\n+   #32 = Long               4l\n+   #34 = Methodref          #1.#104       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n+   #35 = Class              #105          // java/lang/IllegalArgumentException\n+   #36 = String             #106          // Illegal block with bad offset found\n+   #37 = Methodref          #16.#107      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #38 = Fieldref           #42.#108      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #39 = Class              #109          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+   #40 = Class              #110          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+   #41 = Utf8               InnerClasses\n+   #42 = Class              #111          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+   #43 = Utf8               State\n+   #44 = Utf8               WINDOW_SIZE\n+   #45 = Utf8               I\n+   #46 = Utf8               ConstantValue\n+   #47 = Utf8               SIZE_BITS\n+   #48 = Integer            4\n+   #49 = Utf8               BACK_REFERENCE_SIZE_MASK\n+   #50 = Integer            15\n+   #51 = Utf8               LITERAL_SIZE_MASK\n+   #52 = Integer            240\n+   #53 = Utf8               nextBackReferenceSize\n+   #54 = Utf8               state\n+   #55 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #56 = Utf8               <init>\n+   #57 = Utf8               (Ljava/io/InputStream;)V\n+   #58 = Utf8               Code\n+   #59 = Utf8               LineNumberTable\n+   #60 = Utf8               Exceptions\n+   #61 = Utf8               read\n+   #62 = Utf8               ([BII)I\n+   #63 = Utf8               StackMapTable\n+   #64 = Utf8               readSizes\n+   #65 = Utf8               ()V\n+   #66 = Utf8               readSizeBytes\n+   #67 = Utf8               ()J\n+   #68 = Utf8               initializeBackReference\n+   #69 = Utf8               ()Z\n+   #70 = Utf8               SourceFile\n+   #71 = Utf8               BlockLZ4CompressorInputStream.java\n+   #72 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+   #73 = NameAndType        #56:#112      // \"<init>\":(Ljava/io/InputStream;I)V\n+   #74 = NameAndType        #113:#55      // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #75 = NameAndType        #54:#55       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #76 = NameAndType        #114:#115     // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+   #77 = NameAndType        #116:#117     // ordinal:()I\n+   #78 = NameAndType        #64:#65       // readSizes:()V\n+   #79 = NameAndType        #118:#62      // readLiteral:([BII)I\n+   #80 = NameAndType        #119:#69      // hasMoreDataInBlock:()Z\n+   #81 = NameAndType        #120:#55      // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #82 = NameAndType        #61:#62       // read:([BII)I\n+   #83 = NameAndType        #68:#69       // initializeBackReference:()Z\n+   #84 = NameAndType        #121:#55      // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #85 = NameAndType        #122:#62      // readBackReference:([BII)I\n+   #86 = Utf8               java/io/IOException\n+   #87 = Utf8               BootstrapMethods\n+   #88 = MethodHandle       6:#123        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #89 = String             #124          // Unknown stream state \\u0001\n+   #90 = NameAndType        #125:#126     // makeConcatWithConstants:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;)Ljava/lang/String;\n+   #91 = NameAndType        #56:#127      // \"<init>\":(Ljava/lang/String;)V\n+   #92 = NameAndType        #128:#117     // readOneByte:()I\n+   #93 = Utf8               Premature end of stream while looking for next block\n+   #94 = NameAndType        #53:#45       // nextBackReferenceSize:I\n+   #95 = NameAndType        #66:#67       // readSizeBytes:()J\n+   #96 = Utf8               Illegal block with a negative literal size found\n+   #97 = NameAndType        #129:#130     // startLiteral:(J)V\n+   #98 = NameAndType        #131:#55      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #99 = Utf8               Premature end of stream while parsing length\n+  #100 = NameAndType        #132:#135     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #101 = Class              #136          // org/apache/commons/compress/utils/ByteUtils\n+  #102 = NameAndType        #137:#138     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #103 = Utf8               Illegal block with a negative match length found\n+  #104 = NameAndType        #139:#140     // startBackReference:(IJ)V\n+  #105 = Utf8               java/lang/IllegalArgumentException\n+  #106 = Utf8               Illegal block with bad offset found\n+  #107 = NameAndType        #56:#141      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #108 = NameAndType        #142:#55      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #109 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  #110 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+  #111 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+  #112 = Utf8               (Ljava/io/InputStream;I)V\n+  #113 = Utf8               NO_BLOCK\n+  #114 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n+  #115 = Utf8               [I\n+  #116 = Utf8               ordinal\n+  #117 = Utf8               ()I\n+  #118 = Utf8               readLiteral\n+  #119 = Utf8               hasMoreDataInBlock\n+  #120 = Utf8               LOOKING_FOR_BACK_REFERENCE\n+  #121 = Utf8               EOF\n+  #122 = Utf8               readBackReference\n+  #123 = Methodref          #143.#144     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #124 = Utf8               Unknown stream state \\u0001\n+  #125 = Utf8               makeConcatWithConstants\n+  #126 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;)Ljava/lang/String;\n+  #127 = Utf8               (Ljava/lang/String;)V\n+  #128 = Utf8               readOneByte\n+  #129 = Utf8               startLiteral\n+  #130 = Utf8               (J)V\n+  #131 = Utf8               IN_LITERAL\n+  #132 = Utf8               supplier\n+  #133 = Class              #145          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #134 = Utf8               ByteSupplier\n+  #135 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #136 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #137 = Utf8               fromLittleEndian\n+  #138 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #139 = Utf8               startBackReference\n+  #140 = Utf8               (IJ)V\n+  #141 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #142 = Utf8               IN_BACK_REFERENCE\n+  #143 = Class              #146          // java/lang/invoke/StringConcatFactory\n+  #144 = NameAndType        #125:#149     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #145 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #146 = Utf8               java/lang/invoke/StringConcatFactory\n+  #147 = Class              #151          // java/lang/invoke/MethodHandles$Lookup\n+  #148 = Utf8               Lookup\n+  #149 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #150 = Class              #152          // java/lang/invoke/MethodHandles\n+  #151 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #152 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final int WINDOW_SIZE = 65536;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 65536\n \n   static final int SIZE_BITS = 4;\n@@ -285,25 +283,19 @@\n        149: aload_1\n        150: iload_2\n        151: iload_3\n        152: invokevirtual #12                 // Method read:([BII)I\n        155: ireturn\n        156: new           #16                 // class java/io/IOException\n        159: dup\n-       160: new           #17                 // class java/lang/StringBuilder\n-       163: dup\n-       164: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       167: ldc           #19                 // String Unknown stream state\n-       169: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       172: aload_0\n-       173: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-       176: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       179: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       182: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       185: athrow\n+       160: aload_0\n+       161: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+       164: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;)Ljava/lang/String;\n+       169: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       172: athrow\n       LineNumberTable:\n         line 64: 0\n         line 65: 4\n         line 67: 6\n         line 69: 52\n         line 71: 54\n         line 74: 58\n@@ -345,59 +337,59 @@\n \n   private void readSizes() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokevirtual #24                 // Method readOneByte:()I\n+         1: invokevirtual #19                 // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n         10: new           #16                 // class java/io/IOException\n         13: dup\n-        14: ldc           #25                 // String Premature end of stream while looking for next block\n-        16: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #20                 // String Premature end of stream while looking for next block\n+        16: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: iload_1\n         22: bipush        15\n         24: iand\n-        25: putfield      #26                 // Field nextBackReferenceSize:I\n+        25: putfield      #21                 // Field nextBackReferenceSize:I\n         28: iload_1\n         29: sipush        240\n         32: iand\n         33: iconst_4\n         34: ishr\n         35: i2l\n         36: lstore_2\n         37: lload_2\n-        38: ldc2_w        #27                 // long 15l\n+        38: ldc2_w        #22                 // long 15l\n         41: lcmp\n         42: ifne          52\n         45: lload_2\n         46: aload_0\n-        47: invokespecial #29                 // Method readSizeBytes:()J\n+        47: invokespecial #24                 // Method readSizeBytes:()J\n         50: ladd\n         51: lstore_2\n         52: lload_2\n         53: lconst_0\n         54: lcmp\n         55: ifge          68\n         58: new           #16                 // class java/io/IOException\n         61: dup\n-        62: ldc           #30                 // String Illegal block with a negative literal size found\n-        64: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        62: ldc           #25                 // String Illegal block with a negative literal size found\n+        64: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: aload_0\n         69: lload_2\n-        70: invokevirtual #31                 // Method startLiteral:(J)V\n+        70: invokevirtual #26                 // Method startLiteral:(J)V\n         73: aload_0\n-        74: getstatic     #32                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        74: getstatic     #27                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         77: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         80: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 5\n         line 99: 10\n         line 101: 20\n@@ -424,23 +416,23 @@\n     descriptor: ()J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: lconst_0\n          1: lstore_1\n          2: aload_0\n-         3: invokevirtual #24                 // Method readOneByte:()I\n+         3: invokevirtual #19                 // Method readOneByte:()I\n          6: istore_3\n          7: iload_3\n          8: iconst_m1\n          9: if_icmpne     22\n         12: new           #16                 // class java/io/IOException\n         15: dup\n-        16: ldc           #33                 // String Premature end of stream while parsing length\n-        18: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #28                 // String Premature end of stream while parsing length\n+        18: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: lload_1\n         23: iload_3\n         24: i2l\n         25: ladd\n         26: lstore_1\n         27: iload_3\n@@ -470,66 +462,66 @@\n     descriptor: ()Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: aload_0\n-         3: getfield      #34                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         3: getfield      #29                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          6: iconst_2\n-         7: invokestatic  #35                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         7: invokestatic  #30                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         10: l2i\n         11: istore_1\n         12: goto          27\n         15: astore_2\n         16: aload_0\n-        17: getfield      #26                 // Field nextBackReferenceSize:I\n+        17: getfield      #21                 // Field nextBackReferenceSize:I\n         20: ifne          25\n         23: iconst_0\n         24: ireturn\n         25: aload_2\n         26: athrow\n         27: aload_0\n-        28: getfield      #26                 // Field nextBackReferenceSize:I\n+        28: getfield      #21                 // Field nextBackReferenceSize:I\n         31: i2l\n         32: lstore_2\n         33: aload_0\n-        34: getfield      #26                 // Field nextBackReferenceSize:I\n+        34: getfield      #21                 // Field nextBackReferenceSize:I\n         37: bipush        15\n         39: if_icmpne     49\n         42: lload_2\n         43: aload_0\n-        44: invokespecial #29                 // Method readSizeBytes:()J\n+        44: invokespecial #24                 // Method readSizeBytes:()J\n         47: ladd\n         48: lstore_2\n         49: lload_2\n         50: lconst_0\n         51: lcmp\n         52: ifge          65\n         55: new           #16                 // class java/io/IOException\n         58: dup\n-        59: ldc           #36                 // String Illegal block with a negative match length found\n-        61: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        59: ldc           #31                 // String Illegal block with a negative match length found\n+        61: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         64: athrow\n         65: aload_0\n         66: iload_1\n         67: lload_2\n-        68: ldc2_w        #37                 // long 4l\n+        68: ldc2_w        #32                 // long 4l\n         71: ladd\n-        72: invokevirtual #39                 // Method startBackReference:(IJ)V\n+        72: invokevirtual #34                 // Method startBackReference:(IJ)V\n         75: goto          92\n         78: astore        4\n         80: new           #16                 // class java/io/IOException\n         83: dup\n-        84: ldc           #41                 // String Illegal block with bad offset found\n+        84: ldc           #36                 // String Illegal block with bad offset found\n         86: aload         4\n-        88: invokespecial #42                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        88: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         91: athrow\n         92: aload_0\n-        93: getstatic     #43                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+        93: getstatic     #38                 // Field org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         96: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n         99: iconst_1\n        100: ireturn\n       Exception table:\n          from    to  target type\n              2    12    15   Class java/io/IOException\n             65    75    78   Class java/lang/IllegalArgumentException\n@@ -570,10 +562,15 @@\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 13 /* same */\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BlockLZ4CompressorInputStream.java\"\n InnerClasses:\n-  static #45;                             // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-  private static final #48= #47 of #1;    // State=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  public static #145= #144 of #111;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  static #40;                             // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+  private static final #43= #42 of #1;    // State=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  public static #134= #133 of #101;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #148= #147 of #150; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #88 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #89 Unknown stream state \\u0001\n"}]}
