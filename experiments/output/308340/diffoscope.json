{"diffoscope-json-version": 1, "source1": "first/AbstractNameCheck.class", "source2": "second/AbstractNameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,89 +1,89 @@\n-  SHA-256 checksum 1639e7570b11afb7885e9decdc553e79d4b82cce5b4250402a253001b16409d7\n+  SHA-256 checksum 0c71395f064084b9e34362dfeb31ec7980b946d3fa9de10e94e04c5d3fd6047a\n   Compiled from \"AbstractNameCheck.java\"\n public abstract class com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck extends com.puppycrawl.tools.checkstyle.api.AbstractCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #10                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-  super_class: #15                        // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+  this_class: #14                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n   interfaces: 0, fields: 2, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #15.#36        // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n-   #2 = Methodref          #37.#38        // com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #3 = Fieldref           #10.#39        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.format:Ljava/util/regex/Pattern;\n-   #4 = Methodref          #10.#40        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-   #5 = Class              #41            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #6 = InterfaceMethodref #42.#43        // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #7 = InterfaceMethodref #42.#44        // com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n-   #8 = Methodref          #45.#46        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #9 = Methodref          #47.#48        // java/util/regex/Matcher.find:()Z\n-  #10 = Class              #49            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-  #11 = String             #50            // name.invalidPattern\n-  #12 = Class              #51            // java/lang/Object\n-  #13 = Methodref          #45.#52        // java/util/regex/Pattern.pattern:()Ljava/lang/String;\n-  #14 = Methodref          #10.#53        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #15 = Class              #54            // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-  #16 = Utf8               MSG_INVALID_PATTERN\n-  #17 = Utf8               Ljava/lang/String;\n-  #18 = Utf8               ConstantValue\n-  #19 = Utf8               format\n-  #20 = Utf8               Ljava/util/regex/Pattern;\n-  #21 = Utf8               <init>\n-  #22 = Utf8               (Ljava/lang/String;)V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               mustCheckName\n-  #26 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-  #27 = Utf8               setFormat\n-  #28 = Utf8               (Ljava/util/regex/Pattern;)V\n-  #29 = Utf8               visitToken\n-  #30 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n-  #31 = Utf8               StackMapTable\n-  #32 = Utf8               SourceFile\n-  #33 = Utf8               AbstractNameCheck.java\n-  #34 = Utf8               RuntimeVisibleAnnotations\n-  #35 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-  #36 = NameAndType        #21:#55        // \"<init>\":()V\n-  #37 = Class              #56            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #38 = NameAndType        #57:#58        // createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #39 = NameAndType        #19:#20        // format:Ljava/util/regex/Pattern;\n-  #40 = NameAndType        #25:#26        // mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-  #41 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-  #42 = Class              #59            // com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #43 = NameAndType        #60:#61        // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #44 = NameAndType        #62:#63        // getText:()Ljava/lang/String;\n-  #45 = Class              #64            // java/util/regex/Pattern\n-  #46 = NameAndType        #65:#66        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #47 = Class              #67            // java/util/regex/Matcher\n-  #48 = NameAndType        #68:#69        // find:()Z\n-  #49 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-  #50 = Utf8               name.invalidPattern\n-  #51 = Utf8               java/lang/Object\n-  #52 = NameAndType        #70:#63        // pattern:()Ljava/lang/String;\n-  #53 = NameAndType        #71:#72        // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #54 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n-  #55 = Utf8               ()V\n-  #56 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #57 = Utf8               createPattern\n-  #58 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #59 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #60 = Utf8               findFirstToken\n-  #61 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #62 = Utf8               getText\n-  #63 = Utf8               ()Ljava/lang/String;\n-  #64 = Utf8               java/util/regex/Pattern\n-  #65 = Utf8               matcher\n-  #66 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #67 = Utf8               java/util/regex/Matcher\n-  #68 = Utf8               find\n-  #69 = Utf8               ()Z\n-  #70 = Utf8               pattern\n-  #71 = Utf8               log\n-  #72 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n+   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractCheck\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #8 = Class              #10            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+   #9 = NameAndType        #11:#12        // createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #10 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+  #11 = Utf8               createPattern\n+  #12 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #13 = Fieldref           #14.#15        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.format:Ljava/util/regex/Pattern;\n+  #14 = Class              #16            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+  #15 = NameAndType        #17:#18        // format:Ljava/util/regex/Pattern;\n+  #16 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+  #17 = Utf8               format\n+  #18 = Utf8               Ljava/util/regex/Pattern;\n+  #19 = Methodref          #14.#20        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+  #20 = NameAndType        #21:#22        // mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+  #21 = Utf8               mustCheckName\n+  #22 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+  #23 = Class              #24            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #24 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #25 = InterfaceMethodref #26.#27        // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #26 = Class              #28            // com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #27 = NameAndType        #29:#30        // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #28 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #29 = Utf8               findFirstToken\n+  #30 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #31 = InterfaceMethodref #26.#32        // com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n+  #32 = NameAndType        #33:#34        // getText:()Ljava/lang/String;\n+  #33 = Utf8               getText\n+  #34 = Utf8               ()Ljava/lang/String;\n+  #35 = Methodref          #36.#37        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #36 = Class              #38            // java/util/regex/Pattern\n+  #37 = NameAndType        #39:#40        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #38 = Utf8               java/util/regex/Pattern\n+  #39 = Utf8               matcher\n+  #40 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #41 = Methodref          #42.#43        // java/util/regex/Matcher.find:()Z\n+  #42 = Class              #44            // java/util/regex/Matcher\n+  #43 = NameAndType        #45:#46        // find:()Z\n+  #44 = Utf8               java/util/regex/Matcher\n+  #45 = Utf8               find\n+  #46 = Utf8               ()Z\n+  #47 = String             #48            // name.invalidPattern\n+  #48 = Utf8               name.invalidPattern\n+  #49 = Class              #50            // java/lang/Object\n+  #50 = Utf8               java/lang/Object\n+  #51 = Methodref          #36.#52        // java/util/regex/Pattern.pattern:()Ljava/lang/String;\n+  #52 = NameAndType        #53:#34        // pattern:()Ljava/lang/String;\n+  #53 = Utf8               pattern\n+  #54 = Methodref          #14.#55        // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #55 = NameAndType        #56:#57        // log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #56 = Utf8               log\n+  #57 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #58 = Utf8               MSG_INVALID_PATTERN\n+  #59 = Utf8               Ljava/lang/String;\n+  #60 = Utf8               ConstantValue\n+  #61 = Utf8               (Ljava/lang/String;)V\n+  #62 = Utf8               Code\n+  #63 = Utf8               LineNumberTable\n+  #64 = Utf8               setFormat\n+  #65 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #66 = Utf8               visitToken\n+  #67 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n+  #68 = Utf8               StackMapTable\n+  #69 = Utf8               SourceFile\n+  #70 = Utf8               AbstractNameCheck.java\n+  #71 = Utf8               RuntimeVisibleAnnotations\n+  #72 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public static final java.lang.String MSG_INVALID_PATTERN = \"name.invalidPattern\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String name.invalidPattern\n \n   private java.util.regex.Pattern format;\n@@ -95,16 +95,16 @@\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/api/AbstractCheck.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #2                  // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         9: putfield      #3                  // Field format:Ljava/util/regex/Pattern;\n+         6: invokestatic  #7                  // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         9: putfield      #13                 // Field format:Ljava/util/regex/Pattern;\n         12: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 12\n \n   protected abstract boolean mustCheckName(com.puppycrawl.tools.checkstyle.api.DetailAST);\n@@ -114,57 +114,57 @@\n   public final void setFormat(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #3                  // Field format:Ljava/util/regex/Pattern;\n+         2: putfield      #13                 // Field format:Ljava/util/regex/Pattern;\n          5: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 5\n \n   public void visitToken(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #4                  // Method mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+         2: invokevirtual #19                 // Method mustCheckName:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n          5: ifeq          66\n          8: aload_1\n          9: bipush        58\n-        11: invokeinterface #6,  2            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+        11: invokeinterface #25,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n         16: astore_2\n         17: aload_0\n-        18: getfield      #3                  // Field format:Ljava/util/regex/Pattern;\n+        18: getfield      #13                 // Field format:Ljava/util/regex/Pattern;\n         21: aload_2\n-        22: invokeinterface #7,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n-        27: invokevirtual #8                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        30: invokevirtual #9                  // Method java/util/regex/Matcher.find:()Z\n+        22: invokeinterface #31,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n+        27: invokevirtual #35                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        30: invokevirtual #41                 // Method java/util/regex/Matcher.find:()Z\n         33: ifne          66\n         36: aload_0\n         37: aload_2\n-        38: ldc           #11                 // String name.invalidPattern\n+        38: ldc           #47                 // String name.invalidPattern\n         40: iconst_2\n-        41: anewarray     #12                 // class java/lang/Object\n+        41: anewarray     #49                 // class java/lang/Object\n         44: dup\n         45: iconst_0\n         46: aload_2\n-        47: invokeinterface #7,  1            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n+        47: invokeinterface #31,  1           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.getText:()Ljava/lang/String;\n         52: aastore\n         53: dup\n         54: iconst_1\n         55: aload_0\n-        56: getfield      #3                  // Field format:Ljava/util/regex/Pattern;\n-        59: invokevirtual #13                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;\n+        56: getfield      #13                 // Field format:Ljava/util/regex/Pattern;\n+        59: invokevirtual #51                 // Method java/util/regex/Pattern.pattern:()Ljava/lang/String;\n         62: aastore\n-        63: invokevirtual #14                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n+        63: invokevirtual #54                 // Method log:(Lcom/puppycrawl/tools/checkstyle/api/DetailAST;Ljava/lang/String;[Ljava/lang/Object;)V\n         66: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 8\n         line 78: 17\n         line 79: 36\n         line 81: 47\n@@ -173,9 +173,9 @@\n         line 85: 66\n       StackMapTable: number_of_entries = 1\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 66\n }\n SourceFile: \"AbstractNameCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #35()\n+  0: #72()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
