{"diffoscope-json-version": 1, "source1": "first/ArjArchiveInputStream.class", "source2": "second/ArjArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,151 +1,151 @@\n-  SHA-256 checksum 99caf611acfe59a0635d355b7fae6a434fa73352434607f48010ff10d134bfdf\n+  SHA-256 checksum 9c2d8531e08294a1b24d6272e35cab67202e1c572e29cc792cf4f23577356bd5\n   Compiled from \"ArjArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.arj.ArjArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #36                         // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n   super_class: #139                       // org/apache/commons/compress/archivers/ArchiveInputStream\n   interfaces: 0, fields: 7, methods: 19, attributes: 2\n Constant pool:\n-    #1 = Methodref          #139.#248     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #2 = Fieldref           #36.#249      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.currentLocalFileHeader:Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-    #3 = Fieldref           #36.#250      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.currentInputStream:Ljava/io/InputStream;\n-    #4 = Class              #251          // java/io/DataInputStream\n-    #5 = Methodref          #4.#252       // java/io/DataInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #6 = Fieldref           #36.#253      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.in:Ljava/io/DataInputStream;\n-    #7 = Fieldref           #36.#254      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.charsetName:Ljava/lang/String;\n-    #8 = Methodref          #36.#255      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readMainHeader:()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n-    #9 = Fieldref           #36.#256      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.mainHeader:Lorg/apache/commons/compress/archivers/arj/MainHeader;\n-   #10 = Fieldref           #51.#257      // org/apache/commons/compress/archivers/arj/MainHeader.arjFlags:I\n-   #11 = Class              #258          // org/apache/commons/compress/archivers/arj/MainHeader$Flags\n-   #12 = Class              #261          // org/apache/commons/compress/archivers/ArchiveException\n-   #13 = String             #262          // Encrypted ARJ files are unsupported\n-   #14 = Methodref          #12.#263      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = String             #264          // Multi-volume ARJ files are unsupported\n-   #16 = Class              #265          // java/io/IOException\n-   #17 = Methodref          #16.#266      // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #18 = Methodref          #12.#267      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-   #19 = String             #268          // CP437\n-   #20 = Methodref          #36.#269      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #21 = Methodref          #4.#270       // java/io/DataInputStream.close:()V\n-   #22 = Methodref          #4.#271       // java/io/DataInputStream.readUnsignedByte:()I\n-   #23 = Methodref          #36.#272      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.count:(I)V\n-   #24 = Methodref          #4.#273       // java/io/DataInputStream.readUnsignedShort:()I\n-   #25 = Methodref          #274.#275     // java/lang/Integer.reverseBytes:(I)I\n-   #26 = Methodref          #4.#276       // java/io/DataInputStream.readInt:()I\n-   #27 = Class              #277          // java/io/ByteArrayOutputStream\n-   #28 = Methodref          #27.#248      // java/io/ByteArrayOutputStream.\"<init>\":()V\n-   #29 = Methodref          #27.#278      // java/io/ByteArrayOutputStream.write:(I)V\n-   #30 = Class              #279          // java/lang/String\n-   #31 = Methodref          #27.#280      // java/io/ByteArrayOutputStream.toByteArray:()[B\n-   #32 = Methodref          #30.#281      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #33 = Methodref          #30.#282      // java/lang/String.\"<init>\":([B)V\n-   #34 = Methodref          #4.#283       // java/io/DataInputStream.readFully:([B)V\n-   #35 = Methodref          #36.#284      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read8:(Ljava/io/DataInputStream;)I\n-   #36 = Class              #285          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-   #37 = Methodref          #36.#286      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read16:(Ljava/io/DataInputStream;)I\n-   #38 = Methodref          #36.#287      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readFully:(Ljava/io/DataInputStream;[B)V\n-   #39 = Methodref          #36.#288      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read32:(Ljava/io/DataInputStream;)I\n+    #1 = Methodref          #139.#238     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+    #2 = Fieldref           #36.#239      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.currentLocalFileHeader:Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+    #3 = Fieldref           #36.#240      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.currentInputStream:Ljava/io/InputStream;\n+    #4 = Class              #241          // java/io/DataInputStream\n+    #5 = Methodref          #4.#242       // java/io/DataInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #6 = Fieldref           #36.#243      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.in:Ljava/io/DataInputStream;\n+    #7 = Fieldref           #36.#244      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.charsetName:Ljava/lang/String;\n+    #8 = Methodref          #36.#245      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readMainHeader:()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n+    #9 = Fieldref           #36.#246      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.mainHeader:Lorg/apache/commons/compress/archivers/arj/MainHeader;\n+   #10 = Fieldref           #51.#247      // org/apache/commons/compress/archivers/arj/MainHeader.arjFlags:I\n+   #11 = Class              #248          // org/apache/commons/compress/archivers/arj/MainHeader$Flags\n+   #12 = Class              #251          // org/apache/commons/compress/archivers/ArchiveException\n+   #13 = String             #252          // Encrypted ARJ files are unsupported\n+   #14 = Methodref          #12.#253      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+   #15 = String             #254          // Multi-volume ARJ files are unsupported\n+   #16 = Class              #255          // java/io/IOException\n+   #17 = Methodref          #16.#256      // java/io/IOException.getMessage:()Ljava/lang/String;\n+   #18 = Methodref          #12.#257      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+   #19 = String             #258          // CP437\n+   #20 = Methodref          #36.#259      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #21 = Methodref          #4.#260       // java/io/DataInputStream.close:()V\n+   #22 = Methodref          #4.#261       // java/io/DataInputStream.readUnsignedByte:()I\n+   #23 = Methodref          #36.#262      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.count:(I)V\n+   #24 = Methodref          #4.#263       // java/io/DataInputStream.readUnsignedShort:()I\n+   #25 = Methodref          #264.#265     // java/lang/Integer.reverseBytes:(I)I\n+   #26 = Methodref          #4.#266       // java/io/DataInputStream.readInt:()I\n+   #27 = Class              #267          // java/io/ByteArrayOutputStream\n+   #28 = Methodref          #27.#238      // java/io/ByteArrayOutputStream.\"<init>\":()V\n+   #29 = Methodref          #27.#268      // java/io/ByteArrayOutputStream.write:(I)V\n+   #30 = Class              #269          // java/lang/String\n+   #31 = Methodref          #27.#270      // java/io/ByteArrayOutputStream.toByteArray:()[B\n+   #32 = Methodref          #30.#271      // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #33 = Methodref          #30.#272      // java/lang/String.\"<init>\":([B)V\n+   #34 = Methodref          #4.#273       // java/io/DataInputStream.readFully:([B)V\n+   #35 = Methodref          #36.#274      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read8:(Ljava/io/DataInputStream;)I\n+   #36 = Class              #275          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+   #37 = Methodref          #36.#276      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read16:(Ljava/io/DataInputStream;)I\n+   #38 = Methodref          #36.#277      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readFully:(Ljava/io/DataInputStream;[B)V\n+   #39 = Methodref          #36.#278      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.read32:(Ljava/io/DataInputStream;)I\n    #40 = Long               4294967295l\n-   #42 = Class              #289          // java/util/zip/CRC32\n-   #43 = Methodref          #42.#248      // java/util/zip/CRC32.\"<init>\":()V\n-   #44 = Methodref          #42.#290      // java/util/zip/CRC32.update:([B)V\n-   #45 = Methodref          #42.#291      // java/util/zip/CRC32.getValue:()J\n-   #46 = Methodref          #36.#292      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readHeader:()[B\n-   #47 = String             #293          // Archive ends without any headers\n-   #48 = Methodref          #16.#263      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #49 = Class              #294          // java/io/ByteArrayInputStream\n-   #50 = Methodref          #49.#282      // java/io/ByteArrayInputStream.\"<init>\":([B)V\n-   #51 = Class              #295          // org/apache/commons/compress/archivers/arj/MainHeader\n-   #52 = Methodref          #51.#248      // org/apache/commons/compress/archivers/arj/MainHeader.\"<init>\":()V\n-   #53 = Fieldref           #51.#296      // org/apache/commons/compress/archivers/arj/MainHeader.archiverVersionNumber:I\n-   #54 = Fieldref           #51.#297      // org/apache/commons/compress/archivers/arj/MainHeader.minVersionToExtract:I\n-   #55 = Fieldref           #51.#298      // org/apache/commons/compress/archivers/arj/MainHeader.hostOS:I\n-   #56 = Fieldref           #51.#299      // org/apache/commons/compress/archivers/arj/MainHeader.securityVersion:I\n-   #57 = Fieldref           #51.#300      // org/apache/commons/compress/archivers/arj/MainHeader.fileType:I\n-   #58 = Fieldref           #51.#301      // org/apache/commons/compress/archivers/arj/MainHeader.reserved:I\n-   #59 = Fieldref           #51.#302      // org/apache/commons/compress/archivers/arj/MainHeader.dateTimeCreated:I\n-   #60 = Fieldref           #51.#303      // org/apache/commons/compress/archivers/arj/MainHeader.dateTimeModified:I\n-   #61 = Fieldref           #51.#304      // org/apache/commons/compress/archivers/arj/MainHeader.archiveSize:J\n-   #62 = Fieldref           #51.#305      // org/apache/commons/compress/archivers/arj/MainHeader.securityEnvelopeFilePosition:I\n-   #63 = Fieldref           #51.#306      // org/apache/commons/compress/archivers/arj/MainHeader.fileSpecPosition:I\n-   #64 = Fieldref           #51.#307      // org/apache/commons/compress/archivers/arj/MainHeader.securityEnvelopeLength:I\n+   #42 = Class              #279          // java/util/zip/CRC32\n+   #43 = Methodref          #42.#238      // java/util/zip/CRC32.\"<init>\":()V\n+   #44 = Methodref          #42.#280      // java/util/zip/CRC32.update:([B)V\n+   #45 = Methodref          #42.#281      // java/util/zip/CRC32.getValue:()J\n+   #46 = Methodref          #36.#282      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readHeader:()[B\n+   #47 = String             #283          // Archive ends without any headers\n+   #48 = Methodref          #16.#253      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #49 = Class              #284          // java/io/ByteArrayInputStream\n+   #50 = Methodref          #49.#272      // java/io/ByteArrayInputStream.\"<init>\":([B)V\n+   #51 = Class              #285          // org/apache/commons/compress/archivers/arj/MainHeader\n+   #52 = Methodref          #51.#238      // org/apache/commons/compress/archivers/arj/MainHeader.\"<init>\":()V\n+   #53 = Fieldref           #51.#286      // org/apache/commons/compress/archivers/arj/MainHeader.archiverVersionNumber:I\n+   #54 = Fieldref           #51.#287      // org/apache/commons/compress/archivers/arj/MainHeader.minVersionToExtract:I\n+   #55 = Fieldref           #51.#288      // org/apache/commons/compress/archivers/arj/MainHeader.hostOS:I\n+   #56 = Fieldref           #51.#289      // org/apache/commons/compress/archivers/arj/MainHeader.securityVersion:I\n+   #57 = Fieldref           #51.#290      // org/apache/commons/compress/archivers/arj/MainHeader.fileType:I\n+   #58 = Fieldref           #51.#291      // org/apache/commons/compress/archivers/arj/MainHeader.reserved:I\n+   #59 = Fieldref           #51.#292      // org/apache/commons/compress/archivers/arj/MainHeader.dateTimeCreated:I\n+   #60 = Fieldref           #51.#293      // org/apache/commons/compress/archivers/arj/MainHeader.dateTimeModified:I\n+   #61 = Fieldref           #51.#294      // org/apache/commons/compress/archivers/arj/MainHeader.archiveSize:J\n+   #62 = Fieldref           #51.#295      // org/apache/commons/compress/archivers/arj/MainHeader.securityEnvelopeFilePosition:I\n+   #63 = Fieldref           #51.#296      // org/apache/commons/compress/archivers/arj/MainHeader.fileSpecPosition:I\n+   #64 = Fieldref           #51.#297      // org/apache/commons/compress/archivers/arj/MainHeader.securityEnvelopeLength:I\n    #65 = Long               20l\n-   #67 = Methodref          #36.#308      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.pushedBackBytes:(J)V\n-   #68 = Fieldref           #51.#309      // org/apache/commons/compress/archivers/arj/MainHeader.encryptionVersion:I\n-   #69 = Fieldref           #51.#310      // org/apache/commons/compress/archivers/arj/MainHeader.lastChapter:I\n-   #70 = Fieldref           #51.#311      // org/apache/commons/compress/archivers/arj/MainHeader.arjProtectionFactor:I\n-   #71 = Fieldref           #51.#312      // org/apache/commons/compress/archivers/arj/MainHeader.arjFlags2:I\n-   #72 = Methodref          #36.#313      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n-   #73 = Fieldref           #51.#314      // org/apache/commons/compress/archivers/arj/MainHeader.name:Ljava/lang/String;\n-   #74 = Fieldref           #51.#315      // org/apache/commons/compress/archivers/arj/MainHeader.comment:Ljava/lang/String;\n-   #75 = Fieldref           #51.#316      // org/apache/commons/compress/archivers/arj/MainHeader.extendedHeaderBytes:[B\n-   #76 = String             #317          // Extended header CRC32 verification failure\n-   #77 = Class              #318          // org/apache/commons/compress/archivers/arj/LocalFileHeader\n-   #78 = Methodref          #77.#248      // org/apache/commons/compress/archivers/arj/LocalFileHeader.\"<init>\":()V\n-   #79 = Fieldref           #77.#296      // org/apache/commons/compress/archivers/arj/LocalFileHeader.archiverVersionNumber:I\n-   #80 = Fieldref           #77.#297      // org/apache/commons/compress/archivers/arj/LocalFileHeader.minVersionToExtract:I\n-   #81 = Fieldref           #77.#298      // org/apache/commons/compress/archivers/arj/LocalFileHeader.hostOS:I\n-   #82 = Fieldref           #77.#257      // org/apache/commons/compress/archivers/arj/LocalFileHeader.arjFlags:I\n-   #83 = Fieldref           #77.#319      // org/apache/commons/compress/archivers/arj/LocalFileHeader.method:I\n-   #84 = Fieldref           #77.#300      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileType:I\n-   #85 = Fieldref           #77.#301      // org/apache/commons/compress/archivers/arj/LocalFileHeader.reserved:I\n-   #86 = Fieldref           #77.#303      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeModified:I\n-   #87 = Fieldref           #77.#320      // org/apache/commons/compress/archivers/arj/LocalFileHeader.compressedSize:J\n-   #88 = Fieldref           #77.#321      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSize:J\n-   #89 = Fieldref           #77.#322      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalCrc32:J\n-   #90 = Fieldref           #77.#306      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileSpecPosition:I\n-   #91 = Fieldref           #77.#323      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileAccessMode:I\n-   #92 = Fieldref           #77.#324      // org/apache/commons/compress/archivers/arj/LocalFileHeader.firstChapter:I\n-   #93 = Fieldref           #77.#310      // org/apache/commons/compress/archivers/arj/LocalFileHeader.lastChapter:I\n-   #94 = Methodref          #36.#325      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-   #95 = Fieldref           #77.#314      // org/apache/commons/compress/archivers/arj/LocalFileHeader.name:Ljava/lang/String;\n-   #96 = Fieldref           #77.#315      // org/apache/commons/compress/archivers/arj/LocalFileHeader.comment:Ljava/lang/String;\n-   #97 = Class              #326          // java/util/ArrayList\n-   #98 = Methodref          #97.#248      // java/util/ArrayList.\"<init>\":()V\n-   #99 = Methodref          #97.#327      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-  #100 = Methodref          #97.#328      // java/util/ArrayList.size:()I\n-  #101 = Class              #190          // \"[B\"\n-  #102 = Methodref          #97.#329      // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #103 = Class              #330          // \"[[B\"\n-  #104 = Fieldref           #77.#331      // org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedHeaders:[[B\n-  #105 = Class              #332          // java/lang/Throwable\n-  #106 = Methodref          #105.#333     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #107 = Fieldref           #77.#334      // org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedFilePosition:I\n-  #108 = Fieldref           #77.#335      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeAccessed:I\n-  #109 = Fieldref           #77.#302      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeCreated:I\n-  #110 = Fieldref           #77.#336      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSizeEvenForVolumes:I\n+   #67 = Methodref          #36.#298      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.pushedBackBytes:(J)V\n+   #68 = Fieldref           #51.#299      // org/apache/commons/compress/archivers/arj/MainHeader.encryptionVersion:I\n+   #69 = Fieldref           #51.#300      // org/apache/commons/compress/archivers/arj/MainHeader.lastChapter:I\n+   #70 = Fieldref           #51.#301      // org/apache/commons/compress/archivers/arj/MainHeader.arjProtectionFactor:I\n+   #71 = Fieldref           #51.#302      // org/apache/commons/compress/archivers/arj/MainHeader.arjFlags2:I\n+   #72 = Methodref          #36.#303      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n+   #73 = Fieldref           #51.#304      // org/apache/commons/compress/archivers/arj/MainHeader.name:Ljava/lang/String;\n+   #74 = Fieldref           #51.#305      // org/apache/commons/compress/archivers/arj/MainHeader.comment:Ljava/lang/String;\n+   #75 = Fieldref           #51.#306      // org/apache/commons/compress/archivers/arj/MainHeader.extendedHeaderBytes:[B\n+   #76 = String             #307          // Extended header CRC32 verification failure\n+   #77 = Class              #308          // org/apache/commons/compress/archivers/arj/LocalFileHeader\n+   #78 = Methodref          #77.#238      // org/apache/commons/compress/archivers/arj/LocalFileHeader.\"<init>\":()V\n+   #79 = Fieldref           #77.#286      // org/apache/commons/compress/archivers/arj/LocalFileHeader.archiverVersionNumber:I\n+   #80 = Fieldref           #77.#287      // org/apache/commons/compress/archivers/arj/LocalFileHeader.minVersionToExtract:I\n+   #81 = Fieldref           #77.#288      // org/apache/commons/compress/archivers/arj/LocalFileHeader.hostOS:I\n+   #82 = Fieldref           #77.#247      // org/apache/commons/compress/archivers/arj/LocalFileHeader.arjFlags:I\n+   #83 = Fieldref           #77.#309      // org/apache/commons/compress/archivers/arj/LocalFileHeader.method:I\n+   #84 = Fieldref           #77.#290      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileType:I\n+   #85 = Fieldref           #77.#291      // org/apache/commons/compress/archivers/arj/LocalFileHeader.reserved:I\n+   #86 = Fieldref           #77.#293      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeModified:I\n+   #87 = Fieldref           #77.#310      // org/apache/commons/compress/archivers/arj/LocalFileHeader.compressedSize:J\n+   #88 = Fieldref           #77.#311      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSize:J\n+   #89 = Fieldref           #77.#312      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalCrc32:J\n+   #90 = Fieldref           #77.#296      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileSpecPosition:I\n+   #91 = Fieldref           #77.#313      // org/apache/commons/compress/archivers/arj/LocalFileHeader.fileAccessMode:I\n+   #92 = Fieldref           #77.#314      // org/apache/commons/compress/archivers/arj/LocalFileHeader.firstChapter:I\n+   #93 = Fieldref           #77.#300      // org/apache/commons/compress/archivers/arj/LocalFileHeader.lastChapter:I\n+   #94 = Methodref          #36.#315      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+   #95 = Fieldref           #77.#304      // org/apache/commons/compress/archivers/arj/LocalFileHeader.name:Ljava/lang/String;\n+   #96 = Fieldref           #77.#305      // org/apache/commons/compress/archivers/arj/LocalFileHeader.comment:Ljava/lang/String;\n+   #97 = Class              #316          // java/util/ArrayList\n+   #98 = Methodref          #97.#238      // java/util/ArrayList.\"<init>\":()V\n+   #99 = Methodref          #97.#317      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #100 = Methodref          #97.#318      // java/util/ArrayList.size:()I\n+  #101 = Class              #186          // \"[B\"\n+  #102 = Methodref          #97.#319      // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #103 = Class              #320          // \"[[B\"\n+  #104 = Fieldref           #77.#321      // org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedHeaders:[[B\n+  #105 = Class              #322          // java/lang/Throwable\n+  #106 = Methodref          #105.#323     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #107 = Fieldref           #77.#324      // org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedFilePosition:I\n+  #108 = Fieldref           #77.#325      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeAccessed:I\n+  #109 = Fieldref           #77.#292      // org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeCreated:I\n+  #110 = Fieldref           #77.#326      // org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSizeEvenForVolumes:I\n   #111 = Long               12l\n   #113 = Long               4l\n-  #115 = Class              #337          // java/lang/Long\n+  #115 = Class              #327          // java/lang/Long\n   #116 = Long               9223372036854775807l\n-  #118 = Methodref          #338.#339     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-  #119 = Methodref          #340.#270     // java/io/InputStream.close:()V\n-  #120 = Methodref          #36.#341      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readLocalFileHeader:()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-  #121 = Class              #342          // org/apache/commons/compress/utils/BoundedInputStream\n-  #122 = Methodref          #121.#343     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-  #123 = Class              #344          // org/apache/commons/compress/utils/CRC32VerifyingInputStream\n-  #124 = Methodref          #123.#345     // org/apache/commons/compress/utils/CRC32VerifyingInputStream.\"<init>\":(Ljava/io/InputStream;JJ)V\n-  #125 = Class              #346          // org/apache/commons/compress/archivers/arj/ArjArchiveEntry\n-  #126 = Methodref          #125.#347     // org/apache/commons/compress/archivers/arj/ArjArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-  #127 = Methodref          #125.#348     // org/apache/commons/compress/archivers/arj/ArjArchiveEntry.getMethod:()I\n-  #128 = Class              #349          // java/lang/IllegalStateException\n-  #129 = String             #350          // No current arj entry\n-  #130 = Methodref          #128.#263     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #131 = Class              #351          // java/lang/StringBuilder\n-  #132 = Methodref          #131.#248     // java/lang/StringBuilder.\"<init>\":()V\n-  #133 = String             #352          // Unsupported compression method\n-  #134 = Methodref          #131.#353     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #135 = Methodref          #131.#354     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #136 = Methodref          #131.#355     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #137 = Methodref          #340.#356     // java/io/InputStream.read:([BII)I\n-  #138 = Methodref          #36.#357      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n-  #139 = Class              #358          // org/apache/commons/compress/archivers/ArchiveInputStream\n+  #118 = Methodref          #328.#329     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #119 = Methodref          #167.#260     // java/io/InputStream.close:()V\n+  #120 = Methodref          #36.#330      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.readLocalFileHeader:()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+  #121 = Class              #331          // org/apache/commons/compress/utils/BoundedInputStream\n+  #122 = Methodref          #121.#332     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #123 = Class              #333          // org/apache/commons/compress/utils/CRC32VerifyingInputStream\n+  #124 = Methodref          #123.#334     // org/apache/commons/compress/utils/CRC32VerifyingInputStream.\"<init>\":(Ljava/io/InputStream;JJ)V\n+  #125 = Class              #335          // org/apache/commons/compress/archivers/arj/ArjArchiveEntry\n+  #126 = Methodref          #125.#336     // org/apache/commons/compress/archivers/arj/ArjArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+  #127 = Methodref          #125.#337     // org/apache/commons/compress/archivers/arj/ArjArchiveEntry.getMethod:()I\n+  #128 = Class              #338          // java/lang/IllegalStateException\n+  #129 = String             #339          // No current arj entry\n+  #130 = Methodref          #128.#253     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #131 = Class              #340          // java/lang/StringBuilder\n+  #132 = Methodref          #131.#238     // java/lang/StringBuilder.\"<init>\":()V\n+  #133 = String             #341          // Unsupported compression method\n+  #134 = Methodref          #131.#342     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #135 = Methodref          #131.#343     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #136 = Methodref          #131.#344     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #137 = Methodref          #167.#345     // java/io/InputStream.read:([BII)I\n+  #138 = Methodref          #36.#346      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n+  #139 = Class              #347          // org/apache/commons/compress/archivers/ArchiveInputStream\n   #140 = Utf8               ARJ_MAGIC_1\n   #141 = Utf8               I\n   #142 = Utf8               ConstantValue\n   #143 = Integer            96\n   #144 = Utf8               ARJ_MAGIC_2\n   #145 = Integer            234\n   #146 = Utf8               in\n@@ -165,274 +165,263 @@\n   #160 = Utf8               LocalVariableTable\n   #161 = Utf8               ioException\n   #162 = Utf8               Ljava/io/IOException;\n   #163 = Utf8               this\n   #164 = Utf8               Lorg/apache/commons/compress/archivers/arj/ArjArchiveInputStream;\n   #165 = Utf8               inputStream\n   #166 = Utf8               StackMapTable\n-  #167 = Class              #285          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-  #168 = Class              #359          // java/io/InputStream\n-  #169 = Class              #279          // java/lang/String\n-  #170 = Class              #265          // java/io/IOException\n-  #171 = Utf8               Exceptions\n-  #172 = Utf8               (Ljava/io/InputStream;)V\n-  #173 = Utf8               close\n-  #174 = Utf8               ()V\n-  #175 = Utf8               read8\n-  #176 = Utf8               (Ljava/io/DataInputStream;)I\n-  #177 = Utf8               dataIn\n-  #178 = Utf8               value\n-  #179 = Utf8               read16\n-  #180 = Utf8               read32\n-  #181 = Utf8               readString\n-  #182 = Utf8               (Ljava/io/DataInputStream;)Ljava/lang/String;\n-  #183 = Utf8               buffer\n-  #184 = Utf8               Ljava/io/ByteArrayOutputStream;\n-  #185 = Utf8               nextByte\n-  #186 = Class              #277          // java/io/ByteArrayOutputStream\n-  #187 = Utf8               readFully\n-  #188 = Utf8               (Ljava/io/DataInputStream;[B)V\n-  #189 = Utf8               b\n-  #190 = Utf8               [B\n-  #191 = Utf8               readHeader\n-  #192 = Utf8               ()[B\n-  #193 = Utf8               basicHeaderCrc32\n-  #194 = Utf8               J\n-  #195 = Utf8               crc32\n-  #196 = Utf8               Ljava/util/zip/CRC32;\n-  #197 = Utf8               first\n-  #198 = Utf8               second\n-  #199 = Utf8               basicHeaderSize\n-  #200 = Utf8               found\n-  #201 = Utf8               Z\n-  #202 = Utf8               basicHeaderBytes\n-  #203 = Utf8               readMainHeader\n-  #204 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n-  #205 = Utf8               extendedHeaderCrc32\n-  #206 = Utf8               basicHeader\n-  #207 = Utf8               firstHeaderSize\n-  #208 = Utf8               firstHeaderBytes\n-  #209 = Utf8               firstHeader\n-  #210 = Utf8               hdr\n-  #211 = Utf8               extendedHeaderSize\n-  #212 = Class              #251          // java/io/DataInputStream\n-  #213 = Class              #295          // org/apache/commons/compress/archivers/arj/MainHeader\n-  #214 = Utf8               readLocalFileHeader\n-  #215 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-  #216 = Utf8               extendedHeaderBytes\n-  #217 = Utf8               localFileHeader\n-  #218 = Utf8               extendedHeaders\n-  #219 = Utf8               Ljava/util/ArrayList;\n-  #220 = Utf8               LocalVariableTypeTable\n-  #221 = Utf8               Ljava/util/ArrayList<[B>;\n-  #222 = Class              #332          // java/lang/Throwable\n-  #223 = Class              #318          // org/apache/commons/compress/archivers/arj/LocalFileHeader\n-  #224 = Class              #326          // java/util/ArrayList\n-  #225 = Class              #289          // java/util/zip/CRC32\n-  #226 = Utf8               readExtraData\n-  #227 = Utf8               (ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-  #228 = Utf8               matches\n-  #229 = Utf8               ([BI)Z\n-  #230 = Utf8               signature\n-  #231 = Utf8               length\n-  #232 = Utf8               getArchiveName\n-  #233 = Utf8               ()Ljava/lang/String;\n-  #234 = Utf8               getArchiveComment\n-  #235 = Utf8               getNextEntry\n-  #236 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n-  #237 = Utf8               canReadEntryData\n-  #238 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n-  #239 = Utf8               ae\n-  #240 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #241 = Utf8               read\n-  #242 = Utf8               ([BII)I\n-  #243 = Utf8               off\n-  #244 = Utf8               len\n-  #245 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #246 = Utf8               SourceFile\n-  #247 = Utf8               ArjArchiveInputStream.java\n-  #248 = NameAndType        #156:#174     // \"<init>\":()V\n-  #249 = NameAndType        #152:#153     // currentLocalFileHeader:Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-  #250 = NameAndType        #154:#155     // currentInputStream:Ljava/io/InputStream;\n-  #251 = Utf8               java/io/DataInputStream\n-  #252 = NameAndType        #156:#172     // \"<init>\":(Ljava/io/InputStream;)V\n-  #253 = NameAndType        #146:#147     // in:Ljava/io/DataInputStream;\n-  #254 = NameAndType        #148:#149     // charsetName:Ljava/lang/String;\n-  #255 = NameAndType        #203:#204     // readMainHeader:()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n-  #256 = NameAndType        #150:#151     // mainHeader:Lorg/apache/commons/compress/archivers/arj/MainHeader;\n-  #257 = NameAndType        #360:#141     // arjFlags:I\n-  #258 = Utf8               org/apache/commons/compress/archivers/arj/MainHeader$Flags\n-  #259 = Utf8               Flags\n-  #260 = Utf8               InnerClasses\n-  #261 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #262 = Utf8               Encrypted ARJ files are unsupported\n-  #263 = NameAndType        #156:#361     // \"<init>\":(Ljava/lang/String;)V\n-  #264 = Utf8               Multi-volume ARJ files are unsupported\n-  #265 = Utf8               java/io/IOException\n-  #266 = NameAndType        #362:#233     // getMessage:()Ljava/lang/String;\n-  #267 = NameAndType        #156:#363     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #268 = Utf8               CP437\n-  #269 = NameAndType        #156:#157     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #270 = NameAndType        #173:#174     // close:()V\n-  #271 = NameAndType        #364:#365     // readUnsignedByte:()I\n-  #272 = NameAndType        #366:#367     // count:(I)V\n-  #273 = NameAndType        #368:#365     // readUnsignedShort:()I\n-  #274 = Class              #369          // java/lang/Integer\n-  #275 = NameAndType        #370:#371     // reverseBytes:(I)I\n-  #276 = NameAndType        #372:#365     // readInt:()I\n-  #277 = Utf8               java/io/ByteArrayOutputStream\n-  #278 = NameAndType        #373:#367     // write:(I)V\n-  #279 = Utf8               java/lang/String\n-  #280 = NameAndType        #374:#192     // toByteArray:()[B\n-  #281 = NameAndType        #156:#375     // \"<init>\":([BLjava/lang/String;)V\n-  #282 = NameAndType        #156:#376     // \"<init>\":([B)V\n-  #283 = NameAndType        #187:#376     // readFully:([B)V\n-  #284 = NameAndType        #175:#176     // read8:(Ljava/io/DataInputStream;)I\n-  #285 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-  #286 = NameAndType        #179:#176     // read16:(Ljava/io/DataInputStream;)I\n-  #287 = NameAndType        #187:#188     // readFully:(Ljava/io/DataInputStream;[B)V\n-  #288 = NameAndType        #180:#176     // read32:(Ljava/io/DataInputStream;)I\n-  #289 = Utf8               java/util/zip/CRC32\n-  #290 = NameAndType        #377:#376     // update:([B)V\n-  #291 = NameAndType        #378:#379     // getValue:()J\n-  #292 = NameAndType        #191:#192     // readHeader:()[B\n-  #293 = Utf8               Archive ends without any headers\n-  #294 = Utf8               java/io/ByteArrayInputStream\n-  #295 = Utf8               org/apache/commons/compress/archivers/arj/MainHeader\n-  #296 = NameAndType        #380:#141     // archiverVersionNumber:I\n-  #297 = NameAndType        #381:#141     // minVersionToExtract:I\n-  #298 = NameAndType        #382:#141     // hostOS:I\n-  #299 = NameAndType        #383:#141     // securityVersion:I\n-  #300 = NameAndType        #384:#141     // fileType:I\n-  #301 = NameAndType        #385:#141     // reserved:I\n-  #302 = NameAndType        #386:#141     // dateTimeCreated:I\n-  #303 = NameAndType        #387:#141     // dateTimeModified:I\n-  #304 = NameAndType        #388:#194     // archiveSize:J\n-  #305 = NameAndType        #389:#141     // securityEnvelopeFilePosition:I\n-  #306 = NameAndType        #390:#141     // fileSpecPosition:I\n-  #307 = NameAndType        #391:#141     // securityEnvelopeLength:I\n-  #308 = NameAndType        #392:#393     // pushedBackBytes:(J)V\n-  #309 = NameAndType        #394:#141     // encryptionVersion:I\n-  #310 = NameAndType        #395:#141     // lastChapter:I\n-  #311 = NameAndType        #396:#141     // arjProtectionFactor:I\n-  #312 = NameAndType        #397:#141     // arjFlags2:I\n-  #313 = NameAndType        #181:#182     // readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n-  #314 = NameAndType        #398:#149     // name:Ljava/lang/String;\n-  #315 = NameAndType        #399:#149     // comment:Ljava/lang/String;\n-  #316 = NameAndType        #216:#190     // extendedHeaderBytes:[B\n-  #317 = Utf8               Extended header CRC32 verification failure\n-  #318 = Utf8               org/apache/commons/compress/archivers/arj/LocalFileHeader\n-  #319 = NameAndType        #400:#141     // method:I\n-  #320 = NameAndType        #401:#194     // compressedSize:J\n-  #321 = NameAndType        #402:#194     // originalSize:J\n-  #322 = NameAndType        #403:#194     // originalCrc32:J\n-  #323 = NameAndType        #404:#141     // fileAccessMode:I\n-  #324 = NameAndType        #405:#141     // firstChapter:I\n-  #325 = NameAndType        #226:#227     // readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-  #326 = Utf8               java/util/ArrayList\n-  #327 = NameAndType        #406:#407     // add:(Ljava/lang/Object;)Z\n-  #328 = NameAndType        #408:#365     // size:()I\n-  #329 = NameAndType        #409:#410     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #330 = Utf8               [[B\n-  #331 = NameAndType        #218:#330     // extendedHeaders:[[B\n-  #332 = Utf8               java/lang/Throwable\n-  #333 = NameAndType        #411:#412     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #334 = NameAndType        #413:#141     // extendedFilePosition:I\n-  #335 = NameAndType        #414:#141     // dateTimeAccessed:I\n-  #336 = NameAndType        #415:#141     // originalSizeEvenForVolumes:I\n-  #337 = Utf8               java/lang/Long\n-  #338 = Class              #416          // org/apache/commons/compress/utils/IOUtils\n-  #339 = NameAndType        #417:#418     // skip:(Ljava/io/InputStream;J)J\n-  #340 = Class              #359          // java/io/InputStream\n-  #341 = NameAndType        #214:#215     // readLocalFileHeader:()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-  #342 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #343 = NameAndType        #156:#419     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #344 = Utf8               org/apache/commons/compress/utils/CRC32VerifyingInputStream\n-  #345 = NameAndType        #156:#420     // \"<init>\":(Ljava/io/InputStream;JJ)V\n-  #346 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveEntry\n-  #347 = NameAndType        #156:#421     // \"<init>\":(Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-  #348 = NameAndType        #422:#365     // getMethod:()I\n-  #349 = Utf8               java/lang/IllegalStateException\n-  #350 = Utf8               No current arj entry\n-  #351 = Utf8               java/lang/StringBuilder\n-  #352 = Utf8               Unsupported compression method\n-  #353 = NameAndType        #423:#424     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #354 = NameAndType        #423:#425     // append:(I)Ljava/lang/StringBuilder;\n-  #355 = NameAndType        #426:#233     // toString:()Ljava/lang/String;\n-  #356 = NameAndType        #241:#242     // read:([BII)I\n-  #357 = NameAndType        #235:#236     // getNextEntry:()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n-  #358 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #359 = Utf8               java/io/InputStream\n-  #360 = Utf8               arjFlags\n-  #361 = Utf8               (Ljava/lang/String;)V\n-  #362 = Utf8               getMessage\n-  #363 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #364 = Utf8               readUnsignedByte\n-  #365 = Utf8               ()I\n-  #366 = Utf8               count\n-  #367 = Utf8               (I)V\n-  #368 = Utf8               readUnsignedShort\n-  #369 = Utf8               java/lang/Integer\n-  #370 = Utf8               reverseBytes\n-  #371 = Utf8               (I)I\n-  #372 = Utf8               readInt\n-  #373 = Utf8               write\n-  #374 = Utf8               toByteArray\n-  #375 = Utf8               ([BLjava/lang/String;)V\n-  #376 = Utf8               ([B)V\n-  #377 = Utf8               update\n-  #378 = Utf8               getValue\n-  #379 = Utf8               ()J\n-  #380 = Utf8               archiverVersionNumber\n-  #381 = Utf8               minVersionToExtract\n-  #382 = Utf8               hostOS\n-  #383 = Utf8               securityVersion\n-  #384 = Utf8               fileType\n-  #385 = Utf8               reserved\n-  #386 = Utf8               dateTimeCreated\n-  #387 = Utf8               dateTimeModified\n-  #388 = Utf8               archiveSize\n-  #389 = Utf8               securityEnvelopeFilePosition\n-  #390 = Utf8               fileSpecPosition\n-  #391 = Utf8               securityEnvelopeLength\n-  #392 = Utf8               pushedBackBytes\n-  #393 = Utf8               (J)V\n-  #394 = Utf8               encryptionVersion\n-  #395 = Utf8               lastChapter\n-  #396 = Utf8               arjProtectionFactor\n-  #397 = Utf8               arjFlags2\n-  #398 = Utf8               name\n-  #399 = Utf8               comment\n-  #400 = Utf8               method\n-  #401 = Utf8               compressedSize\n-  #402 = Utf8               originalSize\n-  #403 = Utf8               originalCrc32\n-  #404 = Utf8               fileAccessMode\n-  #405 = Utf8               firstChapter\n-  #406 = Utf8               add\n-  #407 = Utf8               (Ljava/lang/Object;)Z\n-  #408 = Utf8               size\n-  #409 = Utf8               toArray\n-  #410 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #411 = Utf8               addSuppressed\n-  #412 = Utf8               (Ljava/lang/Throwable;)V\n-  #413 = Utf8               extendedFilePosition\n-  #414 = Utf8               dateTimeAccessed\n-  #415 = Utf8               originalSizeEvenForVolumes\n-  #416 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #417 = Utf8               skip\n-  #418 = Utf8               (Ljava/io/InputStream;J)J\n-  #419 = Utf8               (Ljava/io/InputStream;J)V\n-  #420 = Utf8               (Ljava/io/InputStream;JJ)V\n-  #421 = Utf8               (Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-  #422 = Utf8               getMethod\n-  #423 = Utf8               append\n-  #424 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #425 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #426 = Utf8               toString\n+  #167 = Class              #348          // java/io/InputStream\n+  #168 = Utf8               Exceptions\n+  #169 = Utf8               (Ljava/io/InputStream;)V\n+  #170 = Utf8               close\n+  #171 = Utf8               ()V\n+  #172 = Utf8               read8\n+  #173 = Utf8               (Ljava/io/DataInputStream;)I\n+  #174 = Utf8               dataIn\n+  #175 = Utf8               value\n+  #176 = Utf8               read16\n+  #177 = Utf8               read32\n+  #178 = Utf8               readString\n+  #179 = Utf8               (Ljava/io/DataInputStream;)Ljava/lang/String;\n+  #180 = Utf8               buffer\n+  #181 = Utf8               Ljava/io/ByteArrayOutputStream;\n+  #182 = Utf8               nextByte\n+  #183 = Utf8               readFully\n+  #184 = Utf8               (Ljava/io/DataInputStream;[B)V\n+  #185 = Utf8               b\n+  #186 = Utf8               [B\n+  #187 = Utf8               readHeader\n+  #188 = Utf8               ()[B\n+  #189 = Utf8               basicHeaderCrc32\n+  #190 = Utf8               J\n+  #191 = Utf8               crc32\n+  #192 = Utf8               Ljava/util/zip/CRC32;\n+  #193 = Utf8               first\n+  #194 = Utf8               second\n+  #195 = Utf8               basicHeaderSize\n+  #196 = Utf8               found\n+  #197 = Utf8               Z\n+  #198 = Utf8               basicHeaderBytes\n+  #199 = Utf8               readMainHeader\n+  #200 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n+  #201 = Utf8               extendedHeaderCrc32\n+  #202 = Utf8               basicHeader\n+  #203 = Utf8               firstHeaderSize\n+  #204 = Utf8               firstHeaderBytes\n+  #205 = Utf8               firstHeader\n+  #206 = Utf8               hdr\n+  #207 = Utf8               extendedHeaderSize\n+  #208 = Utf8               readLocalFileHeader\n+  #209 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+  #210 = Utf8               extendedHeaderBytes\n+  #211 = Utf8               localFileHeader\n+  #212 = Utf8               extendedHeaders\n+  #213 = Utf8               Ljava/util/ArrayList;\n+  #214 = Utf8               LocalVariableTypeTable\n+  #215 = Utf8               Ljava/util/ArrayList<[B>;\n+  #216 = Utf8               readExtraData\n+  #217 = Utf8               (ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+  #218 = Utf8               matches\n+  #219 = Utf8               ([BI)Z\n+  #220 = Utf8               signature\n+  #221 = Utf8               length\n+  #222 = Utf8               getArchiveName\n+  #223 = Utf8               ()Ljava/lang/String;\n+  #224 = Utf8               getArchiveComment\n+  #225 = Utf8               getNextEntry\n+  #226 = Utf8               ()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n+  #227 = Utf8               canReadEntryData\n+  #228 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n+  #229 = Utf8               ae\n+  #230 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #231 = Utf8               read\n+  #232 = Utf8               ([BII)I\n+  #233 = Utf8               off\n+  #234 = Utf8               len\n+  #235 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #236 = Utf8               SourceFile\n+  #237 = Utf8               ArjArchiveInputStream.java\n+  #238 = NameAndType        #156:#171     // \"<init>\":()V\n+  #239 = NameAndType        #152:#153     // currentLocalFileHeader:Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+  #240 = NameAndType        #154:#155     // currentInputStream:Ljava/io/InputStream;\n+  #241 = Utf8               java/io/DataInputStream\n+  #242 = NameAndType        #156:#169     // \"<init>\":(Ljava/io/InputStream;)V\n+  #243 = NameAndType        #146:#147     // in:Ljava/io/DataInputStream;\n+  #244 = NameAndType        #148:#149     // charsetName:Ljava/lang/String;\n+  #245 = NameAndType        #199:#200     // readMainHeader:()Lorg/apache/commons/compress/archivers/arj/MainHeader;\n+  #246 = NameAndType        #150:#151     // mainHeader:Lorg/apache/commons/compress/archivers/arj/MainHeader;\n+  #247 = NameAndType        #349:#141     // arjFlags:I\n+  #248 = Utf8               org/apache/commons/compress/archivers/arj/MainHeader$Flags\n+  #249 = Utf8               Flags\n+  #250 = Utf8               InnerClasses\n+  #251 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+  #252 = Utf8               Encrypted ARJ files are unsupported\n+  #253 = NameAndType        #156:#350     // \"<init>\":(Ljava/lang/String;)V\n+  #254 = Utf8               Multi-volume ARJ files are unsupported\n+  #255 = Utf8               java/io/IOException\n+  #256 = NameAndType        #351:#223     // getMessage:()Ljava/lang/String;\n+  #257 = NameAndType        #156:#352     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #258 = Utf8               CP437\n+  #259 = NameAndType        #156:#157     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #260 = NameAndType        #170:#171     // close:()V\n+  #261 = NameAndType        #353:#354     // readUnsignedByte:()I\n+  #262 = NameAndType        #355:#356     // count:(I)V\n+  #263 = NameAndType        #357:#354     // readUnsignedShort:()I\n+  #264 = Class              #358          // java/lang/Integer\n+  #265 = NameAndType        #359:#360     // reverseBytes:(I)I\n+  #266 = NameAndType        #361:#354     // readInt:()I\n+  #267 = Utf8               java/io/ByteArrayOutputStream\n+  #268 = NameAndType        #362:#356     // write:(I)V\n+  #269 = Utf8               java/lang/String\n+  #270 = NameAndType        #363:#188     // toByteArray:()[B\n+  #271 = NameAndType        #156:#364     // \"<init>\":([BLjava/lang/String;)V\n+  #272 = NameAndType        #156:#365     // \"<init>\":([B)V\n+  #273 = NameAndType        #183:#365     // readFully:([B)V\n+  #274 = NameAndType        #172:#173     // read8:(Ljava/io/DataInputStream;)I\n+  #275 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+  #276 = NameAndType        #176:#173     // read16:(Ljava/io/DataInputStream;)I\n+  #277 = NameAndType        #183:#184     // readFully:(Ljava/io/DataInputStream;[B)V\n+  #278 = NameAndType        #177:#173     // read32:(Ljava/io/DataInputStream;)I\n+  #279 = Utf8               java/util/zip/CRC32\n+  #280 = NameAndType        #366:#365     // update:([B)V\n+  #281 = NameAndType        #367:#368     // getValue:()J\n+  #282 = NameAndType        #187:#188     // readHeader:()[B\n+  #283 = Utf8               Archive ends without any headers\n+  #284 = Utf8               java/io/ByteArrayInputStream\n+  #285 = Utf8               org/apache/commons/compress/archivers/arj/MainHeader\n+  #286 = NameAndType        #369:#141     // archiverVersionNumber:I\n+  #287 = NameAndType        #370:#141     // minVersionToExtract:I\n+  #288 = NameAndType        #371:#141     // hostOS:I\n+  #289 = NameAndType        #372:#141     // securityVersion:I\n+  #290 = NameAndType        #373:#141     // fileType:I\n+  #291 = NameAndType        #374:#141     // reserved:I\n+  #292 = NameAndType        #375:#141     // dateTimeCreated:I\n+  #293 = NameAndType        #376:#141     // dateTimeModified:I\n+  #294 = NameAndType        #377:#190     // archiveSize:J\n+  #295 = NameAndType        #378:#141     // securityEnvelopeFilePosition:I\n+  #296 = NameAndType        #379:#141     // fileSpecPosition:I\n+  #297 = NameAndType        #380:#141     // securityEnvelopeLength:I\n+  #298 = NameAndType        #381:#382     // pushedBackBytes:(J)V\n+  #299 = NameAndType        #383:#141     // encryptionVersion:I\n+  #300 = NameAndType        #384:#141     // lastChapter:I\n+  #301 = NameAndType        #385:#141     // arjProtectionFactor:I\n+  #302 = NameAndType        #386:#141     // arjFlags2:I\n+  #303 = NameAndType        #178:#179     // readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n+  #304 = NameAndType        #387:#149     // name:Ljava/lang/String;\n+  #305 = NameAndType        #388:#149     // comment:Ljava/lang/String;\n+  #306 = NameAndType        #210:#186     // extendedHeaderBytes:[B\n+  #307 = Utf8               Extended header CRC32 verification failure\n+  #308 = Utf8               org/apache/commons/compress/archivers/arj/LocalFileHeader\n+  #309 = NameAndType        #389:#141     // method:I\n+  #310 = NameAndType        #390:#190     // compressedSize:J\n+  #311 = NameAndType        #391:#190     // originalSize:J\n+  #312 = NameAndType        #392:#190     // originalCrc32:J\n+  #313 = NameAndType        #393:#141     // fileAccessMode:I\n+  #314 = NameAndType        #394:#141     // firstChapter:I\n+  #315 = NameAndType        #216:#217     // readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+  #316 = Utf8               java/util/ArrayList\n+  #317 = NameAndType        #395:#396     // add:(Ljava/lang/Object;)Z\n+  #318 = NameAndType        #397:#354     // size:()I\n+  #319 = NameAndType        #398:#399     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #320 = Utf8               [[B\n+  #321 = NameAndType        #212:#320     // extendedHeaders:[[B\n+  #322 = Utf8               java/lang/Throwable\n+  #323 = NameAndType        #400:#401     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #324 = NameAndType        #402:#141     // extendedFilePosition:I\n+  #325 = NameAndType        #403:#141     // dateTimeAccessed:I\n+  #326 = NameAndType        #404:#141     // originalSizeEvenForVolumes:I\n+  #327 = Utf8               java/lang/Long\n+  #328 = Class              #405          // org/apache/commons/compress/utils/IOUtils\n+  #329 = NameAndType        #406:#407     // skip:(Ljava/io/InputStream;J)J\n+  #330 = NameAndType        #208:#209     // readLocalFileHeader:()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+  #331 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #332 = NameAndType        #156:#408     // \"<init>\":(Ljava/io/InputStream;J)V\n+  #333 = Utf8               org/apache/commons/compress/utils/CRC32VerifyingInputStream\n+  #334 = NameAndType        #156:#409     // \"<init>\":(Ljava/io/InputStream;JJ)V\n+  #335 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveEntry\n+  #336 = NameAndType        #156:#410     // \"<init>\":(Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+  #337 = NameAndType        #411:#354     // getMethod:()I\n+  #338 = Utf8               java/lang/IllegalStateException\n+  #339 = Utf8               No current arj entry\n+  #340 = Utf8               java/lang/StringBuilder\n+  #341 = Utf8               Unsupported compression method\n+  #342 = NameAndType        #412:#413     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #343 = NameAndType        #412:#414     // append:(I)Ljava/lang/StringBuilder;\n+  #344 = NameAndType        #415:#223     // toString:()Ljava/lang/String;\n+  #345 = NameAndType        #231:#232     // read:([BII)I\n+  #346 = NameAndType        #225:#226     // getNextEntry:()Lorg/apache/commons/compress/archivers/arj/ArjArchiveEntry;\n+  #347 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+  #348 = Utf8               java/io/InputStream\n+  #349 = Utf8               arjFlags\n+  #350 = Utf8               (Ljava/lang/String;)V\n+  #351 = Utf8               getMessage\n+  #352 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+  #353 = Utf8               readUnsignedByte\n+  #354 = Utf8               ()I\n+  #355 = Utf8               count\n+  #356 = Utf8               (I)V\n+  #357 = Utf8               readUnsignedShort\n+  #358 = Utf8               java/lang/Integer\n+  #359 = Utf8               reverseBytes\n+  #360 = Utf8               (I)I\n+  #361 = Utf8               readInt\n+  #362 = Utf8               write\n+  #363 = Utf8               toByteArray\n+  #364 = Utf8               ([BLjava/lang/String;)V\n+  #365 = Utf8               ([B)V\n+  #366 = Utf8               update\n+  #367 = Utf8               getValue\n+  #368 = Utf8               ()J\n+  #369 = Utf8               archiverVersionNumber\n+  #370 = Utf8               minVersionToExtract\n+  #371 = Utf8               hostOS\n+  #372 = Utf8               securityVersion\n+  #373 = Utf8               fileType\n+  #374 = Utf8               reserved\n+  #375 = Utf8               dateTimeCreated\n+  #376 = Utf8               dateTimeModified\n+  #377 = Utf8               archiveSize\n+  #378 = Utf8               securityEnvelopeFilePosition\n+  #379 = Utf8               fileSpecPosition\n+  #380 = Utf8               securityEnvelopeLength\n+  #381 = Utf8               pushedBackBytes\n+  #382 = Utf8               (J)V\n+  #383 = Utf8               encryptionVersion\n+  #384 = Utf8               lastChapter\n+  #385 = Utf8               arjProtectionFactor\n+  #386 = Utf8               arjFlags2\n+  #387 = Utf8               name\n+  #388 = Utf8               comment\n+  #389 = Utf8               method\n+  #390 = Utf8               compressedSize\n+  #391 = Utf8               originalSize\n+  #392 = Utf8               originalCrc32\n+  #393 = Utf8               fileAccessMode\n+  #394 = Utf8               firstChapter\n+  #395 = Utf8               add\n+  #396 = Utf8               (Ljava/lang/Object;)Z\n+  #397 = Utf8               size\n+  #398 = Utf8               toArray\n+  #399 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #400 = Utf8               addSuppressed\n+  #401 = Utf8               (Ljava/lang/Throwable;)V\n+  #402 = Utf8               extendedFilePosition\n+  #403 = Utf8               dateTimeAccessed\n+  #404 = Utf8               originalSizeEvenForVolumes\n+  #405 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #406 = Utf8               skip\n+  #407 = Utf8               (Ljava/io/InputStream;J)J\n+  #408 = Utf8               (Ljava/io/InputStream;J)V\n+  #409 = Utf8               (Ljava/io/InputStream;JJ)V\n+  #410 = Utf8               (Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+  #411 = Utf8               getMethod\n+  #412 = Utf8               append\n+  #413 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #414 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #415 = Utf8               toString\n {\n   private static final int ARJ_MAGIC_1 = 96;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 96\n \n   private static final int ARJ_MAGIC_2 = 234;\n@@ -1136,15 +1125,15 @@\n     Exceptions:\n       throws java.io.IOException\n \n   private org.apache.commons.compress.archivers.arj.LocalFileHeader readLocalFileHeader() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n-      stack=5, locals=19, args_size=1\n+      stack=5, locals=13, args_size=1\n          0: aload_0\n          1: invokespecial #46                 // Method readHeader:()[B\n          4: astore_1\n          5: aload_1\n          6: ifnonnull     11\n          9: aconst_null\n         10: areturn\n@@ -1152,394 +1141,318 @@\n         14: dup\n         15: new           #49                 // class java/io/ByteArrayInputStream\n         18: dup\n         19: aload_1\n         20: invokespecial #50                 // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n         23: invokespecial #5                  // Method java/io/DataInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         26: astore_2\n-        27: aconst_null\n-        28: astore_3\n-        29: aload_2\n-        30: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-        33: istore        4\n-        35: iload         4\n-        37: iconst_1\n-        38: isub\n-        39: newarray       byte\n-        41: astore        5\n-        43: aload_2\n-        44: aload         5\n-        46: invokevirtual #34                 // Method java/io/DataInputStream.readFully:([B)V\n-        49: new           #4                  // class java/io/DataInputStream\n+        27: aload_2\n+        28: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+        31: istore_3\n+        32: iload_3\n+        33: iconst_1\n+        34: isub\n+        35: newarray       byte\n+        37: astore        4\n+        39: aload_2\n+        40: aload         4\n+        42: invokevirtual #34                 // Method java/io/DataInputStream.readFully:([B)V\n+        45: new           #4                  // class java/io/DataInputStream\n+        48: dup\n+        49: new           #49                 // class java/io/ByteArrayInputStream\n         52: dup\n-        53: new           #49                 // class java/io/ByteArrayInputStream\n-        56: dup\n-        57: aload         5\n-        59: invokespecial #50                 // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n-        62: invokespecial #5                  // Method java/io/DataInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        65: astore        6\n-        67: aconst_null\n-        68: astore        7\n-        70: new           #77                 // class org/apache/commons/compress/archivers/arj/LocalFileHeader\n-        73: dup\n-        74: invokespecial #78                 // Method org/apache/commons/compress/archivers/arj/LocalFileHeader.\"<init>\":()V\n-        77: astore        8\n-        79: aload         8\n-        81: aload         6\n-        83: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-        86: putfield      #79                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.archiverVersionNumber:I\n-        89: aload         8\n-        91: aload         6\n-        93: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-        96: putfield      #80                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.minVersionToExtract:I\n-        99: aload         8\n-       101: aload         6\n-       103: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       106: putfield      #81                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.hostOS:I\n-       109: aload         8\n-       111: aload         6\n-       113: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       116: putfield      #82                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.arjFlags:I\n-       119: aload         8\n-       121: aload         6\n-       123: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       126: putfield      #83                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.method:I\n-       129: aload         8\n-       131: aload         6\n-       133: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       136: putfield      #84                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileType:I\n-       139: aload         8\n-       141: aload         6\n-       143: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       146: putfield      #85                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.reserved:I\n-       149: aload         8\n-       151: aload_0\n-       152: aload         6\n-       154: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n-       157: putfield      #86                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeModified:I\n-       160: aload         8\n-       162: ldc2_w        #40                 // long 4294967295l\n-       165: aload_0\n-       166: aload         6\n-       168: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n-       171: i2l\n-       172: land\n-       173: putfield      #87                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.compressedSize:J\n-       176: aload         8\n-       178: ldc2_w        #40                 // long 4294967295l\n-       181: aload_0\n-       182: aload         6\n-       184: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n-       187: i2l\n-       188: land\n-       189: putfield      #88                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSize:J\n-       192: aload         8\n-       194: ldc2_w        #40                 // long 4294967295l\n-       197: aload_0\n-       198: aload         6\n-       200: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n-       203: i2l\n-       204: land\n-       205: putfield      #89                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.originalCrc32:J\n-       208: aload         8\n-       210: aload_0\n-       211: aload         6\n-       213: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n-       216: putfield      #90                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileSpecPosition:I\n-       219: aload         8\n-       221: aload_0\n-       222: aload         6\n-       224: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n-       227: putfield      #91                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileAccessMode:I\n-       230: aload_0\n-       231: ldc2_w        #65                 // long 20l\n-       234: invokevirtual #67                 // Method pushedBackBytes:(J)V\n-       237: aload         8\n-       239: aload         6\n-       241: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       244: putfield      #92                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.firstChapter:I\n-       247: aload         8\n-       249: aload         6\n-       251: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n-       254: putfield      #93                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.lastChapter:I\n-       257: aload_0\n-       258: iload         4\n-       260: aload         6\n-       262: aload         8\n-       264: invokespecial #94                 // Method readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n-       267: aload         8\n-       269: aload_0\n-       270: aload_2\n-       271: invokespecial #72                 // Method readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n-       274: putfield      #95                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.name:Ljava/lang/String;\n-       277: aload         8\n-       279: aload_0\n-       280: aload_2\n-       281: invokespecial #72                 // Method readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n-       284: putfield      #96                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.comment:Ljava/lang/String;\n-       287: new           #97                 // class java/util/ArrayList\n-       290: dup\n-       291: invokespecial #98                 // Method java/util/ArrayList.\"<init>\":()V\n-       294: astore        9\n-       296: aload_0\n-       297: aload_0\n-       298: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n-       301: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n-       304: dup\n-       305: istore        10\n-       307: ifle          389\n-       310: iload         10\n-       312: newarray       byte\n-       314: astore        11\n-       316: aload_0\n-       317: aload_0\n-       318: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n-       321: aload         11\n-       323: invokespecial #38                 // Method readFully:(Ljava/io/DataInputStream;[B)V\n-       326: ldc2_w        #40                 // long 4294967295l\n-       329: aload_0\n-       330: aload_0\n-       331: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n-       334: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n-       337: i2l\n-       338: land\n-       339: lstore        12\n-       341: new           #42                 // class java/util/zip/CRC32\n-       344: dup\n-       345: invokespecial #43                 // Method java/util/zip/CRC32.\"<init>\":()V\n-       348: astore        14\n-       350: aload         14\n-       352: aload         11\n-       354: invokevirtual #44                 // Method java/util/zip/CRC32.update:([B)V\n-       357: lload         12\n-       359: aload         14\n-       361: invokevirtual #45                 // Method java/util/zip/CRC32.getValue:()J\n-       364: lcmp\n-       365: ifeq          378\n-       368: new           #16                 // class java/io/IOException\n-       371: dup\n-       372: ldc           #76                 // String Extended header CRC32 verification failure\n-       374: invokespecial #48                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       377: athrow\n-       378: aload         9\n-       380: aload         11\n-       382: invokevirtual #99                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-       385: pop\n-       386: goto          296\n-       389: aload         8\n-       391: aload         9\n-       393: aload         9\n-       395: invokevirtual #100                // Method java/util/ArrayList.size:()I\n-       398: anewarray     #101                // class \"[B\"\n-       401: invokevirtual #102                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       404: checkcast     #103                // class \"[[B\"\n-       407: putfield      #104                // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedHeaders:[[B\n-       410: aload         8\n-       412: astore        11\n-       414: aload         6\n-       416: ifnull        449\n-       419: aload         7\n-       421: ifnull        444\n-       424: aload         6\n-       426: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       429: goto          449\n-       432: astore        12\n-       434: aload         7\n-       436: aload         12\n-       438: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       441: goto          449\n-       444: aload         6\n-       446: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       449: aload_2\n-       450: ifnull        479\n-       453: aload_3\n-       454: ifnull        475\n-       457: aload_2\n-       458: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       461: goto          479\n-       464: astore        12\n-       466: aload_3\n-       467: aload         12\n-       469: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       472: goto          479\n-       475: aload_2\n-       476: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       479: aload         11\n-       481: areturn\n-       482: astore        8\n-       484: aload         8\n-       486: astore        7\n-       488: aload         8\n-       490: athrow\n-       491: astore        15\n-       493: aload         6\n-       495: ifnull        528\n-       498: aload         7\n-       500: ifnull        523\n-       503: aload         6\n-       505: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       508: goto          528\n-       511: astore        16\n-       513: aload         7\n-       515: aload         16\n-       517: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       520: goto          528\n-       523: aload         6\n-       525: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       528: aload         15\n-       530: athrow\n-       531: astore        4\n-       533: aload         4\n-       535: astore_3\n-       536: aload         4\n-       538: athrow\n-       539: astore        17\n-       541: aload_2\n-       542: ifnull        571\n-       545: aload_3\n-       546: ifnull        567\n-       549: aload_2\n-       550: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       553: goto          571\n-       556: astore        18\n-       558: aload_3\n-       559: aload         18\n-       561: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       564: goto          571\n-       567: aload_2\n-       568: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n-       571: aload         17\n-       573: athrow\n+        53: aload         4\n+        55: invokespecial #50                 // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n+        58: invokespecial #5                  // Method java/io/DataInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        61: astore        5\n+        63: new           #77                 // class org/apache/commons/compress/archivers/arj/LocalFileHeader\n+        66: dup\n+        67: invokespecial #78                 // Method org/apache/commons/compress/archivers/arj/LocalFileHeader.\"<init>\":()V\n+        70: astore        6\n+        72: aload         6\n+        74: aload         5\n+        76: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+        79: putfield      #79                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.archiverVersionNumber:I\n+        82: aload         6\n+        84: aload         5\n+        86: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+        89: putfield      #80                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.minVersionToExtract:I\n+        92: aload         6\n+        94: aload         5\n+        96: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+        99: putfield      #81                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.hostOS:I\n+       102: aload         6\n+       104: aload         5\n+       106: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       109: putfield      #82                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.arjFlags:I\n+       112: aload         6\n+       114: aload         5\n+       116: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       119: putfield      #83                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.method:I\n+       122: aload         6\n+       124: aload         5\n+       126: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       129: putfield      #84                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileType:I\n+       132: aload         6\n+       134: aload         5\n+       136: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       139: putfield      #85                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.reserved:I\n+       142: aload         6\n+       144: aload_0\n+       145: aload         5\n+       147: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n+       150: putfield      #86                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.dateTimeModified:I\n+       153: aload         6\n+       155: ldc2_w        #40                 // long 4294967295l\n+       158: aload_0\n+       159: aload         5\n+       161: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n+       164: i2l\n+       165: land\n+       166: putfield      #87                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.compressedSize:J\n+       169: aload         6\n+       171: ldc2_w        #40                 // long 4294967295l\n+       174: aload_0\n+       175: aload         5\n+       177: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n+       180: i2l\n+       181: land\n+       182: putfield      #88                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.originalSize:J\n+       185: aload         6\n+       187: ldc2_w        #40                 // long 4294967295l\n+       190: aload_0\n+       191: aload         5\n+       193: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n+       196: i2l\n+       197: land\n+       198: putfield      #89                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.originalCrc32:J\n+       201: aload         6\n+       203: aload_0\n+       204: aload         5\n+       206: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n+       209: putfield      #90                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileSpecPosition:I\n+       212: aload         6\n+       214: aload_0\n+       215: aload         5\n+       217: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n+       220: putfield      #91                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.fileAccessMode:I\n+       223: aload_0\n+       224: ldc2_w        #65                 // long 20l\n+       227: invokevirtual #67                 // Method pushedBackBytes:(J)V\n+       230: aload         6\n+       232: aload         5\n+       234: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       237: putfield      #92                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.firstChapter:I\n+       240: aload         6\n+       242: aload         5\n+       244: invokevirtual #22                 // Method java/io/DataInputStream.readUnsignedByte:()I\n+       247: putfield      #93                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.lastChapter:I\n+       250: aload_0\n+       251: iload_3\n+       252: aload         5\n+       254: aload         6\n+       256: invokespecial #94                 // Method readExtraData:(ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n+       259: aload         6\n+       261: aload_0\n+       262: aload_2\n+       263: invokespecial #72                 // Method readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n+       266: putfield      #95                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.name:Ljava/lang/String;\n+       269: aload         6\n+       271: aload_0\n+       272: aload_2\n+       273: invokespecial #72                 // Method readString:(Ljava/io/DataInputStream;)Ljava/lang/String;\n+       276: putfield      #96                 // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.comment:Ljava/lang/String;\n+       279: new           #97                 // class java/util/ArrayList\n+       282: dup\n+       283: invokespecial #98                 // Method java/util/ArrayList.\"<init>\":()V\n+       286: astore        7\n+       288: aload_0\n+       289: aload_0\n+       290: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n+       293: invokespecial #37                 // Method read16:(Ljava/io/DataInputStream;)I\n+       296: dup\n+       297: istore        8\n+       299: ifle          381\n+       302: iload         8\n+       304: newarray       byte\n+       306: astore        9\n+       308: aload_0\n+       309: aload_0\n+       310: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n+       313: aload         9\n+       315: invokespecial #38                 // Method readFully:(Ljava/io/DataInputStream;[B)V\n+       318: ldc2_w        #40                 // long 4294967295l\n+       321: aload_0\n+       322: aload_0\n+       323: getfield      #6                  // Field in:Ljava/io/DataInputStream;\n+       326: invokespecial #39                 // Method read32:(Ljava/io/DataInputStream;)I\n+       329: i2l\n+       330: land\n+       331: lstore        10\n+       333: new           #42                 // class java/util/zip/CRC32\n+       336: dup\n+       337: invokespecial #43                 // Method java/util/zip/CRC32.\"<init>\":()V\n+       340: astore        12\n+       342: aload         12\n+       344: aload         9\n+       346: invokevirtual #44                 // Method java/util/zip/CRC32.update:([B)V\n+       349: lload         10\n+       351: aload         12\n+       353: invokevirtual #45                 // Method java/util/zip/CRC32.getValue:()J\n+       356: lcmp\n+       357: ifeq          370\n+       360: new           #16                 // class java/io/IOException\n+       363: dup\n+       364: ldc           #76                 // String Extended header CRC32 verification failure\n+       366: invokespecial #48                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       369: athrow\n+       370: aload         7\n+       372: aload         9\n+       374: invokevirtual #99                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       377: pop\n+       378: goto          288\n+       381: aload         6\n+       383: aload         7\n+       385: aload         7\n+       387: invokevirtual #100                // Method java/util/ArrayList.size:()I\n+       390: anewarray     #101                // class \"[B\"\n+       393: invokevirtual #102                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       396: checkcast     #103                // class \"[[B\"\n+       399: putfield      #104                // Field org/apache/commons/compress/archivers/arj/LocalFileHeader.extendedHeaders:[[B\n+       402: aload         6\n+       404: astore        9\n+       406: aload         5\n+       408: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n+       411: aload_2\n+       412: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n+       415: aload         9\n+       417: areturn\n+       418: astore        6\n+       420: aload         5\n+       422: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n+       425: goto          437\n+       428: astore        7\n+       430: aload         6\n+       432: aload         7\n+       434: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       437: aload         6\n+       439: athrow\n+       440: astore_3\n+       441: aload_2\n+       442: invokevirtual #21                 // Method java/io/DataInputStream.close:()V\n+       445: goto          456\n+       448: astore        4\n+       450: aload_3\n+       451: aload         4\n+       453: invokevirtual #106                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       456: aload_3\n+       457: athrow\n       Exception table:\n          from    to  target type\n-           424   429   432   Class java/lang/Throwable\n-           457   461   464   Class java/lang/Throwable\n-            70   414   482   Class java/lang/Throwable\n-            70   414   491   any\n-           503   508   511   Class java/lang/Throwable\n-           482   493   491   any\n-            29   449   531   Class java/lang/Throwable\n-           482   531   531   Class java/lang/Throwable\n-            29   449   539   any\n-           549   553   556   Class java/lang/Throwable\n-           482   541   539   any\n+            63   406   418   Class java/lang/Throwable\n+           420   425   428   Class java/lang/Throwable\n+            27   411   440   Class java/lang/Throwable\n+           418   440   440   Class java/lang/Throwable\n+           441   445   448   Class java/lang/Throwable\n       LineNumberTable:\n         line 215: 0\n         line 216: 5\n         line 217: 9\n         line 219: 11\n-        line 221: 29\n-        line 222: 35\n-        line 223: 43\n-        line 224: 49\n-        line 226: 70\n-        line 227: 79\n-        line 228: 89\n-        line 229: 99\n-        line 230: 109\n-        line 231: 119\n-        line 232: 129\n-        line 233: 139\n-        line 234: 149\n-        line 235: 160\n-        line 236: 176\n-        line 237: 192\n-        line 238: 208\n-        line 239: 219\n-        line 240: 230\n-        line 241: 237\n-        line 242: 247\n-        line 244: 257\n-        line 246: 267\n-        line 247: 277\n-        line 249: 287\n-        line 251: 296\n-        line 252: 310\n-        line 253: 316\n-        line 254: 326\n-        line 255: 341\n-        line 256: 350\n-        line 257: 357\n-        line 258: 368\n-        line 260: 378\n-        line 261: 386\n-        line 262: 389\n-        line 264: 410\n-        line 265: 414\n-        line 266: 449\n-        line 264: 479\n-        line 224: 482\n-        line 265: 491\n-        line 219: 531\n-        line 266: 539\n+        line 221: 27\n+        line 222: 32\n+        line 223: 39\n+        line 224: 45\n+        line 226: 63\n+        line 227: 72\n+        line 228: 82\n+        line 229: 92\n+        line 230: 102\n+        line 231: 112\n+        line 232: 122\n+        line 233: 132\n+        line 234: 142\n+        line 235: 153\n+        line 236: 169\n+        line 237: 185\n+        line 238: 201\n+        line 239: 212\n+        line 240: 223\n+        line 241: 230\n+        line 242: 240\n+        line 244: 250\n+        line 246: 259\n+        line 247: 269\n+        line 249: 279\n+        line 251: 288\n+        line 252: 302\n+        line 253: 308\n+        line 254: 318\n+        line 255: 333\n+        line 256: 342\n+        line 257: 349\n+        line 258: 360\n+        line 260: 370\n+        line 261: 378\n+        line 262: 381\n+        line 264: 402\n+        line 265: 406\n+        line 266: 411\n+        line 264: 415\n+        line 224: 418\n+        line 219: 440\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          316      70    11 extendedHeaderBytes   [B\n-          341      45    12 extendedHeaderCrc32   J\n-          350      36    14 crc32   Ljava/util/zip/CRC32;\n-           79     403     8 localFileHeader   Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n-          296     186     9 extendedHeaders   Ljava/util/ArrayList;\n-          307     175    10 extendedHeaderSize   I\n-           67     464     6 firstHeader   Ljava/io/DataInputStream;\n-           35     496     4 firstHeaderSize   I\n-           43     488     5 firstHeaderBytes   [B\n-           27     547     2 basicHeader   Ljava/io/DataInputStream;\n-            0     574     0  this   Lorg/apache/commons/compress/archivers/arj/ArjArchiveInputStream;\n-            5     569     1 basicHeaderBytes   [B\n+          308      70     9 extendedHeaderBytes   [B\n+          333      45    10 extendedHeaderCrc32   J\n+          342      36    12 crc32   Ljava/util/zip/CRC32;\n+           72     346     6 localFileHeader   Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;\n+          288     130     7 extendedHeaders   Ljava/util/ArrayList;\n+          299     119     8 extendedHeaderSize   I\n+           63     377     5 firstHeader   Ljava/io/DataInputStream;\n+           32     408     3 firstHeaderSize   I\n+           39     401     4 firstHeaderBytes   [B\n+           27     431     2 basicHeader   Ljava/io/DataInputStream;\n+            0     458     0  this   Lorg/apache/commons/compress/archivers/arj/ArjArchiveInputStream;\n+            5     453     1 basicHeaderBytes   [B\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          296     186     9 extendedHeaders   Ljava/util/ArrayList<[B>;\n-      StackMapTable: number_of_entries = 20\n+          288     130     7 extendedHeaders   Ljava/util/ArrayList<[B>;\n+      StackMapTable: number_of_entries = 10\n         frame_type = 252 /* append */\n           offset_delta = 11\n           locals = [ class \"[B\" ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 284\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, class org/apache/commons/compress/archivers/arj/LocalFileHeader, class java/util/ArrayList ]\n+          offset_delta = 276\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, int, class \"[B\", class java/io/DataInputStream, class org/apache/commons/compress/archivers/arj/LocalFileHeader, class java/util/ArrayList ]\n           stack = []\n         frame_type = 255 /* full_frame */\n           offset_delta = 81\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, class org/apache/commons/compress/archivers/arj/LocalFileHeader, class java/util/ArrayList, int, class \"[B\", long, class java/util/zip/CRC32 ]\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, int, class \"[B\", class java/io/DataInputStream, class org/apache/commons/compress/archivers/arj/LocalFileHeader, class java/util/ArrayList, int, class \"[B\", long, class java/util/zip/CRC32 ]\n           stack = []\n         frame_type = 248 /* chop */\n           offset_delta = 10\n         frame_type = 255 /* full_frame */\n-          offset_delta = 42\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, class org/apache/commons/compress/archivers/arj/LocalFileHeader, class java/util/ArrayList, int, class org/apache/commons/compress/archivers/arj/LocalFileHeader ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n-        frame_type = 78 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          offset_delta = 36\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, int, class \"[B\", class java/io/DataInputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, top, top, top, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, int, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n+        frame_type = 8 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable, top, top, top, top, top, top, top, top, top, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream, class \"[B\", class java/io/DataInputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n+        frame_type = 7 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   private void readExtraData(int, java.io.DataInputStream, org.apache.commons.compress.archivers.arj.LocalFileHeader) throws java.io.IOException;\n     descriptor: (ILjava/io/DataInputStream;Lorg/apache/commons/compress/archivers/arj/LocalFileHeader;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n@@ -1857,8 +1770,8 @@\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/arj/ArjArchiveInputStream;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ArjArchiveInputStream.java\"\n InnerClasses:\n-  static #259= #11 of #51;                // Flags=class org/apache/commons/compress/archivers/arj/MainHeader$Flags of class org/apache/commons/compress/archivers/arj/MainHeader\n+  static #249= #11 of #51;                // Flags=class org/apache/commons/compress/archivers/arj/MainHeader$Flags of class org/apache/commons/compress/archivers/arj/MainHeader\n"}]}
