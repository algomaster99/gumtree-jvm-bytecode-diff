{"diffoscope-json-version": 1, "source1": "first/FastDatePrinter$Iso8601_Rule.class", "source2": "second/FastDatePrinter$Iso8601_Rule.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,20 @@\n private static class Iso8601_Rule implements FastDatePrinter.Rule\n {\n     static final Iso8601_Rule ISO8601_HOURS;\n     static final Iso8601_Rule ISO8601_HOURS_MINUTES;\n     static final Iso8601_Rule ISO8601_HOURS_COLON_MINUTES;\n     final int length;\n     \n+    static {\n+        Iso8601_Rule.ISO8601_HOURS = new Iso8601_Rule(3);\n+        Iso8601_Rule.ISO8601_HOURS_MINUTES = new Iso8601_Rule(5);\n+        Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES = new Iso8601_Rule(6);\n+    }\n+    \n     static Iso8601_Rule getRule(final int tokenLen) {\n         switch (tokenLen) {\n             case 1: {\n                 return Iso8601_Rule.ISO8601_HOURS;\n             }\n             case 2: {\n                 return Iso8601_Rule.ISO8601_HOURS_MINUTES;\n@@ -46,24 +52,18 @@\n             buffer.append('-');\n             offset = -offset;\n         }\n         else {\n             buffer.append('+');\n         }\n         final int hours = offset / 3600000;\n-        FastDatePrinter.access$000(buffer, hours);\n+        FastDatePrinter.access$0(buffer, hours);\n         if (this.length < 5) {\n             return;\n         }\n         if (this.length == 6) {\n             buffer.append(':');\n         }\n         final int minutes = offset / 60000 - 60 * hours;\n-        FastDatePrinter.access$000(buffer, minutes);\n-    }\n-    \n-    static {\n-        Iso8601_Rule.ISO8601_HOURS = new Iso8601_Rule(3);\n-        Iso8601_Rule.ISO8601_HOURS_MINUTES = new Iso8601_Rule(5);\n-        Iso8601_Rule.ISO8601_HOURS_COLON_MINUTES = new Iso8601_Rule(6);\n+        FastDatePrinter.access$0(buffer, minutes);\n     }\n }\n"}]}
