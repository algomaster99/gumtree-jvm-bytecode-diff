{"diffoscope-json-version": 1, "source1": "first/Fraction.class", "source2": "second/Fraction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,382 +1,382 @@\n-  SHA-256 checksum f577b88ae33398a53cc93b1329d0e35326892be8f86473a24e165675ea63b9d7\n+  SHA-256 checksum 5b76bf0584bf573625e51806288475de7bd4d0ec6fcbe2c9978e7b43c9e58a13\n   Compiled from \"Fraction.java\"\n public final class org.apache.commons.lang3.math.Fraction extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.math.Fraction>\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/lang3/math/Fraction\n-  super_class: #105                       // java/lang/Number\n+  this_class: #8                          // org/apache/commons/lang3/math/Fraction\n+  super_class: #2                         // java/lang/Number\n   interfaces: 1, fields: 18, methods: 36, attributes: 2\n Constant pool:\n-    #1 = Methodref          #105.#242     // java/lang/Number.\"<init>\":()V\n-    #2 = Fieldref           #10.#243      // org/apache/commons/lang3/math/Fraction.numerator:I\n-    #3 = Fieldref           #10.#244      // org/apache/commons/lang3/math/Fraction.denominator:I\n-    #4 = Class              #245          // java/lang/ArithmeticException\n-    #5 = String             #246          // The denominator must not be zero\n-    #6 = Methodref          #4.#247       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Class              #248          // java/lang/Integer\n-    #8 = Integer            -2147483648\n-    #9 = String             #249          // overflow: can\\'t negate\n-   #10 = Class              #250          // org/apache/commons/lang3/math/Fraction\n-   #11 = Methodref          #10.#251      // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n-   #12 = String             #252          // The denominator must not be negative\n-   #13 = String             #253          // The numerator must not be negative\n-   #14 = Long               -2147483648l\n-   #16 = Long               2147483647l\n-   #18 = String             #254          // Numerator too large to represent as an Integer.\n-   #19 = Fieldref           #10.#255      // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-   #20 = Methodref          #10.#256      // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n-   #21 = Methodref          #257.#258     // java/lang/Math.abs:(D)D\n-   #22 = Double             2.147483647E9d\n-   #24 = Methodref          #26.#259      // java/lang/Double.isNaN:(D)Z\n-   #25 = String             #260          // The value must not be greater than Integer.MAX_VALUE or NaN\n-   #26 = Class              #261          // java/lang/Double\n-   #27 = Double             1.7976931348623157E308d\n-   #29 = String             #262          // Unable to convert double to fraction\n-   #30 = Methodref          #10.#263      // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #31 = String             #170          // str\n-   #32 = Class              #264          // java/lang/Object\n-   #33 = Methodref          #265.#266     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #34 = Methodref          #267.#268     // java/lang/String.indexOf:(I)I\n-   #35 = Methodref          #26.#269      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #36 = Methodref          #10.#270      // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-   #37 = Methodref          #267.#271     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #38 = Methodref          #7.#272       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #39 = Methodref          #267.#273     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #40 = Class              #274          // java/lang/NumberFormatException\n-   #41 = String             #275          // The fraction could not be parsed as the format X Y/Z\n-   #42 = Methodref          #40.#247      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #43 = Methodref          #10.#276      // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-   #44 = Methodref          #10.#277      // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-   #45 = Methodref          #257.#278     // java/lang/Math.abs:(I)I\n-   #46 = Methodref          #10.#279      // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n-   #47 = String             #280          // Unable to invert zero.\n-   #48 = String             #281          // overflow: can\\'t negate numerator\n-   #49 = String             #282          // overflow: too large to negate\n-   #50 = Methodref          #10.#283      // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n-   #51 = Fieldref           #10.#284      // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n-   #52 = Methodref          #10.#285      // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n-   #53 = Methodref          #10.#286      // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-   #54 = Methodref          #10.#287      // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-   #55 = String             #288          // overflow: gcd is 2^31\n-   #56 = String             #289          // overflow: mul\n-   #57 = String             #290          // overflow: mulPos\n-   #58 = String             #291          // overflow: add\n-   #59 = Methodref          #10.#292      // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-   #60 = String             #165          // fraction\n-   #61 = Methodref          #10.#293      // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n-   #62 = Methodref          #10.#294      // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n-   #63 = Methodref          #10.#295      // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n-   #64 = Methodref          #10.#296      // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n-   #65 = Methodref          #221.#297     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #66 = Methodref          #221.#298     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #67 = Methodref          #221.#299     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #68 = Methodref          #221.#300     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #69 = Methodref          #221.#301     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #70 = Methodref          #221.#302     // java/math/BigInteger.intValue:()I\n-   #71 = Methodref          #221.#303     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #72 = Methodref          #221.#304     // java/math/BigInteger.bitLength:()I\n-   #73 = String             #305          // overflow: numerator too large after multiply\n-   #74 = String             #306          // The fraction to divide by must not be zero\n-   #75 = Methodref          #10.#307      // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n-   #76 = Methodref          #10.#308      // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n-   #77 = Fieldref           #10.#309      // org/apache/commons/lang3/math/Fraction.hashCode:I\n-   #78 = Methodref          #310.#311     // java/lang/Long.compare:(JJ)I\n-   #79 = Fieldref           #10.#312      // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n-   #80 = Class              #313          // java/lang/StringBuilder\n-   #81 = Methodref          #80.#242      // java/lang/StringBuilder.\"<init>\":()V\n-   #82 = Methodref          #80.#314      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #83 = String             #315          // /\n-   #84 = Methodref          #80.#316      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = Methodref          #80.#317      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #86 = Fieldref           #10.#318      // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n-   #87 = String             #319          // 0\n-   #88 = String             #320          // 1\n-   #89 = String             #321          // -1\n-   #90 = Methodref          #10.#322      // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n-   #91 = Methodref          #10.#323      // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n-   #92 = Methodref          #7.#324       // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #93 = String             #325          //\n-   #94 = Methodref          #10.#326      // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-   #95 = Fieldref           #10.#327      // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-   #96 = Fieldref           #10.#328      // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-   #97 = Fieldref           #10.#329      // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-   #98 = Fieldref           #10.#330      // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-   #99 = Fieldref           #10.#331      // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #100 = Fieldref           #10.#332      // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #101 = Fieldref           #10.#333      // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #102 = Fieldref           #10.#334      // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #103 = Fieldref           #10.#335      // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #104 = Fieldref           #10.#336      // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #105 = Class              #337          // java/lang/Number\n-  #106 = Class              #338          // java/lang/Comparable\n-  #107 = Utf8               serialVersionUID\n-  #108 = Utf8               J\n-  #109 = Utf8               ConstantValue\n-  #110 = Long               65382027393090l\n-  #112 = Utf8               ZERO\n-  #113 = Utf8               Lorg/apache/commons/lang3/math/Fraction;\n-  #114 = Utf8               ONE\n-  #115 = Utf8               ONE_HALF\n-  #116 = Utf8               ONE_THIRD\n-  #117 = Utf8               TWO_THIRDS\n-  #118 = Utf8               ONE_QUARTER\n-  #119 = Utf8               TWO_QUARTERS\n-  #120 = Utf8               THREE_QUARTERS\n-  #121 = Utf8               ONE_FIFTH\n-  #122 = Utf8               TWO_FIFTHS\n-  #123 = Utf8               THREE_FIFTHS\n-  #124 = Utf8               FOUR_FIFTHS\n-  #125 = Utf8               numerator\n-  #126 = Utf8               I\n-  #127 = Utf8               denominator\n-  #128 = Utf8               hashCode\n-  #129 = Utf8               toString\n-  #130 = Utf8               Ljava/lang/String;\n-  #131 = Utf8               toProperString\n-  #132 = Utf8               <init>\n-  #133 = Utf8               (II)V\n-  #134 = Utf8               Code\n-  #135 = Utf8               LineNumberTable\n-  #136 = Utf8               LocalVariableTable\n-  #137 = Utf8               this\n-  #138 = Utf8               getFraction\n-  #139 = Utf8               (II)Lorg/apache/commons/lang3/math/Fraction;\n-  #140 = Utf8               StackMapTable\n-  #141 = Utf8               (III)Lorg/apache/commons/lang3/math/Fraction;\n-  #142 = Utf8               numeratorValue\n-  #143 = Utf8               whole\n-  #144 = Utf8               getReducedFraction\n-  #145 = Utf8               gcd\n-  #146 = Utf8               (D)Lorg/apache/commons/lang3/math/Fraction;\n-  #147 = Utf8               value\n-  #148 = Utf8               D\n-  #149 = Utf8               sign\n-  #150 = Utf8               wholeNumber\n-  #151 = Utf8               numer0\n-  #152 = Utf8               denom0\n-  #153 = Utf8               numer1\n-  #154 = Utf8               denom1\n-  #155 = Utf8               numer2\n-  #156 = Utf8               denom2\n-  #157 = Utf8               a1\n-  #158 = Utf8               a2\n-  #159 = Utf8               x1\n-  #160 = Utf8               x2\n-  #161 = Utf8               y1\n-  #162 = Utf8               y2\n-  #163 = Utf8               delta1\n-  #164 = Utf8               delta2\n-  #165 = Utf8               fraction\n-  #166 = Utf8               i\n-  #167 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;\n-  #168 = Utf8               numer\n-  #169 = Utf8               denom\n-  #170 = Utf8               str\n-  #171 = Utf8               pos\n-  #172 = Utf8               getNumerator\n-  #173 = Utf8               ()I\n-  #174 = Utf8               getDenominator\n-  #175 = Utf8               getProperNumerator\n-  #176 = Utf8               getProperWhole\n-  #177 = Utf8               intValue\n-  #178 = Utf8               longValue\n-  #179 = Utf8               ()J\n-  #180 = Utf8               floatValue\n-  #181 = Utf8               ()F\n-  #182 = Utf8               doubleValue\n-  #183 = Utf8               ()D\n-  #184 = Utf8               reduce\n-  #185 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;\n-  #186 = Utf8               invert\n-  #187 = Utf8               negate\n-  #188 = Utf8               abs\n-  #189 = Utf8               pow\n-  #190 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n-  #191 = Utf8               f\n-  #192 = Utf8               power\n-  #193 = Utf8               greatestCommonDivisor\n-  #194 = Utf8               (II)I\n-  #195 = Utf8               u\n-  #196 = Utf8               v\n-  #197 = Utf8               k\n-  #198 = Utf8               t\n-  #199 = Utf8               mulAndCheck\n-  #200 = Utf8               x\n-  #201 = Utf8               y\n-  #202 = Utf8               m\n-  #203 = Utf8               mulPosAndCheck\n-  #204 = Utf8               addAndCheck\n-  #205 = Utf8               s\n-  #206 = Utf8               subAndCheck\n-  #207 = Utf8               add\n-  #208 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #209 = Utf8               subtract\n-  #210 = Utf8               addSub\n-  #211 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #212 = Utf8               uvp\n-  #213 = Utf8               upv\n-  #214 = Utf8               isAdd\n-  #215 = Utf8               Z\n-  #216 = Utf8               d1\n-  #217 = Utf8               Ljava/math/BigInteger;\n-  #218 = Utf8               tmodd1\n-  #219 = Utf8               d2\n-  #220 = Utf8               w\n-  #221 = Class              #339          // java/math/BigInteger\n-  #222 = Utf8               multiplyBy\n-  #223 = Utf8               divideBy\n-  #224 = Utf8               equals\n-  #225 = Utf8               (Ljava/lang/Object;)Z\n-  #226 = Utf8               obj\n-  #227 = Utf8               Ljava/lang/Object;\n-  #228 = Utf8               other\n-  #229 = Utf8               compareTo\n-  #230 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n-  #231 = Utf8               first\n-  #232 = Utf8               second\n-  #233 = Utf8               ()Ljava/lang/String;\n-  #234 = Utf8               properNumerator\n-  #235 = Utf8               (Ljava/lang/Object;)I\n-  #236 = Utf8               <clinit>\n-  #237 = Utf8               ()V\n-  #238 = Utf8               Signature\n-  #239 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n-  #240 = Utf8               SourceFile\n-  #241 = Utf8               Fraction.java\n-  #242 = NameAndType        #132:#237     // \"<init>\":()V\n-  #243 = NameAndType        #125:#126     // numerator:I\n-  #244 = NameAndType        #127:#126     // denominator:I\n-  #245 = Utf8               java/lang/ArithmeticException\n-  #246 = Utf8               The denominator must not be zero\n-  #247 = NameAndType        #132:#340     // \"<init>\":(Ljava/lang/String;)V\n-  #248 = Utf8               java/lang/Integer\n-  #249 = Utf8               overflow: can\\'t negate\n-  #250 = Utf8               org/apache/commons/lang3/math/Fraction\n-  #251 = NameAndType        #132:#133     // \"<init>\":(II)V\n-  #252 = Utf8               The denominator must not be negative\n-  #253 = Utf8               The numerator must not be negative\n-  #254 = Utf8               Numerator too large to represent as an Integer.\n-  #255 = NameAndType        #112:#113     // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-  #256 = NameAndType        #193:#194     // greatestCommonDivisor:(II)I\n-  #257 = Class              #341          // java/lang/Math\n-  #258 = NameAndType        #188:#342     // abs:(D)D\n-  #259 = NameAndType        #343:#344     // isNaN:(D)Z\n-  #260 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n-  #261 = Utf8               java/lang/Double\n-  #262 = Utf8               Unable to convert double to fraction\n-  #263 = NameAndType        #144:#139     // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #264 = Utf8               java/lang/Object\n-  #265 = Class              #345          // org/apache/commons/lang3/Validate\n-  #266 = NameAndType        #346:#347     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #267 = Class              #348          // java/lang/String\n-  #268 = NameAndType        #349:#350     // indexOf:(I)I\n-  #269 = NameAndType        #351:#352     // parseDouble:(Ljava/lang/String;)D\n-  #270 = NameAndType        #138:#146     // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n-  #271 = NameAndType        #353:#354     // substring:(II)Ljava/lang/String;\n-  #272 = NameAndType        #355:#356     // parseInt:(Ljava/lang/String;)I\n-  #273 = NameAndType        #353:#357     // substring:(I)Ljava/lang/String;\n-  #274 = Utf8               java/lang/NumberFormatException\n-  #275 = Utf8               The fraction could not be parsed as the format X Y/Z\n-  #276 = NameAndType        #138:#141     // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n-  #277 = NameAndType        #138:#139     // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n-  #278 = NameAndType        #188:#350     // abs:(I)I\n-  #279 = NameAndType        #224:#225     // equals:(Ljava/lang/Object;)Z\n-  #280 = Utf8               Unable to invert zero.\n-  #281 = Utf8               overflow: can\\'t negate numerator\n-  #282 = Utf8               overflow: too large to negate\n-  #283 = NameAndType        #187:#185     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n-  #284 = NameAndType        #114:#113     // ONE:Lorg/apache/commons/lang3/math/Fraction;\n-  #285 = NameAndType        #186:#185     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n-  #286 = NameAndType        #189:#190     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n-  #287 = NameAndType        #222:#208     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n-  #288 = Utf8               overflow: gcd is 2^31\n-  #289 = Utf8               overflow: mul\n-  #290 = Utf8               overflow: mulPos\n-  #291 = Utf8               overflow: add\n-  #292 = NameAndType        #210:#211     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n-  #293 = NameAndType        #199:#194     // mulAndCheck:(II)I\n-  #294 = NameAndType        #204:#194     // addAndCheck:(II)I\n-  #295 = NameAndType        #206:#194     // subAndCheck:(II)I\n-  #296 = NameAndType        #203:#194     // mulPosAndCheck:(II)I\n-  #297 = NameAndType        #358:#359     // valueOf:(J)Ljava/math/BigInteger;\n-  #298 = NameAndType        #360:#361     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #299 = NameAndType        #207:#361     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #300 = NameAndType        #209:#361     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #301 = NameAndType        #362:#361     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #302 = NameAndType        #177:#173     // intValue:()I\n-  #303 = NameAndType        #363:#361     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #304 = NameAndType        #364:#173     // bitLength:()I\n-  #305 = Utf8               overflow: numerator too large after multiply\n-  #306 = Utf8               The fraction to divide by must not be zero\n-  #307 = NameAndType        #172:#173     // getNumerator:()I\n-  #308 = NameAndType        #174:#173     // getDenominator:()I\n-  #309 = NameAndType        #128:#126     // hashCode:I\n-  #310 = Class              #365          // java/lang/Long\n-  #311 = NameAndType        #366:#367     // compare:(JJ)I\n-  #312 = NameAndType        #129:#130     // toString:Ljava/lang/String;\n-  #313 = Utf8               java/lang/StringBuilder\n-  #314 = NameAndType        #368:#369     // append:(I)Ljava/lang/StringBuilder;\n-  #315 = Utf8               /\n-  #316 = NameAndType        #368:#370     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #317 = NameAndType        #129:#233     // toString:()Ljava/lang/String;\n-  #318 = NameAndType        #131:#130     // toProperString:Ljava/lang/String;\n-  #319 = Utf8               0\n-  #320 = Utf8               1\n-  #321 = Utf8               -1\n-  #322 = NameAndType        #175:#173     // getProperNumerator:()I\n-  #323 = NameAndType        #176:#173     // getProperWhole:()I\n-  #324 = NameAndType        #129:#357     // toString:(I)Ljava/lang/String;\n-  #325 = Utf8\n-  #326 = NameAndType        #229:#230     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n-  #327 = NameAndType        #115:#113     // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-  #328 = NameAndType        #116:#113     // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-  #329 = NameAndType        #117:#113     // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-  #330 = NameAndType        #118:#113     // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-  #331 = NameAndType        #119:#113     // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #332 = NameAndType        #120:#113     // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-  #333 = NameAndType        #121:#113     // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-  #334 = NameAndType        #122:#113     // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #335 = NameAndType        #123:#113     // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #336 = NameAndType        #124:#113     // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-  #337 = Utf8               java/lang/Number\n-  #338 = Utf8               java/lang/Comparable\n-  #339 = Utf8               java/math/BigInteger\n-  #340 = Utf8               (Ljava/lang/String;)V\n-  #341 = Utf8               java/lang/Math\n-  #342 = Utf8               (D)D\n-  #343 = Utf8               isNaN\n-  #344 = Utf8               (D)Z\n-  #345 = Utf8               org/apache/commons/lang3/Validate\n-  #346 = Utf8               notNull\n-  #347 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #348 = Utf8               java/lang/String\n-  #349 = Utf8               indexOf\n-  #350 = Utf8               (I)I\n-  #351 = Utf8               parseDouble\n-  #352 = Utf8               (Ljava/lang/String;)D\n-  #353 = Utf8               substring\n-  #354 = Utf8               (II)Ljava/lang/String;\n-  #355 = Utf8               parseInt\n-  #356 = Utf8               (Ljava/lang/String;)I\n-  #357 = Utf8               (I)Ljava/lang/String;\n-  #358 = Utf8               valueOf\n-  #359 = Utf8               (J)Ljava/math/BigInteger;\n-  #360 = Utf8               multiply\n-  #361 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #362 = Utf8               mod\n-  #363 = Utf8               divide\n-  #364 = Utf8               bitLength\n-  #365 = Utf8               java/lang/Long\n-  #366 = Utf8               compare\n-  #367 = Utf8               (JJ)I\n-  #368 = Utf8               append\n-  #369 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #370 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #2.#3         // java/lang/Number.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Number\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Number\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/math/Fraction.numerator:I\n+    #8 = Class              #10           // org/apache/commons/lang3/math/Fraction\n+    #9 = NameAndType        #11:#12       // numerator:I\n+   #10 = Utf8               org/apache/commons/lang3/math/Fraction\n+   #11 = Utf8               numerator\n+   #12 = Utf8               I\n+   #13 = Fieldref           #8.#14        // org/apache/commons/lang3/math/Fraction.denominator:I\n+   #14 = NameAndType        #15:#12       // denominator:I\n+   #15 = Utf8               denominator\n+   #16 = Class              #17           // java/lang/ArithmeticException\n+   #17 = Utf8               java/lang/ArithmeticException\n+   #18 = String             #19           // The denominator must not be zero\n+   #19 = Utf8               The denominator must not be zero\n+   #20 = Methodref          #16.#21       // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = NameAndType        #5:#22        // \"<init>\":(Ljava/lang/String;)V\n+   #22 = Utf8               (Ljava/lang/String;)V\n+   #23 = Class              #24           // java/lang/Integer\n+   #24 = Utf8               java/lang/Integer\n+   #25 = Integer            -2147483648\n+   #26 = String             #27           // overflow: can\\'t negate\n+   #27 = Utf8               overflow: can\\'t negate\n+   #28 = Methodref          #8.#29        // org/apache/commons/lang3/math/Fraction.\"<init>\":(II)V\n+   #29 = NameAndType        #5:#30        // \"<init>\":(II)V\n+   #30 = Utf8               (II)V\n+   #31 = String             #32           // The denominator must not be negative\n+   #32 = Utf8               The denominator must not be negative\n+   #33 = String             #34           // The numerator must not be negative\n+   #34 = Utf8               The numerator must not be negative\n+   #35 = Long               -2147483648l\n+   #37 = Long               2147483647l\n+   #39 = String             #40           // Numerator too large to represent as an Integer.\n+   #40 = Utf8               Numerator too large to represent as an Integer.\n+   #41 = Fieldref           #8.#42        // org/apache/commons/lang3/math/Fraction.ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+   #42 = NameAndType        #43:#44       // ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+   #43 = Utf8               ZERO\n+   #44 = Utf8               Lorg/apache/commons/lang3/math/Fraction;\n+   #45 = Methodref          #8.#46        // org/apache/commons/lang3/math/Fraction.greatestCommonDivisor:(II)I\n+   #46 = NameAndType        #47:#48       // greatestCommonDivisor:(II)I\n+   #47 = Utf8               greatestCommonDivisor\n+   #48 = Utf8               (II)I\n+   #49 = Methodref          #50.#51       // java/lang/Math.abs:(D)D\n+   #50 = Class              #52           // java/lang/Math\n+   #51 = NameAndType        #53:#54       // abs:(D)D\n+   #52 = Utf8               java/lang/Math\n+   #53 = Utf8               abs\n+   #54 = Utf8               (D)D\n+   #55 = Double             2.147483647E9d\n+   #57 = Methodref          #58.#59       // java/lang/Double.isNaN:(D)Z\n+   #58 = Class              #60           // java/lang/Double\n+   #59 = NameAndType        #61:#62       // isNaN:(D)Z\n+   #60 = Utf8               java/lang/Double\n+   #61 = Utf8               isNaN\n+   #62 = Utf8               (D)Z\n+   #63 = String             #64           // The value must not be greater than Integer.MAX_VALUE or NaN\n+   #64 = Utf8               The value must not be greater than Integer.MAX_VALUE or NaN\n+   #65 = Double             1.7976931348623157E308d\n+   #67 = String             #68           // Unable to convert double to fraction\n+   #68 = Utf8               Unable to convert double to fraction\n+   #69 = Methodref          #8.#70        // org/apache/commons/lang3/math/Fraction.getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #70 = NameAndType        #71:#72       // getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+   #71 = Utf8               getReducedFraction\n+   #72 = Utf8               (II)Lorg/apache/commons/lang3/math/Fraction;\n+   #73 = String             #74           // str\n+   #74 = Utf8               str\n+   #75 = Class              #76           // java/lang/Object\n+   #76 = Utf8               java/lang/Object\n+   #77 = Methodref          #78.#79       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #78 = Class              #80           // org/apache/commons/lang3/Validate\n+   #79 = NameAndType        #81:#82       // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #80 = Utf8               org/apache/commons/lang3/Validate\n+   #81 = Utf8               notNull\n+   #82 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #83 = Methodref          #84.#85       // java/lang/String.indexOf:(I)I\n+   #84 = Class              #86           // java/lang/String\n+   #85 = NameAndType        #87:#88       // indexOf:(I)I\n+   #86 = Utf8               java/lang/String\n+   #87 = Utf8               indexOf\n+   #88 = Utf8               (I)I\n+   #89 = Methodref          #58.#90       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #90 = NameAndType        #91:#92       // parseDouble:(Ljava/lang/String;)D\n+   #91 = Utf8               parseDouble\n+   #92 = Utf8               (Ljava/lang/String;)D\n+   #93 = Methodref          #8.#94        // org/apache/commons/lang3/math/Fraction.getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+   #94 = NameAndType        #95:#96       // getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+   #95 = Utf8               getFraction\n+   #96 = Utf8               (D)Lorg/apache/commons/lang3/math/Fraction;\n+   #97 = Methodref          #84.#98       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #98 = NameAndType        #99:#100      // substring:(II)Ljava/lang/String;\n+   #99 = Utf8               substring\n+  #100 = Utf8               (II)Ljava/lang/String;\n+  #101 = Methodref          #23.#102      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #102 = NameAndType        #103:#104     // parseInt:(Ljava/lang/String;)I\n+  #103 = Utf8               parseInt\n+  #104 = Utf8               (Ljava/lang/String;)I\n+  #105 = Methodref          #84.#106      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #106 = NameAndType        #99:#107      // substring:(I)Ljava/lang/String;\n+  #107 = Utf8               (I)Ljava/lang/String;\n+  #108 = Class              #109          // java/lang/NumberFormatException\n+  #109 = Utf8               java/lang/NumberFormatException\n+  #110 = String             #111          // The fraction could not be parsed as the format X Y/Z\n+  #111 = Utf8               The fraction could not be parsed as the format X Y/Z\n+  #112 = Methodref          #108.#21      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #113 = Methodref          #8.#114       // org/apache/commons/lang3/math/Fraction.getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+  #114 = NameAndType        #95:#115      // getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+  #115 = Utf8               (III)Lorg/apache/commons/lang3/math/Fraction;\n+  #116 = Methodref          #8.#117       // org/apache/commons/lang3/math/Fraction.getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #117 = NameAndType        #95:#72       // getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+  #118 = Methodref          #50.#119      // java/lang/Math.abs:(I)I\n+  #119 = NameAndType        #53:#88       // abs:(I)I\n+  #120 = Methodref          #8.#121       // org/apache/commons/lang3/math/Fraction.equals:(Ljava/lang/Object;)Z\n+  #121 = NameAndType        #122:#123     // equals:(Ljava/lang/Object;)Z\n+  #122 = Utf8               equals\n+  #123 = Utf8               (Ljava/lang/Object;)Z\n+  #124 = String             #125          // Unable to invert zero.\n+  #125 = Utf8               Unable to invert zero.\n+  #126 = String             #127          // overflow: can\\'t negate numerator\n+  #127 = Utf8               overflow: can\\'t negate numerator\n+  #128 = String             #129          // overflow: too large to negate\n+  #129 = Utf8               overflow: too large to negate\n+  #130 = Methodref          #8.#131       // org/apache/commons/lang3/math/Fraction.negate:()Lorg/apache/commons/lang3/math/Fraction;\n+  #131 = NameAndType        #132:#133     // negate:()Lorg/apache/commons/lang3/math/Fraction;\n+  #132 = Utf8               negate\n+  #133 = Utf8               ()Lorg/apache/commons/lang3/math/Fraction;\n+  #134 = Fieldref           #8.#135       // org/apache/commons/lang3/math/Fraction.ONE:Lorg/apache/commons/lang3/math/Fraction;\n+  #135 = NameAndType        #136:#44      // ONE:Lorg/apache/commons/lang3/math/Fraction;\n+  #136 = Utf8               ONE\n+  #137 = Methodref          #8.#138       // org/apache/commons/lang3/math/Fraction.invert:()Lorg/apache/commons/lang3/math/Fraction;\n+  #138 = NameAndType        #139:#133     // invert:()Lorg/apache/commons/lang3/math/Fraction;\n+  #139 = Utf8               invert\n+  #140 = Methodref          #8.#141       // org/apache/commons/lang3/math/Fraction.pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+  #141 = NameAndType        #142:#143     // pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+  #142 = Utf8               pow\n+  #143 = Utf8               (I)Lorg/apache/commons/lang3/math/Fraction;\n+  #144 = Methodref          #8.#145       // org/apache/commons/lang3/math/Fraction.multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #145 = NameAndType        #146:#147     // multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #146 = Utf8               multiplyBy\n+  #147 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+  #148 = String             #149          // overflow: gcd is 2^31\n+  #149 = Utf8               overflow: gcd is 2^31\n+  #150 = String             #151          // overflow: mul\n+  #151 = Utf8               overflow: mul\n+  #152 = String             #153          // overflow: mulPos\n+  #153 = Utf8               overflow: mulPos\n+  #154 = String             #155          // overflow: add\n+  #155 = Utf8               overflow: add\n+  #156 = Methodref          #8.#157       // org/apache/commons/lang3/math/Fraction.addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #157 = NameAndType        #158:#159     // addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #158 = Utf8               addSub\n+  #159 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+  #160 = String             #161          // fraction\n+  #161 = Utf8               fraction\n+  #162 = Methodref          #8.#163       // org/apache/commons/lang3/math/Fraction.mulAndCheck:(II)I\n+  #163 = NameAndType        #164:#48      // mulAndCheck:(II)I\n+  #164 = Utf8               mulAndCheck\n+  #165 = Methodref          #8.#166       // org/apache/commons/lang3/math/Fraction.addAndCheck:(II)I\n+  #166 = NameAndType        #167:#48      // addAndCheck:(II)I\n+  #167 = Utf8               addAndCheck\n+  #168 = Methodref          #8.#169       // org/apache/commons/lang3/math/Fraction.subAndCheck:(II)I\n+  #169 = NameAndType        #170:#48      // subAndCheck:(II)I\n+  #170 = Utf8               subAndCheck\n+  #171 = Methodref          #8.#172       // org/apache/commons/lang3/math/Fraction.mulPosAndCheck:(II)I\n+  #172 = NameAndType        #173:#48      // mulPosAndCheck:(II)I\n+  #173 = Utf8               mulPosAndCheck\n+  #174 = Methodref          #175.#176     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #175 = Class              #177          // java/math/BigInteger\n+  #176 = NameAndType        #178:#179     // valueOf:(J)Ljava/math/BigInteger;\n+  #177 = Utf8               java/math/BigInteger\n+  #178 = Utf8               valueOf\n+  #179 = Utf8               (J)Ljava/math/BigInteger;\n+  #180 = Methodref          #175.#181     // java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #181 = NameAndType        #182:#183     // multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #182 = Utf8               multiply\n+  #183 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #184 = Methodref          #175.#185     // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #185 = NameAndType        #186:#183     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #186 = Utf8               add\n+  #187 = Methodref          #175.#188     // java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #188 = NameAndType        #189:#183     // subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #189 = Utf8               subtract\n+  #190 = Methodref          #175.#191     // java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #191 = NameAndType        #192:#183     // mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #192 = Utf8               mod\n+  #193 = Methodref          #175.#194     // java/math/BigInteger.intValue:()I\n+  #194 = NameAndType        #195:#196     // intValue:()I\n+  #195 = Utf8               intValue\n+  #196 = Utf8               ()I\n+  #197 = Methodref          #175.#198     // java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #198 = NameAndType        #199:#183     // divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+  #199 = Utf8               divide\n+  #200 = Methodref          #175.#201     // java/math/BigInteger.bitLength:()I\n+  #201 = NameAndType        #202:#196     // bitLength:()I\n+  #202 = Utf8               bitLength\n+  #203 = String             #204          // overflow: numerator too large after multiply\n+  #204 = Utf8               overflow: numerator too large after multiply\n+  #205 = String             #206          // The fraction to divide by must not be zero\n+  #206 = Utf8               The fraction to divide by must not be zero\n+  #207 = Methodref          #8.#208       // org/apache/commons/lang3/math/Fraction.getNumerator:()I\n+  #208 = NameAndType        #209:#196     // getNumerator:()I\n+  #209 = Utf8               getNumerator\n+  #210 = Methodref          #8.#211       // org/apache/commons/lang3/math/Fraction.getDenominator:()I\n+  #211 = NameAndType        #212:#196     // getDenominator:()I\n+  #212 = Utf8               getDenominator\n+  #213 = Fieldref           #8.#214       // org/apache/commons/lang3/math/Fraction.hashCode:I\n+  #214 = NameAndType        #215:#12      // hashCode:I\n+  #215 = Utf8               hashCode\n+  #216 = Methodref          #217.#218     // java/lang/Long.compare:(JJ)I\n+  #217 = Class              #219          // java/lang/Long\n+  #218 = NameAndType        #220:#221     // compare:(JJ)I\n+  #219 = Utf8               java/lang/Long\n+  #220 = Utf8               compare\n+  #221 = Utf8               (JJ)I\n+  #222 = Fieldref           #8.#223       // org/apache/commons/lang3/math/Fraction.toString:Ljava/lang/String;\n+  #223 = NameAndType        #224:#225     // toString:Ljava/lang/String;\n+  #224 = Utf8               toString\n+  #225 = Utf8               Ljava/lang/String;\n+  #226 = Class              #227          // java/lang/StringBuilder\n+  #227 = Utf8               java/lang/StringBuilder\n+  #228 = Methodref          #226.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #229 = Methodref          #226.#230     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #230 = NameAndType        #231:#232     // append:(I)Ljava/lang/StringBuilder;\n+  #231 = Utf8               append\n+  #232 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #233 = String             #234          // /\n+  #234 = Utf8               /\n+  #235 = Methodref          #226.#236     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #236 = NameAndType        #231:#237     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #237 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #238 = Methodref          #226.#239     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #239 = NameAndType        #224:#240     // toString:()Ljava/lang/String;\n+  #240 = Utf8               ()Ljava/lang/String;\n+  #241 = Fieldref           #8.#242       // org/apache/commons/lang3/math/Fraction.toProperString:Ljava/lang/String;\n+  #242 = NameAndType        #243:#225     // toProperString:Ljava/lang/String;\n+  #243 = Utf8               toProperString\n+  #244 = String             #245          // 0\n+  #245 = Utf8               0\n+  #246 = String             #247          // 1\n+  #247 = Utf8               1\n+  #248 = String             #249          // -1\n+  #249 = Utf8               -1\n+  #250 = Methodref          #8.#251       // org/apache/commons/lang3/math/Fraction.getProperNumerator:()I\n+  #251 = NameAndType        #252:#196     // getProperNumerator:()I\n+  #252 = Utf8               getProperNumerator\n+  #253 = Methodref          #8.#254       // org/apache/commons/lang3/math/Fraction.getProperWhole:()I\n+  #254 = NameAndType        #255:#196     // getProperWhole:()I\n+  #255 = Utf8               getProperWhole\n+  #256 = Methodref          #23.#257      // java/lang/Integer.toString:(I)Ljava/lang/String;\n+  #257 = NameAndType        #224:#107     // toString:(I)Ljava/lang/String;\n+  #258 = String             #259          //\n+  #259 = Utf8\n+  #260 = Methodref          #8.#261       // org/apache/commons/lang3/math/Fraction.compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+  #261 = NameAndType        #262:#263     // compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+  #262 = Utf8               compareTo\n+  #263 = Utf8               (Lorg/apache/commons/lang3/math/Fraction;)I\n+  #264 = Fieldref           #8.#265       // org/apache/commons/lang3/math/Fraction.ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+  #265 = NameAndType        #266:#44      // ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+  #266 = Utf8               ONE_HALF\n+  #267 = Fieldref           #8.#268       // org/apache/commons/lang3/math/Fraction.ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+  #268 = NameAndType        #269:#44      // ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+  #269 = Utf8               ONE_THIRD\n+  #270 = Fieldref           #8.#271       // org/apache/commons/lang3/math/Fraction.TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+  #271 = NameAndType        #272:#44      // TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+  #272 = Utf8               TWO_THIRDS\n+  #273 = Fieldref           #8.#274       // org/apache/commons/lang3/math/Fraction.ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+  #274 = NameAndType        #275:#44      // ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+  #275 = Utf8               ONE_QUARTER\n+  #276 = Fieldref           #8.#277       // org/apache/commons/lang3/math/Fraction.TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #277 = NameAndType        #278:#44      // TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #278 = Utf8               TWO_QUARTERS\n+  #279 = Fieldref           #8.#280       // org/apache/commons/lang3/math/Fraction.THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #280 = NameAndType        #281:#44      // THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+  #281 = Utf8               THREE_QUARTERS\n+  #282 = Fieldref           #8.#283       // org/apache/commons/lang3/math/Fraction.ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #283 = NameAndType        #284:#44      // ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+  #284 = Utf8               ONE_FIFTH\n+  #285 = Fieldref           #8.#286       // org/apache/commons/lang3/math/Fraction.TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #286 = NameAndType        #287:#44      // TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #287 = Utf8               TWO_FIFTHS\n+  #288 = Fieldref           #8.#289       // org/apache/commons/lang3/math/Fraction.THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #289 = NameAndType        #290:#44      // THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #290 = Utf8               THREE_FIFTHS\n+  #291 = Fieldref           #8.#292       // org/apache/commons/lang3/math/Fraction.FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #292 = NameAndType        #293:#44      // FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+  #293 = Utf8               FOUR_FIFTHS\n+  #294 = Class              #295          // java/lang/Comparable\n+  #295 = Utf8               java/lang/Comparable\n+  #296 = Utf8               serialVersionUID\n+  #297 = Utf8               J\n+  #298 = Utf8               ConstantValue\n+  #299 = Long               65382027393090l\n+  #301 = Utf8               Code\n+  #302 = Utf8               LineNumberTable\n+  #303 = Utf8               LocalVariableTable\n+  #304 = Utf8               this\n+  #305 = Utf8               StackMapTable\n+  #306 = Utf8               numeratorValue\n+  #307 = Utf8               whole\n+  #308 = Utf8               gcd\n+  #309 = Utf8               value\n+  #310 = Utf8               D\n+  #311 = Utf8               sign\n+  #312 = Utf8               wholeNumber\n+  #313 = Utf8               numer0\n+  #314 = Utf8               denom0\n+  #315 = Utf8               numer1\n+  #316 = Utf8               denom1\n+  #317 = Utf8               numer2\n+  #318 = Utf8               denom2\n+  #319 = Utf8               a1\n+  #320 = Utf8               a2\n+  #321 = Utf8               x1\n+  #322 = Utf8               x2\n+  #323 = Utf8               y1\n+  #324 = Utf8               y2\n+  #325 = Utf8               delta1\n+  #326 = Utf8               delta2\n+  #327 = Utf8               i\n+  #328 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;\n+  #329 = Utf8               numer\n+  #330 = Utf8               denom\n+  #331 = Utf8               pos\n+  #332 = Utf8               longValue\n+  #333 = Utf8               ()J\n+  #334 = Utf8               floatValue\n+  #335 = Utf8               ()F\n+  #336 = Utf8               doubleValue\n+  #337 = Utf8               ()D\n+  #338 = Utf8               reduce\n+  #339 = Utf8               f\n+  #340 = Utf8               power\n+  #341 = Utf8               u\n+  #342 = Utf8               v\n+  #343 = Utf8               k\n+  #344 = Utf8               t\n+  #345 = Utf8               x\n+  #346 = Utf8               y\n+  #347 = Utf8               m\n+  #348 = Utf8               s\n+  #349 = Utf8               uvp\n+  #350 = Utf8               upv\n+  #351 = Utf8               isAdd\n+  #352 = Utf8               Z\n+  #353 = Utf8               d1\n+  #354 = Utf8               Ljava/math/BigInteger;\n+  #355 = Utf8               tmodd1\n+  #356 = Utf8               d2\n+  #357 = Utf8               w\n+  #358 = Utf8               divideBy\n+  #359 = Utf8               obj\n+  #360 = Utf8               Ljava/lang/Object;\n+  #361 = Utf8               other\n+  #362 = Utf8               first\n+  #363 = Utf8               second\n+  #364 = Utf8               properNumerator\n+  #365 = Utf8               (Ljava/lang/Object;)I\n+  #366 = Utf8               <clinit>\n+  #367 = Utf8               Signature\n+  #368 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+  #369 = Utf8               SourceFile\n+  #370 = Utf8               Fraction.java\n {\n   private static final long serialVersionUID = 65382027393090l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 65382027393090l\n \n   public static final org.apache.commons.lang3.math.Fraction ZERO;\n@@ -452,18 +452,18 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field numerator:I\n+         6: putfield      #7                  // Field numerator:I\n          9: aload_0\n         10: iload_2\n-        11: putfield      #3                  // Field denominator:I\n+        11: putfield      #13                 // Field denominator:I\n         14: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 4\n         line 126: 9\n         line 127: 14\n       LocalVariableTable:\n@@ -475,43 +475,43 @@\n   public static org.apache.commons.lang3.math.Fraction getFraction(int, int);\n     descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: ifne          14\n-         4: new           #4                  // class java/lang/ArithmeticException\n+         4: new           #16                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #5                  // String The denominator must not be zero\n-        10: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #18                 // String The denominator must not be zero\n+        10: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_1\n         15: ifge          46\n         18: iload_0\n-        19: ldc           #8                  // int -2147483648\n+        19: ldc           #25                 // int -2147483648\n         21: if_icmpeq     30\n         24: iload_1\n-        25: ldc           #8                  // int -2147483648\n+        25: ldc           #25                 // int -2147483648\n         27: if_icmpne     40\n-        30: new           #4                  // class java/lang/ArithmeticException\n+        30: new           #16                 // class java/lang/ArithmeticException\n         33: dup\n-        34: ldc           #9                  // String overflow: can\\'t negate\n-        36: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        34: ldc           #26                 // String overflow: can\\'t negate\n+        36: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: iload_0\n         41: ineg\n         42: istore_0\n         43: iload_1\n         44: ineg\n         45: istore_1\n-        46: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        46: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         49: dup\n         50: iload_0\n         51: iload_1\n-        52: invokespecial #11                 // Method \"<init>\":(II)V\n+        52: invokespecial #28                 // Method \"<init>\":(II)V\n         55: areturn\n       LineNumberTable:\n         line 142: 0\n         line 143: 4\n         line 145: 14\n         line 146: 18\n         line 147: 30\n@@ -531,32 +531,32 @@\n   public static org.apache.commons.lang3.math.Fraction getFraction(int, int, int);\n     descriptor: (III)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=3\n          0: iload_2\n          1: ifne          14\n-         4: new           #4                  // class java/lang/ArithmeticException\n+         4: new           #16                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #5                  // String The denominator must not be zero\n-        10: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #18                 // String The denominator must not be zero\n+        10: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_2\n         15: ifge          28\n-        18: new           #4                  // class java/lang/ArithmeticException\n+        18: new           #16                 // class java/lang/ArithmeticException\n         21: dup\n-        22: ldc           #12                 // String The denominator must not be negative\n-        24: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #31                 // String The denominator must not be negative\n+        24: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: iload_1\n         29: ifge          42\n-        32: new           #4                  // class java/lang/ArithmeticException\n+        32: new           #16                 // class java/lang/ArithmeticException\n         35: dup\n-        36: ldc           #13                 // String The numerator must not be negative\n-        38: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #33                 // String The numerator must not be negative\n+        38: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n         42: iload_0\n         43: ifge          58\n         46: iload_0\n         47: i2l\n         48: iload_2\n         49: i2l\n@@ -572,32 +572,32 @@\n         61: i2l\n         62: lmul\n         63: iload_1\n         64: i2l\n         65: ladd\n         66: lstore_3\n         67: lload_3\n-        68: ldc2_w        #14                 // long -2147483648l\n+        68: ldc2_w        #35                 // long -2147483648l\n         71: lcmp\n         72: iflt          83\n         75: lload_3\n-        76: ldc2_w        #16                 // long 2147483647l\n+        76: ldc2_w        #37                 // long 2147483647l\n         79: lcmp\n         80: ifle          93\n-        83: new           #4                  // class java/lang/ArithmeticException\n+        83: new           #16                 // class java/lang/ArithmeticException\n         86: dup\n-        87: ldc           #18                 // String Numerator too large to represent as an Integer.\n-        89: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        87: ldc           #39                 // String Numerator too large to represent as an Integer.\n+        89: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         92: athrow\n-        93: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        93: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         96: dup\n         97: lload_3\n         98: l2i\n         99: iload_2\n-       100: invokespecial #11                 // Method \"<init>\":(II)V\n+       100: invokespecial #28                 // Method \"<init>\":(II)V\n        103: areturn\n       LineNumberTable:\n         line 172: 0\n         line 173: 4\n         line 175: 14\n         line 176: 18\n         line 178: 28\n@@ -629,25 +629,25 @@\n   public static org.apache.commons.lang3.math.Fraction getReducedFraction(int, int);\n     descriptor: (II)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: iload_1\n          1: ifne          14\n-         4: new           #4                  // class java/lang/ArithmeticException\n+         4: new           #16                 // class java/lang/ArithmeticException\n          7: dup\n-         8: ldc           #5                  // String The denominator must not be zero\n-        10: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #18                 // String The denominator must not be zero\n+        10: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_0\n         15: ifne          22\n-        18: getstatic     #19                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        18: getstatic     #41                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         21: areturn\n         22: iload_1\n-        23: ldc           #8                  // int -2147483648\n+        23: ldc           #25                 // int -2147483648\n         25: if_icmpne     42\n         28: iload_0\n         29: iconst_1\n         30: iand\n         31: ifne          42\n         34: iload_0\n         35: iconst_2\n@@ -656,47 +656,47 @@\n         38: iload_1\n         39: iconst_2\n         40: idiv\n         41: istore_1\n         42: iload_1\n         43: ifge          74\n         46: iload_0\n-        47: ldc           #8                  // int -2147483648\n+        47: ldc           #25                 // int -2147483648\n         49: if_icmpeq     58\n         52: iload_1\n-        53: ldc           #8                  // int -2147483648\n+        53: ldc           #25                 // int -2147483648\n         55: if_icmpne     68\n-        58: new           #4                  // class java/lang/ArithmeticException\n+        58: new           #16                 // class java/lang/ArithmeticException\n         61: dup\n-        62: ldc           #9                  // String overflow: can\\'t negate\n-        64: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        62: ldc           #26                 // String overflow: can\\'t negate\n+        64: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: iload_0\n         69: ineg\n         70: istore_0\n         71: iload_1\n         72: ineg\n         73: istore_1\n         74: iload_0\n         75: iload_1\n-        76: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+        76: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n         79: istore_2\n         80: iload_0\n         81: iload_2\n         82: idiv\n         83: istore_0\n         84: iload_1\n         85: iload_2\n         86: idiv\n         87: istore_1\n-        88: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        88: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         91: dup\n         92: iload_0\n         93: iload_1\n-        94: invokespecial #11                 // Method \"<init>\":(II)V\n+        94: invokespecial #28                 // Method \"<init>\":(II)V\n         97: areturn\n       LineNumberTable:\n         line 208: 0\n         line 209: 4\n         line 211: 14\n         line 212: 18\n         line 215: 22\n@@ -734,27 +734,27 @@\n          2: dcmpg\n          3: ifge          10\n          6: iconst_m1\n          7: goto          11\n         10: iconst_1\n         11: istore_2\n         12: dload_0\n-        13: invokestatic  #21                 // Method java/lang/Math.abs:(D)D\n+        13: invokestatic  #49                 // Method java/lang/Math.abs:(D)D\n         16: dstore_0\n         17: dload_0\n-        18: ldc2_w        #22                 // double 2.147483647E9d\n+        18: ldc2_w        #55                 // double 2.147483647E9d\n         21: dcmpl\n         22: ifgt          32\n         25: dload_0\n-        26: invokestatic  #24                 // Method java/lang/Double.isNaN:(D)Z\n+        26: invokestatic  #57                 // Method java/lang/Double.isNaN:(D)Z\n         29: ifeq          42\n-        32: new           #4                  // class java/lang/ArithmeticException\n+        32: new           #16                 // class java/lang/ArithmeticException\n         35: dup\n-        36: ldc           #25                 // String The value must not be greater than Integer.MAX_VALUE or NaN\n-        38: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #63                 // String The value must not be greater than Integer.MAX_VALUE or NaN\n+        38: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n         42: dload_0\n         43: d2i\n         44: istore_3\n         45: dload_0\n         46: iload_3\n         47: i2d\n@@ -784,15 +784,15 @@\n         81: dload_0\n         82: iload         10\n         84: i2d\n         85: dsub\n         86: dstore        16\n         88: dconst_0\n         89: dstore        18\n-        91: ldc2_w        #27                 // double 1.7976931348623157E308d\n+        91: ldc2_w        #65                 // double 1.7976931348623157E308d\n         94: dstore        22\n         96: iconst_1\n         97: istore        26\n         99: dload         22\n        101: dstore        20\n        103: dload         12\n        105: dload         16\n@@ -825,15 +825,15 @@\n        149: iload         9\n        151: i2d\n        152: ddiv\n        153: dstore        24\n        155: dload_0\n        156: dload         24\n        158: dsub\n-       159: invokestatic  #21                 // Method java/lang/Math.abs:(D)D\n+       159: invokestatic  #49                 // Method java/lang/Math.abs:(D)D\n        162: dstore        22\n        164: iload         11\n        166: istore        10\n        168: dload         14\n        170: dstore        12\n        172: dload         18\n        174: dstore        16\n@@ -857,28 +857,28 @@\n        213: ifle          223\n        216: iload         26\n        218: bipush        25\n        220: if_icmplt     99\n        223: iload         26\n        225: bipush        25\n        227: if_icmpne     240\n-       230: new           #4                  // class java/lang/ArithmeticException\n+       230: new           #16                 // class java/lang/ArithmeticException\n        233: dup\n-       234: ldc           #29                 // String Unable to convert double to fraction\n-       236: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       234: ldc           #67                 // String Unable to convert double to fraction\n+       236: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        239: athrow\n        240: iload         4\n        242: iload_3\n        243: iload         5\n        245: imul\n        246: iadd\n        247: iload_2\n        248: imul\n        249: iload         5\n-       251: invokestatic  #30                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       251: invokestatic  #69                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        254: areturn\n       LineNumberTable:\n         line 248: 0\n         line 249: 12\n         line 250: 17\n         line 251: 32\n         line 253: 42\n@@ -958,103 +958,103 @@\n \n   public static org.apache.commons.lang3.math.Fraction getFraction(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n-         1: ldc           #31                 // String str\n+         1: ldc           #73                 // String str\n          3: iconst_0\n-         4: anewarray     #32                 // class java/lang/Object\n-         7: invokestatic  #33                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #75                 // class java/lang/Object\n+         7: invokestatic  #77                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: bipush        46\n-        14: invokevirtual #34                 // Method java/lang/String.indexOf:(I)I\n+        14: invokevirtual #83                 // Method java/lang/String.indexOf:(I)I\n         17: istore_1\n         18: iload_1\n         19: iflt          30\n         22: aload_0\n-        23: invokestatic  #35                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-        26: invokestatic  #36                 // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n+        23: invokestatic  #89                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+        26: invokestatic  #93                 // Method getFraction:(D)Lorg/apache/commons/lang3/math/Fraction;\n         29: areturn\n         30: aload_0\n         31: bipush        32\n-        33: invokevirtual #34                 // Method java/lang/String.indexOf:(I)I\n+        33: invokevirtual #83                 // Method java/lang/String.indexOf:(I)I\n         36: istore_1\n         37: iload_1\n         38: ifle          110\n         41: aload_0\n         42: iconst_0\n         43: iload_1\n-        44: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        47: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        44: invokevirtual #97                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        47: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         50: istore_2\n         51: aload_0\n         52: iload_1\n         53: iconst_1\n         54: iadd\n-        55: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        55: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         58: astore_0\n         59: aload_0\n         60: bipush        47\n-        62: invokevirtual #34                 // Method java/lang/String.indexOf:(I)I\n+        62: invokevirtual #83                 // Method java/lang/String.indexOf:(I)I\n         65: istore_1\n         66: iload_1\n         67: ifge          80\n-        70: new           #40                 // class java/lang/NumberFormatException\n+        70: new           #108                // class java/lang/NumberFormatException\n         73: dup\n-        74: ldc           #41                 // String The fraction could not be parsed as the format X Y/Z\n-        76: invokespecial #42                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        74: ldc           #110                // String The fraction could not be parsed as the format X Y/Z\n+        76: invokespecial #112                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         79: athrow\n         80: aload_0\n         81: iconst_0\n         82: iload_1\n-        83: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        86: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        83: invokevirtual #97                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        86: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         89: istore_3\n         90: aload_0\n         91: iload_1\n         92: iconst_1\n         93: iadd\n-        94: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        97: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        94: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        97: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        100: istore        4\n        102: iload_2\n        103: iload_3\n        104: iload         4\n-       106: invokestatic  #43                 // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n+       106: invokestatic  #113                // Method getFraction:(III)Lorg/apache/commons/lang3/math/Fraction;\n        109: areturn\n        110: aload_0\n        111: bipush        47\n-       113: invokevirtual #34                 // Method java/lang/String.indexOf:(I)I\n+       113: invokevirtual #83                 // Method java/lang/String.indexOf:(I)I\n        116: istore_1\n        117: iload_1\n        118: ifge          130\n        121: aload_0\n-       122: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       122: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        125: iconst_1\n-       126: invokestatic  #44                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       126: invokestatic  #116                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        129: areturn\n        130: aload_0\n        131: iconst_0\n        132: iload_1\n-       133: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       136: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       133: invokevirtual #97                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       136: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        139: istore_2\n        140: aload_0\n        141: iload_1\n        142: iconst_1\n        143: iadd\n-       144: invokevirtual #39                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       147: invokestatic  #38                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       144: invokevirtual #105                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       147: invokestatic  #101                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        150: istore_3\n        151: iload_2\n        152: iload_3\n-       153: invokestatic  #44                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+       153: invokestatic  #116                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n        156: areturn\n       LineNumberTable:\n         line 314: 0\n         line 316: 11\n         line 317: 18\n         line 318: 22\n         line 322: 30\n@@ -1095,98 +1095,98 @@\n \n   public int getNumerator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: ireturn\n       LineNumberTable:\n         line 358: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getDenominator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field denominator:I\n+         1: getfield      #13                 // Field denominator:I\n          4: ireturn\n       LineNumberTable:\n         line 367: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getProperNumerator();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: aload_0\n-         5: getfield      #3                  // Field denominator:I\n+         5: getfield      #13                 // Field denominator:I\n          8: irem\n-         9: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+         9: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         12: ireturn\n       LineNumberTable:\n         line 382: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int getProperWhole();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: aload_0\n-         5: getfield      #3                  // Field denominator:I\n+         5: getfield      #13                 // Field denominator:I\n          8: idiv\n          9: ireturn\n       LineNumberTable:\n         line 397: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: aload_0\n-         5: getfield      #3                  // Field denominator:I\n+         5: getfield      #13                 // Field denominator:I\n          8: idiv\n          9: ireturn\n       LineNumberTable:\n         line 411: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: i2l\n          5: aload_0\n-         6: getfield      #3                  // Field denominator:I\n+         6: getfield      #13                 // Field denominator:I\n          9: i2l\n         10: ldiv\n         11: lreturn\n       LineNumberTable:\n         line 422: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1194,18 +1194,18 @@\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: i2f\n          5: aload_0\n-         6: getfield      #3                  // Field denominator:I\n+         6: getfield      #13                 // Field denominator:I\n          9: i2f\n         10: fdiv\n         11: freturn\n       LineNumberTable:\n         line 433: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1213,18 +1213,18 @@\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: i2d\n          5: aload_0\n-         6: getfield      #3                  // Field denominator:I\n+         6: getfield      #13                 // Field denominator:I\n          9: i2d\n         10: ddiv\n         11: dreturn\n       LineNumberTable:\n         line 444: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1232,45 +1232,45 @@\n \n   public org.apache.commons.lang3.math.Fraction reduce();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: ifne          25\n          7: aload_0\n-         8: getstatic     #19                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-        11: invokevirtual #46                 // Method equals:(Ljava/lang/Object;)Z\n+         8: getstatic     #41                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        11: invokevirtual #120                // Method equals:(Ljava/lang/Object;)Z\n         14: ifeq          21\n         17: aload_0\n         18: goto          24\n-        21: getstatic     #19                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        21: getstatic     #41                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         24: areturn\n         25: aload_0\n-        26: getfield      #2                  // Field numerator:I\n-        29: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+        26: getfield      #7                  // Field numerator:I\n+        29: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         32: aload_0\n-        33: getfield      #3                  // Field denominator:I\n-        36: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+        33: getfield      #13                 // Field denominator:I\n+        36: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n         39: istore_1\n         40: iload_1\n         41: iconst_1\n         42: if_icmpne     47\n         45: aload_0\n         46: areturn\n         47: aload_0\n-        48: getfield      #2                  // Field numerator:I\n+        48: getfield      #7                  // Field numerator:I\n         51: iload_1\n         52: idiv\n         53: aload_0\n-        54: getfield      #3                  // Field denominator:I\n+        54: getfield      #13                 // Field denominator:I\n         57: iload_1\n         58: idiv\n-        59: invokestatic  #44                 // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+        59: invokestatic  #116                // Method getFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n         62: areturn\n       LineNumberTable:\n         line 460: 0\n         line 461: 7\n         line 463: 25\n         line 464: 40\n         line 465: 45\n@@ -1290,50 +1290,50 @@\n \n   public org.apache.commons.lang3.math.Fraction invert();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: ifne          17\n-         7: new           #4                  // class java/lang/ArithmeticException\n+         7: new           #16                 // class java/lang/ArithmeticException\n         10: dup\n-        11: ldc           #47                 // String Unable to invert zero.\n-        13: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #124                // String Unable to invert zero.\n+        13: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #2                  // Field numerator:I\n-        21: ldc           #8                  // int -2147483648\n+        18: getfield      #7                  // Field numerator:I\n+        21: ldc           #25                 // int -2147483648\n         23: if_icmpne     36\n-        26: new           #4                  // class java/lang/ArithmeticException\n+        26: new           #16                 // class java/lang/ArithmeticException\n         29: dup\n-        30: ldc           #48                 // String overflow: can\\'t negate numerator\n-        32: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        30: ldc           #126                // String overflow: can\\'t negate numerator\n+        32: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: aload_0\n-        37: getfield      #2                  // Field numerator:I\n+        37: getfield      #7                  // Field numerator:I\n         40: ifge          61\n-        43: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        43: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         46: dup\n         47: aload_0\n-        48: getfield      #3                  // Field denominator:I\n+        48: getfield      #13                 // Field denominator:I\n         51: ineg\n         52: aload_0\n-        53: getfield      #2                  // Field numerator:I\n+        53: getfield      #7                  // Field numerator:I\n         56: ineg\n-        57: invokespecial #11                 // Method \"<init>\":(II)V\n+        57: invokespecial #28                 // Method \"<init>\":(II)V\n         60: areturn\n-        61: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        61: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         64: dup\n         65: aload_0\n-        66: getfield      #3                  // Field denominator:I\n+        66: getfield      #13                 // Field denominator:I\n         69: aload_0\n-        70: getfield      #2                  // Field numerator:I\n-        73: invokespecial #11                 // Method \"<init>\":(II)V\n+        70: getfield      #7                  // Field numerator:I\n+        73: invokespecial #28                 // Method \"<init>\":(II)V\n         76: areturn\n       LineNumberTable:\n         line 480: 0\n         line 481: 7\n         line 483: 17\n         line 484: 26\n         line 486: 36\n@@ -1349,30 +1349,30 @@\n \n   public org.apache.commons.lang3.math.Fraction negate();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n-         4: ldc           #8                  // int -2147483648\n+         1: getfield      #7                  // Field numerator:I\n+         4: ldc           #25                 // int -2147483648\n          6: if_icmpne     19\n-         9: new           #4                  // class java/lang/ArithmeticException\n+         9: new           #16                 // class java/lang/ArithmeticException\n         12: dup\n-        13: ldc           #49                 // String overflow: too large to negate\n-        15: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #128                // String overflow: too large to negate\n+        15: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n-        19: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        19: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         22: dup\n         23: aload_0\n-        24: getfield      #2                  // Field numerator:I\n+        24: getfield      #7                  // Field numerator:I\n         27: ineg\n         28: aload_0\n-        29: getfield      #3                  // Field denominator:I\n-        32: invokespecial #11                 // Method \"<init>\":(II)V\n+        29: getfield      #13                 // Field denominator:I\n+        32: invokespecial #28                 // Method \"<init>\":(II)V\n         35: areturn\n       LineNumberTable:\n         line 501: 0\n         line 502: 9\n         line 504: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1382,20 +1382,20 @@\n \n   public org.apache.commons.lang3.math.Fraction abs();\n     descriptor: ()Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field numerator:I\n+         1: getfield      #7                  // Field numerator:I\n          4: iflt          9\n          7: aload_0\n          8: areturn\n          9: aload_0\n-        10: invokevirtual #50                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n+        10: invokevirtual #130                // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n         13: areturn\n       LineNumberTable:\n         line 517: 0\n         line 518: 7\n         line 520: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1411,58 +1411,58 @@\n          0: iload_1\n          1: iconst_1\n          2: if_icmpne     7\n          5: aload_0\n          6: areturn\n          7: iload_1\n          8: ifne          15\n-        11: getstatic     #51                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n+        11: getstatic     #134                // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n         14: areturn\n         15: iload_1\n         16: ifge          51\n         19: iload_1\n-        20: ldc           #8                  // int -2147483648\n+        20: ldc           #25                 // int -2147483648\n         22: if_icmpne     41\n         25: aload_0\n-        26: invokevirtual #52                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        26: invokevirtual #137                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n         29: iconst_2\n-        30: invokevirtual #53                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        30: invokevirtual #140                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         33: iload_1\n         34: iconst_2\n         35: idiv\n         36: ineg\n-        37: invokevirtual #53                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        37: invokevirtual #140                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         40: areturn\n         41: aload_0\n-        42: invokevirtual #52                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        42: invokevirtual #137                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n         45: iload_1\n         46: ineg\n-        47: invokevirtual #53                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        47: invokevirtual #140                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         50: areturn\n         51: aload_0\n         52: aload_0\n-        53: invokevirtual #54                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        53: invokevirtual #144                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         56: astore_2\n         57: iload_1\n         58: iconst_2\n         59: irem\n         60: ifne          71\n         63: aload_2\n         64: iload_1\n         65: iconst_2\n         66: idiv\n-        67: invokevirtual #53                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        67: invokevirtual #140                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         70: areturn\n         71: aload_2\n         72: iload_1\n         73: iconst_2\n         74: idiv\n-        75: invokevirtual #53                 // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n+        75: invokevirtual #140                // Method pow:(I)Lorg/apache/commons/lang3/math/Fraction;\n         78: aload_0\n-        79: invokevirtual #54                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        79: invokevirtual #144                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         82: areturn\n       LineNumberTable:\n         line 536: 0\n         line 537: 5\n         line 538: 7\n         line 539: 11\n         line 540: 15\n@@ -1493,36 +1493,36 @@\n     Code:\n       stack=3, locals=4, args_size=2\n          0: iload_0\n          1: ifeq          8\n          4: iload_1\n          5: ifne          40\n          8: iload_0\n-         9: ldc           #8                  // int -2147483648\n+         9: ldc           #25                 // int -2147483648\n         11: if_icmpeq     20\n         14: iload_1\n-        15: ldc           #8                  // int -2147483648\n+        15: ldc           #25                 // int -2147483648\n         17: if_icmpne     30\n-        20: new           #4                  // class java/lang/ArithmeticException\n+        20: new           #16                 // class java/lang/ArithmeticException\n         23: dup\n-        24: ldc           #55                 // String overflow: gcd is 2^31\n-        26: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #148                // String overflow: gcd is 2^31\n+        26: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: iload_0\n-        31: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+        31: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         34: iload_1\n-        35: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+        35: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         38: iadd\n         39: ireturn\n         40: iload_0\n-        41: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+        41: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         44: iconst_1\n         45: if_icmpeq     56\n         48: iload_1\n-        49: invokestatic  #45                 // Method java/lang/Math.abs:(I)I\n+        49: invokestatic  #118                // Method java/lang/Math.abs:(I)I\n         52: iconst_1\n         53: if_icmpne     58\n         56: iconst_1\n         57: ireturn\n         58: iload_0\n         59: ifle          65\n         62: iload_0\n@@ -1555,18 +1555,18 @@\n         98: idiv\n         99: istore_1\n        100: iinc          2, 1\n        103: goto          74\n        106: iload_2\n        107: bipush        31\n        109: if_icmpne     122\n-       112: new           #4                  // class java/lang/ArithmeticException\n+       112: new           #16                 // class java/lang/ArithmeticException\n        115: dup\n-       116: ldc           #55                 // String overflow: gcd is 2^31\n-       118: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       116: ldc           #148                // String overflow: gcd is 2^31\n+       118: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        121: athrow\n        122: iload_0\n        123: iconst_1\n        124: iand\n        125: iconst_1\n        126: if_icmpne     133\n        129: iload_1\n@@ -1673,25 +1673,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lmul\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #14                 // long -2147483648l\n+         7: ldc2_w        #35                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #16                 // long 2147483647l\n+        15: ldc2_w        #37                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #4                  // class java/lang/ArithmeticException\n+        22: new           #16                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #56                 // String overflow: mul\n-        28: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #150                // String overflow: mul\n+        28: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 634: 0\n         line 635: 6\n@@ -1716,21 +1716,21 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lmul\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #16                 // long 2147483647l\n+         7: ldc2_w        #37                 // long 2147483647l\n         10: lcmp\n         11: ifle          24\n-        14: new           #4                  // class java/lang/ArithmeticException\n+        14: new           #16                 // class java/lang/ArithmeticException\n         17: dup\n-        18: ldc           #57                 // String overflow: mulPos\n-        20: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        18: ldc           #152                // String overflow: mulPos\n+        20: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: lload_2\n         25: l2i\n         26: ireturn\n       LineNumberTable:\n         line 652: 0\n         line 653: 6\n@@ -1754,25 +1754,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: ladd\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #14                 // long -2147483648l\n+         7: ldc2_w        #35                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #16                 // long 2147483647l\n+        15: ldc2_w        #37                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #4                  // class java/lang/ArithmeticException\n+        22: new           #16                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #58                 // String overflow: add\n-        28: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #154                // String overflow: add\n+        28: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 669: 0\n         line 670: 6\n@@ -1797,25 +1797,25 @@\n          0: iload_0\n          1: i2l\n          2: iload_1\n          3: i2l\n          4: lsub\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #14                 // long -2147483648l\n+         7: ldc2_w        #35                 // long -2147483648l\n         10: lcmp\n         11: iflt          22\n         14: lload_2\n-        15: ldc2_w        #16                 // long 2147483647l\n+        15: ldc2_w        #37                 // long 2147483647l\n         18: lcmp\n         19: ifle          32\n-        22: new           #4                  // class java/lang/ArithmeticException\n+        22: new           #16                 // class java/lang/ArithmeticException\n         25: dup\n-        26: ldc           #58                 // String overflow: add\n-        28: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #154                // String overflow: add\n+        28: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: lload_2\n         33: l2i\n         34: ireturn\n       LineNumberTable:\n         line 686: 0\n         line 687: 6\n@@ -1836,15 +1836,15 @@\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #59                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+         3: invokespecial #156                // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n          6: areturn\n       LineNumberTable:\n         line 704: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;\n             0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;\n@@ -1853,166 +1853,166 @@\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #59                 // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n+         3: invokespecial #156                // Method addSub:(Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n          6: areturn\n       LineNumberTable:\n         line 718: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/math/Fraction;\n             0       7     1 fraction   Lorg/apache/commons/lang3/math/Fraction;\n \n   private org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction, boolean);\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;Z)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=10, args_size=3\n          0: aload_1\n-         1: ldc           #60                 // String fraction\n+         1: ldc           #160                // String fraction\n          3: iconst_0\n-         4: anewarray     #32                 // class java/lang/Object\n-         7: invokestatic  #33                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #75                 // class java/lang/Object\n+         7: invokestatic  #77                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n-        12: getfield      #2                  // Field numerator:I\n+        12: getfield      #7                  // Field numerator:I\n         15: ifne          31\n         18: iload_2\n         19: ifeq          26\n         22: aload_1\n         23: goto          30\n         26: aload_1\n-        27: invokevirtual #50                 // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n+        27: invokevirtual #130                // Method negate:()Lorg/apache/commons/lang3/math/Fraction;\n         30: areturn\n         31: aload_1\n-        32: getfield      #2                  // Field numerator:I\n+        32: getfield      #7                  // Field numerator:I\n         35: ifne          40\n         38: aload_0\n         39: areturn\n         40: aload_0\n-        41: getfield      #3                  // Field denominator:I\n+        41: getfield      #13                 // Field denominator:I\n         44: aload_1\n-        45: getfield      #3                  // Field denominator:I\n-        48: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+        45: getfield      #13                 // Field denominator:I\n+        48: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n         51: istore_3\n         52: iload_3\n         53: iconst_1\n         54: if_icmpne     123\n         57: aload_0\n-        58: getfield      #2                  // Field numerator:I\n+        58: getfield      #7                  // Field numerator:I\n         61: aload_1\n-        62: getfield      #3                  // Field denominator:I\n-        65: invokestatic  #61                 // Method mulAndCheck:(II)I\n+        62: getfield      #13                 // Field denominator:I\n+        65: invokestatic  #162                // Method mulAndCheck:(II)I\n         68: istore        4\n         70: aload_1\n-        71: getfield      #2                  // Field numerator:I\n+        71: getfield      #7                  // Field numerator:I\n         74: aload_0\n-        75: getfield      #3                  // Field denominator:I\n-        78: invokestatic  #61                 // Method mulAndCheck:(II)I\n+        75: getfield      #13                 // Field denominator:I\n+        78: invokestatic  #162                // Method mulAndCheck:(II)I\n         81: istore        5\n-        83: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        83: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         86: dup\n         87: iload_2\n         88: ifeq          101\n         91: iload         4\n         93: iload         5\n-        95: invokestatic  #62                 // Method addAndCheck:(II)I\n+        95: invokestatic  #165                // Method addAndCheck:(II)I\n         98: goto          108\n        101: iload         4\n        103: iload         5\n-       105: invokestatic  #63                 // Method subAndCheck:(II)I\n+       105: invokestatic  #168                // Method subAndCheck:(II)I\n        108: aload_0\n-       109: getfield      #3                  // Field denominator:I\n+       109: getfield      #13                 // Field denominator:I\n        112: aload_1\n-       113: getfield      #3                  // Field denominator:I\n-       116: invokestatic  #64                 // Method mulPosAndCheck:(II)I\n-       119: invokespecial #11                 // Method \"<init>\":(II)V\n+       113: getfield      #13                 // Field denominator:I\n+       116: invokestatic  #171                // Method mulPosAndCheck:(II)I\n+       119: invokespecial #28                 // Method \"<init>\":(II)V\n        122: areturn\n        123: aload_0\n-       124: getfield      #2                  // Field numerator:I\n+       124: getfield      #7                  // Field numerator:I\n        127: i2l\n-       128: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       128: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n        131: aload_1\n-       132: getfield      #3                  // Field denominator:I\n+       132: getfield      #13                 // Field denominator:I\n        135: iload_3\n        136: idiv\n        137: i2l\n-       138: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       141: invokevirtual #66                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       138: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       141: invokevirtual #180                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        144: astore        4\n        146: aload_1\n-       147: getfield      #2                  // Field numerator:I\n+       147: getfield      #7                  // Field numerator:I\n        150: i2l\n-       151: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       151: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n        154: aload_0\n-       155: getfield      #3                  // Field denominator:I\n+       155: getfield      #13                 // Field denominator:I\n        158: iload_3\n        159: idiv\n        160: i2l\n-       161: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       164: invokevirtual #66                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       161: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       164: invokevirtual #180                // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        167: astore        5\n        169: iload_2\n        170: ifeq          183\n        173: aload         4\n        175: aload         5\n-       177: invokevirtual #67                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       177: invokevirtual #184                // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        180: goto          190\n        183: aload         4\n        185: aload         5\n-       187: invokevirtual #68                 // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       187: invokevirtual #187                // Method java/math/BigInteger.subtract:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        190: astore        6\n        192: aload         6\n        194: iload_3\n        195: i2l\n-       196: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       199: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-       202: invokevirtual #70                 // Method java/math/BigInteger.intValue:()I\n+       196: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       199: invokevirtual #190                // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       202: invokevirtual #193                // Method java/math/BigInteger.intValue:()I\n        205: istore        7\n        207: iload         7\n        209: ifne          216\n        212: iload_3\n        213: goto          222\n        216: iload         7\n        218: iload_3\n-       219: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+       219: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n        222: istore        8\n        224: aload         6\n        226: iload         8\n        228: i2l\n-       229: invokestatic  #65                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-       232: invokevirtual #71                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+       229: invokestatic  #174                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+       232: invokevirtual #197                // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n        235: astore        9\n        237: aload         9\n-       239: invokevirtual #72                 // Method java/math/BigInteger.bitLength:()I\n+       239: invokevirtual #200                // Method java/math/BigInteger.bitLength:()I\n        242: bipush        31\n        244: if_icmple     257\n-       247: new           #4                  // class java/lang/ArithmeticException\n+       247: new           #16                 // class java/lang/ArithmeticException\n        250: dup\n-       251: ldc           #73                 // String overflow: numerator too large after multiply\n-       253: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+       251: ldc           #203                // String overflow: numerator too large after multiply\n+       253: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n        256: athrow\n-       257: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+       257: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        260: dup\n        261: aload         9\n-       263: invokevirtual #70                 // Method java/math/BigInteger.intValue:()I\n+       263: invokevirtual #193                // Method java/math/BigInteger.intValue:()I\n        266: aload_0\n-       267: getfield      #3                  // Field denominator:I\n+       267: getfield      #13                 // Field denominator:I\n        270: iload_3\n        271: idiv\n        272: aload_1\n-       273: getfield      #3                  // Field denominator:I\n+       273: getfield      #13                 // Field denominator:I\n        276: iload         8\n        278: idiv\n-       279: invokestatic  #64                 // Method mulPosAndCheck:(II)I\n-       282: invokespecial #11                 // Method \"<init>\":(II)V\n+       279: invokestatic  #171                // Method mulPosAndCheck:(II)I\n+       282: invokespecial #28                 // Method \"<init>\":(II)V\n        285: areturn\n       LineNumberTable:\n         line 732: 0\n         line 734: 11\n         line 735: 18\n         line 737: 31\n         line 738: 38\n@@ -2076,58 +2076,58 @@\n \n   public org.apache.commons.lang3.math.Fraction multiplyBy(org.apache.commons.lang3.math.Fraction);\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n-         1: ldc           #60                 // String fraction\n+         1: ldc           #160                // String fraction\n          3: iconst_0\n-         4: anewarray     #32                 // class java/lang/Object\n-         7: invokestatic  #33                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #75                 // class java/lang/Object\n+         7: invokestatic  #77                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n-        12: getfield      #2                  // Field numerator:I\n+        12: getfield      #7                  // Field numerator:I\n         15: ifeq          25\n         18: aload_1\n-        19: getfield      #2                  // Field numerator:I\n+        19: getfield      #7                  // Field numerator:I\n         22: ifne          29\n-        25: getstatic     #19                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        25: getstatic     #41                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n         28: areturn\n         29: aload_0\n-        30: getfield      #2                  // Field numerator:I\n+        30: getfield      #7                  // Field numerator:I\n         33: aload_1\n-        34: getfield      #3                  // Field denominator:I\n-        37: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+        34: getfield      #13                 // Field denominator:I\n+        37: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n         40: istore_2\n         41: aload_1\n-        42: getfield      #2                  // Field numerator:I\n+        42: getfield      #7                  // Field numerator:I\n         45: aload_0\n-        46: getfield      #3                  // Field denominator:I\n-        49: invokestatic  #20                 // Method greatestCommonDivisor:(II)I\n+        46: getfield      #13                 // Field denominator:I\n+        49: invokestatic  #45                 // Method greatestCommonDivisor:(II)I\n         52: istore_3\n         53: aload_0\n-        54: getfield      #2                  // Field numerator:I\n+        54: getfield      #7                  // Field numerator:I\n         57: iload_2\n         58: idiv\n         59: aload_1\n-        60: getfield      #2                  // Field numerator:I\n+        60: getfield      #7                  // Field numerator:I\n         63: iload_3\n         64: idiv\n-        65: invokestatic  #61                 // Method mulAndCheck:(II)I\n+        65: invokestatic  #162                // Method mulAndCheck:(II)I\n         68: aload_0\n-        69: getfield      #3                  // Field denominator:I\n+        69: getfield      #13                 // Field denominator:I\n         72: iload_3\n         73: idiv\n         74: aload_1\n-        75: getfield      #3                  // Field denominator:I\n+        75: getfield      #13                 // Field denominator:I\n         78: iload_2\n         79: idiv\n-        80: invokestatic  #64                 // Method mulPosAndCheck:(II)I\n-        83: invokestatic  #30                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n+        80: invokestatic  #171                // Method mulPosAndCheck:(II)I\n+        83: invokestatic  #69                 // Method getReducedFraction:(II)Lorg/apache/commons/lang3/math/Fraction;\n         86: areturn\n       LineNumberTable:\n         line 780: 0\n         line 781: 11\n         line 782: 25\n         line 786: 29\n         line 787: 41\n@@ -2146,31 +2146,31 @@\n \n   public org.apache.commons.lang3.math.Fraction divideBy(org.apache.commons.lang3.math.Fraction);\n     descriptor: (Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #60                 // String fraction\n+         1: ldc           #160                // String fraction\n          3: iconst_0\n-         4: anewarray     #32                 // class java/lang/Object\n-         7: invokestatic  #33                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #75                 // class java/lang/Object\n+         7: invokestatic  #77                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_1\n-        12: getfield      #2                  // Field numerator:I\n+        12: getfield      #7                  // Field numerator:I\n         15: ifne          28\n-        18: new           #4                  // class java/lang/ArithmeticException\n+        18: new           #16                 // class java/lang/ArithmeticException\n         21: dup\n-        22: ldc           #74                 // String The fraction to divide by must not be zero\n-        24: invokespecial #6                  // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #205                // String The fraction to divide by must not be zero\n+        24: invokespecial #20                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n         29: aload_1\n-        30: invokevirtual #52                 // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n-        33: invokevirtual #54                 // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n+        30: invokevirtual #137                // Method invert:()Lorg/apache/commons/lang3/math/Fraction;\n+        33: invokevirtual #144                // Method multiplyBy:(Lorg/apache/commons/lang3/math/Fraction;)Lorg/apache/commons/lang3/math/Fraction;\n         36: areturn\n       LineNumberTable:\n         line 803: 0\n         line 804: 11\n         line 805: 18\n         line 807: 28\n       LocalVariableTable:\n@@ -2187,30 +2187,30 @@\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n-         8: instanceof    #10                 // class org/apache/commons/lang3/math/Fraction\n+         8: instanceof    #8                  // class org/apache/commons/lang3/math/Fraction\n         11: ifne          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n-        17: checkcast     #10                 // class org/apache/commons/lang3/math/Fraction\n+        17: checkcast     #8                  // class org/apache/commons/lang3/math/Fraction\n         20: astore_2\n         21: aload_0\n-        22: invokevirtual #75                 // Method getNumerator:()I\n+        22: invokevirtual #207                // Method getNumerator:()I\n         25: aload_2\n-        26: invokevirtual #75                 // Method getNumerator:()I\n+        26: invokevirtual #207                // Method getNumerator:()I\n         29: if_icmpne     47\n         32: aload_0\n-        33: invokevirtual #76                 // Method getDenominator:()I\n+        33: invokevirtual #210                // Method getDenominator:()I\n         36: aload_2\n-        37: invokevirtual #76                 // Method getDenominator:()I\n+        37: invokevirtual #210                // Method getDenominator:()I\n         40: if_icmpne     47\n         43: iconst_1\n         44: goto          48\n         47: iconst_0\n         48: ireturn\n       LineNumberTable:\n         line 823: 0\n@@ -2235,29 +2235,29 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #77                 // Field hashCode:I\n+         1: getfield      #213                // Field hashCode:I\n          4: ifne          27\n          7: aload_0\n          8: bipush        37\n         10: sipush        629\n         13: aload_0\n-        14: invokevirtual #75                 // Method getNumerator:()I\n+        14: invokevirtual #207                // Method getNumerator:()I\n         17: iadd\n         18: imul\n         19: aload_0\n-        20: invokevirtual #76                 // Method getDenominator:()I\n+        20: invokevirtual #210                // Method getDenominator:()I\n         23: iadd\n-        24: putfield      #77                 // Field hashCode:I\n+        24: putfield      #213                // Field hashCode:I\n         27: aload_0\n-        28: getfield      #77                 // Field hashCode:I\n+        28: getfield      #213                // Field hashCode:I\n         31: ireturn\n       LineNumberTable:\n         line 840: 0\n         line 842: 7\n         line 844: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2272,44 +2272,44 @@\n       stack=4, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_0\n          6: ireturn\n          7: aload_0\n-         8: getfield      #2                  // Field numerator:I\n+         8: getfield      #7                  // Field numerator:I\n         11: aload_1\n-        12: getfield      #2                  // Field numerator:I\n+        12: getfield      #7                  // Field numerator:I\n         15: if_icmpne     31\n         18: aload_0\n-        19: getfield      #3                  // Field denominator:I\n+        19: getfield      #13                 // Field denominator:I\n         22: aload_1\n-        23: getfield      #3                  // Field denominator:I\n+        23: getfield      #13                 // Field denominator:I\n         26: if_icmpne     31\n         29: iconst_0\n         30: ireturn\n         31: aload_0\n-        32: getfield      #2                  // Field numerator:I\n+        32: getfield      #7                  // Field numerator:I\n         35: i2l\n         36: aload_1\n-        37: getfield      #3                  // Field denominator:I\n+        37: getfield      #13                 // Field denominator:I\n         40: i2l\n         41: lmul\n         42: lstore_2\n         43: aload_1\n-        44: getfield      #2                  // Field numerator:I\n+        44: getfield      #7                  // Field numerator:I\n         47: i2l\n         48: aload_0\n-        49: getfield      #3                  // Field denominator:I\n+        49: getfield      #13                 // Field denominator:I\n         52: i2l\n         53: lmul\n         54: lstore        4\n         56: lload_2\n         57: lload         4\n-        59: invokestatic  #78                 // Method java/lang/Long.compare:(JJ)I\n+        59: invokestatic  #216                // Method java/lang/Long.compare:(JJ)I\n         62: ireturn\n       LineNumberTable:\n         line 861: 0\n         line 862: 5\n         line 864: 7\n         line 865: 29\n         line 869: 31\n@@ -2327,32 +2327,32 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #79                 // Field toString:Ljava/lang/String;\n+         1: getfield      #222                // Field toString:Ljava/lang/String;\n          4: ifnonnull     40\n          7: aload_0\n-         8: new           #80                 // class java/lang/StringBuilder\n+         8: new           #226                // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        12: invokespecial #228                // Method java/lang/StringBuilder.\"<init>\":()V\n         15: aload_0\n-        16: invokevirtual #75                 // Method getNumerator:()I\n-        19: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        22: ldc           #83                 // String /\n-        24: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #207                // Method getNumerator:()I\n+        19: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        22: ldc           #233                // String /\n+        24: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: aload_0\n-        28: invokevirtual #76                 // Method getDenominator:()I\n-        31: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        34: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: putfield      #79                 // Field toString:Ljava/lang/String;\n+        28: invokevirtual #210                // Method getDenominator:()I\n+        31: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: putfield      #222                // Field toString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #79                 // Field toString:Ljava/lang/String;\n+        41: getfield      #222                // Field toString:Ljava/lang/String;\n         44: areturn\n       LineNumberTable:\n         line 883: 0\n         line 884: 7\n         line 886: 40\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2362,231 +2362,231 @@\n \n   public java.lang.String toProperString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #86                 // Field toProperString:Ljava/lang/String;\n-         4: ifnonnull     193\n+         1: getfield      #241                // Field toProperString:Ljava/lang/String;\n+         4: ifnonnull     194\n          7: aload_0\n-         8: getfield      #2                  // Field numerator:I\n+         8: getfield      #7                  // Field numerator:I\n         11: ifne          23\n         14: aload_0\n-        15: ldc           #87                 // String 0\n-        17: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-        20: goto          193\n+        15: ldc           #244                // String 0\n+        17: putfield      #241                // Field toProperString:Ljava/lang/String;\n+        20: goto          194\n         23: aload_0\n-        24: getfield      #2                  // Field numerator:I\n+        24: getfield      #7                  // Field numerator:I\n         27: aload_0\n-        28: getfield      #3                  // Field denominator:I\n+        28: getfield      #13                 // Field denominator:I\n         31: if_icmpne     43\n         34: aload_0\n-        35: ldc           #88                 // String 1\n-        37: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-        40: goto          193\n+        35: ldc           #246                // String 1\n+        37: putfield      #241                // Field toProperString:Ljava/lang/String;\n+        40: goto          194\n         43: aload_0\n-        44: getfield      #2                  // Field numerator:I\n+        44: getfield      #7                  // Field numerator:I\n         47: iconst_m1\n         48: aload_0\n-        49: getfield      #3                  // Field denominator:I\n+        49: getfield      #13                 // Field denominator:I\n         52: imul\n         53: if_icmpne     65\n         56: aload_0\n-        57: ldc           #89                 // String -1\n-        59: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-        62: goto          193\n+        57: ldc           #248                // String -1\n+        59: putfield      #241                // Field toProperString:Ljava/lang/String;\n+        62: goto          194\n         65: aload_0\n-        66: getfield      #2                  // Field numerator:I\n+        66: getfield      #7                  // Field numerator:I\n         69: ifle          80\n         72: aload_0\n-        73: getfield      #2                  // Field numerator:I\n+        73: getfield      #7                  // Field numerator:I\n         76: ineg\n         77: goto          84\n         80: aload_0\n-        81: getfield      #2                  // Field numerator:I\n+        81: getfield      #7                  // Field numerator:I\n         84: aload_0\n-        85: getfield      #3                  // Field denominator:I\n+        85: getfield      #13                 // Field denominator:I\n         88: ineg\n-        89: if_icmpge     160\n+        89: if_icmpge     161\n         92: aload_0\n-        93: invokevirtual #90                 // Method getProperNumerator:()I\n+        93: invokevirtual #250                // Method getProperNumerator:()I\n         96: istore_1\n         97: iload_1\n         98: ifne          115\n        101: aload_0\n        102: aload_0\n-       103: invokevirtual #91                 // Method getProperWhole:()I\n-       106: invokestatic  #92                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-       109: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-       112: goto          157\n+       103: invokevirtual #253                // Method getProperWhole:()I\n+       106: invokestatic  #256                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       109: putfield      #241                // Field toProperString:Ljava/lang/String;\n+       112: goto          158\n        115: aload_0\n-       116: new           #80                 // class java/lang/StringBuilder\n+       116: new           #226                // class java/lang/StringBuilder\n        119: dup\n-       120: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       120: invokespecial #228                // Method java/lang/StringBuilder.\"<init>\":()V\n        123: aload_0\n-       124: invokevirtual #91                 // Method getProperWhole:()I\n-       127: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       130: ldc           #93                 // String\n-       132: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       135: iload_1\n-       136: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       139: ldc           #83                 // String /\n-       141: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       144: aload_0\n-       145: invokevirtual #76                 // Method getDenominator:()I\n-       148: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       151: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       154: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-       157: goto          193\n-       160: aload_0\n-       161: new           #80                 // class java/lang/StringBuilder\n-       164: dup\n-       165: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       168: aload_0\n-       169: invokevirtual #75                 // Method getNumerator:()I\n-       172: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       175: ldc           #83                 // String /\n-       177: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       180: aload_0\n-       181: invokevirtual #76                 // Method getDenominator:()I\n-       184: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       187: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       190: putfield      #86                 // Field toProperString:Ljava/lang/String;\n-       193: aload_0\n-       194: getfield      #86                 // Field toProperString:Ljava/lang/String;\n-       197: areturn\n+       124: invokevirtual #253                // Method getProperWhole:()I\n+       127: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       130: ldc_w         #258                // String\n+       133: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       136: iload_1\n+       137: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       140: ldc           #233                // String /\n+       142: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       145: aload_0\n+       146: invokevirtual #210                // Method getDenominator:()I\n+       149: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       152: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       155: putfield      #241                // Field toProperString:Ljava/lang/String;\n+       158: goto          194\n+       161: aload_0\n+       162: new           #226                // class java/lang/StringBuilder\n+       165: dup\n+       166: invokespecial #228                // Method java/lang/StringBuilder.\"<init>\":()V\n+       169: aload_0\n+       170: invokevirtual #207                // Method getNumerator:()I\n+       173: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       176: ldc           #233                // String /\n+       178: invokevirtual #235                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       181: aload_0\n+       182: invokevirtual #210                // Method getDenominator:()I\n+       185: invokevirtual #229                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       188: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       191: putfield      #241                // Field toProperString:Ljava/lang/String;\n+       194: aload_0\n+       195: getfield      #241                // Field toProperString:Ljava/lang/String;\n+       198: areturn\n       LineNumberTable:\n         line 899: 0\n         line 900: 7\n         line 901: 14\n         line 902: 23\n         line 903: 34\n         line 904: 43\n         line 905: 56\n         line 906: 65\n         line 911: 92\n         line 912: 97\n         line 913: 101\n         line 915: 115\n-        line 917: 157\n-        line 918: 160\n-        line 921: 193\n+        line 917: 158\n+        line 918: 161\n+        line 921: 194\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           97      60     1 properNumerator   I\n-            0     198     0  this   Lorg/apache/commons/lang3/math/Fraction;\n+           97      61     1 properNumerator   I\n+            0     199     0  this   Lorg/apache/commons/lang3/math/Fraction;\n       StackMapTable: number_of_entries = 9\n         frame_type = 23 /* same */\n         frame_type = 19 /* same */\n         frame_type = 21 /* same */\n         frame_type = 14 /* same */\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ int ]\n         frame_type = 250 /* chop */\n-          offset_delta = 41\n+          offset_delta = 42\n         frame_type = 2 /* same */\n         frame_type = 32 /* same */\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #10                 // class org/apache/commons/lang3/math/Fraction\n-         5: invokevirtual #94                 // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n+         2: checkcast     #8                  // class org/apache/commons/lang3/math/Fraction\n+         5: invokevirtual #260                // Method compareTo:(Lorg/apache/commons/lang3/math/Fraction;)I\n          8: ireturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/math/Fraction;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+         0: new           #8                  // class org/apache/commons/lang3/math/Fraction\n          3: dup\n          4: iconst_0\n          5: iconst_1\n-         6: invokespecial #11                 // Method \"<init>\":(II)V\n-         9: putstatic     #19                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n-        12: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+         6: invokespecial #28                 // Method \"<init>\":(II)V\n+         9: putstatic     #41                 // Field ZERO:Lorg/apache/commons/lang3/math/Fraction;\n+        12: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         15: dup\n         16: iconst_1\n         17: iconst_1\n-        18: invokespecial #11                 // Method \"<init>\":(II)V\n-        21: putstatic     #51                 // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n-        24: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        18: invokespecial #28                 // Method \"<init>\":(II)V\n+        21: putstatic     #134                // Field ONE:Lorg/apache/commons/lang3/math/Fraction;\n+        24: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         27: dup\n         28: iconst_1\n         29: iconst_2\n-        30: invokespecial #11                 // Method \"<init>\":(II)V\n-        33: putstatic     #95                 // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n-        36: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        30: invokespecial #28                 // Method \"<init>\":(II)V\n+        33: putstatic     #264                // Field ONE_HALF:Lorg/apache/commons/lang3/math/Fraction;\n+        36: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         39: dup\n         40: iconst_1\n         41: iconst_3\n-        42: invokespecial #11                 // Method \"<init>\":(II)V\n-        45: putstatic     #96                 // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n-        48: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        42: invokespecial #28                 // Method \"<init>\":(II)V\n+        45: putstatic     #267                // Field ONE_THIRD:Lorg/apache/commons/lang3/math/Fraction;\n+        48: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         51: dup\n         52: iconst_2\n         53: iconst_3\n-        54: invokespecial #11                 // Method \"<init>\":(II)V\n-        57: putstatic     #97                 // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n-        60: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        54: invokespecial #28                 // Method \"<init>\":(II)V\n+        57: putstatic     #270                // Field TWO_THIRDS:Lorg/apache/commons/lang3/math/Fraction;\n+        60: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         63: dup\n         64: iconst_1\n         65: iconst_4\n-        66: invokespecial #11                 // Method \"<init>\":(II)V\n-        69: putstatic     #98                 // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n-        72: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        66: invokespecial #28                 // Method \"<init>\":(II)V\n+        69: putstatic     #273                // Field ONE_QUARTER:Lorg/apache/commons/lang3/math/Fraction;\n+        72: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         75: dup\n         76: iconst_2\n         77: iconst_4\n-        78: invokespecial #11                 // Method \"<init>\":(II)V\n-        81: putstatic     #99                 // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-        84: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        78: invokespecial #28                 // Method \"<init>\":(II)V\n+        81: putstatic     #276                // Field TWO_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+        84: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         87: dup\n         88: iconst_3\n         89: iconst_4\n-        90: invokespecial #11                 // Method \"<init>\":(II)V\n-        93: putstatic     #100                // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n-        96: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+        90: invokespecial #28                 // Method \"<init>\":(II)V\n+        93: putstatic     #279                // Field THREE_QUARTERS:Lorg/apache/commons/lang3/math/Fraction;\n+        96: new           #8                  // class org/apache/commons/lang3/math/Fraction\n         99: dup\n        100: iconst_1\n        101: iconst_5\n-       102: invokespecial #11                 // Method \"<init>\":(II)V\n-       105: putstatic     #101                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n-       108: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+       102: invokespecial #28                 // Method \"<init>\":(II)V\n+       105: putstatic     #282                // Field ONE_FIFTH:Lorg/apache/commons/lang3/math/Fraction;\n+       108: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        111: dup\n        112: iconst_2\n        113: iconst_5\n-       114: invokespecial #11                 // Method \"<init>\":(II)V\n-       117: putstatic     #102                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-       120: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+       114: invokespecial #28                 // Method \"<init>\":(II)V\n+       117: putstatic     #285                // Field TWO_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       120: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        123: dup\n        124: iconst_3\n        125: iconst_5\n-       126: invokespecial #11                 // Method \"<init>\":(II)V\n-       129: putstatic     #103                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n-       132: new           #10                 // class org/apache/commons/lang3/math/Fraction\n+       126: invokespecial #28                 // Method \"<init>\":(II)V\n+       129: putstatic     #288                // Field THREE_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       132: new           #8                  // class org/apache/commons/lang3/math/Fraction\n        135: dup\n        136: iconst_4\n        137: iconst_5\n-       138: invokespecial #11                 // Method \"<init>\":(II)V\n-       141: putstatic     #104                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n+       138: invokespecial #28                 // Method \"<init>\":(II)V\n+       141: putstatic     #291                // Field FOUR_FIFTHS:Lorg/apache/commons/lang3/math/Fraction;\n        144: return\n       LineNumberTable:\n         line 48: 0\n         line 52: 12\n         line 56: 24\n         line 60: 36\n         line 64: 48\n@@ -2594,9 +2594,9 @@\n         line 72: 72\n         line 76: 84\n         line 80: 96\n         line 84: 108\n         line 88: 120\n         line 92: 132\n }\n-Signature: #239                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n+Signature: #368                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/math/Fraction;>;\n SourceFile: \"Fraction.java\"\n"}]}
