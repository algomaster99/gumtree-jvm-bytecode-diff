{"diffoscope-json-version": 1, "source1": "first/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "source2": "second/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,34 +15,34 @@\n     \n     private BufferAtATimeOutputChannel(final OutputStream out) {\n         this.closed = new AtomicBoolean(false);\n         this.out = out;\n     }\n     \n     @Override\n-    public int write(final ByteBuffer buffer) throws IOException {\n+    public int write(final ByteBuffer byteBuffer) throws IOException {\n         if (!this.isOpen()) {\n             throw new ClosedChannelException();\n         }\n-        if (!buffer.hasArray()) {\n+        if (!byteBuffer.hasArray()) {\n             throw new IllegalArgumentException(\"direct buffer somehow written to BufferAtATimeOutputChannel\");\n         }\n         try {\n-            final int pos = buffer.position();\n-            final int len = buffer.limit() - pos;\n-            this.out.write(buffer.array(), buffer.arrayOffset() + pos, len);\n-            buffer.position(buffer.limit());\n+            final int position = byteBuffer.position();\n+            final int len = byteBuffer.limit() - position;\n+            this.out.write(byteBuffer.array(), byteBuffer.arrayOffset() + position, len);\n+            byteBuffer.position(byteBuffer.limit());\n             return len;\n         }\n-        catch (final IOException e) {\n+        catch (final IOException ex) {\n             try {\n                 this.close();\n             }\n-            catch (final IOException ex) {}\n-            throw e;\n+            catch (final IOException ex2) {}\n+            throw ex;\n         }\n     }\n     \n     @Override\n     public boolean isOpen() {\n         return !this.closed.get();\n     }\n"}]}
