{"diffoscope-json-version": 1, "source1": "first/ClassLoaderObjectInputStream.class", "source2": "second/ClassLoaderObjectInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,93 @@\n-  SHA-256 checksum deea2117153e6b98ccc2fc92346f81a05268cfd7bd5761bd2f6ee7acfc1014bf\n+  SHA-256 checksum 1acb47fe44914e718e0d86452b443602bbfa1ba64f5fedc1e77019a4c67ab5c0\n   Compiled from \"ClassLoaderObjectInputStream.java\"\n public class org.apache.commons.io.input.ClassLoaderObjectInputStream extends java.io.ObjectInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #11                         // org/apache/commons/io/input/ClassLoaderObjectInputStream\n   super_class: #12                        // java/io/ObjectInputStream\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#54        // java/io/ObjectInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #2 = Fieldref           #11.#55        // org/apache/commons/io/input/ClassLoaderObjectInputStream.classLoader:Ljava/lang/ClassLoader;\n-   #3 = Methodref          #56.#57        // java/io/ObjectStreamClass.getName:()Ljava/lang/String;\n-   #4 = Methodref          #7.#58         // java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n-   #5 = Class              #59            // java/lang/ClassNotFoundException\n-   #6 = Methodref          #12.#60        // java/io/ObjectInputStream.resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;\n-   #7 = Class              #61            // java/lang/Class\n-   #8 = Methodref          #62.#63        // java/lang/reflect/Proxy.getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n-   #9 = Class              #64            // java/lang/IllegalArgumentException\n-  #10 = Methodref          #12.#65        // java/io/ObjectInputStream.resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;\n-  #11 = Class              #66            // org/apache/commons/io/input/ClassLoaderObjectInputStream\n-  #12 = Class              #67            // java/io/ObjectInputStream\n+   #1 = Methodref          #12.#52        // java/io/ObjectInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #2 = Fieldref           #11.#53        // org/apache/commons/io/input/ClassLoaderObjectInputStream.classLoader:Ljava/lang/ClassLoader;\n+   #3 = Methodref          #54.#55        // java/io/ObjectStreamClass.getName:()Ljava/lang/String;\n+   #4 = Methodref          #7.#56         // java/lang/Class.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n+   #5 = Class              #57            // java/lang/ClassNotFoundException\n+   #6 = Methodref          #12.#58        // java/io/ObjectInputStream.resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;\n+   #7 = Class              #59            // java/lang/Class\n+   #8 = Methodref          #60.#61        // java/lang/reflect/Proxy.getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n+   #9 = Class              #62            // java/lang/IllegalArgumentException\n+  #10 = Methodref          #12.#63        // java/io/ObjectInputStream.resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;\n+  #11 = Class              #64            // org/apache/commons/io/input/ClassLoaderObjectInputStream\n+  #12 = Class              #65            // java/io/ObjectInputStream\n   #13 = Utf8               classLoader\n   #14 = Utf8               Ljava/lang/ClassLoader;\n   #15 = Utf8               <init>\n   #16 = Utf8               (Ljava/lang/ClassLoader;Ljava/io/InputStream;)V\n   #17 = Utf8               Code\n   #18 = Utf8               LineNumberTable\n   #19 = Utf8               LocalVariableTable\n   #20 = Utf8               this\n   #21 = Utf8               Lorg/apache/commons/io/input/ClassLoaderObjectInputStream;\n   #22 = Utf8               inputStream\n   #23 = Utf8               Ljava/io/InputStream;\n   #24 = Utf8               Exceptions\n-  #25 = Class              #68            // java/io/IOException\n-  #26 = Class              #69            // java/io/StreamCorruptedException\n+  #25 = Class              #66            // java/io/IOException\n+  #26 = Class              #67            // java/io/StreamCorruptedException\n   #27 = Utf8               resolveClass\n   #28 = Utf8               (Ljava/io/ObjectStreamClass;)Ljava/lang/Class;\n   #29 = Utf8               cnfe\n   #30 = Utf8               Ljava/lang/ClassNotFoundException;\n   #31 = Utf8               objectStreamClass\n   #32 = Utf8               Ljava/io/ObjectStreamClass;\n   #33 = Utf8               StackMapTable\n-  #34 = Class              #59            // java/lang/ClassNotFoundException\n-  #35 = Utf8               Signature\n-  #36 = Utf8               (Ljava/io/ObjectStreamClass;)Ljava/lang/Class<*>;\n-  #37 = Utf8               resolveProxyClass\n-  #38 = Utf8               ([Ljava/lang/String;)Ljava/lang/Class;\n-  #39 = Utf8               i\n-  #40 = Utf8               I\n-  #41 = Utf8               e\n-  #42 = Utf8               Ljava/lang/IllegalArgumentException;\n-  #43 = Utf8               interfaces\n-  #44 = Utf8               [Ljava/lang/String;\n-  #45 = Utf8               interfaceClasses\n-  #46 = Utf8               [Ljava/lang/Class;\n-  #47 = Utf8               LocalVariableTypeTable\n-  #48 = Utf8               [Ljava/lang/Class<*>;\n-  #49 = Class              #46            // \"[Ljava/lang/Class;\"\n-  #50 = Class              #64            // java/lang/IllegalArgumentException\n-  #51 = Utf8               ([Ljava/lang/String;)Ljava/lang/Class<*>;\n-  #52 = Utf8               SourceFile\n-  #53 = Utf8               ClassLoaderObjectInputStream.java\n-  #54 = NameAndType        #15:#70        // \"<init>\":(Ljava/io/InputStream;)V\n-  #55 = NameAndType        #13:#14        // classLoader:Ljava/lang/ClassLoader;\n-  #56 = Class              #71            // java/io/ObjectStreamClass\n-  #57 = NameAndType        #72:#73        // getName:()Ljava/lang/String;\n-  #58 = NameAndType        #74:#75        // forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n-  #59 = Utf8               java/lang/ClassNotFoundException\n-  #60 = NameAndType        #27:#28        // resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;\n-  #61 = Utf8               java/lang/Class\n-  #62 = Class              #76            // java/lang/reflect/Proxy\n-  #63 = NameAndType        #77:#78        // getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n-  #64 = Utf8               java/lang/IllegalArgumentException\n-  #65 = NameAndType        #37:#38        // resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;\n-  #66 = Utf8               org/apache/commons/io/input/ClassLoaderObjectInputStream\n-  #67 = Utf8               java/io/ObjectInputStream\n-  #68 = Utf8               java/io/IOException\n-  #69 = Utf8               java/io/StreamCorruptedException\n-  #70 = Utf8               (Ljava/io/InputStream;)V\n-  #71 = Utf8               java/io/ObjectStreamClass\n-  #72 = Utf8               getName\n-  #73 = Utf8               ()Ljava/lang/String;\n-  #74 = Utf8               forName\n-  #75 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n-  #76 = Utf8               java/lang/reflect/Proxy\n-  #77 = Utf8               getProxyClass\n-  #78 = Utf8               (Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n+  #34 = Utf8               Signature\n+  #35 = Utf8               (Ljava/io/ObjectStreamClass;)Ljava/lang/Class<*>;\n+  #36 = Utf8               resolveProxyClass\n+  #37 = Utf8               ([Ljava/lang/String;)Ljava/lang/Class;\n+  #38 = Utf8               i\n+  #39 = Utf8               I\n+  #40 = Utf8               e\n+  #41 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #42 = Utf8               interfaces\n+  #43 = Utf8               [Ljava/lang/String;\n+  #44 = Utf8               interfaceClasses\n+  #45 = Utf8               [Ljava/lang/Class;\n+  #46 = Utf8               LocalVariableTypeTable\n+  #47 = Utf8               [Ljava/lang/Class<*>;\n+  #48 = Class              #45            // \"[Ljava/lang/Class;\"\n+  #49 = Utf8               ([Ljava/lang/String;)Ljava/lang/Class<*>;\n+  #50 = Utf8               SourceFile\n+  #51 = Utf8               ClassLoaderObjectInputStream.java\n+  #52 = NameAndType        #15:#68        // \"<init>\":(Ljava/io/InputStream;)V\n+  #53 = NameAndType        #13:#14        // classLoader:Ljava/lang/ClassLoader;\n+  #54 = Class              #69            // java/io/ObjectStreamClass\n+  #55 = NameAndType        #70:#71        // getName:()Ljava/lang/String;\n+  #56 = NameAndType        #72:#73        // forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n+  #57 = Utf8               java/lang/ClassNotFoundException\n+  #58 = NameAndType        #27:#28        // resolveClass:(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;\n+  #59 = Utf8               java/lang/Class\n+  #60 = Class              #74            // java/lang/reflect/Proxy\n+  #61 = NameAndType        #75:#76        // getProxyClass:(Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n+  #62 = Utf8               java/lang/IllegalArgumentException\n+  #63 = NameAndType        #36:#37        // resolveProxyClass:([Ljava/lang/String;)Ljava/lang/Class;\n+  #64 = Utf8               org/apache/commons/io/input/ClassLoaderObjectInputStream\n+  #65 = Utf8               java/io/ObjectInputStream\n+  #66 = Utf8               java/io/IOException\n+  #67 = Utf8               java/io/StreamCorruptedException\n+  #68 = Utf8               (Ljava/io/InputStream;)V\n+  #69 = Utf8               java/io/ObjectStreamClass\n+  #70 = Utf8               getName\n+  #71 = Utf8               ()Ljava/lang/String;\n+  #72 = Utf8               forName\n+  #73 = Utf8               (Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;\n+  #74 = Utf8               java/lang/reflect/Proxy\n+  #75 = Utf8               getProxyClass\n+  #76 = Utf8               (Ljava/lang/ClassLoader;[Ljava/lang/Class;)Ljava/lang/Class;\n {\n   private final java.lang.ClassLoader classLoader;\n     descriptor: Ljava/lang/ClassLoader;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.input.ClassLoaderObjectInputStream(java.lang.ClassLoader, java.io.InputStream) throws java.io.IOException, java.io.StreamCorruptedException;\n     descriptor: (Ljava/lang/ClassLoader;Ljava/io/InputStream;)V\n@@ -145,15 +143,15 @@\n             0      20     0  this   Lorg/apache/commons/io/input/ClassLoaderObjectInputStream;\n             0      20     1 objectStreamClass   Ljava/io/ObjectStreamClass;\n       StackMapTable: number_of_entries = 1\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class java/lang/ClassNotFoundException ]\n     Exceptions:\n       throws java.io.IOException, java.lang.ClassNotFoundException\n-    Signature: #36                          // (Ljava/io/ObjectStreamClass;)Ljava/lang/Class<*>;\n+    Signature: #35                          // (Ljava/io/ObjectStreamClass;)Ljava/lang/Class<*>;\n \n   protected java.lang.Class<?> resolveProxyClass(java.lang.String[]) throws java.io.IOException, java.lang.ClassNotFoundException;\n     descriptor: ([Ljava/lang/String;)Ljava/lang/Class;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_1\n@@ -215,10 +213,10 @@\n           locals = [ class \"[Ljava/lang/Class;\", int ]\n         frame_type = 250 /* chop */\n           offset_delta = 25\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/lang/IllegalArgumentException ]\n     Exceptions:\n       throws java.io.IOException, java.lang.ClassNotFoundException\n-    Signature: #51                          // ([Ljava/lang/String;)Ljava/lang/Class<*>;\n+    Signature: #49                          // ([Ljava/lang/String;)Ljava/lang/Class<*>;\n }\n SourceFile: \"ClassLoaderObjectInputStream.java\"\n"}]}
