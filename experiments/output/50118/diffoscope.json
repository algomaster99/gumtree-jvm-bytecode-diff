{"diffoscope-json-version": 1, "source1": "first/NonBlockingByteBufferJsonParser.class", "source2": "second/NonBlockingByteBufferJsonParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,164 +1,164 @@\n-  SHA-256 checksum 6bddabb53f4722d318ed18900fef4b9ade77c439ec8e8acd0ad2a679402aa7b9\n+  SHA-256 checksum 40c7afe54247c949ba8da7387a1e34157fc44516c94f3443d73f13952c1def26\n   Compiled from \"NonBlockingByteBufferJsonParser.java\"\n public class com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser extends com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase implements com.fasterxml.jackson.core.async.ByteBufferFeeder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n-  super_class: #25                        // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+  this_class: #1                          // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n+  super_class: #3                         // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n   interfaces: 1, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Methodref          #25.#68       // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-    #2 = Fieldref           #24.#69       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser.NO_BYTES:[B\n-    #3 = Methodref          #70.#71       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n-    #4 = Fieldref           #24.#72       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputBuffer:Ljava/nio/ByteBuffer;\n-    #5 = Fieldref           #24.#73       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputPtr:I\n-    #6 = Fieldref           #24.#74       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputEnd:I\n-    #7 = String             #75           // Still have %d undecoded bytes, should not call \\'feedInput\\'\n-    #8 = Methodref          #76.#77       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-    #9 = Methodref          #24.#78       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #10 = Methodref          #70.#79       // java/nio/ByteBuffer.position:()I\n-   #11 = Methodref          #70.#80       // java/nio/ByteBuffer.limit:()I\n-   #12 = String             #81           // Input end (%d) may not be before start (%d)\n-   #13 = Methodref          #24.#82       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #14 = Fieldref           #24.#83       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._endOfInput:Z\n-   #15 = String             #84           // Already closed, can not feed more input\n-   #16 = Methodref          #24.#85       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;)V\n-   #17 = Fieldref           #24.#86       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currInputProcessed:J\n-   #18 = Fieldref           #24.#87       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._origBufferLen:I\n-   #19 = Fieldref           #24.#88       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currInputRowStart:I\n-   #20 = Fieldref           #24.#89       // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currBufferStart:I\n-   #21 = Methodref          #90.#91       // java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n-   #22 = InterfaceMethodref #92.#93       // java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I\n-   #23 = Methodref          #70.#94       // java/nio/ByteBuffer.get:(I)B\n-   #24 = Class              #95           // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n-   #25 = Class              #96           // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n-   #26 = Class              #97           // com/fasterxml/jackson/core/async/ByteBufferFeeder\n-   #27 = Utf8               _inputBuffer\n-   #28 = Utf8               Ljava/nio/ByteBuffer;\n-   #29 = Utf8               <init>\n-   #30 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #31 = Utf8               Code\n-   #32 = Utf8               LineNumberTable\n-   #33 = Utf8               LocalVariableTable\n-   #34 = Utf8               this\n-   #35 = Utf8               Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n-   #36 = Utf8               ctxt\n-   #37 = Utf8               Lcom/fasterxml/jackson/core/io/IOContext;\n-   #38 = Utf8               parserFeatures\n-   #39 = Utf8               I\n-   #40 = Utf8               sym\n-   #41 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #42 = Utf8               getNonBlockingInputFeeder\n-   #43 = Utf8               ()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;\n-   #44 = Utf8               feedInput\n-   #45 = Utf8               (Ljava/nio/ByteBuffer;)V\n-   #46 = Utf8               byteBuffer\n-   #47 = Utf8               start\n-   #48 = Utf8               end\n-   #49 = Utf8               StackMapTable\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #98           // java/io/IOException\n-   #52 = Utf8               releaseBuffered\n-   #53 = Utf8               (Ljava/io/OutputStream;)I\n-   #54 = Utf8               channel\n-   #55 = Utf8               Ljava/nio/channels/WritableByteChannel;\n-   #56 = Utf8               out\n-   #57 = Utf8               Ljava/io/OutputStream;\n-   #58 = Utf8               avail\n-   #59 = Utf8               getNextSignedByteFromBuffer\n-   #60 = Utf8               ()B\n-   #61 = Utf8               getNextUnsignedByteFromBuffer\n-   #62 = Utf8               ()I\n-   #63 = Utf8               getByteFromBuffer\n-   #64 = Utf8               (I)B\n-   #65 = Utf8               ptr\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               NonBlockingByteBufferJsonParser.java\n-   #68 = NameAndType        #29:#30       // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #69 = NameAndType        #99:#100      // NO_BYTES:[B\n-   #70 = Class              #101          // java/nio/ByteBuffer\n-   #71 = NameAndType        #102:#103     // wrap:([B)Ljava/nio/ByteBuffer;\n-   #72 = NameAndType        #27:#28       // _inputBuffer:Ljava/nio/ByteBuffer;\n-   #73 = NameAndType        #104:#39      // _inputPtr:I\n-   #74 = NameAndType        #105:#39      // _inputEnd:I\n-   #75 = Utf8               Still have %d undecoded bytes, should not call \\'feedInput\\'\n-   #76 = Class              #106          // java/lang/Integer\n-   #77 = NameAndType        #107:#108     // valueOf:(I)Ljava/lang/Integer;\n-   #78 = NameAndType        #109:#110     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #79 = NameAndType        #111:#62      // position:()I\n-   #80 = NameAndType        #112:#62      // limit:()I\n-   #81 = Utf8               Input end (%d) may not be before start (%d)\n-   #82 = NameAndType        #109:#113     // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #83 = NameAndType        #114:#115     // _endOfInput:Z\n-   #84 = Utf8               Already closed, can not feed more input\n-   #85 = NameAndType        #109:#116     // _reportError:(Ljava/lang/String;)V\n-   #86 = NameAndType        #117:#118     // _currInputProcessed:J\n-   #87 = NameAndType        #119:#39      // _origBufferLen:I\n-   #88 = NameAndType        #120:#39      // _currInputRowStart:I\n-   #89 = NameAndType        #121:#39      // _currBufferStart:I\n-   #90 = Class              #122          // java/nio/channels/Channels\n-   #91 = NameAndType        #123:#124     // newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n-   #92 = Class              #125          // java/nio/channels/WritableByteChannel\n-   #93 = NameAndType        #126:#127     // write:(Ljava/nio/ByteBuffer;)I\n-   #94 = NameAndType        #128:#64      // get:(I)B\n-   #95 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n-   #96 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n-   #97 = Utf8               com/fasterxml/jackson/core/async/ByteBufferFeeder\n-   #98 = Utf8               java/io/IOException\n-   #99 = Utf8               NO_BYTES\n-  #100 = Utf8               [B\n-  #101 = Utf8               java/nio/ByteBuffer\n-  #102 = Utf8               wrap\n-  #103 = Utf8               ([B)Ljava/nio/ByteBuffer;\n-  #104 = Utf8               _inputPtr\n-  #105 = Utf8               _inputEnd\n-  #106 = Utf8               java/lang/Integer\n-  #107 = Utf8               valueOf\n-  #108 = Utf8               (I)Ljava/lang/Integer;\n-  #109 = Utf8               _reportError\n-  #110 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #111 = Utf8               position\n-  #112 = Utf8               limit\n-  #113 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #114 = Utf8               _endOfInput\n-  #115 = Utf8               Z\n-  #116 = Utf8               (Ljava/lang/String;)V\n-  #117 = Utf8               _currInputProcessed\n-  #118 = Utf8               J\n-  #119 = Utf8               _origBufferLen\n-  #120 = Utf8               _currInputRowStart\n-  #121 = Utf8               _currBufferStart\n-  #122 = Utf8               java/nio/channels/Channels\n-  #123 = Utf8               newChannel\n-  #124 = Utf8               (Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n-  #125 = Utf8               java/nio/channels/WritableByteChannel\n-  #126 = Utf8               write\n-  #127 = Utf8               (Ljava/nio/ByteBuffer;)I\n-  #128 = Utf8               get\n+    #1 = Class              #2            // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n+    #2 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser\n+    #3 = Class              #4            // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+    #4 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+    #5 = Class              #6            // com/fasterxml/jackson/core/async/ByteBufferFeeder\n+    #6 = Utf8               com/fasterxml/jackson/core/async/ByteBufferFeeder\n+    #7 = Utf8               _inputBuffer\n+    #8 = Utf8               Ljava/nio/ByteBuffer;\n+    #9 = Utf8               <init>\n+   #10 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #11 = Utf8               Code\n+   #12 = Methodref          #3.#13        // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #13 = NameAndType        #9:#10        // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #14 = Fieldref           #1.#15        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser.NO_BYTES:[B\n+   #15 = NameAndType        #16:#17       // NO_BYTES:[B\n+   #16 = Utf8               NO_BYTES\n+   #17 = Utf8               [B\n+   #18 = Methodref          #19.#21       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n+   #19 = Class              #20           // java/nio/ByteBuffer\n+   #20 = Utf8               java/nio/ByteBuffer\n+   #21 = NameAndType        #22:#23       // wrap:([B)Ljava/nio/ByteBuffer;\n+   #22 = Utf8               wrap\n+   #23 = Utf8               ([B)Ljava/nio/ByteBuffer;\n+   #24 = Fieldref           #1.#25        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputBuffer:Ljava/nio/ByteBuffer;\n+   #25 = NameAndType        #7:#8         // _inputBuffer:Ljava/nio/ByteBuffer;\n+   #26 = Utf8               LineNumberTable\n+   #27 = Utf8               LocalVariableTable\n+   #28 = Utf8               this\n+   #29 = Utf8               Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n+   #30 = Utf8               ctxt\n+   #31 = Utf8               Lcom/fasterxml/jackson/core/io/IOContext;\n+   #32 = Utf8               parserFeatures\n+   #33 = Utf8               I\n+   #34 = Utf8               sym\n+   #35 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #36 = Utf8               getNonBlockingInputFeeder\n+   #37 = Utf8               ()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;\n+   #38 = Utf8               feedInput\n+   #39 = Utf8               (Ljava/nio/ByteBuffer;)V\n+   #40 = Utf8               Exceptions\n+   #41 = Class              #42           // java/io/IOException\n+   #42 = Utf8               java/io/IOException\n+   #43 = Fieldref           #1.#44        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputPtr:I\n+   #44 = NameAndType        #45:#33       // _inputPtr:I\n+   #45 = Utf8               _inputPtr\n+   #46 = Fieldref           #1.#47        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._inputEnd:I\n+   #47 = NameAndType        #48:#33       // _inputEnd:I\n+   #48 = Utf8               _inputEnd\n+   #49 = String             #50           // Still have %d undecoded bytes, should not call \\'feedInput\\'\n+   #50 = Utf8               Still have %d undecoded bytes, should not call \\'feedInput\\'\n+   #51 = Methodref          #52.#54       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #52 = Class              #53           // java/lang/Integer\n+   #53 = Utf8               java/lang/Integer\n+   #54 = NameAndType        #55:#56       // valueOf:(I)Ljava/lang/Integer;\n+   #55 = Utf8               valueOf\n+   #56 = Utf8               (I)Ljava/lang/Integer;\n+   #57 = Methodref          #1.#58        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #58 = NameAndType        #59:#60       // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #59 = Utf8               _reportError\n+   #60 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+   #61 = Methodref          #19.#62       // java/nio/ByteBuffer.position:()I\n+   #62 = NameAndType        #63:#64       // position:()I\n+   #63 = Utf8               position\n+   #64 = Utf8               ()I\n+   #65 = Methodref          #19.#66       // java/nio/ByteBuffer.limit:()I\n+   #66 = NameAndType        #67:#64       // limit:()I\n+   #67 = Utf8               limit\n+   #68 = String             #69           // Input end (%d) may not be before start (%d)\n+   #69 = Utf8               Input end (%d) may not be before start (%d)\n+   #70 = Methodref          #1.#71        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #71 = NameAndType        #59:#72       // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #72 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #73 = Fieldref           #1.#74        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._endOfInput:Z\n+   #74 = NameAndType        #75:#76       // _endOfInput:Z\n+   #75 = Utf8               _endOfInput\n+   #76 = Utf8               Z\n+   #77 = String             #78           // Already closed, can not feed more input\n+   #78 = Utf8               Already closed, can not feed more input\n+   #79 = Methodref          #1.#80        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._reportError:(Ljava/lang/String;)V\n+   #80 = NameAndType        #59:#81       // _reportError:(Ljava/lang/String;)V\n+   #81 = Utf8               (Ljava/lang/String;)V\n+   #82 = Fieldref           #1.#83        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currInputProcessed:J\n+   #83 = NameAndType        #84:#85       // _currInputProcessed:J\n+   #84 = Utf8               _currInputProcessed\n+   #85 = Utf8               J\n+   #86 = Fieldref           #1.#87        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._origBufferLen:I\n+   #87 = NameAndType        #88:#33       // _origBufferLen:I\n+   #88 = Utf8               _origBufferLen\n+   #89 = Fieldref           #1.#90        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currInputRowStart:I\n+   #90 = NameAndType        #91:#33       // _currInputRowStart:I\n+   #91 = Utf8               _currInputRowStart\n+   #92 = Fieldref           #1.#93        // com/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser._currBufferStart:I\n+   #93 = NameAndType        #94:#33       // _currBufferStart:I\n+   #94 = Utf8               _currBufferStart\n+   #95 = Utf8               byteBuffer\n+   #96 = Utf8               start\n+   #97 = Utf8               end\n+   #98 = Utf8               StackMapTable\n+   #99 = Utf8               releaseBuffered\n+  #100 = Utf8               (Ljava/io/OutputStream;)I\n+  #101 = Methodref          #102.#104     // java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n+  #102 = Class              #103          // java/nio/channels/Channels\n+  #103 = Utf8               java/nio/channels/Channels\n+  #104 = NameAndType        #105:#106     // newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n+  #105 = Utf8               newChannel\n+  #106 = Utf8               (Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n+  #107 = InterfaceMethodref #108.#110     // java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I\n+  #108 = Class              #109          // java/nio/channels/WritableByteChannel\n+  #109 = Utf8               java/nio/channels/WritableByteChannel\n+  #110 = NameAndType        #111:#112     // write:(Ljava/nio/ByteBuffer;)I\n+  #111 = Utf8               write\n+  #112 = Utf8               (Ljava/nio/ByteBuffer;)I\n+  #113 = Utf8               out\n+  #114 = Utf8               Ljava/io/OutputStream;\n+  #115 = Utf8               avail\n+  #116 = Utf8               channel\n+  #117 = Utf8               Ljava/nio/channels/WritableByteChannel;\n+  #118 = Utf8               getNextSignedByteFromBuffer\n+  #119 = Utf8               ()B\n+  #120 = Methodref          #19.#121      // java/nio/ByteBuffer.get:(I)B\n+  #121 = NameAndType        #122:#123     // get:(I)B\n+  #122 = Utf8               get\n+  #123 = Utf8               (I)B\n+  #124 = Utf8               getNextUnsignedByteFromBuffer\n+  #125 = Utf8               getByteFromBuffer\n+  #126 = Utf8               ptr\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               NonBlockingByteBufferJsonParser.java\n {\n   private java.nio.ByteBuffer _inputBuffer;\n     descriptor: Ljava/nio/ByteBuffer;\n     flags: (0x0002) ACC_PRIVATE\n \n   public com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer);\n     descriptor: (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n-         4: invokespecial #1                  // Method com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+         4: invokespecial #12                 // Method com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n          7: aload_0\n-         8: getstatic     #2                  // Field NO_BYTES:[B\n-        11: invokestatic  #3                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n-        14: putfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+         8: getstatic     #14                 // Field NO_BYTES:[B\n+        11: invokestatic  #18                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n+        14: putfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n         17: return\n       LineNumberTable:\n         line 31: 0\n         line 27: 7\n         line 32: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -179,86 +179,88 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n \n   public void feedInput(java.nio.ByteBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/ByteBuffer;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field _inputPtr:I\n+         1: getfield      #43                 // Field _inputPtr:I\n          4: aload_0\n-         5: getfield      #6                  // Field _inputEnd:I\n+         5: getfield      #46                 // Field _inputEnd:I\n          8: if_icmpge     29\n         11: aload_0\n-        12: ldc           #7                  // String Still have %d undecoded bytes, should not call \\'feedInput\\'\n+        12: ldc           #49                 // String Still have %d undecoded bytes, should not call \\'feedInput\\'\n         14: aload_0\n-        15: getfield      #6                  // Field _inputEnd:I\n+        15: getfield      #46                 // Field _inputEnd:I\n         18: aload_0\n-        19: getfield      #5                  // Field _inputPtr:I\n+        19: getfield      #43                 // Field _inputPtr:I\n         22: isub\n-        23: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        26: invokevirtual #9                  // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+        23: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        26: invokevirtual #57                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n         29: aload_1\n-        30: invokevirtual #10                 // Method java/nio/ByteBuffer.position:()I\n+        30: invokevirtual #61                 // Method java/nio/ByteBuffer.position:()I\n         33: istore_2\n         34: aload_1\n-        35: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:()I\n+        35: invokevirtual #65                 // Method java/nio/ByteBuffer.limit:()I\n         38: istore_3\n         39: iload_3\n         40: iload_2\n         41: if_icmpge     58\n         44: aload_0\n-        45: ldc           #12                 // String Input end (%d) may not be before start (%d)\n+        45: ldc           #68                 // String Input end (%d) may not be before start (%d)\n         47: iload_3\n-        48: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        48: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         51: iload_2\n-        52: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        55: invokevirtual #13                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+        52: invokestatic  #51                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        55: invokevirtual #70                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n         58: aload_0\n-        59: getfield      #14                 // Field _endOfInput:Z\n+        59: getfield      #73                 // Field _endOfInput:Z\n         62: ifeq          71\n         65: aload_0\n-        66: ldc           #15                 // String Already closed, can not feed more input\n-        68: invokevirtual #16                 // Method _reportError:(Ljava/lang/String;)V\n+        66: ldc           #77                 // String Already closed, can not feed more input\n+        68: invokevirtual #79                 // Method _reportError:(Ljava/lang/String;)V\n         71: aload_0\n         72: dup\n-        73: getfield      #17                 // Field _currInputProcessed:J\n+        73: getfield      #82                 // Field _currInputProcessed:J\n         76: aload_0\n-        77: getfield      #18                 // Field _origBufferLen:I\n+        77: getfield      #86                 // Field _origBufferLen:I\n         80: i2l\n         81: ladd\n-        82: putfield      #17                 // Field _currInputProcessed:J\n+        82: putfield      #82                 // Field _currInputProcessed:J\n         85: aload_0\n         86: iload_2\n         87: aload_0\n-        88: getfield      #6                  // Field _inputEnd:I\n+        88: getfield      #46                 // Field _inputEnd:I\n         91: aload_0\n-        92: getfield      #19                 // Field _currInputRowStart:I\n+        92: getfield      #89                 // Field _currInputRowStart:I\n         95: isub\n         96: isub\n-        97: putfield      #19                 // Field _currInputRowStart:I\n+        97: putfield      #89                 // Field _currInputRowStart:I\n        100: aload_0\n        101: iload_2\n-       102: putfield      #20                 // Field _currBufferStart:I\n+       102: putfield      #92                 // Field _currBufferStart:I\n        105: aload_0\n        106: aload_1\n-       107: putfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+       107: putfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n        110: aload_0\n        111: iload_2\n-       112: putfield      #5                  // Field _inputPtr:I\n+       112: putfield      #43                 // Field _inputPtr:I\n        115: aload_0\n        116: iload_3\n-       117: putfield      #6                  // Field _inputEnd:I\n+       117: putfield      #46                 // Field _inputEnd:I\n        120: aload_0\n        121: iload_3\n        122: iload_2\n        123: isub\n-       124: putfield      #18                 // Field _origBufferLen:I\n+       124: putfield      #86                 // Field _origBufferLen:I\n        127: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 11\n         line 46: 29\n         line 47: 34\n         line 49: 39\n@@ -281,96 +283,94 @@\n            39      89     3   end   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 29 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 28\n           locals = [ int, int ]\n         frame_type = 12 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field _inputEnd:I\n+         1: getfield      #46                 // Field _inputEnd:I\n          4: aload_0\n-         5: getfield      #5                  // Field _inputPtr:I\n+         5: getfield      #43                 // Field _inputPtr:I\n          8: isub\n          9: istore_2\n         10: iload_2\n         11: ifle          30\n         14: aload_1\n-        15: invokestatic  #21                 // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n+        15: invokestatic  #101                // Method java/nio/channels/Channels.newChannel:(Ljava/io/OutputStream;)Ljava/nio/channels/WritableByteChannel;\n         18: astore_3\n         19: aload_3\n         20: aload_0\n-        21: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n-        24: invokeinterface #22,  2           // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I\n+        21: getfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+        24: invokeinterface #107,  2          // InterfaceMethod java/nio/channels/WritableByteChannel.write:(Ljava/nio/ByteBuffer;)I\n         29: pop\n         30: iload_2\n         31: ireturn\n       LineNumberTable:\n         line 72: 0\n         line 73: 10\n         line 74: 14\n         line 75: 19\n         line 77: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           19      11     3 channel   Ljava/nio/channels/WritableByteChannel;\n             0      32     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n             0      32     1   out   Ljava/io/OutputStream;\n            10      22     2 avail   I\n+           19      11     3 channel   Ljava/nio/channels/WritableByteChannel;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected byte getNextSignedByteFromBuffer();\n     descriptor: ()B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+         1: getfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n          4: aload_0\n          5: dup\n-         6: getfield      #5                  // Field _inputPtr:I\n+         6: getfield      #43                 // Field _inputPtr:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #5                  // Field _inputPtr:I\n-        15: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B\n+        12: putfield      #43                 // Field _inputPtr:I\n+        15: invokevirtual #120                // Method java/nio/ByteBuffer.get:(I)B\n         18: ireturn\n       LineNumberTable:\n         line 82: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n \n   protected int getNextUnsignedByteFromBuffer();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+         1: getfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n          4: aload_0\n          5: dup\n-         6: getfield      #5                  // Field _inputPtr:I\n+         6: getfield      #43                 // Field _inputPtr:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #5                  // Field _inputPtr:I\n-        15: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B\n+        12: putfield      #43                 // Field _inputPtr:I\n+        15: invokevirtual #120                // Method java/nio/ByteBuffer.get:(I)B\n         18: sipush        255\n         21: iand\n         22: ireturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -378,17 +378,17 @@\n \n   protected byte getByteFromBuffer(int);\n     descriptor: (I)B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field _inputBuffer:Ljava/nio/ByteBuffer;\n+         1: getfield      #24                 // Field _inputBuffer:Ljava/nio/ByteBuffer;\n          4: iload_1\n-         5: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B\n+         5: invokevirtual #120                // Method java/nio/ByteBuffer.get:(I)B\n          8: ireturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingByteBufferJsonParser;\n             0       9     1   ptr   I\n"}]}
