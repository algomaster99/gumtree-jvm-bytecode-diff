{"diffoscope-json-version": 1, "source1": "first/Counters$Counter.class", "source2": "second/Counters$Counter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,40 @@\n-  SHA-256 checksum 37227b8dcb49c7d85119ac59467a27f9923d8ac98d25e47fc3998f5c138451ae\n+  SHA-256 checksum 8880a471029abb4d2c3e3e2ac869fa3dfb3fa1a1930df9b65d49a5ce8da1a0ed\n   Compiled from \"Counters.java\"\n public interface org.apache.commons.io.file.Counters$Counter\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/io/file/Counters$Counter\n   super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 6, attributes: 2\n Constant pool:\n-   #1 = Class              #24            // org/apache/commons/io/file/Counters$Counter\n-   #2 = Class              #25            // java/lang/Object\n+   #1 = Class              #19            // org/apache/commons/io/file/Counters$Counter\n+   #2 = Class              #22            // java/lang/Object\n    #3 = Utf8               add\n    #4 = Utf8               (J)V\n    #5 = Utf8               get\n    #6 = Utf8               ()J\n    #7 = Utf8               getBigInteger\n    #8 = Utf8               ()Ljava/math/BigInteger;\n    #9 = Utf8               getLong\n   #10 = Utf8               ()Ljava/lang/Long;\n   #11 = Utf8               increment\n   #12 = Utf8               ()V\n   #13 = Utf8               reset\n   #14 = Utf8               Code\n   #15 = Utf8               LineNumberTable\n-  #16 = Utf8               LocalVariableTable\n-  #17 = Utf8               this\n-  #18 = Utf8               Counter\n-  #19 = Utf8               InnerClasses\n-  #20 = Utf8               Lorg/apache/commons/io/file/Counters$Counter;\n-  #21 = Utf8               SourceFile\n-  #22 = Utf8               Counters.java\n-  #23 = Class              #26            // org/apache/commons/io/file/Counters\n-  #24 = Utf8               org/apache/commons/io/file/Counters$Counter\n-  #25 = Utf8               java/lang/Object\n-  #26 = Utf8               org/apache/commons/io/file/Counters\n+  #16 = Utf8               SourceFile\n+  #17 = Utf8               Counters.java\n+  #18 = Class              #23            // org/apache/commons/io/file/Counters\n+  #19 = Utf8               org/apache/commons/io/file/Counters$Counter\n+  #20 = Utf8               Counter\n+  #21 = Utf8               InnerClasses\n+  #22 = Utf8               java/lang/Object\n+  #23 = Utf8               org/apache/commons/io/file/Counters\n {\n   public abstract void add(long);\n     descriptor: (J)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract long get();\n     descriptor: ()J\n@@ -59,14 +56,11 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 224: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       1     0  this   Lorg/apache/commons/io/file/Counters$Counter;\n }\n SourceFile: \"Counters.java\"\n InnerClasses:\n-  public static #18= #1 of #23;           // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  public static #20= #1 of #18;           // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n"}]}
