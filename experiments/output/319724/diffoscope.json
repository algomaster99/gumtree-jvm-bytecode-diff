{"diffoscope-json-version": 1, "source1": "first/FastFloatMath.class", "source2": "second/FastFloatMath.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,173 +1,173 @@\n-  SHA-256 checksum 95217b1719cb966ad2ddfcc33a7d8faa2b709e80a7c4d2a8402858f88f0a2b13\n+  SHA-256 checksum c4e6efc3a903d0893ac42188a2434361f74fce294c3f7d3db5abb0493d9733e3\n   Compiled from \"FastFloatMath.java\"\n class com.fasterxml.jackson.core.io.doubleparser.FastFloatMath\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #5                          // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n-  super_class: #61                        // java/lang/Object\n+  this_class: #12                         // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n+  super_class: #6                         // java/lang/Object\n   interfaces: 0, fields: 7, methods: 6, attributes: 2\n Constant pool:\n-    #1 = Class              #127          // java/lang/Float\n-    #2 = Class              #128          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n-    #3 = Methodref          #61.#129      // java/lang/Object.\"<init>\":()V\n-    #4 = Float              -0.0f\n-    #5 = Class              #130          // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n-    #6 = Methodref          #5.#131       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.tryDecToFloatWithFastAlgorithm:(ZJI)F\n-    #7 = Methodref          #1.#132       // java/lang/Float.isNaN:(F)Z\n-    #8 = Float              NaNf\n-    #9 = Methodref          #5.#133       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.tryHexToFloatWithFastAlgorithm:(ZJI)F\n-   #10 = Methodref          #134.#135     // java/lang/Double.isNaN:(D)Z\n-   #11 = Long               16777215l\n-   #13 = Methodref          #136.#137     // java/lang/Long.compareUnsigned:(JJ)I\n-   #14 = Fieldref           #5.#138       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.FLOAT_POWER_OF_TEN:[F\n-   #15 = Fieldref           #2.#139       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_64:[J\n-   #16 = Long               217706l\n-   #18 = Long               127l\n-   #20 = Long               64l\n-   #22 = Methodref          #136.#140     // java/lang/Long.numberOfLeadingZeros:(J)I\n-   #23 = Methodref          #2.#141       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n-   #24 = Fieldref           #113.#142     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n-   #25 = Fieldref           #113.#143     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n-   #26 = Long               274877906943l\n-   #28 = Fieldref           #2.#144       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_128:[J\n-   #29 = Long               549755813887l\n-   #31 = Long               38l\n-   #33 = Long               3l\n-   #35 = Long               16777216l\n-   #37 = Long               8388608l\n-   #39 = Long               -8388609l\n-   #41 = Long               254l\n-   #43 = Long               2147483648l\n-   #45 = Methodref          #1.#145       // java/lang/Float.intBitsToFloat:(I)F\n-   #46 = Float              -Infinityf\n-   #47 = Float              Infinityf\n-   #48 = Long               9007199254740991l\n-   #50 = Methodref          #146.#147     // java/lang/Math.scalb:(FI)F\n-   #51 = Float              10.0f\n-   #52 = Float              100.0f\n-   #53 = Float              1000.0f\n-   #54 = Float              10000.0f\n-   #55 = Float              100000.0f\n-   #56 = Float              1000000.0f\n-   #57 = Float              1.0E7f\n-   #58 = Float              1.0E8f\n-   #59 = Float              1.0E9f\n-   #60 = Float              1.0E10f\n-   #61 = Class              #148          // java/lang/Object\n-   #62 = Utf8               FLOAT_EXPONENT_BIAS\n-   #63 = Utf8               I\n-   #64 = Utf8               ConstantValue\n-   #65 = Integer            127\n-   #66 = Utf8               FLOAT_SIGNIFICAND_WIDTH\n-   #67 = Integer            24\n-   #68 = Utf8               FLOAT_MIN_EXPONENT_POWER_OF_TEN\n-   #69 = Integer            -45\n-   #70 = Utf8               FLOAT_MAX_EXPONENT_POWER_OF_TEN\n-   #71 = Integer            38\n-   #72 = Utf8               FLOAT_MIN_EXPONENT_POWER_OF_TWO\n-   #73 = Integer            -126\n-   #74 = Utf8               FLOAT_MAX_EXPONENT_POWER_OF_TWO\n-   #75 = Utf8               FLOAT_POWER_OF_TEN\n-   #76 = Utf8               [F\n-   #77 = Utf8               <init>\n-   #78 = Utf8               ()V\n-   #79 = Utf8               Code\n-   #80 = Utf8               LineNumberTable\n-   #81 = Utf8               LocalVariableTable\n-   #82 = Utf8               this\n-   #83 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastFloatMath;\n-   #84 = Utf8               decFloatLiteralToFloat\n-   #85 = Utf8               (ZJIZI)F\n-   #86 = Utf8               withoutRounding\n-   #87 = Utf8               F\n-   #88 = Utf8               roundedUp\n-   #89 = Utf8               result\n-   #90 = Utf8               isNegative\n-   #91 = Utf8               Z\n-   #92 = Utf8               significand\n-   #93 = Utf8               J\n-   #94 = Utf8               exponent\n-   #95 = Utf8               isSignificandTruncated\n-   #96 = Utf8               exponentOfTruncatedSignificand\n-   #97 = Utf8               StackMapTable\n-   #98 = Utf8               hexFloatLiteralToFloat\n-   #99 = Utf8               tryDecToFloatWithFastAlgorithm\n-  #100 = Utf8               (ZJI)F\n-  #101 = Utf8               d\n-  #102 = Utf8               factor_mantissa_low\n-  #103 = Utf8               product_low\n-  #104 = Utf8               product_middle2\n-  #105 = Utf8               product_middle1\n-  #106 = Utf8               product_high\n-  #107 = Utf8               product_middle\n-  #108 = Utf8               digits\n-  #109 = Utf8               power\n-  #110 = Utf8               factorMantissa\n-  #111 = Utf8               lz\n-  #112 = Utf8               product\n-  #113 = Class              #149          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128\n-  #114 = Utf8               UInt128\n-  #115 = Utf8               InnerClasses\n-  #116 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n-  #117 = Utf8               lower\n-  #118 = Utf8               upper\n-  #119 = Utf8               upperbit\n-  #120 = Utf8               mantissa\n-  #121 = Utf8               real_exponent\n-  #122 = Utf8               bits\n-  #123 = Utf8               tryHexToFloatWithFastAlgorithm\n-  #124 = Utf8               <clinit>\n-  #125 = Utf8               SourceFile\n-  #126 = Utf8               FastFloatMath.java\n-  #127 = Utf8               java/lang/Float\n-  #128 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n-  #129 = NameAndType        #77:#78       // \"<init>\":()V\n-  #130 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n-  #131 = NameAndType        #99:#100      // tryDecToFloatWithFastAlgorithm:(ZJI)F\n-  #132 = NameAndType        #150:#151     // isNaN:(F)Z\n-  #133 = NameAndType        #123:#100     // tryHexToFloatWithFastAlgorithm:(ZJI)F\n-  #134 = Class              #152          // java/lang/Double\n-  #135 = NameAndType        #150:#153     // isNaN:(D)Z\n-  #136 = Class              #154          // java/lang/Long\n-  #137 = NameAndType        #155:#156     // compareUnsigned:(JJ)I\n-  #138 = NameAndType        #75:#76       // FLOAT_POWER_OF_TEN:[F\n-  #139 = NameAndType        #157:#158     // MANTISSA_64:[J\n-  #140 = NameAndType        #159:#160     // numberOfLeadingZeros:(J)I\n-  #141 = NameAndType        #161:#162     // fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n-  #142 = NameAndType        #163:#93      // low:J\n-  #143 = NameAndType        #164:#93      // high:J\n-  #144 = NameAndType        #165:#158     // MANTISSA_128:[J\n-  #145 = NameAndType        #166:#167     // intBitsToFloat:(I)F\n-  #146 = Class              #168          // java/lang/Math\n-  #147 = NameAndType        #169:#170     // scalb:(FI)F\n-  #148 = Utf8               java/lang/Object\n-  #149 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128\n-  #150 = Utf8               isNaN\n-  #151 = Utf8               (F)Z\n-  #152 = Utf8               java/lang/Double\n-  #153 = Utf8               (D)Z\n-  #154 = Utf8               java/lang/Long\n-  #155 = Utf8               compareUnsigned\n-  #156 = Utf8               (JJ)I\n-  #157 = Utf8               MANTISSA_64\n-  #158 = Utf8               [J\n-  #159 = Utf8               numberOfLeadingZeros\n-  #160 = Utf8               (J)I\n-  #161 = Utf8               fullMultiplication\n-  #162 = Utf8               (JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n-  #163 = Utf8               low\n-  #164 = Utf8               high\n-  #165 = Utf8               MANTISSA_128\n-  #166 = Utf8               intBitsToFloat\n-  #167 = Utf8               (I)F\n-  #168 = Utf8               java/lang/Math\n-  #169 = Utf8               scalb\n-  #170 = Utf8               (FI)F\n+    #1 = Class              #2            // java/lang/Float\n+    #2 = Utf8               java/lang/Float\n+    #3 = Class              #4            // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n+    #4 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n+    #5 = Methodref          #6.#7         // java/lang/Object.\"<init>\":()V\n+    #6 = Class              #8            // java/lang/Object\n+    #7 = NameAndType        #9:#10        // \"<init>\":()V\n+    #8 = Utf8               java/lang/Object\n+    #9 = Utf8               <init>\n+   #10 = Utf8               ()V\n+   #11 = Float              -0.0f\n+   #12 = Class              #13           // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n+   #13 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n+   #14 = Methodref          #12.#15       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.tryDecToFloatWithFastAlgorithm:(ZJI)F\n+   #15 = NameAndType        #16:#17       // tryDecToFloatWithFastAlgorithm:(ZJI)F\n+   #16 = Utf8               tryDecToFloatWithFastAlgorithm\n+   #17 = Utf8               (ZJI)F\n+   #18 = Methodref          #1.#19        // java/lang/Float.isNaN:(F)Z\n+   #19 = NameAndType        #20:#21       // isNaN:(F)Z\n+   #20 = Utf8               isNaN\n+   #21 = Utf8               (F)Z\n+   #22 = Float              NaNf\n+   #23 = Methodref          #12.#24       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.tryHexToFloatWithFastAlgorithm:(ZJI)F\n+   #24 = NameAndType        #25:#17       // tryHexToFloatWithFastAlgorithm:(ZJI)F\n+   #25 = Utf8               tryHexToFloatWithFastAlgorithm\n+   #26 = Methodref          #27.#28       // java/lang/Double.isNaN:(D)Z\n+   #27 = Class              #29           // java/lang/Double\n+   #28 = NameAndType        #20:#30       // isNaN:(D)Z\n+   #29 = Utf8               java/lang/Double\n+   #30 = Utf8               (D)Z\n+   #31 = Long               16777215l\n+   #33 = Methodref          #34.#35       // java/lang/Long.compareUnsigned:(JJ)I\n+   #34 = Class              #36           // java/lang/Long\n+   #35 = NameAndType        #37:#38       // compareUnsigned:(JJ)I\n+   #36 = Utf8               java/lang/Long\n+   #37 = Utf8               compareUnsigned\n+   #38 = Utf8               (JJ)I\n+   #39 = Fieldref           #12.#40       // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.FLOAT_POWER_OF_TEN:[F\n+   #40 = NameAndType        #41:#42       // FLOAT_POWER_OF_TEN:[F\n+   #41 = Utf8               FLOAT_POWER_OF_TEN\n+   #42 = Utf8               [F\n+   #43 = Fieldref           #3.#44        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_64:[J\n+   #44 = NameAndType        #45:#46       // MANTISSA_64:[J\n+   #45 = Utf8               MANTISSA_64\n+   #46 = Utf8               [J\n+   #47 = Long               217706l\n+   #49 = Long               127l\n+   #51 = Long               64l\n+   #53 = Methodref          #34.#54       // java/lang/Long.numberOfLeadingZeros:(J)I\n+   #54 = NameAndType        #55:#56       // numberOfLeadingZeros:(J)I\n+   #55 = Utf8               numberOfLeadingZeros\n+   #56 = Utf8               (J)I\n+   #57 = Methodref          #3.#58        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+   #58 = NameAndType        #59:#60       // fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+   #59 = Utf8               fullMultiplication\n+   #60 = Utf8               (JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+   #61 = Fieldref           #62.#63       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n+   #62 = Class              #64           // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128\n+   #63 = NameAndType        #65:#66       // low:J\n+   #64 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128\n+   #65 = Utf8               low\n+   #66 = Utf8               J\n+   #67 = Fieldref           #62.#68       // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n+   #68 = NameAndType        #69:#66       // high:J\n+   #69 = Utf8               high\n+   #70 = Long               274877906943l\n+   #72 = Fieldref           #3.#73        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_128:[J\n+   #73 = NameAndType        #74:#46       // MANTISSA_128:[J\n+   #74 = Utf8               MANTISSA_128\n+   #75 = Long               549755813887l\n+   #77 = Long               38l\n+   #79 = Long               3l\n+   #81 = Long               16777216l\n+   #83 = Long               8388608l\n+   #85 = Long               -8388609l\n+   #87 = Long               254l\n+   #89 = Long               2147483648l\n+   #91 = Methodref          #1.#92        // java/lang/Float.intBitsToFloat:(I)F\n+   #92 = NameAndType        #93:#94       // intBitsToFloat:(I)F\n+   #93 = Utf8               intBitsToFloat\n+   #94 = Utf8               (I)F\n+   #95 = Float              -Infinityf\n+   #96 = Float              Infinityf\n+   #97 = Long               9007199254740991l\n+   #99 = Methodref          #100.#101     // java/lang/Math.scalb:(FI)F\n+  #100 = Class              #102          // java/lang/Math\n+  #101 = NameAndType        #103:#104     // scalb:(FI)F\n+  #102 = Utf8               java/lang/Math\n+  #103 = Utf8               scalb\n+  #104 = Utf8               (FI)F\n+  #105 = Float              10.0f\n+  #106 = Float              100.0f\n+  #107 = Float              1000.0f\n+  #108 = Float              10000.0f\n+  #109 = Float              100000.0f\n+  #110 = Float              1000000.0f\n+  #111 = Float              1.0E7f\n+  #112 = Float              1.0E8f\n+  #113 = Float              1.0E9f\n+  #114 = Float              1.0E10f\n+  #115 = Utf8               FLOAT_EXPONENT_BIAS\n+  #116 = Utf8               I\n+  #117 = Utf8               ConstantValue\n+  #118 = Integer            127\n+  #119 = Utf8               FLOAT_SIGNIFICAND_WIDTH\n+  #120 = Integer            24\n+  #121 = Utf8               FLOAT_MIN_EXPONENT_POWER_OF_TEN\n+  #122 = Integer            -45\n+  #123 = Utf8               FLOAT_MAX_EXPONENT_POWER_OF_TEN\n+  #124 = Integer            38\n+  #125 = Utf8               FLOAT_MIN_EXPONENT_POWER_OF_TWO\n+  #126 = Integer            -126\n+  #127 = Utf8               FLOAT_MAX_EXPONENT_POWER_OF_TWO\n+  #128 = Utf8               Code\n+  #129 = Utf8               LineNumberTable\n+  #130 = Utf8               LocalVariableTable\n+  #131 = Utf8               this\n+  #132 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastFloatMath;\n+  #133 = Utf8               decFloatLiteralToFloat\n+  #134 = Utf8               (ZJIZI)F\n+  #135 = Utf8               withoutRounding\n+  #136 = Utf8               F\n+  #137 = Utf8               roundedUp\n+  #138 = Utf8               result\n+  #139 = Utf8               isNegative\n+  #140 = Utf8               Z\n+  #141 = Utf8               significand\n+  #142 = Utf8               exponent\n+  #143 = Utf8               isSignificandTruncated\n+  #144 = Utf8               exponentOfTruncatedSignificand\n+  #145 = Utf8               StackMapTable\n+  #146 = Utf8               hexFloatLiteralToFloat\n+  #147 = Utf8               d\n+  #148 = Utf8               factor_mantissa_low\n+  #149 = Utf8               product_low\n+  #150 = Utf8               product_middle2\n+  #151 = Utf8               product_middle1\n+  #152 = Utf8               product_high\n+  #153 = Utf8               product_middle\n+  #154 = Utf8               digits\n+  #155 = Utf8               power\n+  #156 = Utf8               factorMantissa\n+  #157 = Utf8               lz\n+  #158 = Utf8               product\n+  #159 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+  #160 = Utf8               lower\n+  #161 = Utf8               upper\n+  #162 = Utf8               upperbit\n+  #163 = Utf8               mantissa\n+  #164 = Utf8               real_exponent\n+  #165 = Utf8               bits\n+  #166 = Utf8               <clinit>\n+  #167 = Utf8               SourceFile\n+  #168 = Utf8               FastFloatMath.java\n+  #169 = Utf8               InnerClasses\n+  #170 = Utf8               UInt128\n {\n   private static final int FLOAT_EXPONENT_BIAS = 127;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 127\n \n   private static final int FLOAT_SIGNIFICAND_WIDTH = 24;\n@@ -201,15 +201,15 @@\n \n   private com.fasterxml.jackson.core.io.doubleparser.FastFloatMath();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 47: 0\n         line 49: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/io/doubleparser/FastFloatMath;\n@@ -221,63 +221,63 @@\n       stack=5, locals=9, args_size=5\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifne          17\n          6: iload_0\n          7: ifeq          15\n-        10: ldc           #4                  // float -0.0f\n+        10: ldc           #11                 // float -0.0f\n         12: goto          16\n         15: fconst_0\n         16: freturn\n         17: iload         4\n         19: ifeq          82\n         22: bipush        -45\n         24: iload         5\n         26: if_icmpgt     75\n         29: iload         5\n         31: bipush        38\n         33: if_icmpgt     75\n         36: iload_0\n         37: lload_1\n         38: iload         5\n-        40: invokestatic  #6                  // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n+        40: invokestatic  #14                 // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n         43: fstore        7\n         45: iload_0\n         46: lload_1\n         47: lconst_1\n         48: ladd\n         49: iload         5\n-        51: invokestatic  #6                  // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n+        51: invokestatic  #14                 // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n         54: fstore        8\n         56: fload         7\n-        58: invokestatic  #7                  // Method java/lang/Float.isNaN:(F)Z\n+        58: invokestatic  #18                 // Method java/lang/Float.isNaN:(F)Z\n         61: ifne          75\n         64: fload         8\n         66: fload         7\n         68: fcmpl\n         69: ifne          75\n         72: fload         7\n         74: freturn\n-        75: ldc           #8                  // float NaNf\n+        75: ldc           #22                 // float NaNf\n         77: fstore        6\n         79: goto          109\n         82: bipush        -45\n         84: iload_3\n         85: if_icmpgt     105\n         88: iload_3\n         89: bipush        38\n         91: if_icmpgt     105\n         94: iload_0\n         95: lload_1\n         96: iload_3\n-        97: invokestatic  #6                  // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n+        97: invokestatic  #14                 // Method tryDecToFloatWithFastAlgorithm:(ZJI)F\n        100: fstore        6\n        102: goto          109\n-       105: ldc           #8                  // float NaNf\n+       105: ldc           #22                 // float NaNf\n        107: fstore        6\n        109: fload         6\n        111: freturn\n       LineNumberTable:\n         line 54: 0\n         line 55: 6\n         line 59: 17\n@@ -322,64 +322,64 @@\n       stack=5, locals=9, args_size=5\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifne          17\n          6: iload_0\n          7: ifeq          15\n-        10: ldc           #4                  // float -0.0f\n+        10: ldc           #11                 // float -0.0f\n         12: goto          16\n         15: fconst_0\n         16: freturn\n         17: iload         4\n         19: ifeq          83\n         22: bipush        -126\n         24: iload         5\n         26: if_icmpgt     76\n         29: iload         5\n         31: bipush        127\n         33: if_icmpgt     76\n         36: iload_0\n         37: lload_1\n         38: iload         5\n-        40: invokestatic  #9                  // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n+        40: invokestatic  #23                 // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n         43: fstore        7\n         45: iload_0\n         46: lload_1\n         47: lconst_1\n         48: ladd\n         49: iload         5\n-        51: invokestatic  #9                  // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n+        51: invokestatic  #23                 // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n         54: fstore        8\n         56: fload         7\n         58: f2d\n-        59: invokestatic  #10                 // Method java/lang/Double.isNaN:(D)Z\n+        59: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z\n         62: ifne          76\n         65: fload         8\n         67: fload         7\n         69: fcmpl\n         70: ifne          76\n         73: fload         7\n         75: freturn\n-        76: ldc           #8                  // float NaNf\n+        76: ldc           #22                 // float NaNf\n         78: fstore        6\n         80: goto          110\n         83: bipush        -126\n         85: iload_3\n         86: if_icmpgt     106\n         89: iload_3\n         90: bipush        127\n         92: if_icmpgt     106\n         95: iload_0\n         96: lload_1\n         97: iload_3\n-        98: invokestatic  #9                  // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n+        98: invokestatic  #23                 // Method tryHexToFloatWithFastAlgorithm:(ZJI)F\n        101: fstore        6\n        103: goto          110\n-       106: ldc           #8                  // float NaNf\n+       106: ldc           #22                 // float NaNf\n        108: fstore        6\n        110: fload         6\n        112: freturn\n       LineNumberTable:\n         line 90: 0\n         line 91: 6\n         line 94: 17\n@@ -425,233 +425,233 @@\n          0: bipush        -10\n          2: iload_3\n          3: if_icmpgt     67\n          6: iload_3\n          7: bipush        10\n          9: if_icmpgt     67\n         12: lload_1\n-        13: ldc2_w        #11                 // long 16777215l\n-        16: invokestatic  #13                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+        13: ldc2_w        #31                 // long 16777215l\n+        16: invokestatic  #33                 // Method java/lang/Long.compareUnsigned:(JJ)I\n         19: ifgt          67\n         22: lload_1\n         23: l2f\n         24: fstore        4\n         26: iload_3\n         27: ifge          44\n         30: fload         4\n-        32: getstatic     #14                 // Field FLOAT_POWER_OF_TEN:[F\n+        32: getstatic     #39                 // Field FLOAT_POWER_OF_TEN:[F\n         35: iload_3\n         36: ineg\n         37: faload\n         38: fdiv\n         39: fstore        4\n         41: goto          54\n         44: fload         4\n-        46: getstatic     #14                 // Field FLOAT_POWER_OF_TEN:[F\n+        46: getstatic     #39                 // Field FLOAT_POWER_OF_TEN:[F\n         49: iload_3\n         50: faload\n         51: fmul\n         52: fstore        4\n         54: iload_0\n         55: ifeq          64\n         58: fload         4\n         60: fneg\n         61: goto          66\n         64: fload         4\n         66: freturn\n-        67: getstatic     #15                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_64:[J\n+        67: getstatic     #43                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_64:[J\n         70: iload_3\n         71: sipush        -325\n         74: isub\n         75: laload\n         76: lstore        4\n-        78: ldc2_w        #16                 // long 217706l\n+        78: ldc2_w        #47                 // long 217706l\n         81: iload_3\n         82: i2l\n         83: lmul\n         84: bipush        16\n         86: lshr\n-        87: ldc2_w        #18                 // long 127l\n+        87: ldc2_w        #49                 // long 127l\n         90: ladd\n-        91: ldc2_w        #20                 // long 64l\n+        91: ldc2_w        #51                 // long 64l\n         94: ladd\n         95: lstore        6\n         97: lload_1\n-        98: invokestatic  #22                 // Method java/lang/Long.numberOfLeadingZeros:(J)I\n+        98: invokestatic  #53                 // Method java/lang/Long.numberOfLeadingZeros:(J)I\n        101: istore        8\n        103: lload_1\n        104: iload         8\n        106: lshl\n        107: lstore_1\n        108: lload_1\n        109: lload         4\n-       111: invokestatic  #23                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+       111: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n        114: astore        9\n        116: aload         9\n-       118: getfield      #24                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n+       118: getfield      #61                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n        121: lstore        10\n        123: aload         9\n-       125: getfield      #25                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n+       125: getfield      #67                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n        128: lstore        12\n        130: lload         12\n-       132: ldc2_w        #26                 // long 274877906943l\n+       132: ldc2_w        #70                 // long 274877906943l\n        135: land\n-       136: ldc2_w        #26                 // long 274877906943l\n+       136: ldc2_w        #70                 // long 274877906943l\n        139: lcmp\n        140: ifne          263\n        143: lload         10\n        145: lload_1\n        146: ladd\n        147: lload         10\n-       149: invokestatic  #13                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+       149: invokestatic  #33                 // Method java/lang/Long.compareUnsigned:(JJ)I\n        152: ifge          263\n-       155: getstatic     #28                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_128:[J\n+       155: getstatic     #72                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.MANTISSA_128:[J\n        158: iload_3\n        159: sipush        -325\n        162: isub\n        163: laload\n        164: lstore        14\n        166: lload_1\n        167: lload         14\n-       169: invokestatic  #23                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n+       169: invokestatic  #57                 // Method com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath.fullMultiplication:(JJ)Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128;\n        172: astore        9\n        174: aload         9\n-       176: getfield      #24                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n+       176: getfield      #61                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.low:J\n        179: lstore        16\n        181: aload         9\n-       183: getfield      #25                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n+       183: getfield      #67                 // Field com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128.high:J\n        186: lstore        18\n        188: lload         10\n        190: lstore        20\n        192: lload         12\n        194: lstore        22\n        196: lload         20\n        198: lload         18\n        200: ladd\n        201: lstore        24\n        203: lload         24\n        205: lload         20\n-       207: invokestatic  #13                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+       207: invokestatic  #33                 // Method java/lang/Long.compareUnsigned:(JJ)I\n        210: ifge          219\n        213: lload         22\n        215: lconst_1\n        216: ladd\n        217: lstore        22\n        219: lload         24\n        221: lconst_1\n        222: ladd\n        223: lconst_0\n        224: lcmp\n        225: ifne          259\n        228: lload         22\n-       230: ldc2_w        #29                 // long 549755813887l\n+       230: ldc2_w        #75                 // long 549755813887l\n        233: land\n-       234: ldc2_w        #29                 // long 549755813887l\n+       234: ldc2_w        #75                 // long 549755813887l\n        237: lcmp\n        238: ifne          259\n        241: lload         16\n        243: lload_1\n        244: lload         16\n-       246: invokestatic  #13                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+       246: invokestatic  #33                 // Method java/lang/Long.compareUnsigned:(JJ)I\n        249: i2l\n        250: ladd\n        251: lconst_0\n        252: lcmp\n        253: ifge          259\n-       256: ldc           #8                  // float NaNf\n+       256: ldc           #22                 // float NaNf\n        258: freturn\n        259: lload         22\n        261: lstore        12\n        263: lload         12\n        265: bipush        63\n        267: lushr\n        268: lstore        14\n        270: lload         12\n        272: lload         14\n-       274: ldc2_w        #31                 // long 38l\n+       274: ldc2_w        #77                 // long 38l\n        277: ladd\n        278: l2i\n        279: lushr\n        280: lstore        16\n        282: iload         8\n        284: lconst_1\n        285: lload         14\n        287: lxor\n        288: l2i\n        289: iadd\n        290: istore        8\n        292: lload         12\n-       294: ldc2_w        #26                 // long 274877906943l\n+       294: ldc2_w        #70                 // long 274877906943l\n        297: land\n-       298: ldc2_w        #26                 // long 274877906943l\n+       298: ldc2_w        #70                 // long 274877906943l\n        301: lcmp\n        302: ifeq          327\n        305: lload         12\n-       307: ldc2_w        #26                 // long 274877906943l\n+       307: ldc2_w        #70                 // long 274877906943l\n        310: land\n        311: lconst_0\n        312: lcmp\n        313: ifne          330\n        316: lload         16\n-       318: ldc2_w        #33                 // long 3l\n+       318: ldc2_w        #79                 // long 3l\n        321: land\n        322: lconst_1\n        323: lcmp\n        324: ifne          330\n-       327: ldc           #8                  // float NaNf\n+       327: ldc           #22                 // float NaNf\n        329: freturn\n        330: lload         16\n        332: lconst_1\n        333: ladd\n        334: lstore        16\n        336: lload         16\n        338: iconst_1\n        339: lushr\n        340: lstore        16\n        342: lload         16\n-       344: ldc2_w        #35                 // long 16777216l\n+       344: ldc2_w        #81                 // long 16777216l\n        347: lcmp\n        348: iflt          359\n-       351: ldc2_w        #37                 // long 8388608l\n+       351: ldc2_w        #83                 // long 8388608l\n        354: lstore        16\n        356: iinc          8, -1\n        359: lload         16\n-       361: ldc2_w        #39                 // long -8388609l\n+       361: ldc2_w        #85                 // long -8388609l\n        364: land\n        365: lstore        16\n        367: lload         6\n        369: iload         8\n        371: i2l\n        372: lsub\n        373: lstore        18\n        375: lload         18\n        377: lconst_1\n        378: lcmp\n        379: iflt          391\n        382: lload         18\n-       384: ldc2_w        #41                 // long 254l\n+       384: ldc2_w        #87                 // long 254l\n        387: lcmp\n        388: ifle          394\n-       391: ldc           #8                  // float NaNf\n+       391: ldc           #22                 // float NaNf\n        393: freturn\n        394: lload         16\n        396: lload         18\n        398: bipush        23\n        400: lshl\n        401: lor\n        402: iload_0\n        403: ifeq          412\n-       406: ldc2_w        #43                 // long 2147483648l\n+       406: ldc2_w        #89                 // long 2147483648l\n        409: goto          413\n        412: lconst_0\n        413: lor\n        414: l2i\n        415: istore        20\n        417: iload         20\n-       419: invokestatic  #45                 // Method java/lang/Float.intBitsToFloat:(I)F\n+       419: invokestatic  #91                 // Method java/lang/Float.intBitsToFloat:(I)F\n        422: freturn\n       LineNumberTable:\n         line 138: 0\n         line 141: 22\n         line 149: 26\n         line 150: 30\n         line 152: 44\n@@ -761,48 +761,48 @@\n          2: lcmp\n          3: ifeq          13\n          6: iload_3\n          7: sipush        -180\n         10: if_icmpge     24\n         13: iload_0\n         14: ifeq          22\n-        17: ldc           #4                  // float -0.0f\n+        17: ldc           #11                 // float -0.0f\n         19: goto          23\n         22: fconst_0\n         23: freturn\n         24: iload_3\n         25: bipush        127\n         27: if_icmple     42\n         30: iload_0\n         31: ifeq          39\n-        34: ldc           #46                 // float -Infinityf\n+        34: ldc           #95                 // float -Infinityf\n         36: goto          41\n-        39: ldc           #47                 // float Infinityf\n+        39: ldc           #96                 // float Infinityf\n         41: freturn\n         42: lload_1\n-        43: ldc2_w        #48                 // long 9007199254740991l\n-        46: invokestatic  #13                 // Method java/lang/Long.compareUnsigned:(JJ)I\n+        43: ldc2_w        #97                 // long 9007199254740991l\n+        46: invokestatic  #33                 // Method java/lang/Long.compareUnsigned:(JJ)I\n         49: ifgt          78\n         52: lload_1\n         53: l2f\n         54: fstore        4\n         56: fload         4\n         58: fconst_1\n         59: iload_3\n-        60: invokestatic  #50                 // Method java/lang/Math.scalb:(FI)F\n+        60: invokestatic  #99                 // Method java/lang/Math.scalb:(FI)F\n         63: fmul\n         64: fstore        4\n         66: iload_0\n         67: ifeq          75\n         70: fload         4\n         72: fneg\n         73: fstore        4\n         75: fload         4\n         77: freturn\n-        78: ldc           #8                  // float NaNf\n+        78: ldc           #22                 // float NaNf\n         80: freturn\n       LineNumberTable:\n         line 307: 0\n         line 308: 13\n         line 310: 24\n         line 311: 30\n         line 318: 42\n@@ -843,53 +843,53 @@\n          2: newarray       float\n          4: dup\n          5: iconst_0\n          6: fconst_1\n          7: fastore\n          8: dup\n          9: iconst_1\n-        10: ldc           #51                 // float 10.0f\n+        10: ldc           #105                // float 10.0f\n         12: fastore\n         13: dup\n         14: iconst_2\n-        15: ldc           #52                 // float 100.0f\n+        15: ldc           #106                // float 100.0f\n         17: fastore\n         18: dup\n         19: iconst_3\n-        20: ldc           #53                 // float 1000.0f\n+        20: ldc           #107                // float 1000.0f\n         22: fastore\n         23: dup\n         24: iconst_4\n-        25: ldc           #54                 // float 10000.0f\n+        25: ldc           #108                // float 10000.0f\n         27: fastore\n         28: dup\n         29: iconst_5\n-        30: ldc           #55                 // float 100000.0f\n+        30: ldc           #109                // float 100000.0f\n         32: fastore\n         33: dup\n         34: bipush        6\n-        36: ldc           #56                 // float 1000000.0f\n+        36: ldc           #110                // float 1000000.0f\n         38: fastore\n         39: dup\n         40: bipush        7\n-        42: ldc           #57                 // float 1.0E7f\n+        42: ldc           #111                // float 1.0E7f\n         44: fastore\n         45: dup\n         46: bipush        8\n-        48: ldc           #58                 // float 1.0E8f\n+        48: ldc           #112                // float 1.0E8f\n         50: fastore\n         51: dup\n         52: bipush        9\n-        54: ldc           #59                 // float 1.0E9f\n+        54: ldc           #113                // float 1.0E9f\n         56: fastore\n         57: dup\n         58: bipush        10\n-        60: ldc           #60                 // float 1.0E10f\n+        60: ldc           #114                // float 1.0E10f\n         62: fastore\n-        63: putstatic     #14                 // Field FLOAT_POWER_OF_TEN:[F\n+        63: putstatic     #39                 // Field FLOAT_POWER_OF_TEN:[F\n         66: return\n       LineNumberTable:\n         line 41: 0\n }\n SourceFile: \"FastFloatMath.java\"\n InnerClasses:\n-  static #114= #113 of #2;                // UInt128=class com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128 of class com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n+  static #170= #62 of #3;                 // UInt128=class com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath$UInt128 of class com/fasterxml/jackson/core/io/doubleparser/FastDoubleMath\n"}]}
