{"diffoscope-json-version": 1, "source1": "first/JSONTokener.class", "source2": "second/JSONTokener.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum 3e58f898c40b0d59ca19c76141e11380b182ed680787238859104febe6e69f89\n+  SHA-256 checksum 3fc24e0e2d98bdf5d4ab398839afa9a8d1585d0df3e375a660b5102ae25acf93\n   Compiled from \"JSONTokener.java\"\n public class org.json.JSONTokener\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #73                         // org/json/JSONTokener\n   super_class: #74                        // java/lang/Object\n   interfaces: 0, fields: 8, methods: 21, attributes: 1\n Constant pool:\n-    #1 = Methodref          #74.#131      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #132.#133     // java/io/Reader.markSupported:()Z\n-    #3 = Class              #134          // java/io/BufferedReader\n-    #4 = Methodref          #3.#135       // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-    #5 = Fieldref           #73.#136      // org/json/JSONTokener.reader:Ljava/io/Reader;\n-    #6 = Fieldref           #73.#137      // org/json/JSONTokener.eof:Z\n-    #7 = Fieldref           #73.#138      // org/json/JSONTokener.usePrevious:Z\n-    #8 = Fieldref           #73.#139      // org/json/JSONTokener.previous:C\n-    #9 = Fieldref           #73.#140      // org/json/JSONTokener.index:J\n-   #10 = Fieldref           #73.#141      // org/json/JSONTokener.character:J\n-   #11 = Fieldref           #73.#142      // org/json/JSONTokener.characterPreviousLine:J\n-   #12 = Fieldref           #73.#143      // org/json/JSONTokener.line:J\n-   #13 = Class              #144          // java/io/InputStreamReader\n-   #14 = Methodref          #13.#145      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n-   #15 = Methodref          #73.#135      // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n-   #16 = Class              #146          // java/io/StringReader\n-   #17 = Methodref          #16.#147      // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n-   #18 = Class              #148          // org/json/JSONException\n-   #19 = String             #149          // Stepping back two steps is not supported\n-   #20 = Methodref          #18.#147      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Methodref          #73.#150      // org/json/JSONTokener.decrementIndexes:()V\n-   #22 = Methodref          #132.#151     // java/io/Reader.mark:(I)V\n-   #23 = Class              #152          // java/io/IOException\n-   #24 = String             #153          // Unable to preserve stream position\n-   #25 = Methodref          #18.#154      // org/json/JSONException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #26 = Methodref          #132.#155     // java/io/Reader.read:()I\n-   #27 = Methodref          #132.#156     // java/io/Reader.reset:()V\n-   #28 = String             #157          // Unable to read the next character from the stream\n-   #29 = Methodref          #18.#158      // org/json/JSONException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #30 = Methodref          #73.#159      // org/json/JSONTokener.incrementIndexes:(I)V\n-   #31 = Methodref          #73.#160      // org/json/JSONTokener.next:()C\n-   #32 = Class              #161          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#131      // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #162          // Expected \\'\n-   #35 = Methodref          #32.#163      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = Methodref          #32.#164      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #37 = String             #165          // \\' and instead saw \\'\n-   #38 = String             #166          // \\'\n-   #39 = Methodref          #32.#167      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #40 = Methodref          #73.#168      // org/json/JSONTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-   #41 = String             #169          // \\' and instead saw \\'\\'\n-   #42 = String             #170          //\n-   #43 = Methodref          #73.#171      // org/json/JSONTokener.end:()Z\n-   #44 = String             #172          // Substring bounds error\n-   #45 = Class              #173          // java/lang/String\n-   #46 = Methodref          #45.#174      // java/lang/String.\"<init>\":([C)V\n-   #47 = String             #175          // Unterminated string\n-   #48 = Methodref          #73.#176      // org/json/JSONTokener.next:(I)Ljava/lang/String;\n-   #49 = Methodref          #177.#178     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #50 = Class              #179          // java/lang/NumberFormatException\n-   #51 = String             #180          // Illegal escape.\n-   #52 = Methodref          #73.#181      // org/json/JSONTokener.syntaxError:(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n-   #53 = Methodref          #73.#182      // org/json/JSONTokener.back:()V\n-   #54 = Methodref          #45.#183      // java/lang/String.trim:()Ljava/lang/String;\n-   #55 = Methodref          #45.#184      // java/lang/String.indexOf:(I)I\n-   #56 = Methodref          #73.#185      // org/json/JSONTokener.nextClean:()C\n-   #57 = Methodref          #73.#186      // org/json/JSONTokener.nextString:(C)Ljava/lang/String;\n-   #58 = Class              #187          // org/json/JSONObject\n-   #59 = Methodref          #58.#188      // org/json/JSONObject.\"<init>\":(Lorg/json/JSONTokener;)V\n-   #60 = Class              #189          // org/json/JSONArray\n-   #61 = Methodref          #60.#188      // org/json/JSONArray.\"<init>\":(Lorg/json/JSONTokener;)V\n-   #62 = String             #190          // ,:]}/\\\\\\\"[{;=#\n-   #63 = Methodref          #45.#191      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #64 = String             #192          // Missing value\n-   #65 = Methodref          #58.#193      // org/json/JSONObject.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n+    #1 = Methodref          #74.#126      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #92.#127      // java/io/Reader.markSupported:()Z\n+    #3 = Class              #128          // java/io/BufferedReader\n+    #4 = Methodref          #3.#129       // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+    #5 = Fieldref           #73.#130      // org/json/JSONTokener.reader:Ljava/io/Reader;\n+    #6 = Fieldref           #73.#131      // org/json/JSONTokener.eof:Z\n+    #7 = Fieldref           #73.#132      // org/json/JSONTokener.usePrevious:Z\n+    #8 = Fieldref           #73.#133      // org/json/JSONTokener.previous:C\n+    #9 = Fieldref           #73.#134      // org/json/JSONTokener.index:J\n+   #10 = Fieldref           #73.#135      // org/json/JSONTokener.character:J\n+   #11 = Fieldref           #73.#136      // org/json/JSONTokener.characterPreviousLine:J\n+   #12 = Fieldref           #73.#137      // org/json/JSONTokener.line:J\n+   #13 = Class              #138          // java/io/InputStreamReader\n+   #14 = Methodref          #13.#139      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n+   #15 = Methodref          #73.#129      // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n+   #16 = Class              #140          // java/io/StringReader\n+   #17 = Methodref          #16.#141      // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n+   #18 = Class              #142          // org/json/JSONException\n+   #19 = String             #143          // Stepping back two steps is not supported\n+   #20 = Methodref          #18.#141      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = Methodref          #73.#144      // org/json/JSONTokener.decrementIndexes:()V\n+   #22 = Methodref          #92.#145      // java/io/Reader.mark:(I)V\n+   #23 = Class              #146          // java/io/IOException\n+   #24 = String             #147          // Unable to preserve stream position\n+   #25 = Methodref          #18.#148      // org/json/JSONException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #26 = Methodref          #92.#149      // java/io/Reader.read:()I\n+   #27 = Methodref          #92.#150      // java/io/Reader.reset:()V\n+   #28 = String             #151          // Unable to read the next character from the stream\n+   #29 = Methodref          #18.#152      // org/json/JSONException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #30 = Methodref          #73.#153      // org/json/JSONTokener.incrementIndexes:(I)V\n+   #31 = Methodref          #73.#154      // org/json/JSONTokener.next:()C\n+   #32 = Class              #155          // java/lang/StringBuilder\n+   #33 = Methodref          #32.#126      // java/lang/StringBuilder.\"<init>\":()V\n+   #34 = String             #156          // Expected \\'\n+   #35 = Methodref          #32.#157      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #36 = Methodref          #32.#158      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #37 = String             #159          // \\' and instead saw \\'\n+   #38 = String             #160          // \\'\n+   #39 = Methodref          #32.#161      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #40 = Methodref          #73.#162      // org/json/JSONTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+   #41 = String             #163          // \\' and instead saw \\'\\'\n+   #42 = String             #164          //\n+   #43 = Methodref          #73.#165      // org/json/JSONTokener.end:()Z\n+   #44 = String             #166          // Substring bounds error\n+   #45 = Class              #167          // java/lang/String\n+   #46 = Methodref          #45.#168      // java/lang/String.\"<init>\":([C)V\n+   #47 = String             #169          // Unterminated string\n+   #48 = Methodref          #73.#170      // org/json/JSONTokener.next:(I)Ljava/lang/String;\n+   #49 = Methodref          #171.#172     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #50 = Class              #173          // java/lang/NumberFormatException\n+   #51 = String             #174          // Illegal escape.\n+   #52 = Methodref          #73.#175      // org/json/JSONTokener.syntaxError:(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n+   #53 = Methodref          #73.#176      // org/json/JSONTokener.back:()V\n+   #54 = Methodref          #45.#177      // java/lang/String.trim:()Ljava/lang/String;\n+   #55 = Methodref          #45.#178      // java/lang/String.indexOf:(I)I\n+   #56 = Methodref          #73.#179      // org/json/JSONTokener.nextClean:()C\n+   #57 = Methodref          #73.#180      // org/json/JSONTokener.nextString:(C)Ljava/lang/String;\n+   #58 = Class              #181          // org/json/JSONObject\n+   #59 = Methodref          #58.#182      // org/json/JSONObject.\"<init>\":(Lorg/json/JSONTokener;)V\n+   #60 = Class              #183          // org/json/JSONArray\n+   #61 = Methodref          #60.#182      // org/json/JSONArray.\"<init>\":(Lorg/json/JSONTokener;)V\n+   #62 = String             #184          // ,:]}/\\\\\\\"[{;=#\n+   #63 = Methodref          #45.#185      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #64 = String             #186          // Missing value\n+   #65 = Methodref          #58.#187      // org/json/JSONObject.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n    #66 = Integer            1000000\n-   #67 = Methodref          #73.#167      // org/json/JSONTokener.toString:()Ljava/lang/String;\n-   #68 = String             #194          //  at\n-   #69 = Methodref          #32.#195      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #70 = String             #196          //  [character\n-   #71 = String             #197          //  line\n-   #72 = String             #198          // ]\n-   #73 = Class              #199          // org/json/JSONTokener\n-   #74 = Class              #200          // java/lang/Object\n+   #67 = Methodref          #73.#161      // org/json/JSONTokener.toString:()Ljava/lang/String;\n+   #68 = String             #188          //  at\n+   #69 = Methodref          #32.#189      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #70 = String             #190          //  [character\n+   #71 = String             #191          //  line\n+   #72 = String             #192          // ]\n+   #73 = Class              #193          // org/json/JSONTokener\n+   #74 = Class              #194          // java/lang/Object\n    #75 = Utf8               character\n    #76 = Utf8               J\n    #77 = Utf8               eof\n    #78 = Utf8               Z\n    #79 = Utf8               index\n    #80 = Utf8               line\n    #81 = Utf8               previous\n@@ -95,148 +95,142 @@\n    #85 = Utf8               usePrevious\n    #86 = Utf8               characterPreviousLine\n    #87 = Utf8               <init>\n    #88 = Utf8               (Ljava/io/Reader;)V\n    #89 = Utf8               Code\n    #90 = Utf8               LineNumberTable\n    #91 = Utf8               StackMapTable\n-   #92 = Class              #199          // org/json/JSONTokener\n-   #93 = Class              #201          // java/io/Reader\n-   #94 = Utf8               (Ljava/io/InputStream;)V\n-   #95 = Utf8               (Ljava/lang/String;)V\n-   #96 = Utf8               back\n-   #97 = Utf8               ()V\n-   #98 = Utf8               Exceptions\n-   #99 = Utf8               decrementIndexes\n-  #100 = Utf8               dehexchar\n-  #101 = Utf8               (C)I\n-  #102 = Utf8               end\n-  #103 = Utf8               ()Z\n-  #104 = Utf8               more\n-  #105 = Class              #152          // java/io/IOException\n-  #106 = Utf8               next\n-  #107 = Utf8               ()C\n-  #108 = Utf8               incrementIndexes\n-  #109 = Utf8               (I)V\n-  #110 = Utf8               (C)C\n-  #111 = Utf8               (I)Ljava/lang/String;\n-  #112 = Class              #202          // \"[C\"\n-  #113 = Utf8               nextClean\n-  #114 = Utf8               nextString\n-  #115 = Utf8               (C)Ljava/lang/String;\n-  #116 = Class              #161          // java/lang/StringBuilder\n-  #117 = Class              #179          // java/lang/NumberFormatException\n-  #118 = Utf8               nextTo\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Class              #173          // java/lang/String\n-  #121 = Utf8               nextValue\n-  #122 = Utf8               ()Ljava/lang/Object;\n-  #123 = Utf8               skipTo\n-  #124 = Utf8               syntaxError\n-  #125 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n-  #126 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n-  #127 = Utf8               toString\n-  #128 = Utf8               ()Ljava/lang/String;\n-  #129 = Utf8               SourceFile\n-  #130 = Utf8               JSONTokener.java\n-  #131 = NameAndType        #87:#97       // \"<init>\":()V\n-  #132 = Class              #201          // java/io/Reader\n-  #133 = NameAndType        #203:#103     // markSupported:()Z\n-  #134 = Utf8               java/io/BufferedReader\n-  #135 = NameAndType        #87:#88       // \"<init>\":(Ljava/io/Reader;)V\n-  #136 = NameAndType        #83:#84       // reader:Ljava/io/Reader;\n-  #137 = NameAndType        #77:#78       // eof:Z\n-  #138 = NameAndType        #85:#78       // usePrevious:Z\n-  #139 = NameAndType        #81:#82       // previous:C\n-  #140 = NameAndType        #79:#76       // index:J\n-  #141 = NameAndType        #75:#76       // character:J\n-  #142 = NameAndType        #86:#76       // characterPreviousLine:J\n-  #143 = NameAndType        #80:#76       // line:J\n-  #144 = Utf8               java/io/InputStreamReader\n-  #145 = NameAndType        #87:#94       // \"<init>\":(Ljava/io/InputStream;)V\n-  #146 = Utf8               java/io/StringReader\n-  #147 = NameAndType        #87:#95       // \"<init>\":(Ljava/lang/String;)V\n-  #148 = Utf8               org/json/JSONException\n-  #149 = Utf8               Stepping back two steps is not supported\n-  #150 = NameAndType        #99:#97       // decrementIndexes:()V\n-  #151 = NameAndType        #204:#109     // mark:(I)V\n-  #152 = Utf8               java/io/IOException\n-  #153 = Utf8               Unable to preserve stream position\n-  #154 = NameAndType        #87:#205      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #155 = NameAndType        #206:#207     // read:()I\n-  #156 = NameAndType        #208:#97      // reset:()V\n-  #157 = Utf8               Unable to read the next character from the stream\n-  #158 = NameAndType        #87:#209      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #159 = NameAndType        #108:#109     // incrementIndexes:(I)V\n-  #160 = NameAndType        #106:#107     // next:()C\n-  #161 = Utf8               java/lang/StringBuilder\n-  #162 = Utf8               Expected \\'\n-  #163 = NameAndType        #210:#211     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #164 = NameAndType        #210:#212     // append:(C)Ljava/lang/StringBuilder;\n-  #165 = Utf8               \\' and instead saw \\'\n-  #166 = Utf8               \\'\n-  #167 = NameAndType        #127:#128     // toString:()Ljava/lang/String;\n-  #168 = NameAndType        #124:#125     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-  #169 = Utf8               \\' and instead saw \\'\\'\n-  #170 = Utf8\n-  #171 = NameAndType        #102:#103     // end:()Z\n-  #172 = Utf8               Substring bounds error\n-  #173 = Utf8               java/lang/String\n-  #174 = NameAndType        #87:#213      // \"<init>\":([C)V\n-  #175 = Utf8               Unterminated string\n-  #176 = NameAndType        #106:#111     // next:(I)Ljava/lang/String;\n-  #177 = Class              #214          // java/lang/Integer\n-  #178 = NameAndType        #215:#216     // parseInt:(Ljava/lang/String;I)I\n-  #179 = Utf8               java/lang/NumberFormatException\n-  #180 = Utf8               Illegal escape.\n-  #181 = NameAndType        #124:#126     // syntaxError:(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n-  #182 = NameAndType        #96:#97       // back:()V\n-  #183 = NameAndType        #217:#128     // trim:()Ljava/lang/String;\n-  #184 = NameAndType        #218:#219     // indexOf:(I)I\n-  #185 = NameAndType        #113:#107     // nextClean:()C\n-  #186 = NameAndType        #114:#115     // nextString:(C)Ljava/lang/String;\n-  #187 = Utf8               org/json/JSONObject\n-  #188 = NameAndType        #87:#220      // \"<init>\":(Lorg/json/JSONTokener;)V\n-  #189 = Utf8               org/json/JSONArray\n-  #190 = Utf8               ,:]}/\\\\\\\"[{;=#\n-  #191 = NameAndType        #221:#222     // equals:(Ljava/lang/Object;)Z\n-  #192 = Utf8               Missing value\n-  #193 = NameAndType        #223:#224     // stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n-  #194 = Utf8                at\n-  #195 = NameAndType        #210:#225     // append:(J)Ljava/lang/StringBuilder;\n-  #196 = Utf8                [character\n-  #197 = Utf8                line\n-  #198 = Utf8               ]\n-  #199 = Utf8               org/json/JSONTokener\n-  #200 = Utf8               java/lang/Object\n-  #201 = Utf8               java/io/Reader\n-  #202 = Utf8               [C\n-  #203 = Utf8               markSupported\n-  #204 = Utf8               mark\n-  #205 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #206 = Utf8               read\n-  #207 = Utf8               ()I\n-  #208 = Utf8               reset\n-  #209 = Utf8               (Ljava/lang/Throwable;)V\n-  #210 = Utf8               append\n-  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #212 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #213 = Utf8               ([C)V\n-  #214 = Utf8               java/lang/Integer\n-  #215 = Utf8               parseInt\n-  #216 = Utf8               (Ljava/lang/String;I)I\n-  #217 = Utf8               trim\n-  #218 = Utf8               indexOf\n-  #219 = Utf8               (I)I\n-  #220 = Utf8               (Lorg/json/JSONTokener;)V\n-  #221 = Utf8               equals\n-  #222 = Utf8               (Ljava/lang/Object;)Z\n-  #223 = Utf8               stringToValue\n-  #224 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #225 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #92 = Class              #195          // java/io/Reader\n+   #93 = Utf8               (Ljava/io/InputStream;)V\n+   #94 = Utf8               (Ljava/lang/String;)V\n+   #95 = Utf8               back\n+   #96 = Utf8               ()V\n+   #97 = Utf8               Exceptions\n+   #98 = Utf8               decrementIndexes\n+   #99 = Utf8               dehexchar\n+  #100 = Utf8               (C)I\n+  #101 = Utf8               end\n+  #102 = Utf8               ()Z\n+  #103 = Utf8               more\n+  #104 = Utf8               next\n+  #105 = Utf8               ()C\n+  #106 = Utf8               incrementIndexes\n+  #107 = Utf8               (I)V\n+  #108 = Utf8               (C)C\n+  #109 = Utf8               (I)Ljava/lang/String;\n+  #110 = Class              #196          // \"[C\"\n+  #111 = Utf8               nextClean\n+  #112 = Utf8               nextString\n+  #113 = Utf8               (C)Ljava/lang/String;\n+  #114 = Utf8               nextTo\n+  #115 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #116 = Utf8               nextValue\n+  #117 = Utf8               ()Ljava/lang/Object;\n+  #118 = Utf8               skipTo\n+  #119 = Utf8               syntaxError\n+  #120 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n+  #121 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n+  #122 = Utf8               toString\n+  #123 = Utf8               ()Ljava/lang/String;\n+  #124 = Utf8               SourceFile\n+  #125 = Utf8               JSONTokener.java\n+  #126 = NameAndType        #87:#96       // \"<init>\":()V\n+  #127 = NameAndType        #197:#102     // markSupported:()Z\n+  #128 = Utf8               java/io/BufferedReader\n+  #129 = NameAndType        #87:#88       // \"<init>\":(Ljava/io/Reader;)V\n+  #130 = NameAndType        #83:#84       // reader:Ljava/io/Reader;\n+  #131 = NameAndType        #77:#78       // eof:Z\n+  #132 = NameAndType        #85:#78       // usePrevious:Z\n+  #133 = NameAndType        #81:#82       // previous:C\n+  #134 = NameAndType        #79:#76       // index:J\n+  #135 = NameAndType        #75:#76       // character:J\n+  #136 = NameAndType        #86:#76       // characterPreviousLine:J\n+  #137 = NameAndType        #80:#76       // line:J\n+  #138 = Utf8               java/io/InputStreamReader\n+  #139 = NameAndType        #87:#93       // \"<init>\":(Ljava/io/InputStream;)V\n+  #140 = Utf8               java/io/StringReader\n+  #141 = NameAndType        #87:#94       // \"<init>\":(Ljava/lang/String;)V\n+  #142 = Utf8               org/json/JSONException\n+  #143 = Utf8               Stepping back two steps is not supported\n+  #144 = NameAndType        #98:#96       // decrementIndexes:()V\n+  #145 = NameAndType        #198:#107     // mark:(I)V\n+  #146 = Utf8               java/io/IOException\n+  #147 = Utf8               Unable to preserve stream position\n+  #148 = NameAndType        #87:#199      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #149 = NameAndType        #200:#201     // read:()I\n+  #150 = NameAndType        #202:#96      // reset:()V\n+  #151 = Utf8               Unable to read the next character from the stream\n+  #152 = NameAndType        #87:#203      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #153 = NameAndType        #106:#107     // incrementIndexes:(I)V\n+  #154 = NameAndType        #104:#105     // next:()C\n+  #155 = Utf8               java/lang/StringBuilder\n+  #156 = Utf8               Expected \\'\n+  #157 = NameAndType        #204:#205     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #158 = NameAndType        #204:#206     // append:(C)Ljava/lang/StringBuilder;\n+  #159 = Utf8               \\' and instead saw \\'\n+  #160 = Utf8               \\'\n+  #161 = NameAndType        #122:#123     // toString:()Ljava/lang/String;\n+  #162 = NameAndType        #119:#120     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+  #163 = Utf8               \\' and instead saw \\'\\'\n+  #164 = Utf8\n+  #165 = NameAndType        #101:#102     // end:()Z\n+  #166 = Utf8               Substring bounds error\n+  #167 = Utf8               java/lang/String\n+  #168 = NameAndType        #87:#207      // \"<init>\":([C)V\n+  #169 = Utf8               Unterminated string\n+  #170 = NameAndType        #104:#109     // next:(I)Ljava/lang/String;\n+  #171 = Class              #208          // java/lang/Integer\n+  #172 = NameAndType        #209:#210     // parseInt:(Ljava/lang/String;I)I\n+  #173 = Utf8               java/lang/NumberFormatException\n+  #174 = Utf8               Illegal escape.\n+  #175 = NameAndType        #119:#121     // syntaxError:(Ljava/lang/String;Ljava/lang/Throwable;)Lorg/json/JSONException;\n+  #176 = NameAndType        #95:#96       // back:()V\n+  #177 = NameAndType        #211:#123     // trim:()Ljava/lang/String;\n+  #178 = NameAndType        #212:#213     // indexOf:(I)I\n+  #179 = NameAndType        #111:#105     // nextClean:()C\n+  #180 = NameAndType        #112:#113     // nextString:(C)Ljava/lang/String;\n+  #181 = Utf8               org/json/JSONObject\n+  #182 = NameAndType        #87:#214      // \"<init>\":(Lorg/json/JSONTokener;)V\n+  #183 = Utf8               org/json/JSONArray\n+  #184 = Utf8               ,:]}/\\\\\\\"[{;=#\n+  #185 = NameAndType        #215:#216     // equals:(Ljava/lang/Object;)Z\n+  #186 = Utf8               Missing value\n+  #187 = NameAndType        #217:#218     // stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n+  #188 = Utf8                at\n+  #189 = NameAndType        #204:#219     // append:(J)Ljava/lang/StringBuilder;\n+  #190 = Utf8                [character\n+  #191 = Utf8                line\n+  #192 = Utf8               ]\n+  #193 = Utf8               org/json/JSONTokener\n+  #194 = Utf8               java/lang/Object\n+  #195 = Utf8               java/io/Reader\n+  #196 = Utf8               [C\n+  #197 = Utf8               markSupported\n+  #198 = Utf8               mark\n+  #199 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #200 = Utf8               read\n+  #201 = Utf8               ()I\n+  #202 = Utf8               reset\n+  #203 = Utf8               (Ljava/lang/Throwable;)V\n+  #204 = Utf8               append\n+  #205 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #206 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #207 = Utf8               ([C)V\n+  #208 = Utf8               java/lang/Integer\n+  #209 = Utf8               parseInt\n+  #210 = Utf8               (Ljava/lang/String;I)I\n+  #211 = Utf8               trim\n+  #212 = Utf8               indexOf\n+  #213 = Utf8               (I)I\n+  #214 = Utf8               (Lorg/json/JSONTokener;)V\n+  #215 = Utf8               equals\n+  #216 = Utf8               (Ljava/lang/Object;)Z\n+  #217 = Utf8               stringToValue\n+  #218 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #219 = Utf8               (J)Ljava/lang/StringBuilder;\n {\n   private long character;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean eof;\n     descriptor: Z\n@@ -305,14 +299,16 @@\n         57: aload_0\n         58: lconst_1\n         59: putfield      #12                 // Field line:J\n         62: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n+        line 67: 12\n+        line 68: 16\n         line 69: 27\n         line 70: 32\n         line 71: 37\n         line 72: 42\n         line 73: 47\n         line 74: 52\n         line 75: 57\n"}]}
