{"diffoscope-json-version": 1, "source1": "first/AbstractCharacterFilterReader.class", "source2": "second/AbstractCharacterFilterReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,194 +1,193 @@\n-  SHA-256 checksum 81266a094aa4966972e00c35fccb977026e28db707701fbfbb09c6eff3bd61f6\n+  SHA-256 checksum 9b94e228dbe036e207bcfd800b6d1ee3998a41f59692c3d38cd2e168c83963fb\n   Compiled from \"AbstractCharacterFilterReader.java\"\n public abstract class org.apache.commons.io.input.AbstractCharacterFilterReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/io/input/AbstractCharacterFilterReader\n-  super_class: #2                         // java/io/FilterReader\n+  this_class: #1                          // org/apache/commons/io/input/AbstractCharacterFilterReader\n+  super_class: #3                         // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #2 = Class              #4             // java/io/FilterReader\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+   #1 = Class              #2             // org/apache/commons/io/input/AbstractCharacterFilterReader\n+   #2 = Utf8               org/apache/commons/io/input/AbstractCharacterFilterReader\n+   #3 = Class              #4             // java/io/FilterReader\n    #4 = Utf8               java/io/FilterReader\n    #5 = Utf8               <init>\n    #6 = Utf8               (Ljava/io/Reader;)V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/io/input/AbstractCharacterFilterReader.in:Ljava/io/Reader;\n-   #8 = Class              #10            // org/apache/commons/io/input/AbstractCharacterFilterReader\n-   #9 = NameAndType        #11:#12        // in:Ljava/io/Reader;\n-  #10 = Utf8               org/apache/commons/io/input/AbstractCharacterFilterReader\n-  #11 = Utf8               in\n-  #12 = Utf8               Ljava/io/Reader;\n-  #13 = Methodref          #14.#15        // java/io/Reader.read:()I\n-  #14 = Class              #16            // java/io/Reader\n-  #15 = NameAndType        #17:#18        // read:()I\n-  #16 = Utf8               java/io/Reader\n-  #17 = Utf8               read\n-  #18 = Utf8               ()I\n-  #19 = Methodref          #8.#20         // org/apache/commons/io/input/AbstractCharacterFilterReader.filter:(I)Z\n-  #20 = NameAndType        #21:#22        // filter:(I)Z\n-  #21 = Utf8               filter\n-  #22 = Utf8               (I)Z\n-  #23 = Methodref          #2.#24         // java/io/FilterReader.read:([CII)I\n-  #24 = NameAndType        #17:#25        // read:([CII)I\n-  #25 = Utf8               ([CII)I\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/io/input/AbstractCharacterFilterReader;\n-  #31 = Utf8               reader\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #9 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/input/AbstractCharacterFilterReader;\n+  #14 = Utf8               reader\n+  #15 = Utf8               Ljava/io/Reader;\n+  #16 = Utf8               read\n+  #17 = Utf8               ()I\n+  #18 = Utf8               Exceptions\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Fieldref           #1.#22         // org/apache/commons/io/input/AbstractCharacterFilterReader.in:Ljava/io/Reader;\n+  #22 = NameAndType        #23:#15        // in:Ljava/io/Reader;\n+  #23 = Utf8               in\n+  #24 = Methodref          #25.#27        // java/io/Reader.read:()I\n+  #25 = Class              #26            // java/io/Reader\n+  #26 = Utf8               java/io/Reader\n+  #27 = NameAndType        #16:#17        // read:()I\n+  #28 = Methodref          #1.#29         // org/apache/commons/io/input/AbstractCharacterFilterReader.filter:(I)Z\n+  #29 = NameAndType        #30:#31        // filter:(I)Z\n+  #30 = Utf8               filter\n+  #31 = Utf8               (I)Z\n   #32 = Utf8               ch\n   #33 = Utf8               I\n   #34 = Utf8               StackMapTable\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #37            // java/io/IOException\n-  #37 = Utf8               java/io/IOException\n-  #38 = Utf8               readPos\n-  #39 = Utf8               cbuf\n-  #40 = Utf8               [C\n-  #41 = Utf8               off\n-  #42 = Utf8               len\n-  #43 = Utf8               pos\n+  #35 = Utf8               ([CII)I\n+  #36 = Methodref          #3.#37         // java/io/FilterReader.read:([CII)I\n+  #37 = NameAndType        #16:#35        // read:([CII)I\n+  #38 = Utf8               cbuf\n+  #39 = Utf8               [C\n+  #40 = Utf8               off\n+  #41 = Utf8               len\n+  #42 = Utf8               pos\n+  #43 = Utf8               readPos\n   #44 = Utf8               SourceFile\n   #45 = Utf8               AbstractCharacterFilterReader.java\n {\n   protected org.apache.commons.io.input.AbstractCharacterFilterReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #8                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n          5: return\n       LineNumberTable:\n         line 35: 0\n         line 36: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/AbstractCharacterFilterReader;\n             0       6     1 reader   Ljava/io/Reader;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #13                 // Method java/io/Reader.read:()I\n+         1: getfield      #21                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #24                 // Method java/io/Reader.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n-        10: invokevirtual #19                 // Method filter:(I)Z\n+        10: invokevirtual #28                 // Method filter:(I)Z\n         13: ifne          0\n         16: iload_1\n         17: ireturn\n       LineNumberTable:\n         line 42: 0\n         line 43: 8\n         line 44: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/input/AbstractCharacterFilterReader;\n             8      10     1    ch   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 0 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected abstract boolean filter(int);\n     descriptor: (I)Z\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=7, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #23                 // Method java/io/FilterReader.read:([CII)I\n+         4: invokespecial #36                 // Method java/io/FilterReader.read:([CII)I\n          7: istore        4\n          9: iload         4\n         11: iconst_m1\n         12: if_icmpne     17\n         15: iconst_m1\n         16: ireturn\n         17: iload_2\n         18: iconst_1\n         19: isub\n         20: istore        5\n         22: iload_2\n         23: istore        6\n-        25: iload         6\n-        27: iload_2\n-        28: iload         4\n-        30: iadd\n-        31: if_icmpge     72\n-        34: aload_0\n-        35: aload_1\n-        36: iload         6\n-        38: caload\n-        39: invokevirtual #19                 // Method filter:(I)Z\n-        42: ifeq          48\n-        45: goto          66\n-        48: iinc          5, 1\n-        51: iload         5\n-        53: iload         6\n-        55: if_icmpge     66\n-        58: aload_1\n-        59: iload         5\n-        61: aload_1\n-        62: iload         6\n-        64: caload\n-        65: castore\n-        66: iinc          6, 1\n-        69: goto          25\n+        25: goto          63\n+        28: aload_0\n+        29: aload_1\n+        30: iload         6\n+        32: caload\n+        33: invokevirtual #28                 // Method filter:(I)Z\n+        36: ifeq          42\n+        39: goto          60\n+        42: iinc          5, 1\n+        45: iload         5\n+        47: iload         6\n+        49: if_icmpge     60\n+        52: aload_1\n+        53: iload         5\n+        55: aload_1\n+        56: iload         6\n+        58: caload\n+        59: castore\n+        60: iinc          6, 1\n+        63: iload         6\n+        65: iload_2\n+        66: iload         4\n+        68: iadd\n+        69: if_icmplt     28\n         72: iload         5\n         74: iload_2\n         75: isub\n         76: iconst_1\n         77: iadd\n         78: ireturn\n       LineNumberTable:\n         line 58: 0\n         line 59: 9\n         line 60: 15\n         line 62: 17\n         line 63: 22\n-        line 64: 34\n-        line 65: 45\n-        line 67: 48\n-        line 68: 51\n-        line 69: 58\n-        line 63: 66\n+        line 64: 28\n+        line 65: 39\n+        line 67: 42\n+        line 68: 45\n+        line 69: 52\n+        line 63: 60\n         line 72: 72\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25      47     6 readPos   I\n             0      79     0  this   Lorg/apache/commons/io/input/AbstractCharacterFilterReader;\n             0      79     1  cbuf   [C\n             0      79     2   off   I\n             0      79     3   len   I\n             9      70     4  read   I\n            22      57     5   pos   I\n+           25      47     6 readPos   I\n       StackMapTable: number_of_entries = 5\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ int ]\n         frame_type = 253 /* append */\n-          offset_delta = 7\n+          offset_delta = 10\n           locals = [ int, int ]\n-        frame_type = 22 /* same */\n+        frame_type = 13 /* same */\n         frame_type = 17 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 5\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 2 /* same */\n }\n SourceFile: \"AbstractCharacterFilterReader.java\"\n"}]}
