{"diffoscope-json-version": 1, "source1": "first/XmlStreamReader$Builder.class", "source2": "second/XmlStreamReader$Builder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,26 +15,26 @@\n     \n     public Builder() {\n         this.nullCharset = true;\n         this.lenient = true;\n     }\n     \n     public XmlStreamReader get() throws IOException {\n-        final String defaultEncoding = this.nullCharset ? null : this.getCharset().name();\n-        return (this.httpContentType == null) ? new XmlStreamReader(this.getOrigin().getInputStream(new OpenOption[0]), this.lenient, defaultEncoding) : new XmlStreamReader(this.getOrigin().getInputStream(new OpenOption[0]), this.httpContentType, this.lenient, defaultEncoding);\n+        final String s = this.nullCharset ? null : this.getCharset().name();\n+        return (this.httpContentType == null) ? new XmlStreamReader(this.getOrigin().getInputStream(new OpenOption[0]), this.lenient, s) : new XmlStreamReader(this.getOrigin().getInputStream(new OpenOption[0]), this.httpContentType, this.lenient, s);\n     }\n     \n     public Builder setCharset(final Charset charset) {\n         this.nullCharset = (charset == null);\n         return (Builder)super.setCharset(charset);\n     }\n     \n-    public Builder setCharset(final String charset) {\n-        this.nullCharset = (charset == null);\n-        return (Builder)super.setCharset(Charsets.toCharset(charset, this.getCharsetDefault()));\n+    public Builder setCharset(final String s) {\n+        this.nullCharset = (s == null);\n+        return (Builder)super.setCharset(Charsets.toCharset(s, this.getCharsetDefault()));\n     }\n     \n     public Builder setHttpContentType(final String httpContentType) {\n         this.httpContentType = httpContentType;\n         return this;\n     }\n     \n"}]}
