{"diffoscope-json-version": 1, "source1": "first/WriterOutputStream.class", "source2": "second/WriterOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,260 +1,260 @@\n-  SHA-256 checksum 45b7eaaf62f8b815d64ccad018041e20bcff6389f17080160e9b67487452a928\n+  SHA-256 checksum 1f303e9c8ed9be0a00c56aaca1ba6b9aa424a0dc7fe46762d0cf9c54dd1846b4\n   Compiled from \"WriterOutputStream.java\"\n public class org.apache.commons.io.output.WriterOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // org/apache/commons/io/output/WriterOutputStream\n-  super_class: #60                        // java/io/OutputStream\n+  this_class: #89                         // org/apache/commons/io/output/WriterOutputStream\n+  super_class: #123                       // java/io/OutputStream\n   interfaces: 0, fields: 6, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Class              #114          // org/apache/commons/io/IOUtils\n-    #2 = Class              #115          // org/apache/commons/io/output/WriterOutputStream$Builder\n-    #3 = Methodref          #2.#116       // org/apache/commons/io/output/WriterOutputStream$Builder.\"<init>\":()V\n-    #4 = Fieldref           #117.#118     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-    #5 = Methodref          #84.#119      // java/nio/charset/Charset.name:()Ljava/lang/String;\n-    #6 = Methodref          #120.#121     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #7 = String             #122          // v\u00e9s\n-    #8 = Methodref          #120.#123     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-    #9 = Methodref          #84.#124      // java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n-   #10 = Methodref          #87.#125      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #11 = Methodref          #120.#126     // java/lang/String.length:()I\n-   #12 = Methodref          #88.#127      // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-   #13 = Methodref          #87.#128      // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #14 = Methodref          #87.#129      // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-   #15 = Methodref          #86.#130      // java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n-   #16 = Class              #131          // java/lang/IllegalArgumentException\n-   #17 = Class              #132          // java/lang/UnsupportedOperationException\n-   #18 = String             #133          // UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n-   #19 = Methodref          #17.#134      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #20 = Methodref          #87.#135      // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n-   #21 = Methodref          #88.#136      // java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n-   #22 = Methodref          #88.#137      // java/nio/CharBuffer.toString:()Ljava/lang/String;\n-   #23 = Methodref          #84.#138      // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #24 = Class              #139          // org/apache/commons/io/output/WriterOutputStream\n-   #25 = Methodref          #24.#140      // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n-   #26 = Methodref          #141.#142     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #27 = Fieldref           #143.#144     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-   #28 = Methodref          #86.#145      // java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-   #29 = Methodref          #86.#146      // java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-   #30 = String             #147          // ?\n-   #31 = Methodref          #86.#148      // java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n-   #32 = Methodref          #24.#149      // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n-   #33 = Methodref          #60.#116      // java/io/OutputStream.\"<init>\":()V\n-   #34 = Fieldref           #24.#150      // org/apache/commons/io/output/WriterOutputStream.decoderIn:Ljava/nio/ByteBuffer;\n-   #35 = Methodref          #151.#152     // org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n-   #36 = Methodref          #86.#153      // java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;\n-   #37 = Methodref          #24.#154      // org/apache/commons/io/output/WriterOutputStream.checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n-   #38 = Fieldref           #24.#155      // org/apache/commons/io/output/WriterOutputStream.writer:Ljava/io/Writer;\n-   #39 = Fieldref           #24.#156      // org/apache/commons/io/output/WriterOutputStream.decoder:Ljava/nio/charset/CharsetDecoder;\n-   #40 = Fieldref           #24.#157      // org/apache/commons/io/output/WriterOutputStream.writeImmediately:Z\n-   #41 = Fieldref           #24.#158      // org/apache/commons/io/output/WriterOutputStream.decoderOut:Ljava/nio/CharBuffer;\n-   #42 = Methodref          #24.#159      // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n-   #43 = Methodref          #141.#160     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #44 = Methodref          #24.#161      // org/apache/commons/io/output/WriterOutputStream.processInput:(Z)V\n-   #45 = Methodref          #24.#162      // org/apache/commons/io/output/WriterOutputStream.flushOutput:()V\n-   #46 = Methodref          #163.#164     // java/io/Writer.close:()V\n-   #47 = Methodref          #163.#165     // java/io/Writer.flush:()V\n-   #48 = Methodref          #88.#166      // java/nio/CharBuffer.position:()I\n-   #49 = Methodref          #88.#167      // java/nio/CharBuffer.array:()[C\n-   #50 = Methodref          #163.#168     // java/io/Writer.write:([CII)V\n-   #51 = Methodref          #107.#169     // java/nio/charset/CoderResult.isOverflow:()Z\n-   #52 = Methodref          #107.#170     // java/nio/charset/CoderResult.isUnderflow:()Z\n-   #53 = Class              #171          // java/io/IOException\n-   #54 = String             #172          // Unexpected coder result\n-   #55 = Methodref          #53.#134      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #56 = Methodref          #24.#173      // org/apache/commons/io/output/WriterOutputStream.write:([BII)V\n-   #57 = Methodref          #87.#174      // java/nio/ByteBuffer.remaining:()I\n-   #58 = Methodref          #175.#176     // java/lang/Math.min:(II)I\n-   #59 = Methodref          #87.#177      // java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;\n-   #60 = Class              #178          // java/io/OutputStream\n-   #61 = Utf8               Builder\n-   #62 = Utf8               InnerClasses\n-   #63 = Utf8               BUFFER_SIZE\n-   #64 = Utf8               I\n-   #65 = Utf8               ConstantValue\n-   #66 = Integer            8192\n-   #67 = Utf8               writer\n-   #68 = Utf8               Ljava/io/Writer;\n-   #69 = Utf8               decoder\n-   #70 = Utf8               Ljava/nio/charset/CharsetDecoder;\n-   #71 = Utf8               writeImmediately\n-   #72 = Utf8               Z\n-   #73 = Utf8               decoderIn\n-   #74 = Utf8               Ljava/nio/ByteBuffer;\n-   #75 = Utf8               decoderOut\n-   #76 = Utf8               Ljava/nio/CharBuffer;\n-   #77 = Utf8               builder\n-   #78 = Utf8               ()Lorg/apache/commons/io/output/WriterOutputStream$Builder;\n-   #79 = Utf8               Code\n-   #80 = Utf8               LineNumberTable\n-   #81 = Utf8               checkIbmJdkWithBrokenUTF16\n-   #82 = Utf8               (Ljava/nio/charset/Charset;)V\n-   #83 = Utf8               StackMapTable\n-   #84 = Class              #179          // java/nio/charset/Charset\n-   #85 = Class              #180          // \"[B\"\n-   #86 = Class              #181          // java/nio/charset/CharsetDecoder\n-   #87 = Class              #182          // java/nio/ByteBuffer\n-   #88 = Class              #183          // java/nio/CharBuffer\n-   #89 = Utf8               <init>\n-   #90 = Utf8               (Ljava/io/Writer;)V\n-   #91 = Utf8               Deprecated\n-   #92 = Utf8               RuntimeVisibleAnnotations\n-   #93 = Utf8               Ljava/lang/Deprecated;\n-   #94 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;)V\n-   #95 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n-   #96 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V\n-   #97 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n-   #98 = Utf8               (Ljava/io/Writer;Ljava/lang/String;)V\n-   #99 = Utf8               (Ljava/io/Writer;Ljava/lang/String;IZ)V\n-  #100 = Utf8               close\n-  #101 = Utf8               ()V\n-  #102 = Utf8               Exceptions\n-  #103 = Utf8               flush\n-  #104 = Utf8               flushOutput\n-  #105 = Utf8               processInput\n-  #106 = Utf8               (Z)V\n-  #107 = Class              #184          // java/nio/charset/CoderResult\n-  #108 = Utf8               write\n-  #109 = Utf8               ([B)V\n-  #110 = Utf8               ([BII)V\n-  #111 = Utf8               (I)V\n-  #112 = Utf8               SourceFile\n-  #113 = Utf8               WriterOutputStream.java\n-  #114 = Utf8               org/apache/commons/io/IOUtils\n-  #115 = Utf8               org/apache/commons/io/output/WriterOutputStream$Builder\n-  #116 = NameAndType        #89:#101      // \"<init>\":()V\n-  #117 = Class              #185          // java/nio/charset/StandardCharsets\n-  #118 = NameAndType        #186:#187     // UTF_16:Ljava/nio/charset/Charset;\n-  #119 = NameAndType        #188:#189     // name:()Ljava/lang/String;\n-  #120 = Class              #190          // java/lang/String\n-  #121 = NameAndType        #191:#192     // equals:(Ljava/lang/Object;)Z\n-  #122 = Utf8               v\u00e9s\n-  #123 = NameAndType        #193:#194     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #124 = NameAndType        #195:#196     // newDecoder:()Ljava/nio/charset/CharsetDecoder;\n-  #125 = NameAndType        #197:#198     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #126 = NameAndType        #199:#200     // length:()I\n-  #127 = NameAndType        #197:#201     // allocate:(I)Ljava/nio/CharBuffer;\n-  #128 = NameAndType        #202:#203     // put:(B)Ljava/nio/ByteBuffer;\n-  #129 = NameAndType        #204:#205     // flip:()Ljava/nio/Buffer;\n-  #130 = NameAndType        #206:#207     // decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #131 = Utf8               java/lang/IllegalArgumentException\n-  #132 = Utf8               java/lang/UnsupportedOperationException\n-  #133 = Utf8               UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n-  #134 = NameAndType        #89:#208      // \"<init>\":(Ljava/lang/String;)V\n-  #135 = NameAndType        #209:#210     // compact:()Ljava/nio/ByteBuffer;\n-  #136 = NameAndType        #211:#205     // rewind:()Ljava/nio/Buffer;\n-  #137 = NameAndType        #212:#189     // toString:()Ljava/lang/String;\n-  #138 = NameAndType        #213:#214     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #139 = Utf8               org/apache/commons/io/output/WriterOutputStream\n-  #140 = NameAndType        #89:#95       // \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n-  #141 = Class              #215          // org/apache/commons/io/Charsets\n-  #142 = NameAndType        #216:#217     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #143 = Class              #218          // java/nio/charset/CodingErrorAction\n-  #144 = NameAndType        #219:#220     // REPLACE:Ljava/nio/charset/CodingErrorAction;\n-  #145 = NameAndType        #221:#222     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-  #146 = NameAndType        #223:#222     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-  #147 = Utf8               ?\n-  #148 = NameAndType        #224:#225     // replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n-  #149 = NameAndType        #89:#97       // \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n-  #150 = NameAndType        #73:#74       // decoderIn:Ljava/nio/ByteBuffer;\n-  #151 = Class              #226          // org/apache/commons/io/charset/CharsetDecoders\n-  #152 = NameAndType        #227:#228     // toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n-  #153 = NameAndType        #229:#214     // charset:()Ljava/nio/charset/Charset;\n-  #154 = NameAndType        #81:#82       // checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n-  #155 = NameAndType        #67:#68       // writer:Ljava/io/Writer;\n-  #156 = NameAndType        #69:#70       // decoder:Ljava/nio/charset/CharsetDecoder;\n-  #157 = NameAndType        #71:#72       // writeImmediately:Z\n-  #158 = NameAndType        #75:#76       // decoderOut:Ljava/nio/CharBuffer;\n-  #159 = NameAndType        #89:#99       // \"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n-  #160 = NameAndType        #216:#230     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #161 = NameAndType        #105:#106     // processInput:(Z)V\n-  #162 = NameAndType        #104:#101     // flushOutput:()V\n-  #163 = Class              #231          // java/io/Writer\n-  #164 = NameAndType        #100:#101     // close:()V\n-  #165 = NameAndType        #103:#101     // flush:()V\n-  #166 = NameAndType        #232:#200     // position:()I\n-  #167 = NameAndType        #233:#234     // array:()[C\n-  #168 = NameAndType        #108:#235     // write:([CII)V\n-  #169 = NameAndType        #236:#237     // isOverflow:()Z\n-  #170 = NameAndType        #238:#237     // isUnderflow:()Z\n-  #171 = Utf8               java/io/IOException\n-  #172 = Utf8               Unexpected coder result\n-  #173 = NameAndType        #108:#110     // write:([BII)V\n-  #174 = NameAndType        #239:#200     // remaining:()I\n-  #175 = Class              #240          // java/lang/Math\n-  #176 = NameAndType        #241:#242     // min:(II)I\n-  #177 = NameAndType        #202:#243     // put:([BII)Ljava/nio/ByteBuffer;\n-  #178 = Utf8               java/io/OutputStream\n-  #179 = Utf8               java/nio/charset/Charset\n-  #180 = Utf8               [B\n-  #181 = Utf8               java/nio/charset/CharsetDecoder\n-  #182 = Utf8               java/nio/ByteBuffer\n-  #183 = Utf8               java/nio/CharBuffer\n-  #184 = Utf8               java/nio/charset/CoderResult\n-  #185 = Utf8               java/nio/charset/StandardCharsets\n-  #186 = Utf8               UTF_16\n-  #187 = Utf8               Ljava/nio/charset/Charset;\n-  #188 = Utf8               name\n-  #189 = Utf8               ()Ljava/lang/String;\n-  #190 = Utf8               java/lang/String\n-  #191 = Utf8               equals\n-  #192 = Utf8               (Ljava/lang/Object;)Z\n-  #193 = Utf8               getBytes\n-  #194 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #195 = Utf8               newDecoder\n-  #196 = Utf8               ()Ljava/nio/charset/CharsetDecoder;\n-  #197 = Utf8               allocate\n-  #198 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #199 = Utf8               length\n-  #200 = Utf8               ()I\n-  #201 = Utf8               (I)Ljava/nio/CharBuffer;\n-  #202 = Utf8               put\n-  #203 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #204 = Utf8               flip\n-  #205 = Utf8               ()Ljava/nio/Buffer;\n-  #206 = Utf8               decode\n-  #207 = Utf8               (Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #208 = Utf8               (Ljava/lang/String;)V\n-  #209 = Utf8               compact\n-  #210 = Utf8               ()Ljava/nio/ByteBuffer;\n-  #211 = Utf8               rewind\n-  #212 = Utf8               toString\n-  #213 = Utf8               defaultCharset\n-  #214 = Utf8               ()Ljava/nio/charset/Charset;\n-  #215 = Utf8               org/apache/commons/io/Charsets\n-  #216 = Utf8               toCharset\n-  #217 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #218 = Utf8               java/nio/charset/CodingErrorAction\n-  #219 = Utf8               REPLACE\n-  #220 = Utf8               Ljava/nio/charset/CodingErrorAction;\n-  #221 = Utf8               onMalformedInput\n-  #222 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-  #223 = Utf8               onUnmappableCharacter\n-  #224 = Utf8               replaceWith\n-  #225 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n-  #226 = Utf8               org/apache/commons/io/charset/CharsetDecoders\n-  #227 = Utf8               toCharsetDecoder\n-  #228 = Utf8               (Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n-  #229 = Utf8               charset\n-  #230 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #231 = Utf8               java/io/Writer\n-  #232 = Utf8               position\n-  #233 = Utf8               array\n-  #234 = Utf8               ()[C\n-  #235 = Utf8               ([CII)V\n-  #236 = Utf8               isOverflow\n-  #237 = Utf8               ()Z\n-  #238 = Utf8               isUnderflow\n-  #239 = Utf8               remaining\n-  #240 = Utf8               java/lang/Math\n-  #241 = Utf8               min\n-  #242 = Utf8               (II)I\n-  #243 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Class              #4            // org/apache/commons/io/output/WriterOutputStream$Builder\n+    #4 = Utf8               org/apache/commons/io/output/WriterOutputStream$Builder\n+    #5 = Methodref          #3.#6         // org/apache/commons/io/output/WriterOutputStream$Builder.\"<init>\":()V\n+    #6 = NameAndType        #7:#8         // \"<init>\":()V\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Fieldref           #10.#11       // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #10 = Class              #12           // java/nio/charset/StandardCharsets\n+   #11 = NameAndType        #13:#14       // UTF_16:Ljava/nio/charset/Charset;\n+   #12 = Utf8               java/nio/charset/StandardCharsets\n+   #13 = Utf8               UTF_16\n+   #14 = Utf8               Ljava/nio/charset/Charset;\n+   #15 = Methodref          #16.#17       // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #16 = Class              #18           // java/nio/charset/Charset\n+   #17 = NameAndType        #19:#20       // name:()Ljava/lang/String;\n+   #18 = Utf8               java/nio/charset/Charset\n+   #19 = Utf8               name\n+   #20 = Utf8               ()Ljava/lang/String;\n+   #21 = Methodref          #22.#23       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #22 = Class              #24           // java/lang/String\n+   #23 = NameAndType        #25:#26       // equals:(Ljava/lang/Object;)Z\n+   #24 = Utf8               java/lang/String\n+   #25 = Utf8               equals\n+   #26 = Utf8               (Ljava/lang/Object;)Z\n+   #27 = String             #28           // v\u00e9s\n+   #28 = Utf8               v\u00e9s\n+   #29 = Methodref          #22.#30       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #30 = NameAndType        #31:#32       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #31 = Utf8               getBytes\n+   #32 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #33 = Methodref          #16.#34       // java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n+   #34 = NameAndType        #35:#36       // newDecoder:()Ljava/nio/charset/CharsetDecoder;\n+   #35 = Utf8               newDecoder\n+   #36 = Utf8               ()Ljava/nio/charset/CharsetDecoder;\n+   #37 = Methodref          #38.#39       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #38 = Class              #40           // java/nio/ByteBuffer\n+   #39 = NameAndType        #41:#42       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #40 = Utf8               java/nio/ByteBuffer\n+   #41 = Utf8               allocate\n+   #42 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #43 = Methodref          #22.#44       // java/lang/String.length:()I\n+   #44 = NameAndType        #45:#46       // length:()I\n+   #45 = Utf8               length\n+   #46 = Utf8               ()I\n+   #47 = Methodref          #48.#49       // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+   #48 = Class              #50           // java/nio/CharBuffer\n+   #49 = NameAndType        #41:#51       // allocate:(I)Ljava/nio/CharBuffer;\n+   #50 = Utf8               java/nio/CharBuffer\n+   #51 = Utf8               (I)Ljava/nio/CharBuffer;\n+   #52 = Methodref          #38.#53       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #53 = NameAndType        #54:#55       // put:(B)Ljava/nio/ByteBuffer;\n+   #54 = Utf8               put\n+   #55 = Utf8               (B)Ljava/nio/ByteBuffer;\n+   #56 = Methodref          #38.#57       // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+   #57 = NameAndType        #58:#59       // flip:()Ljava/nio/Buffer;\n+   #58 = Utf8               flip\n+   #59 = Utf8               ()Ljava/nio/Buffer;\n+   #60 = Methodref          #61.#62       // java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n+   #61 = Class              #63           // java/nio/charset/CharsetDecoder\n+   #62 = NameAndType        #64:#65       // decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n+   #63 = Utf8               java/nio/charset/CharsetDecoder\n+   #64 = Utf8               decode\n+   #65 = Utf8               (Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n+   #66 = Class              #67           // java/lang/IllegalArgumentException\n+   #67 = Utf8               java/lang/IllegalArgumentException\n+   #68 = Class              #69           // java/lang/UnsupportedOperationException\n+   #69 = Utf8               java/lang/UnsupportedOperationException\n+   #70 = String             #71           // UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n+   #71 = Utf8               UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n+   #72 = Methodref          #68.#73       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #73 = NameAndType        #7:#74        // \"<init>\":(Ljava/lang/String;)V\n+   #74 = Utf8               (Ljava/lang/String;)V\n+   #75 = Methodref          #38.#76       // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+   #76 = NameAndType        #77:#78       // compact:()Ljava/nio/ByteBuffer;\n+   #77 = Utf8               compact\n+   #78 = Utf8               ()Ljava/nio/ByteBuffer;\n+   #79 = Methodref          #48.#80       // java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n+   #80 = NameAndType        #81:#59       // rewind:()Ljava/nio/Buffer;\n+   #81 = Utf8               rewind\n+   #82 = Methodref          #48.#83       // java/nio/CharBuffer.toString:()Ljava/lang/String;\n+   #83 = NameAndType        #84:#20       // toString:()Ljava/lang/String;\n+   #84 = Utf8               toString\n+   #85 = Methodref          #16.#86       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #86 = NameAndType        #87:#88       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #87 = Utf8               defaultCharset\n+   #88 = Utf8               ()Ljava/nio/charset/Charset;\n+   #89 = Class              #90           // org/apache/commons/io/output/WriterOutputStream\n+   #90 = Utf8               org/apache/commons/io/output/WriterOutputStream\n+   #91 = Methodref          #89.#92       // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+   #92 = NameAndType        #7:#93        // \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+   #93 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+   #94 = Methodref          #95.#96       // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #95 = Class              #97           // org/apache/commons/io/Charsets\n+   #96 = NameAndType        #98:#99       // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #97 = Utf8               org/apache/commons/io/Charsets\n+   #98 = Utf8               toCharset\n+   #99 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #100 = Fieldref           #101.#102     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+  #101 = Class              #103          // java/nio/charset/CodingErrorAction\n+  #102 = NameAndType        #104:#105     // REPLACE:Ljava/nio/charset/CodingErrorAction;\n+  #103 = Utf8               java/nio/charset/CodingErrorAction\n+  #104 = Utf8               REPLACE\n+  #105 = Utf8               Ljava/nio/charset/CodingErrorAction;\n+  #106 = Methodref          #61.#107      // java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+  #107 = NameAndType        #108:#109     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+  #108 = Utf8               onMalformedInput\n+  #109 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+  #110 = Methodref          #61.#111      // java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+  #111 = NameAndType        #112:#109     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+  #112 = Utf8               onUnmappableCharacter\n+  #113 = String             #114          // ?\n+  #114 = Utf8               ?\n+  #115 = Methodref          #61.#116      // java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n+  #116 = NameAndType        #117:#118     // replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n+  #117 = Utf8               replaceWith\n+  #118 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n+  #119 = Methodref          #89.#120      // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n+  #120 = NameAndType        #7:#121       // \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n+  #121 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n+  #122 = Methodref          #123.#6       // java/io/OutputStream.\"<init>\":()V\n+  #123 = Class              #124          // java/io/OutputStream\n+  #124 = Utf8               java/io/OutputStream\n+  #125 = Fieldref           #89.#126      // org/apache/commons/io/output/WriterOutputStream.decoderIn:Ljava/nio/ByteBuffer;\n+  #126 = NameAndType        #127:#128     // decoderIn:Ljava/nio/ByteBuffer;\n+  #127 = Utf8               decoderIn\n+  #128 = Utf8               Ljava/nio/ByteBuffer;\n+  #129 = Methodref          #130.#131     // org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n+  #130 = Class              #132          // org/apache/commons/io/charset/CharsetDecoders\n+  #131 = NameAndType        #133:#134     // toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n+  #132 = Utf8               org/apache/commons/io/charset/CharsetDecoders\n+  #133 = Utf8               toCharsetDecoder\n+  #134 = Utf8               (Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n+  #135 = Methodref          #61.#136      // java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;\n+  #136 = NameAndType        #137:#88      // charset:()Ljava/nio/charset/Charset;\n+  #137 = Utf8               charset\n+  #138 = Methodref          #89.#139      // org/apache/commons/io/output/WriterOutputStream.checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n+  #139 = NameAndType        #140:#141     // checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n+  #140 = Utf8               checkIbmJdkWithBrokenUTF16\n+  #141 = Utf8               (Ljava/nio/charset/Charset;)V\n+  #142 = Fieldref           #89.#143      // org/apache/commons/io/output/WriterOutputStream.writer:Ljava/io/Writer;\n+  #143 = NameAndType        #144:#145     // writer:Ljava/io/Writer;\n+  #144 = Utf8               writer\n+  #145 = Utf8               Ljava/io/Writer;\n+  #146 = Fieldref           #89.#147      // org/apache/commons/io/output/WriterOutputStream.decoder:Ljava/nio/charset/CharsetDecoder;\n+  #147 = NameAndType        #148:#149     // decoder:Ljava/nio/charset/CharsetDecoder;\n+  #148 = Utf8               decoder\n+  #149 = Utf8               Ljava/nio/charset/CharsetDecoder;\n+  #150 = Fieldref           #89.#151      // org/apache/commons/io/output/WriterOutputStream.writeImmediately:Z\n+  #151 = NameAndType        #152:#153     // writeImmediately:Z\n+  #152 = Utf8               writeImmediately\n+  #153 = Utf8               Z\n+  #154 = Fieldref           #89.#155      // org/apache/commons/io/output/WriterOutputStream.decoderOut:Ljava/nio/CharBuffer;\n+  #155 = NameAndType        #156:#157     // decoderOut:Ljava/nio/CharBuffer;\n+  #156 = Utf8               decoderOut\n+  #157 = Utf8               Ljava/nio/CharBuffer;\n+  #158 = Methodref          #89.#159      // org/apache/commons/io/output/WriterOutputStream.\"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n+  #159 = NameAndType        #7:#160       // \"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n+  #160 = Utf8               (Ljava/io/Writer;Ljava/lang/String;IZ)V\n+  #161 = Methodref          #95.#162      // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #162 = NameAndType        #98:#163      // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #163 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #164 = Methodref          #89.#165      // org/apache/commons/io/output/WriterOutputStream.processInput:(Z)V\n+  #165 = NameAndType        #166:#167     // processInput:(Z)V\n+  #166 = Utf8               processInput\n+  #167 = Utf8               (Z)V\n+  #168 = Methodref          #89.#169      // org/apache/commons/io/output/WriterOutputStream.flushOutput:()V\n+  #169 = NameAndType        #170:#8       // flushOutput:()V\n+  #170 = Utf8               flushOutput\n+  #171 = Methodref          #172.#173     // java/io/Writer.close:()V\n+  #172 = Class              #174          // java/io/Writer\n+  #173 = NameAndType        #175:#8       // close:()V\n+  #174 = Utf8               java/io/Writer\n+  #175 = Utf8               close\n+  #176 = Methodref          #172.#177     // java/io/Writer.flush:()V\n+  #177 = NameAndType        #178:#8       // flush:()V\n+  #178 = Utf8               flush\n+  #179 = Methodref          #48.#180      // java/nio/CharBuffer.position:()I\n+  #180 = NameAndType        #181:#46      // position:()I\n+  #181 = Utf8               position\n+  #182 = Methodref          #48.#183      // java/nio/CharBuffer.array:()[C\n+  #183 = NameAndType        #184:#185     // array:()[C\n+  #184 = Utf8               array\n+  #185 = Utf8               ()[C\n+  #186 = Methodref          #172.#187     // java/io/Writer.write:([CII)V\n+  #187 = NameAndType        #188:#189     // write:([CII)V\n+  #188 = Utf8               write\n+  #189 = Utf8               ([CII)V\n+  #190 = Methodref          #191.#192     // java/nio/charset/CoderResult.isOverflow:()Z\n+  #191 = Class              #193          // java/nio/charset/CoderResult\n+  #192 = NameAndType        #194:#195     // isOverflow:()Z\n+  #193 = Utf8               java/nio/charset/CoderResult\n+  #194 = Utf8               isOverflow\n+  #195 = Utf8               ()Z\n+  #196 = Methodref          #191.#197     // java/nio/charset/CoderResult.isUnderflow:()Z\n+  #197 = NameAndType        #198:#195     // isUnderflow:()Z\n+  #198 = Utf8               isUnderflow\n+  #199 = Class              #200          // java/io/IOException\n+  #200 = Utf8               java/io/IOException\n+  #201 = String             #202          // Unexpected coder result\n+  #202 = Utf8               Unexpected coder result\n+  #203 = Methodref          #199.#73      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #204 = Methodref          #89.#205      // org/apache/commons/io/output/WriterOutputStream.write:([BII)V\n+  #205 = NameAndType        #188:#206     // write:([BII)V\n+  #206 = Utf8               ([BII)V\n+  #207 = Methodref          #38.#208      // java/nio/ByteBuffer.remaining:()I\n+  #208 = NameAndType        #209:#46      // remaining:()I\n+  #209 = Utf8               remaining\n+  #210 = Methodref          #211.#212     // java/lang/Math.min:(II)I\n+  #211 = Class              #213          // java/lang/Math\n+  #212 = NameAndType        #214:#215     // min:(II)I\n+  #213 = Utf8               java/lang/Math\n+  #214 = Utf8               min\n+  #215 = Utf8               (II)I\n+  #216 = Methodref          #38.#217      // java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;\n+  #217 = NameAndType        #54:#218      // put:([BII)Ljava/nio/ByteBuffer;\n+  #218 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+  #219 = Utf8               BUFFER_SIZE\n+  #220 = Utf8               I\n+  #221 = Utf8               ConstantValue\n+  #222 = Integer            8192\n+  #223 = Utf8               builder\n+  #224 = Utf8               ()Lorg/apache/commons/io/output/WriterOutputStream$Builder;\n+  #225 = Utf8               Code\n+  #226 = Utf8               LineNumberTable\n+  #227 = Utf8               StackMapTable\n+  #228 = Class              #229          // \"[B\"\n+  #229 = Utf8               [B\n+  #230 = Utf8               (Ljava/io/Writer;)V\n+  #231 = Utf8               Deprecated\n+  #232 = Utf8               RuntimeVisibleAnnotations\n+  #233 = Utf8               Ljava/lang/Deprecated;\n+  #234 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/Charset;)V\n+  #235 = Utf8               (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V\n+  #236 = Utf8               (Ljava/io/Writer;Ljava/lang/String;)V\n+  #237 = Utf8               Exceptions\n+  #238 = Utf8               ([B)V\n+  #239 = Utf8               (I)V\n+  #240 = Utf8               SourceFile\n+  #241 = Utf8               WriterOutputStream.java\n+  #242 = Utf8               InnerClasses\n+  #243 = Utf8               Builder\n {\n   private static final int BUFFER_SIZE = 8192;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8192\n \n   private final java.io.Writer writer;\n@@ -278,339 +278,339 @@\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public static org.apache.commons.io.output.WriterOutputStream$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/output/WriterOutputStream$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #2                  // class org/apache/commons/io/output/WriterOutputStream$Builder\n+         0: new           #3                  // class org/apache/commons/io/output/WriterOutputStream$Builder\n          3: dup\n-         4: invokespecial #3                  // Method org/apache/commons/io/output/WriterOutputStream$Builder.\"<init>\":()V\n+         4: invokespecial #5                  // Method org/apache/commons/io/output/WriterOutputStream$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 161: 0\n \n   private static void checkIbmJdkWithBrokenUTF16(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n-      stack=6, locals=9, args_size=1\n-         0: getstatic     #4                  // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-         3: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+      stack=6, locals=8, args_size=1\n+         0: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+         3: invokevirtual #15                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n          6: aload_0\n-         7: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n-        10: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         7: invokevirtual #15                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+        10: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         13: ifne          17\n         16: return\n-        17: ldc           #7                  // String v\u00e9s\n+        17: ldc           #27                 // String v\u00e9s\n         19: aload_0\n-        20: invokevirtual #8                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        23: astore_2\n+        20: invokevirtual #29                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        23: astore_1\n         24: aload_0\n-        25: invokevirtual #9                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n-        28: astore_3\n+        25: invokevirtual #33                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n+        28: astore_2\n         29: bipush        16\n-        31: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-        34: astore        4\n-        36: ldc           #7                  // String v\u00e9s\n-        38: invokevirtual #11                 // Method java/lang/String.length:()I\n-        41: invokestatic  #12                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-        44: astore        5\n-        46: aload_2\n-        47: arraylength\n-        48: istore        6\n-        50: iconst_0\n-        51: istore        7\n-        53: iload         7\n-        55: iload         6\n-        57: if_icmpge     126\n-        60: aload         4\n-        62: aload_2\n-        63: iload         7\n-        65: baload\n-        66: invokevirtual #13                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-        69: pop\n-        70: aload         4\n-        72: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-        75: pop\n-        76: aload_3\n-        77: aload         4\n-        79: aload         5\n-        81: iload         7\n-        83: iload         6\n-        85: iconst_1\n-        86: isub\n-        87: if_icmpne     94\n-        90: iconst_1\n-        91: goto          95\n-        94: iconst_0\n-        95: invokevirtual #15                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n-        98: pop\n-        99: goto          114\n-       102: astore        8\n-       104: new           #17                 // class java/lang/UnsupportedOperationException\n-       107: dup\n-       108: ldc           #18                 // String UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n-       110: invokespecial #19                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-       113: athrow\n-       114: aload         4\n-       116: invokevirtual #20                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n-       119: pop\n-       120: iinc          7, 1\n-       123: goto          53\n-       126: aload         5\n-       128: invokevirtual #21                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n-       131: pop\n-       132: ldc           #7                  // String v\u00e9s\n-       134: aload         5\n-       136: invokevirtual #22                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;\n-       139: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       142: ifne          155\n-       145: new           #17                 // class java/lang/UnsupportedOperationException\n-       148: dup\n-       149: ldc           #18                 // String UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n-       151: invokespecial #19                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-       154: athrow\n-       155: return\n+        31: invokestatic  #37                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        34: astore_3\n+        35: ldc           #27                 // String v\u00e9s\n+        37: invokevirtual #43                 // Method java/lang/String.length:()I\n+        40: invokestatic  #47                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+        43: astore        4\n+        45: aload_1\n+        46: arraylength\n+        47: istore        5\n+        49: iconst_0\n+        50: istore        6\n+        52: iload         6\n+        54: iload         5\n+        56: if_icmpge     121\n+        59: aload_3\n+        60: aload_1\n+        61: iload         6\n+        63: baload\n+        64: invokevirtual #52                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+        67: pop\n+        68: aload_3\n+        69: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+        72: pop\n+        73: aload_2\n+        74: aload_3\n+        75: aload         4\n+        77: iload         6\n+        79: iload         5\n+        81: iconst_1\n+        82: isub\n+        83: if_icmpne     90\n+        86: iconst_1\n+        87: goto          91\n+        90: iconst_0\n+        91: invokevirtual #60                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n+        94: pop\n+        95: goto          110\n+        98: astore        7\n+       100: new           #68                 // class java/lang/UnsupportedOperationException\n+       103: dup\n+       104: ldc           #70                 // String UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n+       106: invokespecial #72                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+       109: athrow\n+       110: aload_3\n+       111: invokevirtual #75                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+       114: pop\n+       115: iinc          6, 1\n+       118: goto          52\n+       121: aload         4\n+       123: invokevirtual #79                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n+       126: pop\n+       127: ldc           #27                 // String v\u00e9s\n+       129: aload         4\n+       131: invokevirtual #82                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;\n+       134: invokevirtual #21                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       137: ifne          150\n+       140: new           #68                 // class java/lang/UnsupportedOperationException\n+       143: dup\n+       144: ldc           #70                 // String UTF-16 requested when running on an IBM JDK with broken UTF-16 support. Please find a JDK that supports UTF-16 if you intend to use UF-16 with WriterOutputStream\n+       146: invokespecial #72                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+       149: athrow\n+       150: return\n       Exception table:\n          from    to  target type\n-            76    99   102   Class java/lang/IllegalArgumentException\n+            73    95    98   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n         line 170: 0\n         line 171: 16\n         line 174: 17\n         line 176: 24\n         line 177: 29\n-        line 178: 36\n-        line 179: 46\n-        line 180: 50\n-        line 181: 60\n-        line 182: 70\n-        line 184: 76\n-        line 188: 99\n-        line 185: 102\n-        line 186: 104\n-        line 189: 114\n-        line 180: 120\n-        line 191: 126\n-        line 192: 132\n-        line 193: 145\n-        line 197: 155\n+        line 178: 35\n+        line 179: 45\n+        line 180: 49\n+        line 181: 59\n+        line 182: 68\n+        line 184: 73\n+        line 188: 95\n+        line 185: 98\n+        line 186: 100\n+        line 189: 110\n+        line 180: 115\n+        line 191: 121\n+        line 192: 127\n+        line 193: 140\n+        line 197: 150\n       StackMapTable: number_of_entries = 8\n         frame_type = 17 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 35\n-          locals = [ class java/nio/charset/Charset, top, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n+          offset_delta = 34\n+          locals = [ class java/nio/charset/Charset, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n           stack = []\n         frame_type = 255 /* full_frame */\n-          offset_delta = 40\n-          locals = [ class java/nio/charset/Charset, top, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n+          offset_delta = 37\n+          locals = [ class java/nio/charset/Charset, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n           stack = [ class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n-          locals = [ class java/nio/charset/Charset, top, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n+          locals = [ class java/nio/charset/Charset, class \"[B\", class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int, int ]\n           stack = [ class java/nio/charset/CharsetDecoder, class java/nio/ByteBuffer, class java/nio/CharBuffer, int ]\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 11 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 11\n+          offset_delta = 10\n         frame_type = 28 /* same */\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer);\n     descriptor: (Ljava/io/Writer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #23                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         2: invokestatic  #85                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n          5: sipush        8192\n          8: iconst_0\n-         9: invokespecial #25                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+         9: invokespecial #91                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n         12: return\n       LineNumberTable:\n         line 223: 0\n         line 224: 12\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset);\n     descriptor: (Ljava/io/Writer;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n          6: iconst_0\n-         7: invokespecial #25                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+         7: invokespecial #91                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n         10: return\n       LineNumberTable:\n         line 236: 0\n         line 237: 10\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.Charset, int, boolean);\n     descriptor: (Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #26                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-         6: invokevirtual #9                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n-         9: getstatic     #27                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        12: invokevirtual #28                 // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-        15: getstatic     #27                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        18: invokevirtual #29                 // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n-        21: ldc           #30                 // String ?\n-        23: invokevirtual #31                 // Method java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n+         3: invokestatic  #94                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+         6: invokevirtual #33                 // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n+         9: getstatic     #100                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        12: invokevirtual #106                // Method java/nio/charset/CharsetDecoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+        15: getstatic     #100                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        18: invokevirtual #110                // Method java/nio/charset/CharsetDecoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;\n+        21: ldc           #113                // String ?\n+        23: invokevirtual #115                // Method java/nio/charset/CharsetDecoder.replaceWith:(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;\n         26: iload_3\n         27: iload         4\n-        29: invokespecial #32                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n+        29: invokespecial #119                // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n         32: return\n       LineNumberTable:\n         line 253: 0\n         line 254: 3\n         line 255: 12\n         line 256: 18\n         line 257: 23\n         line 253: 29\n         line 261: 32\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder);\n     descriptor: (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n          6: iconst_0\n-         7: invokespecial #32                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n+         7: invokespecial #119                // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n         10: return\n       LineNumberTable:\n         line 274: 0\n         line 275: 10\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.nio.charset.CharsetDecoder, int, boolean);\n     descriptor: (Ljava/io/Writer;Ljava/nio/charset/CharsetDecoder;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n-         1: invokespecial #33                 // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #122                // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n          5: sipush        128\n-         8: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-        11: putfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n+         8: invokestatic  #37                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        11: putfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n         14: aload_2\n-        15: invokestatic  #35                 // Method org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n-        18: invokevirtual #36                 // Method java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;\n-        21: invokestatic  #37                 // Method checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n+        15: invokestatic  #129                // Method org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n+        18: invokevirtual #135                // Method java/nio/charset/CharsetDecoder.charset:()Ljava/nio/charset/Charset;\n+        21: invokestatic  #138                // Method checkIbmJdkWithBrokenUTF16:(Ljava/nio/charset/Charset;)V\n         24: aload_0\n         25: aload_1\n-        26: putfield      #38                 // Field writer:Ljava/io/Writer;\n+        26: putfield      #142                // Field writer:Ljava/io/Writer;\n         29: aload_0\n         30: aload_2\n-        31: invokestatic  #35                 // Method org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n-        34: putfield      #39                 // Field decoder:Ljava/nio/charset/CharsetDecoder;\n+        31: invokestatic  #129                // Method org/apache/commons/io/charset/CharsetDecoders.toCharsetDecoder:(Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n+        34: putfield      #146                // Field decoder:Ljava/nio/charset/CharsetDecoder;\n         37: aload_0\n         38: iload         4\n-        40: putfield      #40                 // Field writeImmediately:Z\n+        40: putfield      #150                // Field writeImmediately:Z\n         43: aload_0\n         44: iload_3\n-        45: invokestatic  #12                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-        48: putfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n+        45: invokestatic  #47                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+        48: putfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n         51: return\n       LineNumberTable:\n         line 290: 0\n         line 207: 4\n         line 291: 14\n         line 292: 24\n         line 293: 29\n         line 294: 37\n         line 295: 43\n         line 296: 51\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String);\n     descriptor: (Ljava/io/Writer;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n          6: iconst_0\n-         7: invokespecial #42                 // Method \"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n+         7: invokespecial #158                // Method \"<init>\":(Ljava/io/Writer;Ljava/lang/String;IZ)V\n         10: return\n       LineNumberTable:\n         line 308: 0\n         line 309: 10\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.WriterOutputStream(java.io.Writer, java.lang.String, int, boolean);\n     descriptor: (Ljava/io/Writer;Ljava/lang/String;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #43                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         3: invokestatic  #161                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n          6: iload_3\n          7: iload         4\n-         9: invokespecial #25                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n+         9: invokespecial #91                 // Method \"<init>\":(Ljava/io/Writer;Ljava/nio/charset/Charset;IZ)V\n         12: return\n       LineNumberTable:\n         line 324: 0\n         line 325: 12\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #93()\n+      0: #233()\n         java.lang.Deprecated\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #44                 // Method processInput:(Z)V\n+         2: invokespecial #164                // Method processInput:(Z)V\n          5: aload_0\n-         6: invokespecial #45                 // Method flushOutput:()V\n+         6: invokespecial #168                // Method flushOutput:()V\n          9: aload_0\n-        10: getfield      #38                 // Field writer:Ljava/io/Writer;\n-        13: invokevirtual #46                 // Method java/io/Writer.close:()V\n+        10: getfield      #142                // Field writer:Ljava/io/Writer;\n+        13: invokevirtual #171                // Method java/io/Writer.close:()V\n         16: return\n       LineNumberTable:\n         line 335: 0\n         line 336: 5\n         line 337: 9\n         line 338: 16\n     Exceptions:\n@@ -618,48 +618,48 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #45                 // Method flushOutput:()V\n+         1: invokespecial #168                // Method flushOutput:()V\n          4: aload_0\n-         5: getfield      #38                 // Field writer:Ljava/io/Writer;\n-         8: invokevirtual #47                 // Method java/io/Writer.flush:()V\n+         5: getfield      #142                // Field writer:Ljava/io/Writer;\n+         8: invokevirtual #176                // Method java/io/Writer.flush:()V\n         11: return\n       LineNumberTable:\n         line 348: 0\n         line 349: 4\n         line 350: 11\n     Exceptions:\n       throws java.io.IOException\n \n   private void flushOutput() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n-         4: invokevirtual #48                 // Method java/nio/CharBuffer.position:()I\n+         1: getfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n+         4: invokevirtual #179                // Method java/nio/CharBuffer.position:()I\n          7: ifle          40\n         10: aload_0\n-        11: getfield      #38                 // Field writer:Ljava/io/Writer;\n+        11: getfield      #142                // Field writer:Ljava/io/Writer;\n         14: aload_0\n-        15: getfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n-        18: invokevirtual #49                 // Method java/nio/CharBuffer.array:()[C\n+        15: getfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n+        18: invokevirtual #182                // Method java/nio/CharBuffer.array:()[C\n         21: iconst_0\n         22: aload_0\n-        23: getfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n-        26: invokevirtual #48                 // Method java/nio/CharBuffer.position:()I\n-        29: invokevirtual #50                 // Method java/io/Writer.write:([CII)V\n+        23: getfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n+        26: invokevirtual #179                // Method java/nio/CharBuffer.position:()I\n+        29: invokevirtual #186                // Method java/io/Writer.write:([CII)V\n         32: aload_0\n-        33: getfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n-        36: invokevirtual #21                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n+        33: getfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n+        36: invokevirtual #79                 // Method java/nio/CharBuffer.rewind:()Ljava/nio/Buffer;\n         39: pop\n         40: return\n       LineNumberTable:\n         line 358: 0\n         line 359: 10\n         line 360: 32\n         line 362: 40\n@@ -670,44 +670,44 @@\n \n   private void processInput(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n-         4: invokevirtual #14                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+         1: getfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n+         4: invokevirtual #56                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n          7: pop\n          8: aload_0\n-         9: getfield      #39                 // Field decoder:Ljava/nio/charset/CharsetDecoder;\n+         9: getfield      #146                // Field decoder:Ljava/nio/charset/CharsetDecoder;\n         12: aload_0\n-        13: getfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n+        13: getfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n         16: aload_0\n-        17: getfield      #41                 // Field decoderOut:Ljava/nio/CharBuffer;\n+        17: getfield      #154                // Field decoderOut:Ljava/nio/CharBuffer;\n         20: iload_1\n-        21: invokevirtual #15                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n+        21: invokevirtual #60                 // Method java/nio/charset/CharsetDecoder.decode:(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;\n         24: astore_2\n         25: aload_2\n-        26: invokevirtual #51                 // Method java/nio/charset/CoderResult.isOverflow:()Z\n+        26: invokevirtual #190                // Method java/nio/charset/CoderResult.isOverflow:()Z\n         29: ifeq          39\n         32: aload_0\n-        33: invokespecial #45                 // Method flushOutput:()V\n+        33: invokespecial #168                // Method flushOutput:()V\n         36: goto          8\n         39: aload_2\n-        40: invokevirtual #52                 // Method java/nio/charset/CoderResult.isUnderflow:()Z\n+        40: invokevirtual #196                // Method java/nio/charset/CoderResult.isUnderflow:()Z\n         43: ifeq          49\n         46: goto          59\n-        49: new           #53                 // class java/io/IOException\n+        49: new           #199                // class java/io/IOException\n         52: dup\n-        53: ldc           #54                 // String Unexpected coder result\n-        55: invokespecial #55                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        53: ldc           #201                // String Unexpected coder result\n+        55: invokespecial #203                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         58: athrow\n         59: aload_0\n-        60: getfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n-        63: invokevirtual #20                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+        60: getfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n+        63: invokevirtual #75                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n         66: pop\n         67: return\n       LineNumberTable:\n         line 372: 0\n         line 375: 8\n         line 376: 25\n         line 377: 32\n@@ -732,15 +732,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #56                 // Method write:([BII)V\n+         5: invokevirtual #204                // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 398: 0\n         line 399: 8\n     Exceptions:\n       throws java.io.IOException\n \n@@ -749,42 +749,42 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifle          47\n          4: iload_3\n          5: aload_0\n-         6: getfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n-         9: invokevirtual #57                 // Method java/nio/ByteBuffer.remaining:()I\n-        12: invokestatic  #58                 // Method java/lang/Math.min:(II)I\n+         6: getfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n+         9: invokevirtual #207                // Method java/nio/ByteBuffer.remaining:()I\n+        12: invokestatic  #210                // Method java/lang/Math.min:(II)I\n         15: istore        4\n         17: aload_0\n-        18: getfield      #34                 // Field decoderIn:Ljava/nio/ByteBuffer;\n+        18: getfield      #125                // Field decoderIn:Ljava/nio/ByteBuffer;\n         21: aload_1\n         22: iload_2\n         23: iload         4\n-        25: invokevirtual #59                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;\n+        25: invokevirtual #216                // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;\n         28: pop\n         29: aload_0\n         30: iconst_0\n-        31: invokespecial #44                 // Method processInput:(Z)V\n+        31: invokespecial #164                // Method processInput:(Z)V\n         34: iload_3\n         35: iload         4\n         37: isub\n         38: istore_3\n         39: iload_2\n         40: iload         4\n         42: iadd\n         43: istore_2\n         44: goto          0\n         47: aload_0\n-        48: getfield      #40                 // Field writeImmediately:Z\n+        48: getfield      #150                // Field writeImmediately:Z\n         51: ifeq          58\n         54: aload_0\n-        55: invokespecial #45                 // Method flushOutput:()V\n+        55: invokespecial #168                // Method flushOutput:()V\n         58: return\n       LineNumberTable:\n         line 411: 0\n         line 412: 4\n         line 413: 17\n         line 414: 29\n         line 415: 34\n@@ -811,18 +811,18 @@\n          4: dup\n          5: iconst_0\n          6: iload_1\n          7: i2b\n          8: bastore\n          9: iconst_0\n         10: iconst_1\n-        11: invokevirtual #56                 // Method write:([BII)V\n+        11: invokevirtual #204                // Method write:([BII)V\n         14: return\n       LineNumberTable:\n         line 431: 0\n         line 432: 14\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"WriterOutputStream.java\"\n InnerClasses:\n-  public static #61= #2 of #24;           // Builder=class org/apache/commons/io/output/WriterOutputStream$Builder of class org/apache/commons/io/output/WriterOutputStream\n+  public static #243= #3 of #89;          // Builder=class org/apache/commons/io/output/WriterOutputStream$Builder of class org/apache/commons/io/output/WriterOutputStream\n"}]}
