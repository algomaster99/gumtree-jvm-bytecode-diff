{"diffoscope-json-version": 1, "source1": "first/GzipCompressorInputStream.class", "source2": "second/GzipCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -36,20 +36,41 @@\n     private final GzipParameters parameters;\n     \n     public static boolean matches(final byte[] signature, final int length) {\n         return length >= 2 && signature[0] == 31 && signature[1] == -117;\n     }\n     \n     private static byte[] readToNull(final DataInput inData) throws IOException {\n-        try (final ByteArrayOutputStream bos = new ByteArrayOutputStream()) {\n-            int b = 0;\n-            while ((b = inData.readUnsignedByte()) != 0) {\n-                bos.write(b);\n+        Throwable t = null;\n+        try {\n+            final ByteArrayOutputStream bos = new ByteArrayOutputStream();\n+            try {\n+                int b = 0;\n+                while ((b = inData.readUnsignedByte()) != 0) {\n+                    bos.write(b);\n+                }\n+                return bos.toByteArray();\n+            }\n+            finally {\n+                if (bos != null) {\n+                    bos.close();\n+                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n+            }\n+            else {\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n             }\n-            return bos.toByteArray();\n         }\n     }\n     \n     public GzipCompressorInputStream(final InputStream inputStream) throws IOException {\n         this(inputStream, false);\n     }\n     \n"}]}
