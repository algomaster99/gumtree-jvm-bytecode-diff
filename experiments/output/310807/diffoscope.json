{"diffoscope-json-version": 1, "source1": "first/ChecksumVerifyingInputStream.class", "source2": "second/ChecksumVerifyingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,83 +1,83 @@\n-  SHA-256 checksum 993afebdcbab0fb86b8a2c53dae5059e1cd6a7136fc0a6b32e5dec460c7503f9\n+  SHA-256 checksum 5e50e80d378de70785013588b9e630337c78a3f5f4f775bd956417cd764f0327\n   Compiled from \"ChecksumVerifyingInputStream.java\"\n public class org.apache.commons.compress.utils.ChecksumVerifyingInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  super_class: #18                        // java/io/InputStream\n+  this_class: #8                          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+  super_class: #2                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #18.#44        // java/io/InputStream.\"<init>\":()V\n-   #2 = Fieldref           #17.#45        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n-   #3 = Fieldref           #17.#46        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n-   #4 = Fieldref           #17.#47        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n-   #5 = Fieldref           #17.#48        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n-   #6 = Methodref          #18.#49        // java/io/InputStream.read:()I\n-   #7 = InterfaceMethodref #50.#51        // java/util/zip/Checksum.update:(I)V\n-   #8 = InterfaceMethodref #50.#52        // java/util/zip/Checksum.getValue:()J\n-   #9 = Class              #53            // java/io/IOException\n-  #10 = String             #54            // Checksum verification failed\n-  #11 = Methodref          #9.#55         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = Methodref          #17.#56        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n-  #13 = Methodref          #18.#56        // java/io/InputStream.read:([BII)I\n-  #14 = InterfaceMethodref #50.#57        // java/util/zip/Checksum.update:([BII)V\n-  #15 = Methodref          #17.#49        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n-  #16 = Methodref          #18.#58        // java/io/InputStream.close:()V\n-  #17 = Class              #59            // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  #18 = Class              #60            // java/io/InputStream\n-  #19 = Utf8               in\n-  #20 = Utf8               Ljava/io/InputStream;\n-  #21 = Utf8               bytesRemaining\n-  #22 = Utf8               J\n-  #23 = Utf8               expectedChecksum\n-  #24 = Utf8               checksum\n-  #25 = Utf8               Ljava/util/zip/Checksum;\n-  #26 = Utf8               <init>\n-  #27 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               read\n-  #31 = Utf8               ()I\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               Exceptions\n-  #34 = Utf8               ([B)I\n-  #35 = Utf8               ([BII)I\n-  #36 = Utf8               skip\n-  #37 = Utf8               (J)J\n-  #38 = Utf8               close\n-  #39 = Utf8               ()V\n-  #40 = Utf8               getBytesRemaining\n-  #41 = Utf8               ()J\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               ChecksumVerifyingInputStream.java\n-  #44 = NameAndType        #26:#39        // \"<init>\":()V\n-  #45 = NameAndType        #24:#25        // checksum:Ljava/util/zip/Checksum;\n-  #46 = NameAndType        #19:#20        // in:Ljava/io/InputStream;\n-  #47 = NameAndType        #23:#22        // expectedChecksum:J\n-  #48 = NameAndType        #21:#22        // bytesRemaining:J\n-  #49 = NameAndType        #30:#31        // read:()I\n-  #50 = Class              #61            // java/util/zip/Checksum\n-  #51 = NameAndType        #62:#63        // update:(I)V\n-  #52 = NameAndType        #64:#41        // getValue:()J\n-  #53 = Utf8               java/io/IOException\n-  #54 = Utf8               Checksum verification failed\n-  #55 = NameAndType        #26:#65        // \"<init>\":(Ljava/lang/String;)V\n-  #56 = NameAndType        #30:#35        // read:([BII)I\n-  #57 = NameAndType        #62:#66        // update:([BII)V\n-  #58 = NameAndType        #38:#39        // close:()V\n-  #59 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  #60 = Utf8               java/io/InputStream\n-  #61 = Utf8               java/util/zip/Checksum\n-  #62 = Utf8               update\n-  #63 = Utf8               (I)V\n-  #64 = Utf8               getValue\n-  #65 = Utf8               (Ljava/lang/String;)V\n-  #66 = Utf8               ([BII)V\n+   #1 = Methodref          #2.#3          // java/io/InputStream.\"<init>\":()V\n+   #2 = Class              #4             // java/io/InputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n+   #8 = Class              #10            // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+   #9 = NameAndType        #11:#12        // checksum:Ljava/util/zip/Checksum;\n+  #10 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+  #11 = Utf8               checksum\n+  #12 = Utf8               Ljava/util/zip/Checksum;\n+  #13 = Fieldref           #8.#14         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n+  #14 = NameAndType        #15:#16        // in:Ljava/io/InputStream;\n+  #15 = Utf8               in\n+  #16 = Utf8               Ljava/io/InputStream;\n+  #17 = Fieldref           #8.#18         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n+  #18 = NameAndType        #19:#20        // expectedChecksum:J\n+  #19 = Utf8               expectedChecksum\n+  #20 = Utf8               J\n+  #21 = Fieldref           #8.#22         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n+  #22 = NameAndType        #23:#20        // bytesRemaining:J\n+  #23 = Utf8               bytesRemaining\n+  #24 = Methodref          #2.#25         // java/io/InputStream.read:()I\n+  #25 = NameAndType        #26:#27        // read:()I\n+  #26 = Utf8               read\n+  #27 = Utf8               ()I\n+  #28 = InterfaceMethodref #29.#30        // java/util/zip/Checksum.update:(I)V\n+  #29 = Class              #31            // java/util/zip/Checksum\n+  #30 = NameAndType        #32:#33        // update:(I)V\n+  #31 = Utf8               java/util/zip/Checksum\n+  #32 = Utf8               update\n+  #33 = Utf8               (I)V\n+  #34 = InterfaceMethodref #29.#35        // java/util/zip/Checksum.getValue:()J\n+  #35 = NameAndType        #36:#37        // getValue:()J\n+  #36 = Utf8               getValue\n+  #37 = Utf8               ()J\n+  #38 = Class              #39            // java/io/IOException\n+  #39 = Utf8               java/io/IOException\n+  #40 = String             #41            // Checksum verification failed\n+  #41 = Utf8               Checksum verification failed\n+  #42 = Methodref          #38.#43        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #43 = NameAndType        #5:#44         // \"<init>\":(Ljava/lang/String;)V\n+  #44 = Utf8               (Ljava/lang/String;)V\n+  #45 = Methodref          #8.#46         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n+  #46 = NameAndType        #26:#47        // read:([BII)I\n+  #47 = Utf8               ([BII)I\n+  #48 = Methodref          #2.#46         // java/io/InputStream.read:([BII)I\n+  #49 = InterfaceMethodref #29.#50        // java/util/zip/Checksum.update:([BII)V\n+  #50 = NameAndType        #32:#51        // update:([BII)V\n+  #51 = Utf8               ([BII)V\n+  #52 = Methodref          #8.#25         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n+  #53 = Methodref          #2.#54         // java/io/InputStream.close:()V\n+  #54 = NameAndType        #55:#6         // close:()V\n+  #55 = Utf8               close\n+  #56 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n+  #57 = Utf8               Code\n+  #58 = Utf8               LineNumberTable\n+  #59 = Utf8               StackMapTable\n+  #60 = Utf8               Exceptions\n+  #61 = Utf8               ([B)I\n+  #62 = Utf8               skip\n+  #63 = Utf8               (J)J\n+  #64 = Utf8               getBytesRemaining\n+  #65 = Utf8               SourceFile\n+  #66 = Utf8               ChecksumVerifyingInputStream.java\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long bytesRemaining;\n     descriptor: J\n@@ -96,24 +96,24 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=5\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+         6: putfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field in:Ljava/io/InputStream;\n+        11: putfield      #13                 // Field in:Ljava/io/InputStream;\n         14: aload_0\n         15: lload         5\n-        17: putfield      #4                  // Field expectedChecksum:J\n+        17: putfield      #17                 // Field expectedChecksum:J\n         20: aload_0\n         21: lload_3\n-        22: putfield      #5                  // Field bytesRemaining:J\n+        22: putfield      #21                 // Field bytesRemaining:J\n         25: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 4\n         line 39: 9\n         line 40: 14\n         line 41: 20\n@@ -121,52 +121,52 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytesRemaining:J\n+         1: getfield      #21                 // Field bytesRemaining:J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          11\n          9: iconst_m1\n         10: ireturn\n         11: aload_0\n-        12: getfield      #3                  // Field in:Ljava/io/InputStream;\n-        15: invokevirtual #6                  // Method java/io/InputStream.read:()I\n+        12: getfield      #13                 // Field in:Ljava/io/InputStream;\n+        15: invokevirtual #24                 // Method java/io/InputStream.read:()I\n         18: istore_1\n         19: iload_1\n         20: iflt          43\n         23: aload_0\n-        24: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n         27: iload_1\n-        28: invokeinterface #7,  2            // InterfaceMethod java/util/zip/Checksum.update:(I)V\n+        28: invokeinterface #28,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V\n         33: aload_0\n         34: dup\n-        35: getfield      #5                  // Field bytesRemaining:J\n+        35: getfield      #21                 // Field bytesRemaining:J\n         38: lconst_1\n         39: lsub\n-        40: putfield      #5                  // Field bytesRemaining:J\n+        40: putfield      #21                 // Field bytesRemaining:J\n         43: aload_0\n-        44: getfield      #5                  // Field bytesRemaining:J\n+        44: getfield      #21                 // Field bytesRemaining:J\n         47: lconst_0\n         48: lcmp\n         49: ifne          79\n         52: aload_0\n-        53: getfield      #4                  // Field expectedChecksum:J\n+        53: getfield      #17                 // Field expectedChecksum:J\n         56: aload_0\n-        57: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n-        60: invokeinterface #8,  1            // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+        57: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n+        60: invokeinterface #34,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n         65: lcmp\n         66: ifeq          79\n-        69: new           #9                  // class java/io/IOException\n+        69: new           #38                 // class java/io/IOException\n         72: dup\n-        73: ldc           #10                 // String Checksum verification failed\n-        75: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        73: ldc           #40                 // String Checksum verification failed\n+        75: invokespecial #42                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         78: athrow\n         79: iload_1\n         80: ireturn\n       LineNumberTable:\n         line 52: 0\n         line 53: 9\n         line 55: 11\n@@ -191,15 +191,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #12                 // Method read:([BII)I\n+         5: invokevirtual #45                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 74: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n@@ -208,51 +208,51 @@\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #3                  // Field in:Ljava/io/InputStream;\n+         7: getfield      #13                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #13                 // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #48                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iflt          48\n         23: aload_0\n-        24: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n         27: aload_1\n         28: iload_2\n         29: iload         4\n-        31: invokeinterface #14,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n+        31: invokeinterface #49,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n         36: aload_0\n         37: dup\n-        38: getfield      #5                  // Field bytesRemaining:J\n+        38: getfield      #21                 // Field bytesRemaining:J\n         41: iload         4\n         43: i2l\n         44: lsub\n-        45: putfield      #5                  // Field bytesRemaining:J\n+        45: putfield      #21                 // Field bytesRemaining:J\n         48: aload_0\n-        49: getfield      #5                  // Field bytesRemaining:J\n+        49: getfield      #21                 // Field bytesRemaining:J\n         52: lconst_0\n         53: lcmp\n         54: ifgt          84\n         57: aload_0\n-        58: getfield      #4                  // Field expectedChecksum:J\n+        58: getfield      #17                 // Field expectedChecksum:J\n         61: aload_0\n-        62: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n-        65: invokeinterface #8,  1            // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+        62: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n+        65: invokeinterface #34,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n         70: lcmp\n         71: ifeq          84\n-        74: new           #9                  // class java/io/IOException\n+        74: new           #38                 // class java/io/IOException\n         77: dup\n-        78: ldc           #10                 // String Checksum verification failed\n-        80: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        78: ldc           #40                 // String Checksum verification failed\n+        80: invokespecial #42                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         83: athrow\n         84: iload         4\n         86: ireturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 4\n         line 88: 6\n@@ -273,15 +273,15 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #15                 // Method read:()I\n+         1: invokevirtual #52                 // Method read:()I\n          4: iflt          9\n          7: lconst_1\n          8: lreturn\n          9: lconst_0\n         10: lreturn\n       LineNumberTable:\n         line 102: 0\n@@ -294,28 +294,28 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #16                 // Method java/io/InputStream.close:()V\n+         1: getfield      #13                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #53                 // Method java/io/InputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 7\n     Exceptions:\n       throws java.io.IOException\n \n   public long getBytesRemaining();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytesRemaining:J\n+         1: getfield      #21                 // Field bytesRemaining:J\n          4: lreturn\n       LineNumberTable:\n         line 118: 0\n }\n SourceFile: \"ChecksumVerifyingInputStream.java\"\n"}]}
