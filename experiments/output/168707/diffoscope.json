{"diffoscope-json-version": 1, "source1": "first/Memoizer.class", "source2": "second/Memoizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,46 +1,46 @@\n-  SHA-256 checksum 804912d3ffc2deb41352bea6abf5aed0eefc8dc5f43031cbae175651bac40e0e\n+  SHA-256 checksum a7739895bc467ffcf54813ac92010030c99d58ec8bce81d62d63093888f9151a\n   Compiled from \"Memoizer.java\"\n public class org.apache.commons.lang3.concurrent.Memoizer<I extends java.lang.Object, O extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.Computable<I, O>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #27                         // org/apache/commons/lang3/concurrent/Memoizer\n   super_class: #28                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 4\n Constant pool:\n-    #1 = Methodref          #27.#84       // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-    #2 = Methodref          #28.#85       // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #86           // java/util/concurrent/ConcurrentHashMap\n-    #4 = Methodref          #3.#85        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-    #5 = Fieldref           #27.#87       // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n-    #6 = Fieldref           #27.#88       // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-    #7 = Fieldref           #27.#89       // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n-    #8 = InterfaceMethodref #90.#91       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #9 = Class              #92           // java/util/concurrent/Future\n-   #10 = InvokeDynamic      #0:#97        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #11 = Class              #98           // java/util/concurrent/FutureTask\n-   #12 = Methodref          #11.#99       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #13 = InterfaceMethodref #90.#100      // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #14 = Methodref          #11.#101      // java/util/concurrent/FutureTask.run:()V\n-   #15 = InterfaceMethodref #9.#102       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #16 = Class              #103          // java/util/concurrent/CancellationException\n-   #17 = InterfaceMethodref #90.#104      // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #18 = Class              #105          // java/util/concurrent/ExecutionException\n-   #19 = Methodref          #18.#106      // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-   #20 = Methodref          #27.#107      // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #21 = Class              #108          // java/lang/RuntimeException\n-   #22 = Class              #109          // java/lang/Error\n-   #23 = Class              #110          // java/lang/IllegalStateException\n-   #24 = String             #111          // Unchecked exception\n-   #25 = Methodref          #23.#112      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #26 = InterfaceMethodref #29.#113      // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Class              #114          // org/apache/commons/lang3/concurrent/Memoizer\n-   #28 = Class              #115          // java/lang/Object\n-   #29 = Class              #116          // org/apache/commons/lang3/concurrent/Computable\n+    #1 = Methodref          #27.#81       // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+    #2 = Methodref          #28.#82       // java/lang/Object.\"<init>\":()V\n+    #3 = Class              #83           // java/util/concurrent/ConcurrentHashMap\n+    #4 = Methodref          #3.#82        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+    #5 = Fieldref           #27.#84       // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n+    #6 = Fieldref           #27.#85       // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+    #7 = Fieldref           #27.#86       // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n+    #8 = InterfaceMethodref #87.#88       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #9 = Class              #89           // java/util/concurrent/Future\n+   #10 = InvokeDynamic      #0:#94        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #11 = Class              #95           // java/util/concurrent/FutureTask\n+   #12 = Methodref          #11.#96       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #13 = InterfaceMethodref #87.#97       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #14 = Methodref          #11.#98       // java/util/concurrent/FutureTask.run:()V\n+   #15 = InterfaceMethodref #9.#99        // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #16 = Class              #100          // java/util/concurrent/CancellationException\n+   #17 = InterfaceMethodref #87.#101      // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #18 = Class              #102          // java/util/concurrent/ExecutionException\n+   #19 = Methodref          #18.#103      // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+   #20 = Methodref          #27.#104      // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #21 = Class              #105          // java/lang/RuntimeException\n+   #22 = Class              #106          // java/lang/Error\n+   #23 = Class              #107          // java/lang/IllegalStateException\n+   #24 = String             #108          // Unchecked exception\n+   #25 = Methodref          #23.#109      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #26 = InterfaceMethodref #29.#110      // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Class              #111          // org/apache/commons/lang3/concurrent/Memoizer\n+   #28 = Class              #112          // java/lang/Object\n+   #29 = Class              #113          // org/apache/commons/lang3/concurrent/Computable\n    #30 = Utf8               cache\n    #31 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n    #32 = Utf8               Signature\n    #33 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n    #34 = Utf8               computable\n    #35 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n    #36 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n@@ -72,93 +72,90 @@\n    #62 = Utf8               arg\n    #63 = Utf8               Ljava/lang/Object;\n    #64 = Utf8               Ljava/util/concurrent/Callable<TO;>;\n    #65 = Utf8               Ljava/util/concurrent/FutureTask<TO;>;\n    #66 = Utf8               Ljava/util/concurrent/Future<TO;>;\n    #67 = Utf8               TI;\n    #68 = Utf8               StackMapTable\n-   #69 = Class              #92           // java/util/concurrent/Future\n-   #70 = Class              #103          // java/util/concurrent/CancellationException\n-   #71 = Class              #105          // java/util/concurrent/ExecutionException\n-   #72 = Utf8               Exceptions\n-   #73 = Class              #117          // java/lang/InterruptedException\n-   #74 = Utf8               (TI;)TO;\n-   #75 = Utf8               launderException\n-   #76 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #77 = Utf8               throwable\n-   #78 = Utf8               Ljava/lang/Throwable;\n-   #79 = Utf8               lambda$compute$0\n-   #80 = Class              #118          // java/lang/Exception\n-   #81 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               Memoizer.java\n-   #84 = NameAndType        #39:#49       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-   #85 = NameAndType        #39:#119      // \"<init>\":()V\n-   #86 = Utf8               java/util/concurrent/ConcurrentHashMap\n-   #87 = NameAndType        #30:#31       // cache:Ljava/util/concurrent/ConcurrentMap;\n-   #88 = NameAndType        #34:#35       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-   #89 = NameAndType        #37:#38       // recalculate:Z\n-   #90 = Class              #120          // java/util/concurrent/ConcurrentMap\n-   #91 = NameAndType        #121:#52      // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #92 = Utf8               java/util/concurrent/Future\n-   #93 = Utf8               BootstrapMethods\n-   #94 = MethodHandle       6:#122        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #95 = MethodType         #123          //  ()Ljava/lang/Object;\n-   #96 = MethodHandle       7:#124        // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #97 = NameAndType        #125:#126     // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #98 = Utf8               java/util/concurrent/FutureTask\n-   #99 = NameAndType        #39:#127      // \"<init>\":(Ljava/util/concurrent/Callable;)V\n-  #100 = NameAndType        #128:#129     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #101 = NameAndType        #130:#119     // run:()V\n-  #102 = NameAndType        #121:#123     // get:()Ljava/lang/Object;\n-  #103 = Utf8               java/util/concurrent/CancellationException\n-  #104 = NameAndType        #131:#132     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #105 = Utf8               java/util/concurrent/ExecutionException\n-  #106 = NameAndType        #133:#134     // getCause:()Ljava/lang/Throwable;\n-  #107 = NameAndType        #75:#76       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #108 = Utf8               java/lang/RuntimeException\n-  #109 = Utf8               java/lang/Error\n-  #110 = Utf8               java/lang/IllegalStateException\n-  #111 = Utf8               Unchecked exception\n-  #112 = NameAndType        #39:#135      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #113 = NameAndType        #51:#52       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n-  #115 = Utf8               java/lang/Object\n-  #116 = Utf8               org/apache/commons/lang3/concurrent/Computable\n-  #117 = Utf8               java/lang/InterruptedException\n-  #118 = Utf8               java/lang/Exception\n-  #119 = Utf8               ()V\n-  #120 = Utf8               java/util/concurrent/ConcurrentMap\n-  #121 = Utf8               get\n-  #122 = Methodref          #136.#137     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #123 = Utf8               ()Ljava/lang/Object;\n-  #124 = Methodref          #27.#138      // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #125 = Utf8               call\n-  #126 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-  #127 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #128 = Utf8               putIfAbsent\n-  #129 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #130 = Utf8               run\n-  #131 = Utf8               remove\n-  #132 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #133 = Utf8               getCause\n-  #134 = Utf8               ()Ljava/lang/Throwable;\n-  #135 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #136 = Class              #139          // java/lang/invoke/LambdaMetafactory\n-  #137 = NameAndType        #140:#144     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #138 = NameAndType        #79:#52       // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #139 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #140 = Utf8               metafactory\n-  #141 = Class              #146          // java/lang/invoke/MethodHandles$Lookup\n-  #142 = Utf8               Lookup\n-  #143 = Utf8               InnerClasses\n-  #144 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #145 = Class              #147          // java/lang/invoke/MethodHandles\n-  #146 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #147 = Utf8               java/lang/invoke/MethodHandles\n+   #69 = Utf8               Exceptions\n+   #70 = Class              #114          // java/lang/InterruptedException\n+   #71 = Utf8               (TI;)TO;\n+   #72 = Utf8               launderException\n+   #73 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #74 = Utf8               throwable\n+   #75 = Utf8               Ljava/lang/Throwable;\n+   #76 = Utf8               lambda$compute$0\n+   #77 = Class              #115          // java/lang/Exception\n+   #78 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               Memoizer.java\n+   #81 = NameAndType        #39:#49       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+   #82 = NameAndType        #39:#116      // \"<init>\":()V\n+   #83 = Utf8               java/util/concurrent/ConcurrentHashMap\n+   #84 = NameAndType        #30:#31       // cache:Ljava/util/concurrent/ConcurrentMap;\n+   #85 = NameAndType        #34:#35       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #86 = NameAndType        #37:#38       // recalculate:Z\n+   #87 = Class              #117          // java/util/concurrent/ConcurrentMap\n+   #88 = NameAndType        #118:#52      // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #89 = Utf8               java/util/concurrent/Future\n+   #90 = Utf8               BootstrapMethods\n+   #91 = MethodHandle       6:#119        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #92 = MethodType         #120          //  ()Ljava/lang/Object;\n+   #93 = MethodHandle       7:#121        // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = NameAndType        #122:#123     // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #95 = Utf8               java/util/concurrent/FutureTask\n+   #96 = NameAndType        #39:#124      // \"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #97 = NameAndType        #125:#126     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #98 = NameAndType        #127:#116     // run:()V\n+   #99 = NameAndType        #118:#120     // get:()Ljava/lang/Object;\n+  #100 = Utf8               java/util/concurrent/CancellationException\n+  #101 = NameAndType        #128:#129     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #102 = Utf8               java/util/concurrent/ExecutionException\n+  #103 = NameAndType        #130:#131     // getCause:()Ljava/lang/Throwable;\n+  #104 = NameAndType        #72:#73       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+  #105 = Utf8               java/lang/RuntimeException\n+  #106 = Utf8               java/lang/Error\n+  #107 = Utf8               java/lang/IllegalStateException\n+  #108 = Utf8               Unchecked exception\n+  #109 = NameAndType        #39:#132      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #110 = NameAndType        #51:#52       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n+  #112 = Utf8               java/lang/Object\n+  #113 = Utf8               org/apache/commons/lang3/concurrent/Computable\n+  #114 = Utf8               java/lang/InterruptedException\n+  #115 = Utf8               java/lang/Exception\n+  #116 = Utf8               ()V\n+  #117 = Utf8               java/util/concurrent/ConcurrentMap\n+  #118 = Utf8               get\n+  #119 = Methodref          #133.#134     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = Utf8               ()Ljava/lang/Object;\n+  #121 = Methodref          #27.#135      // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #122 = Utf8               call\n+  #123 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+  #124 = Utf8               (Ljava/util/concurrent/Callable;)V\n+  #125 = Utf8               putIfAbsent\n+  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #127 = Utf8               run\n+  #128 = Utf8               remove\n+  #129 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #130 = Utf8               getCause\n+  #131 = Utf8               ()Ljava/lang/Throwable;\n+  #132 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #133 = Class              #136          // java/lang/invoke/LambdaMetafactory\n+  #134 = NameAndType        #137:#141     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #135 = NameAndType        #76:#52       // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #136 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #137 = Utf8               metafactory\n+  #138 = Class              #143          // java/lang/invoke/MethodHandles$Lookup\n+  #139 = Utf8               Lookup\n+  #140 = Utf8               InnerClasses\n+  #141 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #142 = Class              #144          // java/lang/invoke/MethodHandles\n+  #143 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #144 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #33                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n \n   private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;\n@@ -341,15 +338,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n     Exceptions:\n       throws java.lang.InterruptedException\n-    Signature: #74                          // (TI;)TO;\n+    Signature: #71                          // (TI;)TO;\n \n   private java.lang.RuntimeException launderException(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n@@ -405,17 +402,17 @@\n             0      11     1   arg   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n     Exceptions:\n       throws java.lang.Exception\n }\n-Signature: #81                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+Signature: #78                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n SourceFile: \"Memoizer.java\"\n InnerClasses:\n-  public static final #142= #141 of #145; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #139= #138 of #142; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #91 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #95 ()Ljava/lang/Object;\n-      #96 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-      #95 ()Ljava/lang/Object;\n+      #92 ()Ljava/lang/Object;\n+      #93 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+      #92 ()Ljava/lang/Object;\n"}]}
