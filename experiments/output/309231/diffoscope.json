{"diffoscope-json-version": 1, "source1": "first/CharSequenceUtils.class", "source2": "second/CharSequenceUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,52 +1,52 @@\n-  SHA-256 checksum 7ce1b2dc70e3e0fc0f72b6acc757772f357042c7dbfecfbdfc077dcd628c7383\n+  SHA-256 checksum 4a44177e005419080034147a696bb610c0119748f9922fabdf47c28dd66fd5b0\n   Compiled from \"CharSequenceUtils.java\"\n public class org.apache.commons.codec.binary.CharSequenceUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/codec/binary/CharSequenceUtils\n-  super_class: #8                         // java/lang/Object\n+  this_class: #28                         // org/apache/commons/codec/binary/CharSequenceUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#18         // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #19            // java/lang/String\n-   #3 = Methodref          #2.#20         // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #4 = InterfaceMethodref #21.#22        // java/lang/CharSequence.charAt:(I)C\n-   #5 = Methodref          #23.#24        // java/lang/Character.toUpperCase:(C)C\n-   #6 = Methodref          #23.#25        // java/lang/Character.toLowerCase:(C)C\n-   #7 = Class              #26            // org/apache/commons/codec/binary/CharSequenceUtils\n-   #8 = Class              #27            // java/lang/Object\n-   #9 = Utf8               <init>\n-  #10 = Utf8               ()V\n-  #11 = Utf8               Code\n-  #12 = Utf8               LineNumberTable\n-  #13 = Utf8               regionMatches\n-  #14 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-  #15 = Utf8               StackMapTable\n-  #16 = Utf8               SourceFile\n-  #17 = Utf8               CharSequenceUtils.java\n-  #18 = NameAndType        #9:#10         // \"<init>\":()V\n-  #19 = Utf8               java/lang/String\n-  #20 = NameAndType        #13:#28        // regionMatches:(ZILjava/lang/String;II)Z\n-  #21 = Class              #29            // java/lang/CharSequence\n-  #22 = NameAndType        #30:#31        // charAt:(I)C\n-  #23 = Class              #32            // java/lang/Character\n-  #24 = NameAndType        #33:#34        // toUpperCase:(C)C\n-  #25 = NameAndType        #35:#34        // toLowerCase:(C)C\n-  #26 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n-  #27 = Utf8               java/lang/Object\n-  #28 = Utf8               (ZILjava/lang/String;II)Z\n-  #29 = Utf8               java/lang/CharSequence\n-  #30 = Utf8               charAt\n-  #31 = Utf8               (I)C\n-  #32 = Utf8               java/lang/Character\n-  #33 = Utf8               toUpperCase\n-  #34 = Utf8               (C)C\n-  #35 = Utf8               toLowerCase\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/lang/String\n+   #8 = Utf8               java/lang/String\n+   #9 = Methodref          #7.#10         // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+  #10 = NameAndType        #11:#12        // regionMatches:(ZILjava/lang/String;II)Z\n+  #11 = Utf8               regionMatches\n+  #12 = Utf8               (ZILjava/lang/String;II)Z\n+  #13 = InterfaceMethodref #14.#15        // java/lang/CharSequence.charAt:(I)C\n+  #14 = Class              #16            // java/lang/CharSequence\n+  #15 = NameAndType        #17:#18        // charAt:(I)C\n+  #16 = Utf8               java/lang/CharSequence\n+  #17 = Utf8               charAt\n+  #18 = Utf8               (I)C\n+  #19 = Methodref          #20.#21        // java/lang/Character.toUpperCase:(C)C\n+  #20 = Class              #22            // java/lang/Character\n+  #21 = NameAndType        #23:#24        // toUpperCase:(C)C\n+  #22 = Utf8               java/lang/Character\n+  #23 = Utf8               toUpperCase\n+  #24 = Utf8               (C)C\n+  #25 = Methodref          #20.#26        // java/lang/Character.toLowerCase:(C)C\n+  #26 = NameAndType        #27:#24        // toLowerCase:(C)C\n+  #27 = Utf8               toLowerCase\n+  #28 = Class              #29            // org/apache/commons/codec/binary/CharSequenceUtils\n+  #29 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n+  #30 = Utf8               Code\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+  #33 = Utf8               StackMapTable\n+  #34 = Utf8               SourceFile\n+  #35 = Utf8               CharSequenceUtils.java\n {\n   public org.apache.commons.codec.binary.CharSequenceUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -57,65 +57,65 @@\n \n   static boolean regionMatches(java.lang.CharSequence, boolean, int, java.lang.CharSequence, int, int);\n     descriptor: (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=6, locals=11, args_size=6\n          0: aload_0\n-         1: instanceof    #2                  // class java/lang/String\n+         1: instanceof    #7                  // class java/lang/String\n          4: ifeq          32\n          7: aload_3\n-         8: instanceof    #2                  // class java/lang/String\n+         8: instanceof    #7                  // class java/lang/String\n         11: ifeq          32\n         14: aload_0\n-        15: checkcast     #2                  // class java/lang/String\n+        15: checkcast     #7                  // class java/lang/String\n         18: iload_1\n         19: iload_2\n         20: aload_3\n-        21: checkcast     #2                  // class java/lang/String\n+        21: checkcast     #7                  // class java/lang/String\n         24: iload         4\n         26: iload         5\n-        28: invokevirtual #3                  // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+        28: invokevirtual #9                  // Method java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n         31: ireturn\n         32: iload_2\n         33: istore        6\n         35: iload         4\n         37: istore        7\n         39: iload         5\n         41: istore        8\n         43: iload         8\n         45: iinc          8, -1\n         48: ifle          124\n         51: aload_0\n         52: iload         6\n         54: iinc          6, 1\n-        57: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        57: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         62: istore        9\n         64: aload_3\n         65: iload         7\n         67: iinc          7, 1\n-        70: invokeinterface #4,  2            // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        70: invokeinterface #13,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         75: istore        10\n         77: iload         9\n         79: iload         10\n         81: if_icmpne     87\n         84: goto          43\n         87: iload_1\n         88: ifne          93\n         91: iconst_0\n         92: ireturn\n         93: iload         9\n-        95: invokestatic  #5                  // Method java/lang/Character.toUpperCase:(C)C\n+        95: invokestatic  #19                 // Method java/lang/Character.toUpperCase:(C)C\n         98: iload         10\n-       100: invokestatic  #5                  // Method java/lang/Character.toUpperCase:(C)C\n+       100: invokestatic  #19                 // Method java/lang/Character.toUpperCase:(C)C\n        103: if_icmpeq     121\n        106: iload         9\n-       108: invokestatic  #6                  // Method java/lang/Character.toLowerCase:(C)C\n+       108: invokestatic  #25                 // Method java/lang/Character.toLowerCase:(C)C\n        111: iload         10\n-       113: invokestatic  #6                  // Method java/lang/Character.toLowerCase:(C)C\n+       113: invokestatic  #25                 // Method java/lang/Character.toLowerCase:(C)C\n        116: if_icmpeq     121\n        119: iconst_0\n        120: ireturn\n        121: goto          43\n        124: iconst_1\n        125: ireturn\n       LineNumberTable:\n"}]}
