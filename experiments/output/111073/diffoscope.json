{"diffoscope-json-version": 1, "source1": "first/JsonGenerator$Feature.class", "source2": "second/JsonGenerator$Feature.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,29 +20,43 @@\n     @Deprecated\n     public static final enum Feature USE_FAST_DOUBLE_WRITER;\n     @Deprecated\n     public static final enum Feature WRITE_HEX_UPPER_CASE;\n     private final boolean _defaultState;\n     private final int _mask;\n     \n-    public static Feature valueOf(final String name) {\n-        return Enum.valueOf(Feature.class, name);\n+    static {\n+        Feature.AUTO_CLOSE_TARGET = new Feature(\"AUTO_CLOSE_TARGET\", 0, true);\n+        Feature.AUTO_CLOSE_JSON_CONTENT = new Feature(\"AUTO_CLOSE_JSON_CONTENT\", 1, true);\n+        Feature.FLUSH_PASSED_TO_STREAM = new Feature(\"FLUSH_PASSED_TO_STREAM\", 2, true);\n+        Feature.QUOTE_FIELD_NAMES = new Feature(\"QUOTE_FIELD_NAMES\", 3, true);\n+        Feature.QUOTE_NON_NUMERIC_NUMBERS = new Feature(\"QUOTE_NON_NUMERIC_NUMBERS\", 4, true);\n+        Feature.ESCAPE_NON_ASCII = new Feature(\"ESCAPE_NON_ASCII\", 5, false);\n+        Feature.WRITE_NUMBERS_AS_STRINGS = new Feature(\"WRITE_NUMBERS_AS_STRINGS\", 6, false);\n+        Feature.WRITE_BIGDECIMAL_AS_PLAIN = new Feature(\"WRITE_BIGDECIMAL_AS_PLAIN\", 7, false);\n+        Feature.STRICT_DUPLICATE_DETECTION = new Feature(\"STRICT_DUPLICATE_DETECTION\", 8, false);\n+        Feature.IGNORE_UNKNOWN = new Feature(\"IGNORE_UNKNOWN\", 9, false);\n+        Feature.USE_FAST_DOUBLE_WRITER = new Feature(\"USE_FAST_DOUBLE_WRITER\", 10, false);\n+        Feature.WRITE_HEX_UPPER_CASE = new Feature(\"WRITE_HEX_UPPER_CASE\", 11, true);\n+        Feature.ENUM$VALUES = new Feature[] { Feature.AUTO_CLOSE_TARGET, Feature.AUTO_CLOSE_JSON_CONTENT, Feature.FLUSH_PASSED_TO_STREAM, Feature.QUOTE_FIELD_NAMES, Feature.QUOTE_NON_NUMERIC_NUMBERS, Feature.ESCAPE_NON_ASCII, Feature.WRITE_NUMBERS_AS_STRINGS, Feature.WRITE_BIGDECIMAL_AS_PLAIN, Feature.STRICT_DUPLICATE_DETECTION, Feature.IGNORE_UNKNOWN, Feature.USE_FAST_DOUBLE_WRITER, Feature.WRITE_HEX_UPPER_CASE };\n     }\n     \n     public static int collectDefaults() {\n         int flags = 0;\n-        for (final Feature f : values()) {\n+        Feature[] values;\n+        for (int length = (values = values()).length, i = 0; i < length; ++i) {\n+            final Feature f = values[i];\n             if (f.enabledByDefault()) {\n                 flags |= f.getMask();\n             }\n         }\n         return flags;\n     }\n     \n-    private Feature(final boolean defaultState) {\n+    private Feature(final String name, final int ordinal, final boolean defaultState) {\n         this._defaultState = defaultState;\n         this._mask = 1 << this.ordinal();\n     }\n     \n     public boolean enabledByDefault() {\n         return this._defaultState;\n     }\n@@ -51,23 +65,11 @@\n         return (flags & this._mask) != 0x0;\n     }\n     \n     public int getMask() {\n         return this._mask;\n     }\n     \n-    static {\n-        Feature.AUTO_CLOSE_TARGET = new Feature(\"AUTO_CLOSE_TARGET\", 0, true);\n-        Feature.AUTO_CLOSE_JSON_CONTENT = new Feature(\"AUTO_CLOSE_JSON_CONTENT\", 1, true);\n-        Feature.FLUSH_PASSED_TO_STREAM = new Feature(\"FLUSH_PASSED_TO_STREAM\", 2, true);\n-        Feature.QUOTE_FIELD_NAMES = new Feature(\"QUOTE_FIELD_NAMES\", 3, true);\n-        Feature.QUOTE_NON_NUMERIC_NUMBERS = new Feature(\"QUOTE_NON_NUMERIC_NUMBERS\", 4, true);\n-        Feature.ESCAPE_NON_ASCII = new Feature(\"ESCAPE_NON_ASCII\", 5, false);\n-        Feature.WRITE_NUMBERS_AS_STRINGS = new Feature(\"WRITE_NUMBERS_AS_STRINGS\", 6, false);\n-        Feature.WRITE_BIGDECIMAL_AS_PLAIN = new Feature(\"WRITE_BIGDECIMAL_AS_PLAIN\", 7, false);\n-        Feature.STRICT_DUPLICATE_DETECTION = new Feature(\"STRICT_DUPLICATE_DETECTION\", 8, false);\n-        Feature.IGNORE_UNKNOWN = new Feature(\"IGNORE_UNKNOWN\", 9, false);\n-        Feature.USE_FAST_DOUBLE_WRITER = new Feature(\"USE_FAST_DOUBLE_WRITER\", 10, false);\n-        Feature.WRITE_HEX_UPPER_CASE = new Feature(\"WRITE_HEX_UPPER_CASE\", 11, true);\n-        Feature.$VALUES = $values();\n+    public static Feature valueOf(final String name) {\n+        return Enum.valueOf(Feature.class, name);\n     }\n }\n"}]}
