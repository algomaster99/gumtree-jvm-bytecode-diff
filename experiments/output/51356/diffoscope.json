{"diffoscope-json-version": 1, "source1": "first/ArchiveInputStream.class", "source2": "second/ArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,74 +1,74 @@\n-  SHA-256 checksum 9f5e5f7e2c950f1b8a95f4938c423356a75e97871b70c22f2653aa806e9e7e44\n+  SHA-256 checksum e69fdb2730ce3fdda0e9adf52b00f0ef81edddc151664dd2865def8ac32ac3dd\n   Compiled from \"ArchiveInputStream.java\"\n public abstract class org.apache.commons.compress.archivers.ArchiveInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #5                          // org/apache/commons/compress/archivers/ArchiveInputStream\n-  super_class: #9                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/compress/archivers/ArchiveInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 3, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #9.#50         // java/io/InputStream.\"<init>\":()V\n-   #2 = Fieldref           #5.#51         // org/apache/commons/compress/archivers/ArchiveInputStream.single:[B\n-   #3 = Fieldref           #5.#52         // org/apache/commons/compress/archivers/ArchiveInputStream.bytesRead:J\n-   #4 = Methodref          #5.#53         // org/apache/commons/compress/archivers/ArchiveInputStream.read:([BII)I\n-   #5 = Class              #54            // org/apache/commons/compress/archivers/ArchiveInputStream\n-   #6 = Methodref          #5.#55         // org/apache/commons/compress/archivers/ArchiveInputStream.count:(J)V\n-   #7 = Long               -1l\n-   #9 = Class              #56            // java/io/InputStream\n-  #10 = Utf8               single\n-  #11 = Utf8               [B\n-  #12 = Utf8               BYTE_MASK\n-  #13 = Utf8               I\n-  #14 = Utf8               ConstantValue\n-  #15 = Integer            255\n-  #16 = Utf8               bytesRead\n-  #17 = Utf8               J\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #25 = Utf8               getNextEntry\n-  #26 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #57            // java/io/IOException\n-  #29 = Utf8               read\n-  #30 = Utf8               ()I\n-  #31 = Utf8               num\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               count\n-  #34 = Utf8               (I)V\n-  #35 = Utf8               (J)V\n-  #36 = Utf8               pushedBackBytes\n-  #37 = Utf8               pushedBack\n-  #38 = Utf8               getCount\n-  #39 = Utf8               Deprecated\n-  #40 = Utf8               RuntimeVisibleAnnotations\n-  #41 = Utf8               Ljava/lang/Deprecated;\n-  #42 = Utf8               getBytesRead\n-  #43 = Utf8               ()J\n-  #44 = Utf8               canReadEntryData\n-  #45 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n-  #46 = Utf8               archiveEntry\n-  #47 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #48 = Utf8               SourceFile\n-  #49 = Utf8               ArchiveInputStream.java\n-  #50 = NameAndType        #18:#19        // \"<init>\":()V\n-  #51 = NameAndType        #10:#11        // single:[B\n-  #52 = NameAndType        #16:#17        // bytesRead:J\n-  #53 = NameAndType        #29:#58        // read:([BII)I\n-  #54 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #55 = NameAndType        #33:#35        // count:(J)V\n-  #56 = Utf8               java/io/InputStream\n-  #57 = Utf8               java/io/IOException\n-  #58 = Utf8               ([BII)I\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/ArchiveInputStream\n+   #2 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               single\n+   #6 = Utf8               [B\n+   #7 = Utf8               BYTE_MASK\n+   #8 = Utf8               I\n+   #9 = Utf8               ConstantValue\n+  #10 = Integer            255\n+  #11 = Utf8               bytesRead\n+  #12 = Utf8               J\n+  #13 = Utf8               <init>\n+  #14 = Utf8               ()V\n+  #15 = Utf8               Code\n+  #16 = Methodref          #3.#17         // java/io/InputStream.\"<init>\":()V\n+  #17 = NameAndType        #13:#14        // \"<init>\":()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/compress/archivers/ArchiveInputStream.single:[B\n+  #19 = NameAndType        #5:#6          // single:[B\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/archivers/ArchiveInputStream.bytesRead:J\n+  #21 = NameAndType        #11:#12        // bytesRead:J\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #26 = Utf8               getNextEntry\n+  #27 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #28 = Utf8               Exceptions\n+  #29 = Class              #30            // java/io/IOException\n+  #30 = Utf8               java/io/IOException\n+  #31 = Utf8               read\n+  #32 = Utf8               ()I\n+  #33 = Methodref          #1.#34         // org/apache/commons/compress/archivers/ArchiveInputStream.read:([BII)I\n+  #34 = NameAndType        #31:#35        // read:([BII)I\n+  #35 = Utf8               ([BII)I\n+  #36 = Utf8               num\n+  #37 = Utf8               StackMapTable\n+  #38 = Utf8               count\n+  #39 = Utf8               (I)V\n+  #40 = Methodref          #1.#41         // org/apache/commons/compress/archivers/ArchiveInputStream.count:(J)V\n+  #41 = NameAndType        #38:#42        // count:(J)V\n+  #42 = Utf8               (J)V\n+  #43 = Long               -1l\n+  #45 = Utf8               pushedBackBytes\n+  #46 = Utf8               pushedBack\n+  #47 = Utf8               getCount\n+  #48 = Utf8               Deprecated\n+  #49 = Utf8               RuntimeVisibleAnnotations\n+  #50 = Utf8               Ljava/lang/Deprecated;\n+  #51 = Utf8               getBytesRead\n+  #52 = Utf8               ()J\n+  #53 = Utf8               canReadEntryData\n+  #54 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n+  #55 = Utf8               archiveEntry\n+  #56 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #57 = Utf8               SourceFile\n+  #58 = Utf8               ArchiveInputStream.java\n {\n   private final byte[] single;\n     descriptor: [B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static final int BYTE_MASK = 255;\n     descriptor: I\n@@ -81,56 +81,59 @@\n \n   public org.apache.commons.compress.archivers.ArchiveInputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #2                  // Field single:[B\n+         8: putfield      #18                 // Field single:[B\n         11: aload_0\n         12: lconst_0\n-        13: putfield      #3                  // Field bytesRead:J\n+        13: putfield      #20                 // Field bytesRead:J\n         16: return\n       LineNumberTable:\n         line 40: 0\n         line 42: 4\n         line 46: 11\n+        line 40: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n \n   public abstract org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #2                  // Field single:[B\n+         2: getfield      #18                 // Field single:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #4                  // Method read:([BII)I\n+         7: invokevirtual #33                 // Method read:([BII)I\n         10: istore_1\n         11: iload_1\n         12: iconst_m1\n         13: if_icmpne     20\n         16: iconst_m1\n         17: goto          30\n         20: aload_0\n-        21: getfield      #2                  // Field single:[B\n+        21: getfield      #18                 // Field single:[B\n         24: iconst_0\n         25: baload\n         26: sipush        255\n         29: iand\n         30: ireturn\n       LineNumberTable:\n         line 81: 0\n@@ -141,26 +144,24 @@\n            11      20     1   num   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void count(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #6                  // Method count:(J)V\n+         3: invokevirtual #40                 // Method count:(J)V\n          6: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n@@ -168,23 +169,23 @@\n \n   protected void count(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #7                  // long -1l\n+         1: ldc2_w        #43                 // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n-         9: aload_0\n-        10: getfield      #3                  // Field bytesRead:J\n+         9: dup\n+        10: getfield      #20                 // Field bytesRead:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #3                  // Field bytesRead:J\n+        15: putfield      #20                 // Field bytesRead:J\n         18: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 8\n         line 106: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -196,53 +197,53 @@\n   protected void pushedBackBytes(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #3                  // Field bytesRead:J\n+         2: getfield      #20                 // Field bytesRead:J\n          5: lload_1\n          6: lsub\n-         7: putfield      #3                  // Field bytesRead:J\n+         7: putfield      #20                 // Field bytesRead:J\n         10: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n             0      11     1 pushedBack   J\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #50()\n+        java.lang.Deprecated\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field bytesRead:J\n+         1: getfield      #20                 // Field bytesRead:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 126: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #41()\n-        java.lang.Deprecated\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field bytesRead:J\n+         1: getfield      #20                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 135: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n \n"}]}
