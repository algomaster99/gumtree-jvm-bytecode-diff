{"diffoscope-json-version": 1, "source1": "first/Frame.class", "source2": "second/Frame.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,21 +8,21 @@\n     private final LocalVariables locals;\n     private final OperandStack stack;\n     \n     public static UninitializedObjectType getThis() {\n         return Frame._this;\n     }\n     \n-    public static void setThis(final UninitializedObjectType _this) {\n-        Frame._this = _this;\n+    public static void setThis(final UninitializedObjectType this1) {\n+        Frame._this = this1;\n     }\n     \n-    public Frame(final int maxLocals, final int maxStack) {\n-        this.locals = new LocalVariables(maxLocals);\n-        this.stack = new OperandStack(maxStack);\n+    public Frame(final int n, final int n2) {\n+        this.locals = new LocalVariables(n);\n+        this.stack = new OperandStack(n2);\n     }\n     \n     public Frame(final LocalVariables locals, final OperandStack stack) {\n         this.locals = locals;\n         this.stack = stack;\n     }\n     \n@@ -32,16 +32,16 @@\n     }\n     \n     @Override\n     public boolean equals(final Object o) {\n         if (!(o instanceof Frame)) {\n             return false;\n         }\n-        final Frame f = (Frame)o;\n-        return this.stack.equals((Object)f.stack) && this.locals.equals((Object)f.locals);\n+        final Frame frame = (Frame)o;\n+        return this.stack.equals((Object)frame.stack) && this.locals.equals((Object)frame.locals);\n     }\n     \n     public Frame getClone() {\n         return (Frame)this.clone();\n     }\n     \n     public LocalVariables getLocals() {\n@@ -55,14 +55,10 @@\n     @Override\n     public int hashCode() {\n         return this.stack.hashCode() ^ this.locals.hashCode();\n     }\n     \n     @Override\n     public String toString() {\n-        String s = \"Local Variables:\\n\";\n-        s += this.locals;\n-        s += \"OperandStack:\\n\";\n-        s += this.stack;\n-        return s;\n+        return \"Local Variables:\\n\" + this.locals + \"OperandStack:\\n\" + this.stack;\n     }\n }\n"}]}
