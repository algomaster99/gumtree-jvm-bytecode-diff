{"diffoscope-json-version": 1, "source1": "first/FileAlterationMonitor.class", "source2": "second/FileAlterationMonitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum e1980dffdc91086d4ddb8763e623f5443404ffcb2f144912867c30e35cc694d0\n+  SHA-256 checksum 571af7d694020f15d117e12ca7b5185da62fc7006aeb58152be5e0dd824bad39\n   Compiled from \"FileAlterationMonitor.java\"\n public final class org.apache.commons.io.monitor.FileAlterationMonitor implements java.lang.Runnable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #44                         // org/apache/commons/io/monitor/FileAlterationMonitor\n   super_class: #45                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 14, attributes: 1\n Constant pool:\n     #1 = Long               10000l\n-    #3 = Methodref          #44.#102      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n-    #4 = Methodref          #45.#103      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #104          // java/util/concurrent/CopyOnWriteArrayList\n-    #6 = Methodref          #5.#103       // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n-    #7 = Fieldref           #44.#105      // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n-    #8 = Fieldref           #44.#106      // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n-    #9 = Methodref          #107.#108     // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n-   #10 = Methodref          #109.#110     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #11 = Methodref          #107.#111     // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #12 = Class              #112          // java/util/Collection\n-   #13 = Fieldref           #44.#113      // org/apache/commons/io/monitor/FileAlterationMonitor.EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-   #14 = InterfaceMethodref #12.#114      // java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #3 = Methodref          #44.#100      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J)V\n+    #4 = Methodref          #45.#101      // java/lang/Object.\"<init>\":()V\n+    #5 = Class              #102          // java/util/concurrent/CopyOnWriteArrayList\n+    #6 = Methodref          #5.#101       // java/util/concurrent/CopyOnWriteArrayList.\"<init>\":()V\n+    #7 = Fieldref           #44.#103      // org/apache/commons/io/monitor/FileAlterationMonitor.observers:Ljava/util/List;\n+    #8 = Fieldref           #44.#104      // org/apache/commons/io/monitor/FileAlterationMonitor.interval:J\n+    #9 = Methodref          #105.#106     // java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n+   #10 = Methodref          #107.#108     // java/util/Collections.emptyList:()Ljava/util/List;\n+   #11 = Methodref          #105.#109     // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #12 = Class              #110          // java/util/Collection\n+   #13 = Fieldref           #44.#111      // org/apache/commons/io/monitor/FileAlterationMonitor.EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+   #14 = InterfaceMethodref #12.#112      // java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #15 = Class              #48           // \"[Lorg/apache/commons/io/monitor/FileAlterationObserver;\"\n-   #16 = Methodref          #44.#115      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #17 = Methodref          #44.#116      // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #18 = Fieldref           #44.#117      // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n-   #19 = InterfaceMethodref #118.#119     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #20 = InterfaceMethodref #118.#120     // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #21 = Fieldref           #44.#121      // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n-   #22 = Class              #122          // java/lang/IllegalStateException\n-   #23 = String             #123          // Monitor is already running\n-   #24 = Methodref          #22.#124      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = InterfaceMethodref #118.#125     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #26 = InterfaceMethodref #126.#127     // java/util/Iterator.hasNext:()Z\n-   #27 = InterfaceMethodref #126.#128     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #28 = Class              #129          // org/apache/commons/io/monitor/FileAlterationObserver\n-   #29 = Methodref          #28.#130      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n-   #30 = InterfaceMethodref #131.#132     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-   #31 = Fieldref           #44.#133      // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n-   #32 = Class              #134          // java/lang/Thread\n-   #33 = Methodref          #32.#135      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-   #34 = Methodref          #32.#136      // java/lang/Thread.start:()V\n-   #35 = Methodref          #44.#137      // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n-   #36 = String             #138          // Monitor is not running\n-   #37 = Methodref          #32.#139      // java/lang/Thread.interrupt:()V\n-   #38 = Methodref          #32.#140      // java/lang/Thread.join:(J)V\n-   #39 = Class              #141          // java/lang/InterruptedException\n-   #40 = Methodref          #32.#142      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #41 = Methodref          #28.#143      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n-   #42 = Methodref          #28.#144      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n-   #43 = Methodref          #32.#145      // java/lang/Thread.sleep:(J)V\n-   #44 = Class              #146          // org/apache/commons/io/monitor/FileAlterationMonitor\n-   #45 = Class              #147          // java/lang/Object\n-   #46 = Class              #148          // java/lang/Runnable\n+   #16 = Methodref          #44.#113      // org/apache/commons/io/monitor/FileAlterationMonitor.\"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #17 = Methodref          #44.#114      // org/apache/commons/io/monitor/FileAlterationMonitor.addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #18 = Fieldref           #44.#115      // org/apache/commons/io/monitor/FileAlterationMonitor.threadFactory:Ljava/util/concurrent/ThreadFactory;\n+   #19 = InterfaceMethodref #116.#117     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #20 = InterfaceMethodref #116.#118     // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #21 = Fieldref           #44.#119      // org/apache/commons/io/monitor/FileAlterationMonitor.running:Z\n+   #22 = Class              #120          // java/lang/IllegalStateException\n+   #23 = String             #121          // Monitor is already running\n+   #24 = Methodref          #22.#122      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #25 = InterfaceMethodref #116.#123     // java/util/List.iterator:()Ljava/util/Iterator;\n+   #26 = InterfaceMethodref #89.#124      // java/util/Iterator.hasNext:()Z\n+   #27 = InterfaceMethodref #89.#125      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #28 = Class              #126          // org/apache/commons/io/monitor/FileAlterationObserver\n+   #29 = Methodref          #28.#127      // org/apache/commons/io/monitor/FileAlterationObserver.initialize:()V\n+   #30 = InterfaceMethodref #128.#129     // java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+   #31 = Fieldref           #44.#130      // org/apache/commons/io/monitor/FileAlterationMonitor.thread:Ljava/lang/Thread;\n+   #32 = Class              #131          // java/lang/Thread\n+   #33 = Methodref          #32.#132      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+   #34 = Methodref          #32.#133      // java/lang/Thread.start:()V\n+   #35 = Methodref          #44.#134      // org/apache/commons/io/monitor/FileAlterationMonitor.stop:(J)V\n+   #36 = String             #135          // Monitor is not running\n+   #37 = Methodref          #32.#136      // java/lang/Thread.interrupt:()V\n+   #38 = Methodref          #32.#137      // java/lang/Thread.join:(J)V\n+   #39 = Class              #138          // java/lang/InterruptedException\n+   #40 = Methodref          #32.#139      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #41 = Methodref          #28.#140      // org/apache/commons/io/monitor/FileAlterationObserver.destroy:()V\n+   #42 = Methodref          #28.#141      // org/apache/commons/io/monitor/FileAlterationObserver.checkAndNotify:()V\n+   #43 = Methodref          #32.#142      // java/lang/Thread.sleep:(J)V\n+   #44 = Class              #143          // org/apache/commons/io/monitor/FileAlterationMonitor\n+   #45 = Class              #144          // java/lang/Object\n+   #46 = Class              #145          // java/lang/Runnable\n    #47 = Utf8               EMPTY_ARRAY\n    #48 = Utf8               [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n    #49 = Utf8               interval\n    #50 = Utf8               J\n    #51 = Utf8               observers\n    #52 = Utf8               Ljava/util/List;\n    #53 = Utf8               Signature\n@@ -80,120 +80,117 @@\n    #71 = Utf8               LocalVariableTypeTable\n    #72 = Utf8               Ljava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n    #73 = Utf8               (JLjava/util/Collection<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;)V\n    #74 = Utf8               (J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n    #75 = Utf8               observer\n    #76 = Utf8               Lorg/apache/commons/io/monitor/FileAlterationObserver;\n    #77 = Utf8               StackMapTable\n-   #78 = Class              #146          // org/apache/commons/io/monitor/FileAlterationMonitor\n-   #79 = Utf8               getInterval\n-   #80 = Utf8               ()J\n-   #81 = Utf8               setThreadFactory\n-   #82 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n-   #83 = Utf8               addObserver\n-   #84 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-   #85 = Utf8               removeObserver\n-   #86 = Utf8               getObservers\n-   #87 = Utf8               ()Ljava/lang/Iterable;\n-   #88 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n-   #89 = Utf8               start\n-   #90 = Class              #149          // java/util/Iterator\n-   #91 = Utf8               Exceptions\n-   #92 = Class              #150          // java/lang/Exception\n-   #93 = Utf8               stop\n-   #94 = Utf8               e\n-   #95 = Utf8               Ljava/lang/InterruptedException;\n-   #96 = Utf8               stopInterval\n-   #97 = Class              #141          // java/lang/InterruptedException\n-   #98 = Utf8               run\n-   #99 = Utf8               <clinit>\n-  #100 = Utf8               SourceFile\n-  #101 = Utf8               FileAlterationMonitor.java\n-  #102 = NameAndType        #61:#68       // \"<init>\":(J)V\n-  #103 = NameAndType        #61:#62       // \"<init>\":()V\n-  #104 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n-  #105 = NameAndType        #51:#52       // observers:Ljava/util/List;\n-  #106 = NameAndType        #49:#50       // interval:J\n-  #107 = Class              #151          // java/util/Optional\n-  #108 = NameAndType        #152:#153     // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n-  #109 = Class              #154          // java/util/Collections\n-  #110 = NameAndType        #155:#156     // emptyList:()Ljava/util/List;\n-  #111 = NameAndType        #157:#158     // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #112 = Utf8               java/util/Collection\n-  #113 = NameAndType        #47:#48       // EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n-  #114 = NameAndType        #159:#160     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #115 = NameAndType        #61:#74       // \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-  #116 = NameAndType        #83:#84       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n-  #117 = NameAndType        #57:#58       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n-  #118 = Class              #161          // java/util/List\n-  #119 = NameAndType        #162:#163     // add:(Ljava/lang/Object;)Z\n-  #120 = NameAndType        #164:#163     // remove:(Ljava/lang/Object;)Z\n-  #121 = NameAndType        #59:#60       // running:Z\n-  #122 = Utf8               java/lang/IllegalStateException\n-  #123 = Utf8               Monitor is already running\n-  #124 = NameAndType        #61:#165      // \"<init>\":(Ljava/lang/String;)V\n-  #125 = NameAndType        #166:#167     // iterator:()Ljava/util/Iterator;\n-  #126 = Class              #149          // java/util/Iterator\n-  #127 = NameAndType        #168:#169     // hasNext:()Z\n-  #128 = NameAndType        #170:#171     // next:()Ljava/lang/Object;\n-  #129 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n-  #130 = NameAndType        #172:#62      // initialize:()V\n-  #131 = Class              #173          // java/util/concurrent/ThreadFactory\n-  #132 = NameAndType        #174:#175     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #133 = NameAndType        #55:#56       // thread:Ljava/lang/Thread;\n-  #134 = Utf8               java/lang/Thread\n-  #135 = NameAndType        #61:#176      // \"<init>\":(Ljava/lang/Runnable;)V\n-  #136 = NameAndType        #89:#62       // start:()V\n-  #137 = NameAndType        #93:#68       // stop:(J)V\n-  #138 = Utf8               Monitor is not running\n-  #139 = NameAndType        #177:#62      // interrupt:()V\n-  #140 = NameAndType        #178:#68      // join:(J)V\n-  #141 = Utf8               java/lang/InterruptedException\n-  #142 = NameAndType        #179:#180     // currentThread:()Ljava/lang/Thread;\n-  #143 = NameAndType        #181:#62      // destroy:()V\n-  #144 = NameAndType        #182:#62      // checkAndNotify:()V\n-  #145 = NameAndType        #183:#68      // sleep:(J)V\n-  #146 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n-  #147 = Utf8               java/lang/Object\n-  #148 = Utf8               java/lang/Runnable\n-  #149 = Utf8               java/util/Iterator\n-  #150 = Utf8               java/lang/Exception\n-  #151 = Utf8               java/util/Optional\n-  #152 = Utf8               ofNullable\n-  #153 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;\n-  #154 = Utf8               java/util/Collections\n-  #155 = Utf8               emptyList\n-  #156 = Utf8               ()Ljava/util/List;\n-  #157 = Utf8               orElse\n-  #158 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #159 = Utf8               toArray\n-  #160 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #161 = Utf8               java/util/List\n-  #162 = Utf8               add\n-  #163 = Utf8               (Ljava/lang/Object;)Z\n-  #164 = Utf8               remove\n-  #165 = Utf8               (Ljava/lang/String;)V\n-  #166 = Utf8               iterator\n-  #167 = Utf8               ()Ljava/util/Iterator;\n-  #168 = Utf8               hasNext\n-  #169 = Utf8               ()Z\n-  #170 = Utf8               next\n-  #171 = Utf8               ()Ljava/lang/Object;\n-  #172 = Utf8               initialize\n-  #173 = Utf8               java/util/concurrent/ThreadFactory\n-  #174 = Utf8               newThread\n-  #175 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n-  #176 = Utf8               (Ljava/lang/Runnable;)V\n-  #177 = Utf8               interrupt\n-  #178 = Utf8               join\n-  #179 = Utf8               currentThread\n-  #180 = Utf8               ()Ljava/lang/Thread;\n-  #181 = Utf8               destroy\n-  #182 = Utf8               checkAndNotify\n-  #183 = Utf8               sleep\n+   #78 = Utf8               getInterval\n+   #79 = Utf8               ()J\n+   #80 = Utf8               setThreadFactory\n+   #81 = Utf8               (Ljava/util/concurrent/ThreadFactory;)V\n+   #82 = Utf8               addObserver\n+   #83 = Utf8               (Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+   #84 = Utf8               removeObserver\n+   #85 = Utf8               getObservers\n+   #86 = Utf8               ()Ljava/lang/Iterable;\n+   #87 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+   #88 = Utf8               start\n+   #89 = Class              #146          // java/util/Iterator\n+   #90 = Utf8               Exceptions\n+   #91 = Class              #147          // java/lang/Exception\n+   #92 = Utf8               stop\n+   #93 = Utf8               e\n+   #94 = Utf8               Ljava/lang/InterruptedException;\n+   #95 = Utf8               stopInterval\n+   #96 = Utf8               run\n+   #97 = Utf8               <clinit>\n+   #98 = Utf8               SourceFile\n+   #99 = Utf8               FileAlterationMonitor.java\n+  #100 = NameAndType        #61:#68       // \"<init>\":(J)V\n+  #101 = NameAndType        #61:#62       // \"<init>\":()V\n+  #102 = Utf8               java/util/concurrent/CopyOnWriteArrayList\n+  #103 = NameAndType        #51:#52       // observers:Ljava/util/List;\n+  #104 = NameAndType        #49:#50       // interval:J\n+  #105 = Class              #148          // java/util/Optional\n+  #106 = NameAndType        #149:#150     // ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;\n+  #107 = Class              #151          // java/util/Collections\n+  #108 = NameAndType        #152:#153     // emptyList:()Ljava/util/List;\n+  #109 = NameAndType        #154:#155     // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #110 = Utf8               java/util/Collection\n+  #111 = NameAndType        #47:#48       // EMPTY_ARRAY:[Lorg/apache/commons/io/monitor/FileAlterationObserver;\n+  #112 = NameAndType        #156:#157     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #113 = NameAndType        #61:#74       // \"<init>\":(J[Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+  #114 = NameAndType        #82:#83       // addObserver:(Lorg/apache/commons/io/monitor/FileAlterationObserver;)V\n+  #115 = NameAndType        #57:#58       // threadFactory:Ljava/util/concurrent/ThreadFactory;\n+  #116 = Class              #158          // java/util/List\n+  #117 = NameAndType        #159:#160     // add:(Ljava/lang/Object;)Z\n+  #118 = NameAndType        #161:#160     // remove:(Ljava/lang/Object;)Z\n+  #119 = NameAndType        #59:#60       // running:Z\n+  #120 = Utf8               java/lang/IllegalStateException\n+  #121 = Utf8               Monitor is already running\n+  #122 = NameAndType        #61:#162      // \"<init>\":(Ljava/lang/String;)V\n+  #123 = NameAndType        #163:#164     // iterator:()Ljava/util/Iterator;\n+  #124 = NameAndType        #165:#166     // hasNext:()Z\n+  #125 = NameAndType        #167:#168     // next:()Ljava/lang/Object;\n+  #126 = Utf8               org/apache/commons/io/monitor/FileAlterationObserver\n+  #127 = NameAndType        #169:#62      // initialize:()V\n+  #128 = Class              #170          // java/util/concurrent/ThreadFactory\n+  #129 = NameAndType        #171:#172     // newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;\n+  #130 = NameAndType        #55:#56       // thread:Ljava/lang/Thread;\n+  #131 = Utf8               java/lang/Thread\n+  #132 = NameAndType        #61:#173      // \"<init>\":(Ljava/lang/Runnable;)V\n+  #133 = NameAndType        #88:#62       // start:()V\n+  #134 = NameAndType        #92:#68       // stop:(J)V\n+  #135 = Utf8               Monitor is not running\n+  #136 = NameAndType        #174:#62      // interrupt:()V\n+  #137 = NameAndType        #175:#68      // join:(J)V\n+  #138 = Utf8               java/lang/InterruptedException\n+  #139 = NameAndType        #176:#177     // currentThread:()Ljava/lang/Thread;\n+  #140 = NameAndType        #178:#62      // destroy:()V\n+  #141 = NameAndType        #179:#62      // checkAndNotify:()V\n+  #142 = NameAndType        #180:#68      // sleep:(J)V\n+  #143 = Utf8               org/apache/commons/io/monitor/FileAlterationMonitor\n+  #144 = Utf8               java/lang/Object\n+  #145 = Utf8               java/lang/Runnable\n+  #146 = Utf8               java/util/Iterator\n+  #147 = Utf8               java/lang/Exception\n+  #148 = Utf8               java/util/Optional\n+  #149 = Utf8               ofNullable\n+  #150 = Utf8               (Ljava/lang/Object;)Ljava/util/Optional;\n+  #151 = Utf8               java/util/Collections\n+  #152 = Utf8               emptyList\n+  #153 = Utf8               ()Ljava/util/List;\n+  #154 = Utf8               orElse\n+  #155 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #156 = Utf8               toArray\n+  #157 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #158 = Utf8               java/util/List\n+  #159 = Utf8               add\n+  #160 = Utf8               (Ljava/lang/Object;)Z\n+  #161 = Utf8               remove\n+  #162 = Utf8               (Ljava/lang/String;)V\n+  #163 = Utf8               iterator\n+  #164 = Utf8               ()Ljava/util/Iterator;\n+  #165 = Utf8               hasNext\n+  #166 = Utf8               ()Z\n+  #167 = Utf8               next\n+  #168 = Utf8               ()Ljava/lang/Object;\n+  #169 = Utf8               initialize\n+  #170 = Utf8               java/util/concurrent/ThreadFactory\n+  #171 = Utf8               newThread\n+  #172 = Utf8               (Ljava/lang/Runnable;)Ljava/lang/Thread;\n+  #173 = Utf8               (Ljava/lang/Runnable;)V\n+  #174 = Utf8               interrupt\n+  #175 = Utf8               join\n+  #176 = Utf8               currentThread\n+  #177 = Utf8               ()Ljava/lang/Thread;\n+  #178 = Utf8               destroy\n+  #179 = Utf8               checkAndNotify\n+  #180 = Utf8               sleep\n {\n   private static final org.apache.commons.io.monitor.FileAlterationObserver[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/commons/io/monitor/FileAlterationObserver;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private final long interval;\n     descriptor: J\n@@ -433,15 +430,15 @@\n          1: getfield      #7                  // Field observers:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 144: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/monitor/FileAlterationMonitor;\n-    Signature: #88                          // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n+    Signature: #87                          // ()Ljava/lang/Iterable<Lorg/apache/commons/io/monitor/FileAlterationObserver;>;\n \n   public synchronized void start() throws java.lang.Exception;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n"}]}
