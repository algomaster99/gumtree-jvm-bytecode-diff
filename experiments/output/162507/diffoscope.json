{"diffoscope-json-version": 1, "source1": "first/EnumElementValue.class", "source2": "second/EnumElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,109 +1,107 @@\n-  SHA-256 checksum 0610ffa2e37758b3f52b63df1f6bc8b14abe47be68da3c92913a0ed02797e9e2\n+  SHA-256 checksum 8900519a74d3abd8aca764826eaf9c85cc5bbedcea2c79eea040bf8250ae3a43\n   Compiled from \"EnumElementValue.java\"\n public class org.apache.bcel.classfile.EnumElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #19                         // org/apache/bcel/classfile/EnumElementValue\n   super_class: #2                         // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 2, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#51         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #2 = Class              #52            // org/apache/bcel/classfile/ElementValue\n-   #3 = Class              #53            // java/lang/IllegalArgumentException\n-   #4 = Class              #54            // java/lang/StringBuilder\n-   #5 = Methodref          #4.#55         // java/lang/StringBuilder.\"<init>\":()V\n-   #6 = String             #56            // Only element values of type enum can be built with this ctor - type specified:\n-   #7 = Methodref          #4.#57         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #8 = Methodref          #4.#58         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #9 = Methodref          #4.#59         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #3.#60         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Fieldref           #19.#61        // org/apache/bcel/classfile/EnumElementValue.typeIdx:I\n-  #12 = Fieldref           #19.#62        // org/apache/bcel/classfile/EnumElementValue.valueIdx:I\n-  #13 = Methodref          #2.#63         // org/apache/bcel/classfile/ElementValue.getType:()I\n-  #14 = Methodref          #64.#65        // java/io/DataOutputStream.writeByte:(I)V\n-  #15 = Methodref          #64.#66        // java/io/DataOutputStream.writeShort:(I)V\n-  #16 = Methodref          #2.#67         // org/apache/bcel/classfile/ElementValue.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #17 = Methodref          #68.#69        // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #18 = Methodref          #70.#71        // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-  #19 = Class              #72            // org/apache/bcel/classfile/EnumElementValue\n+   #1 = Methodref          #2.#50         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #2 = Class              #51            // org/apache/bcel/classfile/ElementValue\n+   #3 = Class              #52            // java/lang/IllegalArgumentException\n+   #4 = Class              #53            // java/lang/StringBuilder\n+   #5 = Methodref          #4.#54         // java/lang/StringBuilder.\"<init>\":()V\n+   #6 = String             #55            // Only element values of type enum can be built with this ctor - type specified:\n+   #7 = Methodref          #4.#56         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #8 = Methodref          #4.#57         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #9 = Methodref          #4.#58         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #10 = Methodref          #3.#59         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = Fieldref           #19.#60        // org/apache/bcel/classfile/EnumElementValue.typeIdx:I\n+  #12 = Fieldref           #19.#61        // org/apache/bcel/classfile/EnumElementValue.valueIdx:I\n+  #13 = Methodref          #2.#62         // org/apache/bcel/classfile/ElementValue.getType:()I\n+  #14 = Methodref          #63.#64        // java/io/DataOutputStream.writeByte:(I)V\n+  #15 = Methodref          #63.#65        // java/io/DataOutputStream.writeShort:(I)V\n+  #16 = Methodref          #2.#66         // org/apache/bcel/classfile/ElementValue.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #17 = Methodref          #34.#67        // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #18 = Methodref          #68.#69        // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+  #19 = Class              #70            // org/apache/bcel/classfile/EnumElementValue\n   #20 = Utf8               typeIdx\n   #21 = Utf8               I\n   #22 = Utf8               valueIdx\n   #23 = Utf8               <init>\n   #24 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n   #25 = Utf8               Code\n   #26 = Utf8               LineNumberTable\n   #27 = Utf8               LocalVariableTable\n   #28 = Utf8               this\n   #29 = Utf8               Lorg/apache/bcel/classfile/EnumElementValue;\n   #30 = Utf8               type\n   #31 = Utf8               cpool\n   #32 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n   #33 = Utf8               StackMapTable\n-  #34 = Class              #72            // org/apache/bcel/classfile/EnumElementValue\n-  #35 = Class              #73            // org/apache/bcel/classfile/ConstantPool\n-  #36 = Utf8               dump\n-  #37 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #38 = Utf8               dos\n-  #39 = Utf8               Ljava/io/DataOutputStream;\n-  #40 = Utf8               Exceptions\n-  #41 = Class              #74            // java/io/IOException\n-  #42 = Utf8               getEnumTypeString\n-  #43 = Utf8               ()Ljava/lang/String;\n-  #44 = Utf8               getEnumValueString\n-  #45 = Utf8               getTypeIndex\n-  #46 = Utf8               ()I\n-  #47 = Utf8               getValueIndex\n-  #48 = Utf8               stringifyValue\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               EnumElementValue.java\n-  #51 = NameAndType        #23:#75        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #52 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #53 = Utf8               java/lang/IllegalArgumentException\n-  #54 = Utf8               java/lang/StringBuilder\n-  #55 = NameAndType        #23:#76        // \"<init>\":()V\n-  #56 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n-  #57 = NameAndType        #77:#78        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #58 = NameAndType        #77:#79        // append:(I)Ljava/lang/StringBuilder;\n-  #59 = NameAndType        #80:#43        // toString:()Ljava/lang/String;\n-  #60 = NameAndType        #23:#81        // \"<init>\":(Ljava/lang/String;)V\n-  #61 = NameAndType        #20:#21        // typeIdx:I\n-  #62 = NameAndType        #22:#21        // valueIdx:I\n-  #63 = NameAndType        #82:#46        // getType:()I\n-  #64 = Class              #83            // java/io/DataOutputStream\n-  #65 = NameAndType        #84:#85        // writeByte:(I)V\n-  #66 = NameAndType        #86:#85        // writeShort:(I)V\n-  #67 = NameAndType        #87:#88        // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #68 = Class              #73            // org/apache/bcel/classfile/ConstantPool\n-  #69 = NameAndType        #89:#90        // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #70 = Class              #91            // org/apache/bcel/classfile/ConstantUtf8\n-  #71 = NameAndType        #92:#43        // getBytes:()Ljava/lang/String;\n-  #72 = Utf8               org/apache/bcel/classfile/EnumElementValue\n-  #73 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #74 = Utf8               java/io/IOException\n-  #75 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #76 = Utf8               ()V\n-  #77 = Utf8               append\n-  #78 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #79 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #80 = Utf8               toString\n-  #81 = Utf8               (Ljava/lang/String;)V\n-  #82 = Utf8               getType\n-  #83 = Utf8               java/io/DataOutputStream\n-  #84 = Utf8               writeByte\n-  #85 = Utf8               (I)V\n-  #86 = Utf8               writeShort\n-  #87 = Utf8               getConstantPool\n-  #88 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #89 = Utf8               getConstantUtf8\n-  #90 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #91 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #92 = Utf8               getBytes\n+  #34 = Class              #71            // org/apache/bcel/classfile/ConstantPool\n+  #35 = Utf8               dump\n+  #36 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #37 = Utf8               dos\n+  #38 = Utf8               Ljava/io/DataOutputStream;\n+  #39 = Utf8               Exceptions\n+  #40 = Class              #72            // java/io/IOException\n+  #41 = Utf8               getEnumTypeString\n+  #42 = Utf8               ()Ljava/lang/String;\n+  #43 = Utf8               getEnumValueString\n+  #44 = Utf8               getTypeIndex\n+  #45 = Utf8               ()I\n+  #46 = Utf8               getValueIndex\n+  #47 = Utf8               stringifyValue\n+  #48 = Utf8               SourceFile\n+  #49 = Utf8               EnumElementValue.java\n+  #50 = NameAndType        #23:#73        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #51 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #52 = Utf8               java/lang/IllegalArgumentException\n+  #53 = Utf8               java/lang/StringBuilder\n+  #54 = NameAndType        #23:#74        // \"<init>\":()V\n+  #55 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n+  #56 = NameAndType        #75:#76        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #57 = NameAndType        #75:#77        // append:(I)Ljava/lang/StringBuilder;\n+  #58 = NameAndType        #78:#42        // toString:()Ljava/lang/String;\n+  #59 = NameAndType        #23:#79        // \"<init>\":(Ljava/lang/String;)V\n+  #60 = NameAndType        #20:#21        // typeIdx:I\n+  #61 = NameAndType        #22:#21        // valueIdx:I\n+  #62 = NameAndType        #80:#45        // getType:()I\n+  #63 = Class              #81            // java/io/DataOutputStream\n+  #64 = NameAndType        #82:#83        // writeByte:(I)V\n+  #65 = NameAndType        #84:#83        // writeShort:(I)V\n+  #66 = NameAndType        #85:#86        // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #67 = NameAndType        #87:#88        // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #68 = Class              #89            // org/apache/bcel/classfile/ConstantUtf8\n+  #69 = NameAndType        #90:#42        // getBytes:()Ljava/lang/String;\n+  #70 = Utf8               org/apache/bcel/classfile/EnumElementValue\n+  #71 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #72 = Utf8               java/io/IOException\n+  #73 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #74 = Utf8               ()V\n+  #75 = Utf8               append\n+  #76 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #77 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #78 = Utf8               toString\n+  #79 = Utf8               (Ljava/lang/String;)V\n+  #80 = Utf8               getType\n+  #81 = Utf8               java/io/DataOutputStream\n+  #82 = Utf8               writeByte\n+  #83 = Utf8               (I)V\n+  #84 = Utf8               writeShort\n+  #85 = Utf8               getConstantPool\n+  #86 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #87 = Utf8               getConstantUtf8\n+  #88 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #89 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #90 = Utf8               getBytes\n {\n   private final int typeIdx;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int valueIdx;\n     descriptor: I\n"}]}
