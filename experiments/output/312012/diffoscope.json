{"diffoscope-json-version": 1, "source1": "first/XXHash32.class", "source2": "second/XXHash32.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,108 @@\n-  SHA-256 checksum 46811b5f85bc4a493066155fdb15d8dc0afbc99ec3f7ee345d38730db41ff689\n+  SHA-256 checksum 12816b01de749b26be6f67f3c18833e83400fa9def768f6354d7401cbee60a84\n   Compiled from \"XXHash32.java\"\n public class org.apache.commons.compress.compressors.lz4.XXHash32 implements java.util.zip.Checksum\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/compressors/lz4/XXHash32\n-  super_class: #24                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/compress/compressors/lz4/XXHash32\n+  super_class: #16                        // java/lang/Object\n   interfaces: 1, fields: 13, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #63.#64        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #2 = Long               4294967295l\n-   #4 = Methodref          #8.#65         // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":(I)V\n-   #5 = Methodref          #24.#66        // java/lang/Object.\"<init>\":()V\n-   #6 = Fieldref           #8.#67         // org/apache/commons/compress/compressors/lz4/XXHash32.oneByte:[B\n-   #7 = Fieldref           #8.#68         // org/apache/commons/compress/compressors/lz4/XXHash32.state:[I\n-   #8 = Class              #69            // org/apache/commons/compress/compressors/lz4/XXHash32\n-   #9 = Fieldref           #8.#70         // org/apache/commons/compress/compressors/lz4/XXHash32.buffer:[B\n-  #10 = Fieldref           #8.#71         // org/apache/commons/compress/compressors/lz4/XXHash32.seed:I\n-  #11 = Methodref          #8.#72         // org/apache/commons/compress/compressors/lz4/XXHash32.initializeState:()V\n-  #12 = Fieldref           #8.#73         // org/apache/commons/compress/compressors/lz4/XXHash32.totalLen:I\n-  #13 = Methodref          #74.#75        // java/lang/Integer.rotateLeft:(II)I\n-  #14 = Integer            374761393\n-  #15 = Fieldref           #8.#76         // org/apache/commons/compress/compressors/lz4/XXHash32.pos:I\n-  #16 = Methodref          #8.#77         // org/apache/commons/compress/compressors/lz4/XXHash32.getInt:([BI)I\n-  #17 = Integer            -1028477379\n-  #18 = Integer            668265263\n-  #19 = Integer            -1640531535\n-  #20 = Integer            -2048144777\n-  #21 = Methodref          #78.#79        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #22 = Methodref          #8.#80         // org/apache/commons/compress/compressors/lz4/XXHash32.process:([BI)V\n-  #23 = Methodref          #8.#81         // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-  #24 = Class              #82            // java/lang/Object\n-  #25 = Class              #83            // java/util/zip/Checksum\n-  #26 = Utf8               BUF_SIZE\n-  #27 = Utf8               I\n-  #28 = Utf8               ConstantValue\n-  #29 = Integer            16\n-  #30 = Utf8               ROTATE_BITS\n-  #31 = Integer            13\n-  #32 = Utf8               PRIME1\n-  #33 = Utf8               PRIME2\n-  #34 = Utf8               PRIME3\n-  #35 = Utf8               PRIME4\n-  #36 = Utf8               PRIME5\n-  #37 = Utf8               oneByte\n-  #38 = Utf8               [B\n-  #39 = Utf8               state\n-  #40 = Utf8               [I\n-  #41 = Utf8               buffer\n-  #42 = Utf8               seed\n-  #43 = Utf8               totalLen\n-  #44 = Utf8               pos\n-  #45 = Utf8               getInt\n-  #46 = Utf8               ([BI)I\n-  #47 = Utf8               Code\n-  #48 = Utf8               LineNumberTable\n-  #49 = Utf8               <init>\n-  #50 = Utf8               ()V\n-  #51 = Utf8               (I)V\n-  #52 = Utf8               getValue\n-  #53 = Utf8               ()J\n-  #54 = Utf8               StackMapTable\n-  #55 = Utf8               initializeState\n-  #56 = Utf8               process\n-  #57 = Utf8               ([BI)V\n-  #58 = Utf8               reset\n-  #59 = Utf8               update\n-  #60 = Utf8               ([BII)V\n-  #61 = Utf8               SourceFile\n-  #62 = Utf8               XXHash32.java\n-  #63 = Class              #84            // org/apache/commons/compress/utils/ByteUtils\n-  #64 = NameAndType        #85:#86        // fromLittleEndian:([BII)J\n-  #65 = NameAndType        #49:#51        // \"<init>\":(I)V\n-  #66 = NameAndType        #49:#50        // \"<init>\":()V\n-  #67 = NameAndType        #37:#38        // oneByte:[B\n-  #68 = NameAndType        #39:#40        // state:[I\n-  #69 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #70 = NameAndType        #41:#38        // buffer:[B\n-  #71 = NameAndType        #42:#27        // seed:I\n-  #72 = NameAndType        #55:#50        // initializeState:()V\n-  #73 = NameAndType        #43:#27        // totalLen:I\n-  #74 = Class              #87            // java/lang/Integer\n-  #75 = NameAndType        #88:#89        // rotateLeft:(II)I\n-  #76 = NameAndType        #44:#27        // pos:I\n-  #77 = NameAndType        #45:#46        // getInt:([BI)I\n-  #78 = Class              #90            // java/lang/System\n-  #79 = NameAndType        #91:#92        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #80 = NameAndType        #56:#57        // process:([BI)V\n-  #81 = NameAndType        #59:#60        // update:([BII)V\n-  #82 = Utf8               java/lang/Object\n-  #83 = Utf8               java/util/zip/Checksum\n-  #84 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #85 = Utf8               fromLittleEndian\n-  #86 = Utf8               ([BII)J\n-  #87 = Utf8               java/lang/Integer\n-  #88 = Utf8               rotateLeft\n-  #89 = Utf8               (II)I\n-  #90 = Utf8               java/lang/System\n-  #91 = Utf8               arraycopy\n-  #92 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #2 = Class              #4             // org/apache/commons/compress/utils/ByteUtils\n+   #3 = NameAndType        #5:#6          // fromLittleEndian:([BII)J\n+   #4 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #5 = Utf8               fromLittleEndian\n+   #6 = Utf8               ([BII)J\n+   #7 = Long               4294967295l\n+   #9 = Methodref          #10.#11        // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":(I)V\n+  #10 = Class              #12            // org/apache/commons/compress/compressors/lz4/XXHash32\n+  #11 = NameAndType        #13:#14        // \"<init>\":(I)V\n+  #12 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+  #13 = Utf8               <init>\n+  #14 = Utf8               (I)V\n+  #15 = Methodref          #16.#17        // java/lang/Object.\"<init>\":()V\n+  #16 = Class              #18            // java/lang/Object\n+  #17 = NameAndType        #13:#19        // \"<init>\":()V\n+  #18 = Utf8               java/lang/Object\n+  #19 = Utf8               ()V\n+  #20 = Fieldref           #10.#21        // org/apache/commons/compress/compressors/lz4/XXHash32.oneByte:[B\n+  #21 = NameAndType        #22:#23        // oneByte:[B\n+  #22 = Utf8               oneByte\n+  #23 = Utf8               [B\n+  #24 = Fieldref           #10.#25        // org/apache/commons/compress/compressors/lz4/XXHash32.state:[I\n+  #25 = NameAndType        #26:#27        // state:[I\n+  #26 = Utf8               state\n+  #27 = Utf8               [I\n+  #28 = Fieldref           #10.#29        // org/apache/commons/compress/compressors/lz4/XXHash32.buffer:[B\n+  #29 = NameAndType        #30:#23        // buffer:[B\n+  #30 = Utf8               buffer\n+  #31 = Fieldref           #10.#32        // org/apache/commons/compress/compressors/lz4/XXHash32.seed:I\n+  #32 = NameAndType        #33:#34        // seed:I\n+  #33 = Utf8               seed\n+  #34 = Utf8               I\n+  #35 = Methodref          #10.#36        // org/apache/commons/compress/compressors/lz4/XXHash32.initializeState:()V\n+  #36 = NameAndType        #37:#19        // initializeState:()V\n+  #37 = Utf8               initializeState\n+  #38 = Fieldref           #10.#39        // org/apache/commons/compress/compressors/lz4/XXHash32.totalLen:I\n+  #39 = NameAndType        #40:#34        // totalLen:I\n+  #40 = Utf8               totalLen\n+  #41 = Methodref          #42.#43        // java/lang/Integer.rotateLeft:(II)I\n+  #42 = Class              #44            // java/lang/Integer\n+  #43 = NameAndType        #45:#46        // rotateLeft:(II)I\n+  #44 = Utf8               java/lang/Integer\n+  #45 = Utf8               rotateLeft\n+  #46 = Utf8               (II)I\n+  #47 = Integer            374761393\n+  #48 = Fieldref           #10.#49        // org/apache/commons/compress/compressors/lz4/XXHash32.pos:I\n+  #49 = NameAndType        #50:#34        // pos:I\n+  #50 = Utf8               pos\n+  #51 = Methodref          #10.#52        // org/apache/commons/compress/compressors/lz4/XXHash32.getInt:([BI)I\n+  #52 = NameAndType        #53:#54        // getInt:([BI)I\n+  #53 = Utf8               getInt\n+  #54 = Utf8               ([BI)I\n+  #55 = Integer            -1028477379\n+  #56 = Integer            668265263\n+  #57 = Integer            -1640531535\n+  #58 = Integer            -2048144777\n+  #59 = Methodref          #60.#61        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #60 = Class              #62            // java/lang/System\n+  #61 = NameAndType        #63:#64        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #62 = Utf8               java/lang/System\n+  #63 = Utf8               arraycopy\n+  #64 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #65 = Methodref          #10.#66        // org/apache/commons/compress/compressors/lz4/XXHash32.process:([BI)V\n+  #66 = NameAndType        #67:#68        // process:([BI)V\n+  #67 = Utf8               process\n+  #68 = Utf8               ([BI)V\n+  #69 = Methodref          #10.#70        // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+  #70 = NameAndType        #71:#72        // update:([BII)V\n+  #71 = Utf8               update\n+  #72 = Utf8               ([BII)V\n+  #73 = Class              #74            // java/util/zip/Checksum\n+  #74 = Utf8               java/util/zip/Checksum\n+  #75 = Utf8               BUF_SIZE\n+  #76 = Utf8               ConstantValue\n+  #77 = Integer            16\n+  #78 = Utf8               ROTATE_BITS\n+  #79 = Integer            13\n+  #80 = Utf8               PRIME1\n+  #81 = Utf8               PRIME2\n+  #82 = Utf8               PRIME3\n+  #83 = Utf8               PRIME4\n+  #84 = Utf8               PRIME5\n+  #85 = Utf8               Code\n+  #86 = Utf8               LineNumberTable\n+  #87 = Utf8               getValue\n+  #88 = Utf8               ()J\n+  #89 = Utf8               StackMapTable\n+  #90 = Utf8               reset\n+  #91 = Utf8               SourceFile\n+  #92 = Utf8               XXHash32.java\n {\n   private static final int BUF_SIZE = 16;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 16\n \n   private static final int ROTATE_BITS = 13;\n@@ -164,58 +164,58 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_4\n          3: invokestatic  #1                  // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-         6: ldc2_w        #2                  // long 4294967295l\n+         6: ldc2_w        #7                  // long 4294967295l\n          9: land\n         10: l2i\n         11: ireturn\n       LineNumberTable:\n         line 45: 0\n \n   public org.apache.commons.compress.compressors.lz4.XXHash32();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #4                  // Method \"<init>\":(I)V\n+         2: invokespecial #9                  // Method \"<init>\":(I)V\n          5: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 5\n \n   public org.apache.commons.compress.compressors.lz4.XXHash32(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #6                  // Field oneByte:[B\n+         8: putfield      #20                 // Field oneByte:[B\n         11: aload_0\n         12: iconst_4\n         13: newarray       int\n-        15: putfield      #7                  // Field state:[I\n+        15: putfield      #24                 // Field state:[I\n         18: aload_0\n         19: bipush        16\n         21: newarray       byte\n-        23: putfield      #9                  // Field buffer:[B\n+        23: putfield      #28                 // Field buffer:[B\n         26: aload_0\n         27: iload_1\n-        28: putfield      #10                 // Field seed:I\n+        28: putfield      #31                 // Field seed:I\n         31: aload_0\n-        32: invokespecial #11                 // Method initializeState:()V\n+        32: invokespecial #35                 // Method initializeState:()V\n         35: return\n       LineNumberTable:\n         line 69: 0\n         line 47: 4\n         line 48: 11\n         line 51: 18\n         line 70: 26\n@@ -224,133 +224,133 @@\n \n   public long getValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field totalLen:I\n+         1: getfield      #38                 // Field totalLen:I\n          4: bipush        16\n          6: if_icmple     59\n          9: aload_0\n-        10: getfield      #7                  // Field state:[I\n+        10: getfield      #24                 // Field state:[I\n         13: iconst_0\n         14: iaload\n         15: iconst_1\n-        16: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n+        16: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n         19: aload_0\n-        20: getfield      #7                  // Field state:[I\n+        20: getfield      #24                 // Field state:[I\n         23: iconst_1\n         24: iaload\n         25: bipush        7\n-        27: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n+        27: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n         30: iadd\n         31: aload_0\n-        32: getfield      #7                  // Field state:[I\n+        32: getfield      #24                 // Field state:[I\n         35: iconst_2\n         36: iaload\n         37: bipush        12\n-        39: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n+        39: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n         42: iadd\n         43: aload_0\n-        44: getfield      #7                  // Field state:[I\n+        44: getfield      #24                 // Field state:[I\n         47: iconst_3\n         48: iaload\n         49: bipush        18\n-        51: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n+        51: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n         54: iadd\n         55: istore_1\n         56: goto          69\n         59: aload_0\n-        60: getfield      #7                  // Field state:[I\n+        60: getfield      #24                 // Field state:[I\n         63: iconst_2\n         64: iaload\n-        65: ldc           #14                 // int 374761393\n+        65: ldc           #47                 // int 374761393\n         67: iadd\n         68: istore_1\n         69: iload_1\n         70: aload_0\n-        71: getfield      #12                 // Field totalLen:I\n+        71: getfield      #38                 // Field totalLen:I\n         74: iadd\n         75: istore_1\n         76: iconst_0\n         77: istore_2\n         78: aload_0\n-        79: getfield      #15                 // Field pos:I\n+        79: getfield      #48                 // Field pos:I\n         82: iconst_4\n         83: isub\n         84: istore_3\n         85: iload_2\n         86: iload_3\n         87: if_icmpgt     118\n         90: iload_1\n         91: aload_0\n-        92: getfield      #9                  // Field buffer:[B\n+        92: getfield      #28                 // Field buffer:[B\n         95: iload_2\n-        96: invokestatic  #16                 // Method getInt:([BI)I\n-        99: ldc           #17                 // int -1028477379\n+        96: invokestatic  #51                 // Method getInt:([BI)I\n+        99: ldc           #55                 // int -1028477379\n        101: imul\n        102: iadd\n        103: bipush        17\n-       105: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-       108: ldc           #18                 // int 668265263\n+       105: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+       108: ldc           #56                 // int 668265263\n        110: imul\n        111: istore_1\n        112: iinc          2, 4\n        115: goto          85\n        118: iload_2\n        119: aload_0\n-       120: getfield      #15                 // Field pos:I\n+       120: getfield      #48                 // Field pos:I\n        123: if_icmpge     156\n        126: iload_1\n        127: aload_0\n-       128: getfield      #9                  // Field buffer:[B\n+       128: getfield      #28                 // Field buffer:[B\n        131: iload_2\n        132: iinc          2, 1\n        135: baload\n        136: sipush        255\n        139: iand\n-       140: ldc           #14                 // int 374761393\n+       140: ldc           #47                 // int 374761393\n        142: imul\n        143: iadd\n        144: bipush        11\n-       146: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-       149: ldc           #19                 // int -1640531535\n+       146: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+       149: ldc           #57                 // int -1640531535\n        151: imul\n        152: istore_1\n        153: goto          118\n        156: iload_1\n        157: iload_1\n        158: bipush        15\n        160: iushr\n        161: ixor\n        162: istore_1\n        163: iload_1\n-       164: ldc           #20                 // int -2048144777\n+       164: ldc           #58                 // int -2048144777\n        166: imul\n        167: istore_1\n        168: iload_1\n        169: iload_1\n        170: bipush        13\n        172: iushr\n        173: ixor\n        174: istore_1\n        175: iload_1\n-       176: ldc           #17                 // int -1028477379\n+       176: ldc           #55                 // int -1028477379\n        178: imul\n        179: istore_1\n        180: iload_1\n        181: iload_1\n        182: bipush        16\n        184: iushr\n        185: ixor\n        186: istore_1\n        187: iload_1\n        188: i2l\n-       189: ldc2_w        #2                  // long 4294967295l\n+       189: ldc2_w        #7                  // long 4294967295l\n        192: land\n        193: lreturn\n       LineNumberTable:\n         line 77: 0\n         line 78: 9\n         line 79: 16\n         line 80: 27\n@@ -384,43 +384,43 @@\n \n   private void initializeState();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field state:[I\n+         1: getfield      #24                 // Field state:[I\n          4: iconst_0\n          5: aload_0\n-         6: getfield      #10                 // Field seed:I\n-         9: ldc           #19                 // int -1640531535\n+         6: getfield      #31                 // Field seed:I\n+         9: ldc           #57                 // int -1640531535\n         11: iadd\n-        12: ldc           #20                 // int -2048144777\n+        12: ldc           #58                 // int -2048144777\n         14: iadd\n         15: iastore\n         16: aload_0\n-        17: getfield      #7                  // Field state:[I\n+        17: getfield      #24                 // Field state:[I\n         20: iconst_1\n         21: aload_0\n-        22: getfield      #10                 // Field seed:I\n-        25: ldc           #20                 // int -2048144777\n+        22: getfield      #31                 // Field seed:I\n+        25: ldc           #58                 // int -2048144777\n         27: iadd\n         28: iastore\n         29: aload_0\n-        30: getfield      #7                  // Field state:[I\n+        30: getfield      #24                 // Field state:[I\n         33: iconst_2\n         34: aload_0\n-        35: getfield      #10                 // Field seed:I\n+        35: getfield      #31                 // Field seed:I\n         38: iastore\n         39: aload_0\n-        40: getfield      #7                  // Field state:[I\n+        40: getfield      #24                 // Field state:[I\n         43: iconst_3\n         44: aload_0\n-        45: getfield      #10                 // Field seed:I\n-        48: ldc           #19                 // int -1640531535\n+        45: getfield      #31                 // Field seed:I\n+        48: ldc           #57                 // int -1640531535\n         50: isub\n         51: iastore\n         52: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 16\n         line 108: 29\n@@ -429,110 +429,110 @@\n \n   private void process(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_0\n-         1: getfield      #7                  // Field state:[I\n+         1: getfield      #24                 // Field state:[I\n          4: iconst_0\n          5: iaload\n          6: istore_3\n          7: aload_0\n-         8: getfield      #7                  // Field state:[I\n+         8: getfield      #24                 // Field state:[I\n         11: iconst_1\n         12: iaload\n         13: istore        4\n         15: aload_0\n-        16: getfield      #7                  // Field state:[I\n+        16: getfield      #24                 // Field state:[I\n         19: iconst_2\n         20: iaload\n         21: istore        5\n         23: aload_0\n-        24: getfield      #7                  // Field state:[I\n+        24: getfield      #24                 // Field state:[I\n         27: iconst_3\n         28: iaload\n         29: istore        6\n         31: iload_3\n         32: aload_1\n         33: iload_2\n-        34: invokestatic  #16                 // Method getInt:([BI)I\n-        37: ldc           #20                 // int -2048144777\n+        34: invokestatic  #51                 // Method getInt:([BI)I\n+        37: ldc           #58                 // int -2048144777\n         39: imul\n         40: iadd\n         41: bipush        13\n-        43: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-        46: ldc           #19                 // int -1640531535\n+        43: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+        46: ldc           #57                 // int -1640531535\n         48: imul\n         49: istore_3\n         50: iload         4\n         52: aload_1\n         53: iload_2\n         54: iconst_4\n         55: iadd\n-        56: invokestatic  #16                 // Method getInt:([BI)I\n-        59: ldc           #20                 // int -2048144777\n+        56: invokestatic  #51                 // Method getInt:([BI)I\n+        59: ldc           #58                 // int -2048144777\n         61: imul\n         62: iadd\n         63: bipush        13\n-        65: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-        68: ldc           #19                 // int -1640531535\n+        65: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+        68: ldc           #57                 // int -1640531535\n         70: imul\n         71: istore        4\n         73: iload         5\n         75: aload_1\n         76: iload_2\n         77: bipush        8\n         79: iadd\n-        80: invokestatic  #16                 // Method getInt:([BI)I\n-        83: ldc           #20                 // int -2048144777\n+        80: invokestatic  #51                 // Method getInt:([BI)I\n+        83: ldc           #58                 // int -2048144777\n         85: imul\n         86: iadd\n         87: bipush        13\n-        89: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-        92: ldc           #19                 // int -1640531535\n+        89: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+        92: ldc           #57                 // int -1640531535\n         94: imul\n         95: istore        5\n         97: iload         6\n         99: aload_1\n        100: iload_2\n        101: bipush        12\n        103: iadd\n-       104: invokestatic  #16                 // Method getInt:([BI)I\n-       107: ldc           #20                 // int -2048144777\n+       104: invokestatic  #51                 // Method getInt:([BI)I\n+       107: ldc           #58                 // int -2048144777\n        109: imul\n        110: iadd\n        111: bipush        13\n-       113: invokestatic  #13                 // Method java/lang/Integer.rotateLeft:(II)I\n-       116: ldc           #19                 // int -1640531535\n+       113: invokestatic  #41                 // Method java/lang/Integer.rotateLeft:(II)I\n+       116: ldc           #57                 // int -1640531535\n        118: imul\n        119: istore        6\n        121: aload_0\n-       122: getfield      #7                  // Field state:[I\n+       122: getfield      #24                 // Field state:[I\n        125: iconst_0\n        126: iload_3\n        127: iastore\n        128: aload_0\n-       129: getfield      #7                  // Field state:[I\n+       129: getfield      #24                 // Field state:[I\n        132: iconst_1\n        133: iload         4\n        135: iastore\n        136: aload_0\n-       137: getfield      #7                  // Field state:[I\n+       137: getfield      #24                 // Field state:[I\n        140: iconst_2\n        141: iload         5\n        143: iastore\n        144: aload_0\n-       145: getfield      #7                  // Field state:[I\n+       145: getfield      #24                 // Field state:[I\n        148: iconst_3\n        149: iload         6\n        151: iastore\n        152: aload_0\n        153: iconst_0\n-       154: putfield      #15                 // Field pos:I\n+       154: putfield      #48                 // Field pos:I\n        157: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 7\n         line 116: 15\n         line 117: 23\n         line 119: 31\n@@ -548,21 +548,21 @@\n \n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #11                 // Method initializeState:()V\n+         1: invokespecial #35                 // Method initializeState:()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #12                 // Field totalLen:I\n+         6: putfield      #38                 // Field totalLen:I\n          9: aload_0\n         10: iconst_0\n-        11: putfield      #15                 // Field pos:I\n+        11: putfield      #48                 // Field pos:I\n         14: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 4\n         line 136: 9\n         line 137: 14\n \n@@ -572,97 +572,97 @@\n     Code:\n       stack=5, locals=6, args_size=4\n          0: iload_3\n          1: ifgt          5\n          4: return\n          5: aload_0\n          6: dup\n-         7: getfield      #12                 // Field totalLen:I\n+         7: getfield      #38                 // Field totalLen:I\n         10: iload_3\n         11: iadd\n-        12: putfield      #12                 // Field totalLen:I\n+        12: putfield      #38                 // Field totalLen:I\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: istore        4\n         20: aload_0\n-        21: getfield      #15                 // Field pos:I\n+        21: getfield      #48                 // Field pos:I\n         24: iload_3\n         25: iadd\n         26: bipush        16\n         28: if_icmpge     56\n         31: aload_1\n         32: iload_2\n         33: aload_0\n-        34: getfield      #9                  // Field buffer:[B\n+        34: getfield      #28                 // Field buffer:[B\n         37: aload_0\n-        38: getfield      #15                 // Field pos:I\n+        38: getfield      #48                 // Field pos:I\n         41: iload_3\n-        42: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        42: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         45: aload_0\n         46: dup\n-        47: getfield      #15                 // Field pos:I\n+        47: getfield      #48                 // Field pos:I\n         50: iload_3\n         51: iadd\n-        52: putfield      #15                 // Field pos:I\n+        52: putfield      #48                 // Field pos:I\n         55: return\n         56: aload_0\n-        57: getfield      #15                 // Field pos:I\n+        57: getfield      #48                 // Field pos:I\n         60: ifle          101\n         63: bipush        16\n         65: aload_0\n-        66: getfield      #15                 // Field pos:I\n+        66: getfield      #48                 // Field pos:I\n         69: isub\n         70: istore        5\n         72: aload_1\n         73: iload_2\n         74: aload_0\n-        75: getfield      #9                  // Field buffer:[B\n+        75: getfield      #28                 // Field buffer:[B\n         78: aload_0\n-        79: getfield      #15                 // Field pos:I\n+        79: getfield      #48                 // Field pos:I\n         82: iload         5\n-        84: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        84: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         87: aload_0\n         88: aload_0\n-        89: getfield      #9                  // Field buffer:[B\n+        89: getfield      #28                 // Field buffer:[B\n         92: iconst_0\n-        93: invokespecial #22                 // Method process:([BI)V\n+        93: invokespecial #65                 // Method process:([BI)V\n         96: iload_2\n         97: iload         5\n         99: iadd\n        100: istore_2\n        101: iload         4\n        103: bipush        16\n        105: isub\n        106: istore        5\n        108: iload_2\n        109: iload         5\n        111: if_icmpgt     126\n        114: aload_0\n        115: aload_1\n        116: iload_2\n-       117: invokespecial #22                 // Method process:([BI)V\n+       117: invokespecial #65                 // Method process:([BI)V\n        120: iinc          2, 16\n        123: goto          108\n        126: iload_2\n        127: iload         4\n        129: if_icmpge     154\n        132: aload_0\n        133: iload         4\n        135: iload_2\n        136: isub\n-       137: putfield      #15                 // Field pos:I\n+       137: putfield      #48                 // Field pos:I\n        140: aload_1\n        141: iload_2\n        142: aload_0\n-       143: getfield      #9                  // Field buffer:[B\n+       143: getfield      #28                 // Field buffer:[B\n        146: iconst_0\n        147: aload_0\n-       148: getfield      #15                 // Field pos:I\n-       151: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       148: getfield      #48                 // Field pos:I\n+       151: invokestatic  #59                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        154: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 4\n         line 144: 5\n         line 146: 15\n         line 148: 20\n@@ -696,27 +696,27 @@\n \n   public void update(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field oneByte:[B\n+         1: getfield      #20                 // Field oneByte:[B\n          4: iconst_0\n          5: iload_1\n          6: sipush        255\n          9: iand\n         10: i2b\n         11: bastore\n         12: aload_0\n         13: aload_0\n-        14: getfield      #6                  // Field oneByte:[B\n+        14: getfield      #20                 // Field oneByte:[B\n         17: iconst_0\n         18: iconst_1\n-        19: invokevirtual #23                 // Method update:([BII)V\n+        19: invokevirtual #69                 // Method update:([BII)V\n         22: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 12\n         line 177: 22\n }\n SourceFile: \"XXHash32.java\"\n"}]}
