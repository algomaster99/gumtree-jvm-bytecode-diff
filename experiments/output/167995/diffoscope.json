{"diffoscope-json-version": 1, "source1": "first/FileFilterUtils.class", "source2": "second/FileFilterUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,104 +1,104 @@\n-  SHA-256 checksum fa85d7061afe891fc3f90547955380a5ce530a28243c8583a71d0d58ed5e0682\n+  SHA-256 checksum 0dbbbe8fff8c41a785741f76e323e49ab277926905496fa0bad03c169be55763\n   Compiled from \"FileFilterUtils.java\"\n public class org.apache.commons.io.filefilter.FileFilterUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #86                         // org/apache/commons/io/filefilter/FileFilterUtils\n   super_class: #87                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 44, attributes: 1\n Constant pool:\n-    #1 = Methodref          #87.#212      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #213          // java/lang/IllegalArgumentException\n-    #3 = String             #214          // file filter is null\n-    #4 = Methodref          #2.#215       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #216.#217     // org/apache/commons/io/FileUtils.EMPTY_FILE_ARRAY:[Ljava/io/File;\n-    #6 = Class              #218          // java/util/ArrayList\n-    #7 = Methodref          #6.#212       // java/util/ArrayList.\"<init>\":()V\n-    #8 = String             #219          // file array contains null\n-    #9 = InterfaceMethodref #78.#220      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #10 = InterfaceMethodref #15.#221      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #11 = InterfaceMethodref #15.#222      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #87.#209      // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #210          // java/lang/IllegalArgumentException\n+    #3 = String             #211          // file filter is null\n+    #4 = Methodref          #2.#212       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #5 = Fieldref           #213.#214     // org/apache/commons/io/FileUtils.EMPTY_FILE_ARRAY:[Ljava/io/File;\n+    #6 = Class              #215          // java/util/ArrayList\n+    #7 = Methodref          #6.#209       // java/util/ArrayList.\"<init>\":()V\n+    #8 = String             #216          // file array contains null\n+    #9 = InterfaceMethodref #78.#217      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #10 = InterfaceMethodref #15.#218      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #11 = InterfaceMethodref #15.#219      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #12 = Class              #103          // \"[Ljava/io/File;\"\n-   #13 = Methodref          #86.#223      // org/apache/commons/io/filefilter/FileFilterUtils.filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-   #14 = Methodref          #86.#224      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-   #15 = Class              #225          // java/util/List\n-   #16 = Methodref          #86.#226      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n-   #17 = Methodref          #227.#228     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #18 = Class              #229          // java/util/HashSet\n-   #19 = Methodref          #18.#230      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n-   #20 = Methodref          #18.#212      // java/util/HashSet.\"<init>\":()V\n-   #21 = Class              #231          // java/util/Set\n-   #22 = InterfaceMethodref #232.#233     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #23 = InterfaceMethodref #234.#235     // java/util/Iterator.hasNext:()Z\n-   #24 = InterfaceMethodref #234.#236     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #25 = Class              #237          // java/io/File\n-   #26 = String             #238          // file collection contains null\n-   #27 = InterfaceMethodref #239.#221     // java/util/Collection.add:(Ljava/lang/Object;)Z\n-   #28 = Class              #240          // org/apache/commons/io/filefilter/PrefixFileFilter\n-   #29 = Methodref          #28.#215      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Methodref          #28.#241      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #31 = Class              #242          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #32 = Methodref          #31.#215      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Methodref          #31.#241      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #34 = Class              #243          // org/apache/commons/io/filefilter/NameFileFilter\n-   #35 = Methodref          #34.#215      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Methodref          #34.#241      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #37 = Fieldref           #244.#245     // org/apache/commons/io/filefilter/DirectoryFileFilter.DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #38 = Fieldref           #246.#247     // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #39 = Class              #248          // org/apache/commons/io/filefilter/AndFileFilter\n-   #40 = Methodref          #39.#249      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #41 = Class              #250          // org/apache/commons/io/filefilter/OrFileFilter\n-   #42 = Methodref          #41.#249      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #43 = Methodref          #86.#251      // org/apache/commons/io/filefilter/FileFilterUtils.toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-   #44 = Methodref          #39.#252      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/List;)V\n-   #45 = Methodref          #41.#252      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/List;)V\n-   #46 = String             #253          // The filters must not be null\n-   #47 = Methodref          #6.#254       // java/util/ArrayList.\"<init>\":(I)V\n-   #48 = Class              #255          // java/lang/StringBuilder\n-   #49 = Methodref          #48.#212      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = String             #256          // The filter[\n-   #51 = Methodref          #48.#257      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #52 = Methodref          #48.#258      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #53 = String             #259          // ] is null\n-   #54 = Methodref          #48.#260      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #55 = Class              #261          // org/apache/commons/io/filefilter/NotFileFilter\n-   #56 = Methodref          #55.#262      // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #57 = Fieldref           #263.#264     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #58 = Fieldref           #265.#266     // org/apache/commons/io/filefilter/FalseFileFilter.FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #59 = Class              #267          // org/apache/commons/io/filefilter/DelegateFileFilter\n-   #60 = Methodref          #59.#268      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FileFilter;)V\n-   #61 = Methodref          #59.#269      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FilenameFilter;)V\n-   #62 = Class              #270          // org/apache/commons/io/filefilter/AgeFileFilter\n-   #63 = Methodref          #62.#271      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(J)V\n-   #64 = Methodref          #62.#272      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(JZ)V\n-   #65 = Methodref          #62.#273      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;)V\n-   #66 = Methodref          #62.#274      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;Z)V\n-   #67 = Methodref          #62.#275      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;)V\n-   #68 = Methodref          #62.#276      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;Z)V\n-   #69 = Class              #277          // org/apache/commons/io/filefilter/SizeFileFilter\n-   #70 = Methodref          #69.#271      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(J)V\n-   #71 = Methodref          #69.#272      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n-   #72 = Class              #278          // org/apache/commons/io/filefilter/MagicNumberFileFilter\n-   #73 = Methodref          #72.#215      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #74 = Methodref          #72.#279      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;J)V\n-   #75 = Methodref          #72.#280      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([B)V\n-   #76 = Methodref          #72.#281      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([BJ)V\n-   #77 = Fieldref           #86.#282      // org/apache/commons/io/filefilter/FileFilterUtils.cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #78 = Class              #283          // org/apache/commons/io/filefilter/IOFileFilter\n-   #79 = Methodref          #86.#284      // org/apache/commons/io/filefilter/FileFilterUtils.and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #80 = Fieldref           #86.#285      // org/apache/commons/io/filefilter/FileFilterUtils.svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #81 = Methodref          #86.#286      // org/apache/commons/io/filefilter/FileFilterUtils.directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #82 = String             #287          // CVS\n-   #83 = Methodref          #86.#288      // org/apache/commons/io/filefilter/FileFilterUtils.nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #84 = Methodref          #86.#289      // org/apache/commons/io/filefilter/FileFilterUtils.notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #85 = String             #290          // .svn\n-   #86 = Class              #291          // org/apache/commons/io/filefilter/FileFilterUtils\n-   #87 = Class              #292          // java/lang/Object\n+   #13 = Methodref          #86.#220      // org/apache/commons/io/filefilter/FileFilterUtils.filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+   #14 = Methodref          #86.#221      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+   #15 = Class              #222          // java/util/List\n+   #16 = Methodref          #86.#223      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n+   #17 = Methodref          #224.#225     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #18 = Class              #226          // java/util/HashSet\n+   #19 = Methodref          #18.#227      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n+   #20 = Methodref          #18.#209      // java/util/HashSet.\"<init>\":()V\n+   #21 = Class              #228          // java/util/Set\n+   #22 = InterfaceMethodref #229.#230     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #23 = InterfaceMethodref #127.#231     // java/util/Iterator.hasNext:()Z\n+   #24 = InterfaceMethodref #127.#232     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #25 = Class              #233          // java/io/File\n+   #26 = String             #234          // file collection contains null\n+   #27 = InterfaceMethodref #235.#218     // java/util/Collection.add:(Ljava/lang/Object;)Z\n+   #28 = Class              #236          // org/apache/commons/io/filefilter/PrefixFileFilter\n+   #29 = Methodref          #28.#212      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Methodref          #28.#237      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #31 = Class              #238          // org/apache/commons/io/filefilter/SuffixFileFilter\n+   #32 = Methodref          #31.#212      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #33 = Methodref          #31.#237      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #34 = Class              #239          // org/apache/commons/io/filefilter/NameFileFilter\n+   #35 = Methodref          #34.#212      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #36 = Methodref          #34.#237      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #37 = Fieldref           #240.#241     // org/apache/commons/io/filefilter/DirectoryFileFilter.DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #38 = Fieldref           #242.#243     // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #39 = Class              #244          // org/apache/commons/io/filefilter/AndFileFilter\n+   #40 = Methodref          #39.#245      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #41 = Class              #246          // org/apache/commons/io/filefilter/OrFileFilter\n+   #42 = Methodref          #41.#245      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #43 = Methodref          #86.#247      // org/apache/commons/io/filefilter/FileFilterUtils.toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+   #44 = Methodref          #39.#248      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/List;)V\n+   #45 = Methodref          #41.#248      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/List;)V\n+   #46 = String             #249          // The filters must not be null\n+   #47 = Methodref          #6.#250       // java/util/ArrayList.\"<init>\":(I)V\n+   #48 = Class              #251          // java/lang/StringBuilder\n+   #49 = Methodref          #48.#209      // java/lang/StringBuilder.\"<init>\":()V\n+   #50 = String             #252          // The filter[\n+   #51 = Methodref          #48.#253      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #48.#254      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #53 = String             #255          // ] is null\n+   #54 = Methodref          #48.#256      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #55 = Class              #257          // org/apache/commons/io/filefilter/NotFileFilter\n+   #56 = Methodref          #55.#258      // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #57 = Fieldref           #259.#260     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #58 = Fieldref           #261.#262     // org/apache/commons/io/filefilter/FalseFileFilter.FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #59 = Class              #263          // org/apache/commons/io/filefilter/DelegateFileFilter\n+   #60 = Methodref          #59.#264      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FileFilter;)V\n+   #61 = Methodref          #59.#265      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FilenameFilter;)V\n+   #62 = Class              #266          // org/apache/commons/io/filefilter/AgeFileFilter\n+   #63 = Methodref          #62.#267      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(J)V\n+   #64 = Methodref          #62.#268      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(JZ)V\n+   #65 = Methodref          #62.#269      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;)V\n+   #66 = Methodref          #62.#270      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;Z)V\n+   #67 = Methodref          #62.#271      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;)V\n+   #68 = Methodref          #62.#272      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;Z)V\n+   #69 = Class              #273          // org/apache/commons/io/filefilter/SizeFileFilter\n+   #70 = Methodref          #69.#267      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(J)V\n+   #71 = Methodref          #69.#268      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n+   #72 = Class              #274          // org/apache/commons/io/filefilter/MagicNumberFileFilter\n+   #73 = Methodref          #72.#212      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #74 = Methodref          #72.#275      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;J)V\n+   #75 = Methodref          #72.#276      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([B)V\n+   #76 = Methodref          #72.#277      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([BJ)V\n+   #77 = Fieldref           #86.#278      // org/apache/commons/io/filefilter/FileFilterUtils.cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #78 = Class              #279          // org/apache/commons/io/filefilter/IOFileFilter\n+   #79 = Methodref          #86.#280      // org/apache/commons/io/filefilter/FileFilterUtils.and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #80 = Fieldref           #86.#281      // org/apache/commons/io/filefilter/FileFilterUtils.svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #81 = Methodref          #86.#282      // org/apache/commons/io/filefilter/FileFilterUtils.directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #82 = String             #283          // CVS\n+   #83 = Methodref          #86.#284      // org/apache/commons/io/filefilter/FileFilterUtils.nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #84 = Methodref          #86.#285      // org/apache/commons/io/filefilter/FileFilterUtils.notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #85 = String             #286          // .svn\n+   #86 = Class              #287          // org/apache/commons/io/filefilter/FileFilterUtils\n+   #87 = Class              #288          // java/lang/Object\n    #88 = Utf8               cvsFilter\n    #89 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n    #90 = Utf8               svnFilter\n    #91 = Utf8               <init>\n    #92 = Utf8               ()V\n    #93 = Utf8               Code\n    #94 = Utf8               LineNumberTable\n@@ -112,249 +112,245 @@\n   #102 = Utf8               files\n   #103 = Utf8               [Ljava/io/File;\n   #104 = Utf8               acceptedFiles\n   #105 = Utf8               Ljava/util/List;\n   #106 = Utf8               LocalVariableTypeTable\n   #107 = Utf8               Ljava/util/List<Ljava/io/File;>;\n   #108 = Utf8               StackMapTable\n-  #109 = Class              #283          // org/apache/commons/io/filefilter/IOFileFilter\n-  #110 = Class              #225          // java/util/List\n-  #111 = Class              #237          // java/io/File\n-  #112 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;\n-  #113 = Utf8               Ljava/lang/Iterable;\n-  #114 = Utf8               Ljava/lang/Iterable<Ljava/io/File;>;\n-  #115 = Utf8               Signature\n-  #116 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n-  #117 = Utf8               filterList\n-  #118 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-  #119 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n-  #120 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n-  #121 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n-  #122 = Utf8               filterSet\n-  #123 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n-  #124 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n-  #125 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n-  #126 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n-  #127 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-  #128 = Utf8               Ljava/util/Collection;\n-  #129 = Utf8               TT;\n-  #130 = Class              #293          // java/util/Iterator\n-  #131 = Utf8               <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n-  #132 = Utf8               prefixFileFilter\n-  #133 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #134 = Utf8               prefix\n-  #135 = Utf8               Ljava/lang/String;\n-  #136 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #137 = Utf8               caseSensitivity\n-  #138 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #139 = Utf8               suffixFileFilter\n-  #140 = Utf8               suffix\n-  #141 = Utf8               nameFileFilter\n-  #142 = Utf8               name\n-  #143 = Utf8               directoryFileFilter\n-  #144 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #145 = Utf8               fileFileFilter\n-  #146 = Utf8               andFileFilter\n-  #147 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #148 = Utf8               filter1\n-  #149 = Utf8               filter2\n-  #150 = Utf8               Deprecated\n-  #151 = Utf8               RuntimeVisibleAnnotations\n-  #152 = Utf8               Ljava/lang/Deprecated;\n-  #153 = Utf8               orFileFilter\n-  #154 = Utf8               and\n-  #155 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #156 = Utf8               filters\n-  #157 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #158 = Utf8               or\n-  #159 = Utf8               toList\n-  #160 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-  #161 = Utf8               i\n-  #162 = Utf8               I\n-  #163 = Utf8               list\n-  #164 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-  #165 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-  #166 = Utf8               notFileFilter\n-  #167 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #168 = Utf8               trueFileFilter\n-  #169 = Utf8               falseFileFilter\n-  #170 = Utf8               asFileFilter\n-  #171 = Utf8               (Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #172 = Utf8               Ljava/io/FileFilter;\n-  #173 = Utf8               (Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #174 = Utf8               Ljava/io/FilenameFilter;\n-  #175 = Utf8               ageFileFilter\n-  #176 = Utf8               (J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #177 = Utf8               cutoff\n-  #178 = Utf8               J\n-  #179 = Utf8               (JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #180 = Utf8               acceptOlder\n-  #181 = Utf8               Z\n-  #182 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #183 = Utf8               cutoffDate\n-  #184 = Utf8               Ljava/util/Date;\n-  #185 = Utf8               (Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #186 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #187 = Utf8               cutoffReference\n-  #188 = Utf8               (Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #189 = Utf8               sizeFileFilter\n-  #190 = Utf8               threshold\n-  #191 = Utf8               acceptLarger\n-  #192 = Utf8               sizeRangeFileFilter\n-  #193 = Utf8               (JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #194 = Utf8               minSizeInclusive\n-  #195 = Utf8               maxSizeInclusive\n-  #196 = Utf8               minimumFilter\n-  #197 = Utf8               maximumFilter\n-  #198 = Utf8               magicNumberFileFilter\n-  #199 = Utf8               magicNumber\n-  #200 = Utf8               (Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #201 = Utf8               offset\n-  #202 = Utf8               ([B)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #203 = Utf8               [B\n-  #204 = Utf8               ([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #205 = Utf8               makeCVSAware\n-  #206 = Utf8               makeSVNAware\n-  #207 = Utf8               makeDirectoryOnly\n-  #208 = Utf8               makeFileOnly\n-  #209 = Utf8               <clinit>\n-  #210 = Utf8               SourceFile\n-  #211 = Utf8               FileFilterUtils.java\n-  #212 = NameAndType        #91:#92       // \"<init>\":()V\n-  #213 = Utf8               java/lang/IllegalArgumentException\n-  #214 = Utf8               file filter is null\n-  #215 = NameAndType        #91:#294      // \"<init>\":(Ljava/lang/String;)V\n-  #216 = Class              #295          // org/apache/commons/io/FileUtils\n-  #217 = NameAndType        #296:#103     // EMPTY_FILE_ARRAY:[Ljava/io/File;\n-  #218 = Utf8               java/util/ArrayList\n-  #219 = Utf8               file array contains null\n-  #220 = NameAndType        #297:#298     // accept:(Ljava/io/File;)Z\n-  #221 = NameAndType        #299:#300     // add:(Ljava/lang/Object;)Z\n-  #222 = NameAndType        #301:#302     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #223 = NameAndType        #117:#118     // filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-  #224 = NameAndType        #98:#127      // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-  #225 = Utf8               java/util/List\n-  #226 = NameAndType        #98:#99       // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n-  #227 = Class              #303          // java/util/Arrays\n-  #228 = NameAndType        #304:#305     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #229 = Utf8               java/util/HashSet\n-  #230 = NameAndType        #91:#306      // \"<init>\":(Ljava/util/Collection;)V\n-  #231 = Utf8               java/util/Set\n-  #232 = Class              #307          // java/lang/Iterable\n-  #233 = NameAndType        #308:#309     // iterator:()Ljava/util/Iterator;\n-  #234 = Class              #293          // java/util/Iterator\n-  #235 = NameAndType        #310:#311     // hasNext:()Z\n-  #236 = NameAndType        #312:#313     // next:()Ljava/lang/Object;\n-  #237 = Utf8               java/io/File\n-  #238 = Utf8               file collection contains null\n-  #239 = Class              #314          // java/util/Collection\n-  #240 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n-  #241 = NameAndType        #91:#315      // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #242 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n-  #243 = Utf8               org/apache/commons/io/filefilter/NameFileFilter\n-  #244 = Class              #316          // org/apache/commons/io/filefilter/DirectoryFileFilter\n-  #245 = NameAndType        #317:#89      // DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #246 = Class              #318          // org/apache/commons/io/filefilter/FileFileFilter\n-  #247 = NameAndType        #319:#89      // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #248 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #249 = NameAndType        #91:#320      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #250 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #251 = NameAndType        #159:#160     // toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-  #252 = NameAndType        #91:#321      // \"<init>\":(Ljava/util/List;)V\n-  #253 = Utf8               The filters must not be null\n-  #254 = NameAndType        #91:#322      // \"<init>\":(I)V\n-  #255 = Utf8               java/lang/StringBuilder\n-  #256 = Utf8               The filter[\n-  #257 = NameAndType        #323:#324     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #258 = NameAndType        #323:#325     // append:(I)Ljava/lang/StringBuilder;\n-  #259 = Utf8               ] is null\n-  #260 = NameAndType        #326:#327     // toString:()Ljava/lang/String;\n-  #261 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #262 = NameAndType        #91:#328      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #263 = Class              #329          // org/apache/commons/io/filefilter/TrueFileFilter\n-  #264 = NameAndType        #330:#89      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #265 = Class              #331          // org/apache/commons/io/filefilter/FalseFileFilter\n-  #266 = NameAndType        #332:#89      // FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #267 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n-  #268 = NameAndType        #91:#333      // \"<init>\":(Ljava/io/FileFilter;)V\n-  #269 = NameAndType        #91:#334      // \"<init>\":(Ljava/io/FilenameFilter;)V\n-  #270 = Utf8               org/apache/commons/io/filefilter/AgeFileFilter\n-  #271 = NameAndType        #91:#335      // \"<init>\":(J)V\n-  #272 = NameAndType        #91:#336      // \"<init>\":(JZ)V\n-  #273 = NameAndType        #91:#337      // \"<init>\":(Ljava/util/Date;)V\n-  #274 = NameAndType        #91:#338      // \"<init>\":(Ljava/util/Date;Z)V\n-  #275 = NameAndType        #91:#339      // \"<init>\":(Ljava/io/File;)V\n-  #276 = NameAndType        #91:#340      // \"<init>\":(Ljava/io/File;Z)V\n-  #277 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n-  #278 = Utf8               org/apache/commons/io/filefilter/MagicNumberFileFilter\n-  #279 = NameAndType        #91:#341      // \"<init>\":(Ljava/lang/String;J)V\n-  #280 = NameAndType        #91:#342      // \"<init>\":([B)V\n-  #281 = NameAndType        #91:#343      // \"<init>\":([BJ)V\n-  #282 = NameAndType        #88:#89       // cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #283 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #284 = NameAndType        #154:#155     // and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #285 = NameAndType        #90:#89       // svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #286 = NameAndType        #143:#144     // directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #287 = Utf8               CVS\n-  #288 = NameAndType        #141:#133     // nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #289 = NameAndType        #166:#167     // notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #290 = Utf8               .svn\n-  #291 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n-  #292 = Utf8               java/lang/Object\n-  #293 = Utf8               java/util/Iterator\n-  #294 = Utf8               (Ljava/lang/String;)V\n-  #295 = Utf8               org/apache/commons/io/FileUtils\n-  #296 = Utf8               EMPTY_FILE_ARRAY\n-  #297 = Utf8               accept\n-  #298 = Utf8               (Ljava/io/File;)Z\n-  #299 = Utf8               add\n-  #300 = Utf8               (Ljava/lang/Object;)Z\n-  #301 = Utf8               toArray\n-  #302 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #303 = Utf8               java/util/Arrays\n-  #304 = Utf8               asList\n-  #305 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #306 = Utf8               (Ljava/util/Collection;)V\n-  #307 = Utf8               java/lang/Iterable\n-  #308 = Utf8               iterator\n-  #309 = Utf8               ()Ljava/util/Iterator;\n-  #310 = Utf8               hasNext\n-  #311 = Utf8               ()Z\n-  #312 = Utf8               next\n-  #313 = Utf8               ()Ljava/lang/Object;\n-  #314 = Utf8               java/util/Collection\n-  #315 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #316 = Utf8               org/apache/commons/io/filefilter/DirectoryFileFilter\n-  #317 = Utf8               DIRECTORY\n-  #318 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n-  #319 = Utf8               FILE\n-  #320 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #321 = Utf8               (Ljava/util/List;)V\n-  #322 = Utf8               (I)V\n-  #323 = Utf8               append\n-  #324 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #325 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #326 = Utf8               toString\n-  #327 = Utf8               ()Ljava/lang/String;\n-  #328 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #329 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #330 = Utf8               TRUE\n-  #331 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n-  #332 = Utf8               FALSE\n-  #333 = Utf8               (Ljava/io/FileFilter;)V\n-  #334 = Utf8               (Ljava/io/FilenameFilter;)V\n-  #335 = Utf8               (J)V\n-  #336 = Utf8               (JZ)V\n-  #337 = Utf8               (Ljava/util/Date;)V\n-  #338 = Utf8               (Ljava/util/Date;Z)V\n-  #339 = Utf8               (Ljava/io/File;)V\n-  #340 = Utf8               (Ljava/io/File;Z)V\n-  #341 = Utf8               (Ljava/lang/String;J)V\n-  #342 = Utf8               ([B)V\n-  #343 = Utf8               ([BJ)V\n+  #109 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;\n+  #110 = Utf8               Ljava/lang/Iterable;\n+  #111 = Utf8               Ljava/lang/Iterable<Ljava/io/File;>;\n+  #112 = Utf8               Signature\n+  #113 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n+  #114 = Utf8               filterList\n+  #115 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+  #116 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n+  #117 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n+  #118 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n+  #119 = Utf8               filterSet\n+  #120 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n+  #121 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n+  #122 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n+  #123 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n+  #124 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+  #125 = Utf8               Ljava/util/Collection;\n+  #126 = Utf8               TT;\n+  #127 = Class              #289          // java/util/Iterator\n+  #128 = Utf8               <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n+  #129 = Utf8               prefixFileFilter\n+  #130 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #131 = Utf8               prefix\n+  #132 = Utf8               Ljava/lang/String;\n+  #133 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #134 = Utf8               caseSensitivity\n+  #135 = Utf8               Lorg/apache/commons/io/IOCase;\n+  #136 = Utf8               suffixFileFilter\n+  #137 = Utf8               suffix\n+  #138 = Utf8               nameFileFilter\n+  #139 = Utf8               name\n+  #140 = Utf8               directoryFileFilter\n+  #141 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #142 = Utf8               fileFileFilter\n+  #143 = Utf8               andFileFilter\n+  #144 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #145 = Utf8               filter1\n+  #146 = Utf8               filter2\n+  #147 = Utf8               Deprecated\n+  #148 = Utf8               RuntimeVisibleAnnotations\n+  #149 = Utf8               Ljava/lang/Deprecated;\n+  #150 = Utf8               orFileFilter\n+  #151 = Utf8               and\n+  #152 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #153 = Utf8               filters\n+  #154 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #155 = Utf8               or\n+  #156 = Utf8               toList\n+  #157 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+  #158 = Utf8               i\n+  #159 = Utf8               I\n+  #160 = Utf8               list\n+  #161 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #162 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #163 = Utf8               notFileFilter\n+  #164 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #165 = Utf8               trueFileFilter\n+  #166 = Utf8               falseFileFilter\n+  #167 = Utf8               asFileFilter\n+  #168 = Utf8               (Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #169 = Utf8               Ljava/io/FileFilter;\n+  #170 = Utf8               (Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #171 = Utf8               Ljava/io/FilenameFilter;\n+  #172 = Utf8               ageFileFilter\n+  #173 = Utf8               (J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #174 = Utf8               cutoff\n+  #175 = Utf8               J\n+  #176 = Utf8               (JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #177 = Utf8               acceptOlder\n+  #178 = Utf8               Z\n+  #179 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #180 = Utf8               cutoffDate\n+  #181 = Utf8               Ljava/util/Date;\n+  #182 = Utf8               (Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #183 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #184 = Utf8               cutoffReference\n+  #185 = Utf8               (Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #186 = Utf8               sizeFileFilter\n+  #187 = Utf8               threshold\n+  #188 = Utf8               acceptLarger\n+  #189 = Utf8               sizeRangeFileFilter\n+  #190 = Utf8               (JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #191 = Utf8               minSizeInclusive\n+  #192 = Utf8               maxSizeInclusive\n+  #193 = Utf8               minimumFilter\n+  #194 = Utf8               maximumFilter\n+  #195 = Utf8               magicNumberFileFilter\n+  #196 = Utf8               magicNumber\n+  #197 = Utf8               (Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #198 = Utf8               offset\n+  #199 = Utf8               ([B)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #200 = Utf8               [B\n+  #201 = Utf8               ([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #202 = Utf8               makeCVSAware\n+  #203 = Utf8               makeSVNAware\n+  #204 = Utf8               makeDirectoryOnly\n+  #205 = Utf8               makeFileOnly\n+  #206 = Utf8               <clinit>\n+  #207 = Utf8               SourceFile\n+  #208 = Utf8               FileFilterUtils.java\n+  #209 = NameAndType        #91:#92       // \"<init>\":()V\n+  #210 = Utf8               java/lang/IllegalArgumentException\n+  #211 = Utf8               file filter is null\n+  #212 = NameAndType        #91:#290      // \"<init>\":(Ljava/lang/String;)V\n+  #213 = Class              #291          // org/apache/commons/io/FileUtils\n+  #214 = NameAndType        #292:#103     // EMPTY_FILE_ARRAY:[Ljava/io/File;\n+  #215 = Utf8               java/util/ArrayList\n+  #216 = Utf8               file array contains null\n+  #217 = NameAndType        #293:#294     // accept:(Ljava/io/File;)Z\n+  #218 = NameAndType        #295:#296     // add:(Ljava/lang/Object;)Z\n+  #219 = NameAndType        #297:#298     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #220 = NameAndType        #114:#115     // filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+  #221 = NameAndType        #98:#124      // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+  #222 = Utf8               java/util/List\n+  #223 = NameAndType        #98:#99       // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n+  #224 = Class              #299          // java/util/Arrays\n+  #225 = NameAndType        #300:#301     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #226 = Utf8               java/util/HashSet\n+  #227 = NameAndType        #91:#302      // \"<init>\":(Ljava/util/Collection;)V\n+  #228 = Utf8               java/util/Set\n+  #229 = Class              #303          // java/lang/Iterable\n+  #230 = NameAndType        #304:#305     // iterator:()Ljava/util/Iterator;\n+  #231 = NameAndType        #306:#307     // hasNext:()Z\n+  #232 = NameAndType        #308:#309     // next:()Ljava/lang/Object;\n+  #233 = Utf8               java/io/File\n+  #234 = Utf8               file collection contains null\n+  #235 = Class              #310          // java/util/Collection\n+  #236 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n+  #237 = NameAndType        #91:#311      // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #238 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n+  #239 = Utf8               org/apache/commons/io/filefilter/NameFileFilter\n+  #240 = Class              #312          // org/apache/commons/io/filefilter/DirectoryFileFilter\n+  #241 = NameAndType        #313:#89      // DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #242 = Class              #314          // org/apache/commons/io/filefilter/FileFileFilter\n+  #243 = NameAndType        #315:#89      // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #244 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #245 = NameAndType        #91:#316      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #246 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+  #247 = NameAndType        #156:#157     // toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+  #248 = NameAndType        #91:#317      // \"<init>\":(Ljava/util/List;)V\n+  #249 = Utf8               The filters must not be null\n+  #250 = NameAndType        #91:#318      // \"<init>\":(I)V\n+  #251 = Utf8               java/lang/StringBuilder\n+  #252 = Utf8               The filter[\n+  #253 = NameAndType        #319:#320     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #254 = NameAndType        #319:#321     // append:(I)Ljava/lang/StringBuilder;\n+  #255 = Utf8               ] is null\n+  #256 = NameAndType        #322:#323     // toString:()Ljava/lang/String;\n+  #257 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #258 = NameAndType        #91:#324      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #259 = Class              #325          // org/apache/commons/io/filefilter/TrueFileFilter\n+  #260 = NameAndType        #326:#89      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #261 = Class              #327          // org/apache/commons/io/filefilter/FalseFileFilter\n+  #262 = NameAndType        #328:#89      // FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #263 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n+  #264 = NameAndType        #91:#329      // \"<init>\":(Ljava/io/FileFilter;)V\n+  #265 = NameAndType        #91:#330      // \"<init>\":(Ljava/io/FilenameFilter;)V\n+  #266 = Utf8               org/apache/commons/io/filefilter/AgeFileFilter\n+  #267 = NameAndType        #91:#331      // \"<init>\":(J)V\n+  #268 = NameAndType        #91:#332      // \"<init>\":(JZ)V\n+  #269 = NameAndType        #91:#333      // \"<init>\":(Ljava/util/Date;)V\n+  #270 = NameAndType        #91:#334      // \"<init>\":(Ljava/util/Date;Z)V\n+  #271 = NameAndType        #91:#335      // \"<init>\":(Ljava/io/File;)V\n+  #272 = NameAndType        #91:#336      // \"<init>\":(Ljava/io/File;Z)V\n+  #273 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n+  #274 = Utf8               org/apache/commons/io/filefilter/MagicNumberFileFilter\n+  #275 = NameAndType        #91:#337      // \"<init>\":(Ljava/lang/String;J)V\n+  #276 = NameAndType        #91:#338      // \"<init>\":([B)V\n+  #277 = NameAndType        #91:#339      // \"<init>\":([BJ)V\n+  #278 = NameAndType        #88:#89       // cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #279 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #280 = NameAndType        #151:#152     // and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #281 = NameAndType        #90:#89       // svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #282 = NameAndType        #140:#141     // directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #283 = Utf8               CVS\n+  #284 = NameAndType        #138:#130     // nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #285 = NameAndType        #163:#164     // notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #286 = Utf8               .svn\n+  #287 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n+  #288 = Utf8               java/lang/Object\n+  #289 = Utf8               java/util/Iterator\n+  #290 = Utf8               (Ljava/lang/String;)V\n+  #291 = Utf8               org/apache/commons/io/FileUtils\n+  #292 = Utf8               EMPTY_FILE_ARRAY\n+  #293 = Utf8               accept\n+  #294 = Utf8               (Ljava/io/File;)Z\n+  #295 = Utf8               add\n+  #296 = Utf8               (Ljava/lang/Object;)Z\n+  #297 = Utf8               toArray\n+  #298 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #299 = Utf8               java/util/Arrays\n+  #300 = Utf8               asList\n+  #301 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #302 = Utf8               (Ljava/util/Collection;)V\n+  #303 = Utf8               java/lang/Iterable\n+  #304 = Utf8               iterator\n+  #305 = Utf8               ()Ljava/util/Iterator;\n+  #306 = Utf8               hasNext\n+  #307 = Utf8               ()Z\n+  #308 = Utf8               next\n+  #309 = Utf8               ()Ljava/lang/Object;\n+  #310 = Utf8               java/util/Collection\n+  #311 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #312 = Utf8               org/apache/commons/io/filefilter/DirectoryFileFilter\n+  #313 = Utf8               DIRECTORY\n+  #314 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n+  #315 = Utf8               FILE\n+  #316 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #317 = Utf8               (Ljava/util/List;)V\n+  #318 = Utf8               (I)V\n+  #319 = Utf8               append\n+  #320 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #321 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #322 = Utf8               toString\n+  #323 = Utf8               ()Ljava/lang/String;\n+  #324 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #325 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+  #326 = Utf8               TRUE\n+  #327 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n+  #328 = Utf8               FALSE\n+  #329 = Utf8               (Ljava/io/FileFilter;)V\n+  #330 = Utf8               (Ljava/io/FilenameFilter;)V\n+  #331 = Utf8               (J)V\n+  #332 = Utf8               (JZ)V\n+  #333 = Utf8               (Ljava/util/Date;)V\n+  #334 = Utf8               (Ljava/util/Date;Z)V\n+  #335 = Utf8               (Ljava/io/File;)V\n+  #336 = Utf8               (Ljava/io/File;Z)V\n+  #337 = Utf8               (Ljava/lang/String;J)V\n+  #338 = Utf8               ([B)V\n+  #339 = Utf8               ([BJ)V\n {\n   private static final org.apache.commons.io.filefilter.IOFileFilter cvsFilter;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.io.filefilter.IOFileFilter svnFilter;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n@@ -490,15 +486,15 @@\n             0      19     0 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      19     1 files   Ljava/lang/Iterable;\n             6      13     2 acceptedFiles   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     1 files   Ljava/lang/Iterable<Ljava/io/File;>;\n             6      13     2 acceptedFiles   Ljava/util/List<Ljava/io/File;>;\n-    Signature: #116                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n+    Signature: #113                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n \n   public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -514,15 +510,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      16     1 files   Ljava/lang/Iterable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     1 files   Ljava/lang/Iterable<Ljava/io/File;>;\n-    Signature: #119                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n+    Signature: #116                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n \n   public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n@@ -536,15 +532,15 @@\n         line 182: 0\n         line 183: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      11     1 files   [Ljava/io/File;\n             6       5     2 acceptedFiles   [Ljava/io/File;\n-    Signature: #121                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n+    Signature: #118                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n \n   public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n@@ -561,15 +557,15 @@\n         line 213: 0\n         line 214: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      18     1 files   [Ljava/io/File;\n             6      12     2 acceptedFiles   [Ljava/io/File;\n-    Signature: #124                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n+    Signature: #121                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n \n   public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -585,15 +581,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 filter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      16     1 files   Ljava/lang/Iterable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     1 files   Ljava/lang/Iterable<Ljava/io/File;>;\n-    Signature: #126                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n+    Signature: #123                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n \n   private static <T extends java.util.Collection<java.io.File>> T filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>, T);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n@@ -662,15 +658,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 34\n           locals = [ class java/io/File ]\n         frame_type = 250 /* chop */\n           offset_delta = 19\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #131                         // <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n+    Signature: #128                         // <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n \n   public static org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #28                 // class org/apache/commons/io/filefilter/PrefixFileFilter\n@@ -805,15 +801,15 @@\n         line 392: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 filter1   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      10     1 filter2   Lorg/apache/commons/io/filefilter/IOFileFilter;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #152()\n+      0: #149()\n         java.lang.Deprecated\n \n   public static org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n@@ -827,15 +823,15 @@\n         line 407: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 filter1   Lorg/apache/commons/io/filefilter/IOFileFilter;\n             0      10     1 filter2   Lorg/apache/commons/io/filefilter/IOFileFilter;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #152()\n+      0: #149()\n         java.lang.Deprecated\n \n   public static org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=1, args_size=1\n@@ -942,15 +938,15 @@\n         frame_type = 14 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 11\n           locals = [ class java/util/List, int ]\n         frame_type = 43 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 15\n-    Signature: #165                         // ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #162                         // ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public static org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #55                 // class org/apache/commons/io/filefilter/NotFileFilter\n"}]}
