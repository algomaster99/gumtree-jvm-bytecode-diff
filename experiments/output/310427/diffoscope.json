{"diffoscope-json-version": 1, "source1": "first/TarArchiveEntry.class", "source2": "second/TarArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,938 +1,938 @@\n-  SHA-256 checksum cc613ba914411e07872610b82dee019e43ae67f76449a7dc75c65db9c6d11b37\n+  SHA-256 checksum 24981de39d7b70de95458ac9ed3de59e7f733546b409f3c75315db73b645830d\n   Compiled from \"TarArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.tar.TarArchiveEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.tar.TarConstants,org.apache.commons.compress.archivers.EntryStreamOffsets\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #21                         // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  super_class: #263                       // java/lang/Object\n+  this_class: #10                         // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  super_class: #2                         // java/lang/Object\n   interfaces: 3, fields: 32, methods: 101, attributes: 3\n Constant pool:\n-    #1 = Methodref          #263.#458     // java/lang/Object.\"<init>\":()V\n-    #2 = String             #459          //\n-    #3 = Fieldref           #21.#460      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.name:Ljava/lang/String;\n-    #4 = Fieldref           #21.#461      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkName:Ljava/lang/String;\n-    #5 = Class              #462          // org/apache/commons/compress/archivers/tar/TarConstants\n-    #6 = String             #463          // ustar\\u0000\n-    #7 = Fieldref           #21.#464      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.magic:Ljava/lang/String;\n-    #8 = String             #465          // 00\n-    #9 = Fieldref           #21.#466      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.version:Ljava/lang/String;\n-   #10 = Fieldref           #21.#467      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupName:Ljava/lang/String;\n-   #11 = Class              #468          // java/util/HashMap\n-   #12 = Methodref          #11.#458      // java/util/HashMap.\"<init>\":()V\n-   #13 = Fieldref           #21.#469      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.extraPaxHeaders:Ljava/util/Map;\n-   #14 = Class              #470          // org/apache/commons/compress/archivers/EntryStreamOffsets\n-   #15 = Long               -1l\n-   #17 = Fieldref           #21.#471      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.dataOffset:J\n-   #18 = String             #472          // user.name\n-   #19 = Methodref          #473.#474     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #20 = Methodref          #160.#475     // java/lang/String.length:()I\n-   #21 = Class              #476          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-   #22 = Methodref          #160.#477     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #23 = Fieldref           #21.#478      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userName:Ljava/lang/String;\n-   #24 = Fieldref           #21.#479      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.file:Ljava/nio/file/Path;\n-   #25 = Fieldref           #480.#481     // org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n-   #26 = Fieldref           #21.#482      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkOptions:[Ljava/nio/file/LinkOption;\n-   #27 = Fieldref           #21.#483      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.preserveAbsolutePath:Z\n-   #28 = Methodref          #21.#484      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;Z)V\n-   #29 = Methodref          #21.#485      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Z)V\n-   #30 = Methodref          #21.#486      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #31 = String             #487          // /\n-   #32 = Methodref          #160.#488     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #33 = Integer            33188\n-   #34 = Fieldref           #21.#489      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.mode:I\n-   #35 = Fieldref           #21.#490      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkFlag:B\n-   #36 = Methodref          #473.#491     // java/lang/System.currentTimeMillis:()J\n-   #37 = Long               1000l\n-   #39 = Fieldref           #21.#492      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.modTime:J\n-   #40 = Methodref          #21.#493      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;BZ)V\n-   #41 = String             #494          // ustar\n-   #42 = String             #495          //  \\u0000\n-   #43 = Methodref          #327.#496     // java/io/File.getPath:()Ljava/lang/String;\n-   #44 = Methodref          #21.#497      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #45 = InterfaceMethodref #207.#498     // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #46 = Class              #499          // java/nio/file/LinkOption\n-   #47 = Methodref          #21.#500      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #48 = Methodref          #327.#501     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #49 = Methodref          #21.#502      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #50 = Class              #503          // java/io/IOException\n-   #51 = Methodref          #327.#504     // java/io/File.isDirectory:()Z\n-   #52 = Methodref          #327.#505     // java/io/File.length:()J\n-   #53 = Fieldref           #21.#506      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.size:J\n-   #54 = Methodref          #21.#507      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n-   #55 = Methodref          #327.#508     // java/io/File.lastModified:()J\n-   #56 = InterfaceMethodref #207.#509     // java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;\n-   #57 = Methodref          #510.#511     // java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;\n-   #58 = String             #512          // posix\n-   #59 = InterfaceMethodref #332.#513     // java/util/Set.contains:(Ljava/lang/Object;)Z\n-   #60 = Class              #514          // java/nio/file/attribute/PosixFileAttributes\n-   #61 = Methodref          #515.#516     // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #62 = InterfaceMethodref #60.#517      // java/nio/file/attribute/PosixFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-   #63 = Methodref          #21.#518      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(Ljava/nio/file/attribute/FileTime;)V\n-   #64 = InterfaceMethodref #60.#519      // java/nio/file/attribute/PosixFileAttributes.owner:()Ljava/nio/file/attribute/UserPrincipal;\n-   #65 = InterfaceMethodref #520.#521     // java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n-   #66 = InterfaceMethodref #60.#522      // java/nio/file/attribute/PosixFileAttributes.group:()Ljava/nio/file/attribute/GroupPrincipal;\n-   #67 = InterfaceMethodref #523.#521     // java/nio/file/attribute/GroupPrincipal.getName:()Ljava/lang/String;\n-   #68 = String             #524          // unix\n-   #69 = String             #525          // unix:uid\n-   #70 = Methodref          #515.#526     // java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n-   #71 = Class              #527          // java/lang/Number\n-   #72 = Methodref          #71.#528      // java/lang/Number.longValue:()J\n-   #73 = Fieldref           #21.#529      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userId:J\n-   #74 = String             #530          // unix:gid\n-   #75 = Fieldref           #21.#531      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupId:J\n-   #76 = String             #532          // dos\n-   #77 = Class              #533          // java/nio/file/attribute/DosFileAttributes\n-   #78 = InterfaceMethodref #77.#517      // java/nio/file/attribute/DosFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-   #79 = Methodref          #515.#534     // java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n-   #80 = Class              #535          // java/nio/file/attribute/BasicFileAttributes\n-   #81 = InterfaceMethodref #80.#517      // java/nio/file/attribute/BasicFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-   #82 = Methodref          #515.#536     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #83 = Methodref          #160.#537     // java/lang/String.charAt:(I)C\n-   #84 = InvokeDynamic      #0:#541       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #85 = Methodref          #515.#542     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #86 = Methodref          #21.#543      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([B)V\n-   #87 = Methodref          #21.#544      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-   #88 = Methodref          #21.#545      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n-   #89 = Methodref          #21.#546      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDataOffset:(J)V\n-   #90 = Methodref          #21.#521      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;\n-   #91 = Methodref          #160.#547     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #92 = Methodref          #263.#548     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #93 = Methodref          #21.#549      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-   #94 = Methodref          #160.#550     // java/lang/String.hashCode:()I\n-   #95 = Methodref          #160.#551     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #96 = Methodref          #21.#552      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(J)V\n-   #97 = Methodref          #21.#553      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(J)V\n-   #98 = Methodref          #21.#554      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(I)V\n-   #99 = Methodref          #21.#555      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(I)V\n-  #100 = Methodref          #21.#556      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserName:(Ljava/lang/String;)V\n-  #101 = Methodref          #21.#557      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupName:(Ljava/lang/String;)V\n-  #102 = Methodref          #105.#558     // java/util/Date.getTime:()J\n-  #103 = Fieldref           #559.#560     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #104 = Methodref          #561.#562     // java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n-  #105 = Class              #563          // java/util/Date\n-  #106 = Methodref          #105.#564     // java/util/Date.\"<init>\":(J)V\n-  #107 = Methodref          #21.#565      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;\n-  #108 = Fieldref           #21.#566      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.checkSumOK:Z\n-  #109 = InterfaceMethodref #207.#567     // java/nio/file/Path.toFile:()Ljava/io/File;\n-  #110 = Fieldref           #21.#568      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.sparseHeaders:Ljava/util/List;\n-  #111 = InterfaceMethodref #121.#569     // java/util/List.isEmpty:()Z\n-  #112 = Methodref          #570.#571     // java/util/Collections.emptyList:()Ljava/util/List;\n-  #113 = InterfaceMethodref #121.#572     // java/util/List.stream:()Ljava/util/stream/Stream;\n-  #114 = InvokeDynamic      #1:#577       // #1:test:()Ljava/util/function/Predicate;\n-  #115 = InterfaceMethodref #578.#579     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #116 = InvokeDynamic      #2:#583       // #2:applyAsLong:()Ljava/util/function/ToLongFunction;\n-  #117 = InterfaceMethodref #584.#585     // java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n-  #118 = InterfaceMethodref #578.#586     // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #119 = Methodref          #587.#588     // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-  #120 = InterfaceMethodref #578.#589     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #121 = Class              #590          // java/util/List\n-  #122 = InterfaceMethodref #121.#591     // java/util/List.size:()I\n-  #123 = InterfaceMethodref #121.#592     // java/util/List.get:(I)Ljava/lang/Object;\n-  #124 = Class              #593          // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-  #125 = Methodref          #124.#594     // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n-  #126 = Methodref          #124.#595     // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n-  #127 = InvokeDynamic      #3:#541       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #128 = Methodref          #50.#597      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #129 = InvokeDynamic      #4:#541       // #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #130 = Methodref          #21.#599      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J\n-  #131 = String             #600          // Corrupted TAR archive. Sparse block extends beyond real size of the entry\n-  #132 = Fieldref           #21.#601      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNU1XSparse:Z\n-  #133 = Class              #602          // java/lang/IllegalArgumentException\n-  #134 = InvokeDynamic      #5:#604       // #5:makeConcatWithConstants:(J)Ljava/lang/String;\n-  #135 = Methodref          #133.#597     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #136 = Fieldref           #21.#605      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMajor:I\n-  #137 = InvokeDynamic      #6:#607       // #6:makeConcatWithConstants:(I)Ljava/lang/String;\n-  #138 = Fieldref           #21.#608      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMinor:I\n-  #139 = InvokeDynamic      #7:#607       // #7:makeConcatWithConstants:(I)Ljava/lang/String;\n-  #140 = Fieldref           #21.#610      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:Z\n-  #141 = Methodref          #21.#611      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isSparse:()Z\n-  #142 = Methodref          #21.#612      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J\n-  #143 = Fieldref           #21.#613      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.realSize:J\n-  #144 = Methodref          #21.#614      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z\n-  #145 = Methodref          #21.#615      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNUSparse:()Z\n-  #146 = Fieldref           #21.#616      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNUSparse:Z\n-  #147 = Fieldref           #21.#617      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.starSparse:Z\n-  #148 = Methodref          #21.#618      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z\n-  #149 = Methodref          #21.#619      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z\n-  #150 = Methodref          #515.#620     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #151 = Methodref          #21.#621      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNUSparse:()Z\n-  #152 = Methodref          #21.#622      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isStarSparse:()Z\n-  #153 = String             #623          // The offset can not be smaller than 0\n-  #154 = Methodref          #570.#624     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-  #155 = InterfaceMethodref #431.#625     // java/util/Map.clear:()V\n-  #156 = Methodref          #21.#626      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n-  #157 = String             #627          // Invalid input\n-  #158 = Methodref          #133.#628     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #159 = InterfaceMethodref #431.#629     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #160 = Class              #630          // java/lang/String\n-  #161 = InterfaceMethodref #431.#631     // java/util/Map.entrySet:()Ljava/util/Set;\n-  #162 = InterfaceMethodref #332.#632     // java/util/Set.iterator:()Ljava/util/Iterator;\n-  #163 = InterfaceMethodref #427.#633     // java/util/Iterator.hasNext:()Z\n-  #164 = InterfaceMethodref #427.#634     // java/util/Iterator.next:()Ljava/lang/Object;\n-  #165 = Class              #635          // java/util/Map$Entry\n-  #166 = InterfaceMethodref #165.#638     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-  #167 = InterfaceMethodref #165.#639     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-  #168 = Methodref          #21.#640      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #169 = String             #641          // path\n-  #170 = String             #642          // linkpath\n-  #171 = String             #643          // gid\n-  #172 = String             #644          // gname\n-  #173 = String             #645          // uid\n-  #174 = String             #646          // uname\n-  #175 = String             #278          // size\n-  #176 = String             #647          // mtime\n-  #177 = String             #648          // SCHILY.devminor\n-  #178 = String             #649          // SCHILY.devmajor\n-  #179 = String             #650          // GNU.sparse.size\n-  #180 = String             #651          // GNU.sparse.realsize\n-  #181 = String             #652          // SCHILY.filetype\n-  #182 = Methodref          #21.#653      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V\n-  #183 = Methodref          #21.#654      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V\n-  #184 = Methodref          #655.#656     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-  #185 = String             #657          // Corrupted TAR archive. Entry size is negative\n-  #186 = Methodref          #21.#658      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V\n-  #187 = Methodref          #659.#660     // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-  #188 = Double             1000.0d\n-  #190 = Methodref          #21.#661      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(J)V\n-  #191 = Methodref          #662.#663     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-  #192 = String             #664          // Corrupted TAR archive. Dev-Minor is negative\n-  #193 = Methodref          #21.#665      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMinor:(I)V\n-  #194 = String             #666          // Corrupted TAR archive. Dev-Major is negative\n-  #195 = Methodref          #21.#667      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMajor:(I)V\n-  #196 = Methodref          #21.#668      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse0xData:(Ljava/util/Map;)V\n-  #197 = Methodref          #21.#669      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse1xData:(Ljava/util/Map;)V\n-  #198 = String             #670          // sparse\n-  #199 = Methodref          #21.#671      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillStarSparseData:(Ljava/util/Map;)V\n-  #200 = InterfaceMethodref #431.#672     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #201 = Methodref          #21.#504      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z\n-  #202 = Fieldref           #21.#673      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #203 = Class              #674          // java/util/ArrayList\n-  #204 = Methodref          #203.#458     // java/util/ArrayList.\"<init>\":()V\n-  #205 = Methodref          #515.#675     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #206 = InterfaceMethodref #435.#632     // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n-  #207 = Class              #676          // java/nio/file/Path\n-  #208 = Methodref          #21.#677      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/nio/file/Path;)V\n-  #209 = InterfaceMethodref #121.#678     // java/util/List.add:(Ljava/lang/Object;)Z\n-  #210 = InterfaceMethodref #435.#679     // java/nio/file/DirectoryStream.close:()V\n-  #211 = Class              #680          // java/lang/Throwable\n-  #212 = Methodref          #211.#681     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #213 = InterfaceMethodref #121.#682     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #214 = Class              #266          // \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n-  #215 = Fieldref           #683.#684     // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #216 = Methodref          #21.#685      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #217 = Fieldref           #683.#686     // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #218 = Class              #687          // java/lang/RuntimeException\n-  #219 = Methodref          #218.#688     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #220 = Methodref          #683.#689     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #221 = Methodref          #21.#690      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField:(J[BIIZ)I\n-  #222 = Methodref          #683.#691     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n-  #223 = Methodref          #683.#692     // org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n-  #224 = Methodref          #683.#693     // org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n-  #225 = Methodref          #683.#694     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n-  #226 = Methodref          #683.#695     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n-  #227 = Methodref          #21.#696      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #228 = Methodref          #21.#697      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n-  #229 = String             #698          // Corrupted TAR archive.\n-  #230 = Methodref          #50.#628      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #231 = Methodref          #683.#699     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-  #232 = Methodref          #683.#700     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #233 = Methodref          #21.#701      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseOctalOrBinary:([BIIZ)J\n-  #234 = Methodref          #683.#702     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n-  #235 = String             #703          // broken archive, entry with negative size\n-  #236 = Methodref          #683.#704     // org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n-  #237 = Methodref          #21.#705      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.evaluateType:([B)I\n-  #238 = Methodref          #683.#706     // org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n-  #239 = Methodref          #203.#707     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-  #240 = Methodref          #683.#708     // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-  #241 = Methodref          #683.#709     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n-  #242 = Methodref          #160.#569     // java/lang/String.isEmpty:()Z\n-  #243 = InvokeDynamic      #8:#711       // #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #244 = String             #712          // os.name\n-  #245 = Methodref          #473.#713     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #246 = Fieldref           #714.#715     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-  #247 = Methodref          #160.#716     // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #248 = String             #717          // windows\n-  #249 = Methodref          #160.#718     // java/lang/String.substring:(I)Ljava/lang/String;\n-  #250 = String             #719          // netware\n-  #251 = Methodref          #160.#720     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #252 = Methodref          #160.#721     // java/lang/String.indexOf:(I)I\n-  #253 = Fieldref           #327.#722     // java/io/File.separatorChar:C\n-  #254 = Methodref          #160.#723     // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #255 = Methodref          #724.#725     // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-  #256 = String             #726          // tar\\u0000\n-  #257 = String             #727          // GNU.sparse.name\n-  #258 = InterfaceMethodref #431.#728     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-  #259 = Class              #729          // java/lang/NumberFormatException\n-  #260 = InvokeDynamic      #9:#541       // #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #261 = String             #731          // SCHILY.realsize\n-  #262 = InvokeDynamic      #10:#541      // #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #263 = Class              #733          // java/lang/Object\n-  #264 = Class              #734          // org/apache/commons/compress/archivers/ArchiveEntry\n-  #265 = Utf8               EMPTY_TAR_ARCHIVE_ENTRY_ARRAY\n-  #266 = Utf8               [Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #267 = Utf8               UNKNOWN\n-  #268 = Utf8               J\n-  #269 = Utf8               ConstantValue\n-  #270 = Utf8               name\n-  #271 = Utf8               Ljava/lang/String;\n-  #272 = Utf8               preserveAbsolutePath\n-  #273 = Utf8               Z\n-  #274 = Utf8               mode\n-  #275 = Utf8               I\n-  #276 = Utf8               userId\n-  #277 = Utf8               groupId\n-  #278 = Utf8               size\n-  #279 = Utf8               modTime\n-  #280 = Utf8               checkSumOK\n-  #281 = Utf8               linkFlag\n-  #282 = Utf8               B\n-  #283 = Utf8               linkName\n-  #284 = Utf8               magic\n-  #285 = Utf8               version\n-  #286 = Utf8               userName\n-  #287 = Utf8               groupName\n-  #288 = Utf8               devMajor\n-  #289 = Utf8               devMinor\n-  #290 = Utf8               sparseHeaders\n-  #291 = Utf8               Ljava/util/List;\n-  #292 = Utf8               Signature\n-  #293 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #294 = Utf8               isExtended\n-  #295 = Utf8               realSize\n-  #296 = Utf8               paxGNUSparse\n-  #297 = Utf8               paxGNU1XSparse\n-  #298 = Utf8               starSparse\n-  #299 = Utf8               file\n-  #300 = Utf8               Ljava/nio/file/Path;\n-  #301 = Utf8               linkOptions\n-  #302 = Utf8               [Ljava/nio/file/LinkOption;\n-  #303 = Utf8               extraPaxHeaders\n-  #304 = Utf8               Ljava/util/Map;\n-  #305 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-  #306 = Utf8               MAX_NAMELEN\n-  #307 = Integer            31\n-  #308 = Utf8               DEFAULT_DIR_MODE\n-  #309 = Integer            16877\n-  #310 = Utf8               DEFAULT_FILE_MODE\n-  #311 = Utf8               MILLIS_PER_SECOND\n-  #312 = Integer            1000\n-  #313 = Utf8               dataOffset\n-  #314 = Utf8               <init>\n-  #315 = Utf8               (Z)V\n-  #316 = Utf8               Code\n-  #317 = Utf8               LineNumberTable\n-  #318 = Utf8               StackMapTable\n-  #319 = Utf8               (Ljava/lang/String;)V\n-  #320 = Utf8               (Ljava/lang/String;Z)V\n-  #321 = Utf8               (Ljava/lang/String;B)V\n-  #322 = Utf8               (Ljava/lang/String;BZ)V\n-  #323 = Utf8               (Ljava/io/File;)V\n-  #324 = Utf8               (Ljava/nio/file/Path;)V\n-  #325 = Utf8               Exceptions\n-  #326 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #327 = Class              #735          // java/io/File\n-  #328 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #329 = Class              #302          // \"[Ljava/nio/file/LinkOption;\"\n-  #330 = Utf8               readOsSpecificProperties\n-  #331 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n-  #332 = Class              #736          // java/util/Set\n-  #333 = Utf8               readFileMode\n-  #334 = Utf8               ([B)V\n-  #335 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #336 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #337 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZJ)V\n-  #338 = Utf8               equals\n-  #339 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-  #340 = Utf8               (Ljava/lang/Object;)Z\n-  #341 = Utf8               hashCode\n-  #342 = Utf8               ()I\n-  #343 = Utf8               isDescendent\n-  #344 = Utf8               getName\n-  #345 = Utf8               ()Ljava/lang/String;\n-  #346 = Utf8               setName\n-  #347 = Utf8               setMode\n-  #348 = Utf8               (I)V\n-  #349 = Utf8               getLinkName\n-  #350 = Utf8               setLinkName\n-  #351 = Utf8               getUserId\n-  #352 = Utf8               Deprecated\n-  #353 = Utf8               RuntimeVisibleAnnotations\n-  #354 = Utf8               Ljava/lang/Deprecated;\n-  #355 = Utf8               setUserId\n-  #356 = Utf8               getLongUserId\n-  #357 = Utf8               ()J\n-  #358 = Utf8               (J)V\n-  #359 = Utf8               getGroupId\n-  #360 = Utf8               setGroupId\n-  #361 = Utf8               getLongGroupId\n-  #362 = Utf8               getUserName\n-  #363 = Utf8               setUserName\n-  #364 = Utf8               getGroupName\n-  #365 = Utf8               setGroupName\n-  #366 = Utf8               setIds\n-  #367 = Utf8               (II)V\n-  #368 = Utf8               setNames\n-  #369 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #370 = Utf8               setModTime\n-  #371 = Utf8               (Ljava/util/Date;)V\n-  #372 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n-  #373 = Utf8               getModTime\n-  #374 = Utf8               ()Ljava/util/Date;\n-  #375 = Utf8               getLastModifiedDate\n-  #376 = Utf8               isCheckSumOK\n-  #377 = Utf8               ()Z\n-  #378 = Utf8               getFile\n-  #379 = Utf8               ()Ljava/io/File;\n-  #380 = Utf8               getPath\n-  #381 = Utf8               ()Ljava/nio/file/Path;\n-  #382 = Utf8               getMode\n-  #383 = Utf8               getSize\n-  #384 = Utf8               setSparseHeaders\n-  #385 = Utf8               (Ljava/util/List;)V\n-  #386 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;)V\n-  #387 = Utf8               getSparseHeaders\n-  #388 = Utf8               ()Ljava/util/List;\n-  #389 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #390 = Utf8               getOrderedSparseHeaders\n-  #391 = Utf8               isPaxGNU1XSparse\n-  #392 = Utf8               setSize\n-  #393 = Utf8               getDevMajor\n-  #394 = Utf8               setDevMajor\n-  #395 = Utf8               getDevMinor\n-  #396 = Utf8               setDevMinor\n-  #397 = Utf8               getRealSize\n-  #398 = Utf8               isGNUSparse\n-  #399 = Utf8               isOldGNUSparse\n-  #400 = Utf8               isPaxGNUSparse\n-  #401 = Utf8               isStarSparse\n-  #402 = Utf8               isGNULongLinkEntry\n-  #403 = Utf8               isGNULongNameEntry\n-  #404 = Utf8               isPaxHeader\n-  #405 = Utf8               isGlobalPaxHeader\n-  #406 = Utf8               isDirectory\n-  #407 = Utf8               isFile\n-  #408 = Utf8               isSymbolicLink\n-  #409 = Utf8               isLink\n-  #410 = Utf8               isCharacterDevice\n-  #411 = Utf8               isBlockDevice\n-  #412 = Utf8               isFIFO\n-  #413 = Utf8               isSparse\n-  #414 = Utf8               getDataOffset\n-  #415 = Utf8               setDataOffset\n-  #416 = Utf8               isStreamContiguous\n-  #417 = Utf8               getExtraPaxHeaders\n-  #418 = Utf8               ()Ljava/util/Map;\n-  #419 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-  #420 = Utf8               clearExtraPaxHeaders\n-  #421 = Utf8               ()V\n-  #422 = Utf8               addPaxHeader\n-  #423 = Utf8               getExtraPaxHeader\n-  #424 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #425 = Utf8               updateEntryFromPaxHeaders\n-  #426 = Utf8               (Ljava/util/Map;)V\n-  #427 = Class              #737          // java/util/Iterator\n-  #428 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n-  #429 = Utf8               processPaxHeader\n-  #430 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #431 = Class              #738          // java/util/Map\n-  #432 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n-  #433 = Utf8               getDirectoryEntries\n-  #434 = Utf8               ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #435 = Class              #739          // java/nio/file/DirectoryStream\n-  #436 = Utf8               writeEntryHeader\n-  #437 = Class              #740          // \"[B\"\n-  #438 = Utf8               writeEntryHeaderField\n-  #439 = Utf8               (J[BIIZ)I\n-  #440 = Utf8               parseTarHeader\n-  #441 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n-  #442 = Utf8               parseTarHeaderUnwrapped\n-  #443 = Class              #741          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #444 = Utf8               parseOctalOrBinary\n-  #445 = Utf8               ([BIIZ)J\n-  #446 = Utf8               normalizeFileName\n-  #447 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #448 = Utf8               evaluateType\n-  #449 = Utf8               ([B)I\n-  #450 = Utf8               fillGNUSparse0xData\n-  #451 = Utf8               fillGNUSparse1xData\n-  #452 = Utf8               fillStarSparseData\n-  #453 = Utf8               lambda$getOrderedSparseHeaders$0\n-  #454 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  #455 = Utf8               <clinit>\n-  #456 = Utf8               SourceFile\n-  #457 = Utf8               TarArchiveEntry.java\n-  #458 = NameAndType        #314:#421     // \"<init>\":()V\n-  #459 = Utf8\n-  #460 = NameAndType        #270:#271     // name:Ljava/lang/String;\n-  #461 = NameAndType        #283:#271     // linkName:Ljava/lang/String;\n-  #462 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #463 = Utf8               ustar\\u0000\n-  #464 = NameAndType        #284:#271     // magic:Ljava/lang/String;\n-  #465 = Utf8               00\n-  #466 = NameAndType        #285:#271     // version:Ljava/lang/String;\n-  #467 = NameAndType        #287:#271     // groupName:Ljava/lang/String;\n-  #468 = Utf8               java/util/HashMap\n-  #469 = NameAndType        #303:#304     // extraPaxHeaders:Ljava/util/Map;\n-  #470 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n-  #471 = NameAndType        #313:#268     // dataOffset:J\n-  #472 = Utf8               user.name\n-  #473 = Class              #742          // java/lang/System\n-  #474 = NameAndType        #743:#744     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #475 = NameAndType        #745:#342     // length:()I\n-  #476 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #477 = NameAndType        #746:#747     // substring:(II)Ljava/lang/String;\n-  #478 = NameAndType        #286:#271     // userName:Ljava/lang/String;\n-  #479 = NameAndType        #299:#300     // file:Ljava/nio/file/Path;\n-  #480 = Class              #748          // org/apache/commons/compress/utils/IOUtils\n-  #481 = NameAndType        #749:#302     // EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n-  #482 = NameAndType        #301:#302     // linkOptions:[Ljava/nio/file/LinkOption;\n-  #483 = NameAndType        #272:#273     // preserveAbsolutePath:Z\n-  #484 = NameAndType        #314:#320     // \"<init>\":(Ljava/lang/String;Z)V\n-  #485 = NameAndType        #314:#315     // \"<init>\":(Z)V\n-  #486 = NameAndType        #446:#447     // normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #487 = Utf8               /\n-  #488 = NameAndType        #750:#751     // endsWith:(Ljava/lang/String;)Z\n-  #489 = NameAndType        #274:#275     // mode:I\n-  #490 = NameAndType        #281:#282     // linkFlag:B\n-  #491 = NameAndType        #752:#357     // currentTimeMillis:()J\n-  #492 = NameAndType        #279:#268     // modTime:J\n-  #493 = NameAndType        #314:#322     // \"<init>\":(Ljava/lang/String;BZ)V\n-  #494 = Utf8               ustar\n-  #495 = Utf8                \\u0000\n-  #496 = NameAndType        #380:#345     // getPath:()Ljava/lang/String;\n-  #497 = NameAndType        #314:#326     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #498 = NameAndType        #753:#345     // toString:()Ljava/lang/String;\n-  #499 = Utf8               java/nio/file/LinkOption\n-  #500 = NameAndType        #314:#328     // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #501 = NameAndType        #754:#381     // toPath:()Ljava/nio/file/Path;\n-  #502 = NameAndType        #333:#328     // readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #503 = Utf8               java/io/IOException\n-  #504 = NameAndType        #406:#377     // isDirectory:()Z\n-  #505 = NameAndType        #745:#357     // length:()J\n-  #506 = NameAndType        #278:#268     // size:J\n-  #507 = NameAndType        #330:#331     // readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n-  #508 = NameAndType        #755:#357     // lastModified:()J\n-  #509 = NameAndType        #756:#757     // getFileSystem:()Ljava/nio/file/FileSystem;\n-  #510 = Class              #758          // java/nio/file/FileSystem\n-  #511 = NameAndType        #759:#760     // supportedFileAttributeViews:()Ljava/util/Set;\n-  #512 = Utf8               posix\n-  #513 = NameAndType        #761:#340     // contains:(Ljava/lang/Object;)Z\n-  #514 = Utf8               java/nio/file/attribute/PosixFileAttributes\n-  #515 = Class              #762          // java/nio/file/Files\n-  #516 = NameAndType        #763:#764     // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #517 = NameAndType        #765:#766     // lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-  #518 = NameAndType        #370:#372     // setModTime:(Ljava/nio/file/attribute/FileTime;)V\n-  #519 = NameAndType        #767:#768     // owner:()Ljava/nio/file/attribute/UserPrincipal;\n-  #520 = Class              #769          // java/nio/file/attribute/UserPrincipal\n-  #521 = NameAndType        #344:#345     // getName:()Ljava/lang/String;\n-  #522 = NameAndType        #770:#771     // group:()Ljava/nio/file/attribute/GroupPrincipal;\n-  #523 = Class              #772          // java/nio/file/attribute/GroupPrincipal\n-  #524 = Utf8               unix\n-  #525 = Utf8               unix:uid\n-  #526 = NameAndType        #773:#774     // getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n-  #527 = Utf8               java/lang/Number\n-  #528 = NameAndType        #775:#357     // longValue:()J\n-  #529 = NameAndType        #276:#268     // userId:J\n-  #530 = Utf8               unix:gid\n-  #531 = NameAndType        #277:#268     // groupId:J\n-  #532 = Utf8               dos\n-  #533 = Utf8               java/nio/file/attribute/DosFileAttributes\n-  #534 = NameAndType        #776:#777     // getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n-  #535 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-  #536 = NameAndType        #406:#778     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #537 = NameAndType        #779:#780     // charAt:(I)C\n-  #538 = Utf8               BootstrapMethods\n-  #539 = MethodHandle       6:#781        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #540 = String             #782          // \\u0001/\n-  #541 = NameAndType        #783:#424     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #542 = NameAndType        #278:#784     // size:(Ljava/nio/file/Path;)J\n-  #543 = NameAndType        #440:#334     // parseTarHeader:([B)V\n-  #544 = NameAndType        #314:#336     // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #545 = NameAndType        #440:#441     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n-  #546 = NameAndType        #415:#358     // setDataOffset:(J)V\n-  #547 = NameAndType        #338:#340     // equals:(Ljava/lang/Object;)Z\n-  #548 = NameAndType        #785:#786     // getClass:()Ljava/lang/Class;\n-  #549 = NameAndType        #338:#339     // equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-  #550 = NameAndType        #341:#342     // hashCode:()I\n-  #551 = NameAndType        #787:#751     // startsWith:(Ljava/lang/String;)Z\n-  #552 = NameAndType        #355:#358     // setUserId:(J)V\n-  #553 = NameAndType        #360:#358     // setGroupId:(J)V\n-  #554 = NameAndType        #355:#348     // setUserId:(I)V\n-  #555 = NameAndType        #360:#348     // setGroupId:(I)V\n-  #556 = NameAndType        #363:#319     // setUserName:(Ljava/lang/String;)V\n-  #557 = NameAndType        #365:#319     // setGroupName:(Ljava/lang/String;)V\n-  #558 = NameAndType        #788:#357     // getTime:()J\n-  #559 = Class              #789          // java/util/concurrent/TimeUnit\n-  #560 = NameAndType        #790:#791     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #561 = Class              #792          // java/nio/file/attribute/FileTime\n-  #562 = NameAndType        #793:#794     // to:(Ljava/util/concurrent/TimeUnit;)J\n-  #563 = Utf8               java/util/Date\n-  #564 = NameAndType        #314:#358     // \"<init>\":(J)V\n-  #565 = NameAndType        #373:#374     // getModTime:()Ljava/util/Date;\n-  #566 = NameAndType        #280:#273     // checkSumOK:Z\n-  #567 = NameAndType        #795:#379     // toFile:()Ljava/io/File;\n-  #568 = NameAndType        #290:#291     // sparseHeaders:Ljava/util/List;\n-  #569 = NameAndType        #796:#377     // isEmpty:()Z\n-  #570 = Class              #797          // java/util/Collections\n-  #571 = NameAndType        #798:#388     // emptyList:()Ljava/util/List;\n-  #572 = NameAndType        #799:#800     // stream:()Ljava/util/stream/Stream;\n-  #573 = MethodHandle       6:#801        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #574 = MethodType         #340          //  (Ljava/lang/Object;)Z\n-  #575 = MethodHandle       6:#802        // REF_invokeStatic org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  #576 = MethodType         #454          //  (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  #577 = NameAndType        #803:#804     // test:()Ljava/util/function/Predicate;\n-  #578 = Class              #805          // java/util/stream/Stream\n-  #579 = NameAndType        #806:#807     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #580 = MethodType         #808          //  (Ljava/lang/Object;)J\n-  #581 = MethodHandle       5:#125        // REF_invokeVirtual org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n-  #582 = MethodType         #809          //  (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n-  #583 = NameAndType        #810:#811     // applyAsLong:()Ljava/util/function/ToLongFunction;\n-  #584 = Class              #812          // java/util/Comparator\n-  #585 = NameAndType        #813:#814     // comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n-  #586 = NameAndType        #815:#816     // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #587 = Class              #817          // java/util/stream/Collectors\n-  #588 = NameAndType        #818:#819     // toList:()Ljava/util/stream/Collector;\n-  #589 = NameAndType        #820:#821     // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #590 = Utf8               java/util/List\n-  #591 = NameAndType        #278:#342     // size:()I\n-  #592 = NameAndType        #822:#823     // get:(I)Ljava/lang/Object;\n-  #593 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-  #594 = NameAndType        #824:#357     // getOffset:()J\n-  #595 = NameAndType        #825:#357     // getNumbytes:()J\n-  #596 = String             #826          // Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n-  #597 = NameAndType        #314:#319     // \"<init>\":(Ljava/lang/String;)V\n-  #598 = String             #827          // Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n-  #599 = NameAndType        #397:#357     // getRealSize:()J\n-  #600 = Utf8               Corrupted TAR archive. Sparse block extends beyond real size of the entry\n-  #601 = NameAndType        #297:#273     // paxGNU1XSparse:Z\n-  #602 = Utf8               java/lang/IllegalArgumentException\n-  #603 = String             #828          // Size is out of range: \\u0001\n-  #604 = NameAndType        #783:#829     // makeConcatWithConstants:(J)Ljava/lang/String;\n-  #605 = NameAndType        #288:#275     // devMajor:I\n-  #606 = String             #830          // Major device number is out of range: \\u0001\n-  #607 = NameAndType        #783:#831     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #608 = NameAndType        #289:#275     // devMinor:I\n-  #609 = String             #832          // Minor device number is out of range: \\u0001\n-  #610 = NameAndType        #294:#273     // isExtended:Z\n-  #611 = NameAndType        #413:#377     // isSparse:()Z\n-  #612 = NameAndType        #383:#357     // getSize:()J\n-  #613 = NameAndType        #295:#268     // realSize:J\n-  #614 = NameAndType        #399:#377     // isOldGNUSparse:()Z\n-  #615 = NameAndType        #400:#377     // isPaxGNUSparse:()Z\n-  #616 = NameAndType        #296:#273     // paxGNUSparse:Z\n-  #617 = NameAndType        #298:#273     // starSparse:Z\n-  #618 = NameAndType        #404:#377     // isPaxHeader:()Z\n-  #619 = NameAndType        #405:#377     // isGlobalPaxHeader:()Z\n-  #620 = NameAndType        #833:#778     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #621 = NameAndType        #398:#377     // isGNUSparse:()Z\n-  #622 = NameAndType        #401:#377     // isStarSparse:()Z\n-  #623 = Utf8               The offset can not be smaller than 0\n-  #624 = NameAndType        #834:#835     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-  #625 = NameAndType        #836:#421     // clear:()V\n-  #626 = NameAndType        #429:#369     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n-  #627 = Utf8               Invalid input\n-  #628 = NameAndType        #314:#837     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #629 = NameAndType        #822:#838     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #630 = Utf8               java/lang/String\n-  #631 = NameAndType        #839:#760     // entrySet:()Ljava/util/Set;\n-  #632 = NameAndType        #840:#841     // iterator:()Ljava/util/Iterator;\n-  #633 = NameAndType        #842:#377     // hasNext:()Z\n-  #634 = NameAndType        #843:#844     // next:()Ljava/lang/Object;\n-  #635 = Utf8               java/util/Map$Entry\n-  #636 = Utf8               Entry\n-  #637 = Utf8               InnerClasses\n-  #638 = NameAndType        #845:#844     // getKey:()Ljava/lang/Object;\n-  #639 = NameAndType        #846:#844     // getValue:()Ljava/lang/Object;\n-  #640 = NameAndType        #429:#430     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #641 = Utf8               path\n-  #642 = Utf8               linkpath\n-  #643 = Utf8               gid\n-  #644 = Utf8               gname\n-  #645 = Utf8               uid\n-  #646 = Utf8               uname\n-  #647 = Utf8               mtime\n-  #648 = Utf8               SCHILY.devminor\n-  #649 = Utf8               SCHILY.devmajor\n-  #650 = Utf8               GNU.sparse.size\n-  #651 = Utf8               GNU.sparse.realsize\n-  #652 = Utf8               SCHILY.filetype\n-  #653 = NameAndType        #346:#319     // setName:(Ljava/lang/String;)V\n-  #654 = NameAndType        #350:#319     // setLinkName:(Ljava/lang/String;)V\n-  #655 = Class              #847          // java/lang/Long\n-  #656 = NameAndType        #848:#849     // parseLong:(Ljava/lang/String;)J\n-  #657 = Utf8               Corrupted TAR archive. Entry size is negative\n-  #658 = NameAndType        #392:#358     // setSize:(J)V\n-  #659 = Class              #850          // java/lang/Double\n-  #660 = NameAndType        #851:#852     // parseDouble:(Ljava/lang/String;)D\n-  #661 = NameAndType        #370:#358     // setModTime:(J)V\n-  #662 = Class              #853          // java/lang/Integer\n-  #663 = NameAndType        #854:#855     // parseInt:(Ljava/lang/String;)I\n-  #664 = Utf8               Corrupted TAR archive. Dev-Minor is negative\n-  #665 = NameAndType        #396:#348     // setDevMinor:(I)V\n-  #666 = Utf8               Corrupted TAR archive. Dev-Major is negative\n-  #667 = NameAndType        #394:#348     // setDevMajor:(I)V\n-  #668 = NameAndType        #450:#426     // fillGNUSparse0xData:(Ljava/util/Map;)V\n-  #669 = NameAndType        #451:#426     // fillGNUSparse1xData:(Ljava/util/Map;)V\n-  #670 = Utf8               sparse\n-  #671 = NameAndType        #452:#426     // fillStarSparseData:(Ljava/util/Map;)V\n-  #672 = NameAndType        #856:#857     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #673 = NameAndType        #265:#266     // EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #674 = Utf8               java/util/ArrayList\n-  #675 = NameAndType        #858:#859     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #676 = Utf8               java/nio/file/Path\n-  #677 = NameAndType        #314:#324     // \"<init>\":(Ljava/nio/file/Path;)V\n-  #678 = NameAndType        #860:#340     // add:(Ljava/lang/Object;)Z\n-  #679 = NameAndType        #861:#421     // close:()V\n-  #680 = Utf8               java/lang/Throwable\n-  #681 = NameAndType        #862:#863     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #682 = NameAndType        #864:#865     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #683 = Class              #866          // org/apache/commons/compress/archivers/tar/TarUtils\n-  #684 = NameAndType        #867:#868     // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #685 = NameAndType        #436:#336     // writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #686 = NameAndType        #869:#868     // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #687 = Utf8               java/lang/RuntimeException\n-  #688 = NameAndType        #314:#863     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #689 = NameAndType        #870:#871     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #690 = NameAndType        #438:#439     // writeEntryHeaderField:(J[BIIZ)I\n-  #691 = NameAndType        #870:#872     // formatNameBytes:(Ljava/lang/String;[BII)I\n-  #692 = NameAndType        #873:#874     // computeCheckSum:([B)J\n-  #693 = NameAndType        #875:#876     // formatCheckSumOctalBytes:(J[BII)I\n-  #694 = NameAndType        #877:#876     // formatLongOctalBytes:(J[BII)I\n-  #695 = NameAndType        #878:#876     // formatLongOctalOrBinaryBytes:(J[BII)I\n-  #696 = NameAndType        #440:#335     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #697 = NameAndType        #442:#441     // parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = String             #8            //\n+    #8 = Utf8\n+    #9 = Fieldref           #10.#11       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.name:Ljava/lang/String;\n+   #10 = Class              #12           // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+   #11 = NameAndType        #13:#14       // name:Ljava/lang/String;\n+   #12 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+   #13 = Utf8               name\n+   #14 = Utf8               Ljava/lang/String;\n+   #15 = Fieldref           #10.#16       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkName:Ljava/lang/String;\n+   #16 = NameAndType        #17:#14       // linkName:Ljava/lang/String;\n+   #17 = Utf8               linkName\n+   #18 = Class              #19           // org/apache/commons/compress/archivers/tar/TarConstants\n+   #19 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n+   #20 = String             #21           // ustar\\u0000\n+   #21 = Utf8               ustar\\u0000\n+   #22 = Fieldref           #10.#23       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.magic:Ljava/lang/String;\n+   #23 = NameAndType        #24:#14       // magic:Ljava/lang/String;\n+   #24 = Utf8               magic\n+   #25 = String             #26           // 00\n+   #26 = Utf8               00\n+   #27 = Fieldref           #10.#28       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.version:Ljava/lang/String;\n+   #28 = NameAndType        #29:#14       // version:Ljava/lang/String;\n+   #29 = Utf8               version\n+   #30 = Fieldref           #10.#31       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupName:Ljava/lang/String;\n+   #31 = NameAndType        #32:#14       // groupName:Ljava/lang/String;\n+   #32 = Utf8               groupName\n+   #33 = Class              #34           // java/util/HashMap\n+   #34 = Utf8               java/util/HashMap\n+   #35 = Methodref          #33.#3        // java/util/HashMap.\"<init>\":()V\n+   #36 = Fieldref           #10.#37       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.extraPaxHeaders:Ljava/util/Map;\n+   #37 = NameAndType        #38:#39       // extraPaxHeaders:Ljava/util/Map;\n+   #38 = Utf8               extraPaxHeaders\n+   #39 = Utf8               Ljava/util/Map;\n+   #40 = Class              #41           // org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #41 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #42 = Long               -1l\n+   #44 = Fieldref           #10.#45       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.dataOffset:J\n+   #45 = NameAndType        #46:#47       // dataOffset:J\n+   #46 = Utf8               dataOffset\n+   #47 = Utf8               J\n+   #48 = String             #49           // user.name\n+   #49 = Utf8               user.name\n+   #50 = Methodref          #51.#52       // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #51 = Class              #53           // java/lang/System\n+   #52 = NameAndType        #54:#55       // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #53 = Utf8               java/lang/System\n+   #54 = Utf8               getProperty\n+   #55 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #56 = Methodref          #57.#58       // java/lang/String.length:()I\n+   #57 = Class              #59           // java/lang/String\n+   #58 = NameAndType        #60:#61       // length:()I\n+   #59 = Utf8               java/lang/String\n+   #60 = Utf8               length\n+   #61 = Utf8               ()I\n+   #62 = Methodref          #57.#63       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #63 = NameAndType        #64:#65       // substring:(II)Ljava/lang/String;\n+   #64 = Utf8               substring\n+   #65 = Utf8               (II)Ljava/lang/String;\n+   #66 = Fieldref           #10.#67       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userName:Ljava/lang/String;\n+   #67 = NameAndType        #68:#14       // userName:Ljava/lang/String;\n+   #68 = Utf8               userName\n+   #69 = Fieldref           #10.#70       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.file:Ljava/nio/file/Path;\n+   #70 = NameAndType        #71:#72       // file:Ljava/nio/file/Path;\n+   #71 = Utf8               file\n+   #72 = Utf8               Ljava/nio/file/Path;\n+   #73 = Fieldref           #74.#75       // org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n+   #74 = Class              #76           // org/apache/commons/compress/utils/IOUtils\n+   #75 = NameAndType        #77:#78       // EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n+   #76 = Utf8               org/apache/commons/compress/utils/IOUtils\n+   #77 = Utf8               EMPTY_LINK_OPTIONS\n+   #78 = Utf8               [Ljava/nio/file/LinkOption;\n+   #79 = Fieldref           #10.#80       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkOptions:[Ljava/nio/file/LinkOption;\n+   #80 = NameAndType        #81:#78       // linkOptions:[Ljava/nio/file/LinkOption;\n+   #81 = Utf8               linkOptions\n+   #82 = Fieldref           #10.#83       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.preserveAbsolutePath:Z\n+   #83 = NameAndType        #84:#85       // preserveAbsolutePath:Z\n+   #84 = Utf8               preserveAbsolutePath\n+   #85 = Utf8               Z\n+   #86 = Methodref          #10.#87       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;Z)V\n+   #87 = NameAndType        #5:#88        // \"<init>\":(Ljava/lang/String;Z)V\n+   #88 = Utf8               (Ljava/lang/String;Z)V\n+   #89 = Methodref          #10.#90       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Z)V\n+   #90 = NameAndType        #5:#91        // \"<init>\":(Z)V\n+   #91 = Utf8               (Z)V\n+   #92 = Methodref          #10.#93       // org/apache/commons/compress/archivers/tar/TarArchiveEntry.normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #93 = NameAndType        #94:#95       // normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #94 = Utf8               normalizeFileName\n+   #95 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+   #96 = String             #97           // /\n+   #97 = Utf8               /\n+   #98 = Methodref          #57.#99       // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #99 = NameAndType        #100:#101     // endsWith:(Ljava/lang/String;)Z\n+  #100 = Utf8               endsWith\n+  #101 = Utf8               (Ljava/lang/String;)Z\n+  #102 = Integer            33188\n+  #103 = Fieldref           #10.#104      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.mode:I\n+  #104 = NameAndType        #105:#106     // mode:I\n+  #105 = Utf8               mode\n+  #106 = Utf8               I\n+  #107 = Fieldref           #10.#108      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkFlag:B\n+  #108 = NameAndType        #109:#110     // linkFlag:B\n+  #109 = Utf8               linkFlag\n+  #110 = Utf8               B\n+  #111 = Methodref          #51.#112      // java/lang/System.currentTimeMillis:()J\n+  #112 = NameAndType        #113:#114     // currentTimeMillis:()J\n+  #113 = Utf8               currentTimeMillis\n+  #114 = Utf8               ()J\n+  #115 = Long               1000l\n+  #117 = Fieldref           #10.#118      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.modTime:J\n+  #118 = NameAndType        #119:#47      // modTime:J\n+  #119 = Utf8               modTime\n+  #120 = Methodref          #10.#121      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;BZ)V\n+  #121 = NameAndType        #5:#122       // \"<init>\":(Ljava/lang/String;BZ)V\n+  #122 = Utf8               (Ljava/lang/String;BZ)V\n+  #123 = String             #124          // ustar\n+  #124 = Utf8               ustar\n+  #125 = String             #126          //  \\u0000\n+  #126 = Utf8                \\u0000\n+  #127 = Methodref          #128.#129     // java/io/File.getPath:()Ljava/lang/String;\n+  #128 = Class              #130          // java/io/File\n+  #129 = NameAndType        #131:#132     // getPath:()Ljava/lang/String;\n+  #130 = Utf8               java/io/File\n+  #131 = Utf8               getPath\n+  #132 = Utf8               ()Ljava/lang/String;\n+  #133 = Methodref          #10.#134      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #134 = NameAndType        #5:#135       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #135 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #136 = InterfaceMethodref #137.#138     // java/nio/file/Path.toString:()Ljava/lang/String;\n+  #137 = Class              #139          // java/nio/file/Path\n+  #138 = NameAndType        #140:#132     // toString:()Ljava/lang/String;\n+  #139 = Utf8               java/nio/file/Path\n+  #140 = Utf8               toString\n+  #141 = Class              #142          // java/nio/file/LinkOption\n+  #142 = Utf8               java/nio/file/LinkOption\n+  #143 = Methodref          #10.#144      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #144 = NameAndType        #5:#145       // \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #145 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #146 = Methodref          #128.#147     // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #147 = NameAndType        #148:#149     // toPath:()Ljava/nio/file/Path;\n+  #148 = Utf8               toPath\n+  #149 = Utf8               ()Ljava/nio/file/Path;\n+  #150 = Methodref          #10.#151      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #151 = NameAndType        #152:#145     // readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #152 = Utf8               readFileMode\n+  #153 = Class              #154          // java/io/IOException\n+  #154 = Utf8               java/io/IOException\n+  #155 = Methodref          #128.#156     // java/io/File.isDirectory:()Z\n+  #156 = NameAndType        #157:#158     // isDirectory:()Z\n+  #157 = Utf8               isDirectory\n+  #158 = Utf8               ()Z\n+  #159 = Methodref          #128.#160     // java/io/File.length:()J\n+  #160 = NameAndType        #60:#114      // length:()J\n+  #161 = Fieldref           #10.#162      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.size:J\n+  #162 = NameAndType        #163:#47      // size:J\n+  #163 = Utf8               size\n+  #164 = Methodref          #10.#165      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n+  #165 = NameAndType        #166:#167     // readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n+  #166 = Utf8               readOsSpecificProperties\n+  #167 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n+  #168 = Methodref          #128.#169     // java/io/File.lastModified:()J\n+  #169 = NameAndType        #170:#114     // lastModified:()J\n+  #170 = Utf8               lastModified\n+  #171 = InterfaceMethodref #137.#172     // java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;\n+  #172 = NameAndType        #173:#174     // getFileSystem:()Ljava/nio/file/FileSystem;\n+  #173 = Utf8               getFileSystem\n+  #174 = Utf8               ()Ljava/nio/file/FileSystem;\n+  #175 = Methodref          #176.#177     // java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;\n+  #176 = Class              #178          // java/nio/file/FileSystem\n+  #177 = NameAndType        #179:#180     // supportedFileAttributeViews:()Ljava/util/Set;\n+  #178 = Utf8               java/nio/file/FileSystem\n+  #179 = Utf8               supportedFileAttributeViews\n+  #180 = Utf8               ()Ljava/util/Set;\n+  #181 = String             #182          // posix\n+  #182 = Utf8               posix\n+  #183 = InterfaceMethodref #184.#185     // java/util/Set.contains:(Ljava/lang/Object;)Z\n+  #184 = Class              #186          // java/util/Set\n+  #185 = NameAndType        #187:#188     // contains:(Ljava/lang/Object;)Z\n+  #186 = Utf8               java/util/Set\n+  #187 = Utf8               contains\n+  #188 = Utf8               (Ljava/lang/Object;)Z\n+  #189 = Class              #190          // java/nio/file/attribute/PosixFileAttributes\n+  #190 = Utf8               java/nio/file/attribute/PosixFileAttributes\n+  #191 = Methodref          #192.#193     // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #192 = Class              #194          // java/nio/file/Files\n+  #193 = NameAndType        #195:#196     // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #194 = Utf8               java/nio/file/Files\n+  #195 = Utf8               readAttributes\n+  #196 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #197 = InterfaceMethodref #189.#198     // java/nio/file/attribute/PosixFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+  #198 = NameAndType        #199:#200     // lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+  #199 = Utf8               lastModifiedTime\n+  #200 = Utf8               ()Ljava/nio/file/attribute/FileTime;\n+  #201 = Methodref          #10.#202      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #202 = NameAndType        #203:#204     // setModTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #203 = Utf8               setModTime\n+  #204 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n+  #205 = InterfaceMethodref #189.#206     // java/nio/file/attribute/PosixFileAttributes.owner:()Ljava/nio/file/attribute/UserPrincipal;\n+  #206 = NameAndType        #207:#208     // owner:()Ljava/nio/file/attribute/UserPrincipal;\n+  #207 = Utf8               owner\n+  #208 = Utf8               ()Ljava/nio/file/attribute/UserPrincipal;\n+  #209 = InterfaceMethodref #210.#211     // java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n+  #210 = Class              #212          // java/nio/file/attribute/UserPrincipal\n+  #211 = NameAndType        #213:#132     // getName:()Ljava/lang/String;\n+  #212 = Utf8               java/nio/file/attribute/UserPrincipal\n+  #213 = Utf8               getName\n+  #214 = InterfaceMethodref #189.#215     // java/nio/file/attribute/PosixFileAttributes.group:()Ljava/nio/file/attribute/GroupPrincipal;\n+  #215 = NameAndType        #216:#217     // group:()Ljava/nio/file/attribute/GroupPrincipal;\n+  #216 = Utf8               group\n+  #217 = Utf8               ()Ljava/nio/file/attribute/GroupPrincipal;\n+  #218 = InterfaceMethodref #219.#211     // java/nio/file/attribute/GroupPrincipal.getName:()Ljava/lang/String;\n+  #219 = Class              #220          // java/nio/file/attribute/GroupPrincipal\n+  #220 = Utf8               java/nio/file/attribute/GroupPrincipal\n+  #221 = String             #222          // unix\n+  #222 = Utf8               unix\n+  #223 = String             #224          // unix:uid\n+  #224 = Utf8               unix:uid\n+  #225 = Methodref          #192.#226     // java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n+  #226 = NameAndType        #227:#228     // getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n+  #227 = Utf8               getAttribute\n+  #228 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n+  #229 = Class              #230          // java/lang/Number\n+  #230 = Utf8               java/lang/Number\n+  #231 = Methodref          #229.#232     // java/lang/Number.longValue:()J\n+  #232 = NameAndType        #233:#114     // longValue:()J\n+  #233 = Utf8               longValue\n+  #234 = Fieldref           #10.#235      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userId:J\n+  #235 = NameAndType        #236:#47      // userId:J\n+  #236 = Utf8               userId\n+  #237 = String             #238          // unix:gid\n+  #238 = Utf8               unix:gid\n+  #239 = Fieldref           #10.#240      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupId:J\n+  #240 = NameAndType        #241:#47      // groupId:J\n+  #241 = Utf8               groupId\n+  #242 = String             #243          // dos\n+  #243 = Utf8               dos\n+  #244 = Class              #245          // java/nio/file/attribute/DosFileAttributes\n+  #245 = Utf8               java/nio/file/attribute/DosFileAttributes\n+  #246 = InterfaceMethodref #244.#198     // java/nio/file/attribute/DosFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+  #247 = Methodref          #192.#248     // java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n+  #248 = NameAndType        #249:#250     // getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n+  #249 = Utf8               getOwner\n+  #250 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n+  #251 = Class              #252          // java/nio/file/attribute/BasicFileAttributes\n+  #252 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #253 = InterfaceMethodref #251.#198     // java/nio/file/attribute/BasicFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+  #254 = Methodref          #192.#255     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #255 = NameAndType        #157:#256     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #256 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #257 = Methodref          #57.#258      // java/lang/String.charAt:(I)C\n+  #258 = NameAndType        #259:#260     // charAt:(I)C\n+  #259 = Utf8               charAt\n+  #260 = Utf8               (I)C\n+  #261 = InvokeDynamic      #0:#262       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #262 = NameAndType        #263:#264     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #263 = Utf8               makeConcatWithConstants\n+  #264 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #265 = Methodref          #192.#266     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+  #266 = NameAndType        #163:#267     // size:(Ljava/nio/file/Path;)J\n+  #267 = Utf8               (Ljava/nio/file/Path;)J\n+  #268 = Methodref          #10.#269      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([B)V\n+  #269 = NameAndType        #270:#271     // parseTarHeader:([B)V\n+  #270 = Utf8               parseTarHeader\n+  #271 = Utf8               ([B)V\n+  #272 = Methodref          #10.#273      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #273 = NameAndType        #5:#274       // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #274 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #275 = Methodref          #10.#276      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+  #276 = NameAndType        #270:#277     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+  #277 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+  #278 = Methodref          #10.#279      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDataOffset:(J)V\n+  #279 = NameAndType        #280:#281     // setDataOffset:(J)V\n+  #280 = Utf8               setDataOffset\n+  #281 = Utf8               (J)V\n+  #282 = Methodref          #10.#211      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;\n+  #283 = Methodref          #57.#284      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #284 = NameAndType        #285:#188     // equals:(Ljava/lang/Object;)Z\n+  #285 = Utf8               equals\n+  #286 = Methodref          #2.#287       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #287 = NameAndType        #288:#289     // getClass:()Ljava/lang/Class;\n+  #288 = Utf8               getClass\n+  #289 = Utf8               ()Ljava/lang/Class;\n+  #290 = Methodref          #10.#291      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+  #291 = NameAndType        #285:#292     // equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+  #292 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+  #293 = Methodref          #57.#294      // java/lang/String.hashCode:()I\n+  #294 = NameAndType        #295:#61      // hashCode:()I\n+  #295 = Utf8               hashCode\n+  #296 = Methodref          #57.#297      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #297 = NameAndType        #298:#101     // startsWith:(Ljava/lang/String;)Z\n+  #298 = Utf8               startsWith\n+  #299 = Methodref          #10.#300      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(J)V\n+  #300 = NameAndType        #301:#281     // setUserId:(J)V\n+  #301 = Utf8               setUserId\n+  #302 = Methodref          #10.#303      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(J)V\n+  #303 = NameAndType        #304:#281     // setGroupId:(J)V\n+  #304 = Utf8               setGroupId\n+  #305 = Methodref          #10.#306      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(I)V\n+  #306 = NameAndType        #301:#307     // setUserId:(I)V\n+  #307 = Utf8               (I)V\n+  #308 = Methodref          #10.#309      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(I)V\n+  #309 = NameAndType        #304:#307     // setGroupId:(I)V\n+  #310 = Methodref          #10.#311      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserName:(Ljava/lang/String;)V\n+  #311 = NameAndType        #312:#313     // setUserName:(Ljava/lang/String;)V\n+  #312 = Utf8               setUserName\n+  #313 = Utf8               (Ljava/lang/String;)V\n+  #314 = Methodref          #10.#315      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupName:(Ljava/lang/String;)V\n+  #315 = NameAndType        #316:#313     // setGroupName:(Ljava/lang/String;)V\n+  #316 = Utf8               setGroupName\n+  #317 = Methodref          #318.#319     // java/util/Date.getTime:()J\n+  #318 = Class              #320          // java/util/Date\n+  #319 = NameAndType        #321:#114     // getTime:()J\n+  #320 = Utf8               java/util/Date\n+  #321 = Utf8               getTime\n+  #322 = Fieldref           #323.#324     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #323 = Class              #325          // java/util/concurrent/TimeUnit\n+  #324 = NameAndType        #326:#327     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #325 = Utf8               java/util/concurrent/TimeUnit\n+  #326 = Utf8               SECONDS\n+  #327 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #328 = Methodref          #329.#330     // java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n+  #329 = Class              #331          // java/nio/file/attribute/FileTime\n+  #330 = NameAndType        #332:#333     // to:(Ljava/util/concurrent/TimeUnit;)J\n+  #331 = Utf8               java/nio/file/attribute/FileTime\n+  #332 = Utf8               to\n+  #333 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n+  #334 = Methodref          #318.#335     // java/util/Date.\"<init>\":(J)V\n+  #335 = NameAndType        #5:#281       // \"<init>\":(J)V\n+  #336 = Methodref          #10.#337      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;\n+  #337 = NameAndType        #338:#339     // getModTime:()Ljava/util/Date;\n+  #338 = Utf8               getModTime\n+  #339 = Utf8               ()Ljava/util/Date;\n+  #340 = Fieldref           #10.#341      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.checkSumOK:Z\n+  #341 = NameAndType        #342:#85      // checkSumOK:Z\n+  #342 = Utf8               checkSumOK\n+  #343 = InterfaceMethodref #137.#344     // java/nio/file/Path.toFile:()Ljava/io/File;\n+  #344 = NameAndType        #345:#346     // toFile:()Ljava/io/File;\n+  #345 = Utf8               toFile\n+  #346 = Utf8               ()Ljava/io/File;\n+  #347 = Fieldref           #10.#348      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.sparseHeaders:Ljava/util/List;\n+  #348 = NameAndType        #349:#350     // sparseHeaders:Ljava/util/List;\n+  #349 = Utf8               sparseHeaders\n+  #350 = Utf8               Ljava/util/List;\n+  #351 = InterfaceMethodref #352.#353     // java/util/List.isEmpty:()Z\n+  #352 = Class              #354          // java/util/List\n+  #353 = NameAndType        #355:#158     // isEmpty:()Z\n+  #354 = Utf8               java/util/List\n+  #355 = Utf8               isEmpty\n+  #356 = Methodref          #357.#358     // java/util/Collections.emptyList:()Ljava/util/List;\n+  #357 = Class              #359          // java/util/Collections\n+  #358 = NameAndType        #360:#361     // emptyList:()Ljava/util/List;\n+  #359 = Utf8               java/util/Collections\n+  #360 = Utf8               emptyList\n+  #361 = Utf8               ()Ljava/util/List;\n+  #362 = InterfaceMethodref #352.#363     // java/util/List.stream:()Ljava/util/stream/Stream;\n+  #363 = NameAndType        #364:#365     // stream:()Ljava/util/stream/Stream;\n+  #364 = Utf8               stream\n+  #365 = Utf8               ()Ljava/util/stream/Stream;\n+  #366 = InvokeDynamic      #1:#367       // #1:test:()Ljava/util/function/Predicate;\n+  #367 = NameAndType        #368:#369     // test:()Ljava/util/function/Predicate;\n+  #368 = Utf8               test\n+  #369 = Utf8               ()Ljava/util/function/Predicate;\n+  #370 = InterfaceMethodref #371.#372     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #371 = Class              #373          // java/util/stream/Stream\n+  #372 = NameAndType        #374:#375     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #373 = Utf8               java/util/stream/Stream\n+  #374 = Utf8               filter\n+  #375 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #376 = InvokeDynamic      #2:#377       // #2:applyAsLong:()Ljava/util/function/ToLongFunction;\n+  #377 = NameAndType        #378:#379     // applyAsLong:()Ljava/util/function/ToLongFunction;\n+  #378 = Utf8               applyAsLong\n+  #379 = Utf8               ()Ljava/util/function/ToLongFunction;\n+  #380 = InterfaceMethodref #381.#382     // java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n+  #381 = Class              #383          // java/util/Comparator\n+  #382 = NameAndType        #384:#385     // comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n+  #383 = Utf8               java/util/Comparator\n+  #384 = Utf8               comparingLong\n+  #385 = Utf8               (Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n+  #386 = InterfaceMethodref #371.#387     // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #387 = NameAndType        #388:#389     // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #388 = Utf8               sorted\n+  #389 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #390 = Methodref          #391.#392     // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+  #391 = Class              #393          // java/util/stream/Collectors\n+  #392 = NameAndType        #394:#395     // toList:()Ljava/util/stream/Collector;\n+  #393 = Utf8               java/util/stream/Collectors\n+  #394 = Utf8               toList\n+  #395 = Utf8               ()Ljava/util/stream/Collector;\n+  #396 = InterfaceMethodref #371.#397     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #397 = NameAndType        #398:#399     // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #398 = Utf8               collect\n+  #399 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #400 = InterfaceMethodref #352.#401     // java/util/List.size:()I\n+  #401 = NameAndType        #163:#61      // size:()I\n+  #402 = InterfaceMethodref #352.#403     // java/util/List.get:(I)Ljava/lang/Object;\n+  #403 = NameAndType        #404:#405     // get:(I)Ljava/lang/Object;\n+  #404 = Utf8               get\n+  #405 = Utf8               (I)Ljava/lang/Object;\n+  #406 = Class              #407          // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #407 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #408 = Methodref          #406.#409     // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+  #409 = NameAndType        #410:#114     // getOffset:()J\n+  #410 = Utf8               getOffset\n+  #411 = Methodref          #406.#412     // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+  #412 = NameAndType        #413:#114     // getNumbytes:()J\n+  #413 = Utf8               getNumbytes\n+  #414 = InvokeDynamic      #3:#262       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #415 = Methodref          #153.#416     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #416 = NameAndType        #5:#313       // \"<init>\":(Ljava/lang/String;)V\n+  #417 = InvokeDynamic      #4:#262       // #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #418 = Methodref          #10.#419      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getRealSize:()J\n+  #419 = NameAndType        #420:#114     // getRealSize:()J\n+  #420 = Utf8               getRealSize\n+  #421 = String             #422          // Corrupted TAR archive. Sparse block extends beyond real size of the entry\n+  #422 = Utf8               Corrupted TAR archive. Sparse block extends beyond real size of the entry\n+  #423 = Fieldref           #10.#424      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNU1XSparse:Z\n+  #424 = NameAndType        #425:#85      // paxGNU1XSparse:Z\n+  #425 = Utf8               paxGNU1XSparse\n+  #426 = Class              #427          // java/lang/IllegalArgumentException\n+  #427 = Utf8               java/lang/IllegalArgumentException\n+  #428 = InvokeDynamic      #5:#429       // #5:makeConcatWithConstants:(J)Ljava/lang/String;\n+  #429 = NameAndType        #263:#430     // makeConcatWithConstants:(J)Ljava/lang/String;\n+  #430 = Utf8               (J)Ljava/lang/String;\n+  #431 = Methodref          #426.#416     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #432 = Fieldref           #10.#433      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMajor:I\n+  #433 = NameAndType        #434:#106     // devMajor:I\n+  #434 = Utf8               devMajor\n+  #435 = InvokeDynamic      #6:#436       // #6:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #436 = NameAndType        #263:#437     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #437 = Utf8               (I)Ljava/lang/String;\n+  #438 = Fieldref           #10.#439      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMinor:I\n+  #439 = NameAndType        #440:#106     // devMinor:I\n+  #440 = Utf8               devMinor\n+  #441 = InvokeDynamic      #7:#436       // #7:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #442 = Fieldref           #10.#443      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:Z\n+  #443 = NameAndType        #444:#85      // isExtended:Z\n+  #444 = Utf8               isExtended\n+  #445 = Methodref          #10.#446      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isSparse:()Z\n+  #446 = NameAndType        #447:#158     // isSparse:()Z\n+  #447 = Utf8               isSparse\n+  #448 = Methodref          #10.#449      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getSize:()J\n+  #449 = NameAndType        #450:#114     // getSize:()J\n+  #450 = Utf8               getSize\n+  #451 = Fieldref           #10.#452      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.realSize:J\n+  #452 = NameAndType        #453:#47      // realSize:J\n+  #453 = Utf8               realSize\n+  #454 = Methodref          #10.#455      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z\n+  #455 = NameAndType        #456:#158     // isOldGNUSparse:()Z\n+  #456 = Utf8               isOldGNUSparse\n+  #457 = Methodref          #10.#458      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNUSparse:()Z\n+  #458 = NameAndType        #459:#158     // isPaxGNUSparse:()Z\n+  #459 = Utf8               isPaxGNUSparse\n+  #460 = Fieldref           #10.#461      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNUSparse:Z\n+  #461 = NameAndType        #462:#85      // paxGNUSparse:Z\n+  #462 = Utf8               paxGNUSparse\n+  #463 = Fieldref           #10.#464      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.starSparse:Z\n+  #464 = NameAndType        #465:#85      // starSparse:Z\n+  #465 = Utf8               starSparse\n+  #466 = Methodref          #10.#467      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z\n+  #467 = NameAndType        #468:#158     // isPaxHeader:()Z\n+  #468 = Utf8               isPaxHeader\n+  #469 = Methodref          #10.#470      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z\n+  #470 = NameAndType        #471:#158     // isGlobalPaxHeader:()Z\n+  #471 = Utf8               isGlobalPaxHeader\n+  #472 = Methodref          #192.#473     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #473 = NameAndType        #474:#256     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #474 = Utf8               isRegularFile\n+  #475 = Methodref          #10.#476      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNUSparse:()Z\n+  #476 = NameAndType        #477:#158     // isGNUSparse:()Z\n+  #477 = Utf8               isGNUSparse\n+  #478 = Methodref          #10.#479      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isStarSparse:()Z\n+  #479 = NameAndType        #480:#158     // isStarSparse:()Z\n+  #480 = Utf8               isStarSparse\n+  #481 = String             #482          // The offset can not be smaller than 0\n+  #482 = Utf8               The offset can not be smaller than 0\n+  #483 = Methodref          #357.#484     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+  #484 = NameAndType        #485:#486     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+  #485 = Utf8               unmodifiableMap\n+  #486 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n+  #487 = InterfaceMethodref #488.#489     // java/util/Map.clear:()V\n+  #488 = Class              #490          // java/util/Map\n+  #489 = NameAndType        #491:#6       // clear:()V\n+  #490 = Utf8               java/util/Map\n+  #491 = Utf8               clear\n+  #492 = Methodref          #10.#493      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n+  #493 = NameAndType        #494:#495     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n+  #494 = Utf8               processPaxHeader\n+  #495 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #496 = String             #497          // Invalid input\n+  #497 = Utf8               Invalid input\n+  #498 = Methodref          #426.#499     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #499 = NameAndType        #5:#500       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #500 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #501 = InterfaceMethodref #488.#502     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #502 = NameAndType        #404:#503     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #503 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #504 = InterfaceMethodref #488.#505     // java/util/Map.entrySet:()Ljava/util/Set;\n+  #505 = NameAndType        #506:#180     // entrySet:()Ljava/util/Set;\n+  #506 = Utf8               entrySet\n+  #507 = InterfaceMethodref #184.#508     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #508 = NameAndType        #509:#510     // iterator:()Ljava/util/Iterator;\n+  #509 = Utf8               iterator\n+  #510 = Utf8               ()Ljava/util/Iterator;\n+  #511 = InterfaceMethodref #512.#513     // java/util/Iterator.hasNext:()Z\n+  #512 = Class              #514          // java/util/Iterator\n+  #513 = NameAndType        #515:#158     // hasNext:()Z\n+  #514 = Utf8               java/util/Iterator\n+  #515 = Utf8               hasNext\n+  #516 = InterfaceMethodref #512.#517     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #517 = NameAndType        #518:#519     // next:()Ljava/lang/Object;\n+  #518 = Utf8               next\n+  #519 = Utf8               ()Ljava/lang/Object;\n+  #520 = Class              #521          // java/util/Map$Entry\n+  #521 = Utf8               java/util/Map$Entry\n+  #522 = InterfaceMethodref #520.#523     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+  #523 = NameAndType        #524:#519     // getKey:()Ljava/lang/Object;\n+  #524 = Utf8               getKey\n+  #525 = InterfaceMethodref #520.#526     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #526 = NameAndType        #527:#519     // getValue:()Ljava/lang/Object;\n+  #527 = Utf8               getValue\n+  #528 = Methodref          #10.#529      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #529 = NameAndType        #494:#530     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #530 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #531 = String             #532          // path\n+  #532 = Utf8               path\n+  #533 = String             #534          // linkpath\n+  #534 = Utf8               linkpath\n+  #535 = String             #536          // gid\n+  #536 = Utf8               gid\n+  #537 = String             #538          // gname\n+  #538 = Utf8               gname\n+  #539 = String             #540          // uid\n+  #540 = Utf8               uid\n+  #541 = String             #542          // uname\n+  #542 = Utf8               uname\n+  #543 = String             #163          // size\n+  #544 = String             #545          // mtime\n+  #545 = Utf8               mtime\n+  #546 = String             #547          // SCHILY.devminor\n+  #547 = Utf8               SCHILY.devminor\n+  #548 = String             #549          // SCHILY.devmajor\n+  #549 = Utf8               SCHILY.devmajor\n+  #550 = String             #551          // GNU.sparse.size\n+  #551 = Utf8               GNU.sparse.size\n+  #552 = String             #553          // GNU.sparse.realsize\n+  #553 = Utf8               GNU.sparse.realsize\n+  #554 = String             #555          // SCHILY.filetype\n+  #555 = Utf8               SCHILY.filetype\n+  #556 = Methodref          #10.#557      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V\n+  #557 = NameAndType        #558:#313     // setName:(Ljava/lang/String;)V\n+  #558 = Utf8               setName\n+  #559 = Methodref          #10.#560      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V\n+  #560 = NameAndType        #561:#313     // setLinkName:(Ljava/lang/String;)V\n+  #561 = Utf8               setLinkName\n+  #562 = Methodref          #563.#564     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+  #563 = Class              #565          // java/lang/Long\n+  #564 = NameAndType        #566:#567     // parseLong:(Ljava/lang/String;)J\n+  #565 = Utf8               java/lang/Long\n+  #566 = Utf8               parseLong\n+  #567 = Utf8               (Ljava/lang/String;)J\n+  #568 = String             #569          // Corrupted TAR archive. Entry size is negative\n+  #569 = Utf8               Corrupted TAR archive. Entry size is negative\n+  #570 = Methodref          #10.#571      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V\n+  #571 = NameAndType        #572:#281     // setSize:(J)V\n+  #572 = Utf8               setSize\n+  #573 = Methodref          #574.#575     // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+  #574 = Class              #576          // java/lang/Double\n+  #575 = NameAndType        #577:#578     // parseDouble:(Ljava/lang/String;)D\n+  #576 = Utf8               java/lang/Double\n+  #577 = Utf8               parseDouble\n+  #578 = Utf8               (Ljava/lang/String;)D\n+  #579 = Double             1000.0d\n+  #581 = Methodref          #10.#582      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(J)V\n+  #582 = NameAndType        #203:#281     // setModTime:(J)V\n+  #583 = Methodref          #584.#585     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #584 = Class              #586          // java/lang/Integer\n+  #585 = NameAndType        #587:#588     // parseInt:(Ljava/lang/String;)I\n+  #586 = Utf8               java/lang/Integer\n+  #587 = Utf8               parseInt\n+  #588 = Utf8               (Ljava/lang/String;)I\n+  #589 = String             #590          // Corrupted TAR archive. Dev-Minor is negative\n+  #590 = Utf8               Corrupted TAR archive. Dev-Minor is negative\n+  #591 = Methodref          #10.#592      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMinor:(I)V\n+  #592 = NameAndType        #593:#307     // setDevMinor:(I)V\n+  #593 = Utf8               setDevMinor\n+  #594 = String             #595          // Corrupted TAR archive. Dev-Major is negative\n+  #595 = Utf8               Corrupted TAR archive. Dev-Major is negative\n+  #596 = Methodref          #10.#597      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMajor:(I)V\n+  #597 = NameAndType        #598:#307     // setDevMajor:(I)V\n+  #598 = Utf8               setDevMajor\n+  #599 = Methodref          #10.#600      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse0xData:(Ljava/util/Map;)V\n+  #600 = NameAndType        #601:#602     // fillGNUSparse0xData:(Ljava/util/Map;)V\n+  #601 = Utf8               fillGNUSparse0xData\n+  #602 = Utf8               (Ljava/util/Map;)V\n+  #603 = Methodref          #10.#604      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse1xData:(Ljava/util/Map;)V\n+  #604 = NameAndType        #605:#602     // fillGNUSparse1xData:(Ljava/util/Map;)V\n+  #605 = Utf8               fillGNUSparse1xData\n+  #606 = String             #607          // sparse\n+  #607 = Utf8               sparse\n+  #608 = Methodref          #10.#609      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillStarSparseData:(Ljava/util/Map;)V\n+  #609 = NameAndType        #610:#602     // fillStarSparseData:(Ljava/util/Map;)V\n+  #610 = Utf8               fillStarSparseData\n+  #611 = InterfaceMethodref #488.#612     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #612 = NameAndType        #613:#614     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #613 = Utf8               put\n+  #614 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #615 = Methodref          #10.#156      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z\n+  #616 = Fieldref           #10.#617      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #617 = NameAndType        #618:#619     // EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #618 = Utf8               EMPTY_TAR_ARCHIVE_ENTRY_ARRAY\n+  #619 = Utf8               [Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #620 = Class              #621          // java/util/ArrayList\n+  #621 = Utf8               java/util/ArrayList\n+  #622 = Methodref          #620.#3       // java/util/ArrayList.\"<init>\":()V\n+  #623 = Methodref          #192.#624     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #624 = NameAndType        #625:#626     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #625 = Utf8               newDirectoryStream\n+  #626 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #627 = InterfaceMethodref #628.#508     // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+  #628 = Class              #629          // java/nio/file/DirectoryStream\n+  #629 = Utf8               java/nio/file/DirectoryStream\n+  #630 = Methodref          #10.#631      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/nio/file/Path;)V\n+  #631 = NameAndType        #5:#632       // \"<init>\":(Ljava/nio/file/Path;)V\n+  #632 = Utf8               (Ljava/nio/file/Path;)V\n+  #633 = InterfaceMethodref #352.#634     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #634 = NameAndType        #635:#188     // add:(Ljava/lang/Object;)Z\n+  #635 = Utf8               add\n+  #636 = InterfaceMethodref #628.#637     // java/nio/file/DirectoryStream.close:()V\n+  #637 = NameAndType        #638:#6       // close:()V\n+  #638 = Utf8               close\n+  #639 = Class              #640          // java/lang/Throwable\n+  #640 = Utf8               java/lang/Throwable\n+  #641 = Methodref          #639.#642     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #642 = NameAndType        #643:#644     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #643 = Utf8               addSuppressed\n+  #644 = Utf8               (Ljava/lang/Throwable;)V\n+  #645 = InterfaceMethodref #352.#646     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #646 = NameAndType        #647:#648     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #647 = Utf8               toArray\n+  #648 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #649 = Class              #619          // \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n+  #650 = Fieldref           #651.#652     // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #651 = Class              #653          // org/apache/commons/compress/archivers/tar/TarUtils\n+  #652 = NameAndType        #654:#655     // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #653 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+  #654 = Utf8               DEFAULT_ENCODING\n+  #655 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #656 = Methodref          #10.#657      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #657 = NameAndType        #658:#274     // writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #658 = Utf8               writeEntryHeader\n+  #659 = Fieldref           #651.#660     // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #660 = NameAndType        #661:#655     // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #661 = Utf8               FALLBACK_ENCODING\n+  #662 = Class              #663          // java/lang/RuntimeException\n+  #663 = Utf8               java/lang/RuntimeException\n+  #664 = Methodref          #662.#665     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #665 = NameAndType        #5:#644       // \"<init>\":(Ljava/lang/Throwable;)V\n+  #666 = Methodref          #651.#667     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #667 = NameAndType        #668:#669     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #668 = Utf8               formatNameBytes\n+  #669 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #670 = Methodref          #10.#671      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField:(J[BIIZ)I\n+  #671 = NameAndType        #672:#673     // writeEntryHeaderField:(J[BIIZ)I\n+  #672 = Utf8               writeEntryHeaderField\n+  #673 = Utf8               (J[BIIZ)I\n+  #674 = Methodref          #651.#675     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n+  #675 = NameAndType        #668:#676     // formatNameBytes:(Ljava/lang/String;[BII)I\n+  #676 = Utf8               (Ljava/lang/String;[BII)I\n+  #677 = Methodref          #651.#678     // org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n+  #678 = NameAndType        #679:#680     // computeCheckSum:([B)J\n+  #679 = Utf8               computeCheckSum\n+  #680 = Utf8               ([B)J\n+  #681 = Methodref          #651.#682     // org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n+  #682 = NameAndType        #683:#684     // formatCheckSumOctalBytes:(J[BII)I\n+  #683 = Utf8               formatCheckSumOctalBytes\n+  #684 = Utf8               (J[BII)I\n+  #685 = Methodref          #651.#686     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n+  #686 = NameAndType        #687:#684     // formatLongOctalBytes:(J[BII)I\n+  #687 = Utf8               formatLongOctalBytes\n+  #688 = Methodref          #651.#689     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n+  #689 = NameAndType        #690:#684     // formatLongOctalOrBinaryBytes:(J[BII)I\n+  #690 = Utf8               formatLongOctalOrBinaryBytes\n+  #691 = Methodref          #10.#692      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #692 = NameAndType        #270:#693     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #693 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #694 = Methodref          #10.#695      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+  #695 = NameAndType        #696:#277     // parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+  #696 = Utf8               parseTarHeaderUnwrapped\n+  #697 = String             #698          // Corrupted TAR archive.\n   #698 = Utf8               Corrupted TAR archive.\n-  #699 = NameAndType        #879:#880     // parseName:([BII)Ljava/lang/String;\n-  #700 = NameAndType        #879:#881     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #701 = NameAndType        #444:#445     // parseOctalOrBinary:([BIIZ)J\n-  #702 = NameAndType        #444:#882     // parseOctalOrBinary:([BII)J\n-  #703 = Utf8               broken archive, entry with negative size\n-  #704 = NameAndType        #883:#884     // verifyCheckSum:([B)Z\n-  #705 = NameAndType        #448:#449     // evaluateType:([B)I\n-  #706 = NameAndType        #885:#886     // readSparseStructs:([BII)Ljava/util/List;\n-  #707 = NameAndType        #314:#887     // \"<init>\":(Ljava/util/Collection;)V\n-  #708 = NameAndType        #888:#889     // parseBoolean:([BI)Z\n-  #709 = NameAndType        #890:#882     // parseOctal:([BII)J\n-  #710 = String             #891          // \\u0001/\\u0001\n-  #711 = NameAndType        #783:#744     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #712 = Utf8               os.name\n-  #713 = NameAndType        #743:#424     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #714 = Class              #892          // java/util/Locale\n-  #715 = NameAndType        #893:#894     // ENGLISH:Ljava/util/Locale;\n-  #716 = NameAndType        #895:#896     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #717 = Utf8               windows\n-  #718 = NameAndType        #746:#831     // substring:(I)Ljava/lang/String;\n-  #719 = Utf8               netware\n-  #720 = NameAndType        #761:#897     // contains:(Ljava/lang/CharSequence;)Z\n-  #721 = NameAndType        #898:#899     // indexOf:(I)I\n-  #722 = NameAndType        #900:#901     // separatorChar:C\n-  #723 = NameAndType        #902:#903     // replace:(CC)Ljava/lang/String;\n-  #724 = Class              #904          // org/apache/commons/compress/utils/ArchiveUtils\n-  #725 = NameAndType        #905:#906     // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-  #726 = Utf8               tar\\u0000\n-  #727 = Utf8               GNU.sparse.name\n-  #728 = NameAndType        #907:#340     // containsKey:(Ljava/lang/Object;)Z\n-  #729 = Utf8               java/lang/NumberFormatException\n-  #730 = String             #908          // Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n-  #731 = Utf8               SCHILY.realsize\n-  #732 = String             #909          // Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n-  #733 = Utf8               java/lang/Object\n-  #734 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #735 = Utf8               java/io/File\n-  #736 = Utf8               java/util/Set\n-  #737 = Utf8               java/util/Iterator\n-  #738 = Utf8               java/util/Map\n-  #739 = Utf8               java/nio/file/DirectoryStream\n-  #740 = Utf8               [B\n-  #741 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #742 = Utf8               java/lang/System\n-  #743 = Utf8               getProperty\n-  #744 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #745 = Utf8               length\n-  #746 = Utf8               substring\n-  #747 = Utf8               (II)Ljava/lang/String;\n-  #748 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #749 = Utf8               EMPTY_LINK_OPTIONS\n-  #750 = Utf8               endsWith\n-  #751 = Utf8               (Ljava/lang/String;)Z\n-  #752 = Utf8               currentTimeMillis\n-  #753 = Utf8               toString\n-  #754 = Utf8               toPath\n-  #755 = Utf8               lastModified\n-  #756 = Utf8               getFileSystem\n-  #757 = Utf8               ()Ljava/nio/file/FileSystem;\n-  #758 = Utf8               java/nio/file/FileSystem\n-  #759 = Utf8               supportedFileAttributeViews\n-  #760 = Utf8               ()Ljava/util/Set;\n-  #761 = Utf8               contains\n-  #762 = Utf8               java/nio/file/Files\n-  #763 = Utf8               readAttributes\n-  #764 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #765 = Utf8               lastModifiedTime\n-  #766 = Utf8               ()Ljava/nio/file/attribute/FileTime;\n-  #767 = Utf8               owner\n-  #768 = Utf8               ()Ljava/nio/file/attribute/UserPrincipal;\n-  #769 = Utf8               java/nio/file/attribute/UserPrincipal\n-  #770 = Utf8               group\n-  #771 = Utf8               ()Ljava/nio/file/attribute/GroupPrincipal;\n-  #772 = Utf8               java/nio/file/attribute/GroupPrincipal\n-  #773 = Utf8               getAttribute\n-  #774 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n-  #775 = Utf8               longValue\n-  #776 = Utf8               getOwner\n-  #777 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n-  #778 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #779 = Utf8               charAt\n-  #780 = Utf8               (I)C\n-  #781 = Methodref          #910.#911     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #782 = Utf8               \\u0001/\n-  #783 = Utf8               makeConcatWithConstants\n-  #784 = Utf8               (Ljava/nio/file/Path;)J\n-  #785 = Utf8               getClass\n-  #786 = Utf8               ()Ljava/lang/Class;\n-  #787 = Utf8               startsWith\n-  #788 = Utf8               getTime\n-  #789 = Utf8               java/util/concurrent/TimeUnit\n-  #790 = Utf8               SECONDS\n-  #791 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #792 = Utf8               java/nio/file/attribute/FileTime\n-  #793 = Utf8               to\n-  #794 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n-  #795 = Utf8               toFile\n-  #796 = Utf8               isEmpty\n-  #797 = Utf8               java/util/Collections\n-  #798 = Utf8               emptyList\n-  #799 = Utf8               stream\n-  #800 = Utf8               ()Ljava/util/stream/Stream;\n-  #801 = Methodref          #912.#913     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #802 = Methodref          #21.#914      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  #803 = Utf8               test\n-  #804 = Utf8               ()Ljava/util/function/Predicate;\n-  #805 = Utf8               java/util/stream/Stream\n-  #806 = Utf8               filter\n-  #807 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #808 = Utf8               (Ljava/lang/Object;)J\n-  #809 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n-  #810 = Utf8               applyAsLong\n-  #811 = Utf8               ()Ljava/util/function/ToLongFunction;\n-  #812 = Utf8               java/util/Comparator\n-  #813 = Utf8               comparingLong\n-  #814 = Utf8               (Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n-  #815 = Utf8               sorted\n-  #816 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #817 = Utf8               java/util/stream/Collectors\n-  #818 = Utf8               toList\n-  #819 = Utf8               ()Ljava/util/stream/Collector;\n-  #820 = Utf8               collect\n-  #821 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #822 = Utf8               get\n-  #823 = Utf8               (I)Ljava/lang/Object;\n-  #824 = Utf8               getOffset\n-  #825 = Utf8               getNumbytes\n-  #826 = Utf8               Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n-  #827 = Utf8               Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n-  #828 = Utf8               Size is out of range: \\u0001\n-  #829 = Utf8               (J)Ljava/lang/String;\n-  #830 = Utf8               Major device number is out of range: \\u0001\n-  #831 = Utf8               (I)Ljava/lang/String;\n-  #832 = Utf8               Minor device number is out of range: \\u0001\n-  #833 = Utf8               isRegularFile\n-  #834 = Utf8               unmodifiableMap\n-  #835 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n-  #836 = Utf8               clear\n-  #837 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #838 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #839 = Utf8               entrySet\n-  #840 = Utf8               iterator\n-  #841 = Utf8               ()Ljava/util/Iterator;\n-  #842 = Utf8               hasNext\n-  #843 = Utf8               next\n-  #844 = Utf8               ()Ljava/lang/Object;\n-  #845 = Utf8               getKey\n-  #846 = Utf8               getValue\n-  #847 = Utf8               java/lang/Long\n-  #848 = Utf8               parseLong\n-  #849 = Utf8               (Ljava/lang/String;)J\n-  #850 = Utf8               java/lang/Double\n-  #851 = Utf8               parseDouble\n-  #852 = Utf8               (Ljava/lang/String;)D\n-  #853 = Utf8               java/lang/Integer\n-  #854 = Utf8               parseInt\n-  #855 = Utf8               (Ljava/lang/String;)I\n-  #856 = Utf8               put\n-  #857 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #858 = Utf8               newDirectoryStream\n-  #859 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #860 = Utf8               add\n-  #861 = Utf8               close\n-  #862 = Utf8               addSuppressed\n-  #863 = Utf8               (Ljava/lang/Throwable;)V\n-  #864 = Utf8               toArray\n-  #865 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #866 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #867 = Utf8               DEFAULT_ENCODING\n-  #868 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #869 = Utf8               FALLBACK_ENCODING\n-  #870 = Utf8               formatNameBytes\n-  #871 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #872 = Utf8               (Ljava/lang/String;[BII)I\n-  #873 = Utf8               computeCheckSum\n-  #874 = Utf8               ([B)J\n-  #875 = Utf8               formatCheckSumOctalBytes\n-  #876 = Utf8               (J[BII)I\n-  #877 = Utf8               formatLongOctalBytes\n-  #878 = Utf8               formatLongOctalOrBinaryBytes\n-  #879 = Utf8               parseName\n-  #880 = Utf8               ([BII)Ljava/lang/String;\n-  #881 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #882 = Utf8               ([BII)J\n-  #883 = Utf8               verifyCheckSum\n-  #884 = Utf8               ([B)Z\n-  #885 = Utf8               readSparseStructs\n-  #886 = Utf8               ([BII)Ljava/util/List;\n-  #887 = Utf8               (Ljava/util/Collection;)V\n-  #888 = Utf8               parseBoolean\n-  #889 = Utf8               ([BI)Z\n-  #890 = Utf8               parseOctal\n-  #891 = Utf8               \\u0001/\\u0001\n-  #892 = Utf8               java/util/Locale\n-  #893 = Utf8               ENGLISH\n-  #894 = Utf8               Ljava/util/Locale;\n-  #895 = Utf8               toLowerCase\n-  #896 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #897 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #898 = Utf8               indexOf\n-  #899 = Utf8               (I)I\n-  #900 = Utf8               separatorChar\n-  #901 = Utf8               C\n-  #902 = Utf8               replace\n-  #903 = Utf8               (CC)Ljava/lang/String;\n-  #904 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #905 = Utf8               matchAsciiBuffer\n-  #906 = Utf8               (Ljava/lang/String;[BII)Z\n-  #907 = Utf8               containsKey\n-  #908 = Utf8               Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n-  #909 = Utf8               Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n-  #910 = Class              #915          // java/lang/invoke/StringConcatFactory\n-  #911 = NameAndType        #783:#918     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #912 = Class              #919          // java/lang/invoke/LambdaMetafactory\n-  #913 = NameAndType        #920:#921     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #914 = NameAndType        #453:#454     // lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  #915 = Utf8               java/lang/invoke/StringConcatFactory\n-  #916 = Class              #923          // java/lang/invoke/MethodHandles$Lookup\n-  #917 = Utf8               Lookup\n-  #918 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #919 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #920 = Utf8               metafactory\n-  #921 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #922 = Class              #924          // java/lang/invoke/MethodHandles\n-  #923 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #924 = Utf8               java/lang/invoke/MethodHandles\n+  #699 = Methodref          #153.#499     // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #700 = Methodref          #651.#701     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+  #701 = NameAndType        #702:#703     // parseName:([BII)Ljava/lang/String;\n+  #702 = Utf8               parseName\n+  #703 = Utf8               ([BII)Ljava/lang/String;\n+  #704 = Methodref          #651.#705     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #705 = NameAndType        #702:#706     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #706 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #707 = Methodref          #10.#708      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseOctalOrBinary:([BIIZ)J\n+  #708 = NameAndType        #709:#710     // parseOctalOrBinary:([BIIZ)J\n+  #709 = Utf8               parseOctalOrBinary\n+  #710 = Utf8               ([BIIZ)J\n+  #711 = Methodref          #651.#712     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+  #712 = NameAndType        #709:#713     // parseOctalOrBinary:([BII)J\n+  #713 = Utf8               ([BII)J\n+  #714 = String             #715          // broken archive, entry with negative size\n+  #715 = Utf8               broken archive, entry with negative size\n+  #716 = Methodref          #651.#717     // org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n+  #717 = NameAndType        #718:#719     // verifyCheckSum:([B)Z\n+  #718 = Utf8               verifyCheckSum\n+  #719 = Utf8               ([B)Z\n+  #720 = Methodref          #10.#721      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.evaluateType:([B)I\n+  #721 = NameAndType        #722:#723     // evaluateType:([B)I\n+  #722 = Utf8               evaluateType\n+  #723 = Utf8               ([B)I\n+  #724 = Methodref          #651.#725     // org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n+  #725 = NameAndType        #726:#727     // readSparseStructs:([BII)Ljava/util/List;\n+  #726 = Utf8               readSparseStructs\n+  #727 = Utf8               ([BII)Ljava/util/List;\n+  #728 = Methodref          #620.#729     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #729 = NameAndType        #5:#730       // \"<init>\":(Ljava/util/Collection;)V\n+  #730 = Utf8               (Ljava/util/Collection;)V\n+  #731 = Methodref          #651.#732     // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+  #732 = NameAndType        #733:#734     // parseBoolean:([BI)Z\n+  #733 = Utf8               parseBoolean\n+  #734 = Utf8               ([BI)Z\n+  #735 = Methodref          #651.#736     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n+  #736 = NameAndType        #737:#713     // parseOctal:([BII)J\n+  #737 = Utf8               parseOctal\n+  #738 = Methodref          #57.#353      // java/lang/String.isEmpty:()Z\n+  #739 = InvokeDynamic      #8:#740       // #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #740 = NameAndType        #263:#55      // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #741 = String             #742          // os.name\n+  #742 = Utf8               os.name\n+  #743 = Methodref          #51.#744      // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #744 = NameAndType        #54:#264      // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #745 = Fieldref           #746.#747     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+  #746 = Class              #748          // java/util/Locale\n+  #747 = NameAndType        #749:#750     // ENGLISH:Ljava/util/Locale;\n+  #748 = Utf8               java/util/Locale\n+  #749 = Utf8               ENGLISH\n+  #750 = Utf8               Ljava/util/Locale;\n+  #751 = Methodref          #57.#752      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #752 = NameAndType        #753:#754     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #753 = Utf8               toLowerCase\n+  #754 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #755 = String             #756          // windows\n+  #756 = Utf8               windows\n+  #757 = Methodref          #57.#758      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #758 = NameAndType        #64:#437      // substring:(I)Ljava/lang/String;\n+  #759 = String             #760          // netware\n+  #760 = Utf8               netware\n+  #761 = Methodref          #57.#762      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #762 = NameAndType        #187:#763     // contains:(Ljava/lang/CharSequence;)Z\n+  #763 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #764 = Methodref          #57.#765      // java/lang/String.indexOf:(I)I\n+  #765 = NameAndType        #766:#767     // indexOf:(I)I\n+  #766 = Utf8               indexOf\n+  #767 = Utf8               (I)I\n+  #768 = Fieldref           #128.#769     // java/io/File.separatorChar:C\n+  #769 = NameAndType        #770:#771     // separatorChar:C\n+  #770 = Utf8               separatorChar\n+  #771 = Utf8               C\n+  #772 = Methodref          #57.#773      // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #773 = NameAndType        #774:#775     // replace:(CC)Ljava/lang/String;\n+  #774 = Utf8               replace\n+  #775 = Utf8               (CC)Ljava/lang/String;\n+  #776 = Methodref          #777.#778     // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+  #777 = Class              #779          // org/apache/commons/compress/utils/ArchiveUtils\n+  #778 = NameAndType        #780:#781     // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+  #779 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #780 = Utf8               matchAsciiBuffer\n+  #781 = Utf8               (Ljava/lang/String;[BII)Z\n+  #782 = String             #783          // tar\\u0000\n+  #783 = Utf8               tar\\u0000\n+  #784 = String             #785          // GNU.sparse.name\n+  #785 = Utf8               GNU.sparse.name\n+  #786 = InterfaceMethodref #488.#787     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+  #787 = NameAndType        #788:#188     // containsKey:(Ljava/lang/Object;)Z\n+  #788 = Utf8               containsKey\n+  #789 = Class              #790          // java/lang/NumberFormatException\n+  #790 = Utf8               java/lang/NumberFormatException\n+  #791 = InvokeDynamic      #9:#262       // #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #792 = String             #793          // SCHILY.realsize\n+  #793 = Utf8               SCHILY.realsize\n+  #794 = InvokeDynamic      #10:#262      // #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #795 = Class              #796          // org/apache/commons/compress/archivers/ArchiveEntry\n+  #796 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #797 = Utf8               UNKNOWN\n+  #798 = Utf8               ConstantValue\n+  #799 = Utf8               Signature\n+  #800 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #801 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+  #802 = Utf8               MAX_NAMELEN\n+  #803 = Integer            31\n+  #804 = Utf8               DEFAULT_DIR_MODE\n+  #805 = Integer            16877\n+  #806 = Utf8               DEFAULT_FILE_MODE\n+  #807 = Utf8               MILLIS_PER_SECOND\n+  #808 = Integer            1000\n+  #809 = Utf8               Code\n+  #810 = Utf8               LineNumberTable\n+  #811 = Utf8               StackMapTable\n+  #812 = Utf8               (Ljava/lang/String;B)V\n+  #813 = Utf8               (Ljava/io/File;)V\n+  #814 = Utf8               Exceptions\n+  #815 = Class              #78           // \"[Ljava/nio/file/LinkOption;\"\n+  #816 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZJ)V\n+  #817 = Utf8               isDescendent\n+  #818 = Utf8               setMode\n+  #819 = Utf8               getLinkName\n+  #820 = Utf8               getUserId\n+  #821 = Utf8               Deprecated\n+  #822 = Utf8               RuntimeVisibleAnnotations\n+  #823 = Utf8               Ljava/lang/Deprecated;\n+  #824 = Utf8               getLongUserId\n+  #825 = Utf8               getGroupId\n+  #826 = Utf8               getLongGroupId\n+  #827 = Utf8               getUserName\n+  #828 = Utf8               getGroupName\n+  #829 = Utf8               setIds\n+  #830 = Utf8               (II)V\n+  #831 = Utf8               setNames\n+  #832 = Utf8               (Ljava/util/Date;)V\n+  #833 = Utf8               getLastModifiedDate\n+  #834 = Utf8               isCheckSumOK\n+  #835 = Utf8               getFile\n+  #836 = Utf8               getMode\n+  #837 = Utf8               setSparseHeaders\n+  #838 = Utf8               (Ljava/util/List;)V\n+  #839 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;)V\n+  #840 = Utf8               getSparseHeaders\n+  #841 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #842 = Utf8               getOrderedSparseHeaders\n+  #843 = Utf8               isPaxGNU1XSparse\n+  #844 = Utf8               getDevMajor\n+  #845 = Utf8               getDevMinor\n+  #846 = Utf8               isGNULongLinkEntry\n+  #847 = Utf8               isGNULongNameEntry\n+  #848 = Utf8               isFile\n+  #849 = Utf8               isSymbolicLink\n+  #850 = Utf8               isLink\n+  #851 = Utf8               isCharacterDevice\n+  #852 = Utf8               isBlockDevice\n+  #853 = Utf8               isFIFO\n+  #854 = Utf8               getDataOffset\n+  #855 = Utf8               isStreamContiguous\n+  #856 = Utf8               getExtraPaxHeaders\n+  #857 = Utf8               ()Ljava/util/Map;\n+  #858 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+  #859 = Utf8               clearExtraPaxHeaders\n+  #860 = Utf8               addPaxHeader\n+  #861 = Utf8               getExtraPaxHeader\n+  #862 = Utf8               updateEntryFromPaxHeaders\n+  #863 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+  #864 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+  #865 = Utf8               getDirectoryEntries\n+  #866 = Utf8               ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #867 = Class              #868          // \"[B\"\n+  #868 = Utf8               [B\n+  #869 = Class              #870          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #870 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #871 = Utf8               lambda$getOrderedSparseHeaders$0\n+  #872 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  #873 = Utf8               <clinit>\n+  #874 = Utf8               SourceFile\n+  #875 = Utf8               TarArchiveEntry.java\n+  #876 = Utf8               BootstrapMethods\n+  #877 = MethodHandle       6:#878        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #878 = Methodref          #879.#880     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #879 = Class              #881          // java/lang/invoke/StringConcatFactory\n+  #880 = NameAndType        #263:#882     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #881 = Utf8               java/lang/invoke/StringConcatFactory\n+  #882 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #883 = String             #884          // \\u0001/\n+  #884 = Utf8               \\u0001/\n+  #885 = MethodHandle       6:#886        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #886 = Methodref          #887.#888     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #887 = Class              #889          // java/lang/invoke/LambdaMetafactory\n+  #888 = NameAndType        #890:#891     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #889 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #890 = Utf8               metafactory\n+  #891 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #892 = MethodType         #188          //  (Ljava/lang/Object;)Z\n+  #893 = MethodHandle       6:#894        // REF_invokeStatic org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  #894 = Methodref          #10.#895      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  #895 = NameAndType        #871:#872     // lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  #896 = MethodType         #872          //  (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  #897 = MethodType         #898          //  (Ljava/lang/Object;)J\n+  #898 = Utf8               (Ljava/lang/Object;)J\n+  #899 = MethodHandle       5:#408        // REF_invokeVirtual org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+  #900 = MethodType         #901          //  (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n+  #901 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n+  #902 = String             #903          // Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n+  #903 = Utf8               Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n+  #904 = String             #905          // Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n+  #905 = Utf8               Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n+  #906 = String             #907          // Size is out of range: \\u0001\n+  #907 = Utf8               Size is out of range: \\u0001\n+  #908 = String             #909          // Major device number is out of range: \\u0001\n+  #909 = Utf8               Major device number is out of range: \\u0001\n+  #910 = String             #911          // Minor device number is out of range: \\u0001\n+  #911 = Utf8               Minor device number is out of range: \\u0001\n+  #912 = String             #913          // \\u0001/\\u0001\n+  #913 = Utf8               \\u0001/\\u0001\n+  #914 = String             #915          // Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n+  #915 = Utf8               Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n+  #916 = String             #917          // Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n+  #917 = Utf8               Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n+  #918 = Utf8               InnerClasses\n+  #919 = Utf8               Entry\n+  #920 = Class              #921          // java/lang/invoke/MethodHandles$Lookup\n+  #921 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #922 = Class              #923          // java/lang/invoke/MethodHandles\n+  #923 = Utf8               java/lang/invoke/MethodHandles\n+  #924 = Utf8               Lookup\n {\n   private static final org.apache.commons.compress.archivers.tar.TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRY_ARRAY;\n     descriptor: [Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   public static final long UNKNOWN = -1l;\n     descriptor: J\n@@ -1002,15 +1002,15 @@\n   private int devMinor;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> sparseHeaders;\n     descriptor: Ljava/util/List;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #293                         // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #800                         // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n \n   private boolean isExtended;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private long realSize;\n     descriptor: J\n@@ -1035,15 +1035,15 @@\n   private final java.nio.file.LinkOption[] linkOptions;\n     descriptor: [Ljava/nio/file/LinkOption;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.Map<java.lang.String, java.lang.String> extraPaxHeaders;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #305                         // Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+    Signature: #801                         // Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n \n   public static final int MAX_NAMELEN = 31;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 31\n \n   public static final int DEFAULT_DIR_MODE = 16877;\n@@ -1069,61 +1069,61 @@\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: ldc           #2                  // String\n-         7: putfield      #3                  // Field name:Ljava/lang/String;\n+         5: ldc           #7                  // String\n+         7: putfield      #9                  // Field name:Ljava/lang/String;\n         10: aload_0\n-        11: ldc           #2                  // String\n-        13: putfield      #4                  // Field linkName:Ljava/lang/String;\n+        11: ldc           #7                  // String\n+        13: putfield      #15                 // Field linkName:Ljava/lang/String;\n         16: aload_0\n-        17: ldc           #6                  // String ustar\\u0000\n-        19: putfield      #7                  // Field magic:Ljava/lang/String;\n+        17: ldc           #20                 // String ustar\\u0000\n+        19: putfield      #22                 // Field magic:Ljava/lang/String;\n         22: aload_0\n-        23: ldc           #8                  // String 00\n-        25: putfield      #9                  // Field version:Ljava/lang/String;\n+        23: ldc           #25                 // String 00\n+        25: putfield      #27                 // Field version:Ljava/lang/String;\n         28: aload_0\n-        29: ldc           #2                  // String\n-        31: putfield      #10                 // Field groupName:Ljava/lang/String;\n+        29: ldc           #7                  // String\n+        31: putfield      #30                 // Field groupName:Ljava/lang/String;\n         34: aload_0\n-        35: new           #11                 // class java/util/HashMap\n+        35: new           #33                 // class java/util/HashMap\n         38: dup\n-        39: invokespecial #12                 // Method java/util/HashMap.\"<init>\":()V\n-        42: putfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n+        39: invokespecial #35                 // Method java/util/HashMap.\"<init>\":()V\n+        42: putfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n         45: aload_0\n-        46: ldc2_w        #15                 // long -1l\n-        49: putfield      #17                 // Field dataOffset:J\n-        52: ldc           #18                 // String user.name\n-        54: ldc           #2                  // String\n-        56: invokestatic  #19                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        46: ldc2_w        #42                 // long -1l\n+        49: putfield      #44                 // Field dataOffset:J\n+        52: ldc           #48                 // String user.name\n+        54: ldc           #7                  // String\n+        56: invokestatic  #50                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n         59: astore_2\n         60: aload_2\n-        61: invokevirtual #20                 // Method java/lang/String.length:()I\n+        61: invokevirtual #56                 // Method java/lang/String.length:()I\n         64: bipush        31\n         66: if_icmple     77\n         69: aload_2\n         70: iconst_0\n         71: bipush        31\n-        73: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        73: invokevirtual #62                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         76: astore_2\n         77: aload_0\n         78: aload_2\n-        79: putfield      #23                 // Field userName:Ljava/lang/String;\n+        79: putfield      #66                 // Field userName:Ljava/lang/String;\n         82: aload_0\n         83: aconst_null\n-        84: putfield      #24                 // Field file:Ljava/nio/file/Path;\n+        84: putfield      #69                 // Field file:Ljava/nio/file/Path;\n         87: aload_0\n-        88: getstatic     #25                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n-        91: putfield      #26                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n+        88: getstatic     #73                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n+        91: putfield      #79                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n         94: aload_0\n         95: iload_1\n-        96: putfield      #27                 // Field preserveAbsolutePath:Z\n+        96: putfield      #82                 // Field preserveAbsolutePath:Z\n         99: return\n       LineNumberTable:\n         line 266: 0\n         line 175: 4\n         line 202: 10\n         line 205: 16\n         line 207: 22\n@@ -1148,61 +1148,61 @@\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #28                 // Method \"<init>\":(Ljava/lang/String;Z)V\n+         3: invokespecial #86                 // Method \"<init>\":(Ljava/lang/String;Z)V\n          6: return\n       LineNumberTable:\n         line 290: 0\n         line 291: 6\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokespecial #29                 // Method \"<init>\":(Z)V\n+         2: invokespecial #89                 // Method \"<init>\":(Z)V\n          5: aload_1\n          6: iload_2\n-         7: invokestatic  #30                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+         7: invokestatic  #92                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n         10: astore_1\n         11: aload_1\n-        12: ldc           #31                 // String /\n-        14: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        12: ldc           #96                 // String /\n+        14: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         17: istore_3\n         18: aload_0\n         19: aload_1\n-        20: putfield      #3                  // Field name:Ljava/lang/String;\n+        20: putfield      #9                  // Field name:Ljava/lang/String;\n         23: aload_0\n         24: iload_3\n         25: ifeq          34\n         28: sipush        16877\n         31: goto          36\n-        34: ldc           #33                 // int 33188\n-        36: putfield      #34                 // Field mode:I\n+        34: ldc           #102                // int 33188\n+        36: putfield      #103                // Field mode:I\n         39: aload_0\n         40: iload_3\n         41: ifeq          49\n         44: bipush        53\n         46: goto          51\n         49: bipush        48\n-        51: putfield      #35                 // Field linkFlag:B\n+        51: putfield      #107                // Field linkFlag:B\n         54: aload_0\n-        55: invokestatic  #36                 // Method java/lang/System.currentTimeMillis:()J\n-        58: ldc2_w        #37                 // long 1000l\n+        55: invokestatic  #111                // Method java/lang/System.currentTimeMillis:()J\n+        58: ldc2_w        #115                // long 1000l\n         61: ldiv\n-        62: putfield      #39                 // Field modTime:J\n+        62: putfield      #117                // Field modTime:J\n         65: aload_0\n-        66: ldc           #2                  // String\n-        68: putfield      #23                 // Field userName:Ljava/lang/String;\n+        66: ldc           #7                  // String\n+        68: putfield      #66                 // Field userName:Ljava/lang/String;\n         71: return\n       LineNumberTable:\n         line 309: 0\n         line 311: 5\n         line 312: 11\n         line 314: 18\n         line 315: 23\n@@ -1231,41 +1231,41 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;BZ)V\n+         4: invokespecial #120                // Method \"<init>\":(Ljava/lang/String;BZ)V\n          7: return\n       LineNumberTable:\n         line 333: 0\n         line 334: 7\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.lang.String, byte, boolean);\n     descriptor: (Ljava/lang/String;BZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_3\n-         3: invokespecial #28                 // Method \"<init>\":(Ljava/lang/String;Z)V\n+         3: invokespecial #86                 // Method \"<init>\":(Ljava/lang/String;Z)V\n          6: aload_0\n          7: iload_2\n-         8: putfield      #35                 // Field linkFlag:B\n+         8: putfield      #107                // Field linkFlag:B\n         11: iload_2\n         12: bipush        76\n         14: if_icmpne     29\n         17: aload_0\n-        18: ldc           #41                 // String ustar\n-        20: putfield      #7                  // Field magic:Ljava/lang/String;\n+        18: ldc           #123                // String ustar\n+        20: putfield      #22                 // Field magic:Ljava/lang/String;\n         23: aload_0\n-        24: ldc           #42                 // String  \\u0000\n-        26: putfield      #9                  // Field version:Ljava/lang/String;\n+        24: ldc           #125                // String  \\u0000\n+        26: putfield      #27                 // Field version:Ljava/lang/String;\n         29: return\n       LineNumberTable:\n         line 352: 0\n         line 353: 6\n         line 354: 11\n         line 355: 17\n         line 356: 23\n@@ -1280,33 +1280,33 @@\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aload_1\n-         3: invokevirtual #43                 // Method java/io/File.getPath:()Ljava/lang/String;\n-         6: invokespecial #44                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+         3: invokevirtual #127                // Method java/io/File.getPath:()Ljava/lang/String;\n+         6: invokespecial #133                // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n          9: return\n       LineNumberTable:\n         line 379: 0\n         line 380: 9\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aload_1\n-         3: invokeinterface #45,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+         3: invokeinterface #136,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n          8: iconst_0\n-         9: anewarray     #46                 // class java/nio/file/LinkOption\n-        12: invokespecial #47                 // Method \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+         9: anewarray     #141                // class java/nio/file/LinkOption\n+        12: invokespecial #143                // Method \"<init>\":(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n         15: return\n       LineNumberTable:\n         line 398: 0\n         line 399: 15\n     Exceptions:\n       throws java.io.IOException\n \n@@ -1314,83 +1314,83 @@\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: ldc           #2                  // String\n-         7: putfield      #3                  // Field name:Ljava/lang/String;\n+         5: ldc           #7                  // String\n+         7: putfield      #9                  // Field name:Ljava/lang/String;\n         10: aload_0\n-        11: ldc           #2                  // String\n-        13: putfield      #4                  // Field linkName:Ljava/lang/String;\n+        11: ldc           #7                  // String\n+        13: putfield      #15                 // Field linkName:Ljava/lang/String;\n         16: aload_0\n-        17: ldc           #6                  // String ustar\\u0000\n-        19: putfield      #7                  // Field magic:Ljava/lang/String;\n+        17: ldc           #20                 // String ustar\\u0000\n+        19: putfield      #22                 // Field magic:Ljava/lang/String;\n         22: aload_0\n-        23: ldc           #8                  // String 00\n-        25: putfield      #9                  // Field version:Ljava/lang/String;\n+        23: ldc           #25                 // String 00\n+        25: putfield      #27                 // Field version:Ljava/lang/String;\n         28: aload_0\n-        29: ldc           #2                  // String\n-        31: putfield      #10                 // Field groupName:Ljava/lang/String;\n+        29: ldc           #7                  // String\n+        31: putfield      #30                 // Field groupName:Ljava/lang/String;\n         34: aload_0\n-        35: new           #11                 // class java/util/HashMap\n+        35: new           #33                 // class java/util/HashMap\n         38: dup\n-        39: invokespecial #12                 // Method java/util/HashMap.\"<init>\":()V\n-        42: putfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n+        39: invokespecial #35                 // Method java/util/HashMap.\"<init>\":()V\n+        42: putfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n         45: aload_0\n-        46: ldc2_w        #15                 // long -1l\n-        49: putfield      #17                 // Field dataOffset:J\n+        46: ldc2_w        #42                 // long -1l\n+        49: putfield      #44                 // Field dataOffset:J\n         52: aload_2\n         53: iconst_0\n-        54: invokestatic  #30                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        54: invokestatic  #92                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n         57: astore_3\n         58: aload_0\n         59: aload_1\n-        60: invokevirtual #48                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n-        63: putfield      #24                 // Field file:Ljava/nio/file/Path;\n+        60: invokevirtual #146                // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        63: putfield      #69                 // Field file:Ljava/nio/file/Path;\n         66: aload_0\n-        67: getstatic     #25                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n-        70: putfield      #26                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n+        67: getstatic     #73                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n+        70: putfield      #79                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n         73: aload_0\n         74: aload_0\n-        75: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+        75: getfield      #69                 // Field file:Ljava/nio/file/Path;\n         78: aload_3\n         79: iconst_0\n-        80: anewarray     #46                 // class java/nio/file/LinkOption\n-        83: invokespecial #49                 // Method readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+        80: anewarray     #141                // class java/nio/file/LinkOption\n+        83: invokespecial #150                // Method readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n         86: goto          106\n         89: astore        4\n         91: aload_1\n-        92: invokevirtual #51                 // Method java/io/File.isDirectory:()Z\n+        92: invokevirtual #155                // Method java/io/File.isDirectory:()Z\n         95: ifne          106\n         98: aload_0\n         99: aload_1\n-       100: invokevirtual #52                 // Method java/io/File.length:()J\n-       103: putfield      #53                 // Field size:J\n+       100: invokevirtual #159                // Method java/io/File.length:()J\n+       103: putfield      #161                // Field size:J\n        106: aload_0\n-       107: ldc           #2                  // String\n-       109: putfield      #23                 // Field userName:Ljava/lang/String;\n+       107: ldc           #7                  // String\n+       109: putfield      #66                 // Field userName:Ljava/lang/String;\n        112: aload_0\n        113: aload_0\n-       114: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+       114: getfield      #69                 // Field file:Ljava/nio/file/Path;\n        117: iconst_0\n-       118: anewarray     #46                 // class java/nio/file/LinkOption\n-       121: invokespecial #54                 // Method readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n+       118: anewarray     #141                // class java/nio/file/LinkOption\n+       121: invokespecial #164                // Method readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n        124: goto          141\n        127: astore        4\n        129: aload_0\n        130: aload_1\n-       131: invokevirtual #55                 // Method java/io/File.lastModified:()J\n-       134: ldc2_w        #37                 // long 1000l\n+       131: invokevirtual #168                // Method java/io/File.lastModified:()J\n+       134: ldc2_w        #115                // long 1000l\n        137: ldiv\n-       138: putfield      #39                 // Field modTime:J\n+       138: putfield      #117                // Field modTime:J\n        141: aload_0\n        142: iconst_0\n-       143: putfield      #27                 // Field preserveAbsolutePath:Z\n+       143: putfield      #82                 // Field preserveAbsolutePath:Z\n        146: return\n       Exception table:\n          from    to  target type\n             73    86    89   Class java/io/IOException\n            112   124   127   Class java/io/IOException\n       LineNumberTable:\n         line 419: 0\n@@ -1430,66 +1430,66 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: ldc           #2                  // String\n-         7: putfield      #3                  // Field name:Ljava/lang/String;\n+         5: ldc           #7                  // String\n+         7: putfield      #9                  // Field name:Ljava/lang/String;\n         10: aload_0\n-        11: ldc           #2                  // String\n-        13: putfield      #4                  // Field linkName:Ljava/lang/String;\n+        11: ldc           #7                  // String\n+        13: putfield      #15                 // Field linkName:Ljava/lang/String;\n         16: aload_0\n-        17: ldc           #6                  // String ustar\\u0000\n-        19: putfield      #7                  // Field magic:Ljava/lang/String;\n+        17: ldc           #20                 // String ustar\\u0000\n+        19: putfield      #22                 // Field magic:Ljava/lang/String;\n         22: aload_0\n-        23: ldc           #8                  // String 00\n-        25: putfield      #9                  // Field version:Ljava/lang/String;\n+        23: ldc           #25                 // String 00\n+        25: putfield      #27                 // Field version:Ljava/lang/String;\n         28: aload_0\n-        29: ldc           #2                  // String\n-        31: putfield      #10                 // Field groupName:Ljava/lang/String;\n+        29: ldc           #7                  // String\n+        31: putfield      #30                 // Field groupName:Ljava/lang/String;\n         34: aload_0\n-        35: new           #11                 // class java/util/HashMap\n+        35: new           #33                 // class java/util/HashMap\n         38: dup\n-        39: invokespecial #12                 // Method java/util/HashMap.\"<init>\":()V\n-        42: putfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n+        39: invokespecial #35                 // Method java/util/HashMap.\"<init>\":()V\n+        42: putfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n         45: aload_0\n-        46: ldc2_w        #15                 // long -1l\n-        49: putfield      #17                 // Field dataOffset:J\n+        46: ldc2_w        #42                 // long -1l\n+        49: putfield      #44                 // Field dataOffset:J\n         52: aload_2\n         53: iconst_0\n-        54: invokestatic  #30                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        54: invokestatic  #92                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n         57: astore        4\n         59: aload_0\n         60: aload_1\n-        61: putfield      #24                 // Field file:Ljava/nio/file/Path;\n+        61: putfield      #69                 // Field file:Ljava/nio/file/Path;\n         64: aload_0\n         65: aload_3\n         66: ifnonnull     75\n-        69: getstatic     #25                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n+        69: getstatic     #73                 // Field org/apache/commons/compress/utils/IOUtils.EMPTY_LINK_OPTIONS:[Ljava/nio/file/LinkOption;\n         72: goto          76\n         75: aload_3\n-        76: putfield      #26                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n+        76: putfield      #79                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n         79: aload_0\n         80: aload_1\n         81: aload         4\n         83: aload_3\n-        84: invokespecial #49                 // Method readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+        84: invokespecial #150                // Method readFileMode:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n         87: aload_0\n-        88: ldc           #2                  // String\n-        90: putfield      #23                 // Field userName:Ljava/lang/String;\n+        88: ldc           #7                  // String\n+        90: putfield      #66                 // Field userName:Ljava/lang/String;\n         93: aload_0\n         94: aload_1\n         95: iconst_0\n-        96: anewarray     #46                 // class java/nio/file/LinkOption\n-        99: invokespecial #54                 // Method readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n+        96: anewarray     #141                // class java/nio/file/LinkOption\n+        99: invokespecial #164                // Method readOsSpecificProperties:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n        102: aload_0\n        103: iconst_0\n-       104: putfield      #27                 // Field preserveAbsolutePath:Z\n+       104: putfield      #82                 // Field preserveAbsolutePath:Z\n        107: return\n       LineNumberTable:\n         line 461: 0\n         line 175: 4\n         line 202: 10\n         line 205: 16\n         line 207: 22\n@@ -1518,98 +1518,98 @@\n \n   private void readOsSpecificProperties(java.nio.file.Path, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)V\n     flags: (0x0082) ACC_PRIVATE, ACC_VARARGS\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_1\n-         1: invokeinterface #56,  1           // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;\n-         6: invokevirtual #57                 // Method java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;\n+         1: invokeinterface #171,  1          // InterfaceMethod java/nio/file/Path.getFileSystem:()Ljava/nio/file/FileSystem;\n+         6: invokevirtual #175                // Method java/nio/file/FileSystem.supportedFileAttributeViews:()Ljava/util/Set;\n          9: astore_3\n         10: aload_3\n-        11: ldc           #58                 // String posix\n-        13: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n+        11: ldc           #181                // String posix\n+        13: invokeinterface #183,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n         18: ifeq          124\n         21: aload_1\n-        22: ldc           #60                 // class java/nio/file/attribute/PosixFileAttributes\n+        22: ldc           #189                // class java/nio/file/attribute/PosixFileAttributes\n         24: aload_2\n-        25: invokestatic  #61                 // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        28: checkcast     #60                 // class java/nio/file/attribute/PosixFileAttributes\n+        25: invokestatic  #191                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        28: checkcast     #189                // class java/nio/file/attribute/PosixFileAttributes\n         31: astore        4\n         33: aload_0\n         34: aload         4\n-        36: invokeinterface #62,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-        41: invokevirtual #63                 // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n+        36: invokeinterface #197,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+        41: invokevirtual #201                // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n         44: aload_0\n         45: aload         4\n-        47: invokeinterface #64,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.owner:()Ljava/nio/file/attribute/UserPrincipal;\n-        52: invokeinterface #65,  1           // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n-        57: putfield      #23                 // Field userName:Ljava/lang/String;\n+        47: invokeinterface #205,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.owner:()Ljava/nio/file/attribute/UserPrincipal;\n+        52: invokeinterface #209,  1          // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n+        57: putfield      #66                 // Field userName:Ljava/lang/String;\n         60: aload_0\n         61: aload         4\n-        63: invokeinterface #66,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.group:()Ljava/nio/file/attribute/GroupPrincipal;\n-        68: invokeinterface #67,  1           // InterfaceMethod java/nio/file/attribute/GroupPrincipal.getName:()Ljava/lang/String;\n-        73: putfield      #10                 // Field groupName:Ljava/lang/String;\n+        63: invokeinterface #214,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.group:()Ljava/nio/file/attribute/GroupPrincipal;\n+        68: invokeinterface #218,  1          // InterfaceMethod java/nio/file/attribute/GroupPrincipal.getName:()Ljava/lang/String;\n+        73: putfield      #30                 // Field groupName:Ljava/lang/String;\n         76: aload_3\n-        77: ldc           #68                 // String unix\n-        79: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n+        77: ldc           #221                // String unix\n+        79: invokeinterface #183,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n         84: ifeq          121\n         87: aload_0\n         88: aload_1\n-        89: ldc           #69                 // String unix:uid\n+        89: ldc           #223                // String unix:uid\n         91: aload_2\n-        92: invokestatic  #70                 // Method java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n-        95: checkcast     #71                 // class java/lang/Number\n-        98: invokevirtual #72                 // Method java/lang/Number.longValue:()J\n-       101: putfield      #73                 // Field userId:J\n+        92: invokestatic  #225                // Method java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n+        95: checkcast     #229                // class java/lang/Number\n+        98: invokevirtual #231                // Method java/lang/Number.longValue:()J\n+       101: putfield      #234                // Field userId:J\n        104: aload_0\n        105: aload_1\n-       106: ldc           #74                 // String unix:gid\n+       106: ldc           #237                // String unix:gid\n        108: aload_2\n-       109: invokestatic  #70                 // Method java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n-       112: checkcast     #71                 // class java/lang/Number\n-       115: invokevirtual #72                 // Method java/lang/Number.longValue:()J\n-       118: putfield      #75                 // Field groupId:J\n+       109: invokestatic  #225                // Method java/nio/file/Files.getAttribute:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/lang/Object;\n+       112: checkcast     #229                // class java/lang/Number\n+       115: invokevirtual #231                // Method java/lang/Number.longValue:()J\n+       118: putfield      #239                // Field groupId:J\n        121: goto          209\n        124: aload_3\n-       125: ldc           #76                 // String dos\n-       127: invokeinterface #59,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n+       125: ldc           #242                // String dos\n+       127: invokeinterface #183,  2          // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z\n        132: ifeq          175\n        135: aload_1\n-       136: ldc           #77                 // class java/nio/file/attribute/DosFileAttributes\n+       136: ldc           #244                // class java/nio/file/attribute/DosFileAttributes\n        138: aload_2\n-       139: invokestatic  #61                 // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-       142: checkcast     #77                 // class java/nio/file/attribute/DosFileAttributes\n+       139: invokestatic  #191                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+       142: checkcast     #244                // class java/nio/file/attribute/DosFileAttributes\n        145: astore        4\n        147: aload_0\n        148: aload         4\n-       150: invokeinterface #78,  1           // InterfaceMethod java/nio/file/attribute/DosFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-       155: invokevirtual #63                 // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n+       150: invokeinterface #246,  1          // InterfaceMethod java/nio/file/attribute/DosFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+       155: invokevirtual #201                // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n        158: aload_0\n        159: aload_1\n        160: aload_2\n-       161: invokestatic  #79                 // Method java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n-       164: invokeinterface #65,  1           // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n-       169: putfield      #23                 // Field userName:Ljava/lang/String;\n+       161: invokestatic  #247                // Method java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n+       164: invokeinterface #209,  1          // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n+       169: putfield      #66                 // Field userName:Ljava/lang/String;\n        172: goto          209\n        175: aload_1\n-       176: ldc           #80                 // class java/nio/file/attribute/BasicFileAttributes\n+       176: ldc           #251                // class java/nio/file/attribute/BasicFileAttributes\n        178: aload_2\n-       179: invokestatic  #61                 // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+       179: invokestatic  #191                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n        182: astore        4\n        184: aload_0\n        185: aload         4\n-       187: invokeinterface #81,  1           // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n-       192: invokevirtual #63                 // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n+       187: invokeinterface #253,  1          // InterfaceMethod java/nio/file/attribute/BasicFileAttributes.lastModifiedTime:()Ljava/nio/file/attribute/FileTime;\n+       192: invokevirtual #201                // Method setModTime:(Ljava/nio/file/attribute/FileTime;)V\n        195: aload_0\n        196: aload_1\n        197: aload_2\n-       198: invokestatic  #79                 // Method java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n-       201: invokeinterface #65,  1           // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n-       206: putfield      #23                 // Field userName:Ljava/lang/String;\n+       198: invokestatic  #247                // Method java/nio/file/Files.getOwner:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/UserPrincipal;\n+       201: invokeinterface #209,  1          // InterfaceMethod java/nio/file/attribute/UserPrincipal.getName:()Ljava/lang/String;\n+       206: putfield      #66                 // Field userName:Ljava/lang/String;\n        209: return\n       LineNumberTable:\n         line 474: 0\n         line 475: 10\n         line 476: 21\n         line 477: 33\n         line 478: 44\n@@ -1639,56 +1639,56 @@\n   private void readFileMode(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n     flags: (0x0082) ACC_PRIVATE, ACC_VARARGS\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_1\n          1: aload_3\n-         2: invokestatic  #82                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #254                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          66\n          8: aload_0\n          9: sipush        16877\n-        12: putfield      #34                 // Field mode:I\n+        12: putfield      #103                // Field mode:I\n         15: aload_0\n         16: bipush        53\n-        18: putfield      #35                 // Field linkFlag:B\n+        18: putfield      #107                // Field linkFlag:B\n         21: aload_2\n-        22: invokevirtual #20                 // Method java/lang/String.length:()I\n+        22: invokevirtual #56                 // Method java/lang/String.length:()I\n         25: istore        4\n         27: iload         4\n         29: ifeq          45\n         32: aload_2\n         33: iload         4\n         35: iconst_1\n         36: isub\n-        37: invokevirtual #83                 // Method java/lang/String.charAt:(I)C\n+        37: invokevirtual #257                // Method java/lang/String.charAt:(I)C\n         40: bipush        47\n         42: if_icmpeq     58\n         45: aload_0\n         46: aload_2\n-        47: invokedynamic #84,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        52: putfield      #3                  // Field name:Ljava/lang/String;\n+        47: invokedynamic #261,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        52: putfield      #9                  // Field name:Ljava/lang/String;\n         55: goto          63\n         58: aload_0\n         59: aload_2\n-        60: putfield      #3                  // Field name:Ljava/lang/String;\n+        60: putfield      #9                  // Field name:Ljava/lang/String;\n         63: goto          91\n         66: aload_0\n-        67: ldc           #33                 // int 33188\n-        69: putfield      #34                 // Field mode:I\n+        67: ldc           #102                // int 33188\n+        69: putfield      #103                // Field mode:I\n         72: aload_0\n         73: bipush        48\n-        75: putfield      #35                 // Field linkFlag:B\n+        75: putfield      #107                // Field linkFlag:B\n         78: aload_0\n         79: aload_2\n-        80: putfield      #3                  // Field name:Ljava/lang/String;\n+        80: putfield      #9                  // Field name:Ljava/lang/String;\n         83: aload_0\n         84: aload_1\n-        85: invokestatic  #85                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-        88: putfield      #53                 // Field size:J\n+        85: invokestatic  #265                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        88: putfield      #161                // Field size:J\n         91: return\n       LineNumberTable:\n         line 496: 0\n         line 497: 8\n         line 498: 15\n         line 500: 21\n         line 501: 27\n@@ -1715,18 +1715,18 @@\n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #29                 // Method \"<init>\":(Z)V\n+         2: invokespecial #89                 // Method \"<init>\":(Z)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #86                 // Method parseTarHeader:([B)V\n+         7: invokevirtual #268                // Method parseTarHeader:([B)V\n         10: return\n       LineNumberTable:\n         line 522: 0\n         line 523: 5\n         line 524: 10\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(byte[], org.apache.commons.compress.archivers.zip.ZipEncoding) throws java.io.IOException;\n@@ -1734,36 +1734,36 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #87                 // Method \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+         4: invokespecial #272                // Method \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n          7: return\n       LineNumberTable:\n         line 538: 0\n         line 539: 7\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry(byte[], org.apache.commons.compress.archivers.zip.ZipEncoding, boolean) throws java.io.IOException;\n     descriptor: ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #29                 // Method \"<init>\":(Z)V\n+         2: invokespecial #89                 // Method \"<init>\":(Z)V\n          5: aload_0\n          6: aload_1\n          7: aload_2\n          8: iconst_0\n          9: iload_3\n-        10: invokespecial #88                 // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+        10: invokespecial #275                // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n         13: return\n       LineNumberTable:\n         line 555: 0\n         line 556: 5\n         line 557: 13\n     Exceptions:\n       throws java.io.IOException\n@@ -1773,18 +1773,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n-         4: invokespecial #87                 // Method \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+         4: invokespecial #272                // Method \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n          7: aload_0\n          8: lload         4\n-        10: invokevirtual #89                 // Method setDataOffset:(J)V\n+        10: invokevirtual #278                // Method setDataOffset:(J)V\n         13: return\n       LineNumberTable:\n         line 572: 0\n         line 573: 7\n         line 574: 13\n     Exceptions:\n       throws java.io.IOException\n@@ -1793,18 +1793,18 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        22\n          4: aload_0\n-         5: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n+         5: invokevirtual #282                // Method getName:()Ljava/lang/String;\n          8: aload_1\n-         9: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-        12: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         9: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+        12: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         15: ifeq          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n         line 584: 0\n@@ -1817,24 +1817,24 @@\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        15\n          4: aload_0\n-         5: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         5: invokevirtual #286                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n          8: aload_1\n-         9: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         9: invokevirtual #286                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         12: if_acmpeq     17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #21                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-        22: invokevirtual #93                 // Method equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+        19: checkcast     #10                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+        22: invokevirtual #290                // Method equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n         25: ireturn\n       LineNumberTable:\n         line 596: 0\n         line 597: 15\n         line 599: 17\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n@@ -1842,564 +1842,564 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-         4: invokevirtual #94                 // Method java/lang/String.hashCode:()I\n+         1: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+         4: invokevirtual #293                // Method java/lang/String.hashCode:()I\n          7: ireturn\n       LineNumberTable:\n         line 609: 0\n \n   public boolean isDescendent(org.apache.commons.compress.archivers.tar.TarArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n+         1: invokevirtual #282                // Method getName:()Ljava/lang/String;\n          4: aload_0\n-         5: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-         8: invokevirtual #95                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+         5: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+         8: invokevirtual #296                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         11: ireturn\n       LineNumberTable:\n         line 621: 0\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field name:Ljava/lang/String;\n+         1: getfield      #9                  // Field name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 633: 0\n \n   public void setName(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aload_0\n-         3: getfield      #27                 // Field preserveAbsolutePath:Z\n-         6: invokestatic  #30                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n-         9: putfield      #3                  // Field name:Ljava/lang/String;\n+         3: getfield      #82                 // Field preserveAbsolutePath:Z\n+         6: invokestatic  #92                 // Method normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+         9: putfield      #9                  // Field name:Ljava/lang/String;\n         12: return\n       LineNumberTable:\n         line 642: 0\n         line 643: 12\n \n   public void setMode(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #34                 // Field mode:I\n+         2: putfield      #103                // Field mode:I\n          5: return\n       LineNumberTable:\n         line 651: 0\n         line 652: 5\n \n   public java.lang.String getLinkName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field linkName:Ljava/lang/String;\n+         1: getfield      #15                 // Field linkName:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 660: 0\n \n   public void setLinkName(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #4                  // Field linkName:Ljava/lang/String;\n+         2: putfield      #15                 // Field linkName:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 671: 0\n         line 672: 5\n \n   public int getUserId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #73                 // Field userId:J\n-         4: ldc2_w        #15                 // long -1l\n+         1: getfield      #234                // Field userId:J\n+         4: ldc2_w        #42                 // long -1l\n          7: land\n          8: l2i\n          9: ireturn\n       LineNumberTable:\n         line 683: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #354()\n+      0: #823()\n         java.lang.Deprecated\n \n   public void setUserId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #96                 // Method setUserId:(J)V\n+         3: invokevirtual #299                // Method setUserId:(J)V\n          6: return\n       LineNumberTable:\n         line 692: 0\n         line 693: 6\n \n   public long getLongUserId();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #73                 // Field userId:J\n+         1: getfield      #234                // Field userId:J\n          4: lreturn\n       LineNumberTable:\n         line 702: 0\n \n   public void setUserId(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #73                 // Field userId:J\n+         2: putfield      #234                // Field userId:J\n          5: return\n       LineNumberTable:\n         line 712: 0\n         line 713: 5\n \n   public int getGroupId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #75                 // Field groupId:J\n-         4: ldc2_w        #15                 // long -1l\n+         1: getfield      #239                // Field groupId:J\n+         4: ldc2_w        #42                 // long -1l\n          7: land\n          8: l2i\n          9: ireturn\n       LineNumberTable:\n         line 724: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #354()\n+      0: #823()\n         java.lang.Deprecated\n \n   public void setGroupId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #97                 // Method setGroupId:(J)V\n+         3: invokevirtual #302                // Method setGroupId:(J)V\n          6: return\n       LineNumberTable:\n         line 733: 0\n         line 734: 6\n \n   public long getLongGroupId();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #75                 // Field groupId:J\n+         1: getfield      #239                // Field groupId:J\n          4: lreturn\n       LineNumberTable:\n         line 743: 0\n \n   public void setGroupId(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #75                 // Field groupId:J\n+         2: putfield      #239                // Field groupId:J\n          5: return\n       LineNumberTable:\n         line 753: 0\n         line 754: 5\n \n   public java.lang.String getUserName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field userName:Ljava/lang/String;\n+         1: getfield      #66                 // Field userName:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 762: 0\n \n   public void setUserName(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #23                 // Field userName:Ljava/lang/String;\n+         2: putfield      #66                 // Field userName:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 771: 0\n         line 772: 5\n \n   public java.lang.String getGroupName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field groupName:Ljava/lang/String;\n+         1: getfield      #30                 // Field groupName:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 780: 0\n \n   public void setGroupName(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #10                 // Field groupName:Ljava/lang/String;\n+         2: putfield      #30                 // Field groupName:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 789: 0\n         line 790: 5\n \n   public void setIds(int, int);\n     descriptor: (II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #98                 // Method setUserId:(I)V\n+         2: invokevirtual #305                // Method setUserId:(I)V\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #99                 // Method setGroupId:(I)V\n+         7: invokevirtual #308                // Method setGroupId:(I)V\n         10: return\n       LineNumberTable:\n         line 799: 0\n         line 800: 5\n         line 801: 10\n \n   public void setNames(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #100                // Method setUserName:(Ljava/lang/String;)V\n+         2: invokevirtual #310                // Method setUserName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #101                // Method setGroupName:(Ljava/lang/String;)V\n+         7: invokevirtual #314                // Method setGroupName:(Ljava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 810: 0\n         line 811: 5\n         line 812: 10\n \n   public void setModTime(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: ldc2_w        #37                 // long 1000l\n+         2: ldc2_w        #115                // long 1000l\n          5: ldiv\n-         6: putfield      #39                 // Field modTime:J\n+         6: putfield      #117                // Field modTime:J\n          9: return\n       LineNumberTable:\n         line 821: 0\n         line 822: 9\n \n   public void setModTime(java.util.Date);\n     descriptor: (Ljava/util/Date;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #102                // Method java/util/Date.getTime:()J\n-         5: ldc2_w        #37                 // long 1000l\n+         2: invokevirtual #317                // Method java/util/Date.getTime:()J\n+         5: ldc2_w        #115                // long 1000l\n          8: ldiv\n-         9: putfield      #39                 // Field modTime:J\n+         9: putfield      #117                // Field modTime:J\n         12: return\n       LineNumberTable:\n         line 830: 0\n         line 831: 12\n \n   public void setModTime(java.nio.file.attribute.FileTime);\n     descriptor: (Ljava/nio/file/attribute/FileTime;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #103                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-         5: invokevirtual #104                // Method java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n-         8: putfield      #39                 // Field modTime:J\n+         2: getstatic     #322                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+         5: invokevirtual #328                // Method java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n+         8: putfield      #117                // Field modTime:J\n         11: return\n       LineNumberTable:\n         line 840: 0\n         line 841: 11\n \n   public java.util.Date getModTime();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: new           #105                // class java/util/Date\n+         0: new           #318                // class java/util/Date\n          3: dup\n          4: aload_0\n-         5: getfield      #39                 // Field modTime:J\n-         8: ldc2_w        #37                 // long 1000l\n+         5: getfield      #117                // Field modTime:J\n+         8: ldc2_w        #115                // long 1000l\n         11: lmul\n-        12: invokespecial #106                // Method java/util/Date.\"<init>\":(J)V\n+        12: invokespecial #334                // Method java/util/Date.\"<init>\":(J)V\n         15: areturn\n       LineNumberTable:\n         line 849: 0\n \n   public java.util.Date getLastModifiedDate();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #107                // Method getModTime:()Ljava/util/Date;\n+         1: invokevirtual #336                // Method getModTime:()Ljava/util/Date;\n          4: areturn\n       LineNumberTable:\n         line 854: 0\n \n   public boolean isCheckSumOK();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #108                // Field checkSumOK:Z\n+         1: getfield      #340                // Field checkSumOK:Z\n          4: ireturn\n       LineNumberTable:\n         line 865: 0\n \n   public java.io.File getFile();\n     descriptor: ()Ljava/io/File;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         1: getfield      #69                 // Field file:Ljava/nio/file/Path;\n          4: ifnonnull     9\n          7: aconst_null\n          8: areturn\n          9: aload_0\n-        10: getfield      #24                 // Field file:Ljava/nio/file/Path;\n-        13: invokeinterface #109,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n+        10: getfield      #69                 // Field file:Ljava/nio/file/Path;\n+        13: invokeinterface #343,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n         18: areturn\n       LineNumberTable:\n         line 877: 0\n         line 878: 7\n         line 880: 9\n       StackMapTable: number_of_entries = 1\n         frame_type = 9 /* same */\n \n   public java.nio.file.Path getPath();\n     descriptor: ()Ljava/nio/file/Path;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         1: getfield      #69                 // Field file:Ljava/nio/file/Path;\n          4: areturn\n       LineNumberTable:\n         line 893: 0\n \n   public int getMode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #34                 // Field mode:I\n+         1: getfield      #103                // Field mode:I\n          4: ireturn\n       LineNumberTable:\n         line 902: 0\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #53                 // Field size:J\n+         1: getfield      #161                // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 915: 0\n \n   public void setSparseHeaders(java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #110                // Field sparseHeaders:Ljava/util/List;\n+         2: putfield      #347                // Field sparseHeaders:Ljava/util/List;\n          5: return\n       LineNumberTable:\n         line 924: 0\n         line 925: 5\n-    Signature: #386                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;)V\n+    Signature: #839                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;)V\n \n   public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> getSparseHeaders();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #110                // Field sparseHeaders:Ljava/util/List;\n+         1: getfield      #347                // Field sparseHeaders:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 934: 0\n-    Signature: #389                         // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #841                         // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n \n   public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> getOrderedSparseHeaders() throws java.io.IOException;\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=1\n          0: aload_0\n-         1: getfield      #110                // Field sparseHeaders:Ljava/util/List;\n+         1: getfield      #347                // Field sparseHeaders:Ljava/util/List;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #110                // Field sparseHeaders:Ljava/util/List;\n-        11: invokeinterface #111,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n+         8: getfield      #347                // Field sparseHeaders:Ljava/util/List;\n+        11: invokeinterface #351,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n         16: ifeq          23\n-        19: invokestatic  #112                // Method java/util/Collections.emptyList:()Ljava/util/List;\n+        19: invokestatic  #356                // Method java/util/Collections.emptyList:()Ljava/util/List;\n         22: areturn\n         23: aload_0\n-        24: getfield      #110                // Field sparseHeaders:Ljava/util/List;\n-        27: invokeinterface #113,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n-        32: invokedynamic #114,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;\n-        37: invokeinterface #115,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        42: invokedynamic #116,  0            // InvokeDynamic #2:applyAsLong:()Ljava/util/function/ToLongFunction;\n-        47: invokestatic  #117                // InterfaceMethod java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n-        50: invokeinterface #118,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-        55: invokestatic  #119                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-        58: invokeinterface #120,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        63: checkcast     #121                // class java/util/List\n+        24: getfield      #347                // Field sparseHeaders:Ljava/util/List;\n+        27: invokeinterface #362,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n+        32: invokedynamic #366,  0            // InvokeDynamic #1:test:()Ljava/util/function/Predicate;\n+        37: invokeinterface #370,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        42: invokedynamic #376,  0            // InvokeDynamic #2:applyAsLong:()Ljava/util/function/ToLongFunction;\n+        47: invokestatic  #380                // InterfaceMethod java/util/Comparator.comparingLong:(Ljava/util/function/ToLongFunction;)Ljava/util/Comparator;\n+        50: invokeinterface #386,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+        55: invokestatic  #390                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+        58: invokeinterface #396,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        63: checkcast     #352                // class java/util/List\n         66: astore_1\n         67: aload_1\n-        68: invokeinterface #122,  1          // InterfaceMethod java/util/List.size:()I\n+        68: invokeinterface #400,  1          // InterfaceMethod java/util/List.size:()I\n         73: istore_2\n         74: iconst_0\n         75: istore_3\n         76: iload_3\n         77: iload_2\n         78: if_icmpge     186\n         81: aload_1\n         82: iload_3\n-        83: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        88: checkcast     #124                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+        83: invokeinterface #402,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        88: checkcast     #406                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n         91: astore        4\n         93: iload_3\n         94: iconst_1\n         95: iadd\n         96: iload_2\n         97: if_icmpge     147\n        100: aload         4\n-       102: invokevirtual #125                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+       102: invokevirtual #408                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n        105: aload         4\n-       107: invokevirtual #126                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+       107: invokevirtual #411                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n        110: ladd\n        111: aload_1\n        112: iload_3\n        113: iconst_1\n        114: iadd\n-       115: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-       120: checkcast     #124                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-       123: invokevirtual #125                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+       115: invokeinterface #402,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+       120: checkcast     #406                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+       123: invokevirtual #408                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n        126: lcmp\n        127: ifle          147\n-       130: new           #50                 // class java/io/IOException\n+       130: new           #153                // class java/io/IOException\n        133: dup\n        134: aload_0\n-       135: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-       138: invokedynamic #127,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       143: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       135: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+       138: invokedynamic #414,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       143: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        146: athrow\n        147: aload         4\n-       149: invokevirtual #125                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+       149: invokevirtual #408                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n        152: aload         4\n-       154: invokevirtual #126                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+       154: invokevirtual #411                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n        157: ladd\n        158: lconst_0\n        159: lcmp\n        160: ifge          180\n-       163: new           #50                 // class java/io/IOException\n+       163: new           #153                // class java/io/IOException\n        166: dup\n        167: aload_0\n-       168: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-       171: invokedynamic #129,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       176: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       168: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+       171: invokedynamic #417,  0            // InvokeDynamic #4:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       176: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        179: athrow\n        180: iinc          3, 1\n        183: goto          76\n        186: aload_1\n-       187: invokeinterface #111,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n-       192: ifne          235\n+       187: invokeinterface #351,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n+       192: ifne          236\n        195: aload_1\n        196: iload_2\n        197: iconst_1\n        198: isub\n-       199: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-       204: checkcast     #124                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+       199: invokeinterface #402,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+       204: checkcast     #406                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n        207: astore_3\n        208: aload_3\n-       209: invokevirtual #125                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+       209: invokevirtual #408                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n        212: aload_3\n-       213: invokevirtual #126                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+       213: invokevirtual #411                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n        216: ladd\n        217: aload_0\n-       218: invokevirtual #130                // Method getRealSize:()J\n+       218: invokevirtual #418                // Method getRealSize:()J\n        221: lcmp\n-       222: ifle          235\n-       225: new           #50                 // class java/io/IOException\n+       222: ifle          236\n+       225: new           #153                // class java/io/IOException\n        228: dup\n-       229: ldc           #131                // String Corrupted TAR archive. Sparse block extends beyond real size of the entry\n-       231: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       234: athrow\n-       235: aload_1\n-       236: areturn\n+       229: ldc_w         #421                // String Corrupted TAR archive. Sparse block extends beyond real size of the entry\n+       232: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       235: athrow\n+       236: aload_1\n+       237: areturn\n       LineNumberTable:\n         line 945: 0\n         line 946: 19\n         line 948: 23\n         line 949: 37\n         line 950: 47\n         line 951: 55\n@@ -2414,62 +2414,62 @@\n         line 963: 163\n         line 964: 168\n         line 954: 180\n         line 967: 186\n         line 968: 195\n         line 969: 208\n         line 970: 225\n-        line 974: 235\n+        line 974: 236\n       StackMapTable: number_of_entries = 7\n         frame_type = 19 /* same */\n         frame_type = 3 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 52\n           locals = [ class java/util/List, int, int ]\n         frame_type = 252 /* append */\n           offset_delta = 70\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse ]\n         frame_type = 250 /* chop */\n           offset_delta = 32\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-        frame_type = 48 /* same */\n+        frame_type = 49 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #389                         // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #841                         // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n \n   public boolean isPaxGNU1XSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #132                // Field paxGNU1XSparse:Z\n+         1: getfield      #423                // Field paxGNU1XSparse:Z\n          4: ireturn\n       LineNumberTable:\n         line 984: 0\n \n   public void setSize(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          20\n-         6: new           #133                // class java/lang/IllegalArgumentException\n+         6: new           #426                // class java/lang/IllegalArgumentException\n          9: dup\n         10: lload_1\n-        11: invokedynamic #134,  0            // InvokeDynamic #5:makeConcatWithConstants:(J)Ljava/lang/String;\n-        16: invokespecial #135                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: invokedynamic #428,  0            // InvokeDynamic #5:makeConcatWithConstants:(J)Ljava/lang/String;\n+        16: invokespecial #431                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: lload_1\n-        22: putfield      #53                 // Field size:J\n+        22: putfield      #161                // Field size:J\n         25: return\n       LineNumberTable:\n         line 994: 0\n         line 995: 6\n         line 997: 20\n         line 998: 25\n       StackMapTable: number_of_entries = 1\n@@ -2477,35 +2477,35 @@\n \n   public int getDevMajor();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #136                // Field devMajor:I\n+         1: getfield      #432                // Field devMajor:I\n          4: ireturn\n       LineNumberTable:\n         line 1007: 0\n \n   public void setDevMajor(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifge          18\n-         4: new           #133                // class java/lang/IllegalArgumentException\n+         4: new           #426                // class java/lang/IllegalArgumentException\n          7: dup\n          8: iload_1\n-         9: invokedynamic #137,  0            // InvokeDynamic #6:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #135                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         9: invokedynamic #435,  0            // InvokeDynamic #6:makeConcatWithConstants:(I)Ljava/lang/String;\n+        14: invokespecial #431                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iload_1\n-        20: putfield      #136                // Field devMajor:I\n+        20: putfield      #432                // Field devMajor:I\n         23: return\n       LineNumberTable:\n         line 1018: 0\n         line 1019: 4\n         line 1022: 18\n         line 1023: 23\n       StackMapTable: number_of_entries = 1\n@@ -2513,35 +2513,35 @@\n \n   public int getDevMinor();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #138                // Field devMinor:I\n+         1: getfield      #438                // Field devMinor:I\n          4: ireturn\n       LineNumberTable:\n         line 1032: 0\n \n   public void setDevMinor(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: ifge          18\n-         4: new           #133                // class java/lang/IllegalArgumentException\n+         4: new           #426                // class java/lang/IllegalArgumentException\n          7: dup\n          8: iload_1\n-         9: invokedynamic #139,  0            // InvokeDynamic #7:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #135                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         9: invokedynamic #441,  0            // InvokeDynamic #7:makeConcatWithConstants:(I)Ljava/lang/String;\n+        14: invokespecial #431                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: iload_1\n-        20: putfield      #138                // Field devMinor:I\n+        20: putfield      #438                // Field devMinor:I\n         23: return\n       LineNumberTable:\n         line 1043: 0\n         line 1044: 4\n         line 1047: 18\n         line 1048: 23\n       StackMapTable: number_of_entries = 1\n@@ -2549,50 +2549,50 @@\n \n   public boolean isExtended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #140                // Field isExtended:Z\n+         1: getfield      #442                // Field isExtended:Z\n          4: ireturn\n       LineNumberTable:\n         line 1057: 0\n \n   public long getRealSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #141                // Method isSparse:()Z\n+         1: invokevirtual #445                // Method isSparse:()Z\n          4: ifne          12\n          7: aload_0\n-         8: invokevirtual #142                // Method getSize:()J\n+         8: invokevirtual #448                // Method getSize:()J\n         11: lreturn\n         12: aload_0\n-        13: getfield      #143                // Field realSize:J\n+        13: getfield      #451                // Field realSize:J\n         16: lreturn\n       LineNumberTable:\n         line 1070: 0\n         line 1071: 7\n         line 1073: 12\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n \n   public boolean isGNUSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #144                // Method isOldGNUSparse:()Z\n+         1: invokevirtual #454                // Method isOldGNUSparse:()Z\n          4: ifne          14\n          7: aload_0\n-         8: invokevirtual #145                // Method isPaxGNUSparse:()Z\n+         8: invokevirtual #457                // Method isPaxGNUSparse:()Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1082: 0\n@@ -2604,15 +2604,15 @@\n \n   public boolean isOldGNUSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        83\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2624,37 +2624,37 @@\n \n   public boolean isPaxGNUSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #146                // Field paxGNUSparse:Z\n+         1: getfield      #460                // Field paxGNUSparse:Z\n          4: ireturn\n       LineNumberTable:\n         line 1104: 0\n \n   public boolean isStarSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #147                // Field starSparse:Z\n+         1: getfield      #463                // Field starSparse:Z\n          4: ireturn\n       LineNumberTable:\n         line 1114: 0\n \n   public boolean isGNULongLinkEntry();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        75\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2666,15 +2666,15 @@\n \n   public boolean isGNULongNameEntry();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        76\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2686,19 +2686,19 @@\n \n   public boolean isPaxHeader();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        120\n          6: if_icmpeq     18\n          9: aload_0\n-        10: getfield      #35                 // Field linkFlag:B\n+        10: getfield      #107                // Field linkFlag:B\n         13: bipush        88\n         15: if_icmpne     22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n@@ -2711,15 +2711,15 @@\n \n   public boolean isGlobalPaxHeader();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        103\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2731,38 +2731,38 @@\n \n   public boolean isDirectory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         1: getfield      #69                 // Field file:Ljava/nio/file/Path;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         8: getfield      #69                 // Field file:Ljava/nio/file/Path;\n         11: aload_0\n-        12: getfield      #26                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n-        15: invokestatic  #82                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        12: getfield      #79                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n+        15: invokestatic  #254                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         18: ireturn\n         19: aload_0\n-        20: getfield      #35                 // Field linkFlag:B\n+        20: getfield      #107                // Field linkFlag:B\n         23: bipush        53\n         25: if_icmpne     30\n         28: iconst_1\n         29: ireturn\n         30: aload_0\n-        31: invokevirtual #148                // Method isPaxHeader:()Z\n+        31: invokevirtual #466                // Method isPaxHeader:()Z\n         34: ifne          60\n         37: aload_0\n-        38: invokevirtual #149                // Method isGlobalPaxHeader:()Z\n+        38: invokevirtual #469                // Method isGlobalPaxHeader:()Z\n         41: ifne          60\n         44: aload_0\n-        45: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-        48: ldc           #31                 // String /\n-        50: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        45: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+        48: ldc           #96                 // String /\n+        50: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         53: ifeq          60\n         56: iconst_1\n         57: goto          61\n         60: iconst_0\n         61: ireturn\n       LineNumberTable:\n         line 1166: 0\n@@ -2779,35 +2779,35 @@\n \n   public boolean isFile();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         1: getfield      #69                 // Field file:Ljava/nio/file/Path;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         8: getfield      #69                 // Field file:Ljava/nio/file/Path;\n         11: aload_0\n-        12: getfield      #26                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n-        15: invokestatic  #150                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        12: getfield      #79                 // Field linkOptions:[Ljava/nio/file/LinkOption;\n+        15: invokestatic  #472                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         18: ireturn\n         19: aload_0\n-        20: getfield      #35                 // Field linkFlag:B\n+        20: getfield      #107                // Field linkFlag:B\n         23: ifeq          35\n         26: aload_0\n-        27: getfield      #35                 // Field linkFlag:B\n+        27: getfield      #107                // Field linkFlag:B\n         30: bipush        48\n         32: if_icmpne     37\n         35: iconst_1\n         36: ireturn\n         37: aload_0\n-        38: invokevirtual #90                 // Method getName:()Ljava/lang/String;\n-        41: ldc           #31                 // String /\n-        43: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        38: invokevirtual #282                // Method getName:()Ljava/lang/String;\n+        41: ldc           #96                 // String /\n+        43: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         46: ifne          53\n         49: iconst_1\n         50: goto          54\n         53: iconst_0\n         54: ireturn\n       LineNumberTable:\n         line 1184: 0\n@@ -2825,15 +2825,15 @@\n \n   public boolean isSymbolicLink();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        50\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2845,15 +2845,15 @@\n \n   public boolean isLink();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        49\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2865,15 +2865,15 @@\n \n   public boolean isCharacterDevice();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        51\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2885,15 +2885,15 @@\n \n   public boolean isBlockDevice();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        52\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2905,15 +2905,15 @@\n \n   public boolean isFIFO();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field linkFlag:B\n+         1: getfield      #107                // Field linkFlag:B\n          4: bipush        54\n          6: if_icmpne     13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -2925,18 +2925,18 @@\n \n   public boolean isSparse();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #151                // Method isGNUSparse:()Z\n+         1: invokevirtual #475                // Method isGNUSparse:()Z\n          4: ifne          14\n          7: aload_0\n-         8: invokevirtual #152                // Method isStarSparse:()Z\n+         8: invokevirtual #478                // Method isStarSparse:()Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1250: 0\n@@ -2948,44 +2948,44 @@\n \n   public long getDataOffset();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field dataOffset:J\n+         1: getfield      #44                 // Field dataOffset:J\n          4: lreturn\n       LineNumberTable:\n         line 1259: 0\n \n   public void setDataOffset(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          16\n-         6: new           #133                // class java/lang/IllegalArgumentException\n+         3: ifge          17\n+         6: new           #426                // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #153                // String The offset can not be smaller than 0\n-        12: invokespecial #135                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        15: athrow\n-        16: aload_0\n-        17: lload_1\n-        18: putfield      #17                 // Field dataOffset:J\n-        21: return\n+        10: ldc_w         #481                // String The offset can not be smaller than 0\n+        13: invokespecial #431                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        16: athrow\n+        17: aload_0\n+        18: lload_1\n+        19: putfield      #44                 // Field dataOffset:J\n+        22: return\n       LineNumberTable:\n         line 1268: 0\n         line 1269: 6\n-        line 1271: 16\n-        line 1272: 21\n+        line 1271: 17\n+        line 1272: 22\n       StackMapTable: number_of_entries = 1\n-        frame_type = 16 /* same */\n+        frame_type = 17 /* same */\n \n   public boolean isStreamContiguous();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iconst_1\n@@ -2995,109 +2995,109 @@\n \n   public java.util.Map<java.lang.String, java.lang.String> getExtraPaxHeaders();\n     descriptor: ()Ljava/util/Map;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n-         4: invokestatic  #154                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+         1: getfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n+         4: invokestatic  #483                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n          7: areturn\n       LineNumberTable:\n         line 1289: 0\n-    Signature: #419                         // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+    Signature: #858                         // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n \n   public void clearExtraPaxHeaders();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n-         4: invokeinterface #155,  1          // InterfaceMethod java/util/Map.clear:()V\n+         1: getfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n+         4: invokeinterface #487,  1          // InterfaceMethod java/util/Map.clear:()V\n          9: return\n       LineNumberTable:\n         line 1297: 0\n         line 1298: 9\n \n   public void addPaxHeader(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #156                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n-         6: goto          21\n+         3: invokespecial #492                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n+         6: goto          22\n          9: astore_3\n-        10: new           #133                // class java/lang/IllegalArgumentException\n+        10: new           #426                // class java/lang/IllegalArgumentException\n         13: dup\n-        14: ldc           #157                // String Invalid input\n-        16: aload_3\n-        17: invokespecial #158                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-        20: athrow\n-        21: return\n+        14: ldc_w         #496                // String Invalid input\n+        17: aload_3\n+        18: invokespecial #498                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        21: athrow\n+        22: return\n       Exception table:\n          from    to  target type\n              0     6     9   Class java/io/IOException\n       LineNumberTable:\n         line 1309: 0\n         line 1312: 6\n         line 1310: 9\n         line 1311: 10\n-        line 1313: 21\n+        line 1313: 22\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-        frame_type = 11 /* same */\n+        frame_type = 12 /* same */\n \n   public java.lang.String getExtraPaxHeader(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n+         1: getfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n          4: aload_1\n-         5: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #160                // class java/lang/String\n+         5: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        10: checkcast     #57                 // class java/lang/String\n         13: areturn\n       LineNumberTable:\n         line 1322: 0\n \n   void updateEntryFromPaxHeaders(java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_1\n-         1: invokeinterface #161,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-         6: invokeinterface #162,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+         1: invokeinterface #504,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+         6: invokeinterface #507,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n         11: astore_2\n         12: aload_2\n-        13: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        13: invokeinterface #511,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         18: ifeq          65\n         21: aload_2\n-        22: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        27: checkcast     #165                // class java/util/Map$Entry\n+        22: invokeinterface #516,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        27: checkcast     #520                // class java/util/Map$Entry\n         30: astore_3\n         31: aload_3\n-        32: invokeinterface #166,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-        37: checkcast     #160                // class java/lang/String\n+        32: invokeinterface #522,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+        37: checkcast     #57                 // class java/lang/String\n         40: astore        4\n         42: aload_3\n-        43: invokeinterface #167,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-        48: checkcast     #160                // class java/lang/String\n+        43: invokeinterface #525,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+        48: checkcast     #57                 // class java/lang/String\n         51: astore        5\n         53: aload_0\n         54: aload         4\n         56: aload         5\n         58: aload_1\n-        59: invokespecial #168                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+        59: invokespecial #528                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n         62: goto          12\n         65: return\n       LineNumberTable:\n         line 1331: 0\n         line 1332: 31\n         line 1333: 42\n         line 1334: 53\n@@ -3107,27 +3107,27 @@\n         frame_type = 252 /* append */\n           offset_delta = 12\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 52\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #428                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #863                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   private void processPaxHeader(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n-         7: invokespecial #168                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+         4: getfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n+         7: invokespecial #528                // Method processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n         10: return\n       LineNumberTable:\n         line 1346: 0\n         line 1347: 10\n     Exceptions:\n       throws java.io.IOException\n \n@@ -3137,395 +3137,395 @@\n     Code:\n       stack=5, locals=10, args_size=4\n          0: aload_1\n          1: astore        4\n          3: iconst_m1\n          4: istore        5\n          6: aload         4\n-         8: invokevirtual #94                 // Method java/lang/String.hashCode:()I\n+         8: invokevirtual #293                // Method java/lang/String.hashCode:()I\n         11: lookupswitch  { // 13\n-             -1916861932: 271\n-             -1916619760: 254\n-              -277496563: 305\n-              -160380561: 288\n-                  102338: 156\n-                  115792: 188\n+             -1916861932: 280\n+             -1916619760: 262\n+              -277496563: 316\n+              -160380561: 298\n+                  102338: 158\n+                  115792: 192\n                  3433509: 124\n-                 3530753: 220\n-                98496370: 172\n-               104223930: 237\n-               111425664: 204\n-               530706950: 322\n-              1195018015: 140\n-                 default: 336\n+                 3530753: 226\n+                98496370: 175\n+               104223930: 244\n+               111425664: 209\n+               530706950: 334\n+              1195018015: 141\n+                 default: 349\n             }\n        124: aload         4\n-       126: ldc           #169                // String path\n-       128: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       131: ifeq          336\n-       134: iconst_0\n-       135: istore        5\n-       137: goto          336\n-       140: aload         4\n-       142: ldc           #170                // String linkpath\n-       144: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       147: ifeq          336\n-       150: iconst_1\n-       151: istore        5\n-       153: goto          336\n-       156: aload         4\n-       158: ldc           #171                // String gid\n-       160: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       163: ifeq          336\n-       166: iconst_2\n-       167: istore        5\n-       169: goto          336\n-       172: aload         4\n-       174: ldc           #172                // String gname\n-       176: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       179: ifeq          336\n-       182: iconst_3\n-       183: istore        5\n-       185: goto          336\n-       188: aload         4\n-       190: ldc           #173                // String uid\n-       192: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       195: ifeq          336\n-       198: iconst_4\n-       199: istore        5\n-       201: goto          336\n-       204: aload         4\n-       206: ldc           #174                // String uname\n-       208: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       211: ifeq          336\n-       214: iconst_5\n-       215: istore        5\n-       217: goto          336\n-       220: aload         4\n-       222: ldc           #175                // String size\n-       224: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       227: ifeq          336\n-       230: bipush        6\n-       232: istore        5\n-       234: goto          336\n-       237: aload         4\n-       239: ldc           #176                // String mtime\n-       241: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       244: ifeq          336\n-       247: bipush        7\n-       249: istore        5\n-       251: goto          336\n-       254: aload         4\n-       256: ldc           #177                // String SCHILY.devminor\n-       258: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       261: ifeq          336\n-       264: bipush        8\n-       266: istore        5\n-       268: goto          336\n-       271: aload         4\n-       273: ldc           #178                // String SCHILY.devmajor\n-       275: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       278: ifeq          336\n-       281: bipush        9\n-       283: istore        5\n-       285: goto          336\n-       288: aload         4\n-       290: ldc           #179                // String GNU.sparse.size\n-       292: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       295: ifeq          336\n-       298: bipush        10\n-       300: istore        5\n-       302: goto          336\n-       305: aload         4\n-       307: ldc           #180                // String GNU.sparse.realsize\n-       309: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       312: ifeq          336\n-       315: bipush        11\n-       317: istore        5\n-       319: goto          336\n-       322: aload         4\n-       324: ldc           #181                // String SCHILY.filetype\n-       326: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       329: ifeq          336\n-       332: bipush        12\n-       334: istore        5\n-       336: iload         5\n-       338: tableswitch   { // 0 to 12\n-                       0: 404\n-                       1: 412\n-                       2: 420\n-                       3: 431\n-                       4: 439\n-                       5: 450\n-                       6: 458\n-                       7: 490\n-                       8: 506\n-                       9: 536\n-                      10: 566\n-                      11: 574\n-                      12: 582\n-                 default: 599\n+       126: ldc_w         #531                // String path\n+       129: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       132: ifeq          349\n+       135: iconst_0\n+       136: istore        5\n+       138: goto          349\n+       141: aload         4\n+       143: ldc_w         #533                // String linkpath\n+       146: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       149: ifeq          349\n+       152: iconst_1\n+       153: istore        5\n+       155: goto          349\n+       158: aload         4\n+       160: ldc_w         #535                // String gid\n+       163: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       166: ifeq          349\n+       169: iconst_2\n+       170: istore        5\n+       172: goto          349\n+       175: aload         4\n+       177: ldc_w         #537                // String gname\n+       180: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       183: ifeq          349\n+       186: iconst_3\n+       187: istore        5\n+       189: goto          349\n+       192: aload         4\n+       194: ldc_w         #539                // String uid\n+       197: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       200: ifeq          349\n+       203: iconst_4\n+       204: istore        5\n+       206: goto          349\n+       209: aload         4\n+       211: ldc_w         #541                // String uname\n+       214: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       217: ifeq          349\n+       220: iconst_5\n+       221: istore        5\n+       223: goto          349\n+       226: aload         4\n+       228: ldc_w         #543                // String size\n+       231: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       234: ifeq          349\n+       237: bipush        6\n+       239: istore        5\n+       241: goto          349\n+       244: aload         4\n+       246: ldc_w         #544                // String mtime\n+       249: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       252: ifeq          349\n+       255: bipush        7\n+       257: istore        5\n+       259: goto          349\n+       262: aload         4\n+       264: ldc_w         #546                // String SCHILY.devminor\n+       267: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       270: ifeq          349\n+       273: bipush        8\n+       275: istore        5\n+       277: goto          349\n+       280: aload         4\n+       282: ldc_w         #548                // String SCHILY.devmajor\n+       285: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       288: ifeq          349\n+       291: bipush        9\n+       293: istore        5\n+       295: goto          349\n+       298: aload         4\n+       300: ldc_w         #550                // String GNU.sparse.size\n+       303: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       306: ifeq          349\n+       309: bipush        10\n+       311: istore        5\n+       313: goto          349\n+       316: aload         4\n+       318: ldc_w         #552                // String GNU.sparse.realsize\n+       321: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       324: ifeq          349\n+       327: bipush        11\n+       329: istore        5\n+       331: goto          349\n+       334: aload         4\n+       336: ldc_w         #554                // String SCHILY.filetype\n+       339: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       342: ifeq          349\n+       345: bipush        12\n+       347: istore        5\n+       349: iload         5\n+       351: tableswitch   { // 0 to 12\n+                       0: 416\n+                       1: 424\n+                       2: 432\n+                       3: 443\n+                       4: 451\n+                       5: 462\n+                       6: 470\n+                       7: 503\n+                       8: 519\n+                       9: 550\n+                      10: 581\n+                      11: 589\n+                      12: 597\n+                 default: 615\n             }\n-       404: aload_0\n-       405: aload_2\n-       406: invokevirtual #182                // Method setName:(Ljava/lang/String;)V\n-       409: goto          611\n-       412: aload_0\n-       413: aload_2\n-       414: invokevirtual #183                // Method setLinkName:(Ljava/lang/String;)V\n-       417: goto          611\n-       420: aload_0\n-       421: aload_2\n-       422: invokestatic  #184                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n-       425: invokevirtual #97                 // Method setGroupId:(J)V\n-       428: goto          611\n-       431: aload_0\n-       432: aload_2\n-       433: invokevirtual #101                // Method setGroupName:(Ljava/lang/String;)V\n-       436: goto          611\n-       439: aload_0\n-       440: aload_2\n-       441: invokestatic  #184                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n-       444: invokevirtual #96                 // Method setUserId:(J)V\n-       447: goto          611\n-       450: aload_0\n-       451: aload_2\n-       452: invokevirtual #100                // Method setUserName:(Ljava/lang/String;)V\n-       455: goto          611\n-       458: aload_2\n-       459: invokestatic  #184                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n-       462: lstore        6\n-       464: lload         6\n-       466: lconst_0\n-       467: lcmp\n-       468: ifge          481\n-       471: new           #50                 // class java/io/IOException\n-       474: dup\n-       475: ldc           #185                // String Corrupted TAR archive. Entry size is negative\n-       477: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       480: athrow\n-       481: aload_0\n-       482: lload         6\n-       484: invokevirtual #186                // Method setSize:(J)V\n-       487: goto          611\n-       490: aload_0\n-       491: aload_2\n-       492: invokestatic  #187                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-       495: ldc2_w        #188                // double 1000.0d\n-       498: dmul\n-       499: d2l\n-       500: invokevirtual #190                // Method setModTime:(J)V\n-       503: goto          611\n-       506: aload_2\n-       507: invokestatic  #191                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-       510: istore        8\n-       512: iload         8\n-       514: ifge          527\n-       517: new           #50                 // class java/io/IOException\n-       520: dup\n-       521: ldc           #192                // String Corrupted TAR archive. Dev-Minor is negative\n-       523: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       526: athrow\n-       527: aload_0\n-       528: iload         8\n-       530: invokevirtual #193                // Method setDevMinor:(I)V\n-       533: goto          611\n-       536: aload_2\n-       537: invokestatic  #191                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-       540: istore        9\n-       542: iload         9\n-       544: ifge          557\n-       547: new           #50                 // class java/io/IOException\n-       550: dup\n-       551: ldc           #194                // String Corrupted TAR archive. Dev-Major is negative\n-       553: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       556: athrow\n-       557: aload_0\n-       558: iload         9\n-       560: invokevirtual #195                // Method setDevMajor:(I)V\n-       563: goto          611\n-       566: aload_0\n-       567: aload_3\n-       568: invokevirtual #196                // Method fillGNUSparse0xData:(Ljava/util/Map;)V\n-       571: goto          611\n-       574: aload_0\n-       575: aload_3\n-       576: invokevirtual #197                // Method fillGNUSparse1xData:(Ljava/util/Map;)V\n-       579: goto          611\n-       582: ldc           #198                // String sparse\n-       584: aload_2\n-       585: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       588: ifeq          611\n-       591: aload_0\n-       592: aload_3\n-       593: invokevirtual #199                // Method fillStarSparseData:(Ljava/util/Map;)V\n-       596: goto          611\n-       599: aload_0\n-       600: getfield      #13                 // Field extraPaxHeaders:Ljava/util/Map;\n-       603: aload_1\n-       604: aload_2\n-       605: invokeinterface #200,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-       610: pop\n-       611: return\n+       416: aload_0\n+       417: aload_2\n+       418: invokevirtual #556                // Method setName:(Ljava/lang/String;)V\n+       421: goto          627\n+       424: aload_0\n+       425: aload_2\n+       426: invokevirtual #559                // Method setLinkName:(Ljava/lang/String;)V\n+       429: goto          627\n+       432: aload_0\n+       433: aload_2\n+       434: invokestatic  #562                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+       437: invokevirtual #302                // Method setGroupId:(J)V\n+       440: goto          627\n+       443: aload_0\n+       444: aload_2\n+       445: invokevirtual #314                // Method setGroupName:(Ljava/lang/String;)V\n+       448: goto          627\n+       451: aload_0\n+       452: aload_2\n+       453: invokestatic  #562                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+       456: invokevirtual #299                // Method setUserId:(J)V\n+       459: goto          627\n+       462: aload_0\n+       463: aload_2\n+       464: invokevirtual #310                // Method setUserName:(Ljava/lang/String;)V\n+       467: goto          627\n+       470: aload_2\n+       471: invokestatic  #562                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+       474: lstore        6\n+       476: lload         6\n+       478: lconst_0\n+       479: lcmp\n+       480: ifge          494\n+       483: new           #153                // class java/io/IOException\n+       486: dup\n+       487: ldc_w         #568                // String Corrupted TAR archive. Entry size is negative\n+       490: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       493: athrow\n+       494: aload_0\n+       495: lload         6\n+       497: invokevirtual #570                // Method setSize:(J)V\n+       500: goto          627\n+       503: aload_0\n+       504: aload_2\n+       505: invokestatic  #573                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+       508: ldc2_w        #579                // double 1000.0d\n+       511: dmul\n+       512: d2l\n+       513: invokevirtual #581                // Method setModTime:(J)V\n+       516: goto          627\n+       519: aload_2\n+       520: invokestatic  #583                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       523: istore        8\n+       525: iload         8\n+       527: ifge          541\n+       530: new           #153                // class java/io/IOException\n+       533: dup\n+       534: ldc_w         #589                // String Corrupted TAR archive. Dev-Minor is negative\n+       537: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       540: athrow\n+       541: aload_0\n+       542: iload         8\n+       544: invokevirtual #591                // Method setDevMinor:(I)V\n+       547: goto          627\n+       550: aload_2\n+       551: invokestatic  #583                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       554: istore        9\n+       556: iload         9\n+       558: ifge          572\n+       561: new           #153                // class java/io/IOException\n+       564: dup\n+       565: ldc_w         #594                // String Corrupted TAR archive. Dev-Major is negative\n+       568: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       571: athrow\n+       572: aload_0\n+       573: iload         9\n+       575: invokevirtual #596                // Method setDevMajor:(I)V\n+       578: goto          627\n+       581: aload_0\n+       582: aload_3\n+       583: invokevirtual #599                // Method fillGNUSparse0xData:(Ljava/util/Map;)V\n+       586: goto          627\n+       589: aload_0\n+       590: aload_3\n+       591: invokevirtual #603                // Method fillGNUSparse1xData:(Ljava/util/Map;)V\n+       594: goto          627\n+       597: ldc_w         #606                // String sparse\n+       600: aload_2\n+       601: invokevirtual #283                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       604: ifeq          627\n+       607: aload_0\n+       608: aload_3\n+       609: invokevirtual #608                // Method fillStarSparseData:(Ljava/util/Map;)V\n+       612: goto          627\n+       615: aload_0\n+       616: getfield      #36                 // Field extraPaxHeaders:Ljava/util/Map;\n+       619: aload_1\n+       620: aload_2\n+       621: invokeinterface #611,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       626: pop\n+       627: return\n       LineNumberTable:\n         line 1381: 0\n-        line 1383: 404\n-        line 1384: 409\n-        line 1386: 412\n-        line 1387: 417\n-        line 1389: 420\n-        line 1390: 428\n-        line 1392: 431\n-        line 1393: 436\n-        line 1395: 439\n-        line 1396: 447\n-        line 1398: 450\n-        line 1399: 455\n-        line 1401: 458\n-        line 1402: 464\n-        line 1403: 471\n-        line 1405: 481\n-        line 1406: 487\n-        line 1408: 490\n-        line 1409: 503\n-        line 1411: 506\n-        line 1412: 512\n-        line 1413: 517\n-        line 1415: 527\n-        line 1416: 533\n-        line 1418: 536\n-        line 1419: 542\n-        line 1420: 547\n-        line 1422: 557\n-        line 1423: 563\n-        line 1425: 566\n-        line 1426: 571\n-        line 1428: 574\n-        line 1429: 579\n-        line 1431: 582\n-        line 1432: 591\n-        line 1436: 599\n-        line 1438: 611\n+        line 1383: 416\n+        line 1384: 421\n+        line 1386: 424\n+        line 1387: 429\n+        line 1389: 432\n+        line 1390: 440\n+        line 1392: 443\n+        line 1393: 448\n+        line 1395: 451\n+        line 1396: 459\n+        line 1398: 462\n+        line 1399: 467\n+        line 1401: 470\n+        line 1402: 476\n+        line 1403: 483\n+        line 1405: 494\n+        line 1406: 500\n+        line 1408: 503\n+        line 1409: 516\n+        line 1411: 519\n+        line 1412: 525\n+        line 1413: 530\n+        line 1415: 541\n+        line 1416: 547\n+        line 1418: 550\n+        line 1419: 556\n+        line 1420: 561\n+        line 1422: 572\n+        line 1423: 578\n+        line 1425: 581\n+        line 1426: 586\n+        line 1428: 589\n+        line 1429: 594\n+        line 1431: 597\n+        line 1432: 607\n+        line 1436: 615\n+        line 1438: 627\n       StackMapTable: number_of_entries = 32\n         frame_type = 253 /* append */\n           offset_delta = 124\n           locals = [ class java/lang/String, int ]\n-        frame_type = 15 /* same */\n-        frame_type = 15 /* same */\n-        frame_type = 15 /* same */\n-        frame_type = 15 /* same */\n-        frame_type = 15 /* same */\n-        frame_type = 15 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n         frame_type = 16 /* same */\n-        frame_type = 13 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 14 /* same */\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 67\n+          offset_delta = 66\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 22\n+          offset_delta = 23\n           locals = [ long ]\n         frame_type = 250 /* chop */\n           offset_delta = 8\n         frame_type = 15 /* same */\n         frame_type = 254 /* append */\n-          offset_delta = 20\n+          offset_delta = 21\n           locals = [ top, top, int ]\n         frame_type = 248 /* chop */\n           offset_delta = 8\n         frame_type = 255 /* full_frame */\n-          offset_delta = 20\n+          offset_delta = 21\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class java/lang/String, class java/lang/String, class java/util/Map, class java/lang/String, int, top, top, top, int ]\n           stack = []\n         frame_type = 255 /* full_frame */\n           offset_delta = 8\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class java/lang/String, class java/lang/String, class java/util/Map, class java/lang/String, int ]\n           stack = []\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n-        frame_type = 16 /* same */\n+        frame_type = 17 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 11\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #432                         // (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #864                         // (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry[] getDirectoryEntries();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field file:Ljava/nio/file/Path;\n+         1: getfield      #69                 // Field file:Ljava/nio/file/Path;\n          4: ifnull        14\n          7: aload_0\n-         8: invokevirtual #201                // Method isDirectory:()Z\n+         8: invokevirtual #615                // Method isDirectory:()Z\n         11: ifne          18\n-        14: getstatic     #202                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+        14: getstatic     #616                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n         17: areturn\n-        18: new           #203                // class java/util/ArrayList\n+        18: new           #620                // class java/util/ArrayList\n         21: dup\n-        22: invokespecial #204                // Method java/util/ArrayList.\"<init>\":()V\n+        22: invokespecial #622                // Method java/util/ArrayList.\"<init>\":()V\n         25: astore_1\n         26: aload_0\n-        27: getfield      #24                 // Field file:Ljava/nio/file/Path;\n-        30: invokestatic  #205                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+        27: getfield      #69                 // Field file:Ljava/nio/file/Path;\n+        30: invokestatic  #623                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n         33: astore_2\n         34: aload_2\n-        35: invokeinterface #206,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+        35: invokeinterface #627,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n         40: astore_3\n         41: aload_3\n-        42: invokeinterface #163,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        42: invokeinterface #511,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         47: ifeq          80\n         50: aload_3\n-        51: invokeinterface #164,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        56: checkcast     #207                // class java/nio/file/Path\n+        51: invokeinterface #516,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        56: checkcast     #137                // class java/nio/file/Path\n         59: astore        4\n         61: aload_1\n-        62: new           #21                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+        62: new           #10                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n         65: dup\n         66: aload         4\n-        68: invokespecial #208                // Method \"<init>\":(Ljava/nio/file/Path;)V\n-        71: invokeinterface #209,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        68: invokespecial #630                // Method \"<init>\":(Ljava/nio/file/Path;)V\n+        71: invokeinterface #633,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         76: pop\n         77: goto          41\n         80: aload_2\n         81: ifnull        117\n         84: aload_2\n-        85: invokeinterface #210,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        85: invokeinterface #636,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         90: goto          117\n         93: astore_3\n         94: aload_2\n         95: ifnull        115\n         98: aload_2\n-        99: invokeinterface #210,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        99: invokeinterface #636,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n        104: goto          115\n        107: astore        4\n        109: aload_3\n        110: aload         4\n-       112: invokevirtual #212                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       112: invokevirtual #641                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        115: aload_3\n        116: athrow\n        117: goto          125\n        120: astore_2\n-       121: getstatic     #202                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+       121: getstatic     #616                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n        124: areturn\n        125: aload_1\n-       126: getstatic     #202                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-       129: invokeinterface #213,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       134: checkcast     #214                // class \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n+       126: getstatic     #616                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+       129: invokeinterface #645,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       134: checkcast     #649                // class \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n        137: areturn\n       Exception table:\n          from    to  target type\n             34    80    93   Class java/lang/Throwable\n             98   104   107   Class java/lang/Throwable\n             26   117   120   Class java/io/IOException\n       LineNumberTable:\n@@ -3568,30 +3568,30 @@\n   public void writeEntryHeader(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #215                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         2: getstatic     #650                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n          5: iconst_0\n-         6: invokevirtual #216                // Method writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+         6: invokevirtual #656                // Method writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n          9: goto          35\n         12: astore_2\n         13: aload_0\n         14: aload_1\n-        15: getstatic     #217                // Field org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        15: getstatic     #659                // Field org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         18: iconst_0\n-        19: invokevirtual #216                // Method writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+        19: invokevirtual #656                // Method writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n         22: goto          35\n         25: astore_3\n-        26: new           #218                // class java/lang/RuntimeException\n+        26: new           #662                // class java/lang/RuntimeException\n         29: dup\n         30: aload_3\n-        31: invokespecial #219                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        31: invokespecial #664                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         34: athrow\n         35: return\n       Exception table:\n          from    to  target type\n              0     9    12   Class java/io/IOException\n             13    22    25   Class java/io/IOException\n       LineNumberTable:\n@@ -3617,66 +3617,66 @@\n     descriptor: ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=8, args_size=4\n          0: iconst_0\n          1: istore        4\n          3: aload_0\n-         4: getfield      #3                  // Field name:Ljava/lang/String;\n+         4: getfield      #9                  // Field name:Ljava/lang/String;\n          7: aload_1\n          8: iload         4\n         10: bipush        100\n         12: aload_2\n-        13: invokestatic  #220                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+        13: invokestatic  #666                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n         16: istore        4\n         18: aload_0\n         19: aload_0\n-        20: getfield      #34                 // Field mode:I\n+        20: getfield      #103                // Field mode:I\n         23: i2l\n         24: aload_1\n         25: iload         4\n         27: bipush        8\n         29: iload_3\n-        30: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+        30: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n         33: istore        4\n         35: aload_0\n         36: aload_0\n-        37: getfield      #73                 // Field userId:J\n+        37: getfield      #234                // Field userId:J\n         40: aload_1\n         41: iload         4\n         43: bipush        8\n         45: iload_3\n-        46: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+        46: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n         49: istore        4\n         51: aload_0\n         52: aload_0\n-        53: getfield      #75                 // Field groupId:J\n+        53: getfield      #239                // Field groupId:J\n         56: aload_1\n         57: iload         4\n         59: bipush        8\n         61: iload_3\n-        62: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+        62: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n         65: istore        4\n         67: aload_0\n         68: aload_0\n-        69: getfield      #53                 // Field size:J\n+        69: getfield      #161                // Field size:J\n         72: aload_1\n         73: iload         4\n         75: bipush        12\n         77: iload_3\n-        78: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+        78: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n         81: istore        4\n         83: aload_0\n         84: aload_0\n-        85: getfield      #39                 // Field modTime:J\n+        85: getfield      #117                // Field modTime:J\n         88: aload_1\n         89: iload         4\n         91: bipush        12\n         93: iload_3\n-        94: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+        94: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n         97: istore        4\n         99: iload         4\n        101: istore        5\n        103: iconst_0\n        104: istore        6\n        106: iload         6\n        108: bipush        8\n@@ -3688,92 +3688,92 @@\n        121: bastore\n        122: iinc          6, 1\n        125: goto          106\n        128: aload_1\n        129: iload         4\n        131: iinc          4, 1\n        134: aload_0\n-       135: getfield      #35                 // Field linkFlag:B\n+       135: getfield      #107                // Field linkFlag:B\n        138: bastore\n        139: aload_0\n-       140: getfield      #4                  // Field linkName:Ljava/lang/String;\n+       140: getfield      #15                 // Field linkName:Ljava/lang/String;\n        143: aload_1\n        144: iload         4\n        146: bipush        100\n        148: aload_2\n-       149: invokestatic  #220                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+       149: invokestatic  #666                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n        152: istore        4\n        154: aload_0\n-       155: getfield      #7                  // Field magic:Ljava/lang/String;\n+       155: getfield      #22                 // Field magic:Ljava/lang/String;\n        158: aload_1\n        159: iload         4\n        161: bipush        6\n-       163: invokestatic  #222                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n+       163: invokestatic  #674                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n        166: istore        4\n        168: aload_0\n-       169: getfield      #9                  // Field version:Ljava/lang/String;\n+       169: getfield      #27                 // Field version:Ljava/lang/String;\n        172: aload_1\n        173: iload         4\n        175: iconst_2\n-       176: invokestatic  #222                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n+       176: invokestatic  #674                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n        179: istore        4\n        181: aload_0\n-       182: getfield      #23                 // Field userName:Ljava/lang/String;\n+       182: getfield      #66                 // Field userName:Ljava/lang/String;\n        185: aload_1\n        186: iload         4\n        188: bipush        32\n        190: aload_2\n-       191: invokestatic  #220                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+       191: invokestatic  #666                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n        194: istore        4\n        196: aload_0\n-       197: getfield      #10                 // Field groupName:Ljava/lang/String;\n+       197: getfield      #30                 // Field groupName:Ljava/lang/String;\n        200: aload_1\n        201: iload         4\n        203: bipush        32\n        205: aload_2\n-       206: invokestatic  #220                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+       206: invokestatic  #666                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n        209: istore        4\n        211: aload_0\n        212: aload_0\n-       213: getfield      #136                // Field devMajor:I\n+       213: getfield      #432                // Field devMajor:I\n        216: i2l\n        217: aload_1\n        218: iload         4\n        220: bipush        8\n        222: iload_3\n-       223: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+       223: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n        226: istore        4\n        228: aload_0\n        229: aload_0\n-       230: getfield      #138                // Field devMinor:I\n+       230: getfield      #438                // Field devMinor:I\n        233: i2l\n        234: aload_1\n        235: iload         4\n        237: bipush        8\n        239: iload_3\n-       240: invokespecial #221                // Method writeEntryHeaderField:(J[BIIZ)I\n+       240: invokespecial #670                // Method writeEntryHeaderField:(J[BIIZ)I\n        243: istore        4\n        245: iload         4\n        247: aload_1\n        248: arraylength\n        249: if_icmpge     263\n        252: aload_1\n        253: iload         4\n        255: iinc          4, 1\n        258: iconst_0\n        259: bastore\n        260: goto          245\n        263: aload_1\n-       264: invokestatic  #223                // Method org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n+       264: invokestatic  #677                // Method org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n        267: lstore        6\n        269: lload         6\n        271: aload_1\n        272: iload         5\n        274: bipush        8\n-       276: invokestatic  #224                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n+       276: invokestatic  #681                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n        279: pop\n        280: return\n       LineNumberTable:\n         line 1502: 0\n         line 1504: 3\n         line 1506: 18\n         line 1507: 35\n@@ -3830,21 +3830,21 @@\n         19: lshl\n         20: lcmp\n         21: iflt          34\n         24: lconst_0\n         25: aload_3\n         26: iload         4\n         28: iload         5\n-        30: invokestatic  #225                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n+        30: invokestatic  #685                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n         33: ireturn\n         34: lload_1\n         35: aload_3\n         36: iload         4\n         38: iload         5\n-        40: invokestatic  #226                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n+        40: invokestatic  #688                // Method org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n         43: ireturn\n       LineNumberTable:\n         line 1546: 0\n         line 1551: 24\n         line 1553: 34\n       StackMapTable: number_of_entries = 2\n         frame_type = 24 /* same */\n@@ -3853,30 +3853,30 @@\n   public void parseTarHeader(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #215                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         5: invokevirtual #227                // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+         2: getstatic     #650                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         5: invokevirtual #691                // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n          8: goto          35\n         11: astore_2\n         12: aload_0\n         13: aload_1\n-        14: getstatic     #215                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        14: getstatic     #650                // Field org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         17: iconst_1\n         18: iconst_0\n-        19: invokespecial #88                 // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+        19: invokespecial #275                // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n         22: goto          35\n         25: astore_3\n-        26: new           #218                // class java/lang/RuntimeException\n+        26: new           #662                // class java/lang/RuntimeException\n         29: dup\n         30: aload_3\n-        31: invokespecial #219                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        31: invokespecial #664                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         34: athrow\n         35: return\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/io/IOException\n             12    22    25   Class java/io/IOException\n       LineNumberTable:\n@@ -3904,15 +3904,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n          4: iconst_0\n-         5: invokespecial #88                 // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+         5: invokespecial #275                // Method parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n          8: return\n       LineNumberTable:\n         line 1588: 0\n         line 1589: 8\n     Exceptions:\n       throws java.io.IOException\n \n@@ -3922,37 +3922,37 @@\n     Code:\n       stack=5, locals=6, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n          4: iload         4\n-         6: invokespecial #228                // Method parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n-         9: goto          26\n+         6: invokespecial #694                // Method parseTarHeaderUnwrapped:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n+         9: goto          27\n         12: astore        5\n-        14: new           #50                 // class java/io/IOException\n+        14: new           #153                // class java/io/IOException\n         17: dup\n-        18: ldc           #229                // String Corrupted TAR archive.\n-        20: aload         5\n-        22: invokespecial #230                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-        25: athrow\n-        26: return\n+        18: ldc_w         #697                // String Corrupted TAR archive.\n+        21: aload         5\n+        23: invokespecial #699                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: athrow\n+        27: return\n       Exception table:\n          from    to  target type\n              0     9    12   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n         line 1595: 0\n         line 1598: 9\n         line 1596: 12\n         line 1597: 14\n-        line 1599: 26\n+        line 1599: 27\n       StackMapTable: number_of_entries = 2\n         frame_type = 76 /* same_locals_1_stack_item */\n           stack = [ class java/lang/IllegalArgumentException ]\n-        frame_type = 13 /* same */\n+        frame_type = 14 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   private void parseTarHeaderUnwrapped(byte[], org.apache.commons.compress.archivers.zip.ZipEncoding, boolean, boolean) throws java.io.IOException;\n     descriptor: ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;ZZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n@@ -3961,279 +3961,279 @@\n          1: istore        5\n          3: aload_0\n          4: iload_3\n          5: ifeq          19\n          8: aload_1\n          9: iload         5\n         11: bipush        100\n-        13: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+        13: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n         16: goto          28\n         19: aload_1\n         20: iload         5\n         22: bipush        100\n         24: aload_2\n-        25: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-        28: putfield      #3                  // Field name:Ljava/lang/String;\n+        25: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+        28: putfield      #9                  // Field name:Ljava/lang/String;\n         31: iinc          5, 100\n         34: aload_0\n         35: aload_0\n         36: aload_1\n         37: iload         5\n         39: bipush        8\n         41: iload         4\n-        43: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n+        43: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n         46: l2i\n-        47: putfield      #34                 // Field mode:I\n+        47: putfield      #103                // Field mode:I\n         50: iinc          5, 8\n         53: aload_0\n         54: aload_0\n         55: aload_1\n         56: iload         5\n         58: bipush        8\n         60: iload         4\n-        62: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n+        62: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n         65: l2i\n         66: i2l\n-        67: putfield      #73                 // Field userId:J\n+        67: putfield      #234                // Field userId:J\n         70: iinc          5, 8\n         73: aload_0\n         74: aload_0\n         75: aload_1\n         76: iload         5\n         78: bipush        8\n         80: iload         4\n-        82: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n+        82: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n         85: l2i\n         86: i2l\n-        87: putfield      #75                 // Field groupId:J\n+        87: putfield      #239                // Field groupId:J\n         90: iinc          5, 8\n         93: aload_0\n         94: aload_1\n         95: iload         5\n         97: bipush        12\n-        99: invokestatic  #234                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n-       102: putfield      #53                 // Field size:J\n+        99: invokestatic  #711                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+       102: putfield      #161                // Field size:J\n        105: aload_0\n-       106: getfield      #53                 // Field size:J\n+       106: getfield      #161                // Field size:J\n        109: lconst_0\n        110: lcmp\n-       111: ifge          124\n-       114: new           #50                 // class java/io/IOException\n+       111: ifge          125\n+       114: new           #153                // class java/io/IOException\n        117: dup\n-       118: ldc           #235                // String broken archive, entry with negative size\n-       120: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       123: athrow\n-       124: iinc          5, 12\n-       127: aload_0\n+       118: ldc_w         #714                // String broken archive, entry with negative size\n+       121: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       124: athrow\n+       125: iinc          5, 12\n        128: aload_0\n-       129: aload_1\n-       130: iload         5\n-       132: bipush        12\n-       134: iload         4\n-       136: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n-       139: putfield      #39                 // Field modTime:J\n-       142: iinc          5, 12\n-       145: aload_0\n-       146: aload_1\n-       147: invokestatic  #236                // Method org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n-       150: putfield      #108                // Field checkSumOK:Z\n-       153: iinc          5, 8\n-       156: aload_0\n-       157: aload_1\n-       158: iload         5\n-       160: iinc          5, 1\n-       163: baload\n-       164: putfield      #35                 // Field linkFlag:B\n-       167: aload_0\n-       168: iload_3\n-       169: ifeq          183\n-       172: aload_1\n-       173: iload         5\n-       175: bipush        100\n-       177: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-       180: goto          192\n-       183: aload_1\n-       184: iload         5\n-       186: bipush        100\n-       188: aload_2\n-       189: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-       192: putfield      #4                  // Field linkName:Ljava/lang/String;\n-       195: iinc          5, 100\n-       198: aload_0\n-       199: aload_1\n-       200: iload         5\n-       202: bipush        6\n-       204: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-       207: putfield      #7                  // Field magic:Ljava/lang/String;\n-       210: iinc          5, 6\n-       213: aload_0\n-       214: aload_1\n-       215: iload         5\n-       217: iconst_2\n-       218: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-       221: putfield      #9                  // Field version:Ljava/lang/String;\n-       224: iinc          5, 2\n-       227: aload_0\n-       228: iload_3\n-       229: ifeq          243\n-       232: aload_1\n-       233: iload         5\n-       235: bipush        32\n-       237: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-       240: goto          252\n-       243: aload_1\n-       244: iload         5\n-       246: bipush        32\n-       248: aload_2\n-       249: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-       252: putfield      #23                 // Field userName:Ljava/lang/String;\n-       255: iinc          5, 32\n-       258: aload_0\n-       259: iload_3\n-       260: ifeq          274\n-       263: aload_1\n-       264: iload         5\n-       266: bipush        32\n-       268: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-       271: goto          283\n-       274: aload_1\n-       275: iload         5\n-       277: bipush        32\n-       279: aload_2\n-       280: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-       283: putfield      #10                 // Field groupName:Ljava/lang/String;\n-       286: iinc          5, 32\n-       289: aload_0\n-       290: getfield      #35                 // Field linkFlag:B\n-       293: bipush        51\n-       295: if_icmpeq     307\n-       298: aload_0\n-       299: getfield      #35                 // Field linkFlag:B\n-       302: bipush        52\n-       304: if_icmpne     348\n-       307: aload_0\n+       129: aload_0\n+       130: aload_1\n+       131: iload         5\n+       133: bipush        12\n+       135: iload         4\n+       137: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n+       140: putfield      #117                // Field modTime:J\n+       143: iinc          5, 12\n+       146: aload_0\n+       147: aload_1\n+       148: invokestatic  #716                // Method org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n+       151: putfield      #340                // Field checkSumOK:Z\n+       154: iinc          5, 8\n+       157: aload_0\n+       158: aload_1\n+       159: iload         5\n+       161: iinc          5, 1\n+       164: baload\n+       165: putfield      #107                // Field linkFlag:B\n+       168: aload_0\n+       169: iload_3\n+       170: ifeq          184\n+       173: aload_1\n+       174: iload         5\n+       176: bipush        100\n+       178: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       181: goto          193\n+       184: aload_1\n+       185: iload         5\n+       187: bipush        100\n+       189: aload_2\n+       190: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+       193: putfield      #15                 // Field linkName:Ljava/lang/String;\n+       196: iinc          5, 100\n+       199: aload_0\n+       200: aload_1\n+       201: iload         5\n+       203: bipush        6\n+       205: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       208: putfield      #22                 // Field magic:Ljava/lang/String;\n+       211: iinc          5, 6\n+       214: aload_0\n+       215: aload_1\n+       216: iload         5\n+       218: iconst_2\n+       219: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       222: putfield      #27                 // Field version:Ljava/lang/String;\n+       225: iinc          5, 2\n+       228: aload_0\n+       229: iload_3\n+       230: ifeq          244\n+       233: aload_1\n+       234: iload         5\n+       236: bipush        32\n+       238: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       241: goto          253\n+       244: aload_1\n+       245: iload         5\n+       247: bipush        32\n+       249: aload_2\n+       250: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+       253: putfield      #66                 // Field userName:Ljava/lang/String;\n+       256: iinc          5, 32\n+       259: aload_0\n+       260: iload_3\n+       261: ifeq          275\n+       264: aload_1\n+       265: iload         5\n+       267: bipush        32\n+       269: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       272: goto          284\n+       275: aload_1\n+       276: iload         5\n+       278: bipush        32\n+       280: aload_2\n+       281: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+       284: putfield      #30                 // Field groupName:Ljava/lang/String;\n+       287: iinc          5, 32\n+       290: aload_0\n+       291: getfield      #107                // Field linkFlag:B\n+       294: bipush        51\n+       296: if_icmpeq     308\n+       299: aload_0\n+       300: getfield      #107                // Field linkFlag:B\n+       303: bipush        52\n+       305: if_icmpne     349\n        308: aload_0\n-       309: aload_1\n-       310: iload         5\n-       312: bipush        8\n-       314: iload         4\n-       316: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n-       319: l2i\n-       320: putfield      #136                // Field devMajor:I\n-       323: iinc          5, 8\n-       326: aload_0\n+       309: aload_0\n+       310: aload_1\n+       311: iload         5\n+       313: bipush        8\n+       315: iload         4\n+       317: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n+       320: l2i\n+       321: putfield      #432                // Field devMajor:I\n+       324: iinc          5, 8\n        327: aload_0\n-       328: aload_1\n-       329: iload         5\n-       331: bipush        8\n-       333: iload         4\n-       335: invokespecial #233                // Method parseOctalOrBinary:([BIIZ)J\n-       338: l2i\n-       339: putfield      #138                // Field devMinor:I\n-       342: iinc          5, 8\n-       345: goto          351\n-       348: iinc          5, 16\n-       351: aload_0\n-       352: aload_1\n-       353: invokespecial #237                // Method evaluateType:([B)I\n-       356: istore        6\n-       358: iload         6\n-       360: tableswitch   { // 2 to 4\n+       328: aload_0\n+       329: aload_1\n+       330: iload         5\n+       332: bipush        8\n+       334: iload         4\n+       336: invokespecial #707                // Method parseOctalOrBinary:([BIIZ)J\n+       339: l2i\n+       340: putfield      #438                // Field devMinor:I\n+       343: iinc          5, 8\n+       346: goto          352\n+       349: iinc          5, 16\n+       352: aload_0\n+       353: aload_1\n+       354: invokespecial #720                // Method evaluateType:([B)I\n+       357: istore        6\n+       359: iload         6\n+       361: tableswitch   { // 2 to 4\n                        2: 388\n                        3: 509\n                        4: 455\n                  default: 509\n             }\n        388: iinc          5, 12\n        391: iinc          5, 12\n        394: iinc          5, 12\n        397: iinc          5, 4\n        400: iinc          5, 1\n        403: aload_0\n-       404: new           #203                // class java/util/ArrayList\n+       404: new           #620                // class java/util/ArrayList\n        407: dup\n        408: aload_1\n        409: iload         5\n        411: iconst_4\n-       412: invokestatic  #238                // Method org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n-       415: invokespecial #239                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-       418: putfield      #110                // Field sparseHeaders:Ljava/util/List;\n+       412: invokestatic  #724                // Method org/apache/commons/compress/archivers/tar/TarUtils.readSparseStructs:([BII)Ljava/util/List;\n+       415: invokespecial #728                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+       418: putfield      #347                // Field sparseHeaders:Ljava/util/List;\n        421: iinc          5, 96\n        424: aload_0\n        425: aload_1\n        426: iload         5\n-       428: invokestatic  #240                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-       431: putfield      #140                // Field isExtended:Z\n+       428: invokestatic  #731                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+       431: putfield      #442                // Field isExtended:Z\n        434: iinc          5, 1\n        437: aload_0\n        438: aload_1\n        439: iload         5\n        441: bipush        12\n-       443: invokestatic  #241                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n-       446: putfield      #143                // Field realSize:J\n+       443: invokestatic  #735                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n+       446: putfield      #451                // Field realSize:J\n        449: iinc          5, 12\n        452: goto          592\n        455: iload_3\n        456: ifeq          471\n        459: aload_1\n        460: iload         5\n        462: sipush        131\n-       465: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       465: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n        468: goto          481\n        471: aload_1\n        472: iload         5\n        474: sipush        131\n        477: aload_2\n-       478: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+       478: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n        481: astore        7\n        483: aload         7\n-       485: invokevirtual #242                // Method java/lang/String.isEmpty:()Z\n+       485: invokevirtual #738                // Method java/lang/String.isEmpty:()Z\n        488: ifne          592\n        491: aload_0\n        492: aload         7\n        494: aload_0\n-       495: getfield      #3                  // Field name:Ljava/lang/String;\n-       498: invokedynamic #243,  0            // InvokeDynamic #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-       503: putfield      #3                  // Field name:Ljava/lang/String;\n+       495: getfield      #9                  // Field name:Ljava/lang/String;\n+       498: invokedynamic #739,  0            // InvokeDynamic #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+       503: putfield      #9                  // Field name:Ljava/lang/String;\n        506: goto          592\n        509: iload_3\n        510: ifeq          525\n        513: aload_1\n        514: iload         5\n        516: sipush        155\n-       519: invokestatic  #231                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+       519: invokestatic  #700                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n        522: goto          535\n        525: aload_1\n        526: iload         5\n        528: sipush        155\n        531: aload_2\n-       532: invokestatic  #232                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+       532: invokestatic  #704                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n        535: astore        7\n        537: aload_0\n-       538: invokevirtual #201                // Method isDirectory:()Z\n+       538: invokevirtual #615                // Method isDirectory:()Z\n        541: ifeq          569\n        544: aload_0\n-       545: getfield      #3                  // Field name:Ljava/lang/String;\n-       548: ldc           #31                 // String /\n-       550: invokevirtual #32                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       545: getfield      #9                  // Field name:Ljava/lang/String;\n+       548: ldc           #96                 // String /\n+       550: invokevirtual #98                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n        553: ifne          569\n        556: aload_0\n        557: aload_0\n-       558: getfield      #3                  // Field name:Ljava/lang/String;\n-       561: invokedynamic #84,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-       566: putfield      #3                  // Field name:Ljava/lang/String;\n+       558: getfield      #9                  // Field name:Ljava/lang/String;\n+       561: invokedynamic #261,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+       566: putfield      #9                  // Field name:Ljava/lang/String;\n        569: aload         7\n-       571: invokevirtual #242                // Method java/lang/String.isEmpty:()Z\n+       571: invokevirtual #738                // Method java/lang/String.isEmpty:()Z\n        574: ifne          592\n        577: aload_0\n        578: aload         7\n        580: aload_0\n-       581: getfield      #3                  // Field name:Ljava/lang/String;\n-       584: invokedynamic #243,  0            // InvokeDynamic #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-       589: putfield      #3                  // Field name:Ljava/lang/String;\n+       581: getfield      #9                  // Field name:Ljava/lang/String;\n+       584: invokedynamic #739,  0            // InvokeDynamic #8:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+       589: putfield      #9                  // Field name:Ljava/lang/String;\n        592: return\n       LineNumberTable:\n         line 1604: 0\n         line 1606: 3\n         line 1607: 19\n         line 1608: 31\n         line 1609: 34\n@@ -4241,41 +4241,41 @@\n         line 1611: 53\n         line 1612: 70\n         line 1613: 73\n         line 1614: 90\n         line 1615: 93\n         line 1616: 105\n         line 1617: 114\n-        line 1619: 124\n-        line 1620: 127\n-        line 1621: 142\n-        line 1622: 145\n-        line 1623: 153\n-        line 1624: 156\n-        line 1625: 167\n-        line 1626: 183\n-        line 1627: 195\n-        line 1628: 198\n-        line 1629: 210\n-        line 1630: 213\n-        line 1631: 224\n-        line 1632: 227\n-        line 1633: 243\n-        line 1634: 255\n-        line 1635: 258\n-        line 1636: 274\n-        line 1637: 286\n-        line 1638: 289\n-        line 1639: 307\n-        line 1640: 323\n-        line 1641: 326\n-        line 1642: 342\n-        line 1644: 348\n-        line 1647: 351\n-        line 1648: 358\n+        line 1619: 125\n+        line 1620: 128\n+        line 1621: 143\n+        line 1622: 146\n+        line 1623: 154\n+        line 1624: 157\n+        line 1625: 168\n+        line 1626: 184\n+        line 1627: 196\n+        line 1628: 199\n+        line 1629: 211\n+        line 1630: 214\n+        line 1631: 225\n+        line 1632: 228\n+        line 1633: 244\n+        line 1634: 256\n+        line 1635: 259\n+        line 1636: 275\n+        line 1637: 287\n+        line 1638: 290\n+        line 1639: 308\n+        line 1640: 324\n+        line 1641: 327\n+        line 1642: 343\n+        line 1644: 349\n+        line 1647: 352\n+        line 1648: 359\n         line 1650: 388\n         line 1651: 391\n         line 1652: 394\n         line 1653: 397\n         line 1654: 400\n         line 1655: 403\n         line 1656: 412\n@@ -4304,15 +4304,15 @@\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class \"[B\", class org/apache/commons/compress/archivers/zip/ZipEncoding, int, int, int ]\n           stack = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 8\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class \"[B\", class org/apache/commons/compress/archivers/zip/ZipEncoding, int, int, int ]\n           stack = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class java/lang/String ]\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 95\n+          offset_delta = 96\n         frame_type = 122 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 8\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class \"[B\", class org/apache/commons/compress/archivers/zip/ZipEncoding, int, int, int ]\n           stack = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class java/lang/String ]\n         frame_type = 114 /* same_locals_1_stack_item */\n@@ -4327,15 +4327,15 @@\n           offset_delta = 8\n           locals = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class \"[B\", class org/apache/commons/compress/archivers/zip/ZipEncoding, int, int, int ]\n           stack = [ class org/apache/commons/compress/archivers/tar/TarArchiveEntry, class java/lang/String ]\n         frame_type = 23 /* same */\n         frame_type = 40 /* same */\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 36\n+          offset_delta = 35\n           locals = [ int ]\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 66\n         frame_type = 15 /* same */\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n         frame_type = 27 /* same */\n@@ -4356,23 +4356,23 @@\n     Code:\n       stack=3, locals=6, args_size=5\n          0: iload         4\n          2: ifeq          18\n          5: aload_1\n          6: iload_2\n          7: iload_3\n-         8: invokestatic  #234                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+         8: invokestatic  #711                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n         11: lreturn\n         12: astore        5\n-        14: ldc2_w        #15                 // long -1l\n+        14: ldc2_w        #42                 // long -1l\n         17: lreturn\n         18: aload_1\n         19: iload_2\n         20: iload_3\n-        21: invokestatic  #234                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+        21: invokestatic  #711                // Method org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n         24: lreturn\n       Exception table:\n          from    to  target type\n              5    11    12   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n         line 1691: 0\n         line 1693: 5\n@@ -4386,149 +4386,149 @@\n \n   private static java.lang.String normalizeFileName(java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;Z)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n-         1: ifne          119\n-         4: ldc           #244                // String os.name\n-         6: invokestatic  #245                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-         9: getstatic     #246                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;\n-        12: invokevirtual #247                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-        15: astore_2\n-        16: aload_2\n-        17: ifnull        119\n-        20: aload_2\n-        21: ldc           #248                // String windows\n-        23: invokevirtual #95                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        26: ifeq          90\n-        29: aload_0\n-        30: invokevirtual #20                 // Method java/lang/String.length:()I\n-        33: iconst_2\n-        34: if_icmple     119\n-        37: aload_0\n-        38: iconst_0\n-        39: invokevirtual #83                 // Method java/lang/String.charAt:(I)C\n-        42: istore_3\n-        43: aload_0\n-        44: iconst_1\n-        45: invokevirtual #83                 // Method java/lang/String.charAt:(I)C\n-        48: istore        4\n-        50: iload         4\n-        52: bipush        58\n-        54: if_icmpne     87\n-        57: iload_3\n-        58: bipush        97\n-        60: if_icmplt     69\n-        63: iload_3\n-        64: bipush        122\n-        66: if_icmple     81\n-        69: iload_3\n-        70: bipush        65\n-        72: if_icmplt     87\n-        75: iload_3\n-        76: bipush        90\n-        78: if_icmpgt     87\n-        81: aload_0\n-        82: iconst_2\n-        83: invokevirtual #249                // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        86: astore_0\n-        87: goto          119\n-        90: aload_2\n-        91: ldc           #250                // String netware\n-        93: invokevirtual #251                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-        96: ifeq          119\n-        99: aload_0\n-       100: bipush        58\n-       102: invokevirtual #252                // Method java/lang/String.indexOf:(I)I\n-       105: istore_3\n-       106: iload_3\n-       107: iconst_m1\n-       108: if_icmpeq     119\n-       111: aload_0\n-       112: iload_3\n-       113: iconst_1\n-       114: iadd\n-       115: invokevirtual #249                // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       118: astore_0\n-       119: aload_0\n-       120: getstatic     #253                // Field java/io/File.separatorChar:C\n-       123: bipush        47\n-       125: invokevirtual #254                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n-       128: astore_0\n-       129: iload_1\n-       130: ifne          151\n-       133: aload_0\n-       134: ldc           #31                 // String /\n-       136: invokevirtual #95                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-       139: ifeq          151\n-       142: aload_0\n-       143: iconst_1\n-       144: invokevirtual #249                // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       147: astore_0\n-       148: goto          129\n-       151: aload_0\n-       152: areturn\n+         1: ifne          122\n+         4: ldc_w         #741                // String os.name\n+         7: invokestatic  #743                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+        10: getstatic     #745                // Field java/util/Locale.ENGLISH:Ljava/util/Locale;\n+        13: invokevirtual #751                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+        16: astore_2\n+        17: aload_2\n+        18: ifnull        122\n+        21: aload_2\n+        22: ldc_w         #755                // String windows\n+        25: invokevirtual #296                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        28: ifeq          92\n+        31: aload_0\n+        32: invokevirtual #56                 // Method java/lang/String.length:()I\n+        35: iconst_2\n+        36: if_icmple     122\n+        39: aload_0\n+        40: iconst_0\n+        41: invokevirtual #257                // Method java/lang/String.charAt:(I)C\n+        44: istore_3\n+        45: aload_0\n+        46: iconst_1\n+        47: invokevirtual #257                // Method java/lang/String.charAt:(I)C\n+        50: istore        4\n+        52: iload         4\n+        54: bipush        58\n+        56: if_icmpne     89\n+        59: iload_3\n+        60: bipush        97\n+        62: if_icmplt     71\n+        65: iload_3\n+        66: bipush        122\n+        68: if_icmple     83\n+        71: iload_3\n+        72: bipush        65\n+        74: if_icmplt     89\n+        77: iload_3\n+        78: bipush        90\n+        80: if_icmpgt     89\n+        83: aload_0\n+        84: iconst_2\n+        85: invokevirtual #757                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        88: astore_0\n+        89: goto          122\n+        92: aload_2\n+        93: ldc_w         #759                // String netware\n+        96: invokevirtual #761                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        99: ifeq          122\n+       102: aload_0\n+       103: bipush        58\n+       105: invokevirtual #764                // Method java/lang/String.indexOf:(I)I\n+       108: istore_3\n+       109: iload_3\n+       110: iconst_m1\n+       111: if_icmpeq     122\n+       114: aload_0\n+       115: iload_3\n+       116: iconst_1\n+       117: iadd\n+       118: invokevirtual #757                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       121: astore_0\n+       122: aload_0\n+       123: getstatic     #768                // Field java/io/File.separatorChar:C\n+       126: bipush        47\n+       128: invokevirtual #772                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+       131: astore_0\n+       132: iload_1\n+       133: ifne          154\n+       136: aload_0\n+       137: ldc           #96                 // String /\n+       139: invokevirtual #296                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+       142: ifeq          154\n+       145: aload_0\n+       146: iconst_1\n+       147: invokevirtual #757                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       150: astore_0\n+       151: goto          132\n+       154: aload_0\n+       155: areturn\n       LineNumberTable:\n         line 1707: 0\n         line 1708: 4\n-        line 1710: 16\n-        line 1715: 20\n-        line 1716: 29\n-        line 1717: 37\n-        line 1718: 43\n-        line 1720: 50\n-        line 1723: 81\n-        line 1725: 87\n-        line 1726: 90\n-        line 1727: 99\n-        line 1728: 106\n-        line 1729: 111\n-        line 1735: 119\n-        line 1740: 129\n-        line 1741: 142\n-        line 1743: 151\n+        line 1710: 17\n+        line 1715: 21\n+        line 1716: 31\n+        line 1717: 39\n+        line 1718: 45\n+        line 1720: 52\n+        line 1723: 83\n+        line 1725: 89\n+        line 1726: 92\n+        line 1727: 102\n+        line 1728: 109\n+        line 1729: 114\n+        line 1735: 122\n+        line 1740: 132\n+        line 1741: 145\n+        line 1743: 154\n       StackMapTable: number_of_entries = 7\n         frame_type = 254 /* append */\n-          offset_delta = 69\n+          offset_delta = 71\n           locals = [ class java/lang/String, int, int ]\n         frame_type = 11 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 5\n         frame_type = 2 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 28\n+          offset_delta = 29\n         frame_type = 9 /* same */\n         frame_type = 21 /* same */\n \n   private int evaluateType(byte[]);\n     descriptor: ([B)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: ldc           #41                 // String ustar\n+         0: ldc           #123                // String ustar\n          2: aload_1\n          3: sipush        257\n          6: bipush        6\n-         8: invokestatic  #255                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+         8: invokestatic  #776                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n         11: ifeq          16\n         14: iconst_2\n         15: ireturn\n-        16: ldc           #6                  // String ustar\\u0000\n+        16: ldc           #20                 // String ustar\\u0000\n         18: aload_1\n         19: sipush        257\n         22: bipush        6\n-        24: invokestatic  #255                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+        24: invokestatic  #776                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n         27: ifeq          48\n-        30: ldc_w         #256                // String tar\\u0000\n+        30: ldc_w         #782                // String tar\\u0000\n         33: aload_1\n         34: sipush        508\n         37: iconst_4\n-        38: invokestatic  #255                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+        38: invokestatic  #776                // Method org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n         41: ifeq          46\n         44: iconst_4\n         45: ireturn\n         46: iconst_3\n         47: ireturn\n         48: iconst_0\n         49: ireturn\n@@ -4548,137 +4548,137 @@\n   void fillGNUSparse0xData(java.util.Map<java.lang.String, java.lang.String>);\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #146                // Field paxGNUSparse:Z\n+         2: putfield      #460                // Field paxGNUSparse:Z\n          5: aload_0\n          6: aload_1\n-         7: ldc           #179                // String GNU.sparse.size\n-         9: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        14: checkcast     #160                // class java/lang/String\n-        17: invokestatic  #191                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-        20: i2l\n-        21: putfield      #143                // Field realSize:J\n-        24: aload_1\n-        25: ldc_w         #257                // String GNU.sparse.name\n-        28: invokeinterface #258,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-        33: ifeq          52\n-        36: aload_0\n-        37: aload_1\n-        38: ldc_w         #257                // String GNU.sparse.name\n-        41: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        46: checkcast     #160                // class java/lang/String\n-        49: putfield      #3                  // Field name:Ljava/lang/String;\n-        52: return\n+         7: ldc_w         #550                // String GNU.sparse.size\n+        10: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        15: checkcast     #57                 // class java/lang/String\n+        18: invokestatic  #583                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        21: i2l\n+        22: putfield      #451                // Field realSize:J\n+        25: aload_1\n+        26: ldc_w         #784                // String GNU.sparse.name\n+        29: invokeinterface #786,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        34: ifeq          53\n+        37: aload_0\n+        38: aload_1\n+        39: ldc_w         #784                // String GNU.sparse.name\n+        42: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        47: checkcast     #57                 // class java/lang/String\n+        50: putfield      #9                  // Field name:Ljava/lang/String;\n+        53: return\n       LineNumberTable:\n         line 1767: 0\n         line 1768: 5\n-        line 1769: 24\n-        line 1771: 36\n-        line 1773: 52\n+        line 1769: 25\n+        line 1771: 37\n+        line 1773: 53\n       StackMapTable: number_of_entries = 1\n-        frame_type = 52 /* same */\n-    Signature: #428                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+        frame_type = 53 /* same */\n+    Signature: #863                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   void fillGNUSparse1xData(java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #146                // Field paxGNUSparse:Z\n+         2: putfield      #460                // Field paxGNUSparse:Z\n          5: aload_0\n          6: iconst_1\n-         7: putfield      #132                // Field paxGNU1XSparse:Z\n+         7: putfield      #423                // Field paxGNU1XSparse:Z\n         10: aload_1\n-        11: ldc_w         #257                // String GNU.sparse.name\n-        14: invokeinterface #258,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        11: ldc_w         #784                // String GNU.sparse.name\n+        14: invokeinterface #786,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         19: ifeq          38\n         22: aload_0\n         23: aload_1\n-        24: ldc_w         #257                // String GNU.sparse.name\n-        27: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        32: checkcast     #160                // class java/lang/String\n-        35: putfield      #3                  // Field name:Ljava/lang/String;\n+        24: ldc_w         #784                // String GNU.sparse.name\n+        27: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        32: checkcast     #57                 // class java/lang/String\n+        35: putfield      #9                  // Field name:Ljava/lang/String;\n         38: aload_1\n-        39: ldc           #180                // String GNU.sparse.realsize\n-        41: invokeinterface #258,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-        46: ifeq          89\n-        49: aload_0\n-        50: aload_1\n-        51: ldc           #180                // String GNU.sparse.realsize\n-        53: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        58: checkcast     #160                // class java/lang/String\n-        61: invokestatic  #191                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-        64: i2l\n-        65: putfield      #143                // Field realSize:J\n-        68: goto          89\n-        71: astore_2\n-        72: new           #50                 // class java/io/IOException\n-        75: dup\n-        76: aload_0\n-        77: getfield      #3                  // Field name:Ljava/lang/String;\n-        80: invokedynamic #260,  0            // InvokeDynamic #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        85: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        88: athrow\n-        89: return\n+        39: ldc_w         #552                // String GNU.sparse.realsize\n+        42: invokeinterface #786,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        47: ifeq          91\n+        50: aload_0\n+        51: aload_1\n+        52: ldc_w         #552                // String GNU.sparse.realsize\n+        55: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        60: checkcast     #57                 // class java/lang/String\n+        63: invokestatic  #583                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        66: i2l\n+        67: putfield      #451                // Field realSize:J\n+        70: goto          91\n+        73: astore_2\n+        74: new           #153                // class java/io/IOException\n+        77: dup\n+        78: aload_0\n+        79: getfield      #9                  // Field name:Ljava/lang/String;\n+        82: invokedynamic #791,  0            // InvokeDynamic #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        87: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        90: athrow\n+        91: return\n       Exception table:\n          from    to  target type\n-            49    68    71   Class java/lang/NumberFormatException\n+            50    70    73   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 1776: 0\n         line 1777: 5\n         line 1778: 10\n         line 1779: 22\n         line 1781: 38\n-        line 1783: 49\n-        line 1787: 68\n-        line 1784: 71\n-        line 1785: 72\n-        line 1789: 89\n+        line 1783: 50\n+        line 1787: 70\n+        line 1784: 73\n+        line 1785: 74\n+        line 1789: 91\n       StackMapTable: number_of_entries = 3\n         frame_type = 38 /* same */\n-        frame_type = 96 /* same_locals_1_stack_item */\n+        frame_type = 98 /* same_locals_1_stack_item */\n           stack = [ class java/lang/NumberFormatException ]\n         frame_type = 17 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #428                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #863                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   void fillStarSparseData(java.util.Map<java.lang.String, java.lang.String>) throws java.io.IOException;\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #147                // Field starSparse:Z\n+         2: putfield      #463                // Field starSparse:Z\n          5: aload_1\n-         6: ldc_w         #261                // String SCHILY.realsize\n-         9: invokeinterface #258,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+         6: ldc_w         #792                // String SCHILY.realsize\n+         9: invokeinterface #786,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         14: ifeq          57\n         17: aload_0\n         18: aload_1\n-        19: ldc_w         #261                // String SCHILY.realsize\n-        22: invokeinterface #159,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        27: checkcast     #160                // class java/lang/String\n-        30: invokestatic  #184                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n-        33: putfield      #143                // Field realSize:J\n+        19: ldc_w         #792                // String SCHILY.realsize\n+        22: invokeinterface #501,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        27: checkcast     #57                 // class java/lang/String\n+        30: invokestatic  #562                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+        33: putfield      #451                // Field realSize:J\n         36: goto          57\n         39: astore_2\n-        40: new           #50                 // class java/io/IOException\n+        40: new           #153                // class java/io/IOException\n         43: dup\n         44: aload_0\n-        45: getfield      #3                  // Field name:Ljava/lang/String;\n-        48: invokedynamic #262,  0            // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        53: invokespecial #128                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        45: getfield      #9                  // Field name:Ljava/lang/String;\n+        48: invokedynamic #794,  0            // InvokeDynamic #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        53: invokespecial #415                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         56: athrow\n         57: return\n       Exception table:\n          from    to  target type\n             17    36    39   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 1792: 0\n@@ -4690,28 +4690,28 @@\n         line 1801: 57\n       StackMapTable: number_of_entries = 2\n         frame_type = 103 /* same_locals_1_stack_item */\n           stack = [ class java/lang/NumberFormatException ]\n         frame_type = 17 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #428                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #863                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   private static boolean lambda$getOrderedSparseHeaders$0(org.apache.commons.compress.archivers.tar.TarArchiveStructSparse);\n     descriptor: (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #125                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+         1: invokevirtual #408                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          18\n          9: aload_0\n-        10: invokevirtual #126                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+        10: invokevirtual #411                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n         13: lconst_0\n         14: lcmp\n         15: ifle          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n@@ -4725,55 +4725,55 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #21                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-         4: putstatic     #202                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+         1: anewarray     #10                 // class org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+         4: putstatic     #616                // Field EMPTY_TAR_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n          7: return\n       LineNumberTable:\n         line 165: 0\n }\n SourceFile: \"TarArchiveEntry.java\"\n-InnerClasses:\n-  public static #636= #165 of #431;       // Entry=class java/util/Map$Entry of class java/util/Map\n-  public static final #917= #916 of #922; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #540 \\u0001/\n-  1: #573 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #883 \\u0001/\n+  1: #885 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #574 (Ljava/lang/Object;)Z\n-      #575 REF_invokeStatic org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-      #576 (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n-  2: #573 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #892 (Ljava/lang/Object;)Z\n+      #893 REF_invokeStatic org/apache/commons/compress/archivers/tar/TarArchiveEntry.lambda$getOrderedSparseHeaders$0:(Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+      #896 (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)Z\n+  2: #885 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #580 (Ljava/lang/Object;)J\n-      #581 REF_invokeVirtual org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n-      #582 (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n-  3: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #897 (Ljava/lang/Object;)J\n+      #899 REF_invokeVirtual org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+      #900 (Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;)J\n+  3: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #596 Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n-  4: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #902 Corrupted TAR archive. Sparse blocks for \\u0001 overlap each other.\n+  4: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #598 Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n-  5: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #904 Unreadable TAR archive. Offset and numbytes for sparse block in \\u0001 too large.\n+  5: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #603 Size is out of range: \\u0001\n-  6: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #906 Size is out of range: \\u0001\n+  6: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #606 Major device number is out of range: \\u0001\n-  7: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #908 Major device number is out of range: \\u0001\n+  7: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #609 Minor device number is out of range: \\u0001\n-  8: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #910 Minor device number is out of range: \\u0001\n+  8: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #710 \\u0001/\\u0001\n-  9: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #912 \\u0001/\\u0001\n+  9: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #730 Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n-  10: #539 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #914 Corrupted TAR archive. GNU.sparse.realsize header for \\u0001 contains non-numeric value\n+  10: #877 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #732 Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n+      #916 Corrupted TAR archive. SCHILY.realsize header for \\u0001 contains non-numeric value\n+InnerClasses:\n+  public static #919= #520 of #488;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  public static final #924= #920 of #922; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
