{"diffoscope-json-version": 1, "source1": "first/ZipShort.class", "source2": "second/ZipShort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,120 +1,120 @@\n-  SHA-256 checksum 00efea0da3dfddf58f0a2ebfb970eef58f942d98a1a1b6512b7fac5b6be4195a\n+  SHA-256 checksum 6221d2854909305bad34565e24baf3baadf6d3b888a5aa5183868912d50a577a\n   Compiled from \"ZipShort.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipShort implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipShort\n-  super_class: #22                        // java/lang/Object\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #22.#72       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #8.#73        // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n-    #3 = Methodref          #8.#74        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-    #4 = Methodref          #8.#75        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #5 = Methodref          #76.#77       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-    #6 = Methodref          #8.#78        // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-    #7 = Methodref          #76.#79       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-    #8 = Class              #80           // org/apache/commons/compress/archivers/zip/ZipShort\n-    #9 = Methodref          #8.#81        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #10 = Methodref          #22.#82       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #11 = Class              #83           // java/lang/CloneNotSupportedException\n-   #12 = Class              #84           // java/lang/IllegalStateException\n-   #13 = Methodref          #12.#85       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #14 = Class              #86           // java/lang/StringBuilder\n-   #15 = Methodref          #14.#72       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #87           // ZipShort value:\n-   #17 = Methodref          #14.#88       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #14.#89       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #19 = Methodref          #14.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = Methodref          #8.#91        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #21 = Fieldref           #8.#92        // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #22 = Class              #93           // java/lang/Object\n-   #23 = Class              #94           // java/lang/Cloneable\n-   #24 = Class              #95           // java/io/Serializable\n-   #25 = Utf8               ZERO\n-   #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #27 = Utf8               serialVersionUID\n-   #28 = Utf8               J\n-   #29 = Utf8               ConstantValue\n-   #30 = Long               1l\n-   #32 = Utf8               value\n-   #33 = Utf8               I\n-   #34 = Utf8               <init>\n-   #35 = Utf8               (I)V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               LocalVariableTable\n-   #39 = Utf8               this\n-   #40 = Utf8               ([B)V\n-   #41 = Utf8               bytes\n-   #42 = Utf8               [B\n-   #43 = Utf8               ([BI)V\n-   #44 = Utf8               offset\n-   #45 = Utf8               getBytes\n-   #46 = Utf8               ()[B\n-   #47 = Utf8               result\n-   #48 = Utf8               getValue\n-   #49 = Utf8               ()I\n-   #50 = Utf8               (I)[B\n-   #51 = Utf8               putShort\n-   #52 = Utf8               (I[BI)V\n-   #53 = Utf8               buf\n-   #54 = Utf8               ([BI)I\n-   #55 = Utf8               ([B)I\n-   #56 = Utf8               equals\n-   #57 = Utf8               (Ljava/lang/Object;)Z\n-   #58 = Utf8               o\n-   #59 = Utf8               Ljava/lang/Object;\n-   #60 = Utf8               StackMapTable\n-   #61 = Utf8               hashCode\n-   #62 = Utf8               clone\n-   #63 = Utf8               ()Ljava/lang/Object;\n-   #64 = Utf8               cnfe\n-   #65 = Utf8               Ljava/lang/CloneNotSupportedException;\n-   #66 = Utf8               toString\n-   #67 = Utf8               ()Ljava/lang/String;\n-   #68 = Utf8               <clinit>\n-   #69 = Utf8               ()V\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               ZipShort.java\n-   #72 = NameAndType        #34:#69       // \"<init>\":()V\n-   #73 = NameAndType        #32:#33       // value:I\n-   #74 = NameAndType        #34:#43       // \"<init>\":([BI)V\n-   #75 = NameAndType        #48:#54       // getValue:([BI)I\n-   #76 = Class              #96           // org/apache/commons/compress/utils/ByteUtils\n-   #77 = NameAndType        #97:#98       // toLittleEndian:([BJII)V\n-   #78 = NameAndType        #51:#52       // putShort:(I[BI)V\n-   #79 = NameAndType        #99:#100      // fromLittleEndian:([BII)J\n-   #80 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #81 = NameAndType        #48:#49       // getValue:()I\n-   #82 = NameAndType        #62:#63       // clone:()Ljava/lang/Object;\n-   #83 = Utf8               java/lang/CloneNotSupportedException\n-   #84 = Utf8               java/lang/IllegalStateException\n-   #85 = NameAndType        #34:#101      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #86 = Utf8               java/lang/StringBuilder\n-   #87 = Utf8               ZipShort value:\n-   #88 = NameAndType        #102:#103     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #89 = NameAndType        #102:#104     // append:(I)Ljava/lang/StringBuilder;\n-   #90 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-   #91 = NameAndType        #34:#35       // \"<init>\":(I)V\n-   #92 = NameAndType        #25:#26       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #93 = Utf8               java/lang/Object\n-   #94 = Utf8               java/lang/Cloneable\n-   #95 = Utf8               java/io/Serializable\n-   #96 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-   #97 = Utf8               toLittleEndian\n-   #98 = Utf8               ([BJII)V\n-   #99 = Utf8               fromLittleEndian\n-  #100 = Utf8               ([BII)J\n-  #101 = Utf8               (Ljava/lang/Throwable;)V\n-  #102 = Utf8               append\n-  #103 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #104 = Utf8               (I)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/zip/ZipShort\n+    #9 = NameAndType        #11:#12       // value:I\n+   #10 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #11 = Utf8               value\n+   #12 = Utf8               I\n+   #13 = Methodref          #8.#14        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #14 = NameAndType        #5:#15        // \"<init>\":([BI)V\n+   #15 = Utf8               ([BI)V\n+   #16 = Methodref          #8.#17        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #17 = NameAndType        #18:#19       // getValue:([BI)I\n+   #18 = Utf8               getValue\n+   #19 = Utf8               ([BI)I\n+   #20 = Methodref          #21.#22       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #21 = Class              #23           // org/apache/commons/compress/utils/ByteUtils\n+   #22 = NameAndType        #24:#25       // toLittleEndian:([BJII)V\n+   #23 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #24 = Utf8               toLittleEndian\n+   #25 = Utf8               ([BJII)V\n+   #26 = Methodref          #8.#27        // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #27 = NameAndType        #28:#29       // putShort:(I[BI)V\n+   #28 = Utf8               putShort\n+   #29 = Utf8               (I[BI)V\n+   #30 = Methodref          #21.#31       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #31 = NameAndType        #32:#33       // fromLittleEndian:([BII)J\n+   #32 = Utf8               fromLittleEndian\n+   #33 = Utf8               ([BII)J\n+   #34 = Methodref          #8.#35        // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #35 = NameAndType        #18:#36       // getValue:()I\n+   #36 = Utf8               ()I\n+   #37 = Methodref          #2.#38        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #38 = NameAndType        #39:#40       // clone:()Ljava/lang/Object;\n+   #39 = Utf8               clone\n+   #40 = Utf8               ()Ljava/lang/Object;\n+   #41 = Class              #42           // java/lang/CloneNotSupportedException\n+   #42 = Utf8               java/lang/CloneNotSupportedException\n+   #43 = Class              #44           // java/lang/IllegalStateException\n+   #44 = Utf8               java/lang/IllegalStateException\n+   #45 = Methodref          #43.#46       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #46 = NameAndType        #5:#47        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #47 = Utf8               (Ljava/lang/Throwable;)V\n+   #48 = Class              #49           // java/lang/StringBuilder\n+   #49 = Utf8               java/lang/StringBuilder\n+   #50 = Methodref          #48.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #51 = String             #52           // ZipShort value:\n+   #52 = Utf8               ZipShort value:\n+   #53 = Methodref          #48.#54       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #54 = NameAndType        #55:#56       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #55 = Utf8               append\n+   #56 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = Methodref          #48.#58       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #58 = NameAndType        #55:#59       // append:(I)Ljava/lang/StringBuilder;\n+   #59 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #60 = Methodref          #48.#61       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #61 = NameAndType        #62:#63       // toString:()Ljava/lang/String;\n+   #62 = Utf8               toString\n+   #63 = Utf8               ()Ljava/lang/String;\n+   #64 = Methodref          #8.#65        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #65 = NameAndType        #5:#66        // \"<init>\":(I)V\n+   #66 = Utf8               (I)V\n+   #67 = Fieldref           #8.#68        // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #68 = NameAndType        #69:#70       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #69 = Utf8               ZERO\n+   #70 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #71 = Class              #72           // java/lang/Cloneable\n+   #72 = Utf8               java/lang/Cloneable\n+   #73 = Class              #74           // java/io/Serializable\n+   #74 = Utf8               java/io/Serializable\n+   #75 = Utf8               serialVersionUID\n+   #76 = Utf8               J\n+   #77 = Utf8               ConstantValue\n+   #78 = Long               1l\n+   #80 = Utf8               Code\n+   #81 = Utf8               LineNumberTable\n+   #82 = Utf8               LocalVariableTable\n+   #83 = Utf8               this\n+   #84 = Utf8               ([B)V\n+   #85 = Utf8               bytes\n+   #86 = Utf8               [B\n+   #87 = Utf8               offset\n+   #88 = Utf8               getBytes\n+   #89 = Utf8               ()[B\n+   #90 = Utf8               result\n+   #91 = Utf8               (I)[B\n+   #92 = Utf8               buf\n+   #93 = Utf8               ([B)I\n+   #94 = Utf8               equals\n+   #95 = Utf8               (Ljava/lang/Object;)Z\n+   #96 = Utf8               o\n+   #97 = Utf8               Ljava/lang/Object;\n+   #98 = Utf8               StackMapTable\n+   #99 = Utf8               hashCode\n+  #100 = Utf8               cnfe\n+  #101 = Utf8               Ljava/lang/CloneNotSupportedException;\n+  #102 = Utf8               <clinit>\n+  #103 = Utf8               SourceFile\n+  #104 = Utf8               ZipShort.java\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 1l;\n     descriptor: J\n@@ -130,15 +130,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field value:I\n+         6: putfield      #7                  // Field value:I\n          9: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 4\n         line 46: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -149,15 +149,15 @@\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #3                  // Method \"<init>\":([BI)V\n+         3: invokespecial #13                 // Method \"<init>\":([BI)V\n          6: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n@@ -169,16 +169,16 @@\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: iload_2\n-         7: invokestatic  #4                  // Method getValue:([BI)I\n-        10: putfield      #2                  // Field value:I\n+         7: invokestatic  #16                 // Method getValue:([BI)I\n+        10: putfield      #7                  // Field value:I\n         13: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 4\n         line 63: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -192,19 +192,19 @@\n     Code:\n       stack=5, locals=2, args_size=1\n          0: iconst_2\n          1: newarray       byte\n          3: astore_1\n          4: aload_1\n          5: aload_0\n-         6: getfield      #2                  // Field value:I\n+         6: getfield      #7                  // Field value:I\n          9: i2l\n         10: iconst_0\n         11: iconst_2\n-        12: invokestatic  #5                  // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+        12: invokestatic  #20                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n         15: aload_1\n         16: areturn\n       LineNumberTable:\n         line 70: 0\n         line 71: 4\n         line 72: 15\n       LocalVariableTable:\n@@ -214,15 +214,15 @@\n \n   public int getValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: ireturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n \n@@ -233,15 +233,15 @@\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n          1: newarray       byte\n          3: astore_1\n          4: iload_0\n          5: aload_1\n          6: iconst_0\n-         7: invokestatic  #6                  // Method putShort:(I[BI)V\n+         7: invokestatic  #26                 // Method putShort:(I[BI)V\n         10: aload_1\n         11: areturn\n       LineNumberTable:\n         line 89: 0\n         line 90: 4\n         line 91: 10\n       LocalVariableTable:\n@@ -255,15 +255,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_1\n          1: iload_0\n          2: i2l\n          3: iload_2\n          4: iconst_2\n-         5: invokestatic  #5                  // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+         5: invokestatic  #20                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n          8: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 value   I\n@@ -274,15 +274,15 @@\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_2\n-         3: invokestatic  #7                  // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+         3: invokestatic  #30                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n          6: l2i\n          7: ireturn\n       LineNumberTable:\n         line 113: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 bytes   [B\n@@ -291,15 +291,15 @@\n   public static int getValue(byte[]);\n     descriptor: ([B)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #4                  // Method getValue:([BI)I\n+         2: invokestatic  #16                 // Method getValue:([BI)I\n          5: ireturn\n       LineNumberTable:\n         line 122: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 bytes   [B\n \n@@ -310,18 +310,18 @@\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: instanceof    #8                  // class org/apache/commons/compress/archivers/zip/ZipShort\n          4: ifne          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: getfield      #2                  // Field value:I\n+        10: getfield      #7                  // Field value:I\n         13: aload_1\n         14: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ZipShort\n-        17: invokevirtual #9                  // Method getValue:()I\n+        17: invokevirtual #34                 // Method getValue:()I\n         20: if_icmpne     27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 132: 0\n@@ -339,35 +339,35 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: ireturn\n       LineNumberTable:\n         line 144: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #10                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         1: invokespecial #37                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #12                 // class java/lang/IllegalStateException\n+         6: new           #43                 // class java/lang/IllegalStateException\n          9: dup\n         10: aload_1\n-        11: invokespecial #13                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+        11: invokespecial #45                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n         14: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 150: 0\n         line 151: 5\n@@ -381,23 +381,23 @@\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/StringBuilder\n+         0: new           #48                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #16                 // String ZipShort value:\n-         9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #50                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #51                 // String ZipShort value:\n+         9: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #2                  // Field value:I\n-        16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        13: getfield      #7                  // Field value:I\n+        16: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 159: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n \n@@ -405,14 +405,14 @@\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_0\n-         5: invokespecial #20                 // Method \"<init>\":(I)V\n-         8: putstatic     #21                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         5: invokespecial #64                 // Method \"<init>\":(I)V\n+         8: putstatic     #67                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         11: return\n       LineNumberTable:\n         line 34: 0\n }\n SourceFile: \"ZipShort.java\"\n"}]}
