{"diffoscope-json-version": 1, "source1": "first/UnrecognizedExtraField.class", "source2": "second/UnrecognizedExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,32 +1,32 @@\n-  SHA-256 checksum 60602157ed58522851bb51029c2157993477270f5b74e4c9b75c6140bc634595\n+  SHA-256 checksum 6743670f5bb9cb605492653b297ab8736af0e7d6423331c65dd0a8dc87503e8c\n   Compiled from \"UnrecognizedExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.UnrecognizedExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #13                         // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n   super_class: #14                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#53        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #13.#54        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #3 = Methodref          #55.#56        // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-   #4 = Fieldref           #13.#57        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.localData:[B\n-   #5 = Class              #58            // org/apache/commons/compress/archivers/zip/ZipShort\n-   #6 = Methodref          #5.#59         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #7 = Fieldref           #13.#60        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.centralData:[B\n-   #8 = Methodref          #13.#61        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #9 = Methodref          #13.#62        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataData:()[B\n-  #10 = Methodref          #63.#64        // java/util/Arrays.copyOfRange:([BII)[B\n-  #11 = Methodref          #13.#65        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n-  #12 = Methodref          #13.#66        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n-  #13 = Class              #67            // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #14 = Class              #68            // java/lang/Object\n-  #15 = Class              #69            // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #1 = Methodref          #14.#52        // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #13.#53        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #3 = Methodref          #54.#55        // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+   #4 = Fieldref           #13.#56        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.localData:[B\n+   #5 = Class              #57            // org/apache/commons/compress/archivers/zip/ZipShort\n+   #6 = Methodref          #5.#58         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #7 = Fieldref           #13.#59        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.centralData:[B\n+   #8 = Methodref          #13.#60        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #9 = Methodref          #13.#61        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.getLocalFileDataData:()[B\n+  #10 = Methodref          #62.#63        // java/util/Arrays.copyOfRange:([BII)[B\n+  #11 = Methodref          #13.#64        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+  #12 = Methodref          #13.#65        // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+  #13 = Class              #66            // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #14 = Class              #67            // java/lang/Object\n+  #15 = Class              #68            // org/apache/commons/compress/archivers/zip/ZipExtraField\n   #16 = Utf8               headerId\n   #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n   #18 = Utf8               localData\n   #19 = Utf8               [B\n   #20 = Utf8               centralData\n   #21 = Utf8               <init>\n   #22 = Utf8               ()V\n@@ -40,54 +40,53 @@\n   #30 = Utf8               getHeaderId\n   #31 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n   #32 = Utf8               setLocalFileDataData\n   #33 = Utf8               ([B)V\n   #34 = Utf8               data\n   #35 = Utf8               getLocalFileDataLength\n   #36 = Utf8               StackMapTable\n-  #37 = Class              #67            // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #38 = Utf8               getLocalFileDataData\n-  #39 = Utf8               ()[B\n-  #40 = Utf8               setCentralDirectoryData\n-  #41 = Utf8               getCentralDirectoryLength\n-  #42 = Utf8               getCentralDirectoryData\n-  #43 = Utf8               parseFromLocalFileData\n-  #44 = Utf8               ([BII)V\n-  #45 = Utf8               offset\n-  #46 = Utf8               I\n-  #47 = Utf8               length\n-  #48 = Utf8               parseFromCentralDirectoryData\n-  #49 = Utf8               tmp\n-  #50 = Class              #19            // \"[B\"\n-  #51 = Utf8               SourceFile\n-  #52 = Utf8               UnrecognizedExtraField.java\n-  #53 = NameAndType        #21:#22        // \"<init>\":()V\n-  #54 = NameAndType        #16:#17        // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #55 = Class              #70            // org/apache/commons/compress/archivers/zip/ZipUtil\n-  #56 = NameAndType        #71:#72        // copy:([B)[B\n-  #57 = NameAndType        #18:#19        // localData:[B\n-  #58 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #59 = NameAndType        #21:#73        // \"<init>\":(I)V\n-  #60 = NameAndType        #20:#19        // centralData:[B\n-  #61 = NameAndType        #35:#31        // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #62 = NameAndType        #38:#39        // getLocalFileDataData:()[B\n-  #63 = Class              #74            // java/util/Arrays\n-  #64 = NameAndType        #75:#76        // copyOfRange:([BII)[B\n-  #65 = NameAndType        #32:#33        // setLocalFileDataData:([B)V\n-  #66 = NameAndType        #40:#33        // setCentralDirectoryData:([B)V\n-  #67 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #68 = Utf8               java/lang/Object\n-  #69 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #70 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-  #71 = Utf8               copy\n-  #72 = Utf8               ([B)[B\n-  #73 = Utf8               (I)V\n-  #74 = Utf8               java/util/Arrays\n-  #75 = Utf8               copyOfRange\n-  #76 = Utf8               ([BII)[B\n+  #37 = Utf8               getLocalFileDataData\n+  #38 = Utf8               ()[B\n+  #39 = Utf8               setCentralDirectoryData\n+  #40 = Utf8               getCentralDirectoryLength\n+  #41 = Utf8               getCentralDirectoryData\n+  #42 = Utf8               parseFromLocalFileData\n+  #43 = Utf8               ([BII)V\n+  #44 = Utf8               offset\n+  #45 = Utf8               I\n+  #46 = Utf8               length\n+  #47 = Utf8               parseFromCentralDirectoryData\n+  #48 = Utf8               tmp\n+  #49 = Class              #19            // \"[B\"\n+  #50 = Utf8               SourceFile\n+  #51 = Utf8               UnrecognizedExtraField.java\n+  #52 = NameAndType        #21:#22        // \"<init>\":()V\n+  #53 = NameAndType        #16:#17        // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #54 = Class              #69            // org/apache/commons/compress/archivers/zip/ZipUtil\n+  #55 = NameAndType        #70:#71        // copy:([B)[B\n+  #56 = NameAndType        #18:#19        // localData:[B\n+  #57 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #58 = NameAndType        #21:#72        // \"<init>\":(I)V\n+  #59 = NameAndType        #20:#19        // centralData:[B\n+  #60 = NameAndType        #35:#31        // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #61 = NameAndType        #37:#38        // getLocalFileDataData:()[B\n+  #62 = Class              #73            // java/util/Arrays\n+  #63 = NameAndType        #74:#75        // copyOfRange:([BII)[B\n+  #64 = NameAndType        #32:#33        // setLocalFileDataData:([B)V\n+  #65 = NameAndType        #39:#33        // setCentralDirectoryData:([B)V\n+  #66 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #67 = Utf8               java/lang/Object\n+  #68 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #69 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+  #70 = Utf8               copy\n+  #71 = Utf8               ([B)[B\n+  #72 = Utf8               (I)V\n+  #73 = Utf8               java/util/Arrays\n+  #74 = Utf8               copyOfRange\n+  #75 = Utf8               ([BII)[B\n {\n   private org.apache.commons.compress.archivers.zip.ZipShort headerId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] localData;\n     descriptor: [B\n"}]}
