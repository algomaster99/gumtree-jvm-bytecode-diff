{"diffoscope-json-version": 1, "source1": "first/GmtTimeZone.class", "source2": "second/GmtTimeZone.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum 1269af57393c34df33c155592654da1f2faa18d75a0cc7bd240b70b05d669b7d\n+  SHA-256 checksum db2f17d0fd12f5c6e67bc100fece8cebf8041b8259b9c8b4b142d1f1f767bd9b\n   Compiled from \"GmtTimeZone.java\"\n class org.apache.commons.lang3.time.GmtTimeZone extends java.util.TimeZone\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #2                          // org/apache/commons/lang3/time/GmtTimeZone\n   super_class: #23                        // java/util/TimeZone\n   interfaces: 0, fields: 6, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#65        // java/util/TimeZone.\"<init>\":()V\n-   #2 = Class              #66            // org/apache/commons/lang3/time/GmtTimeZone\n-   #3 = Class              #67            // java/lang/IllegalArgumentException\n-   #4 = Class              #68            // java/lang/StringBuilder\n-   #5 = Methodref          #4.#65         // java/lang/StringBuilder.\"<init>\":()V\n-   #6 = Methodref          #4.#69         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #7 = String             #70            //  hours out of range\n-   #8 = Methodref          #4.#71         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #9 = Methodref          #4.#72         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #3.#73         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = String             #74            //  minutes out of range\n+   #1 = Methodref          #23.#63        // java/util/TimeZone.\"<init>\":()V\n+   #2 = Class              #64            // org/apache/commons/lang3/time/GmtTimeZone\n+   #3 = Class              #65            // java/lang/IllegalArgumentException\n+   #4 = Class              #66            // java/lang/StringBuilder\n+   #5 = Methodref          #4.#63         // java/lang/StringBuilder.\"<init>\":()V\n+   #6 = Methodref          #4.#67         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #7 = String             #68            //  hours out of range\n+   #8 = Methodref          #4.#69         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #9 = Methodref          #4.#70         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #10 = Methodref          #3.#71         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = String             #72            //  minutes out of range\n   #12 = Integer            60000\n-  #13 = Fieldref           #2.#75         // org/apache/commons/lang3/time/GmtTimeZone.offset:I\n-  #14 = Methodref          #4.#76         // java/lang/StringBuilder.\"<init>\":(I)V\n-  #15 = String             #77            // GMT\n-  #16 = Methodref          #4.#78         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #17 = Methodref          #2.#79         // org/apache/commons/lang3/time/GmtTimeZone.twoDigits:(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n-  #18 = Fieldref           #2.#80         // org/apache/commons/lang3/time/GmtTimeZone.zoneId:Ljava/lang/String;\n-  #19 = Class              #81            // java/lang/UnsupportedOperationException\n-  #20 = Methodref          #19.#65        // java/lang/UnsupportedOperationException.\"<init>\":()V\n-  #21 = String             #82            // [GmtTimeZone id=\\\"\n-  #22 = String             #83            // \\\",offset=\n-  #23 = Class              #84            // java/util/TimeZone\n+  #13 = Fieldref           #2.#73         // org/apache/commons/lang3/time/GmtTimeZone.offset:I\n+  #14 = Methodref          #4.#74         // java/lang/StringBuilder.\"<init>\":(I)V\n+  #15 = String             #75            // GMT\n+  #16 = Methodref          #4.#76         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #17 = Methodref          #2.#77         // org/apache/commons/lang3/time/GmtTimeZone.twoDigits:(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n+  #18 = Fieldref           #2.#78         // org/apache/commons/lang3/time/GmtTimeZone.zoneId:Ljava/lang/String;\n+  #19 = Class              #79            // java/lang/UnsupportedOperationException\n+  #20 = Methodref          #19.#63        // java/lang/UnsupportedOperationException.\"<init>\":()V\n+  #21 = String             #80            // [GmtTimeZone id=\\\"\n+  #22 = String             #81            // \\\",offset=\n+  #23 = Class              #82            // java/util/TimeZone\n   #24 = Utf8               MILLISECONDS_PER_MINUTE\n   #25 = Utf8               I\n   #26 = Utf8               ConstantValue\n   #27 = Utf8               MINUTES_PER_HOUR\n   #28 = Integer            60\n   #29 = Utf8               HOURS_PER_DAY\n   #30 = Integer            24\n@@ -45,62 +45,60 @@\n   #36 = Utf8               zoneId\n   #37 = Utf8               Ljava/lang/String;\n   #38 = Utf8               <init>\n   #39 = Utf8               (ZII)V\n   #40 = Utf8               Code\n   #41 = Utf8               LineNumberTable\n   #42 = Utf8               StackMapTable\n-  #43 = Class              #66            // org/apache/commons/lang3/time/GmtTimeZone\n-  #44 = Class              #68            // java/lang/StringBuilder\n-  #45 = Utf8               twoDigits\n-  #46 = Utf8               (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n-  #47 = Utf8               getOffset\n-  #48 = Utf8               (IIIIII)I\n-  #49 = Utf8               setRawOffset\n-  #50 = Utf8               (I)V\n-  #51 = Utf8               getRawOffset\n-  #52 = Utf8               ()I\n-  #53 = Utf8               getID\n-  #54 = Utf8               ()Ljava/lang/String;\n-  #55 = Utf8               useDaylightTime\n-  #56 = Utf8               ()Z\n-  #57 = Utf8               inDaylightTime\n-  #58 = Utf8               (Ljava/util/Date;)Z\n-  #59 = Utf8               toString\n-  #60 = Utf8               hashCode\n-  #61 = Utf8               equals\n-  #62 = Utf8               (Ljava/lang/Object;)Z\n-  #63 = Utf8               SourceFile\n-  #64 = Utf8               GmtTimeZone.java\n-  #65 = NameAndType        #38:#85        // \"<init>\":()V\n-  #66 = Utf8               org/apache/commons/lang3/time/GmtTimeZone\n-  #67 = Utf8               java/lang/IllegalArgumentException\n-  #68 = Utf8               java/lang/StringBuilder\n-  #69 = NameAndType        #86:#87        // append:(I)Ljava/lang/StringBuilder;\n-  #70 = Utf8                hours out of range\n-  #71 = NameAndType        #86:#88        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #72 = NameAndType        #59:#54        // toString:()Ljava/lang/String;\n-  #73 = NameAndType        #38:#89        // \"<init>\":(Ljava/lang/String;)V\n-  #74 = Utf8                minutes out of range\n-  #75 = NameAndType        #35:#25        // offset:I\n-  #76 = NameAndType        #38:#50        // \"<init>\":(I)V\n-  #77 = Utf8               GMT\n-  #78 = NameAndType        #86:#90        // append:(C)Ljava/lang/StringBuilder;\n-  #79 = NameAndType        #45:#46        // twoDigits:(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n-  #80 = NameAndType        #36:#37        // zoneId:Ljava/lang/String;\n-  #81 = Utf8               java/lang/UnsupportedOperationException\n-  #82 = Utf8               [GmtTimeZone id=\\\"\n-  #83 = Utf8               \\\",offset=\n-  #84 = Utf8               java/util/TimeZone\n-  #85 = Utf8               ()V\n-  #86 = Utf8               append\n-  #87 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #88 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #89 = Utf8               (Ljava/lang/String;)V\n-  #90 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #43 = Utf8               twoDigits\n+  #44 = Utf8               (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n+  #45 = Utf8               getOffset\n+  #46 = Utf8               (IIIIII)I\n+  #47 = Utf8               setRawOffset\n+  #48 = Utf8               (I)V\n+  #49 = Utf8               getRawOffset\n+  #50 = Utf8               ()I\n+  #51 = Utf8               getID\n+  #52 = Utf8               ()Ljava/lang/String;\n+  #53 = Utf8               useDaylightTime\n+  #54 = Utf8               ()Z\n+  #55 = Utf8               inDaylightTime\n+  #56 = Utf8               (Ljava/util/Date;)Z\n+  #57 = Utf8               toString\n+  #58 = Utf8               hashCode\n+  #59 = Utf8               equals\n+  #60 = Utf8               (Ljava/lang/Object;)Z\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               GmtTimeZone.java\n+  #63 = NameAndType        #38:#83        // \"<init>\":()V\n+  #64 = Utf8               org/apache/commons/lang3/time/GmtTimeZone\n+  #65 = Utf8               java/lang/IllegalArgumentException\n+  #66 = Utf8               java/lang/StringBuilder\n+  #67 = NameAndType        #84:#85        // append:(I)Ljava/lang/StringBuilder;\n+  #68 = Utf8                hours out of range\n+  #69 = NameAndType        #84:#86        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #70 = NameAndType        #57:#52        // toString:()Ljava/lang/String;\n+  #71 = NameAndType        #38:#87        // \"<init>\":(Ljava/lang/String;)V\n+  #72 = Utf8                minutes out of range\n+  #73 = NameAndType        #35:#25        // offset:I\n+  #74 = NameAndType        #38:#48        // \"<init>\":(I)V\n+  #75 = Utf8               GMT\n+  #76 = NameAndType        #84:#88        // append:(C)Ljava/lang/StringBuilder;\n+  #77 = NameAndType        #43:#44        // twoDigits:(Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder;\n+  #78 = NameAndType        #36:#37        // zoneId:Ljava/lang/String;\n+  #79 = Utf8               java/lang/UnsupportedOperationException\n+  #80 = Utf8               [GmtTimeZone id=\\\"\n+  #81 = Utf8               \\\",offset=\n+  #82 = Utf8               java/util/TimeZone\n+  #83 = Utf8               ()V\n+  #84 = Utf8               append\n+  #85 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #86 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #87 = Utf8               (Ljava/lang/String;)V\n+  #88 = Utf8               (C)Ljava/lang/StringBuilder;\n {\n   private static final int MILLISECONDS_PER_MINUTE = 60000;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 60000\n \n   private static final int MINUTES_PER_HOUR = 60;\n"}]}
