{"diffoscope-json-version": 1, "source1": "first/X000A_NTFS.class", "source2": "second/X000A_NTFS.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,71 +1,71 @@\n-  SHA-256 checksum f001e9dc846c7ede10998054ba3c0408b0edfa6db61edc4315dcf566aab0b27f\n+  SHA-256 checksum bdd79784fb1ce29c0e30676380996865f1f8733460d3182c5bf503a26192a513\n   Compiled from \"X000A_NTFS.java\"\n public class org.apache.commons.compress.archivers.zip.X000A_NTFS implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #40                         // org/apache/commons/compress/archivers/zip/X000A_NTFS\n   super_class: #55                        // java/lang/Object\n   interfaces: 1, fields: 7, methods: 28, attributes: 1\n Constant pool:\n-    #1 = Methodref          #55.#144      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #44.#145      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #3 = Fieldref           #40.#146      // org/apache/commons/compress/archivers/zip/X000A_NTFS.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #4 = Fieldref           #40.#147      // org/apache/commons/compress/archivers/zip/X000A_NTFS.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #5 = Fieldref           #40.#148      // org/apache/commons/compress/archivers/zip/X000A_NTFS.createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-    #6 = Fieldref           #40.#149      // org/apache/commons/compress/archivers/zip/X000A_NTFS.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #7 = Class              #150          // org/apache/commons/compress/archivers/zip/ZipShort\n-    #8 = Methodref          #7.#151       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #9 = Methodref          #40.#152      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #10 = Methodref          #7.#153       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #11 = Fieldref           #40.#154      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #12 = Methodref          #7.#155       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n-   #13 = Methodref          #156.#157     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #14 = Fieldref           #40.#158      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #15 = Methodref          #44.#155      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n-   #16 = Methodref          #40.#159      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataData:()[B\n-   #17 = Methodref          #7.#160       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-   #18 = Methodref          #7.#161       // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-   #19 = Methodref          #40.#162      // org/apache/commons/compress/archivers/zip/X000A_NTFS.readTimeAttr:([BII)V\n-   #20 = Methodref          #40.#163      // org/apache/commons/compress/archivers/zip/X000A_NTFS.reset:()V\n-   #21 = Methodref          #40.#164      // org/apache/commons/compress/archivers/zip/X000A_NTFS.parseFromLocalFileData:([BII)V\n-   #22 = Methodref          #40.#165      // org/apache/commons/compress/archivers/zip/X000A_NTFS.zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-   #23 = Methodref          #40.#166      // org/apache/commons/compress/archivers/zip/X000A_NTFS.dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-   #24 = Methodref          #40.#167      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #25 = Methodref          #40.#168      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #26 = Methodref          #40.#169      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-   #27 = Class              #170          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#144      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #171          // 0x000A Zip Extra Field:\n-   #30 = Methodref          #27.#172      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = String             #173          //  Modify:[\n-   #32 = Methodref          #40.#174      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getModifyJavaTime:()Ljava/util/Date;\n-   #33 = Methodref          #27.#175      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #34 = String             #176          // ]\n-   #35 = String             #177          //  Access:[\n-   #36 = Methodref          #40.#178      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getAccessJavaTime:()Ljava/util/Date;\n-   #37 = String             #179          //  Create:[\n-   #38 = Methodref          #40.#180      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getCreateJavaTime:()Ljava/util/Date;\n-   #39 = Methodref          #27.#181      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #40 = Class              #182          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n-   #41 = Methodref          #44.#161      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n-   #42 = Methodref          #44.#183      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n-   #43 = Methodref          #184.#185     // java/lang/Integer.rotateLeft:(II)I\n-   #44 = Class              #186          // org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n-   #45 = Methodref          #44.#160      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n-   #46 = Methodref          #53.#187      // java/util/Date.getTime:()J\n+    #1 = Methodref          #55.#141      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #44.#142      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+    #3 = Fieldref           #40.#143      // org/apache/commons/compress/archivers/zip/X000A_NTFS.modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+    #4 = Fieldref           #40.#144      // org/apache/commons/compress/archivers/zip/X000A_NTFS.accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+    #5 = Fieldref           #40.#145      // org/apache/commons/compress/archivers/zip/X000A_NTFS.createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+    #6 = Fieldref           #40.#146      // org/apache/commons/compress/archivers/zip/X000A_NTFS.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #7 = Class              #147          // org/apache/commons/compress/archivers/zip/ZipShort\n+    #8 = Methodref          #7.#148       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+    #9 = Methodref          #40.#149      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #10 = Methodref          #7.#150       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #11 = Fieldref           #40.#151      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #12 = Methodref          #7.#152       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n+   #13 = Methodref          #153.#154     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #14 = Fieldref           #40.#155      // org/apache/commons/compress/archivers/zip/X000A_NTFS.TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #15 = Methodref          #44.#152      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getBytes:()[B\n+   #16 = Methodref          #40.#156      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getLocalFileDataData:()[B\n+   #17 = Methodref          #7.#157       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #18 = Methodref          #7.#158       // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+   #19 = Methodref          #40.#159      // org/apache/commons/compress/archivers/zip/X000A_NTFS.readTimeAttr:([BII)V\n+   #20 = Methodref          #40.#160      // org/apache/commons/compress/archivers/zip/X000A_NTFS.reset:()V\n+   #21 = Methodref          #40.#161      // org/apache/commons/compress/archivers/zip/X000A_NTFS.parseFromLocalFileData:([BII)V\n+   #22 = Methodref          #40.#162      // org/apache/commons/compress/archivers/zip/X000A_NTFS.zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+   #23 = Methodref          #40.#163      // org/apache/commons/compress/archivers/zip/X000A_NTFS.dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+   #24 = Methodref          #40.#164      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #25 = Methodref          #40.#165      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #26 = Methodref          #40.#166      // org/apache/commons/compress/archivers/zip/X000A_NTFS.setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+   #27 = Class              #167          // java/lang/StringBuilder\n+   #28 = Methodref          #27.#141      // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = String             #168          // 0x000A Zip Extra Field:\n+   #30 = Methodref          #27.#169      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = String             #170          //  Modify:[\n+   #32 = Methodref          #40.#171      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getModifyJavaTime:()Ljava/util/Date;\n+   #33 = Methodref          #27.#172      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #34 = String             #173          // ]\n+   #35 = String             #174          //  Access:[\n+   #36 = Methodref          #40.#175      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getAccessJavaTime:()Ljava/util/Date;\n+   #37 = String             #176          //  Create:[\n+   #38 = Methodref          #40.#177      // org/apache/commons/compress/archivers/zip/X000A_NTFS.getCreateJavaTime:()Ljava/util/Date;\n+   #39 = Methodref          #27.#178      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #40 = Class              #179          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n+   #41 = Methodref          #44.#158      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.equals:(Ljava/lang/Object;)Z\n+   #42 = Methodref          #44.#180      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.hashCode:()I\n+   #43 = Methodref          #181.#182     // java/lang/Integer.rotateLeft:(II)I\n+   #44 = Class              #183          // org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+   #45 = Methodref          #44.#157      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":([BI)V\n+   #46 = Methodref          #53.#184      // java/util/Date.getTime:()J\n    #47 = Long               10000l\n    #49 = Long               -116444736000000000l\n-   #51 = Methodref          #44.#188      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n-   #52 = Methodref          #44.#189      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n-   #53 = Class              #190          // java/util/Date\n-   #54 = Methodref          #53.#188      // java/util/Date.\"<init>\":(J)V\n-   #55 = Class              #191          // java/lang/Object\n-   #56 = Class              #192          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #51 = Methodref          #44.#185      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.\"<init>\":(J)V\n+   #52 = Methodref          #44.#186      // org/apache/commons/compress/archivers/zip/ZipEightByteInteger.getLongValue:()J\n+   #53 = Class              #187          // java/util/Date\n+   #54 = Methodref          #53.#185      // java/util/Date.\"<init>\":(J)V\n+   #55 = Class              #188          // java/lang/Object\n+   #56 = Class              #189          // org/apache/commons/compress/archivers/zip/ZipExtraField\n    #57 = Utf8               HEADER_ID\n    #58 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n    #59 = Utf8               TIME_ATTR_TAG\n    #60 = Utf8               TIME_ATTR_SIZE\n    #61 = Utf8               modifyTime\n    #62 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n    #63 = Utf8               accessTime\n@@ -95,132 +95,129 @@\n    #87 = Utf8               ([BII)V\n    #88 = Utf8               tag\n    #89 = Utf8               size\n    #90 = Utf8               offset\n    #91 = Utf8               length\n    #92 = Utf8               len\n    #93 = Utf8               StackMapTable\n-   #94 = Class              #150          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #95 = Utf8               Exceptions\n-   #96 = Class              #193          // java/util/zip/ZipException\n-   #97 = Utf8               parseFromCentralDirectoryData\n-   #98 = Utf8               buffer\n-   #99 = Utf8               getModifyTime\n-  #100 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #101 = Utf8               getAccessTime\n-  #102 = Utf8               getCreateTime\n-  #103 = Utf8               getModifyJavaTime\n-  #104 = Utf8               ()Ljava/util/Date;\n-  #105 = Utf8               getAccessJavaTime\n-  #106 = Utf8               getCreateJavaTime\n-  #107 = Utf8               setModifyTime\n-  #108 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #109 = Utf8               t\n-  #110 = Class              #182          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n-  #111 = Class              #186          // org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n-  #112 = Utf8               setAccessTime\n-  #113 = Utf8               setCreateTime\n-  #114 = Utf8               setModifyJavaTime\n-  #115 = Utf8               (Ljava/util/Date;)V\n-  #116 = Utf8               d\n-  #117 = Utf8               Ljava/util/Date;\n-  #118 = Utf8               setAccessJavaTime\n-  #119 = Utf8               setCreateJavaTime\n-  #120 = Utf8               toString\n-  #121 = Utf8               ()Ljava/lang/String;\n-  #122 = Utf8               buf\n-  #123 = Utf8               Ljava/lang/StringBuilder;\n-  #124 = Utf8               equals\n-  #125 = Utf8               (Ljava/lang/Object;)Z\n-  #126 = Utf8               xf\n-  #127 = Utf8               o\n-  #128 = Utf8               Ljava/lang/Object;\n-  #129 = Utf8               hashCode\n-  #130 = Utf8               ()I\n-  #131 = Utf8               hc\n-  #132 = Utf8               reset\n-  #133 = Utf8               readTimeAttr\n-  #134 = Utf8               tagValueLength\n-  #135 = Utf8               dateToZip\n-  #136 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #137 = Utf8               zipToDate\n-  #138 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-  #139 = Utf8               z\n-  #140 = Utf8               l\n-  #141 = Utf8               <clinit>\n-  #142 = Utf8               SourceFile\n-  #143 = Utf8               X000A_NTFS.java\n-  #144 = NameAndType        #68:#69       // \"<init>\":()V\n-  #145 = NameAndType        #194:#62      // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #146 = NameAndType        #61:#62       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #147 = NameAndType        #63:#62       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #148 = NameAndType        #64:#62       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #149 = NameAndType        #57:#58       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #150 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #151 = NameAndType        #68:#195      // \"<init>\":(I)V\n-  #152 = NameAndType        #77:#76       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #153 = NameAndType        #196:#130     // getValue:()I\n-  #154 = NameAndType        #59:#58       // TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #155 = NameAndType        #197:#80      // getBytes:()[B\n-  #156 = Class              #198          // java/lang/System\n-  #157 = NameAndType        #199:#200     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #158 = NameAndType        #60:#58       // TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #159 = NameAndType        #79:#80       // getLocalFileDataData:()[B\n-  #160 = NameAndType        #68:#201      // \"<init>\":([BI)V\n-  #161 = NameAndType        #124:#125     // equals:(Ljava/lang/Object;)Z\n-  #162 = NameAndType        #133:#87      // readTimeAttr:([BII)V\n-  #163 = NameAndType        #132:#69      // reset:()V\n-  #164 = NameAndType        #86:#87       // parseFromLocalFileData:([BII)V\n-  #165 = NameAndType        #137:#138     // zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n-  #166 = NameAndType        #135:#136     // dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n-  #167 = NameAndType        #107:#108     // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #168 = NameAndType        #112:#108     // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #169 = NameAndType        #113:#108     // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n-  #170 = Utf8               java/lang/StringBuilder\n-  #171 = Utf8               0x000A Zip Extra Field:\n-  #172 = NameAndType        #202:#203     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #173 = Utf8                Modify:[\n-  #174 = NameAndType        #103:#104     // getModifyJavaTime:()Ljava/util/Date;\n-  #175 = NameAndType        #202:#204     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #176 = Utf8               ]\n-  #177 = Utf8                Access:[\n-  #178 = NameAndType        #105:#104     // getAccessJavaTime:()Ljava/util/Date;\n-  #179 = Utf8                Create:[\n-  #180 = NameAndType        #106:#104     // getCreateJavaTime:()Ljava/util/Date;\n-  #181 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n-  #182 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n-  #183 = NameAndType        #129:#130     // hashCode:()I\n-  #184 = Class              #205          // java/lang/Integer\n-  #185 = NameAndType        #206:#207     // rotateLeft:(II)I\n-  #186 = Utf8               org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n-  #187 = NameAndType        #208:#209     // getTime:()J\n-  #188 = NameAndType        #68:#210      // \"<init>\":(J)V\n-  #189 = NameAndType        #211:#209     // getLongValue:()J\n-  #190 = Utf8               java/util/Date\n-  #191 = Utf8               java/lang/Object\n-  #192 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #193 = Utf8               java/util/zip/ZipException\n-  #194 = Utf8               ZERO\n-  #195 = Utf8               (I)V\n-  #196 = Utf8               getValue\n-  #197 = Utf8               getBytes\n-  #198 = Utf8               java/lang/System\n-  #199 = Utf8               arraycopy\n-  #200 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #201 = Utf8               ([BI)V\n-  #202 = Utf8               append\n-  #203 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #204 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #205 = Utf8               java/lang/Integer\n-  #206 = Utf8               rotateLeft\n-  #207 = Utf8               (II)I\n-  #208 = Utf8               getTime\n-  #209 = Utf8               ()J\n-  #210 = Utf8               (J)V\n-  #211 = Utf8               getLongValue\n+   #94 = Utf8               Exceptions\n+   #95 = Class              #190          // java/util/zip/ZipException\n+   #96 = Utf8               parseFromCentralDirectoryData\n+   #97 = Utf8               buffer\n+   #98 = Utf8               getModifyTime\n+   #99 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #100 = Utf8               getAccessTime\n+  #101 = Utf8               getCreateTime\n+  #102 = Utf8               getModifyJavaTime\n+  #103 = Utf8               ()Ljava/util/Date;\n+  #104 = Utf8               getAccessJavaTime\n+  #105 = Utf8               getCreateJavaTime\n+  #106 = Utf8               setModifyTime\n+  #107 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+  #108 = Utf8               t\n+  #109 = Utf8               setAccessTime\n+  #110 = Utf8               setCreateTime\n+  #111 = Utf8               setModifyJavaTime\n+  #112 = Utf8               (Ljava/util/Date;)V\n+  #113 = Utf8               d\n+  #114 = Utf8               Ljava/util/Date;\n+  #115 = Utf8               setAccessJavaTime\n+  #116 = Utf8               setCreateJavaTime\n+  #117 = Utf8               toString\n+  #118 = Utf8               ()Ljava/lang/String;\n+  #119 = Utf8               buf\n+  #120 = Utf8               Ljava/lang/StringBuilder;\n+  #121 = Utf8               equals\n+  #122 = Utf8               (Ljava/lang/Object;)Z\n+  #123 = Utf8               xf\n+  #124 = Utf8               o\n+  #125 = Utf8               Ljava/lang/Object;\n+  #126 = Utf8               hashCode\n+  #127 = Utf8               ()I\n+  #128 = Utf8               hc\n+  #129 = Utf8               reset\n+  #130 = Utf8               readTimeAttr\n+  #131 = Utf8               tagValueLength\n+  #132 = Utf8               dateToZip\n+  #133 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #134 = Utf8               zipToDate\n+  #135 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+  #136 = Utf8               z\n+  #137 = Utf8               l\n+  #138 = Utf8               <clinit>\n+  #139 = Utf8               SourceFile\n+  #140 = Utf8               X000A_NTFS.java\n+  #141 = NameAndType        #68:#69       // \"<init>\":()V\n+  #142 = NameAndType        #191:#62      // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #143 = NameAndType        #61:#62       // modifyTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #144 = NameAndType        #63:#62       // accessTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #145 = NameAndType        #64:#62       // createTime:Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #146 = NameAndType        #57:#58       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #147 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #148 = NameAndType        #68:#192      // \"<init>\":(I)V\n+  #149 = NameAndType        #77:#76       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #150 = NameAndType        #193:#127     // getValue:()I\n+  #151 = NameAndType        #59:#58       // TIME_ATTR_TAG:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #152 = NameAndType        #194:#80      // getBytes:()[B\n+  #153 = Class              #195          // java/lang/System\n+  #154 = NameAndType        #196:#197     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #155 = NameAndType        #60:#58       // TIME_ATTR_SIZE:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #156 = NameAndType        #79:#80       // getLocalFileDataData:()[B\n+  #157 = NameAndType        #68:#198      // \"<init>\":([BI)V\n+  #158 = NameAndType        #121:#122     // equals:(Ljava/lang/Object;)Z\n+  #159 = NameAndType        #130:#87      // readTimeAttr:([BII)V\n+  #160 = NameAndType        #129:#69      // reset:()V\n+  #161 = NameAndType        #86:#87       // parseFromLocalFileData:([BII)V\n+  #162 = NameAndType        #134:#135     // zipToDate:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)Ljava/util/Date;\n+  #163 = NameAndType        #132:#133     // dateToZip:(Ljava/util/Date;)Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;\n+  #164 = NameAndType        #106:#107     // setModifyTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+  #165 = NameAndType        #109:#107     // setAccessTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+  #166 = NameAndType        #110:#107     // setCreateTime:(Lorg/apache/commons/compress/archivers/zip/ZipEightByteInteger;)V\n+  #167 = Utf8               java/lang/StringBuilder\n+  #168 = Utf8               0x000A Zip Extra Field:\n+  #169 = NameAndType        #199:#200     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #170 = Utf8                Modify:[\n+  #171 = NameAndType        #102:#103     // getModifyJavaTime:()Ljava/util/Date;\n+  #172 = NameAndType        #199:#201     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #173 = Utf8               ]\n+  #174 = Utf8                Access:[\n+  #175 = NameAndType        #104:#103     // getAccessJavaTime:()Ljava/util/Date;\n+  #176 = Utf8                Create:[\n+  #177 = NameAndType        #105:#103     // getCreateJavaTime:()Ljava/util/Date;\n+  #178 = NameAndType        #117:#118     // toString:()Ljava/lang/String;\n+  #179 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n+  #180 = NameAndType        #126:#127     // hashCode:()I\n+  #181 = Class              #202          // java/lang/Integer\n+  #182 = NameAndType        #203:#204     // rotateLeft:(II)I\n+  #183 = Utf8               org/apache/commons/compress/archivers/zip/ZipEightByteInteger\n+  #184 = NameAndType        #205:#206     // getTime:()J\n+  #185 = NameAndType        #68:#207      // \"<init>\":(J)V\n+  #186 = NameAndType        #208:#206     // getLongValue:()J\n+  #187 = Utf8               java/util/Date\n+  #188 = Utf8               java/lang/Object\n+  #189 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #190 = Utf8               java/util/zip/ZipException\n+  #191 = Utf8               ZERO\n+  #192 = Utf8               (I)V\n+  #193 = Utf8               getValue\n+  #194 = Utf8               getBytes\n+  #195 = Utf8               java/lang/System\n+  #196 = Utf8               arraycopy\n+  #197 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #198 = Utf8               ([BI)V\n+  #199 = Utf8               append\n+  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #201 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #202 = Utf8               java/lang/Integer\n+  #203 = Utf8               rotateLeft\n+  #204 = Utf8               (II)I\n+  #205 = Utf8               getTime\n+  #206 = Utf8               ()J\n+  #207 = Utf8               (J)V\n+  #208 = Utf8               getLongValue\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.compress.archivers.zip.ZipShort TIME_ATTR_TAG;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n"}]}
