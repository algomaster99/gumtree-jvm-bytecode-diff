{"diffoscope-json-version": 1, "source1": "first/XmlStreamWriter.class", "source2": "second/XmlStreamWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum d03e0d2f05579156992907aceae698719e6ccd90bf533c167b561f9df87735c6\n+  SHA-256 checksum 58b9e2f802ff396397824cdf09f82f18ec265610baae6d18a59da6e935a04032\n   Compiled from \"XmlStreamWriter.java\"\n public class org.apache.commons.io.output.XmlStreamWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #5                          // org/apache/commons/io/output/XmlStreamWriter\n   super_class: #42                        // java/io/Writer\n   interfaces: 0, fields: 7, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Class              #86           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #5.#87        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-    #3 = Methodref          #42.#88       // java/io/Writer.\"<init>\":()V\n-    #4 = Class              #89           // java/io/StringWriter\n-    #5 = Class              #90           // org/apache/commons/io/output/XmlStreamWriter\n-    #6 = Methodref          #4.#91        // java/io/StringWriter.\"<init>\":(I)V\n-    #7 = Fieldref           #5.#92        // org/apache/commons/io/output/XmlStreamWriter.xmlPrologWriter:Ljava/io/StringWriter;\n-    #8 = Fieldref           #5.#93        // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n-    #9 = String             #94           // UTF-8\n-   #10 = Fieldref           #5.#95        // org/apache/commons/io/output/XmlStreamWriter.defaultEncoding:Ljava/lang/String;\n-   #11 = Methodref          #5.#96        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #12 = Class              #97           // java/io/FileOutputStream\n-   #13 = Methodref          #12.#98       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #14 = Fieldref           #5.#99        // org/apache/commons/io/output/XmlStreamWriter.encoding:Ljava/lang/String;\n-   #15 = Fieldref           #5.#100       // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n-   #16 = Class              #101          // java/io/OutputStreamWriter\n-   #17 = Methodref          #16.#87       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #18 = Methodref          #4.#102       // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #19 = Methodref          #42.#103      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #20 = Methodref          #42.#104      // java/io/Writer.close:()V\n-   #21 = Methodref          #42.#105      // java/io/Writer.flush:()V\n-   #22 = Methodref          #4.#106       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #23 = Methodref          #107.#108     // java/lang/StringBuffer.length:()I\n-   #24 = Methodref          #4.#109       // java/io/StringWriter.write:([CII)V\n-   #25 = Methodref          #107.#110     // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-   #26 = String             #111          // <?xml\n-   #27 = Methodref          #112.#113     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #28 = String             #114          // ?>\n-   #29 = Methodref          #107.#115     // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n-   #30 = Fieldref           #5.#116       // org/apache/commons/io/output/XmlStreamWriter.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #31 = Methodref          #117.#118     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #32 = Methodref          #119.#120     // java/util/regex/Matcher.find:()Z\n-   #33 = Methodref          #119.#121     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #34 = Fieldref           #122.#123     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #35 = Methodref          #112.#124     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #36 = Methodref          #112.#108     // java/lang/String.length:()I\n-   #37 = Methodref          #112.#110     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #38 = Methodref          #107.#102     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #39 = Methodref          #42.#109      // java/io/Writer.write:([CII)V\n-   #40 = Methodref          #5.#125       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n-   #41 = Fieldref           #126.#116     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #42 = Class              #127          // java/io/Writer\n+    #1 = Class              #85           // org/apache/commons/io/IOUtils\n+    #2 = Methodref          #5.#86        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+    #3 = Methodref          #42.#87       // java/io/Writer.\"<init>\":()V\n+    #4 = Class              #88           // java/io/StringWriter\n+    #5 = Class              #89           // org/apache/commons/io/output/XmlStreamWriter\n+    #6 = Methodref          #4.#90        // java/io/StringWriter.\"<init>\":(I)V\n+    #7 = Fieldref           #5.#91        // org/apache/commons/io/output/XmlStreamWriter.xmlPrologWriter:Ljava/io/StringWriter;\n+    #8 = Fieldref           #5.#92        // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n+    #9 = String             #93           // UTF-8\n+   #10 = Fieldref           #5.#94        // org/apache/commons/io/output/XmlStreamWriter.defaultEncoding:Ljava/lang/String;\n+   #11 = Methodref          #5.#95        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #12 = Class              #96           // java/io/FileOutputStream\n+   #13 = Methodref          #12.#97       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #14 = Fieldref           #5.#98        // org/apache/commons/io/output/XmlStreamWriter.encoding:Ljava/lang/String;\n+   #15 = Fieldref           #5.#99        // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n+   #16 = Class              #100          // java/io/OutputStreamWriter\n+   #17 = Methodref          #16.#86       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #18 = Methodref          #4.#101       // java/io/StringWriter.toString:()Ljava/lang/String;\n+   #19 = Methodref          #42.#102      // java/io/Writer.write:(Ljava/lang/String;)V\n+   #20 = Methodref          #42.#103      // java/io/Writer.close:()V\n+   #21 = Methodref          #42.#104      // java/io/Writer.flush:()V\n+   #22 = Methodref          #4.#105       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #23 = Methodref          #79.#106      // java/lang/StringBuffer.length:()I\n+   #24 = Methodref          #4.#107       // java/io/StringWriter.write:([CII)V\n+   #25 = Methodref          #79.#108      // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+   #26 = String             #109          // <?xml\n+   #27 = Methodref          #65.#110      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #28 = String             #111          // ?>\n+   #29 = Methodref          #79.#112      // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n+   #30 = Fieldref           #5.#113       // org/apache/commons/io/output/XmlStreamWriter.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+   #31 = Methodref          #114.#115     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #32 = Methodref          #80.#116      // java/util/regex/Matcher.find:()Z\n+   #33 = Methodref          #80.#117      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #34 = Fieldref           #118.#119     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #35 = Methodref          #65.#120      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #36 = Methodref          #65.#106      // java/lang/String.length:()I\n+   #37 = Methodref          #65.#108      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #38 = Methodref          #79.#101      // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #39 = Methodref          #42.#107      // java/io/Writer.write:([CII)V\n+   #40 = Methodref          #5.#121       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n+   #41 = Fieldref           #122.#113     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+   #42 = Class              #123          // java/io/Writer\n    #43 = Utf8               BUFFER_SIZE\n    #44 = Utf8               I\n    #45 = Utf8               ConstantValue\n    #46 = Integer            8192\n    #47 = Utf8               out\n    #48 = Utf8               Ljava/io/OutputStream;\n    #49 = Utf8               defaultEncoding\n@@ -67,110 +67,106 @@\n    #57 = Utf8               Ljava/util/regex/Pattern;\n    #58 = Utf8               <init>\n    #59 = Utf8               (Ljava/io/OutputStream;)V\n    #60 = Utf8               Code\n    #61 = Utf8               LineNumberTable\n    #62 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n    #63 = Utf8               StackMapTable\n-   #64 = Class              #90           // org/apache/commons/io/output/XmlStreamWriter\n-   #65 = Class              #128          // java/io/OutputStream\n-   #66 = Class              #129          // java/lang/String\n-   #67 = Utf8               (Ljava/io/File;)V\n-   #68 = Utf8               Exceptions\n-   #69 = Class              #130          // java/io/FileNotFoundException\n-   #70 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #71 = Utf8               getEncoding\n-   #72 = Utf8               ()Ljava/lang/String;\n-   #73 = Utf8               getDefaultEncoding\n-   #74 = Utf8               close\n-   #75 = Utf8               ()V\n-   #76 = Class              #131          // java/io/IOException\n-   #77 = Utf8               flush\n-   #78 = Utf8               detectEncoding\n-   #79 = Utf8               ([CII)V\n-   #80 = Class              #132          // java/lang/StringBuffer\n-   #81 = Class              #133          // java/util/regex/Matcher\n-   #82 = Utf8               write\n-   #83 = Utf8               <clinit>\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               XmlStreamWriter.java\n-   #86 = Utf8               org/apache/commons/io/IOUtils\n-   #87 = NameAndType        #58:#62       // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #88 = NameAndType        #58:#75       // \"<init>\":()V\n-   #89 = Utf8               java/io/StringWriter\n-   #90 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n-   #91 = NameAndType        #58:#134      // \"<init>\":(I)V\n-   #92 = NameAndType        #51:#52       // xmlPrologWriter:Ljava/io/StringWriter;\n-   #93 = NameAndType        #47:#48       // out:Ljava/io/OutputStream;\n-   #94 = Utf8               UTF-8\n-   #95 = NameAndType        #49:#50       // defaultEncoding:Ljava/lang/String;\n-   #96 = NameAndType        #58:#70       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #97 = Utf8               java/io/FileOutputStream\n-   #98 = NameAndType        #58:#67       // \"<init>\":(Ljava/io/File;)V\n-   #99 = NameAndType        #55:#50       // encoding:Ljava/lang/String;\n-  #100 = NameAndType        #53:#54       // writer:Ljava/io/Writer;\n-  #101 = Utf8               java/io/OutputStreamWriter\n-  #102 = NameAndType        #135:#72      // toString:()Ljava/lang/String;\n-  #103 = NameAndType        #82:#136      // write:(Ljava/lang/String;)V\n-  #104 = NameAndType        #74:#75       // close:()V\n-  #105 = NameAndType        #77:#75       // flush:()V\n-  #106 = NameAndType        #137:#138     // getBuffer:()Ljava/lang/StringBuffer;\n-  #107 = Class              #132          // java/lang/StringBuffer\n-  #108 = NameAndType        #139:#140     // length:()I\n-  #109 = NameAndType        #82:#79       // write:([CII)V\n-  #110 = NameAndType        #141:#142     // substring:(II)Ljava/lang/String;\n-  #111 = Utf8               <?xml\n-  #112 = Class              #129          // java/lang/String\n-  #113 = NameAndType        #143:#144     // equals:(Ljava/lang/Object;)Z\n-  #114 = Utf8               ?>\n-  #115 = NameAndType        #145:#146     // indexOf:(Ljava/lang/String;)I\n-  #116 = NameAndType        #56:#57       // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #117 = Class              #147          // java/util/regex/Pattern\n-  #118 = NameAndType        #148:#149     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #119 = Class              #133          // java/util/regex/Matcher\n-  #120 = NameAndType        #150:#151     // find:()Z\n-  #121 = NameAndType        #152:#153     // group:(I)Ljava/lang/String;\n-  #122 = Class              #154          // java/util/Locale\n-  #123 = NameAndType        #155:#156     // ROOT:Ljava/util/Locale;\n-  #124 = NameAndType        #157:#158     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #125 = NameAndType        #78:#79       // detectEncoding:([CII)V\n-  #126 = Class              #159          // org/apache/commons/io/input/XmlStreamReader\n-  #127 = Utf8               java/io/Writer\n-  #128 = Utf8               java/io/OutputStream\n-  #129 = Utf8               java/lang/String\n-  #130 = Utf8               java/io/FileNotFoundException\n-  #131 = Utf8               java/io/IOException\n-  #132 = Utf8               java/lang/StringBuffer\n-  #133 = Utf8               java/util/regex/Matcher\n-  #134 = Utf8               (I)V\n-  #135 = Utf8               toString\n-  #136 = Utf8               (Ljava/lang/String;)V\n-  #137 = Utf8               getBuffer\n-  #138 = Utf8               ()Ljava/lang/StringBuffer;\n-  #139 = Utf8               length\n-  #140 = Utf8               ()I\n-  #141 = Utf8               substring\n-  #142 = Utf8               (II)Ljava/lang/String;\n-  #143 = Utf8               equals\n-  #144 = Utf8               (Ljava/lang/Object;)Z\n-  #145 = Utf8               indexOf\n-  #146 = Utf8               (Ljava/lang/String;)I\n-  #147 = Utf8               java/util/regex/Pattern\n-  #148 = Utf8               matcher\n-  #149 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #150 = Utf8               find\n-  #151 = Utf8               ()Z\n-  #152 = Utf8               group\n-  #153 = Utf8               (I)Ljava/lang/String;\n-  #154 = Utf8               java/util/Locale\n-  #155 = Utf8               ROOT\n-  #156 = Utf8               Ljava/util/Locale;\n-  #157 = Utf8               toUpperCase\n-  #158 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #159 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+   #64 = Class              #124          // java/io/OutputStream\n+   #65 = Class              #125          // java/lang/String\n+   #66 = Utf8               (Ljava/io/File;)V\n+   #67 = Utf8               Exceptions\n+   #68 = Class              #126          // java/io/FileNotFoundException\n+   #69 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #70 = Utf8               getEncoding\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Utf8               getDefaultEncoding\n+   #73 = Utf8               close\n+   #74 = Utf8               ()V\n+   #75 = Class              #127          // java/io/IOException\n+   #76 = Utf8               flush\n+   #77 = Utf8               detectEncoding\n+   #78 = Utf8               ([CII)V\n+   #79 = Class              #128          // java/lang/StringBuffer\n+   #80 = Class              #129          // java/util/regex/Matcher\n+   #81 = Utf8               write\n+   #82 = Utf8               <clinit>\n+   #83 = Utf8               SourceFile\n+   #84 = Utf8               XmlStreamWriter.java\n+   #85 = Utf8               org/apache/commons/io/IOUtils\n+   #86 = NameAndType        #58:#62       // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #87 = NameAndType        #58:#74       // \"<init>\":()V\n+   #88 = Utf8               java/io/StringWriter\n+   #89 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n+   #90 = NameAndType        #58:#130      // \"<init>\":(I)V\n+   #91 = NameAndType        #51:#52       // xmlPrologWriter:Ljava/io/StringWriter;\n+   #92 = NameAndType        #47:#48       // out:Ljava/io/OutputStream;\n+   #93 = Utf8               UTF-8\n+   #94 = NameAndType        #49:#50       // defaultEncoding:Ljava/lang/String;\n+   #95 = NameAndType        #58:#69       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #96 = Utf8               java/io/FileOutputStream\n+   #97 = NameAndType        #58:#66       // \"<init>\":(Ljava/io/File;)V\n+   #98 = NameAndType        #55:#50       // encoding:Ljava/lang/String;\n+   #99 = NameAndType        #53:#54       // writer:Ljava/io/Writer;\n+  #100 = Utf8               java/io/OutputStreamWriter\n+  #101 = NameAndType        #131:#71      // toString:()Ljava/lang/String;\n+  #102 = NameAndType        #81:#132      // write:(Ljava/lang/String;)V\n+  #103 = NameAndType        #73:#74       // close:()V\n+  #104 = NameAndType        #76:#74       // flush:()V\n+  #105 = NameAndType        #133:#134     // getBuffer:()Ljava/lang/StringBuffer;\n+  #106 = NameAndType        #135:#136     // length:()I\n+  #107 = NameAndType        #81:#78       // write:([CII)V\n+  #108 = NameAndType        #137:#138     // substring:(II)Ljava/lang/String;\n+  #109 = Utf8               <?xml\n+  #110 = NameAndType        #139:#140     // equals:(Ljava/lang/Object;)Z\n+  #111 = Utf8               ?>\n+  #112 = NameAndType        #141:#142     // indexOf:(Ljava/lang/String;)I\n+  #113 = NameAndType        #56:#57       // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #114 = Class              #143          // java/util/regex/Pattern\n+  #115 = NameAndType        #144:#145     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #116 = NameAndType        #146:#147     // find:()Z\n+  #117 = NameAndType        #148:#149     // group:(I)Ljava/lang/String;\n+  #118 = Class              #150          // java/util/Locale\n+  #119 = NameAndType        #151:#152     // ROOT:Ljava/util/Locale;\n+  #120 = NameAndType        #153:#154     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #121 = NameAndType        #77:#78       // detectEncoding:([CII)V\n+  #122 = Class              #155          // org/apache/commons/io/input/XmlStreamReader\n+  #123 = Utf8               java/io/Writer\n+  #124 = Utf8               java/io/OutputStream\n+  #125 = Utf8               java/lang/String\n+  #126 = Utf8               java/io/FileNotFoundException\n+  #127 = Utf8               java/io/IOException\n+  #128 = Utf8               java/lang/StringBuffer\n+  #129 = Utf8               java/util/regex/Matcher\n+  #130 = Utf8               (I)V\n+  #131 = Utf8               toString\n+  #132 = Utf8               (Ljava/lang/String;)V\n+  #133 = Utf8               getBuffer\n+  #134 = Utf8               ()Ljava/lang/StringBuffer;\n+  #135 = Utf8               length\n+  #136 = Utf8               ()I\n+  #137 = Utf8               substring\n+  #138 = Utf8               (II)Ljava/lang/String;\n+  #139 = Utf8               equals\n+  #140 = Utf8               (Ljava/lang/Object;)Z\n+  #141 = Utf8               indexOf\n+  #142 = Utf8               (Ljava/lang/String;)I\n+  #143 = Utf8               java/util/regex/Pattern\n+  #144 = Utf8               matcher\n+  #145 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #146 = Utf8               find\n+  #147 = Utf8               ()Z\n+  #148 = Utf8               group\n+  #149 = Utf8               (I)Ljava/lang/String;\n+  #150 = Utf8               java/util/Locale\n+  #151 = Utf8               ROOT\n+  #152 = Utf8               Ljava/util/Locale;\n+  #153 = Utf8               toUpperCase\n+  #154 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #155 = Utf8               org/apache/commons/io/input/XmlStreamReader\n {\n   private static final int BUFFER_SIZE = 8192;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8192\n \n   private final java.io.OutputStream out;\n"}]}
