{"diffoscope-json-version": 1, "source1": "first/BCIRenumberedAttribute.class", "source2": "second/BCIRenumberedAttribute.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,32 +7,31 @@\n import java.util.Arrays;\n import java.util.List;\n \n public abstract class BCIRenumberedAttribute extends Attribute\n {\n     protected boolean renumbered;\n     \n-    public BCIRenumberedAttribute(final CPUTF8 attributeName) {\n-        super(attributeName);\n+    public BCIRenumberedAttribute(final CPUTF8 cputf8) {\n+        super(cputf8);\n     }\n     \n     protected abstract int getLength();\n     \n     protected abstract int[] getStartPCs();\n     \n     public boolean hasBCIRenumbering() {\n         return true;\n     }\n     \n-    public void renumber(final List<Integer> byteCodeOffsets) throws Pack200Exception {\n+    public void renumber(final List<Integer> list) throws Pack200Exception {\n         if (this.renumbered) {\n             throw new Error(\"Trying to renumber a line number table that has already been renumbered\");\n         }\n         this.renumbered = true;\n-        final int[] startPCs = this.getStartPCs();\n-        Arrays.setAll(startPCs, i -> (int)Integer.valueOf(byteCodeOffsets.get(startPCs[i])));\n+        Arrays.setAll(this.getStartPCs(), n2 -> (int)Integer.valueOf(list2.get(array[n2])));\n     }\n     \n     public abstract String toString();\n     \n     protected abstract void writeBody(final DataOutputStream p0) throws IOException;\n }\n"}]}
