{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Integral.class", "source2": "second/NewAttributeBands$Integral.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,15 +9,15 @@\n public class Integral extends NewAttributeBands.LayoutElement\n {\n     private final String tag;\n     private int[] band;\n     \n     public Integral(final NewAttributeBands this$0, final String tag) {\n         this.this$0 = this$0;\n-        super((NewAttributeBands.NewAttributeBands$1)null);\n+        super((NewAttributeBands.LayoutElement)null);\n         this.tag = tag;\n     }\n     \n     public void addToAttribute(final int n, final NewAttribute attribute) {\n         int value = this.band[n];\n         if (this.tag.equals(\"B\") || this.tag.equals(\"FB\")) {\n             attribute.addInteger(1, (long)value);\n@@ -30,59 +30,57 @@\n         }\n         else if (this.tag.equals(\"SH\")) {\n             attribute.addInteger(2, (long)(short)value);\n         }\n         else if (this.tag.equals(\"I\") || this.tag.equals(\"FI\") || this.tag.equals(\"SI\")) {\n             attribute.addInteger(4, (long)value);\n         }\n-        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\")) {\n-            if (!this.tag.equals(\"SV\")) {\n-                if (this.tag.startsWith(\"PO\")) {\n-                    final char uintType = this.tag.substring(2).toCharArray()[0];\n-                    final int length = this.getLength(uintType);\n-                    attribute.addBCOffset(length, value);\n-                }\n-                else if (this.tag.startsWith(\"P\")) {\n-                    final char uintType = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uintType);\n-                    attribute.addBCIndex(length, value);\n-                }\n-                else if (this.tag.startsWith(\"OS\")) {\n-                    final char uintType = this.tag.substring(2).toCharArray()[0];\n-                    final int length = this.getLength(uintType);\n-                    switch (length) {\n-                        case 1: {\n-                            value = (byte)value;\n-                            break;\n-                        }\n-                        case 2: {\n-                            value = (short)value;\n-                            break;\n-                        }\n-                        case 4: {\n-                            value = value;\n-                            break;\n-                        }\n+        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\") && !this.tag.equals(\"SV\")) {\n+            if (this.tag.startsWith(\"PO\")) {\n+                final char uintType = this.tag.substring(2).toCharArray()[0];\n+                final int length = this.getLength(uintType);\n+                attribute.addBCOffset(length, value);\n+            }\n+            else if (this.tag.startsWith(\"P\")) {\n+                final char uintType = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uintType);\n+                attribute.addBCIndex(length, value);\n+            }\n+            else if (this.tag.startsWith(\"OS\")) {\n+                final char uintType = this.tag.substring(2).toCharArray()[0];\n+                final int length = this.getLength(uintType);\n+                switch (length) {\n+                    case 1: {\n+                        value = (byte)value;\n+                        break;\n+                    }\n+                    case 2: {\n+                        value = (short)value;\n+                        break;\n+                    }\n+                    case 4: {\n+                        value = value;\n+                        break;\n                     }\n-                    attribute.addBCLength(length, value);\n-                }\n-                else if (this.tag.startsWith(\"O\")) {\n-                    final char uintType = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uintType);\n-                    attribute.addBCLength(length, value);\n                 }\n+                attribute.addBCLength(length, value);\n+            }\n+            else if (this.tag.startsWith(\"O\")) {\n+                final char uintType = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uintType);\n+                attribute.addBCLength(length, value);\n             }\n         }\n     }\n     \n     public String getTag() {\n         return this.tag;\n     }\n     \n     int getValue(final int index) {\n         return this.band[index];\n     }\n     \n     public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n-        this.band = this.this$0.decodeBandInt(NewAttributeBands.access$100(this.this$0).getName() + \"_\" + this.tag, in, this.this$0.getCodec(this.tag), count);\n+        this.band = this.this$0.decodeBandInt(String.valueOf(NewAttributeBands.access$0(this.this$0).getName()) + \"_\" + this.tag, in, this.this$0.getCodec(this.tag), count);\n     }\n }\n"}]}
