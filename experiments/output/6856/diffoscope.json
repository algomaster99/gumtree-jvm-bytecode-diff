{"diffoscope-json-version": 1, "source1": "first/FTPHTTPClient.class", "source2": "second/FTPHTTPClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,110 @@\n-  SHA-256 checksum 1414e65d46f845f606d8ace0bbcdf180bfaa1b46b4f81b3fea6306182885ac4a\n+  SHA-256 checksum 732f081f90c3218a560ba42aa16806e3d7793e5420241f658714d569db39c1ac\n   Compiled from \"FTPHTTPClient.java\"\n public class org.apache.commons.net.ftp.FTPHTTPClient extends org.apache.commons.net.ftp.FTPClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #93                         // org/apache/commons/net/ftp/FTPHTTPClient\n   super_class: #17                        // org/apache/commons/net/ftp/FTPClient\n   interfaces: 0, fields: 8, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Methodref          #17.#185      // org/apache/commons/net/ftp/FTPClient.\"<init>\":()V\n-    #2 = Class              #186          // org/apache/commons/net/util/Base64\n-    #3 = Methodref          #2.#185       // org/apache/commons/net/util/Base64.\"<init>\":()V\n-    #4 = Fieldref           #93.#187      // org/apache/commons/net/ftp/FTPHTTPClient.base64:Lorg/apache/commons/net/util/Base64;\n-    #5 = Fieldref           #93.#188      // org/apache/commons/net/ftp/FTPHTTPClient.proxyHost:Ljava/lang/String;\n-    #6 = Fieldref           #93.#189      // org/apache/commons/net/ftp/FTPHTTPClient.proxyPort:I\n-    #7 = Fieldref           #93.#190      // org/apache/commons/net/ftp/FTPHTTPClient.proxyUsername:Ljava/lang/String;\n-    #8 = Fieldref           #93.#191      // org/apache/commons/net/ftp/FTPHTTPClient.proxyPassword:Ljava/lang/String;\n-    #9 = Fieldref           #93.#192      // org/apache/commons/net/ftp/FTPHTTPClient.tunnelHost:Ljava/lang/String;\n-   #10 = Fieldref           #93.#193      // org/apache/commons/net/ftp/FTPHTTPClient.charset:Ljava/nio/charset/Charset;\n-   #11 = String             #194          // UTF-8\n-   #12 = Methodref          #195.#196     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #13 = Methodref          #93.#197      // org/apache/commons/net/ftp/FTPHTTPClient.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V\n-   #14 = Methodref          #93.#198      // org/apache/commons/net/ftp/FTPHTTPClient.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V\n-   #15 = Methodref          #17.#199      // org/apache/commons/net/ftp/FTPClient._openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;\n-   #16 = Methodref          #93.#200      // org/apache/commons/net/ftp/FTPHTTPClient.getDataConnectionMode:()I\n-   #17 = Class              #201          // org/apache/commons/net/ftp/FTPClient\n-   #18 = Class              #202          // java/lang/IllegalStateException\n-   #19 = String             #203          // Only passive connection mode supported\n-   #20 = Methodref          #18.#204      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Methodref          #93.#205      // org/apache/commons/net/ftp/FTPHTTPClient.getRemoteAddress:()Ljava/net/InetAddress;\n-   #22 = Class              #206          // java/net/Inet6Address\n-   #23 = Methodref          #93.#207      // org/apache/commons/net/ftp/FTPHTTPClient.isUseEPSVwithIPv4:()Z\n-   #24 = Methodref          #93.#208      // org/apache/commons/net/ftp/FTPHTTPClient.epsv:()I\n-   #25 = Class              #209          // org/apache/commons/net/ftp/FTPReply\n-   #26 = Fieldref           #93.#210      // org/apache/commons/net/ftp/FTPHTTPClient._replyLines:Ljava/util/ArrayList;\n-   #27 = Methodref          #68.#211      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #28 = Class              #212          // java/lang/String\n-   #29 = Methodref          #93.#213      // org/apache/commons/net/ftp/FTPHTTPClient._parseExtendedPassiveModeReply:(Ljava/lang/String;)V\n-   #30 = Methodref          #93.#214      // org/apache/commons/net/ftp/FTPHTTPClient.pasv:()I\n-   #31 = Methodref          #93.#215      // org/apache/commons/net/ftp/FTPHTTPClient._parsePassiveModeReply:(Ljava/lang/String;)V\n-   #32 = Methodref          #93.#216      // org/apache/commons/net/ftp/FTPHTTPClient.getPassiveHost:()Ljava/lang/String;\n-   #33 = Fieldref           #93.#217      // org/apache/commons/net/ftp/FTPHTTPClient._socketFactory_:Ljavax/net/SocketFactory;\n-   #34 = Methodref          #218.#219     // javax/net/SocketFactory.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;\n-   #35 = Methodref          #220.#221     // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-   #36 = Methodref          #220.#222     // java/net/Socket.getOutputStream:()Ljava/io/OutputStream;\n-   #37 = Methodref          #93.#223      // org/apache/commons/net/ftp/FTPHTTPClient.getPassivePort:()I\n-   #38 = Methodref          #93.#224      // org/apache/commons/net/ftp/FTPHTTPClient.tunnelHandshake:(Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n-   #39 = Methodref          #93.#225      // org/apache/commons/net/ftp/FTPHTTPClient.getRestartOffset:()J\n-   #40 = Methodref          #93.#226      // org/apache/commons/net/ftp/FTPHTTPClient.restart:(J)Z\n-   #41 = Methodref          #220.#227     // java/net/Socket.close:()V\n-   #42 = Methodref          #93.#228      // org/apache/commons/net/ftp/FTPHTTPClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #43 = Methodref          #25.#229      // org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z\n-   #44 = Fieldref           #93.#230      // org/apache/commons/net/ftp/FTPHTTPClient._socket_:Ljava/net/Socket;\n-   #45 = Fieldref           #93.#231      // org/apache/commons/net/ftp/FTPHTTPClient._input_:Ljava/io/InputStream;\n-   #46 = Fieldref           #93.#232      // org/apache/commons/net/ftp/FTPHTTPClient._output_:Ljava/io/OutputStream;\n-   #47 = Class              #233          // java/lang/Exception\n-   #48 = Class              #234          // java/io/IOException\n-   #49 = Class              #235          // java/lang/StringBuilder\n-   #50 = Methodref          #49.#185      // java/lang/StringBuilder.\"<init>\":()V\n-   #51 = String             #236          // Could not connect to\n-   #52 = Methodref          #49.#237      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #53 = String             #238          //  using port\n-   #54 = Methodref          #49.#239      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #55 = Methodref          #49.#240      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #56 = Methodref          #48.#204      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #57 = Methodref          #48.#241      // java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #58 = Methodref          #17.#242      // org/apache/commons/net/ftp/FTPClient._connectAction_:(Ljava/io/Reader;)V\n-   #59 = String             #243          // CONNECT\n-   #60 = String             #244          // :\n-   #61 = String             #245          //  HTTP/1.1\n-   #62 = String             #246          // Host:\n-   #63 = Methodref          #28.#247      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #64 = Methodref          #248.#249     // java/io/OutputStream.write:([B)V\n-   #65 = Fieldref           #93.#250      // org/apache/commons/net/ftp/FTPHTTPClient.CRLF:[B\n-   #66 = String             #251          // Proxy-Authorization: Basic\n-   #67 = Methodref          #2.#252       // org/apache/commons/net/util/Base64.encodeToString:([B)Ljava/lang/String;\n-   #68 = Class              #253          // java/util/ArrayList\n-   #69 = Methodref          #68.#185      // java/util/ArrayList.\"<init>\":()V\n-   #70 = Class              #254          // java/io/BufferedReader\n-   #71 = Class              #255          // java/io/InputStreamReader\n-   #72 = Methodref          #93.#256      // org/apache/commons/net/ftp/FTPHTTPClient.getCharset:()Ljava/nio/charset/Charset;\n-   #73 = Methodref          #71.#257      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #74 = Methodref          #70.#258      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #75 = Methodref          #70.#259      // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #76 = Methodref          #28.#260      // java/lang/String.length:()I\n-   #77 = InterfaceMethodref #261.#262     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #78 = InterfaceMethodref #261.#263     // java/util/List.size:()I\n-   #79 = String             #264          // No response from proxy\n-   #80 = InterfaceMethodref #261.#211     // java/util/List.get:(I)Ljava/lang/Object;\n-   #81 = String             #265          // HTTP/\n-   #82 = Methodref          #28.#266      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #83 = Methodref          #28.#267      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #84 = String             #268          // Invalid response from proxy:\n-   #85 = String             #269          // 200\n-   #86 = Methodref          #28.#270      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #87 = String             #271          // HTTPTunnelConnector: connection failed\\r\\n\n-   #88 = String             #272          // Response received from the proxy:\\r\\n\n-   #89 = InterfaceMethodref #261.#273     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #90 = InterfaceMethodref #274.#275     // java/util/Iterator.hasNext:()Z\n-   #91 = InterfaceMethodref #274.#276     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #92 = String             #277          // \\r\\n\n-   #93 = Class              #278          // org/apache/commons/net/ftp/FTPHTTPClient\n+    #1 = Methodref          #17.#181      // org/apache/commons/net/ftp/FTPClient.\"<init>\":()V\n+    #2 = Class              #182          // org/apache/commons/net/util/Base64\n+    #3 = Methodref          #2.#181       // org/apache/commons/net/util/Base64.\"<init>\":()V\n+    #4 = Fieldref           #93.#183      // org/apache/commons/net/ftp/FTPHTTPClient.base64:Lorg/apache/commons/net/util/Base64;\n+    #5 = Fieldref           #93.#184      // org/apache/commons/net/ftp/FTPHTTPClient.proxyHost:Ljava/lang/String;\n+    #6 = Fieldref           #93.#185      // org/apache/commons/net/ftp/FTPHTTPClient.proxyPort:I\n+    #7 = Fieldref           #93.#186      // org/apache/commons/net/ftp/FTPHTTPClient.proxyUsername:Ljava/lang/String;\n+    #8 = Fieldref           #93.#187      // org/apache/commons/net/ftp/FTPHTTPClient.proxyPassword:Ljava/lang/String;\n+    #9 = Fieldref           #93.#188      // org/apache/commons/net/ftp/FTPHTTPClient.tunnelHost:Ljava/lang/String;\n+   #10 = Fieldref           #93.#189      // org/apache/commons/net/ftp/FTPHTTPClient.charset:Ljava/nio/charset/Charset;\n+   #11 = String             #190          // UTF-8\n+   #12 = Methodref          #191.#192     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #13 = Methodref          #93.#193      // org/apache/commons/net/ftp/FTPHTTPClient.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V\n+   #14 = Methodref          #93.#194      // org/apache/commons/net/ftp/FTPHTTPClient.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V\n+   #15 = Methodref          #17.#195      // org/apache/commons/net/ftp/FTPClient._openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;\n+   #16 = Methodref          #93.#196      // org/apache/commons/net/ftp/FTPHTTPClient.getDataConnectionMode:()I\n+   #17 = Class              #197          // org/apache/commons/net/ftp/FTPClient\n+   #18 = Class              #198          // java/lang/IllegalStateException\n+   #19 = String             #199          // Only passive connection mode supported\n+   #20 = Methodref          #18.#200      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = Methodref          #93.#201      // org/apache/commons/net/ftp/FTPHTTPClient.getRemoteAddress:()Ljava/net/InetAddress;\n+   #22 = Class              #202          // java/net/Inet6Address\n+   #23 = Methodref          #93.#203      // org/apache/commons/net/ftp/FTPHTTPClient.isUseEPSVwithIPv4:()Z\n+   #24 = Methodref          #93.#204      // org/apache/commons/net/ftp/FTPHTTPClient.epsv:()I\n+   #25 = Class              #205          // org/apache/commons/net/ftp/FTPReply\n+   #26 = Fieldref           #93.#206      // org/apache/commons/net/ftp/FTPHTTPClient._replyLines:Ljava/util/ArrayList;\n+   #27 = Methodref          #68.#207      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+   #28 = Class              #208          // java/lang/String\n+   #29 = Methodref          #93.#209      // org/apache/commons/net/ftp/FTPHTTPClient._parseExtendedPassiveModeReply:(Ljava/lang/String;)V\n+   #30 = Methodref          #93.#210      // org/apache/commons/net/ftp/FTPHTTPClient.pasv:()I\n+   #31 = Methodref          #93.#211      // org/apache/commons/net/ftp/FTPHTTPClient._parsePassiveModeReply:(Ljava/lang/String;)V\n+   #32 = Methodref          #93.#212      // org/apache/commons/net/ftp/FTPHTTPClient.getPassiveHost:()Ljava/lang/String;\n+   #33 = Fieldref           #93.#213      // org/apache/commons/net/ftp/FTPHTTPClient._socketFactory_:Ljavax/net/SocketFactory;\n+   #34 = Methodref          #214.#215     // javax/net/SocketFactory.createSocket:(Ljava/lang/String;I)Ljava/net/Socket;\n+   #35 = Methodref          #140.#216     // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+   #36 = Methodref          #140.#217     // java/net/Socket.getOutputStream:()Ljava/io/OutputStream;\n+   #37 = Methodref          #93.#218      // org/apache/commons/net/ftp/FTPHTTPClient.getPassivePort:()I\n+   #38 = Methodref          #93.#219      // org/apache/commons/net/ftp/FTPHTTPClient.tunnelHandshake:(Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n+   #39 = Methodref          #93.#220      // org/apache/commons/net/ftp/FTPHTTPClient.getRestartOffset:()J\n+   #40 = Methodref          #93.#221      // org/apache/commons/net/ftp/FTPHTTPClient.restart:(J)Z\n+   #41 = Methodref          #140.#222     // java/net/Socket.close:()V\n+   #42 = Methodref          #93.#223      // org/apache/commons/net/ftp/FTPHTTPClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+   #43 = Methodref          #25.#224      // org/apache/commons/net/ftp/FTPReply.isPositivePreliminary:(I)Z\n+   #44 = Fieldref           #93.#225      // org/apache/commons/net/ftp/FTPHTTPClient._socket_:Ljava/net/Socket;\n+   #45 = Fieldref           #93.#226      // org/apache/commons/net/ftp/FTPHTTPClient._input_:Ljava/io/InputStream;\n+   #46 = Fieldref           #93.#227      // org/apache/commons/net/ftp/FTPHTTPClient._output_:Ljava/io/OutputStream;\n+   #47 = Class              #228          // java/lang/Exception\n+   #48 = Class              #229          // java/io/IOException\n+   #49 = Class              #230          // java/lang/StringBuilder\n+   #50 = Methodref          #49.#181      // java/lang/StringBuilder.\"<init>\":()V\n+   #51 = String             #231          // Could not connect to\n+   #52 = Methodref          #49.#232      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #53 = String             #233          //  using port\n+   #54 = Methodref          #49.#234      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #55 = Methodref          #49.#235      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #56 = Methodref          #48.#200      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #57 = Methodref          #48.#236      // java/io/IOException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #58 = Methodref          #17.#237      // org/apache/commons/net/ftp/FTPClient._connectAction_:(Ljava/io/Reader;)V\n+   #59 = String             #238          // CONNECT\n+   #60 = String             #239          // :\n+   #61 = String             #240          //  HTTP/1.1\n+   #62 = String             #241          // Host:\n+   #63 = Methodref          #28.#242      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #64 = Methodref          #142.#243     // java/io/OutputStream.write:([B)V\n+   #65 = Fieldref           #93.#244      // org/apache/commons/net/ftp/FTPHTTPClient.CRLF:[B\n+   #66 = String             #245          // Proxy-Authorization: Basic\n+   #67 = Methodref          #2.#246       // org/apache/commons/net/util/Base64.encodeToString:([B)Ljava/lang/String;\n+   #68 = Class              #247          // java/util/ArrayList\n+   #69 = Methodref          #68.#181      // java/util/ArrayList.\"<init>\":()V\n+   #70 = Class              #248          // java/io/BufferedReader\n+   #71 = Class              #249          // java/io/InputStreamReader\n+   #72 = Methodref          #93.#250      // org/apache/commons/net/ftp/FTPHTTPClient.getCharset:()Ljava/nio/charset/Charset;\n+   #73 = Methodref          #71.#251      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #74 = Methodref          #70.#252      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #75 = Methodref          #70.#253      // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+   #76 = Methodref          #28.#254      // java/lang/String.length:()I\n+   #77 = InterfaceMethodref #174.#255     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #78 = InterfaceMethodref #174.#256     // java/util/List.size:()I\n+   #79 = String             #257          // No response from proxy\n+   #80 = InterfaceMethodref #174.#207     // java/util/List.get:(I)Ljava/lang/Object;\n+   #81 = String             #258          // HTTP/\n+   #82 = Methodref          #28.#259      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #83 = Methodref          #28.#260      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #84 = String             #261          // Invalid response from proxy:\n+   #85 = String             #262          // 200\n+   #86 = Methodref          #28.#263      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #87 = String             #264          // HTTPTunnelConnector: connection failed\\r\\n\n+   #88 = String             #265          // Response received from the proxy:\\r\\n\n+   #89 = InterfaceMethodref #174.#266     // java/util/List.iterator:()Ljava/util/Iterator;\n+   #90 = InterfaceMethodref #175.#267     // java/util/Iterator.hasNext:()Z\n+   #91 = InterfaceMethodref #175.#268     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #92 = String             #269          // \\r\\n\n+   #93 = Class              #270          // org/apache/commons/net/ftp/FTPHTTPClient\n    #94 = Utf8               proxyHost\n    #95 = Utf8               Ljava/lang/String;\n    #96 = Utf8               proxyPort\n    #97 = Utf8               I\n    #98 = Utf8               proxyUsername\n    #99 = Utf8               proxyPassword\n   #100 = Utf8               charset\n@@ -143,234 +143,226 @@\n   #133 = Utf8               socket\n   #134 = Utf8               Ljava/net/Socket;\n   #135 = Utf8               is\n   #136 = Utf8               Ljava/io/InputStream;\n   #137 = Utf8               os\n   #138 = Utf8               Ljava/io/OutputStream;\n   #139 = Utf8               StackMapTable\n-  #140 = Class              #212          // java/lang/String\n-  #141 = Class              #279          // java/net/Socket\n-  #142 = Class              #280          // java/io/InputStream\n-  #143 = Class              #281          // java/io/OutputStream\n-  #144 = Utf8               connect\n-  #145 = Utf8               socketIsReader\n-  #146 = Utf8               Ljava/io/Reader;\n-  #147 = Utf8               ioe\n-  #148 = Utf8               Ljava/io/IOException;\n-  #149 = Utf8               e\n-  #150 = Utf8               Ljava/lang/Exception;\n-  #151 = Utf8               host\n-  #152 = Utf8               port\n-  #153 = Class              #233          // java/lang/Exception\n-  #154 = Class              #282          // java/io/Reader\n-  #155 = Class              #283          // java/net/SocketException\n-  #156 = Utf8               tunnelHandshake\n-  #157 = Utf8               (Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n-  #158 = Utf8               auth\n-  #159 = Utf8               header\n-  #160 = Utf8               line\n-  #161 = Utf8               msg\n-  #162 = Utf8               Ljava/lang/StringBuilder;\n-  #163 = Utf8               input\n-  #164 = Utf8               output\n-  #165 = Utf8               connectString\n-  #166 = Utf8               hostString\n-  #167 = Utf8               response\n-  #168 = Utf8               Ljava/util/List;\n-  #169 = Utf8               reader\n-  #170 = Utf8               Ljava/io/BufferedReader;\n-  #171 = Utf8               size\n-  #172 = Utf8               code\n-  #173 = Utf8               resp\n-  #174 = Utf8               LocalVariableTypeTable\n-  #175 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #176 = Class              #284          // java/util/List\n-  #177 = Class              #254          // java/io/BufferedReader\n-  #178 = Class              #235          // java/lang/StringBuilder\n-  #179 = Class              #285          // java/util/Iterator\n-  #180 = Class              #286          // java/io/UnsupportedEncodingException\n-  #181 = Utf8               <clinit>\n-  #182 = Utf8               ()V\n-  #183 = Utf8               SourceFile\n-  #184 = Utf8               FTPHTTPClient.java\n-  #185 = NameAndType        #107:#182     // \"<init>\":()V\n-  #186 = Utf8               org/apache/commons/net/util/Base64\n-  #187 = NameAndType        #104:#105     // base64:Lorg/apache/commons/net/util/Base64;\n-  #188 = NameAndType        #94:#95       // proxyHost:Ljava/lang/String;\n-  #189 = NameAndType        #96:#97       // proxyPort:I\n-  #190 = NameAndType        #98:#95       // proxyUsername:Ljava/lang/String;\n-  #191 = NameAndType        #99:#95       // proxyPassword:Ljava/lang/String;\n-  #192 = NameAndType        #106:#95      // tunnelHost:Ljava/lang/String;\n-  #193 = NameAndType        #100:#101     // charset:Ljava/nio/charset/Charset;\n-  #194 = Utf8               UTF-8\n-  #195 = Class              #287          // java/nio/charset/Charset\n-  #196 = NameAndType        #288:#289     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #197 = NameAndType        #107:#108     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V\n-  #198 = NameAndType        #107:#117     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V\n-  #199 = NameAndType        #120:#121     // _openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;\n-  #200 = NameAndType        #290:#291     // getDataConnectionMode:()I\n-  #201 = Utf8               org/apache/commons/net/ftp/FTPClient\n-  #202 = Utf8               java/lang/IllegalStateException\n-  #203 = Utf8               Only passive connection mode supported\n-  #204 = NameAndType        #107:#292     // \"<init>\":(Ljava/lang/String;)V\n-  #205 = NameAndType        #293:#294     // getRemoteAddress:()Ljava/net/InetAddress;\n-  #206 = Utf8               java/net/Inet6Address\n-  #207 = NameAndType        #295:#296     // isUseEPSVwithIPv4:()Z\n-  #208 = NameAndType        #297:#291     // epsv:()I\n-  #209 = Utf8               org/apache/commons/net/ftp/FTPReply\n-  #210 = NameAndType        #298:#299     // _replyLines:Ljava/util/ArrayList;\n-  #211 = NameAndType        #300:#301     // get:(I)Ljava/lang/Object;\n-  #212 = Utf8               java/lang/String\n-  #213 = NameAndType        #302:#292     // _parseExtendedPassiveModeReply:(Ljava/lang/String;)V\n-  #214 = NameAndType        #303:#291     // pasv:()I\n-  #215 = NameAndType        #304:#292     // _parsePassiveModeReply:(Ljava/lang/String;)V\n-  #216 = NameAndType        #305:#306     // getPassiveHost:()Ljava/lang/String;\n-  #217 = NameAndType        #307:#308     // _socketFactory_:Ljavax/net/SocketFactory;\n-  #218 = Class              #309          // javax/net/SocketFactory\n-  #219 = NameAndType        #310:#311     // createSocket:(Ljava/lang/String;I)Ljava/net/Socket;\n-  #220 = Class              #279          // java/net/Socket\n-  #221 = NameAndType        #312:#313     // getInputStream:()Ljava/io/InputStream;\n-  #222 = NameAndType        #314:#315     // getOutputStream:()Ljava/io/OutputStream;\n-  #223 = NameAndType        #316:#291     // getPassivePort:()I\n-  #224 = NameAndType        #156:#157     // tunnelHandshake:(Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n-  #225 = NameAndType        #317:#318     // getRestartOffset:()J\n-  #226 = NameAndType        #319:#320     // restart:(J)Z\n-  #227 = NameAndType        #321:#182     // close:()V\n-  #228 = NameAndType        #322:#323     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-  #229 = NameAndType        #324:#325     // isPositivePreliminary:(I)Z\n-  #230 = NameAndType        #326:#134     // _socket_:Ljava/net/Socket;\n-  #231 = NameAndType        #327:#136     // _input_:Ljava/io/InputStream;\n-  #232 = NameAndType        #328:#138     // _output_:Ljava/io/OutputStream;\n-  #233 = Utf8               java/lang/Exception\n-  #234 = Utf8               java/io/IOException\n-  #235 = Utf8               java/lang/StringBuilder\n-  #236 = Utf8               Could not connect to\n-  #237 = NameAndType        #329:#330     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #238 = Utf8                using port\n-  #239 = NameAndType        #329:#331     // append:(I)Ljava/lang/StringBuilder;\n-  #240 = NameAndType        #332:#306     // toString:()Ljava/lang/String;\n-  #241 = NameAndType        #333:#334     // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #242 = NameAndType        #335:#336     // _connectAction_:(Ljava/io/Reader;)V\n-  #243 = Utf8               CONNECT\n-  #244 = Utf8               :\n-  #245 = Utf8                HTTP/1.1\n-  #246 = Utf8               Host:\n-  #247 = NameAndType        #337:#338     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #248 = Class              #281          // java/io/OutputStream\n-  #249 = NameAndType        #339:#340     // write:([B)V\n-  #250 = NameAndType        #102:#103     // CRLF:[B\n-  #251 = Utf8               Proxy-Authorization: Basic\n-  #252 = NameAndType        #341:#342     // encodeToString:([B)Ljava/lang/String;\n-  #253 = Utf8               java/util/ArrayList\n-  #254 = Utf8               java/io/BufferedReader\n-  #255 = Utf8               java/io/InputStreamReader\n-  #256 = NameAndType        #343:#344     // getCharset:()Ljava/nio/charset/Charset;\n-  #257 = NameAndType        #107:#345     // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #258 = NameAndType        #107:#336     // \"<init>\":(Ljava/io/Reader;)V\n-  #259 = NameAndType        #346:#306     // readLine:()Ljava/lang/String;\n-  #260 = NameAndType        #347:#291     // length:()I\n-  #261 = Class              #284          // java/util/List\n-  #262 = NameAndType        #348:#349     // add:(Ljava/lang/Object;)Z\n-  #263 = NameAndType        #171:#291     // size:()I\n-  #264 = Utf8               No response from proxy\n-  #265 = Utf8               HTTP/\n-  #266 = NameAndType        #350:#351     // startsWith:(Ljava/lang/String;)Z\n-  #267 = NameAndType        #352:#353     // substring:(II)Ljava/lang/String;\n-  #268 = Utf8               Invalid response from proxy:\n-  #269 = Utf8               200\n-  #270 = NameAndType        #354:#349     // equals:(Ljava/lang/Object;)Z\n-  #271 = Utf8               HTTPTunnelConnector: connection failed\\r\\n\n-  #272 = Utf8               Response received from the proxy:\\r\\n\n-  #273 = NameAndType        #355:#356     // iterator:()Ljava/util/Iterator;\n-  #274 = Class              #285          // java/util/Iterator\n-  #275 = NameAndType        #357:#296     // hasNext:()Z\n-  #276 = NameAndType        #358:#359     // next:()Ljava/lang/Object;\n-  #277 = Utf8               \\r\\n\n-  #278 = Utf8               org/apache/commons/net/ftp/FTPHTTPClient\n-  #279 = Utf8               java/net/Socket\n-  #280 = Utf8               java/io/InputStream\n-  #281 = Utf8               java/io/OutputStream\n-  #282 = Utf8               java/io/Reader\n-  #283 = Utf8               java/net/SocketException\n-  #284 = Utf8               java/util/List\n-  #285 = Utf8               java/util/Iterator\n-  #286 = Utf8               java/io/UnsupportedEncodingException\n-  #287 = Utf8               java/nio/charset/Charset\n-  #288 = Utf8               forName\n-  #289 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #290 = Utf8               getDataConnectionMode\n-  #291 = Utf8               ()I\n-  #292 = Utf8               (Ljava/lang/String;)V\n-  #293 = Utf8               getRemoteAddress\n-  #294 = Utf8               ()Ljava/net/InetAddress;\n-  #295 = Utf8               isUseEPSVwithIPv4\n-  #296 = Utf8               ()Z\n-  #297 = Utf8               epsv\n-  #298 = Utf8               _replyLines\n-  #299 = Utf8               Ljava/util/ArrayList;\n-  #300 = Utf8               get\n-  #301 = Utf8               (I)Ljava/lang/Object;\n-  #302 = Utf8               _parseExtendedPassiveModeReply\n-  #303 = Utf8               pasv\n-  #304 = Utf8               _parsePassiveModeReply\n-  #305 = Utf8               getPassiveHost\n-  #306 = Utf8               ()Ljava/lang/String;\n-  #307 = Utf8               _socketFactory_\n-  #308 = Utf8               Ljavax/net/SocketFactory;\n-  #309 = Utf8               javax/net/SocketFactory\n-  #310 = Utf8               createSocket\n-  #311 = Utf8               (Ljava/lang/String;I)Ljava/net/Socket;\n-  #312 = Utf8               getInputStream\n-  #313 = Utf8               ()Ljava/io/InputStream;\n-  #314 = Utf8               getOutputStream\n-  #315 = Utf8               ()Ljava/io/OutputStream;\n-  #316 = Utf8               getPassivePort\n-  #317 = Utf8               getRestartOffset\n-  #318 = Utf8               ()J\n-  #319 = Utf8               restart\n-  #320 = Utf8               (J)Z\n-  #321 = Utf8               close\n-  #322 = Utf8               sendCommand\n-  #323 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #324 = Utf8               isPositivePreliminary\n-  #325 = Utf8               (I)Z\n-  #326 = Utf8               _socket_\n-  #327 = Utf8               _input_\n-  #328 = Utf8               _output_\n-  #329 = Utf8               append\n-  #330 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #331 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #332 = Utf8               toString\n-  #333 = Utf8               initCause\n-  #334 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #335 = Utf8               _connectAction_\n-  #336 = Utf8               (Ljava/io/Reader;)V\n-  #337 = Utf8               getBytes\n-  #338 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #339 = Utf8               write\n-  #340 = Utf8               ([B)V\n-  #341 = Utf8               encodeToString\n-  #342 = Utf8               ([B)Ljava/lang/String;\n-  #343 = Utf8               getCharset\n-  #344 = Utf8               ()Ljava/nio/charset/Charset;\n-  #345 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #346 = Utf8               readLine\n-  #347 = Utf8               length\n-  #348 = Utf8               add\n-  #349 = Utf8               (Ljava/lang/Object;)Z\n-  #350 = Utf8               startsWith\n-  #351 = Utf8               (Ljava/lang/String;)Z\n-  #352 = Utf8               substring\n-  #353 = Utf8               (II)Ljava/lang/String;\n-  #354 = Utf8               equals\n-  #355 = Utf8               iterator\n-  #356 = Utf8               ()Ljava/util/Iterator;\n-  #357 = Utf8               hasNext\n-  #358 = Utf8               next\n-  #359 = Utf8               ()Ljava/lang/Object;\n+  #140 = Class              #271          // java/net/Socket\n+  #141 = Class              #272          // java/io/InputStream\n+  #142 = Class              #273          // java/io/OutputStream\n+  #143 = Utf8               connect\n+  #144 = Utf8               socketIsReader\n+  #145 = Utf8               Ljava/io/Reader;\n+  #146 = Utf8               ioe\n+  #147 = Utf8               Ljava/io/IOException;\n+  #148 = Utf8               e\n+  #149 = Utf8               Ljava/lang/Exception;\n+  #150 = Utf8               host\n+  #151 = Utf8               port\n+  #152 = Class              #274          // java/io/Reader\n+  #153 = Class              #275          // java/net/SocketException\n+  #154 = Utf8               tunnelHandshake\n+  #155 = Utf8               (Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n+  #156 = Utf8               auth\n+  #157 = Utf8               header\n+  #158 = Utf8               line\n+  #159 = Utf8               msg\n+  #160 = Utf8               Ljava/lang/StringBuilder;\n+  #161 = Utf8               input\n+  #162 = Utf8               output\n+  #163 = Utf8               connectString\n+  #164 = Utf8               hostString\n+  #165 = Utf8               response\n+  #166 = Utf8               Ljava/util/List;\n+  #167 = Utf8               reader\n+  #168 = Utf8               Ljava/io/BufferedReader;\n+  #169 = Utf8               size\n+  #170 = Utf8               code\n+  #171 = Utf8               resp\n+  #172 = Utf8               LocalVariableTypeTable\n+  #173 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #174 = Class              #276          // java/util/List\n+  #175 = Class              #277          // java/util/Iterator\n+  #176 = Class              #278          // java/io/UnsupportedEncodingException\n+  #177 = Utf8               <clinit>\n+  #178 = Utf8               ()V\n+  #179 = Utf8               SourceFile\n+  #180 = Utf8               FTPHTTPClient.java\n+  #181 = NameAndType        #107:#178     // \"<init>\":()V\n+  #182 = Utf8               org/apache/commons/net/util/Base64\n+  #183 = NameAndType        #104:#105     // base64:Lorg/apache/commons/net/util/Base64;\n+  #184 = NameAndType        #94:#95       // proxyHost:Ljava/lang/String;\n+  #185 = NameAndType        #96:#97       // proxyPort:I\n+  #186 = NameAndType        #98:#95       // proxyUsername:Ljava/lang/String;\n+  #187 = NameAndType        #99:#95       // proxyPassword:Ljava/lang/String;\n+  #188 = NameAndType        #106:#95      // tunnelHost:Ljava/lang/String;\n+  #189 = NameAndType        #100:#101     // charset:Ljava/nio/charset/Charset;\n+  #190 = Utf8               UTF-8\n+  #191 = Class              #279          // java/nio/charset/Charset\n+  #192 = NameAndType        #280:#281     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #193 = NameAndType        #107:#108     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V\n+  #194 = NameAndType        #107:#117     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;)V\n+  #195 = NameAndType        #120:#121     // _openDataConnection_:(ILjava/lang/String;)Ljava/net/Socket;\n+  #196 = NameAndType        #282:#283     // getDataConnectionMode:()I\n+  #197 = Utf8               org/apache/commons/net/ftp/FTPClient\n+  #198 = Utf8               java/lang/IllegalStateException\n+  #199 = Utf8               Only passive connection mode supported\n+  #200 = NameAndType        #107:#284     // \"<init>\":(Ljava/lang/String;)V\n+  #201 = NameAndType        #285:#286     // getRemoteAddress:()Ljava/net/InetAddress;\n+  #202 = Utf8               java/net/Inet6Address\n+  #203 = NameAndType        #287:#288     // isUseEPSVwithIPv4:()Z\n+  #204 = NameAndType        #289:#283     // epsv:()I\n+  #205 = Utf8               org/apache/commons/net/ftp/FTPReply\n+  #206 = NameAndType        #290:#291     // _replyLines:Ljava/util/ArrayList;\n+  #207 = NameAndType        #292:#293     // get:(I)Ljava/lang/Object;\n+  #208 = Utf8               java/lang/String\n+  #209 = NameAndType        #294:#284     // _parseExtendedPassiveModeReply:(Ljava/lang/String;)V\n+  #210 = NameAndType        #295:#283     // pasv:()I\n+  #211 = NameAndType        #296:#284     // _parsePassiveModeReply:(Ljava/lang/String;)V\n+  #212 = NameAndType        #297:#298     // getPassiveHost:()Ljava/lang/String;\n+  #213 = NameAndType        #299:#300     // _socketFactory_:Ljavax/net/SocketFactory;\n+  #214 = Class              #301          // javax/net/SocketFactory\n+  #215 = NameAndType        #302:#303     // createSocket:(Ljava/lang/String;I)Ljava/net/Socket;\n+  #216 = NameAndType        #304:#305     // getInputStream:()Ljava/io/InputStream;\n+  #217 = NameAndType        #306:#307     // getOutputStream:()Ljava/io/OutputStream;\n+  #218 = NameAndType        #308:#283     // getPassivePort:()I\n+  #219 = NameAndType        #154:#155     // tunnelHandshake:(Ljava/lang/String;ILjava/io/InputStream;Ljava/io/OutputStream;)Ljava/io/BufferedReader;\n+  #220 = NameAndType        #309:#310     // getRestartOffset:()J\n+  #221 = NameAndType        #311:#312     // restart:(J)Z\n+  #222 = NameAndType        #313:#178     // close:()V\n+  #223 = NameAndType        #314:#315     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #224 = NameAndType        #316:#317     // isPositivePreliminary:(I)Z\n+  #225 = NameAndType        #318:#134     // _socket_:Ljava/net/Socket;\n+  #226 = NameAndType        #319:#136     // _input_:Ljava/io/InputStream;\n+  #227 = NameAndType        #320:#138     // _output_:Ljava/io/OutputStream;\n+  #228 = Utf8               java/lang/Exception\n+  #229 = Utf8               java/io/IOException\n+  #230 = Utf8               java/lang/StringBuilder\n+  #231 = Utf8               Could not connect to\n+  #232 = NameAndType        #321:#322     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #233 = Utf8                using port\n+  #234 = NameAndType        #321:#323     // append:(I)Ljava/lang/StringBuilder;\n+  #235 = NameAndType        #324:#298     // toString:()Ljava/lang/String;\n+  #236 = NameAndType        #325:#326     // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #237 = NameAndType        #327:#328     // _connectAction_:(Ljava/io/Reader;)V\n+  #238 = Utf8               CONNECT\n+  #239 = Utf8               :\n+  #240 = Utf8                HTTP/1.1\n+  #241 = Utf8               Host:\n+  #242 = NameAndType        #329:#330     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #243 = NameAndType        #331:#332     // write:([B)V\n+  #244 = NameAndType        #102:#103     // CRLF:[B\n+  #245 = Utf8               Proxy-Authorization: Basic\n+  #246 = NameAndType        #333:#334     // encodeToString:([B)Ljava/lang/String;\n+  #247 = Utf8               java/util/ArrayList\n+  #248 = Utf8               java/io/BufferedReader\n+  #249 = Utf8               java/io/InputStreamReader\n+  #250 = NameAndType        #335:#336     // getCharset:()Ljava/nio/charset/Charset;\n+  #251 = NameAndType        #107:#337     // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #252 = NameAndType        #107:#328     // \"<init>\":(Ljava/io/Reader;)V\n+  #253 = NameAndType        #338:#298     // readLine:()Ljava/lang/String;\n+  #254 = NameAndType        #339:#283     // length:()I\n+  #255 = NameAndType        #340:#341     // add:(Ljava/lang/Object;)Z\n+  #256 = NameAndType        #169:#283     // size:()I\n+  #257 = Utf8               No response from proxy\n+  #258 = Utf8               HTTP/\n+  #259 = NameAndType        #342:#343     // startsWith:(Ljava/lang/String;)Z\n+  #260 = NameAndType        #344:#345     // substring:(II)Ljava/lang/String;\n+  #261 = Utf8               Invalid response from proxy:\n+  #262 = Utf8               200\n+  #263 = NameAndType        #346:#341     // equals:(Ljava/lang/Object;)Z\n+  #264 = Utf8               HTTPTunnelConnector: connection failed\\r\\n\n+  #265 = Utf8               Response received from the proxy:\\r\\n\n+  #266 = NameAndType        #347:#348     // iterator:()Ljava/util/Iterator;\n+  #267 = NameAndType        #349:#288     // hasNext:()Z\n+  #268 = NameAndType        #350:#351     // next:()Ljava/lang/Object;\n+  #269 = Utf8               \\r\\n\n+  #270 = Utf8               org/apache/commons/net/ftp/FTPHTTPClient\n+  #271 = Utf8               java/net/Socket\n+  #272 = Utf8               java/io/InputStream\n+  #273 = Utf8               java/io/OutputStream\n+  #274 = Utf8               java/io/Reader\n+  #275 = Utf8               java/net/SocketException\n+  #276 = Utf8               java/util/List\n+  #277 = Utf8               java/util/Iterator\n+  #278 = Utf8               java/io/UnsupportedEncodingException\n+  #279 = Utf8               java/nio/charset/Charset\n+  #280 = Utf8               forName\n+  #281 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #282 = Utf8               getDataConnectionMode\n+  #283 = Utf8               ()I\n+  #284 = Utf8               (Ljava/lang/String;)V\n+  #285 = Utf8               getRemoteAddress\n+  #286 = Utf8               ()Ljava/net/InetAddress;\n+  #287 = Utf8               isUseEPSVwithIPv4\n+  #288 = Utf8               ()Z\n+  #289 = Utf8               epsv\n+  #290 = Utf8               _replyLines\n+  #291 = Utf8               Ljava/util/ArrayList;\n+  #292 = Utf8               get\n+  #293 = Utf8               (I)Ljava/lang/Object;\n+  #294 = Utf8               _parseExtendedPassiveModeReply\n+  #295 = Utf8               pasv\n+  #296 = Utf8               _parsePassiveModeReply\n+  #297 = Utf8               getPassiveHost\n+  #298 = Utf8               ()Ljava/lang/String;\n+  #299 = Utf8               _socketFactory_\n+  #300 = Utf8               Ljavax/net/SocketFactory;\n+  #301 = Utf8               javax/net/SocketFactory\n+  #302 = Utf8               createSocket\n+  #303 = Utf8               (Ljava/lang/String;I)Ljava/net/Socket;\n+  #304 = Utf8               getInputStream\n+  #305 = Utf8               ()Ljava/io/InputStream;\n+  #306 = Utf8               getOutputStream\n+  #307 = Utf8               ()Ljava/io/OutputStream;\n+  #308 = Utf8               getPassivePort\n+  #309 = Utf8               getRestartOffset\n+  #310 = Utf8               ()J\n+  #311 = Utf8               restart\n+  #312 = Utf8               (J)Z\n+  #313 = Utf8               close\n+  #314 = Utf8               sendCommand\n+  #315 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #316 = Utf8               isPositivePreliminary\n+  #317 = Utf8               (I)Z\n+  #318 = Utf8               _socket_\n+  #319 = Utf8               _input_\n+  #320 = Utf8               _output_\n+  #321 = Utf8               append\n+  #322 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #323 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #324 = Utf8               toString\n+  #325 = Utf8               initCause\n+  #326 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #327 = Utf8               _connectAction_\n+  #328 = Utf8               (Ljava/io/Reader;)V\n+  #329 = Utf8               getBytes\n+  #330 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #331 = Utf8               write\n+  #332 = Utf8               ([B)V\n+  #333 = Utf8               encodeToString\n+  #334 = Utf8               ([B)Ljava/lang/String;\n+  #335 = Utf8               getCharset\n+  #336 = Utf8               ()Ljava/nio/charset/Charset;\n+  #337 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #338 = Utf8               readLine\n+  #339 = Utf8               length\n+  #340 = Utf8               add\n+  #341 = Utf8               (Ljava/lang/Object;)Z\n+  #342 = Utf8               startsWith\n+  #343 = Utf8               (Ljava/lang/String;)Z\n+  #344 = Utf8               substring\n+  #345 = Utf8               (II)Ljava/lang/String;\n+  #346 = Utf8               equals\n+  #347 = Utf8               iterator\n+  #348 = Utf8               ()Ljava/util/Iterator;\n+  #349 = Utf8               hasNext\n+  #350 = Utf8               next\n+  #351 = Utf8               ()Ljava/lang/Object;\n {\n   private final java.lang.String proxyHost;\n     descriptor: Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int proxyPort;\n     descriptor: I\n"}]}
