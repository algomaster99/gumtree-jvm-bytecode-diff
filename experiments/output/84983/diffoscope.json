{"diffoscope-json-version": 1, "source1": "first/FileSystemProviders.class", "source2": "second/FileSystemProviders.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,14 +11,18 @@\n import java.util.List;\n \n public class FileSystemProviders\n {\n     private static final FileSystemProviders INSTALLED;\n     private final List<FileSystemProvider> providers;\n     \n+    static {\n+        INSTALLED = new FileSystemProviders(FileSystemProvider.installedProviders());\n+    }\n+    \n     public static FileSystemProvider getFileSystemProvider(final Path path) {\n         return ((Path)Objects.requireNonNull(path, \"path\")).getFileSystem().provider();\n     }\n     \n     public static FileSystemProviders installed() {\n         return FileSystemProviders.INSTALLED;\n     }\n@@ -28,22 +32,18 @@\n     }\n     \n     public FileSystemProvider getFileSystemProvider(final String scheme) {\n         Objects.requireNonNull(scheme, \"scheme\");\n         if (scheme.equalsIgnoreCase(\"file\")) {\n             return FileSystems.getDefault().provider();\n         }\n-        return this.providers.stream().filter(provider -> provider.getScheme().equalsIgnoreCase(scheme)).findFirst().orElse(null);\n+        return this.providers.stream().filter(provider -> provider.getScheme().equalsIgnoreCase(anotherString)).findFirst().orElse(null);\n     }\n     \n     public FileSystemProvider getFileSystemProvider(final URI uri) {\n         return this.getFileSystemProvider(((URI)Objects.requireNonNull(uri, \"uri\")).getScheme());\n     }\n     \n     public FileSystemProvider getFileSystemProvider(final URL url) {\n         return this.getFileSystemProvider(((URL)Objects.requireNonNull(url, \"url\")).getProtocol());\n     }\n-    \n-    static {\n-        INSTALLED = new FileSystemProviders(FileSystemProvider.installedProviders());\n-    }\n }\n"}]}
