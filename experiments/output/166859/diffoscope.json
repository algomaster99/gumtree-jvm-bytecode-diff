{"diffoscope-json-version": 1, "source1": "first/CSVFormat$Builder.class", "source2": "second/CSVFormat$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,93 +1,93 @@\n-  SHA-256 checksum b5a0ef26b1e7d7a551f97cbbbb0323758070708c41578c46cfb80e8dc56f9886\n+  SHA-256 checksum 31ebd03ca4e2a49e4d6db48025bdd2c4fc98f07fbe0b1cde6890cb50c4bf212d\n   Compiled from \"CSVFormat.java\"\n public class org.apache.commons.csv.CSVFormat$Builder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #20                         // org/apache/commons/csv/CSVFormat$Builder\n   super_class: #76                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 50, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #20.#198      // org/apache/commons/csv/CSVFormat$Builder.allowDuplicateHeaderNames:Z\n-    #2 = Fieldref           #20.#199      // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n-    #3 = Fieldref           #20.#200      // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n-    #4 = Fieldref           #20.#201      // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n-    #5 = Fieldref           #20.#202      // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n-    #6 = Fieldref           #20.#203      // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n-    #7 = Fieldref           #20.#204      // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n-    #8 = Fieldref           #20.#205      // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n-    #9 = Fieldref           #20.#206      // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n-   #10 = Fieldref           #20.#207      // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n-   #11 = Fieldref           #20.#208      // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n-   #12 = Fieldref           #20.#209      // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n-   #13 = Fieldref           #20.#210      // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n-   #14 = Fieldref           #20.#211      // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n-   #15 = Fieldref           #20.#212      // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n-   #16 = Fieldref           #20.#213      // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n-   #17 = Fieldref           #20.#214      // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #18 = Fieldref           #20.#215      // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n-   #19 = Fieldref           #20.#216      // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n-   #20 = Class              #217          // org/apache/commons/csv/CSVFormat$Builder\n-   #21 = Fieldref           #43.#218      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #22 = Methodref          #20.#219      // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-   #23 = Methodref          #76.#220      // java/lang/Object.\"<init>\":()V\n-   #24 = Methodref          #43.#221      // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #25 = Methodref          #43.#222      // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #26 = Methodref          #43.#223      // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-   #27 = Methodref          #43.#224      // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #28 = Methodref          #43.#225      // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #29 = Methodref          #43.#226      // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #30 = Methodref          #43.#227      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #31 = Methodref          #43.#228      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #32 = Methodref          #43.#229      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #33 = Methodref          #43.#230      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #34 = Methodref          #43.#231      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #35 = Methodref          #43.#232      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #36 = Methodref          #43.#233      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #37 = Methodref          #43.#234      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #38 = Methodref          #43.#235      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #39 = Methodref          #43.#236      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #40 = Methodref          #43.#237      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #41 = Methodref          #43.#238      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #42 = Methodref          #43.#239      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #43 = Class              #240          // org/apache/commons/csv/CSVFormat\n-   #44 = Methodref          #43.#241      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-   #45 = Methodref          #242.#243     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #46 = Methodref          #20.#244      // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #47 = Methodref          #43.#245      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n-   #48 = Class              #246          // java/lang/IllegalArgumentException\n-   #49 = String             #247          // The comment start marker character cannot be a line break\n-   #50 = Methodref          #48.#248      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #59.#249      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #52 = Methodref          #20.#250      // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #53 = Methodref          #43.#251      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n-   #54 = String             #252          // The delimiter cannot be a line break\n-   #55 = Methodref          #20.#253      // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #56 = String             #254          // The escape character cannot be a line break\n-   #57 = Methodref          #255.#256     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+    #1 = Fieldref           #20.#197      // org/apache/commons/csv/CSVFormat$Builder.allowDuplicateHeaderNames:Z\n+    #2 = Fieldref           #20.#198      // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n+    #3 = Fieldref           #20.#199      // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n+    #4 = Fieldref           #20.#200      // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n+    #5 = Fieldref           #20.#201      // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n+    #6 = Fieldref           #20.#202      // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n+    #7 = Fieldref           #20.#203      // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n+    #8 = Fieldref           #20.#204      // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n+    #9 = Fieldref           #20.#205      // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n+   #10 = Fieldref           #20.#206      // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n+   #11 = Fieldref           #20.#207      // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n+   #12 = Fieldref           #20.#208      // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n+   #13 = Fieldref           #20.#209      // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n+   #14 = Fieldref           #20.#210      // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n+   #15 = Fieldref           #20.#211      // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n+   #16 = Fieldref           #20.#212      // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n+   #17 = Fieldref           #20.#213      // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #18 = Fieldref           #20.#214      // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n+   #19 = Fieldref           #20.#215      // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n+   #20 = Class              #216          // org/apache/commons/csv/CSVFormat$Builder\n+   #21 = Fieldref           #43.#217      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #22 = Methodref          #20.#218      // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+   #23 = Methodref          #76.#219      // java/lang/Object.\"<init>\":()V\n+   #24 = Methodref          #43.#220      // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #25 = Methodref          #43.#221      // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #26 = Methodref          #43.#222      // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #27 = Methodref          #43.#223      // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #28 = Methodref          #43.#224      // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #29 = Methodref          #43.#225      // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #30 = Methodref          #43.#226      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #31 = Methodref          #43.#227      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #32 = Methodref          #43.#228      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #33 = Methodref          #43.#229      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #34 = Methodref          #43.#230      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+   #35 = Methodref          #43.#231      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+   #36 = Methodref          #43.#232      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #37 = Methodref          #43.#233      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #38 = Methodref          #43.#234      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #39 = Methodref          #43.#235      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #40 = Methodref          #43.#236      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #41 = Methodref          #43.#237      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #42 = Methodref          #43.#238      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n+   #43 = Class              #239          // org/apache/commons/csv/CSVFormat\n+   #44 = Methodref          #43.#240      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+   #45 = Methodref          #241.#242     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #46 = Methodref          #20.#243      // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #47 = Methodref          #43.#244      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+   #48 = Class              #245          // java/lang/IllegalArgumentException\n+   #49 = String             #246          // The comment start marker character cannot be a line break\n+   #50 = Methodref          #48.#247      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #51 = Methodref          #59.#248      // java/lang/String.valueOf:(C)Ljava/lang/String;\n+   #52 = Methodref          #20.#249      // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #53 = Methodref          #43.#250      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n+   #54 = String             #251          // The delimiter cannot be a line break\n+   #55 = Methodref          #20.#252      // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #56 = String             #253          // The escape character cannot be a line break\n+   #57 = Methodref          #254.#255     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n    #58 = Class              #134          // \"[Ljava/lang/Enum;\"\n-   #59 = Class              #257          // java/lang/String\n-   #60 = Methodref          #258.#259     // java/lang/Enum.name:()Ljava/lang/String;\n-   #61 = Methodref          #20.#260      // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #62 = InterfaceMethodref #261.#262     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n-   #63 = Methodref          #20.#263      // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #64 = InterfaceMethodref #264.#265     // java/sql/ResultSetMetaData.getColumnCount:()I\n-   #65 = InterfaceMethodref #264.#266     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n-   #66 = Methodref          #43.#267      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #59 = Class              #256          // java/lang/String\n+   #60 = Methodref          #257.#258     // java/lang/Enum.name:()Ljava/lang/String;\n+   #61 = Methodref          #20.#259      // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #62 = InterfaceMethodref #146.#260     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+   #63 = Methodref          #20.#261      // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #64 = InterfaceMethodref #147.#262     // java/sql/ResultSetMetaData.getColumnCount:()I\n+   #65 = InterfaceMethodref #147.#263     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+   #66 = Methodref          #43.#264      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #67 = Class              #87           // \"[Ljava/lang/String;\"\n-   #68 = Methodref          #43.#268      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #69 = Class              #269          // java/lang/StringBuilder\n-   #70 = Methodref          #69.#220      // java/lang/StringBuilder.\"<init>\":()V\n-   #71 = Methodref          #69.#270      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #72 = Methodref          #69.#271      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #73 = Methodref          #69.#272      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #74 = Methodref          #20.#273      // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #75 = String             #274          // The quoteChar cannot be a line break\n-   #76 = Class              #275          // java/lang/Object\n+   #68 = Methodref          #43.#265      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+   #69 = Class              #266          // java/lang/StringBuilder\n+   #70 = Methodref          #69.#219      // java/lang/StringBuilder.\"<init>\":()V\n+   #71 = Methodref          #69.#267      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #72 = Methodref          #69.#268      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #73 = Methodref          #69.#269      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #74 = Methodref          #20.#270      // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+   #75 = String             #271          // The quoteChar cannot be a line break\n+   #76 = Class              #272          // java/lang/Object\n    #77 = Utf8               allowDuplicateHeaderNames\n    #78 = Utf8               Z\n    #79 = Utf8               allowMissingColumnNames\n    #80 = Utf8               autoFlush\n    #81 = Utf8               commentMarker\n    #82 = Utf8               Ljava/lang/Character;\n    #83 = Utf8               delimiter\n@@ -149,205 +149,202 @@\n   #139 = Utf8               [Ljava/lang/Enum<*>;\n   #140 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n   #141 = Utf8               Signature\n   #142 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n   #143 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n   #144 = Utf8               resultSet\n   #145 = Utf8               Ljava/sql/ResultSet;\n-  #146 = Class              #217          // org/apache/commons/csv/CSVFormat$Builder\n-  #147 = Class              #276          // java/sql/ResultSet\n-  #148 = Class              #277          // java/sql/ResultSetMetaData\n-  #149 = Utf8               Exceptions\n-  #150 = Class              #278          // java/sql/SQLException\n-  #151 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #152 = Utf8               columnCount\n-  #153 = Utf8               resultSetMetaData\n-  #154 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #155 = Utf8               labels\n-  #156 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #157 = Utf8               setHeaderComments\n-  #158 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #159 = Utf8               [Ljava/lang/Object;\n-  #160 = Utf8               setIgnoreEmptyLines\n-  #161 = Utf8               setIgnoreHeaderCase\n-  #162 = Utf8               setIgnoreSurroundingSpaces\n-  #163 = Utf8               setNullString\n-  #164 = Utf8               setQuote\n-  #165 = Utf8               setQuoteMode\n-  #166 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #167 = Utf8               setRecordSeparator\n-  #168 = Utf8               setSkipHeaderRecord\n-  #169 = Utf8               setTrailingDelimiter\n-  #170 = Utf8               setTrim\n-  #171 = Utf8               access$2200\n-  #172 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #173 = Utf8               x0\n-  #174 = Utf8               access$2300\n-  #175 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #176 = Utf8               access$2400\n-  #177 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #178 = Utf8               access$2500\n-  #179 = Utf8               access$2600\n-  #180 = Utf8               access$2700\n-  #181 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #182 = Utf8               access$2800\n-  #183 = Utf8               access$2900\n-  #184 = Utf8               access$3000\n-  #185 = Utf8               access$3100\n-  #186 = Utf8               access$3200\n-  #187 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #188 = Utf8               access$3300\n-  #189 = Utf8               access$3400\n-  #190 = Utf8               access$3500\n-  #191 = Utf8               access$3600\n-  #192 = Utf8               access$3700\n-  #193 = Utf8               access$3800\n-  #194 = Utf8               access$3900\n-  #195 = Utf8               access$4000\n-  #196 = Utf8               SourceFile\n-  #197 = Utf8               CSVFormat.java\n-  #198 = NameAndType        #77:#78       // allowDuplicateHeaderNames:Z\n-  #199 = NameAndType        #94:#84       // quotedNullString:Ljava/lang/String;\n-  #200 = NameAndType        #80:#78       // autoFlush:Z\n-  #201 = NameAndType        #100:#78      // trim:Z\n-  #202 = NameAndType        #99:#78       // trailingDelimiter:Z\n-  #203 = NameAndType        #90:#78       // ignoreHeaderCase:Z\n-  #204 = NameAndType        #98:#78       // skipHeaderRecord:Z\n-  #205 = NameAndType        #88:#87       // headers:[Ljava/lang/String;\n-  #206 = NameAndType        #86:#87       // headerComments:[Ljava/lang/String;\n-  #207 = NameAndType        #92:#84       // nullString:Ljava/lang/String;\n-  #208 = NameAndType        #97:#84       // recordSeparator:Ljava/lang/String;\n-  #209 = NameAndType        #89:#78       // ignoreEmptyLines:Z\n-  #210 = NameAndType        #79:#78       // allowMissingColumnNames:Z\n-  #211 = NameAndType        #91:#78       // ignoreSurroundingSpaces:Z\n-  #212 = NameAndType        #85:#82       // escapeCharacter:Ljava/lang/Character;\n-  #213 = NameAndType        #81:#82       // commentMarker:Ljava/lang/Character;\n-  #214 = NameAndType        #95:#96       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #215 = NameAndType        #93:#82       // quoteCharacter:Ljava/lang/Character;\n-  #216 = NameAndType        #83:#84       // delimiter:Ljava/lang/String;\n-  #217 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #218 = NameAndType        #279:#110     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #219 = NameAndType        #111:#112     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-  #220 = NameAndType        #111:#280     // \"<init>\":()V\n-  #221 = NameAndType        #281:#282     // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #222 = NameAndType        #283:#284     // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #223 = NameAndType        #285:#286     // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #224 = NameAndType        #287:#284     // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #225 = NameAndType        #288:#284     // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #226 = NameAndType        #289:#290     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #227 = NameAndType        #291:#290     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #228 = NameAndType        #292:#290     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #229 = NameAndType        #293:#282     // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #230 = NameAndType        #294:#282     // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #231 = NameAndType        #295:#296     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #232 = NameAndType        #297:#296     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #233 = NameAndType        #298:#290     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #234 = NameAndType        #299:#290     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #235 = NameAndType        #300:#290     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #236 = NameAndType        #301:#290     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #237 = NameAndType        #302:#290     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #238 = NameAndType        #303:#282     // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #239 = NameAndType        #304:#290     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #240 = Utf8               org/apache/commons/csv/CSVFormat\n-  #241 = NameAndType        #111:#306     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #242 = Class              #307          // java/lang/Character\n-  #243 = NameAndType        #308:#309     // valueOf:(C)Ljava/lang/Character;\n-  #244 = NameAndType        #121:#124     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #245 = NameAndType        #310:#311     // access$2000:(Ljava/lang/Character;)Z\n-  #246 = Utf8               java/lang/IllegalArgumentException\n-  #247 = Utf8               The comment start marker character cannot be a line break\n-  #248 = NameAndType        #111:#312     // \"<init>\":(Ljava/lang/String;)V\n-  #249 = NameAndType        #308:#313     // valueOf:(C)Ljava/lang/String;\n-  #250 = NameAndType        #126:#127     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #251 = NameAndType        #314:#315     // access$2100:(Ljava/lang/String;)Z\n-  #252 = Utf8               The delimiter cannot be a line break\n-  #253 = NameAndType        #128:#124     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #254 = Utf8               The escape character cannot be a line break\n-  #255 = Class              #316          // java/lang/Class\n-  #256 = NameAndType        #317:#318     // getEnumConstants:()[Ljava/lang/Object;\n-  #257 = Utf8               java/lang/String\n-  #258 = Class              #319          // java/lang/Enum\n-  #259 = NameAndType        #320:#321     // name:()Ljava/lang/String;\n-  #260 = NameAndType        #129:#156     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #261 = Class              #276          // java/sql/ResultSet\n-  #262 = NameAndType        #322:#323     // getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #263 = NameAndType        #129:#151     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #264 = Class              #277          // java/sql/ResultSetMetaData\n-  #265 = NameAndType        #324:#325     // getColumnCount:()I\n-  #266 = NameAndType        #326:#327     // getColumnLabel:(I)Ljava/lang/String;\n-  #267 = NameAndType        #328:#329     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #268 = NameAndType        #330:#331     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #269 = Utf8               java/lang/StringBuilder\n-  #270 = NameAndType        #332:#333     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #271 = NameAndType        #332:#334     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #272 = NameAndType        #335:#321     // toString:()Ljava/lang/String;\n-  #273 = NameAndType        #164:#124     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #274 = Utf8               The quoteChar cannot be a line break\n-  #275 = Utf8               java/lang/Object\n-  #276 = Utf8               java/sql/ResultSet\n-  #277 = Utf8               java/sql/ResultSetMetaData\n-  #278 = Utf8               java/sql/SQLException\n-  #279 = Utf8               DEFAULT\n-  #280 = Utf8               ()V\n-  #281 = Utf8               access$000\n-  #282 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #283 = Utf8               access$100\n-  #284 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #285 = Utf8               access$200\n-  #286 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #287 = Utf8               access$300\n-  #288 = Utf8               access$400\n-  #289 = Utf8               access$500\n-  #290 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n-  #291 = Utf8               access$600\n-  #292 = Utf8               access$700\n-  #293 = Utf8               access$800\n-  #294 = Utf8               access$900\n-  #295 = Utf8               access$1000\n-  #296 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #297 = Utf8               access$1100\n-  #298 = Utf8               access$1200\n-  #299 = Utf8               access$1300\n-  #300 = Utf8               access$1400\n-  #301 = Utf8               access$1500\n-  #302 = Utf8               access$1600\n-  #303 = Utf8               access$1700\n-  #304 = Utf8               access$1800\n-  #305 = Class              #336          // org/apache/commons/csv/CSVFormat$1\n-  #306 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #307 = Utf8               java/lang/Character\n-  #308 = Utf8               valueOf\n-  #309 = Utf8               (C)Ljava/lang/Character;\n-  #310 = Utf8               access$2000\n-  #311 = Utf8               (Ljava/lang/Character;)Z\n-  #312 = Utf8               (Ljava/lang/String;)V\n-  #313 = Utf8               (C)Ljava/lang/String;\n-  #314 = Utf8               access$2100\n-  #315 = Utf8               (Ljava/lang/String;)Z\n-  #316 = Utf8               java/lang/Class\n-  #317 = Utf8               getEnumConstants\n-  #318 = Utf8               ()[Ljava/lang/Object;\n-  #319 = Utf8               java/lang/Enum\n-  #320 = Utf8               name\n-  #321 = Utf8               ()Ljava/lang/String;\n-  #322 = Utf8               getMetaData\n-  #323 = Utf8               ()Ljava/sql/ResultSetMetaData;\n-  #324 = Utf8               getColumnCount\n-  #325 = Utf8               ()I\n-  #326 = Utf8               getColumnLabel\n-  #327 = Utf8               (I)Ljava/lang/String;\n-  #328 = Utf8               clone\n-  #329 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #330 = Utf8               toStringArray\n-  #331 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #332 = Utf8               append\n-  #333 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #334 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #335 = Utf8               toString\n-  #336 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #146 = Class              #273          // java/sql/ResultSet\n+  #147 = Class              #274          // java/sql/ResultSetMetaData\n+  #148 = Utf8               Exceptions\n+  #149 = Class              #275          // java/sql/SQLException\n+  #150 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #151 = Utf8               columnCount\n+  #152 = Utf8               resultSetMetaData\n+  #153 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #154 = Utf8               labels\n+  #155 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #156 = Utf8               setHeaderComments\n+  #157 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #158 = Utf8               [Ljava/lang/Object;\n+  #159 = Utf8               setIgnoreEmptyLines\n+  #160 = Utf8               setIgnoreHeaderCase\n+  #161 = Utf8               setIgnoreSurroundingSpaces\n+  #162 = Utf8               setNullString\n+  #163 = Utf8               setQuote\n+  #164 = Utf8               setQuoteMode\n+  #165 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #166 = Utf8               setRecordSeparator\n+  #167 = Utf8               setSkipHeaderRecord\n+  #168 = Utf8               setTrailingDelimiter\n+  #169 = Utf8               setTrim\n+  #170 = Utf8               access$2200\n+  #171 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #172 = Utf8               x0\n+  #173 = Utf8               access$2300\n+  #174 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #175 = Utf8               access$2400\n+  #176 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #177 = Utf8               access$2500\n+  #178 = Utf8               access$2600\n+  #179 = Utf8               access$2700\n+  #180 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #181 = Utf8               access$2800\n+  #182 = Utf8               access$2900\n+  #183 = Utf8               access$3000\n+  #184 = Utf8               access$3100\n+  #185 = Utf8               access$3200\n+  #186 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #187 = Utf8               access$3300\n+  #188 = Utf8               access$3400\n+  #189 = Utf8               access$3500\n+  #190 = Utf8               access$3600\n+  #191 = Utf8               access$3700\n+  #192 = Utf8               access$3800\n+  #193 = Utf8               access$3900\n+  #194 = Utf8               access$4000\n+  #195 = Utf8               SourceFile\n+  #196 = Utf8               CSVFormat.java\n+  #197 = NameAndType        #77:#78       // allowDuplicateHeaderNames:Z\n+  #198 = NameAndType        #94:#84       // quotedNullString:Ljava/lang/String;\n+  #199 = NameAndType        #80:#78       // autoFlush:Z\n+  #200 = NameAndType        #100:#78      // trim:Z\n+  #201 = NameAndType        #99:#78       // trailingDelimiter:Z\n+  #202 = NameAndType        #90:#78       // ignoreHeaderCase:Z\n+  #203 = NameAndType        #98:#78       // skipHeaderRecord:Z\n+  #204 = NameAndType        #88:#87       // headers:[Ljava/lang/String;\n+  #205 = NameAndType        #86:#87       // headerComments:[Ljava/lang/String;\n+  #206 = NameAndType        #92:#84       // nullString:Ljava/lang/String;\n+  #207 = NameAndType        #97:#84       // recordSeparator:Ljava/lang/String;\n+  #208 = NameAndType        #89:#78       // ignoreEmptyLines:Z\n+  #209 = NameAndType        #79:#78       // allowMissingColumnNames:Z\n+  #210 = NameAndType        #91:#78       // ignoreSurroundingSpaces:Z\n+  #211 = NameAndType        #85:#82       // escapeCharacter:Ljava/lang/Character;\n+  #212 = NameAndType        #81:#82       // commentMarker:Ljava/lang/Character;\n+  #213 = NameAndType        #95:#96       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+  #214 = NameAndType        #93:#82       // quoteCharacter:Ljava/lang/Character;\n+  #215 = NameAndType        #83:#84       // delimiter:Ljava/lang/String;\n+  #216 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+  #217 = NameAndType        #276:#110     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #218 = NameAndType        #111:#112     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+  #219 = NameAndType        #111:#277     // \"<init>\":()V\n+  #220 = NameAndType        #278:#279     // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #221 = NameAndType        #280:#281     // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #222 = NameAndType        #282:#283     // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+  #223 = NameAndType        #284:#281     // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #224 = NameAndType        #285:#281     // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #225 = NameAndType        #286:#287     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #226 = NameAndType        #288:#287     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #227 = NameAndType        #289:#287     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #228 = NameAndType        #290:#279     // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #229 = NameAndType        #291:#279     // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #230 = NameAndType        #292:#293     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #231 = NameAndType        #294:#293     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #232 = NameAndType        #295:#287     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #233 = NameAndType        #296:#287     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #234 = NameAndType        #297:#287     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #235 = NameAndType        #298:#287     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #236 = NameAndType        #299:#287     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #237 = NameAndType        #300:#279     // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #238 = NameAndType        #301:#287     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #239 = Utf8               org/apache/commons/csv/CSVFormat\n+  #240 = NameAndType        #111:#303     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #241 = Class              #304          // java/lang/Character\n+  #242 = NameAndType        #305:#306     // valueOf:(C)Ljava/lang/Character;\n+  #243 = NameAndType        #121:#124     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #244 = NameAndType        #307:#308     // access$2000:(Ljava/lang/Character;)Z\n+  #245 = Utf8               java/lang/IllegalArgumentException\n+  #246 = Utf8               The comment start marker character cannot be a line break\n+  #247 = NameAndType        #111:#309     // \"<init>\":(Ljava/lang/String;)V\n+  #248 = NameAndType        #305:#310     // valueOf:(C)Ljava/lang/String;\n+  #249 = NameAndType        #126:#127     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #250 = NameAndType        #311:#312     // access$2100:(Ljava/lang/String;)Z\n+  #251 = Utf8               The delimiter cannot be a line break\n+  #252 = NameAndType        #128:#124     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #253 = Utf8               The escape character cannot be a line break\n+  #254 = Class              #313          // java/lang/Class\n+  #255 = NameAndType        #314:#315     // getEnumConstants:()[Ljava/lang/Object;\n+  #256 = Utf8               java/lang/String\n+  #257 = Class              #316          // java/lang/Enum\n+  #258 = NameAndType        #317:#318     // name:()Ljava/lang/String;\n+  #259 = NameAndType        #129:#155     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #260 = NameAndType        #319:#320     // getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #261 = NameAndType        #129:#150     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #262 = NameAndType        #321:#322     // getColumnCount:()I\n+  #263 = NameAndType        #323:#324     // getColumnLabel:(I)Ljava/lang/String;\n+  #264 = NameAndType        #325:#326     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #265 = NameAndType        #327:#328     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #266 = Utf8               java/lang/StringBuilder\n+  #267 = NameAndType        #329:#330     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #268 = NameAndType        #329:#331     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #269 = NameAndType        #332:#318     // toString:()Ljava/lang/String;\n+  #270 = NameAndType        #163:#124     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #271 = Utf8               The quoteChar cannot be a line break\n+  #272 = Utf8               java/lang/Object\n+  #273 = Utf8               java/sql/ResultSet\n+  #274 = Utf8               java/sql/ResultSetMetaData\n+  #275 = Utf8               java/sql/SQLException\n+  #276 = Utf8               DEFAULT\n+  #277 = Utf8               ()V\n+  #278 = Utf8               access$000\n+  #279 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #280 = Utf8               access$100\n+  #281 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #282 = Utf8               access$200\n+  #283 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+  #284 = Utf8               access$300\n+  #285 = Utf8               access$400\n+  #286 = Utf8               access$500\n+  #287 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n+  #288 = Utf8               access$600\n+  #289 = Utf8               access$700\n+  #290 = Utf8               access$800\n+  #291 = Utf8               access$900\n+  #292 = Utf8               access$1000\n+  #293 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #294 = Utf8               access$1100\n+  #295 = Utf8               access$1200\n+  #296 = Utf8               access$1300\n+  #297 = Utf8               access$1400\n+  #298 = Utf8               access$1500\n+  #299 = Utf8               access$1600\n+  #300 = Utf8               access$1700\n+  #301 = Utf8               access$1800\n+  #302 = Class              #333          // org/apache/commons/csv/CSVFormat$1\n+  #303 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #304 = Utf8               java/lang/Character\n+  #305 = Utf8               valueOf\n+  #306 = Utf8               (C)Ljava/lang/Character;\n+  #307 = Utf8               access$2000\n+  #308 = Utf8               (Ljava/lang/Character;)Z\n+  #309 = Utf8               (Ljava/lang/String;)V\n+  #310 = Utf8               (C)Ljava/lang/String;\n+  #311 = Utf8               access$2100\n+  #312 = Utf8               (Ljava/lang/String;)Z\n+  #313 = Utf8               java/lang/Class\n+  #314 = Utf8               getEnumConstants\n+  #315 = Utf8               ()[Ljava/lang/Object;\n+  #316 = Utf8               java/lang/Enum\n+  #317 = Utf8               name\n+  #318 = Utf8               ()Ljava/lang/String;\n+  #319 = Utf8               getMetaData\n+  #320 = Utf8               ()Ljava/sql/ResultSetMetaData;\n+  #321 = Utf8               getColumnCount\n+  #322 = Utf8               ()I\n+  #323 = Utf8               getColumnLabel\n+  #324 = Utf8               (I)Ljava/lang/String;\n+  #325 = Utf8               clone\n+  #326 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #327 = Utf8               toStringArray\n+  #328 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+  #329 = Utf8               append\n+  #330 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #331 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #332 = Utf8               toString\n+  #333 = Utf8               org/apache/commons/csv/CSVFormat$1\n {\n   private boolean allowDuplicateHeaderNames;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean allowMissingColumnNames;\n     descriptor: Z\n@@ -1504,8 +1501,8 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n }\n SourceFile: \"CSVFormat.java\"\n InnerClasses:\n   public static #102= #20 of #43;         // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n-  static #305;                            // class org/apache/commons/csv/CSVFormat$1\n+  static #302;                            // class org/apache/commons/csv/CSVFormat$1\n"}]}
