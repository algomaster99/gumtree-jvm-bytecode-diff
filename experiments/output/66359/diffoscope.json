{"diffoscope-json-version": 1, "source1": "first/ReadWriteSynchronizer.class", "source2": "second/ReadWriteSynchronizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,92 +1,92 @@\n-  SHA-256 checksum b3952479581e38b3de012b8fa8b3d641b1d29bad78ce3350f99c2b519befc4b8\n+  SHA-256 checksum 63dd99a94375a5f6c7f48a5fb5c7285978aded9fea9fbe00c07b7dfc45841e8c\n   Compiled from \"ReadWriteSynchronizer.java\"\n public class org.apache.commons.configuration2.sync.ReadWriteSynchronizer implements org.apache.commons.configuration2.sync.Synchronizer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  super_class: #12                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#35        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #11.#36        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-   #3 = Fieldref           #11.#37        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-   #4 = Methodref          #11.#38        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.\"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n-   #5 = InterfaceMethodref #25.#39        // java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-   #6 = InterfaceMethodref #40.#41        // java/util/concurrent/locks/Lock.lock:()V\n-   #7 = InterfaceMethodref #40.#42        // java/util/concurrent/locks/Lock.unlock:()V\n-   #8 = InterfaceMethodref #25.#43        // java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-   #9 = Class              #44            // java/util/concurrent/locks/ReentrantReadWriteLock\n-  #10 = Methodref          #9.#35         // java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n-  #11 = Class              #45            // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  #12 = Class              #46            // java/lang/Object\n-  #13 = Class              #47            // org/apache/commons/configuration2/sync/Synchronizer\n-  #14 = Utf8               lock\n-  #15 = Utf8               Ljava/util/concurrent/locks/ReadWriteLock;\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/util/concurrent/locks/ReadWriteLock;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               LocalVariableTable\n-  #21 = Utf8               this\n-  #22 = Utf8               Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n-  #23 = Utf8               l\n-  #24 = Utf8               StackMapTable\n-  #25 = Class              #48            // java/util/concurrent/locks/ReadWriteLock\n-  #26 = Utf8               ()V\n-  #27 = Utf8               beginRead\n-  #28 = Utf8               endRead\n-  #29 = Utf8               beginWrite\n-  #30 = Utf8               endWrite\n-  #31 = Utf8               createDefaultLock\n-  #32 = Utf8               ()Ljava/util/concurrent/locks/ReadWriteLock;\n-  #33 = Utf8               SourceFile\n-  #34 = Utf8               ReadWriteSynchronizer.java\n-  #35 = NameAndType        #16:#26        // \"<init>\":()V\n-  #36 = NameAndType        #31:#32        // createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-  #37 = NameAndType        #14:#15        // lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-  #38 = NameAndType        #16:#17        // \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n-  #39 = NameAndType        #49:#50        // readLock:()Ljava/util/concurrent/locks/Lock;\n-  #40 = Class              #51            // java/util/concurrent/locks/Lock\n-  #41 = NameAndType        #14:#26        // lock:()V\n-  #42 = NameAndType        #52:#26        // unlock:()V\n-  #43 = NameAndType        #53:#50        // writeLock:()Ljava/util/concurrent/locks/Lock;\n-  #44 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock\n-  #45 = Utf8               org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  #46 = Utf8               java/lang/Object\n-  #47 = Utf8               org/apache/commons/configuration2/sync/Synchronizer\n-  #48 = Utf8               java/util/concurrent/locks/ReadWriteLock\n-  #49 = Utf8               readLock\n-  #50 = Utf8               ()Ljava/util/concurrent/locks/Lock;\n-  #51 = Utf8               java/util/concurrent/locks/Lock\n-  #52 = Utf8               unlock\n-  #53 = Utf8               writeLock\n+   #1 = Class              #2             // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+   #2 = Utf8               org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/configuration2/sync/Synchronizer\n+   #6 = Utf8               org/apache/commons/configuration2/sync/Synchronizer\n+   #7 = Utf8               lock\n+   #8 = Utf8               Ljava/util/concurrent/locks/ReadWriteLock;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#14         // \"<init>\":()V\n+  #14 = Utf8               ()V\n+  #15 = Methodref          #1.#16         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+  #16 = NameAndType        #17:#18        // createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+  #17 = Utf8               createDefaultLock\n+  #18 = Utf8               ()Ljava/util/concurrent/locks/ReadWriteLock;\n+  #19 = Fieldref           #1.#20         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+  #20 = NameAndType        #7:#8          // lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               LocalVariableTable\n+  #23 = Utf8               this\n+  #24 = Utf8               Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n+  #25 = Utf8               l\n+  #26 = Utf8               StackMapTable\n+  #27 = Class              #28            // java/util/concurrent/locks/ReadWriteLock\n+  #28 = Utf8               java/util/concurrent/locks/ReadWriteLock\n+  #29 = Methodref          #1.#30         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.\"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #30 = NameAndType        #9:#10         // \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #31 = Utf8               beginRead\n+  #32 = InterfaceMethodref #27.#33        // java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+  #33 = NameAndType        #34:#35        // readLock:()Ljava/util/concurrent/locks/Lock;\n+  #34 = Utf8               readLock\n+  #35 = Utf8               ()Ljava/util/concurrent/locks/Lock;\n+  #36 = InterfaceMethodref #37.#39        // java/util/concurrent/locks/Lock.lock:()V\n+  #37 = Class              #38            // java/util/concurrent/locks/Lock\n+  #38 = Utf8               java/util/concurrent/locks/Lock\n+  #39 = NameAndType        #7:#14         // lock:()V\n+  #40 = Utf8               endRead\n+  #41 = InterfaceMethodref #37.#42        // java/util/concurrent/locks/Lock.unlock:()V\n+  #42 = NameAndType        #43:#14        // unlock:()V\n+  #43 = Utf8               unlock\n+  #44 = Utf8               beginWrite\n+  #45 = InterfaceMethodref #27.#46        // java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+  #46 = NameAndType        #47:#35        // writeLock:()Ljava/util/concurrent/locks/Lock;\n+  #47 = Utf8               writeLock\n+  #48 = Utf8               endWrite\n+  #49 = Class              #50            // java/util/concurrent/locks/ReentrantReadWriteLock\n+  #50 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock\n+  #51 = Methodref          #49.#13        // java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               ReadWriteSynchronizer.java\n {\n   private final java.util.concurrent.locks.ReadWriteLock lock;\n     descriptor: Ljava/util/concurrent/locks/ReadWriteLock;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.configuration2.sync.ReadWriteSynchronizer(java.util.concurrent.locks.ReadWriteLock);\n     descriptor: (Ljava/util/concurrent/locks/ReadWriteLock;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnull        13\n          9: aload_1\n         10: goto          16\n-        13: invokestatic  #2                  // Method createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-        16: putfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+        13: invokestatic  #15                 // Method createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+        16: putfield      #19                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n         19: return\n       LineNumberTable:\n-        line 55: 0\n+        line 54: 0\n         line 56: 4\n         line 57: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n             0      20     1     l   Ljava/util/concurrent/locks/ReadWriteLock;\n       StackMapTable: number_of_entries = 2\n@@ -102,97 +102,99 @@\n   public org.apache.commons.configuration2.sync.ReadWriteSynchronizer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #4                  // Method \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+         2: invokespecial #29                 // Method \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n          5: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n \n   public void beginRead();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n+         1: getfield      #19                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n         14: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n \n   public void endRead();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n+         1: getfield      #19                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n         14: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n \n   public void beginWrite();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n+         1: getfield      #19                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #36,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n         14: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n \n   public void endWrite();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n+         1: getfield      #19                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n         14: return\n       LineNumberTable:\n         line 89: 0\n         line 90: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/configuration2/sync/ReadWriteSynchronizer;\n \n   private static java.util.concurrent.locks.ReadWriteLock createDefaultLock();\n     descriptor: ()Ljava/util/concurrent/locks/ReadWriteLock;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock\n+         0: new           #49                 // class java/util/concurrent/locks/ReentrantReadWriteLock\n          3: dup\n-         4: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n+         4: invokespecial #51                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 100: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n }\n SourceFile: \"ReadWriteSynchronizer.java\"\n"}]}
