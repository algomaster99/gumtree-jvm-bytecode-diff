{"diffoscope-json-version": 1, "source1": "first/FileFileFilter.class", "source2": "second/FileFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,79 +1,79 @@\n-  SHA-256 checksum f00f4d88140dea9d9119a664b5c83df4eba65489b95d9d626c05c62357d76722\n+  SHA-256 checksum 599d24d8e3806b70989704b4c35ac3659a5659d11122bffefe0513f70d0567e4\n   Compiled from \"FileFileFilter.java\"\n public class org.apache.commons.io.filefilter.FileFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/io/filefilter/FileFileFilter\n-  super_class: #10                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #22                         // org/apache/commons/io/filefilter/FileFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#33        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Methodref          #34.#35        // java/io/File.isFile:()Z\n-   #3 = Class              #36            // java/nio/file/LinkOption\n-   #4 = Methodref          #37.#38        // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #5 = Methodref          #6.#39         // org/apache/commons/io/filefilter/FileFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #6 = Class              #40            // org/apache/commons/io/filefilter/FileFileFilter\n-   #7 = Methodref          #6.#33         // org/apache/commons/io/filefilter/FileFileFilter.\"<init>\":()V\n-   #8 = Fieldref           #6.#41         // org/apache/commons/io/filefilter/FileFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #9 = Fieldref           #6.#42         // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #10 = Class              #43            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #11 = Class              #44            // java/io/Serializable\n-  #12 = Utf8               INSTANCE\n-  #13 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #14 = Utf8               FILE\n-  #15 = Utf8               Deprecated\n-  #16 = Utf8               RuntimeVisibleAnnotations\n-  #17 = Utf8               Ljava/lang/Deprecated;\n-  #18 = Utf8               serialVersionUID\n-  #19 = Utf8               J\n-  #20 = Utf8               ConstantValue\n-  #21 = Long               5345244090827540862l\n-  #23 = Utf8               <init>\n-  #24 = Utf8               ()V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               accept\n-  #28 = Utf8               (Ljava/io/File;)Z\n-  #29 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #30 = Utf8               <clinit>\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               FileFileFilter.java\n-  #33 = NameAndType        #23:#24        // \"<init>\":()V\n-  #34 = Class              #45            // java/io/File\n-  #35 = NameAndType        #46:#47        // isFile:()Z\n-  #36 = Utf8               java/nio/file/LinkOption\n-  #37 = Class              #48            // java/nio/file/Files\n-  #38 = NameAndType        #49:#50        // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #39 = NameAndType        #51:#52        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #40 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n-  #41 = NameAndType        #12:#13        // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #42 = NameAndType        #14:#13        // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #43 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #44 = Utf8               java/io/Serializable\n-  #45 = Utf8               java/io/File\n-  #46 = Utf8               isFile\n-  #47 = Utf8               ()Z\n-  #48 = Utf8               java/nio/file/Files\n-  #49 = Utf8               isRegularFile\n-  #50 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #51 = Utf8               toFileVisitResult\n-  #52 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // java/io/File.isFile:()Z\n+   #8 = Class              #10            // java/io/File\n+   #9 = NameAndType        #11:#12        // isFile:()Z\n+  #10 = Utf8               java/io/File\n+  #11 = Utf8               isFile\n+  #12 = Utf8               ()Z\n+  #13 = Class              #14            // java/nio/file/LinkOption\n+  #14 = Utf8               java/nio/file/LinkOption\n+  #15 = Methodref          #16.#17        // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #16 = Class              #18            // java/nio/file/Files\n+  #17 = NameAndType        #19:#20        // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #18 = Utf8               java/nio/file/Files\n+  #19 = Utf8               isRegularFile\n+  #20 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #21 = Methodref          #22.#23        // org/apache/commons/io/filefilter/FileFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #22 = Class              #24            // org/apache/commons/io/filefilter/FileFileFilter\n+  #23 = NameAndType        #25:#26        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #24 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n+  #25 = Utf8               toFileVisitResult\n+  #26 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #27 = Methodref          #22.#3         // org/apache/commons/io/filefilter/FileFileFilter.\"<init>\":()V\n+  #28 = Fieldref           #22.#29        // org/apache/commons/io/filefilter/FileFileFilter.INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #29 = NameAndType        #30:#31        // INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #30 = Utf8               INSTANCE\n+  #31 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #32 = Fieldref           #22.#33        // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #33 = NameAndType        #34:#31        // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #34 = Utf8               FILE\n+  #35 = Class              #36            // java/io/Serializable\n+  #36 = Utf8               java/io/Serializable\n+  #37 = Utf8               Deprecated\n+  #38 = Utf8               RuntimeVisibleAnnotations\n+  #39 = Utf8               Ljava/lang/Deprecated;\n+  #40 = Utf8               serialVersionUID\n+  #41 = Utf8               J\n+  #42 = Utf8               ConstantValue\n+  #43 = Long               5345244090827540862l\n+  #45 = Utf8               Code\n+  #46 = Utf8               LineNumberTable\n+  #47 = Utf8               accept\n+  #48 = Utf8               (Ljava/io/File;)Z\n+  #49 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #50 = Utf8               <clinit>\n+  #51 = Utf8               SourceFile\n+  #52 = Utf8               FileFileFilter.java\n {\n   public static final org.apache.commons.io.filefilter.IOFileFilter INSTANCE;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter FILE;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #17()\n+      0: #39()\n         java.lang.Deprecated\n \n   private static final long serialVersionUID = 5345244090827540862l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 5345244090827540862l\n \n@@ -91,44 +91,44 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #2                  // Method java/io/File.isFile:()Z\n+         1: invokevirtual #7                  // Method java/io/File.isFile:()Z\n          4: ireturn\n       LineNumberTable:\n         line 96: 0\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #3                  // class java/nio/file/LinkOption\n-         5: invokestatic  #4                  // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #13                 // class java/nio/file/LinkOption\n+         5: invokestatic  #15                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: aload_1\n-         9: invokestatic  #5                  // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+         9: invokestatic  #21                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         12: areturn\n       LineNumberTable:\n         line 108: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #6                  // class org/apache/commons/io/filefilter/FileFileFilter\n+         0: new           #22                 // class org/apache/commons/io/filefilter/FileFileFilter\n          3: dup\n-         4: invokespecial #7                  // Method \"<init>\":()V\n-         7: putstatic     #8                  // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        10: getstatic     #8                  // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        13: putstatic     #9                  // Field FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         4: invokespecial #27                 // Method \"<init>\":()V\n+         7: putstatic     #28                 // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        10: getstatic     #28                 // Field INSTANCE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        13: putstatic     #32                 // Field FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         16: return\n       LineNumberTable:\n         line 70: 0\n         line 78: 10\n }\n SourceFile: \"FileFileFilter.java\"\n"}]}
