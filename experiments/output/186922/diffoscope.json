{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic.class", "source2": "second/ColognePhonetic.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,195 +1,195 @@\n-  SHA-256 checksum 65ace724ba3095834a72fc2ccbbd86223a15085e15a4be49a23251e315945a9f\n+  SHA-256 checksum 58371960a46e8c9e36dfde0545d7a88f8b34b5d56fa99659ef2e8683883ae40f\n   Compiled from \"ColognePhonetic.java\"\n public class org.apache.commons.codec.language.ColognePhonetic implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/codec/language/ColognePhonetic\n-  super_class: #43                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/codec/language/ColognePhonetic\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 10, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Methodref          #43.#106      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #107          // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-    #3 = Methodref          #8.#108       // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n-    #4 = Methodref          #2.#109       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-    #5 = Class              #110          // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-    #6 = Methodref          #2.#111       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n-    #7 = Methodref          #5.#112       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-    #8 = Class              #113          // org/apache/commons/codec/language/ColognePhonetic\n-    #9 = Methodref          #2.#114       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n-   #10 = Methodref          #2.#115       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n-   #11 = Methodref          #2.#116       // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n-   #12 = Fieldref           #8.#117       // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n-   #13 = Methodref          #8.#118       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n-   #14 = Methodref          #5.#119       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n-   #15 = Fieldref           #8.#120       // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n-   #16 = Fieldref           #8.#121       // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n-   #17 = Fieldref           #8.#122       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n-   #18 = Fieldref           #8.#123       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n-   #19 = Methodref          #5.#114       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n-   #20 = Fieldref           #8.#124       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n-   #21 = Fieldref           #8.#125       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n-   #22 = Fieldref           #8.#126       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n-   #23 = Fieldref           #8.#127       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n-   #24 = Methodref          #5.#128       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n-   #25 = Class              #129          // java/lang/String\n-   #26 = Class              #130          // org/apache/commons/codec/EncoderException\n-   #27 = Class              #131          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#106      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #132          // This method\\'s parameter was expected to be of the type\n-   #30 = Methodref          #27.#133      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #134.#135     // java/lang/Class.getName:()Ljava/lang/String;\n-   #32 = String             #136          // . But actually it was of the type\n-   #33 = Methodref          #43.#137      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #34 = String             #138          // .\n-   #35 = Methodref          #27.#128      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #36 = Methodref          #26.#139      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #8.#140       // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #38 = Methodref          #8.#141       // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-   #39 = Methodref          #25.#142      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #40 = Fieldref           #143.#144     // java/util/Locale.GERMAN:Ljava/util/Locale;\n-   #41 = Methodref          #25.#145      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #42 = Methodref          #25.#146      // java/lang/String.toCharArray:()[C\n-   #43 = Class              #147          // java/lang/Object\n-   #44 = Class              #148          // org/apache/commons/codec/StringEncoder\n-   #45 = Utf8               CologneInputBuffer\n-   #46 = Utf8               InnerClasses\n-   #47 = Utf8               CologneOutputBuffer\n-   #48 = Class              #149          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-   #49 = Utf8               CologneBuffer\n-   #50 = Utf8               AEIJOUY\n-   #51 = Utf8               [C\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #8 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #9 = Methodref          #10.#11       // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n+   #10 = Class              #12           // org/apache/commons/codec/language/ColognePhonetic\n+   #11 = NameAndType        #13:#14       // preprocess:(Ljava/lang/String;)[C\n+   #12 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n+   #13 = Utf8               preprocess\n+   #14 = Utf8               (Ljava/lang/String;)[C\n+   #15 = Methodref          #7.#16        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #16 = NameAndType        #5:#17        // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #17 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #18 = Class              #19           // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+   #19 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+   #20 = Methodref          #7.#21        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+   #21 = NameAndType        #22:#23       // length:()I\n+   #22 = Utf8               length\n+   #23 = Utf8               ()I\n+   #24 = Methodref          #18.#25       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #25 = NameAndType        #5:#26        // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #26 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #27 = Methodref          #7.#28        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n+   #28 = NameAndType        #29:#30       // isEmpty:()Z\n+   #29 = Utf8               isEmpty\n+   #30 = Utf8               ()Z\n+   #31 = Methodref          #7.#32        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+   #32 = NameAndType        #33:#34       // removeNext:()C\n+   #33 = Utf8               removeNext\n+   #34 = Utf8               ()C\n+   #35 = Methodref          #7.#36        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+   #36 = NameAndType        #37:#34       // getNextChar:()C\n+   #37 = Utf8               getNextChar\n+   #38 = Fieldref           #10.#39       // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n+   #39 = NameAndType        #40:#41       // AEIJOUY:[C\n+   #40 = Utf8               AEIJOUY\n+   #41 = Utf8               [C\n+   #42 = Methodref          #10.#43       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n+   #43 = NameAndType        #44:#45       // arrayContains:([CC)Z\n+   #44 = Utf8               arrayContains\n+   #45 = Utf8               ([CC)Z\n+   #46 = Methodref          #18.#47       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+   #47 = NameAndType        #48:#49       // put:(C)V\n+   #48 = Utf8               put\n+   #49 = Utf8               (C)V\n+   #50 = Fieldref           #10.#51       // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n+   #51 = NameAndType        #52:#41       // CSZ:[C\n    #52 = Utf8               CSZ\n-   #53 = Utf8               FPVW\n-   #54 = Utf8               GKQ\n-   #55 = Utf8               CKQ\n-   #56 = Utf8               AHKLOQRUX\n-   #57 = Utf8               SZ\n-   #58 = Utf8               AHKOQUX\n-   #59 = Utf8               DTX\n-   #60 = Utf8               CHAR_IGNORE\n-   #61 = Utf8               C\n-   #62 = Utf8               ConstantValue\n-   #63 = Integer            45\n-   #64 = Utf8               <init>\n-   #65 = Utf8               ()V\n-   #66 = Utf8               Code\n-   #67 = Utf8               LineNumberTable\n-   #68 = Utf8               LocalVariableTable\n-   #69 = Utf8               this\n-   #70 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic;\n-   #71 = Utf8               arrayContains\n-   #72 = Utf8               ([CC)Z\n-   #73 = Utf8               element\n-   #74 = Utf8               arr\n-   #75 = Utf8               key\n-   #76 = Utf8               StackMapTable\n-   #77 = Class              #51           // \"[C\"\n-   #78 = Utf8               colognePhonetic\n-   #79 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #80 = Utf8               nextChar\n-   #81 = Utf8               chr\n-   #82 = Utf8               text\n-   #83 = Utf8               Ljava/lang/String;\n-   #84 = Utf8               input\n-   #85 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer;\n-   #86 = Utf8               output\n-   #87 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer;\n-   #88 = Utf8               lastChar\n-   #89 = Utf8               encode\n-   #90 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Utf8               object\n-   #92 = Utf8               Ljava/lang/Object;\n-   #93 = Utf8               Exceptions\n-   #94 = Utf8               isEncodeEqual\n-   #95 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #96 = Utf8               text1\n-   #97 = Utf8               text2\n-   #98 = Utf8               preprocess\n-   #99 = Utf8               (Ljava/lang/String;)[C\n-  #100 = Utf8               index\n-  #101 = Utf8               I\n-  #102 = Utf8               chrs\n-  #103 = Utf8               <clinit>\n-  #104 = Utf8               SourceFile\n-  #105 = Utf8               ColognePhonetic.java\n-  #106 = NameAndType        #64:#65       // \"<init>\":()V\n-  #107 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-  #108 = NameAndType        #98:#99       // preprocess:(Ljava/lang/String;)[C\n-  #109 = NameAndType        #64:#150      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #110 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-  #111 = NameAndType        #151:#152     // length:()I\n-  #112 = NameAndType        #64:#153      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #113 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n-  #114 = NameAndType        #154:#155     // isEmpty:()Z\n-  #115 = NameAndType        #156:#157     // removeNext:()C\n-  #116 = NameAndType        #158:#157     // getNextChar:()C\n-  #117 = NameAndType        #50:#51       // AEIJOUY:[C\n-  #118 = NameAndType        #71:#72       // arrayContains:([CC)Z\n-  #119 = NameAndType        #159:#160     // put:(C)V\n-  #120 = NameAndType        #52:#51       // CSZ:[C\n-  #121 = NameAndType        #53:#51       // FPVW:[C\n-  #122 = NameAndType        #54:#51       // GKQ:[C\n-  #123 = NameAndType        #55:#51       // CKQ:[C\n-  #124 = NameAndType        #56:#51       // AHKLOQRUX:[C\n-  #125 = NameAndType        #57:#51       // SZ:[C\n-  #126 = NameAndType        #58:#51       // AHKOQUX:[C\n-  #127 = NameAndType        #59:#51       // DTX:[C\n-  #128 = NameAndType        #161:#162     // toString:()Ljava/lang/String;\n-  #129 = Utf8               java/lang/String\n-  #130 = Utf8               org/apache/commons/codec/EncoderException\n-  #131 = Utf8               java/lang/StringBuilder\n-  #132 = Utf8               This method\\'s parameter was expected to be of the type\n-  #133 = NameAndType        #163:#164     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #134 = Class              #165          // java/lang/Class\n-  #135 = NameAndType        #166:#162     // getName:()Ljava/lang/String;\n-  #136 = Utf8               . But actually it was of the type\n-  #137 = NameAndType        #167:#168     // getClass:()Ljava/lang/Class;\n-  #138 = Utf8               .\n-  #139 = NameAndType        #64:#169      // \"<init>\":(Ljava/lang/String;)V\n-  #140 = NameAndType        #89:#79       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #141 = NameAndType        #78:#79       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-  #142 = NameAndType        #170:#171     // equals:(Ljava/lang/Object;)Z\n-  #143 = Class              #172          // java/util/Locale\n-  #144 = NameAndType        #173:#174     // GERMAN:Ljava/util/Locale;\n-  #145 = NameAndType        #175:#176     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #146 = NameAndType        #177:#178     // toCharArray:()[C\n-  #147 = Utf8               java/lang/Object\n-  #148 = Utf8               org/apache/commons/codec/StringEncoder\n-  #149 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-  #150 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #151 = Utf8               length\n-  #152 = Utf8               ()I\n-  #153 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #154 = Utf8               isEmpty\n-  #155 = Utf8               ()Z\n-  #156 = Utf8               removeNext\n-  #157 = Utf8               ()C\n-  #158 = Utf8               getNextChar\n-  #159 = Utf8               put\n-  #160 = Utf8               (C)V\n-  #161 = Utf8               toString\n-  #162 = Utf8               ()Ljava/lang/String;\n-  #163 = Utf8               append\n-  #164 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #165 = Utf8               java/lang/Class\n-  #166 = Utf8               getName\n-  #167 = Utf8               getClass\n-  #168 = Utf8               ()Ljava/lang/Class;\n-  #169 = Utf8               (Ljava/lang/String;)V\n-  #170 = Utf8               equals\n-  #171 = Utf8               (Ljava/lang/Object;)Z\n-  #172 = Utf8               java/util/Locale\n-  #173 = Utf8               GERMAN\n-  #174 = Utf8               Ljava/util/Locale;\n-  #175 = Utf8               toUpperCase\n-  #176 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #177 = Utf8               toCharArray\n-  #178 = Utf8               ()[C\n+   #53 = Fieldref           #10.#54       // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n+   #54 = NameAndType        #55:#41       // FPVW:[C\n+   #55 = Utf8               FPVW\n+   #56 = Fieldref           #10.#57       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n+   #57 = NameAndType        #58:#41       // GKQ:[C\n+   #58 = Utf8               GKQ\n+   #59 = Fieldref           #10.#60       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n+   #60 = NameAndType        #61:#41       // CKQ:[C\n+   #61 = Utf8               CKQ\n+   #62 = Methodref          #18.#28       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n+   #63 = Fieldref           #10.#64       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n+   #64 = NameAndType        #65:#41       // AHKLOQRUX:[C\n+   #65 = Utf8               AHKLOQRUX\n+   #66 = Fieldref           #10.#67       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n+   #67 = NameAndType        #68:#41       // SZ:[C\n+   #68 = Utf8               SZ\n+   #69 = Fieldref           #10.#70       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n+   #70 = NameAndType        #71:#41       // AHKOQUX:[C\n+   #71 = Utf8               AHKOQUX\n+   #72 = Fieldref           #10.#73       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n+   #73 = NameAndType        #74:#41       // DTX:[C\n+   #74 = Utf8               DTX\n+   #75 = Methodref          #18.#76       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+   #76 = NameAndType        #77:#78       // toString:()Ljava/lang/String;\n+   #77 = Utf8               toString\n+   #78 = Utf8               ()Ljava/lang/String;\n+   #79 = Class              #80           // java/lang/String\n+   #80 = Utf8               java/lang/String\n+   #81 = Class              #82           // org/apache/commons/codec/EncoderException\n+   #82 = Utf8               org/apache/commons/codec/EncoderException\n+   #83 = Class              #84           // java/lang/StringBuilder\n+   #84 = Utf8               java/lang/StringBuilder\n+   #85 = Methodref          #83.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #86 = String             #87           // This method\\'s parameter was expected to be of the type\n+   #87 = Utf8               This method\\'s parameter was expected to be of the type\n+   #88 = Methodref          #83.#89       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #89 = NameAndType        #90:#91       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = Utf8               append\n+   #91 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #92 = Methodref          #93.#94       // java/lang/Class.getName:()Ljava/lang/String;\n+   #93 = Class              #95           // java/lang/Class\n+   #94 = NameAndType        #96:#78       // getName:()Ljava/lang/String;\n+   #95 = Utf8               java/lang/Class\n+   #96 = Utf8               getName\n+   #97 = String             #98           // . But actually it was of the type\n+   #98 = Utf8               . But actually it was of the type\n+   #99 = Methodref          #2.#100       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #100 = NameAndType        #101:#102     // getClass:()Ljava/lang/Class;\n+  #101 = Utf8               getClass\n+  #102 = Utf8               ()Ljava/lang/Class;\n+  #103 = String             #104          // .\n+  #104 = Utf8               .\n+  #105 = Methodref          #83.#76       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #106 = Methodref          #81.#107      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #107 = NameAndType        #5:#108       // \"<init>\":(Ljava/lang/String;)V\n+  #108 = Utf8               (Ljava/lang/String;)V\n+  #109 = Methodref          #10.#110      // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #110 = NameAndType        #111:#112     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #111 = Utf8               encode\n+  #112 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #113 = Methodref          #10.#114      // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #114 = NameAndType        #115:#112     // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #115 = Utf8               colognePhonetic\n+  #116 = Methodref          #79.#117      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #117 = NameAndType        #118:#119     // equals:(Ljava/lang/Object;)Z\n+  #118 = Utf8               equals\n+  #119 = Utf8               (Ljava/lang/Object;)Z\n+  #120 = Fieldref           #121.#122     // java/util/Locale.GERMAN:Ljava/util/Locale;\n+  #121 = Class              #123          // java/util/Locale\n+  #122 = NameAndType        #124:#125     // GERMAN:Ljava/util/Locale;\n+  #123 = Utf8               java/util/Locale\n+  #124 = Utf8               GERMAN\n+  #125 = Utf8               Ljava/util/Locale;\n+  #126 = Methodref          #79.#127      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #127 = NameAndType        #128:#129     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #128 = Utf8               toUpperCase\n+  #129 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #130 = Methodref          #79.#131      // java/lang/String.toCharArray:()[C\n+  #131 = NameAndType        #132:#133     // toCharArray:()[C\n+  #132 = Utf8               toCharArray\n+  #133 = Utf8               ()[C\n+  #134 = Class              #135          // org/apache/commons/codec/StringEncoder\n+  #135 = Utf8               org/apache/commons/codec/StringEncoder\n+  #136 = Utf8               CHAR_IGNORE\n+  #137 = Utf8               C\n+  #138 = Utf8               ConstantValue\n+  #139 = Integer            45\n+  #140 = Utf8               Code\n+  #141 = Utf8               LineNumberTable\n+  #142 = Utf8               LocalVariableTable\n+  #143 = Utf8               this\n+  #144 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic;\n+  #145 = Utf8               element\n+  #146 = Utf8               arr\n+  #147 = Utf8               key\n+  #148 = Utf8               StackMapTable\n+  #149 = Class              #41           // \"[C\"\n+  #150 = Utf8               nextChar\n+  #151 = Utf8               chr\n+  #152 = Utf8               text\n+  #153 = Utf8               Ljava/lang/String;\n+  #154 = Utf8               input\n+  #155 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer;\n+  #156 = Utf8               output\n+  #157 = Utf8               Lorg/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer;\n+  #158 = Utf8               lastChar\n+  #159 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #160 = Utf8               object\n+  #161 = Utf8               Ljava/lang/Object;\n+  #162 = Utf8               Exceptions\n+  #163 = Utf8               isEncodeEqual\n+  #164 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #165 = Utf8               text1\n+  #166 = Utf8               text2\n+  #167 = Utf8               index\n+  #168 = Utf8               I\n+  #169 = Utf8               chrs\n+  #170 = Utf8               <clinit>\n+  #171 = Utf8               SourceFile\n+  #172 = Utf8               ColognePhonetic.java\n+  #173 = Utf8               InnerClasses\n+  #174 = Utf8               CologneInputBuffer\n+  #175 = Utf8               CologneOutputBuffer\n+  #176 = Class              #177          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #177 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #178 = Utf8               CologneBuffer\n {\n   private static final char[] AEIJOUY;\n     descriptor: [C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final char[] CSZ;\n     descriptor: [C\n@@ -294,171 +294,171 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: new           #2                  // class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+         6: new           #7                  // class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n          9: dup\n         10: aload_0\n         11: aload_0\n         12: aload_1\n-        13: invokespecial #3                  // Method preprocess:(Ljava/lang/String;)[C\n-        16: invokespecial #4                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+        13: invokespecial #9                  // Method preprocess:(Ljava/lang/String;)[C\n+        16: invokespecial #15                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n         19: astore_2\n-        20: new           #5                  // class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+        20: new           #18                 // class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n         23: dup\n         24: aload_0\n         25: aload_2\n-        26: invokevirtual #6                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+        26: invokevirtual #20                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n         29: iconst_2\n         30: imul\n-        31: invokespecial #7                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+        31: invokespecial #24                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n         34: astore_3\n         35: bipush        45\n         37: istore        5\n         39: aload_2\n-        40: invokevirtual #9                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n+        40: invokevirtual #27                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n         43: ifne          475\n         46: aload_2\n-        47: invokevirtual #10                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+        47: invokevirtual #31                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n         50: istore        6\n         52: aload_2\n-        53: invokevirtual #9                  // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n+        53: invokevirtual #27                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n         56: ifne          68\n         59: aload_2\n-        60: invokevirtual #11                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+        60: invokevirtual #35                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n         63: istore        4\n         65: goto          72\n         68: bipush        45\n         70: istore        4\n         72: iload         6\n         74: bipush        65\n         76: if_icmplt     39\n         79: iload         6\n         81: bipush        90\n         83: if_icmple     89\n         86: goto          39\n-        89: getstatic     #12                 // Field AEIJOUY:[C\n+        89: getstatic     #38                 // Field AEIJOUY:[C\n         92: iload         6\n-        94: invokestatic  #13                 // Method arrayContains:([CC)Z\n+        94: invokestatic  #42                 // Method arrayContains:([CC)Z\n         97: ifeq          109\n        100: aload_3\n        101: bipush        48\n-       103: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       103: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        106: goto          468\n        109: iload         6\n        111: bipush        66\n        113: if_icmpeq     130\n        116: iload         6\n        118: bipush        80\n        120: if_icmpne     139\n        123: iload         4\n        125: bipush        72\n        127: if_icmpeq     139\n        130: aload_3\n        131: bipush        49\n-       133: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       133: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        136: goto          468\n        139: iload         6\n        141: bipush        68\n        143: if_icmpeq     153\n        146: iload         6\n        148: bipush        84\n        150: if_icmpne     173\n-       153: getstatic     #15                 // Field CSZ:[C\n+       153: getstatic     #50                 // Field CSZ:[C\n        156: iload         4\n-       158: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       158: invokestatic  #42                 // Method arrayContains:([CC)Z\n        161: ifne          173\n        164: aload_3\n        165: bipush        50\n-       167: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       167: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        170: goto          468\n-       173: getstatic     #16                 // Field FPVW:[C\n+       173: getstatic     #53                 // Field FPVW:[C\n        176: iload         6\n-       178: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       178: invokestatic  #42                 // Method arrayContains:([CC)Z\n        181: ifeq          193\n        184: aload_3\n        185: bipush        51\n-       187: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       187: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        190: goto          468\n-       193: getstatic     #17                 // Field GKQ:[C\n+       193: getstatic     #56                 // Field GKQ:[C\n        196: iload         6\n-       198: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       198: invokestatic  #42                 // Method arrayContains:([CC)Z\n        201: ifeq          213\n        204: aload_3\n        205: bipush        52\n-       207: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       207: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        210: goto          468\n        213: iload         6\n        215: bipush        88\n        217: if_icmpne     246\n-       220: getstatic     #18                 // Field CKQ:[C\n+       220: getstatic     #59                 // Field CKQ:[C\n        223: iload         5\n-       225: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       225: invokestatic  #42                 // Method arrayContains:([CC)Z\n        228: ifne          246\n        231: aload_3\n        232: bipush        52\n-       234: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       234: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        237: aload_3\n        238: bipush        56\n-       240: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       240: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        243: goto          468\n        246: iload         6\n        248: bipush        83\n        250: if_icmpeq     260\n        253: iload         6\n        255: bipush        90\n        257: if_icmpne     269\n        260: aload_3\n        261: bipush        56\n-       263: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       263: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        266: goto          468\n        269: iload         6\n        271: bipush        67\n        273: if_icmpne     352\n        276: aload_3\n-       277: invokevirtual #19                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n+       277: invokevirtual #62                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n        280: ifeq          312\n-       283: getstatic     #20                 // Field AHKLOQRUX:[C\n+       283: getstatic     #63                 // Field AHKLOQRUX:[C\n        286: iload         4\n-       288: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       288: invokestatic  #42                 // Method arrayContains:([CC)Z\n        291: ifeq          303\n        294: aload_3\n        295: bipush        52\n-       297: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       297: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        300: goto          468\n        303: aload_3\n        304: bipush        56\n-       306: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       306: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        309: goto          468\n-       312: getstatic     #21                 // Field SZ:[C\n+       312: getstatic     #66                 // Field SZ:[C\n        315: iload         5\n-       317: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       317: invokestatic  #42                 // Method arrayContains:([CC)Z\n        320: ifne          334\n-       323: getstatic     #22                 // Field AHKOQUX:[C\n+       323: getstatic     #69                 // Field AHKOQUX:[C\n        326: iload         4\n-       328: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       328: invokestatic  #42                 // Method arrayContains:([CC)Z\n        331: ifne          343\n        334: aload_3\n        335: bipush        56\n-       337: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       337: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        340: goto          468\n        343: aload_3\n        344: bipush        52\n-       346: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       346: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        349: goto          468\n-       352: getstatic     #23                 // Field DTX:[C\n+       352: getstatic     #72                 // Field DTX:[C\n        355: iload         6\n-       357: invokestatic  #13                 // Method arrayContains:([CC)Z\n+       357: invokestatic  #42                 // Method arrayContains:([CC)Z\n        360: ifeq          372\n        363: aload_3\n        364: bipush        56\n-       366: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       366: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        369: goto          468\n        372: iload         6\n        374: tableswitch   { // 72 to 82\n                       72: 459\n                       73: 468\n                       74: 468\n                       75: 468\n@@ -469,33 +469,33 @@\n                       80: 468\n                       81: 468\n                       82: 432\n                  default: 468\n             }\n        432: aload_3\n        433: bipush        55\n-       435: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       435: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        438: goto          468\n        441: aload_3\n        442: bipush        53\n-       444: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       444: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        447: goto          468\n        450: aload_3\n        451: bipush        54\n-       453: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       453: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        456: goto          468\n        459: aload_3\n        460: bipush        45\n-       462: invokevirtual #14                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+       462: invokevirtual #46                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n        465: goto          468\n        468: iload         6\n        470: istore        5\n        472: goto          39\n        475: aload_3\n-       476: invokevirtual #24                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+       476: invokevirtual #75                 // Method org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n        479: areturn\n       LineNumberTable:\n         line 318: 0\n         line 319: 4\n         line 322: 6\n         line 323: 20\n         line 327: 35\n@@ -594,41 +594,41 @@\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #25                 // class java/lang/String\n+         1: instanceof    #79                 // class java/lang/String\n          4: ifne          58\n-         7: new           #26                 // class org/apache/commons/codec/EncoderException\n+         7: new           #81                 // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: new           #27                 // class java/lang/StringBuilder\n+        11: new           #83                 // class java/lang/StringBuilder\n         14: dup\n-        15: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        18: ldc           #29                 // String This method\\'s parameter was expected to be of the type\n-        20: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        23: ldc           #25                 // class java/lang/String\n-        25: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        28: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: ldc           #32                 // String . But actually it was of the type\n-        33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: invokespecial #85                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        18: ldc           #86                 // String This method\\'s parameter was expected to be of the type\n+        20: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        23: ldc           #79                 // class java/lang/String\n+        25: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        28: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: ldc           #97                 // String . But actually it was of the type\n+        33: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: aload_1\n-        37: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        40: invokevirtual #31                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        43: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #34                 // String .\n-        48: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #36                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        37: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        40: invokevirtual #92                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        43: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: ldc           #103                // String .\n+        48: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #105                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #106                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         57: athrow\n         58: aload_0\n         59: aload_1\n-        60: checkcast     #25                 // class java/lang/String\n-        63: invokevirtual #37                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        60: checkcast     #79                 // class java/lang/String\n+        63: invokevirtual #109                // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         66: areturn\n       LineNumberTable:\n         line 399: 0\n         line 400: 7\n         line 401: 25\n         line 403: 37\n         line 406: 58\n@@ -644,15 +644,15 @@\n   public java.lang.String encode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #38                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokevirtual #113                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 411: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/codec/language/ColognePhonetic;\n             0       6     1  text   Ljava/lang/String;\n@@ -660,19 +660,19 @@\n   public boolean isEncodeEqual(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #38                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokevirtual #113                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n          5: aload_0\n          6: aload_2\n-         7: invokevirtual #38                 // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-        10: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         7: invokevirtual #113                // Method colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+        10: invokevirtual #116                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         13: ireturn\n       LineNumberTable:\n         line 423: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/codec/language/ColognePhonetic;\n             0      14     1 text1   Ljava/lang/String;\n@@ -680,17 +680,17 @@\n \n   private char[] preprocess(java.lang.String);\n     descriptor: (Ljava/lang/String;)[C\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_1\n-         1: getstatic     #40                 // Field java/util/Locale.GERMAN:Ljava/util/Locale;\n-         4: invokevirtual #41                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-         7: invokevirtual #42                 // Method java/lang/String.toCharArray:()[C\n+         1: getstatic     #120                // Field java/util/Locale.GERMAN:Ljava/util/Locale;\n+         4: invokevirtual #126                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         7: invokevirtual #130                // Method java/lang/String.toCharArray:()[C\n         10: astore_2\n         11: iconst_0\n         12: istore_3\n         13: iload_3\n         14: aload_2\n         15: arraylength\n         16: if_icmpge     86\n@@ -782,30 +782,30 @@\n         30: iconst_5\n         31: bipush        85\n         33: castore\n         34: dup\n         35: bipush        6\n         37: bipush        89\n         39: castore\n-        40: putstatic     #12                 // Field AEIJOUY:[C\n+        40: putstatic     #38                 // Field AEIJOUY:[C\n         43: iconst_3\n         44: newarray       char\n         46: dup\n         47: iconst_0\n         48: bipush        67\n         50: castore\n         51: dup\n         52: iconst_1\n         53: bipush        83\n         55: castore\n         56: dup\n         57: iconst_2\n         58: bipush        90\n         60: castore\n-        61: putstatic     #15                 // Field CSZ:[C\n+        61: putstatic     #50                 // Field CSZ:[C\n         64: iconst_4\n         65: newarray       char\n         67: dup\n         68: iconst_0\n         69: bipush        70\n         71: castore\n         72: dup\n@@ -816,45 +816,45 @@\n         78: iconst_2\n         79: bipush        86\n         81: castore\n         82: dup\n         83: iconst_3\n         84: bipush        87\n         86: castore\n-        87: putstatic     #16                 // Field FPVW:[C\n+        87: putstatic     #53                 // Field FPVW:[C\n         90: iconst_3\n         91: newarray       char\n         93: dup\n         94: iconst_0\n         95: bipush        71\n         97: castore\n         98: dup\n         99: iconst_1\n        100: bipush        75\n        102: castore\n        103: dup\n        104: iconst_2\n        105: bipush        81\n        107: castore\n-       108: putstatic     #17                 // Field GKQ:[C\n+       108: putstatic     #56                 // Field GKQ:[C\n        111: iconst_3\n        112: newarray       char\n        114: dup\n        115: iconst_0\n        116: bipush        67\n        118: castore\n        119: dup\n        120: iconst_1\n        121: bipush        75\n        123: castore\n        124: dup\n        125: iconst_2\n        126: bipush        81\n        128: castore\n-       129: putstatic     #18                 // Field CKQ:[C\n+       129: putstatic     #59                 // Field CKQ:[C\n        132: bipush        9\n        134: newarray       char\n        136: dup\n        137: iconst_0\n        138: bipush        65\n        140: castore\n        141: dup\n@@ -885,26 +885,26 @@\n        173: bipush        7\n        175: bipush        85\n        177: castore\n        178: dup\n        179: bipush        8\n        181: bipush        88\n        183: castore\n-       184: putstatic     #20                 // Field AHKLOQRUX:[C\n+       184: putstatic     #63                 // Field AHKLOQRUX:[C\n        187: iconst_2\n        188: newarray       char\n        190: dup\n        191: iconst_0\n        192: bipush        83\n        194: castore\n        195: dup\n        196: iconst_1\n        197: bipush        90\n        199: castore\n-       200: putstatic     #21                 // Field SZ:[C\n+       200: putstatic     #66                 // Field SZ:[C\n        203: bipush        7\n        205: newarray       char\n        207: dup\n        208: iconst_0\n        209: bipush        65\n        211: castore\n        212: dup\n@@ -927,40 +927,40 @@\n        233: iconst_5\n        234: bipush        85\n        236: castore\n        237: dup\n        238: bipush        6\n        240: bipush        88\n        242: castore\n-       243: putstatic     #22                 // Field AHKOQUX:[C\n+       243: putstatic     #69                 // Field AHKOQUX:[C\n        246: iconst_3\n        247: newarray       char\n        249: dup\n        250: iconst_0\n        251: bipush        68\n        253: castore\n        254: dup\n        255: iconst_1\n        256: bipush        84\n        258: castore\n        259: dup\n        260: iconst_2\n        261: bipush        88\n        263: castore\n-       264: putstatic     #23                 // Field DTX:[C\n+       264: putstatic     #72                 // Field DTX:[C\n        267: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 43\n         line 188: 64\n         line 189: 90\n         line 190: 111\n         line 191: 132\n         line 192: 187\n         line 193: 203\n         line 194: 246\n }\n SourceFile: \"ColognePhonetic.java\"\n InnerClasses:\n-  private #45= #2 of #8;                  // CologneInputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n-  private #47= #5 of #8;                  // CologneOutputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n-  static abstract #49= #48 of #8;         // CologneBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  private #174= #7 of #10;                // CologneInputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  private #175= #18 of #10;               // CologneOutputBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer of class org/apache/commons/codec/language/ColognePhonetic\n+  static abstract #178= #176 of #10;      // CologneBuffer=class org/apache/commons/codec/language/ColognePhonetic$CologneBuffer of class org/apache/commons/codec/language/ColognePhonetic\n"}]}
