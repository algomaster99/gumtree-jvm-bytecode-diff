{"diffoscope-json-version": 1, "source1": "first/SwappedDataInputStream.class", "source2": "second/SwappedDataInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,16 +5,16 @@\n import java.io.EOFException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.DataInput;\n \n public class SwappedDataInputStream extends ProxyInputStream implements DataInput\n {\n-    public SwappedDataInputStream(final InputStream input) {\n-        super(input);\n+    public SwappedDataInputStream(final InputStream inputStream) {\n+        super(inputStream);\n     }\n     \n     public boolean readBoolean() throws IOException, EOFException {\n         return 0 != this.readByte();\n     }\n     \n     public byte readByte() throws IOException, EOFException {\n@@ -29,24 +29,23 @@\n         return EndianUtils.readSwappedDouble(this.in);\n     }\n     \n     public float readFloat() throws IOException, EOFException {\n         return EndianUtils.readSwappedFloat(this.in);\n     }\n     \n-    public void readFully(final byte[] data) throws IOException, EOFException {\n-        this.readFully(data, 0, data.length);\n+    public void readFully(final byte[] array) throws IOException, EOFException {\n+        this.readFully(array, 0, array.length);\n     }\n     \n-    public void readFully(final byte[] data, final int offset, final int length) throws IOException, EOFException {\n-        int count;\n-        for (int remaining = length; remaining > 0; remaining -= count) {\n-            final int location = offset + length - remaining;\n-            count = this.read(data, location, remaining);\n-            if (-1 == count) {\n+    public void readFully(final byte[] array, final int n, final int n2) throws IOException, EOFException {\n+        int read;\n+        for (int i = n2; i > 0; i -= read) {\n+            read = this.read(array, n + n2 - i, i);\n+            if (-1 == read) {\n                 throw new EOFException();\n             }\n         }\n     }\n     \n     public int readInt() throws IOException, EOFException {\n         return EndianUtils.readSwappedInteger(this.in);\n@@ -72,11 +71,11 @@\n         return EndianUtils.readSwappedUnsignedShort(this.in);\n     }\n     \n     public String readUTF() throws IOException, EOFException {\n         throw UnsupportedOperationExceptions.method(\"readUTF\");\n     }\n     \n-    public int skipBytes(final int count) throws IOException, EOFException {\n-        return (int)this.in.skip(count);\n+    public int skipBytes(final int n) throws IOException, EOFException {\n+        return (int)this.in.skip(n);\n     }\n }\n"}]}
