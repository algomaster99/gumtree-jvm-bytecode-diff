{"diffoscope-json-version": 1, "source1": "first/XmlStreamWriter.class", "source2": "second/XmlStreamWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,187 +1,187 @@\n-  SHA-256 checksum 9e995fbd87e5f4a2ab844d586c1cf8fc4469c19055a68f19e303b86b066b888a\n+  SHA-256 checksum 182f74c14b412feab2efc36732a1a47860a2aa610f05eca88d8dee7f96caade2\n   Compiled from \"XmlStreamWriter.java\"\n public class org.apache.commons.io.output.XmlStreamWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #5                          // org/apache/commons/io/output/XmlStreamWriter\n-  super_class: #42                        // java/io/Writer\n+  this_class: #4                          // org/apache/commons/io/output/XmlStreamWriter\n+  super_class: #10                        // java/io/Writer\n   interfaces: 0, fields: 7, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Class              #100          // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #5.#101       // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-    #3 = Methodref          #42.#102      // java/io/Writer.\"<init>\":()V\n-    #4 = Class              #103          // java/io/StringWriter\n-    #5 = Class              #104          // org/apache/commons/io/output/XmlStreamWriter\n-    #6 = Methodref          #4.#105       // java/io/StringWriter.\"<init>\":(I)V\n-    #7 = Fieldref           #5.#106       // org/apache/commons/io/output/XmlStreamWriter.xmlPrologWriter:Ljava/io/StringWriter;\n-    #8 = Fieldref           #5.#107       // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n-    #9 = String             #108          // UTF-8\n-   #10 = Fieldref           #5.#109       // org/apache/commons/io/output/XmlStreamWriter.defaultEncoding:Ljava/lang/String;\n-   #11 = Methodref          #5.#110       // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #12 = Class              #111          // java/io/FileOutputStream\n-   #13 = Methodref          #12.#112      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #14 = Fieldref           #5.#113       // org/apache/commons/io/output/XmlStreamWriter.encoding:Ljava/lang/String;\n-   #15 = Fieldref           #5.#114       // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n-   #16 = Class              #115          // java/io/OutputStreamWriter\n-   #17 = Methodref          #16.#101      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #18 = Methodref          #4.#116       // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #19 = Methodref          #42.#117      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #20 = Methodref          #42.#118      // java/io/Writer.close:()V\n-   #21 = Methodref          #42.#119      // java/io/Writer.flush:()V\n-   #22 = Methodref          #4.#120       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #23 = Methodref          #94.#121      // java/lang/StringBuffer.length:()I\n-   #24 = Methodref          #4.#122       // java/io/StringWriter.write:([CII)V\n-   #25 = Methodref          #94.#123      // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-   #26 = String             #124          // <?xml\n-   #27 = Methodref          #68.#125      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #28 = String             #126          // ?>\n-   #29 = Methodref          #94.#127      // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n-   #30 = Fieldref           #5.#128       // org/apache/commons/io/output/XmlStreamWriter.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #31 = Methodref          #129.#130     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #32 = Methodref          #95.#131      // java/util/regex/Matcher.find:()Z\n-   #33 = Methodref          #95.#132      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #34 = Fieldref           #133.#134     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #35 = Methodref          #68.#135      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #36 = Methodref          #68.#121      // java/lang/String.length:()I\n-   #37 = Methodref          #68.#123      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #38 = Methodref          #94.#116      // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #39 = Methodref          #42.#122      // java/io/Writer.write:([CII)V\n-   #40 = Methodref          #5.#136       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n-   #41 = Fieldref           #137.#128     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #42 = Class              #138          // java/io/Writer\n-   #43 = Utf8               BUFFER_SIZE\n-   #44 = Utf8               I\n-   #45 = Utf8               ConstantValue\n-   #46 = Integer            8192\n-   #47 = Utf8               out\n-   #48 = Utf8               Ljava/io/OutputStream;\n-   #49 = Utf8               defaultEncoding\n-   #50 = Utf8               Ljava/lang/String;\n-   #51 = Utf8               xmlPrologWriter\n-   #52 = Utf8               Ljava/io/StringWriter;\n-   #53 = Utf8               writer\n-   #54 = Utf8               Ljava/io/Writer;\n-   #55 = Utf8               encoding\n-   #56 = Utf8               ENCODING_PATTERN\n-   #57 = Utf8               Ljava/util/regex/Pattern;\n-   #58 = Utf8               <init>\n-   #59 = Utf8               (Ljava/io/OutputStream;)V\n-   #60 = Utf8               Code\n-   #61 = Utf8               LineNumberTable\n-   #62 = Utf8               LocalVariableTable\n-   #63 = Utf8               this\n-   #64 = Utf8               Lorg/apache/commons/io/output/XmlStreamWriter;\n-   #65 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #66 = Utf8               StackMapTable\n-   #67 = Class              #139          // java/io/OutputStream\n-   #68 = Class              #140          // java/lang/String\n-   #69 = Utf8               (Ljava/io/File;)V\n-   #70 = Utf8               file\n-   #71 = Utf8               Ljava/io/File;\n-   #72 = Utf8               Exceptions\n-   #73 = Class              #141          // java/io/FileNotFoundException\n-   #74 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #75 = Utf8               getEncoding\n-   #76 = Utf8               ()Ljava/lang/String;\n-   #77 = Utf8               getDefaultEncoding\n-   #78 = Utf8               close\n-   #79 = Utf8               ()V\n-   #80 = Class              #142          // java/io/IOException\n-   #81 = Utf8               flush\n-   #82 = Utf8               detectEncoding\n-   #83 = Utf8               ([CII)V\n-   #84 = Utf8               m\n-   #85 = Utf8               Ljava/util/regex/Matcher;\n-   #86 = Utf8               xmlPrologEnd\n-   #87 = Utf8               cbuf\n-   #88 = Utf8               [C\n-   #89 = Utf8               off\n-   #90 = Utf8               len\n-   #91 = Utf8               size\n-   #92 = Utf8               xmlProlog\n-   #93 = Utf8               Ljava/lang/StringBuffer;\n-   #94 = Class              #143          // java/lang/StringBuffer\n-   #95 = Class              #144          // java/util/regex/Matcher\n-   #96 = Utf8               write\n-   #97 = Utf8               <clinit>\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               XmlStreamWriter.java\n-  #100 = Utf8               org/apache/commons/io/IOUtils\n-  #101 = NameAndType        #58:#65       // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #102 = NameAndType        #58:#79       // \"<init>\":()V\n-  #103 = Utf8               java/io/StringWriter\n-  #104 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n-  #105 = NameAndType        #58:#145      // \"<init>\":(I)V\n-  #106 = NameAndType        #51:#52       // xmlPrologWriter:Ljava/io/StringWriter;\n-  #107 = NameAndType        #47:#48       // out:Ljava/io/OutputStream;\n-  #108 = Utf8               UTF-8\n-  #109 = NameAndType        #49:#50       // defaultEncoding:Ljava/lang/String;\n-  #110 = NameAndType        #58:#74       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #111 = Utf8               java/io/FileOutputStream\n-  #112 = NameAndType        #58:#69       // \"<init>\":(Ljava/io/File;)V\n-  #113 = NameAndType        #55:#50       // encoding:Ljava/lang/String;\n-  #114 = NameAndType        #53:#54       // writer:Ljava/io/Writer;\n-  #115 = Utf8               java/io/OutputStreamWriter\n-  #116 = NameAndType        #146:#76      // toString:()Ljava/lang/String;\n-  #117 = NameAndType        #96:#147      // write:(Ljava/lang/String;)V\n-  #118 = NameAndType        #78:#79       // close:()V\n-  #119 = NameAndType        #81:#79       // flush:()V\n-  #120 = NameAndType        #148:#149     // getBuffer:()Ljava/lang/StringBuffer;\n-  #121 = NameAndType        #150:#151     // length:()I\n-  #122 = NameAndType        #96:#83       // write:([CII)V\n-  #123 = NameAndType        #152:#153     // substring:(II)Ljava/lang/String;\n-  #124 = Utf8               <?xml\n-  #125 = NameAndType        #154:#155     // equals:(Ljava/lang/Object;)Z\n-  #126 = Utf8               ?>\n-  #127 = NameAndType        #156:#157     // indexOf:(Ljava/lang/String;)I\n-  #128 = NameAndType        #56:#57       // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #129 = Class              #158          // java/util/regex/Pattern\n-  #130 = NameAndType        #159:#160     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #131 = NameAndType        #161:#162     // find:()Z\n-  #132 = NameAndType        #163:#164     // group:(I)Ljava/lang/String;\n-  #133 = Class              #165          // java/util/Locale\n-  #134 = NameAndType        #166:#167     // ROOT:Ljava/util/Locale;\n-  #135 = NameAndType        #168:#169     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #136 = NameAndType        #82:#83       // detectEncoding:([CII)V\n-  #137 = Class              #170          // org/apache/commons/io/input/XmlStreamReader\n-  #138 = Utf8               java/io/Writer\n-  #139 = Utf8               java/io/OutputStream\n-  #140 = Utf8               java/lang/String\n-  #141 = Utf8               java/io/FileNotFoundException\n-  #142 = Utf8               java/io/IOException\n-  #143 = Utf8               java/lang/StringBuffer\n-  #144 = Utf8               java/util/regex/Matcher\n-  #145 = Utf8               (I)V\n-  #146 = Utf8               toString\n-  #147 = Utf8               (Ljava/lang/String;)V\n-  #148 = Utf8               getBuffer\n-  #149 = Utf8               ()Ljava/lang/StringBuffer;\n-  #150 = Utf8               length\n-  #151 = Utf8               ()I\n-  #152 = Utf8               substring\n-  #153 = Utf8               (II)Ljava/lang/String;\n-  #154 = Utf8               equals\n-  #155 = Utf8               (Ljava/lang/Object;)Z\n-  #156 = Utf8               indexOf\n-  #157 = Utf8               (Ljava/lang/String;)I\n-  #158 = Utf8               java/util/regex/Pattern\n-  #159 = Utf8               matcher\n-  #160 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #161 = Utf8               find\n-  #162 = Utf8               ()Z\n-  #163 = Utf8               group\n-  #164 = Utf8               (I)Ljava/lang/String;\n-  #165 = Utf8               java/util/Locale\n-  #166 = Utf8               ROOT\n-  #167 = Utf8               Ljava/util/Locale;\n-  #168 = Utf8               toUpperCase\n-  #169 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #170 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+    #4 = Class              #6            // org/apache/commons/io/output/XmlStreamWriter\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+    #6 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+    #9 = Methodref          #10.#11       // java/io/Writer.\"<init>\":()V\n+   #10 = Class              #12           // java/io/Writer\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/io/Writer\n+   #13 = Utf8               ()V\n+   #14 = Class              #15           // java/io/StringWriter\n+   #15 = Utf8               java/io/StringWriter\n+   #16 = Methodref          #14.#17       // java/io/StringWriter.\"<init>\":(I)V\n+   #17 = NameAndType        #7:#18        // \"<init>\":(I)V\n+   #18 = Utf8               (I)V\n+   #19 = Fieldref           #4.#20        // org/apache/commons/io/output/XmlStreamWriter.xmlPrologWriter:Ljava/io/StringWriter;\n+   #20 = NameAndType        #21:#22       // xmlPrologWriter:Ljava/io/StringWriter;\n+   #21 = Utf8               xmlPrologWriter\n+   #22 = Utf8               Ljava/io/StringWriter;\n+   #23 = Fieldref           #4.#24        // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n+   #24 = NameAndType        #25:#26       // out:Ljava/io/OutputStream;\n+   #25 = Utf8               out\n+   #26 = Utf8               Ljava/io/OutputStream;\n+   #27 = String             #28           // UTF-8\n+   #28 = Utf8               UTF-8\n+   #29 = Fieldref           #4.#30        // org/apache/commons/io/output/XmlStreamWriter.defaultEncoding:Ljava/lang/String;\n+   #30 = NameAndType        #31:#32       // defaultEncoding:Ljava/lang/String;\n+   #31 = Utf8               defaultEncoding\n+   #32 = Utf8               Ljava/lang/String;\n+   #33 = Methodref          #4.#34        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #34 = NameAndType        #7:#35        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #35 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #36 = Class              #37           // java/io/FileOutputStream\n+   #37 = Utf8               java/io/FileOutputStream\n+   #38 = Methodref          #36.#39       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #39 = NameAndType        #7:#40        // \"<init>\":(Ljava/io/File;)V\n+   #40 = Utf8               (Ljava/io/File;)V\n+   #41 = Fieldref           #4.#42        // org/apache/commons/io/output/XmlStreamWriter.encoding:Ljava/lang/String;\n+   #42 = NameAndType        #43:#32       // encoding:Ljava/lang/String;\n+   #43 = Utf8               encoding\n+   #44 = Fieldref           #4.#45        // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n+   #45 = NameAndType        #46:#47       // writer:Ljava/io/Writer;\n+   #46 = Utf8               writer\n+   #47 = Utf8               Ljava/io/Writer;\n+   #48 = Class              #49           // java/io/OutputStreamWriter\n+   #49 = Utf8               java/io/OutputStreamWriter\n+   #50 = Methodref          #48.#5        // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #51 = Methodref          #14.#52       // java/io/StringWriter.toString:()Ljava/lang/String;\n+   #52 = NameAndType        #53:#54       // toString:()Ljava/lang/String;\n+   #53 = Utf8               toString\n+   #54 = Utf8               ()Ljava/lang/String;\n+   #55 = Methodref          #10.#56       // java/io/Writer.write:(Ljava/lang/String;)V\n+   #56 = NameAndType        #57:#58       // write:(Ljava/lang/String;)V\n+   #57 = Utf8               write\n+   #58 = Utf8               (Ljava/lang/String;)V\n+   #59 = Methodref          #10.#60       // java/io/Writer.close:()V\n+   #60 = NameAndType        #61:#13       // close:()V\n+   #61 = Utf8               close\n+   #62 = Methodref          #10.#63       // java/io/Writer.flush:()V\n+   #63 = NameAndType        #64:#13       // flush:()V\n+   #64 = Utf8               flush\n+   #65 = Methodref          #14.#66       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #66 = NameAndType        #67:#68       // getBuffer:()Ljava/lang/StringBuffer;\n+   #67 = Utf8               getBuffer\n+   #68 = Utf8               ()Ljava/lang/StringBuffer;\n+   #69 = Methodref          #70.#71       // java/lang/StringBuffer.length:()I\n+   #70 = Class              #72           // java/lang/StringBuffer\n+   #71 = NameAndType        #73:#74       // length:()I\n+   #72 = Utf8               java/lang/StringBuffer\n+   #73 = Utf8               length\n+   #74 = Utf8               ()I\n+   #75 = Methodref          #14.#76       // java/io/StringWriter.write:([CII)V\n+   #76 = NameAndType        #57:#77       // write:([CII)V\n+   #77 = Utf8               ([CII)V\n+   #78 = Methodref          #70.#79       // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+   #79 = NameAndType        #80:#81       // substring:(II)Ljava/lang/String;\n+   #80 = Utf8               substring\n+   #81 = Utf8               (II)Ljava/lang/String;\n+   #82 = String             #83           // <?xml\n+   #83 = Utf8               <?xml\n+   #84 = Methodref          #85.#86       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #85 = Class              #87           // java/lang/String\n+   #86 = NameAndType        #88:#89       // equals:(Ljava/lang/Object;)Z\n+   #87 = Utf8               java/lang/String\n+   #88 = Utf8               equals\n+   #89 = Utf8               (Ljava/lang/Object;)Z\n+   #90 = String             #91           // ?>\n+   #91 = Utf8               ?>\n+   #92 = Methodref          #70.#93       // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n+   #93 = NameAndType        #94:#95       // indexOf:(Ljava/lang/String;)I\n+   #94 = Utf8               indexOf\n+   #95 = Utf8               (Ljava/lang/String;)I\n+   #96 = Fieldref           #4.#97        // org/apache/commons/io/output/XmlStreamWriter.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+   #97 = NameAndType        #98:#99       // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+   #98 = Utf8               ENCODING_PATTERN\n+   #99 = Utf8               Ljava/util/regex/Pattern;\n+  #100 = Methodref          #101.#102     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #101 = Class              #103          // java/util/regex/Pattern\n+  #102 = NameAndType        #104:#105     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #103 = Utf8               java/util/regex/Pattern\n+  #104 = Utf8               matcher\n+  #105 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #106 = Methodref          #107.#108     // java/util/regex/Matcher.find:()Z\n+  #107 = Class              #109          // java/util/regex/Matcher\n+  #108 = NameAndType        #110:#111     // find:()Z\n+  #109 = Utf8               java/util/regex/Matcher\n+  #110 = Utf8               find\n+  #111 = Utf8               ()Z\n+  #112 = Methodref          #107.#113     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+  #113 = NameAndType        #114:#115     // group:(I)Ljava/lang/String;\n+  #114 = Utf8               group\n+  #115 = Utf8               (I)Ljava/lang/String;\n+  #116 = Fieldref           #117.#118     // java/util/Locale.ROOT:Ljava/util/Locale;\n+  #117 = Class              #119          // java/util/Locale\n+  #118 = NameAndType        #120:#121     // ROOT:Ljava/util/Locale;\n+  #119 = Utf8               java/util/Locale\n+  #120 = Utf8               ROOT\n+  #121 = Utf8               Ljava/util/Locale;\n+  #122 = Methodref          #85.#123      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #123 = NameAndType        #124:#125     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #124 = Utf8               toUpperCase\n+  #125 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #126 = Methodref          #85.#71       // java/lang/String.length:()I\n+  #127 = Methodref          #85.#79       // java/lang/String.substring:(II)Ljava/lang/String;\n+  #128 = Methodref          #70.#52       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+  #129 = Methodref          #10.#76       // java/io/Writer.write:([CII)V\n+  #130 = Methodref          #4.#131       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n+  #131 = NameAndType        #132:#77      // detectEncoding:([CII)V\n+  #132 = Utf8               detectEncoding\n+  #133 = Fieldref           #134.#97      // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #134 = Class              #135          // org/apache/commons/io/input/XmlStreamReader\n+  #135 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+  #136 = Utf8               BUFFER_SIZE\n+  #137 = Utf8               I\n+  #138 = Utf8               ConstantValue\n+  #139 = Integer            8192\n+  #140 = Utf8               (Ljava/io/OutputStream;)V\n+  #141 = Utf8               Code\n+  #142 = Utf8               LineNumberTable\n+  #143 = Utf8               LocalVariableTable\n+  #144 = Utf8               this\n+  #145 = Utf8               Lorg/apache/commons/io/output/XmlStreamWriter;\n+  #146 = Utf8               StackMapTable\n+  #147 = Class              #148          // java/io/OutputStream\n+  #148 = Utf8               java/io/OutputStream\n+  #149 = Utf8               file\n+  #150 = Utf8               Ljava/io/File;\n+  #151 = Utf8               Exceptions\n+  #152 = Class              #153          // java/io/FileNotFoundException\n+  #153 = Utf8               java/io/FileNotFoundException\n+  #154 = Utf8               getEncoding\n+  #155 = Utf8               getDefaultEncoding\n+  #156 = Class              #157          // java/io/IOException\n+  #157 = Utf8               java/io/IOException\n+  #158 = Utf8               m\n+  #159 = Utf8               Ljava/util/regex/Matcher;\n+  #160 = Utf8               xmlPrologEnd\n+  #161 = Utf8               cbuf\n+  #162 = Utf8               [C\n+  #163 = Utf8               off\n+  #164 = Utf8               len\n+  #165 = Utf8               size\n+  #166 = Utf8               xmlProlog\n+  #167 = Utf8               Ljava/lang/StringBuffer;\n+  #168 = Utf8               <clinit>\n+  #169 = Utf8               SourceFile\n+  #170 = Utf8               XmlStreamWriter.java\n {\n   private static final int BUFFER_SIZE = 8192;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8192\n \n   private final java.io.OutputStream out;\n@@ -212,15 +212,15 @@\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+         3: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;\n@@ -228,31 +228,31 @@\n \n   public org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream, java.lang.String);\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: new           #4                  // class java/io/StringWriter\n+         5: new           #14                 // class java/io/StringWriter\n          8: dup\n          9: sipush        8192\n-        12: invokespecial #6                  // Method java/io/StringWriter.\"<init>\":(I)V\n-        15: putfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n+        12: invokespecial #16                 // Method java/io/StringWriter.\"<init>\":(I)V\n+        15: putfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n         18: aload_0\n         19: aload_1\n-        20: putfield      #8                  // Field out:Ljava/io/OutputStream;\n+        20: putfield      #23                 // Field out:Ljava/io/OutputStream;\n         23: aload_0\n         24: aload_2\n         25: ifnull        32\n         28: aload_2\n         29: goto          34\n-        32: ldc           #9                  // String UTF-8\n-        34: putfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n+        32: ldc           #27                 // String UTF-8\n+        34: putfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n         37: return\n       LineNumberTable:\n         line 71: 0\n         line 48: 4\n         line 72: 18\n         line 73: 23\n         line 74: 37\n@@ -275,15 +275,15 @@\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokespecial #11                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+         3: invokespecial #33                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;\n@@ -293,20 +293,20 @@\n \n   public org.apache.commons.io.output.XmlStreamWriter(java.io.File, java.lang.String) throws java.io.FileNotFoundException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #12                 // class java/io/FileOutputStream\n+         1: new           #36                 // class java/io/FileOutputStream\n          4: dup\n          5: aload_1\n-         6: invokespecial #13                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+         6: invokespecial #38                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n          9: aload_2\n-        10: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        10: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n         13: return\n       LineNumberTable:\n         line 99: 0\n         line 100: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;\n@@ -317,66 +317,66 @@\n \n   public java.lang.String getEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field encoding:Ljava/lang/String;\n+         1: getfield      #41                 // Field encoding:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;\n \n   public java.lang.String getDefaultEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n+         1: getfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/XmlStreamWriter;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field writer:Ljava/io/Writer;\n+         1: getfield      #44                 // Field writer:Ljava/io/Writer;\n          4: ifnonnull     48\n          7: aload_0\n          8: aload_0\n-         9: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n-        12: putfield      #14                 // Field encoding:Ljava/lang/String;\n+         9: getfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n+        12: putfield      #41                 // Field encoding:Ljava/lang/String;\n         15: aload_0\n-        16: new           #16                 // class java/io/OutputStreamWriter\n+        16: new           #48                 // class java/io/OutputStreamWriter\n         19: dup\n         20: aload_0\n-        21: getfield      #8                  // Field out:Ljava/io/OutputStream;\n+        21: getfield      #23                 // Field out:Ljava/io/OutputStream;\n         24: aload_0\n-        25: getfield      #14                 // Field encoding:Ljava/lang/String;\n-        28: invokespecial #17                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-        31: putfield      #15                 // Field writer:Ljava/io/Writer;\n+        25: getfield      #41                 // Field encoding:Ljava/lang/String;\n+        28: invokespecial #50                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        31: putfield      #44                 // Field writer:Ljava/io/Writer;\n         34: aload_0\n-        35: getfield      #15                 // Field writer:Ljava/io/Writer;\n+        35: getfield      #44                 // Field writer:Ljava/io/Writer;\n         38: aload_0\n-        39: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n-        42: invokevirtual #18                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n-        45: invokevirtual #19                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        39: getfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n+        42: invokevirtual #51                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        45: invokevirtual #55                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n         48: aload_0\n-        49: getfield      #15                 // Field writer:Ljava/io/Writer;\n-        52: invokevirtual #20                 // Method java/io/Writer.close:()V\n+        49: getfield      #44                 // Field writer:Ljava/io/Writer;\n+        52: invokevirtual #59                 // Method java/io/Writer.close:()V\n         55: return\n       LineNumberTable:\n         line 127: 0\n         line 128: 7\n         line 129: 15\n         line 130: 34\n         line 132: 48\n@@ -391,19 +391,19 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field writer:Ljava/io/Writer;\n+         1: getfield      #44                 // Field writer:Ljava/io/Writer;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #15                 // Field writer:Ljava/io/Writer;\n-        11: invokevirtual #21                 // Method java/io/Writer.flush:()V\n+         8: getfield      #44                 // Field writer:Ljava/io/Writer;\n+        11: invokevirtual #62                 // Method java/io/Writer.flush:()V\n         14: return\n       LineNumberTable:\n         line 142: 0\n         line 143: 7\n         line 145: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -417,131 +417,131 @@\n     descriptor: ([CII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: iload_3\n          1: istore        4\n          3: aload_0\n-         4: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n-         7: invokevirtual #22                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+         4: getfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n+         7: invokevirtual #65                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n         10: astore        5\n         12: aload         5\n-        14: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I\n+        14: invokevirtual #69                 // Method java/lang/StringBuffer.length:()I\n         17: iload_3\n         18: iadd\n         19: sipush        8192\n         22: if_icmple     36\n         25: sipush        8192\n         28: aload         5\n-        30: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I\n+        30: invokevirtual #69                 // Method java/lang/StringBuffer.length:()I\n         33: isub\n         34: istore        4\n         36: aload_0\n-        37: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n+        37: getfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n         40: aload_1\n         41: iload_2\n         42: iload         4\n-        44: invokevirtual #24                 // Method java/io/StringWriter.write:([CII)V\n+        44: invokevirtual #75                 // Method java/io/StringWriter.write:([CII)V\n         47: aload         5\n-        49: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I\n+        49: invokevirtual #69                 // Method java/lang/StringBuffer.length:()I\n         52: iconst_5\n         53: if_icmplt     255\n         56: aload         5\n         58: iconst_0\n         59: iconst_5\n-        60: invokevirtual #25                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-        63: ldc           #26                 // String <?xml\n-        65: invokevirtual #27                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        60: invokevirtual #78                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+        63: ldc           #82                 // String <?xml\n+        65: invokevirtual #84                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         68: ifeq          182\n         71: aload         5\n-        73: ldc           #28                 // String ?>\n-        75: invokevirtual #29                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n+        73: ldc           #90                 // String ?>\n+        75: invokevirtual #92                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n         78: istore        6\n         80: iload         6\n         82: ifle          160\n-        85: getstatic     #30                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+        85: getstatic     #96                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;\n         88: aload         5\n         90: iconst_0\n         91: iload         6\n-        93: invokevirtual #25                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-        96: invokevirtual #31                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        93: invokevirtual #78                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+        96: invokevirtual #100                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         99: astore        7\n        101: aload         7\n-       103: invokevirtual #32                 // Method java/util/regex/Matcher.find:()Z\n+       103: invokevirtual #106                // Method java/util/regex/Matcher.find:()Z\n        106: ifeq          149\n        109: aload_0\n        110: aload         7\n        112: iconst_1\n-       113: invokevirtual #33                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-       116: getstatic     #34                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-       119: invokevirtual #35                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-       122: putfield      #14                 // Field encoding:Ljava/lang/String;\n+       113: invokevirtual #112                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+       116: getstatic     #116                // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+       119: invokevirtual #122                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+       122: putfield      #41                 // Field encoding:Ljava/lang/String;\n        125: aload_0\n        126: aload_0\n-       127: getfield      #14                 // Field encoding:Ljava/lang/String;\n+       127: getfield      #41                 // Field encoding:Ljava/lang/String;\n        130: iconst_1\n        131: aload_0\n-       132: getfield      #14                 // Field encoding:Ljava/lang/String;\n-       135: invokevirtual #36                 // Method java/lang/String.length:()I\n+       132: getfield      #41                 // Field encoding:Ljava/lang/String;\n+       135: invokevirtual #126                // Method java/lang/String.length:()I\n        138: iconst_1\n        139: isub\n-       140: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       143: putfield      #14                 // Field encoding:Ljava/lang/String;\n+       140: invokevirtual #127                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       143: putfield      #41                 // Field encoding:Ljava/lang/String;\n        146: goto          157\n        149: aload_0\n        150: aload_0\n-       151: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n-       154: putfield      #14                 // Field encoding:Ljava/lang/String;\n+       151: getfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n+       154: putfield      #41                 // Field encoding:Ljava/lang/String;\n        157: goto          179\n        160: aload         5\n-       162: invokevirtual #23                 // Method java/lang/StringBuffer.length:()I\n+       162: invokevirtual #69                 // Method java/lang/StringBuffer.length:()I\n        165: sipush        8192\n        168: if_icmplt     179\n        171: aload_0\n        172: aload_0\n-       173: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n-       176: putfield      #14                 // Field encoding:Ljava/lang/String;\n+       173: getfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n+       176: putfield      #41                 // Field encoding:Ljava/lang/String;\n        179: goto          190\n        182: aload_0\n        183: aload_0\n-       184: getfield      #10                 // Field defaultEncoding:Ljava/lang/String;\n-       187: putfield      #14                 // Field encoding:Ljava/lang/String;\n+       184: getfield      #29                 // Field defaultEncoding:Ljava/lang/String;\n+       187: putfield      #41                 // Field encoding:Ljava/lang/String;\n        190: aload_0\n-       191: getfield      #14                 // Field encoding:Ljava/lang/String;\n+       191: getfield      #41                 // Field encoding:Ljava/lang/String;\n        194: ifnull        255\n        197: aload_0\n        198: aconst_null\n-       199: putfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n+       199: putfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n        202: aload_0\n-       203: new           #16                 // class java/io/OutputStreamWriter\n+       203: new           #48                 // class java/io/OutputStreamWriter\n        206: dup\n        207: aload_0\n-       208: getfield      #8                  // Field out:Ljava/io/OutputStream;\n+       208: getfield      #23                 // Field out:Ljava/io/OutputStream;\n        211: aload_0\n-       212: getfield      #14                 // Field encoding:Ljava/lang/String;\n-       215: invokespecial #17                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-       218: putfield      #15                 // Field writer:Ljava/io/Writer;\n+       212: getfield      #41                 // Field encoding:Ljava/lang/String;\n+       215: invokespecial #50                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       218: putfield      #44                 // Field writer:Ljava/io/Writer;\n        221: aload_0\n-       222: getfield      #15                 // Field writer:Ljava/io/Writer;\n+       222: getfield      #44                 // Field writer:Ljava/io/Writer;\n        225: aload         5\n-       227: invokevirtual #38                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n-       230: invokevirtual #19                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+       227: invokevirtual #128                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+       230: invokevirtual #55                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n        233: iload_3\n        234: iload         4\n        236: if_icmple     255\n        239: aload_0\n-       240: getfield      #15                 // Field writer:Ljava/io/Writer;\n+       240: getfield      #44                 // Field writer:Ljava/io/Writer;\n        243: aload_1\n        244: iload_2\n        245: iload         4\n        247: iadd\n        248: iload_3\n        249: iload         4\n        251: isub\n-       252: invokevirtual #39                 // Method java/io/Writer.write:([CII)V\n+       252: invokevirtual #129                // Method java/io/Writer.write:([CII)V\n        255: return\n       LineNumberTable:\n         line 157: 0\n         line 158: 3\n         line 159: 12\n         line 160: 25\n         line 162: 36\n@@ -597,28 +597,28 @@\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #7                  // Field xmlPrologWriter:Ljava/io/StringWriter;\n+         1: getfield      #19                 // Field xmlPrologWriter:Ljava/io/StringWriter;\n          4: ifnull        17\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokespecial #40                 // Method detectEncoding:([CII)V\n+        11: invokespecial #130                // Method detectEncoding:([CII)V\n         14: goto          27\n         17: aload_0\n-        18: getfield      #15                 // Field writer:Ljava/io/Writer;\n+        18: getfield      #44                 // Field writer:Ljava/io/Writer;\n         21: aload_1\n         22: iload_2\n         23: iload_3\n-        24: invokevirtual #39                 // Method java/io/Writer.write:([CII)V\n+        24: invokevirtual #129                // Method java/io/Writer.write:([CII)V\n         27: return\n       LineNumberTable:\n         line 214: 0\n         line 215: 7\n         line 217: 17\n         line 219: 27\n       LocalVariableTable:\n@@ -634,14 +634,14 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #41                 // Field org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-         3: putstatic     #30                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+         0: getstatic     #133                // Field org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+         3: putstatic     #96                 // Field ENCODING_PATTERN:Ljava/util/regex/Pattern;\n          6: return\n       LineNumberTable:\n         line 221: 0\n }\n SourceFile: \"XmlStreamWriter.java\"\n"}]}
