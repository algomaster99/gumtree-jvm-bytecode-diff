{"diffoscope-json-version": 1, "source1": "first/FileUtils.class", "source2": "second/FileUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum a911060e34b640b02fccfbb9fc3b7b632e428090ba0db1a48596640eedbea7f7\n+  SHA-256 checksum fd4ecee2e128dbc7f848b6ae8efd25185550df24565a953f43c947add8a11176\n   Compiled from \"FileUtils.java\"\n class org.apache.commons.configuration2.io.FileUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #30                         // org/apache/commons/configuration2/io/FileUtils\n   super_class: #31                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #31.#68       // java/lang/Object.\"<init>\":()V\n-    #2 = String             #69           // file\n-    #3 = Methodref          #70.#71       // java/net/URL.getProtocol:()Ljava/lang/String;\n-    #4 = Methodref          #72.#73       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-    #5 = Methodref          #70.#74       // java/net/URL.getFile:()Ljava/lang/String;\n-    #6 = Fieldref           #9.#75        // java/io/File.separatorChar:C\n-    #7 = Methodref          #72.#76       // java/lang/String.replace:(CC)Ljava/lang/String;\n-    #8 = Methodref          #30.#77       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-    #9 = Class              #78           // java/io/File\n-   #10 = Methodref          #9.#79        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Methodref          #72.#80       // java/lang/String.indexOf:(I)I\n-   #12 = Methodref          #72.#81       // java/lang/String.length:()I\n-   #13 = Class              #82           // java/lang/StringBuilder\n-   #14 = Methodref          #13.#68       // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = Methodref          #83.#84       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #16 = Methodref          #72.#85       // java/lang/String.charAt:(I)C\n-   #17 = Methodref          #72.#86       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #18 = Methodref          #87.#88       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #19 = Methodref          #83.#89       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #83.#90       // java/nio/ByteBuffer.position:()I\n-   #21 = Methodref          #83.#91       // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-   #22 = Fieldref           #30.#92       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n-   #23 = Methodref          #93.#94       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #24 = Methodref          #13.#95       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #83.#96       // java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n-   #26 = Class              #97           // java/lang/RuntimeException\n-   #27 = Methodref          #13.#98       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #13.#99       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Fieldref           #100.#101     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #30 = Class              #102          // org/apache/commons/configuration2/io/FileUtils\n-   #31 = Class              #103          // java/lang/Object\n+    #1 = Methodref          #31.#66       // java/lang/Object.\"<init>\":()V\n+    #2 = String             #67           // file\n+    #3 = Methodref          #68.#69       // java/net/URL.getProtocol:()Ljava/lang/String;\n+    #4 = Methodref          #60.#70       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+    #5 = Methodref          #68.#71       // java/net/URL.getFile:()Ljava/lang/String;\n+    #6 = Fieldref           #9.#72        // java/io/File.separatorChar:C\n+    #7 = Methodref          #60.#73       // java/lang/String.replace:(CC)Ljava/lang/String;\n+    #8 = Methodref          #30.#74       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+    #9 = Class              #75           // java/io/File\n+   #10 = Methodref          #9.#76        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #11 = Methodref          #60.#77       // java/lang/String.indexOf:(I)I\n+   #12 = Methodref          #60.#78       // java/lang/String.length:()I\n+   #13 = Class              #79           // java/lang/StringBuilder\n+   #14 = Methodref          #13.#66       // java/lang/StringBuilder.\"<init>\":()V\n+   #15 = Methodref          #61.#80       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #16 = Methodref          #60.#81       // java/lang/String.charAt:(I)C\n+   #17 = Methodref          #60.#82       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #18 = Methodref          #83.#84       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #19 = Methodref          #61.#85       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #20 = Methodref          #61.#86       // java/nio/ByteBuffer.position:()I\n+   #21 = Methodref          #61.#87       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #22 = Fieldref           #30.#88       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n+   #23 = Methodref          #89.#90       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #24 = Methodref          #13.#91       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #61.#92       // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+   #26 = Class              #93           // java/lang/RuntimeException\n+   #27 = Methodref          #13.#94       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #28 = Methodref          #13.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #29 = Fieldref           #96.#97       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #30 = Class              #98           // org/apache/commons/configuration2/io/FileUtils\n+   #31 = Class              #99           // java/lang/Object\n    #32 = Utf8               UTF8\n    #33 = Utf8               Ljava/nio/charset/Charset;\n    #34 = Utf8               <init>\n    #35 = Utf8               ()V\n    #36 = Utf8               Code\n    #37 = Utf8               LineNumberTable\n    #38 = Utf8               LocalVariableTable\n@@ -63,100 +63,96 @@\n    #53 = Utf8               I\n    #54 = Utf8               n\n    #55 = Utf8               buffer\n    #56 = Utf8               Ljava/lang/StringBuilder;\n    #57 = Utf8               bytes\n    #58 = Utf8               Ljava/nio/ByteBuffer;\n    #59 = Utf8               decoded\n-   #60 = Class              #104          // java/lang/String\n-   #61 = Class              #82           // java/lang/StringBuilder\n-   #62 = Class              #105          // java/nio/ByteBuffer\n-   #63 = Class              #97           // java/lang/RuntimeException\n-   #64 = Class              #106          // java/lang/Throwable\n-   #65 = Utf8               <clinit>\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               FileUtils.java\n-   #68 = NameAndType        #34:#35       // \"<init>\":()V\n-   #69 = Utf8               file\n-   #70 = Class              #107          // java/net/URL\n-   #71 = NameAndType        #108:#109     // getProtocol:()Ljava/lang/String;\n-   #72 = Class              #104          // java/lang/String\n-   #73 = NameAndType        #110:#111     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #74 = NameAndType        #112:#109     // getFile:()Ljava/lang/String;\n-   #75 = NameAndType        #113:#114     // separatorChar:C\n-   #76 = NameAndType        #115:#116     // replace:(CC)Ljava/lang/String;\n-   #77 = NameAndType        #48:#49       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-   #78 = Utf8               java/io/File\n-   #79 = NameAndType        #34:#117      // \"<init>\":(Ljava/lang/String;)V\n-   #80 = NameAndType        #118:#119     // indexOf:(I)I\n-   #81 = NameAndType        #120:#121     // length:()I\n-   #82 = Utf8               java/lang/StringBuilder\n-   #83 = Class              #105          // java/nio/ByteBuffer\n-   #84 = NameAndType        #122:#123     // allocate:(I)Ljava/nio/ByteBuffer;\n-   #85 = NameAndType        #124:#125     // charAt:(I)C\n-   #86 = NameAndType        #126:#127     // substring:(II)Ljava/lang/String;\n-   #87 = Class              #128          // java/lang/Integer\n-   #88 = NameAndType        #129:#130     // parseInt:(Ljava/lang/String;I)I\n-   #89 = NameAndType        #131:#132     // put:(B)Ljava/nio/ByteBuffer;\n-   #90 = NameAndType        #133:#121     // position:()I\n-   #91 = NameAndType        #134:#135     // flip:()Ljava/nio/Buffer;\n-   #92 = NameAndType        #32:#33       // UTF8:Ljava/nio/charset/Charset;\n-   #93 = Class              #136          // java/nio/charset/Charset\n-   #94 = NameAndType        #137:#138     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #95 = NameAndType        #139:#140     // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-   #96 = NameAndType        #141:#135     // clear:()Ljava/nio/Buffer;\n-   #97 = Utf8               java/lang/RuntimeException\n-   #98 = NameAndType        #139:#142     // append:(C)Ljava/lang/StringBuilder;\n-   #99 = NameAndType        #143:#109     // toString:()Ljava/lang/String;\n-  #100 = Class              #144          // java/nio/charset/StandardCharsets\n-  #101 = NameAndType        #145:#33      // UTF_8:Ljava/nio/charset/Charset;\n-  #102 = Utf8               org/apache/commons/configuration2/io/FileUtils\n-  #103 = Utf8               java/lang/Object\n-  #104 = Utf8               java/lang/String\n-  #105 = Utf8               java/nio/ByteBuffer\n-  #106 = Utf8               java/lang/Throwable\n-  #107 = Utf8               java/net/URL\n-  #108 = Utf8               getProtocol\n-  #109 = Utf8               ()Ljava/lang/String;\n-  #110 = Utf8               equalsIgnoreCase\n-  #111 = Utf8               (Ljava/lang/String;)Z\n-  #112 = Utf8               getFile\n-  #113 = Utf8               separatorChar\n-  #114 = Utf8               C\n-  #115 = Utf8               replace\n-  #116 = Utf8               (CC)Ljava/lang/String;\n-  #117 = Utf8               (Ljava/lang/String;)V\n-  #118 = Utf8               indexOf\n-  #119 = Utf8               (I)I\n-  #120 = Utf8               length\n-  #121 = Utf8               ()I\n-  #122 = Utf8               allocate\n-  #123 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #124 = Utf8               charAt\n-  #125 = Utf8               (I)C\n-  #126 = Utf8               substring\n-  #127 = Utf8               (II)Ljava/lang/String;\n-  #128 = Utf8               java/lang/Integer\n-  #129 = Utf8               parseInt\n-  #130 = Utf8               (Ljava/lang/String;I)I\n-  #131 = Utf8               put\n-  #132 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #133 = Utf8               position\n-  #134 = Utf8               flip\n-  #135 = Utf8               ()Ljava/nio/Buffer;\n-  #136 = Utf8               java/nio/charset/Charset\n-  #137 = Utf8               decode\n-  #138 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-  #139 = Utf8               append\n-  #140 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n-  #141 = Utf8               clear\n-  #142 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #143 = Utf8               toString\n-  #144 = Utf8               java/nio/charset/StandardCharsets\n-  #145 = Utf8               UTF_8\n+   #60 = Class              #100          // java/lang/String\n+   #61 = Class              #101          // java/nio/ByteBuffer\n+   #62 = Class              #102          // java/lang/Throwable\n+   #63 = Utf8               <clinit>\n+   #64 = Utf8               SourceFile\n+   #65 = Utf8               FileUtils.java\n+   #66 = NameAndType        #34:#35       // \"<init>\":()V\n+   #67 = Utf8               file\n+   #68 = Class              #103          // java/net/URL\n+   #69 = NameAndType        #104:#105     // getProtocol:()Ljava/lang/String;\n+   #70 = NameAndType        #106:#107     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #71 = NameAndType        #108:#105     // getFile:()Ljava/lang/String;\n+   #72 = NameAndType        #109:#110     // separatorChar:C\n+   #73 = NameAndType        #111:#112     // replace:(CC)Ljava/lang/String;\n+   #74 = NameAndType        #48:#49       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+   #75 = Utf8               java/io/File\n+   #76 = NameAndType        #34:#113      // \"<init>\":(Ljava/lang/String;)V\n+   #77 = NameAndType        #114:#115     // indexOf:(I)I\n+   #78 = NameAndType        #116:#117     // length:()I\n+   #79 = Utf8               java/lang/StringBuilder\n+   #80 = NameAndType        #118:#119     // allocate:(I)Ljava/nio/ByteBuffer;\n+   #81 = NameAndType        #120:#121     // charAt:(I)C\n+   #82 = NameAndType        #122:#123     // substring:(II)Ljava/lang/String;\n+   #83 = Class              #124          // java/lang/Integer\n+   #84 = NameAndType        #125:#126     // parseInt:(Ljava/lang/String;I)I\n+   #85 = NameAndType        #127:#128     // put:(B)Ljava/nio/ByteBuffer;\n+   #86 = NameAndType        #129:#117     // position:()I\n+   #87 = NameAndType        #130:#131     // flip:()Ljava/nio/ByteBuffer;\n+   #88 = NameAndType        #32:#33       // UTF8:Ljava/nio/charset/Charset;\n+   #89 = Class              #132          // java/nio/charset/Charset\n+   #90 = NameAndType        #133:#134     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #91 = NameAndType        #135:#136     // append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+   #92 = NameAndType        #137:#131     // clear:()Ljava/nio/ByteBuffer;\n+   #93 = Utf8               java/lang/RuntimeException\n+   #94 = NameAndType        #135:#138     // append:(C)Ljava/lang/StringBuilder;\n+   #95 = NameAndType        #139:#105     // toString:()Ljava/lang/String;\n+   #96 = Class              #140          // java/nio/charset/StandardCharsets\n+   #97 = NameAndType        #141:#33      // UTF_8:Ljava/nio/charset/Charset;\n+   #98 = Utf8               org/apache/commons/configuration2/io/FileUtils\n+   #99 = Utf8               java/lang/Object\n+  #100 = Utf8               java/lang/String\n+  #101 = Utf8               java/nio/ByteBuffer\n+  #102 = Utf8               java/lang/Throwable\n+  #103 = Utf8               java/net/URL\n+  #104 = Utf8               getProtocol\n+  #105 = Utf8               ()Ljava/lang/String;\n+  #106 = Utf8               equalsIgnoreCase\n+  #107 = Utf8               (Ljava/lang/String;)Z\n+  #108 = Utf8               getFile\n+  #109 = Utf8               separatorChar\n+  #110 = Utf8               C\n+  #111 = Utf8               replace\n+  #112 = Utf8               (CC)Ljava/lang/String;\n+  #113 = Utf8               (Ljava/lang/String;)V\n+  #114 = Utf8               indexOf\n+  #115 = Utf8               (I)I\n+  #116 = Utf8               length\n+  #117 = Utf8               ()I\n+  #118 = Utf8               allocate\n+  #119 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #120 = Utf8               charAt\n+  #121 = Utf8               (I)C\n+  #122 = Utf8               substring\n+  #123 = Utf8               (II)Ljava/lang/String;\n+  #124 = Utf8               java/lang/Integer\n+  #125 = Utf8               parseInt\n+  #126 = Utf8               (Ljava/lang/String;I)I\n+  #127 = Utf8               put\n+  #128 = Utf8               (B)Ljava/nio/ByteBuffer;\n+  #129 = Utf8               position\n+  #130 = Utf8               flip\n+  #131 = Utf8               ()Ljava/nio/ByteBuffer;\n+  #132 = Utf8               java/nio/charset/Charset\n+  #133 = Utf8               decode\n+  #134 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+  #135 = Utf8               append\n+  #136 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n+  #137 = Utf8               clear\n+  #138 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #139 = Utf8               toString\n+  #140 = Utf8               java/nio/charset/StandardCharsets\n+  #141 = Utf8               UTF_8\n {\n   private static final java.nio.charset.Charset UTF8;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   org.apache.commons.configuration2.io.FileUtils();\n     descriptor: ()V\n@@ -272,58 +268,58 @@\n         94: invokevirtual #16                 // Method java/lang/String.charAt:(I)C\n         97: bipush        37\n         99: if_icmpeq     54\n        102: aload         4\n        104: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        107: ifle          37\n        110: aload         4\n-       112: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       112: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        115: pop\n        116: aload_3\n        117: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        120: aload         4\n        122: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        125: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        128: pop\n        129: aload         4\n-       131: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       131: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        134: pop\n        135: goto          37\n        138: astore        6\n        140: aload         4\n        142: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        145: ifle          214\n        148: aload         4\n-       150: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       150: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        153: pop\n        154: aload_3\n        155: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        158: aload         4\n        160: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        163: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        166: pop\n        167: aload         4\n-       169: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       169: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        172: pop\n        173: goto          214\n        176: astore        7\n        178: aload         4\n        180: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        183: ifle          211\n        186: aload         4\n-       188: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       188: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        191: pop\n        192: aload_3\n        193: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        196: aload         4\n        198: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        201: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;\n        204: pop\n        205: aload         4\n-       207: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       207: invokevirtual #25                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        210: pop\n        211: aload         7\n        213: athrow\n        214: aload_3\n        215: aload_0\n        216: iload         5\n        218: iinc          5, 1\n"}]}
