{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorInputStream.class", "source2": "second/ZstdCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum cc2cfd8cdbbb4ddb10e5654c296f8f84618015202d0fd1694797a87c0f8f0276\n+  SHA-256 checksum 74dfd677bf651209a6d314ab40a0b054590678cbf7623131c331bb5a4faeb331\n   Compiled from \"ZstdCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #16                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n   super_class: #17                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 0, fields: 1, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#61        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #62            // com/github/luben/zstd/ZstdInputStream\n-   #3 = Methodref          #2.#63         // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Fieldref           #16.#64        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-   #5 = Methodref          #2.#65         // com/github/luben/zstd/ZstdInputStream.available:()I\n-   #6 = Methodref          #2.#66         // com/github/luben/zstd/ZstdInputStream.close:()V\n-   #7 = Methodref          #2.#67         // com/github/luben/zstd/ZstdInputStream.read:([B)I\n-   #8 = Methodref          #2.#68         // com/github/luben/zstd/ZstdInputStream.skip:(J)J\n-   #9 = Methodref          #2.#69         // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n-  #10 = Methodref          #2.#70         // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n-  #11 = Methodref          #2.#71         // com/github/luben/zstd/ZstdInputStream.read:()I\n-  #12 = Methodref          #16.#72        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n-  #13 = Methodref          #2.#73         // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n-  #14 = Methodref          #74.#75        // java/lang/Object.toString:()Ljava/lang/String;\n-  #15 = Methodref          #2.#76         // com/github/luben/zstd/ZstdInputStream.reset:()V\n-  #16 = Class              #77            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #17 = Class              #78            // org/apache/commons/compress/compressors/CompressorInputStream\n+   #1 = Methodref          #17.#60        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #2 = Class              #61            // com/github/luben/zstd/ZstdInputStream\n+   #3 = Methodref          #2.#62         // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #4 = Fieldref           #16.#63        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+   #5 = Methodref          #2.#64         // com/github/luben/zstd/ZstdInputStream.available:()I\n+   #6 = Methodref          #2.#65         // com/github/luben/zstd/ZstdInputStream.close:()V\n+   #7 = Methodref          #2.#66         // com/github/luben/zstd/ZstdInputStream.read:([B)I\n+   #8 = Methodref          #2.#67         // com/github/luben/zstd/ZstdInputStream.skip:(J)J\n+   #9 = Methodref          #2.#68         // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n+  #10 = Methodref          #2.#69         // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n+  #11 = Methodref          #2.#70         // com/github/luben/zstd/ZstdInputStream.read:()I\n+  #12 = Methodref          #16.#71        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n+  #13 = Methodref          #2.#72         // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n+  #14 = Methodref          #73.#74        // java/lang/Object.toString:()Ljava/lang/String;\n+  #15 = Methodref          #2.#75         // com/github/luben/zstd/ZstdInputStream.reset:()V\n+  #16 = Class              #76            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  #17 = Class              #77            // org/apache/commons/compress/compressors/CompressorInputStream\n   #18 = Utf8               decIS\n   #19 = Utf8               Lcom/github/luben/zstd/ZstdInputStream;\n   #20 = Utf8               <init>\n   #21 = Utf8               (Ljava/io/InputStream;)V\n   #22 = Utf8               Code\n   #23 = Utf8               LineNumberTable\n   #24 = Utf8               LocalVariableTable\n   #25 = Utf8               this\n   #26 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n   #27 = Utf8               in\n   #28 = Utf8               Ljava/io/InputStream;\n   #29 = Utf8               Exceptions\n-  #30 = Class              #79            // java/io/IOException\n+  #30 = Class              #78            // java/io/IOException\n   #31 = Utf8               available\n   #32 = Utf8               ()I\n   #33 = Utf8               close\n   #34 = Utf8               ()V\n   #35 = Utf8               read\n   #36 = Utf8               ([B)I\n   #37 = Utf8               b\n@@ -54,45 +54,44 @@\n   #44 = Utf8               (I)V\n   #45 = Utf8               readlimit\n   #46 = Utf8               I\n   #47 = Utf8               markSupported\n   #48 = Utf8               ()Z\n   #49 = Utf8               ret\n   #50 = Utf8               StackMapTable\n-  #51 = Class              #77            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #52 = Utf8               ([BII)I\n-  #53 = Utf8               buf\n-  #54 = Utf8               off\n-  #55 = Utf8               len\n-  #56 = Utf8               toString\n-  #57 = Utf8               ()Ljava/lang/String;\n-  #58 = Utf8               reset\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               ZstdCompressorInputStream.java\n-  #61 = NameAndType        #20:#34        // \"<init>\":()V\n-  #62 = Utf8               com/github/luben/zstd/ZstdInputStream\n-  #63 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/InputStream;)V\n-  #64 = NameAndType        #18:#19        // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-  #65 = NameAndType        #31:#32        // available:()I\n-  #66 = NameAndType        #33:#34        // close:()V\n-  #67 = NameAndType        #35:#36        // read:([B)I\n-  #68 = NameAndType        #39:#40        // skip:(J)J\n-  #69 = NameAndType        #43:#44        // mark:(I)V\n-  #70 = NameAndType        #47:#48        // markSupported:()Z\n-  #71 = NameAndType        #35:#32        // read:()I\n-  #72 = NameAndType        #80:#44        // count:(I)V\n-  #73 = NameAndType        #35:#52        // read:([BII)I\n-  #74 = Class              #81            // java/lang/Object\n-  #75 = NameAndType        #56:#57        // toString:()Ljava/lang/String;\n-  #76 = NameAndType        #58:#34        // reset:()V\n-  #77 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #78 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #79 = Utf8               java/io/IOException\n-  #80 = Utf8               count\n-  #81 = Utf8               java/lang/Object\n+  #51 = Utf8               ([BII)I\n+  #52 = Utf8               buf\n+  #53 = Utf8               off\n+  #54 = Utf8               len\n+  #55 = Utf8               toString\n+  #56 = Utf8               ()Ljava/lang/String;\n+  #57 = Utf8               reset\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               ZstdCompressorInputStream.java\n+  #60 = NameAndType        #20:#34        // \"<init>\":()V\n+  #61 = Utf8               com/github/luben/zstd/ZstdInputStream\n+  #62 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/InputStream;)V\n+  #63 = NameAndType        #18:#19        // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+  #64 = NameAndType        #31:#32        // available:()I\n+  #65 = NameAndType        #33:#34        // close:()V\n+  #66 = NameAndType        #35:#36        // read:([B)I\n+  #67 = NameAndType        #39:#40        // skip:(J)J\n+  #68 = NameAndType        #43:#44        // mark:(I)V\n+  #69 = NameAndType        #47:#48        // markSupported:()Z\n+  #70 = NameAndType        #35:#32        // read:()I\n+  #71 = NameAndType        #79:#44        // count:(I)V\n+  #72 = NameAndType        #35:#51        // read:([BII)I\n+  #73 = Class              #80            // java/lang/Object\n+  #74 = NameAndType        #55:#56        // toString:()Ljava/lang/String;\n+  #75 = NameAndType        #57:#34        // reset:()V\n+  #76 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  #77 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #78 = Utf8               java/io/IOException\n+  #79 = Utf8               count\n+  #80 = Utf8               java/lang/Object\n {\n   private final com.github.luben.zstd.ZstdInputStream decIS;\n     descriptor: Lcom/github/luben/zstd/ZstdInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)V\n"}]}
