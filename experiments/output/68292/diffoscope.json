{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedByteArrayInputStream.class", "source2": "second/UnsynchronizedByteArrayInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,109 +1,109 @@\n-  SHA-256 checksum db1f590005ce94ea746c454e51d6f820db7ada450f457c64b84a92afa0c74393\n+  SHA-256 checksum c212db830719cdfe3213315df06538fc379fb4306ad1f2ce7a3accd2ea30a6e6\n   Compiled from \"UnsynchronizedByteArrayInputStream.java\"\n public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  super_class: #18                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 5, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #18.#63        // java/io/InputStream.\"<init>\":()V\n-   #2 = Methodref          #64.#65        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #3 = Fieldref           #12.#66        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n-   #4 = Fieldref           #12.#67        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n-   #5 = Fieldref           #12.#68        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n-   #6 = Fieldref           #12.#69        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n-   #7 = Class              #70            // java/lang/IllegalArgumentException\n-   #8 = String             #71            // offset cannot be negative\n-   #9 = Methodref          #7.#72         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #10 = Methodref          #73.#74        // java/lang/Math.min:(II)I\n-  #11 = String             #75            // length cannot be negative\n-  #12 = Class              #76            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #13 = Methodref          #12.#77        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n-  #14 = Class              #78            // java/lang/IndexOutOfBoundsException\n-  #15 = Methodref          #14.#63        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-  #16 = Methodref          #79.#80        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #17 = String             #81            // Skipping backward is not supported\n-  #18 = Class              #82            // java/io/InputStream\n-  #19 = Utf8               END_OF_STREAM\n-  #20 = Utf8               I\n-  #21 = Utf8               ConstantValue\n-  #22 = Integer            -1\n-  #23 = Utf8               data\n-  #24 = Utf8               [B\n-  #25 = Utf8               eod\n-  #26 = Utf8               offset\n-  #27 = Utf8               markedOffset\n-  #28 = Utf8               <init>\n-  #29 = Utf8               ([B)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               LocalVariableTable\n-  #33 = Utf8               this\n-  #34 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n-  #35 = Utf8               ([BI)V\n-  #36 = Utf8               StackMapTable\n-  #37 = Class              #24            // \"[B\"\n-  #38 = Utf8               ([BII)V\n-  #39 = Utf8               length\n-  #40 = Utf8               available\n-  #41 = Utf8               ()I\n-  #42 = Utf8               read\n-  #43 = Utf8               ([B)I\n-  #44 = Utf8               b\n-  #45 = Utf8               ([BII)I\n-  #46 = Utf8               off\n-  #47 = Utf8               len\n-  #48 = Utf8               actualLen\n-  #49 = Utf8               skip\n-  #50 = Utf8               (J)J\n-  #51 = Utf8               n\n-  #52 = Utf8               J\n-  #53 = Utf8               actualSkip\n-  #54 = Utf8               markSupported\n-  #55 = Utf8               ()Z\n-  #56 = Utf8               mark\n-  #57 = Utf8               (I)V\n-  #58 = Utf8               readlimit\n-  #59 = Utf8               reset\n-  #60 = Utf8               ()V\n-  #61 = Utf8               SourceFile\n-  #62 = Utf8               UnsynchronizedByteArrayInputStream.java\n-  #63 = NameAndType        #28:#60        // \"<init>\":()V\n-  #64 = Class              #83            // java/util/Objects\n-  #65 = NameAndType        #84:#85        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #66 = NameAndType        #23:#24        // data:[B\n-  #67 = NameAndType        #26:#20        // offset:I\n-  #68 = NameAndType        #25:#20        // eod:I\n-  #69 = NameAndType        #27:#20        // markedOffset:I\n-  #70 = Utf8               java/lang/IllegalArgumentException\n-  #71 = Utf8               offset cannot be negative\n-  #72 = NameAndType        #28:#86        // \"<init>\":(Ljava/lang/String;)V\n-  #73 = Class              #87            // java/lang/Math\n-  #74 = NameAndType        #88:#89        // min:(II)I\n-  #75 = Utf8               length cannot be negative\n-  #76 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #77 = NameAndType        #42:#45        // read:([BII)I\n-  #78 = Utf8               java/lang/IndexOutOfBoundsException\n-  #79 = Class              #90            // java/lang/System\n-  #80 = NameAndType        #91:#92        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #1 = Class              #2             // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+   #2 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               END_OF_STREAM\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            -1\n+   #9 = Utf8               data\n+  #10 = Utf8               [B\n+  #11 = Utf8               eod\n+  #12 = Utf8               offset\n+  #13 = Utf8               markedOffset\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ([B)V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/io/InputStream.\"<init>\":()V\n+  #18 = NameAndType        #14:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = Methodref          #21.#23        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #21 = Class              #22            // java/util/Objects\n+  #22 = Utf8               java/util/Objects\n+  #23 = NameAndType        #24:#25        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #24 = Utf8               requireNonNull\n+  #25 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #26 = Fieldref           #1.#27         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n+  #27 = NameAndType        #9:#10         // data:[B\n+  #28 = Fieldref           #1.#29         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n+  #29 = NameAndType        #12:#6         // offset:I\n+  #30 = Fieldref           #1.#31         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n+  #31 = NameAndType        #11:#6         // eod:I\n+  #32 = Fieldref           #1.#33         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n+  #33 = NameAndType        #13:#6         // markedOffset:I\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               LocalVariableTable\n+  #36 = Utf8               this\n+  #37 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+  #38 = Utf8               ([BI)V\n+  #39 = Class              #40            // java/lang/IllegalArgumentException\n+  #40 = Utf8               java/lang/IllegalArgumentException\n+  #41 = String             #42            // offset cannot be negative\n+  #42 = Utf8               offset cannot be negative\n+  #43 = Methodref          #39.#44        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #44 = NameAndType        #14:#45        // \"<init>\":(Ljava/lang/String;)V\n+  #45 = Utf8               (Ljava/lang/String;)V\n+  #46 = Methodref          #47.#49        // java/lang/Math.min:(II)I\n+  #47 = Class              #48            // java/lang/Math\n+  #48 = Utf8               java/lang/Math\n+  #49 = NameAndType        #50:#51        // min:(II)I\n+  #50 = Utf8               min\n+  #51 = Utf8               (II)I\n+  #52 = Utf8               StackMapTable\n+  #53 = Class              #10            // \"[B\"\n+  #54 = Utf8               ([BII)V\n+  #55 = String             #56            // length cannot be negative\n+  #56 = Utf8               length cannot be negative\n+  #57 = Utf8               length\n+  #58 = Utf8               available\n+  #59 = Utf8               ()I\n+  #60 = Utf8               read\n+  #61 = Utf8               ([B)I\n+  #62 = Methodref          #1.#63         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n+  #63 = NameAndType        #60:#64        // read:([BII)I\n+  #64 = Utf8               ([BII)I\n+  #65 = Utf8               b\n+  #66 = Class              #67            // java/lang/IndexOutOfBoundsException\n+  #67 = Utf8               java/lang/IndexOutOfBoundsException\n+  #68 = Methodref          #66.#18        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+  #69 = Methodref          #70.#72        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #70 = Class              #71            // java/lang/System\n+  #71 = Utf8               java/lang/System\n+  #72 = NameAndType        #73:#74        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #73 = Utf8               arraycopy\n+  #74 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #75 = Utf8               off\n+  #76 = Utf8               len\n+  #77 = Utf8               actualLen\n+  #78 = Utf8               skip\n+  #79 = Utf8               (J)J\n+  #80 = String             #81            // Skipping backward is not supported\n   #81 = Utf8               Skipping backward is not supported\n-  #82 = Utf8               java/io/InputStream\n-  #83 = Utf8               java/util/Objects\n-  #84 = Utf8               requireNonNull\n-  #85 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #86 = Utf8               (Ljava/lang/String;)V\n-  #87 = Utf8               java/lang/Math\n-  #88 = Utf8               min\n-  #89 = Utf8               (II)I\n-  #90 = Utf8               java/lang/System\n-  #91 = Utf8               arraycopy\n-  #92 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #82 = Utf8               n\n+  #83 = Utf8               J\n+  #84 = Utf8               actualSkip\n+  #85 = Utf8               markSupported\n+  #86 = Utf8               ()Z\n+  #87 = Utf8               mark\n+  #88 = Utf8               (I)V\n+  #89 = Utf8               readlimit\n+  #90 = Utf8               reset\n+  #91 = Utf8               SourceFile\n+  #92 = Utf8               UnsynchronizedByteArrayInputStream.java\n {\n   public static final int END_OF_STREAM = -1;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private final byte[] data;\n@@ -124,32 +124,32 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_1\n-         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         5: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          8: pop\n          9: aload_0\n         10: aload_1\n-        11: putfield      #3                  // Field data:[B\n+        11: putfield      #26                 // Field data:[B\n         14: aload_0\n         15: iconst_0\n-        16: putfield      #4                  // Field offset:I\n+        16: putfield      #28                 // Field offset:I\n         19: aload_0\n         20: aload_1\n         21: arraylength\n-        22: putfield      #5                  // Field eod:I\n+        22: putfield      #30                 // Field eod:I\n         25: aload_0\n         26: aload_0\n-        27: getfield      #4                  // Field offset:I\n-        30: putfield      #6                  // Field markedOffset:I\n+        27: getfield      #28                 // Field offset:I\n+        30: putfield      #32                 // Field markedOffset:I\n         33: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 9\n         line 70: 14\n         line 71: 19\n@@ -162,47 +162,47 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_1\n-         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         5: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          8: pop\n          9: iload_2\n         10: ifge          23\n-        13: new           #7                  // class java/lang/IllegalArgumentException\n+        13: new           #39                 // class java/lang/IllegalArgumentException\n         16: dup\n-        17: ldc           #8                  // String offset cannot be negative\n-        19: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #41                 // String offset cannot be negative\n+        19: invokespecial #43                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: aload_0\n         24: aload_1\n-        25: putfield      #3                  // Field data:[B\n+        25: putfield      #26                 // Field data:[B\n         28: aload_0\n         29: iload_2\n         30: aload_1\n         31: arraylength\n         32: ifle          40\n         35: aload_1\n         36: arraylength\n         37: goto          41\n         40: iload_2\n-        41: invokestatic  #10                 // Method java/lang/Math.min:(II)I\n-        44: putfield      #4                  // Field offset:I\n+        41: invokestatic  #46                 // Method java/lang/Math.min:(II)I\n+        44: putfield      #28                 // Field offset:I\n         47: aload_0\n         48: aload_1\n         49: arraylength\n-        50: putfield      #5                  // Field eod:I\n+        50: putfield      #30                 // Field eod:I\n         53: aload_0\n         54: aload_0\n-        55: getfield      #4                  // Field offset:I\n-        58: putfield      #6                  // Field markedOffset:I\n+        55: getfield      #28                 // Field offset:I\n+        58: putfield      #32                 // Field markedOffset:I\n         61: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 4\n         line 85: 9\n         line 86: 13\n         line 88: 23\n@@ -231,59 +231,59 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_1\n-         5: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         5: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          8: pop\n          9: iload_2\n         10: ifge          23\n-        13: new           #7                  // class java/lang/IllegalArgumentException\n+        13: new           #39                 // class java/lang/IllegalArgumentException\n         16: dup\n-        17: ldc           #8                  // String offset cannot be negative\n-        19: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #41                 // String offset cannot be negative\n+        19: invokespecial #43                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: iload_3\n         24: ifge          37\n-        27: new           #7                  // class java/lang/IllegalArgumentException\n+        27: new           #39                 // class java/lang/IllegalArgumentException\n         30: dup\n-        31: ldc           #11                 // String length cannot be negative\n-        33: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        31: ldc           #55                 // String length cannot be negative\n+        33: invokespecial #43                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         36: athrow\n         37: aload_0\n         38: aload_1\n-        39: putfield      #3                  // Field data:[B\n+        39: putfield      #26                 // Field data:[B\n         42: aload_0\n         43: iload_2\n         44: aload_1\n         45: arraylength\n         46: ifle          54\n         49: aload_1\n         50: arraylength\n         51: goto          55\n         54: iload_2\n-        55: invokestatic  #10                 // Method java/lang/Math.min:(II)I\n-        58: putfield      #4                  // Field offset:I\n+        55: invokestatic  #46                 // Method java/lang/Math.min:(II)I\n+        58: putfield      #28                 // Field offset:I\n         61: aload_0\n         62: aload_0\n-        63: getfield      #4                  // Field offset:I\n+        63: getfield      #28                 // Field offset:I\n         66: iload_3\n         67: iadd\n         68: aload_1\n         69: arraylength\n-        70: invokestatic  #10                 // Method java/lang/Math.min:(II)I\n-        73: putfield      #5                  // Field eod:I\n+        70: invokestatic  #46                 // Method java/lang/Math.min:(II)I\n+        73: putfield      #30                 // Field eod:I\n         76: aload_0\n         77: aload_0\n-        78: getfield      #4                  // Field offset:I\n-        81: putfield      #6                  // Field markedOffset:I\n+        78: getfield      #28                 // Field offset:I\n+        81: putfield      #32                 // Field markedOffset:I\n         84: return\n       LineNumberTable:\n         line 104: 0\n         line 105: 4\n         line 106: 9\n         line 107: 13\n         line 109: 23\n@@ -316,22 +316,22 @@\n \n   public int available();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field offset:I\n+         1: getfield      #28                 // Field offset:I\n          4: aload_0\n-         5: getfield      #5                  // Field eod:I\n+         5: getfield      #30                 // Field eod:I\n          8: if_icmpge     23\n         11: aload_0\n-        12: getfield      #5                  // Field eod:I\n+        12: getfield      #30                 // Field eod:I\n         15: aload_0\n-        16: getfield      #4                  // Field offset:I\n+        16: getfield      #28                 // Field offset:I\n         19: isub\n         20: goto          24\n         23: iconst_0\n         24: ireturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n@@ -344,27 +344,27 @@\n \n   public int read();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field offset:I\n+         1: getfield      #28                 // Field offset:I\n          4: aload_0\n-         5: getfield      #5                  // Field eod:I\n+         5: getfield      #30                 // Field eod:I\n          8: if_icmpge     34\n         11: aload_0\n-        12: getfield      #3                  // Field data:[B\n+        12: getfield      #26                 // Field data:[B\n         15: aload_0\n         16: dup\n-        17: getfield      #4                  // Field offset:I\n+        17: getfield      #28                 // Field offset:I\n         20: dup_x1\n         21: iconst_1\n         22: iadd\n-        23: putfield      #4                  // Field offset:I\n+        23: putfield      #28                 // Field offset:I\n         26: baload\n         27: sipush        255\n         30: iand\n         31: goto          35\n         34: iconst_m1\n         35: ireturn\n       LineNumberTable:\n@@ -379,22 +379,22 @@\n \n   public int read(byte[]);\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n          7: iconst_0\n          8: aload_1\n          9: arraylength\n-        10: invokevirtual #13                 // Method read:([BII)I\n+        10: invokevirtual #62                 // Method read:([BII)I\n         13: ireturn\n       LineNumberTable:\n         line 130: 0\n         line 131: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n@@ -402,66 +402,66 @@\n \n   public int read(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iload_2\n          6: iflt          21\n          9: iload_3\n         10: iflt          21\n         13: iload_2\n         14: iload_3\n         15: iadd\n         16: aload_1\n         17: arraylength\n         18: if_icmple     29\n-        21: new           #14                 // class java/lang/IndexOutOfBoundsException\n+        21: new           #66                 // class java/lang/IndexOutOfBoundsException\n         24: dup\n-        25: invokespecial #15                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        25: invokespecial #68                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         28: athrow\n         29: aload_0\n-        30: getfield      #4                  // Field offset:I\n+        30: getfield      #28                 // Field offset:I\n         33: aload_0\n-        34: getfield      #5                  // Field eod:I\n+        34: getfield      #30                 // Field eod:I\n         37: if_icmplt     42\n         40: iconst_m1\n         41: ireturn\n         42: aload_0\n-        43: getfield      #5                  // Field eod:I\n+        43: getfield      #30                 // Field eod:I\n         46: aload_0\n-        47: getfield      #4                  // Field offset:I\n+        47: getfield      #28                 // Field offset:I\n         50: isub\n         51: istore        4\n         53: iload_3\n         54: iload         4\n         56: if_icmpge     62\n         59: iload_3\n         60: istore        4\n         62: iload         4\n         64: ifgt          69\n         67: iconst_0\n         68: ireturn\n         69: aload_0\n-        70: getfield      #3                  // Field data:[B\n+        70: getfield      #26                 // Field data:[B\n         73: aload_0\n-        74: getfield      #4                  // Field offset:I\n+        74: getfield      #28                 // Field offset:I\n         77: aload_1\n         78: iload_2\n         79: iload         4\n-        81: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        81: invokestatic  #69                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         84: aload_0\n         85: dup\n-        86: getfield      #4                  // Field offset:I\n+        86: getfield      #28                 // Field offset:I\n         89: iload         4\n         91: iadd\n-        92: putfield      #4                  // Field offset:I\n+        92: putfield      #28                 // Field offset:I\n         95: iload         4\n         97: ireturn\n       LineNumberTable:\n         line 136: 0\n         line 137: 5\n         line 138: 21\n         line 141: 29\n@@ -495,40 +495,40 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          16\n-         6: new           #7                  // class java/lang/IllegalArgumentException\n+         6: new           #39                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #17                 // String Skipping backward is not supported\n-        12: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: ldc           #80                 // String Skipping backward is not supported\n+        12: invokespecial #43                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         15: athrow\n         16: aload_0\n-        17: getfield      #5                  // Field eod:I\n+        17: getfield      #30                 // Field eod:I\n         20: aload_0\n-        21: getfield      #4                  // Field offset:I\n+        21: getfield      #28                 // Field offset:I\n         24: isub\n         25: i2l\n         26: lstore_3\n         27: lload_1\n         28: lload_3\n         29: lcmp\n         30: ifge          35\n         33: lload_1\n         34: lstore_3\n         35: aload_0\n         36: dup\n-        37: getfield      #4                  // Field offset:I\n+        37: getfield      #28                 // Field offset:I\n         40: i2l\n         41: lload_3\n         42: ladd\n         43: l2i\n-        44: putfield      #4                  // Field offset:I\n+        44: putfield      #28                 // Field offset:I\n         47: lload_3\n         48: lreturn\n       LineNumberTable:\n         line 159: 0\n         line 160: 6\n         line 163: 16\n         line 164: 27\n@@ -562,16 +562,16 @@\n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #4                  // Field offset:I\n-         5: putfield      #6                  // Field markedOffset:I\n+         2: getfield      #28                 // Field offset:I\n+         5: putfield      #32                 // Field markedOffset:I\n          8: return\n       LineNumberTable:\n         line 180: 0\n         line 181: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n@@ -580,16 +580,16 @@\n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #6                  // Field markedOffset:I\n-         5: putfield      #4                  // Field offset:I\n+         2: getfield      #32                 // Field markedOffset:I\n+         5: putfield      #28                 // Field offset:I\n          8: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n"}]}
