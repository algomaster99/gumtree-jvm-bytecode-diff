{"diffoscope-json-version": 1, "source1": "first/DaitchMokotoffSoundex$Branch.class", "source2": "second/DaitchMokotoffSoundex$Branch.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,40 +17,39 @@\n         final Branch branch = new Branch();\n         branch.builder.append(this.toString());\n         branch.lastReplacement = this.lastReplacement;\n         return branch;\n     }\n     \n     @Override\n-    public boolean equals(final Object other) {\n-        return this == other || (other instanceof Branch && this.toString().equals(((Branch)other).toString()));\n+    public boolean equals(final Object o) {\n+        return this == o || (o instanceof Branch && this.toString().equals(((Branch)o).toString()));\n     }\n     \n     public void finish() {\n         while (this.builder.length() < 6) {\n             this.builder.append('0');\n             this.cachedString = null;\n         }\n     }\n     \n     @Override\n     public int hashCode() {\n         return this.toString().hashCode();\n     }\n     \n-    public void processNextReplacement(final String replacement, final boolean forceAppend) {\n-        final boolean append = this.lastReplacement == null || !this.lastReplacement.endsWith(replacement) || forceAppend;\n-        if (append && this.builder.length() < 6) {\n-            this.builder.append(replacement);\n+    public void processNextReplacement(final String lastReplacement, final boolean b) {\n+        if ((this.lastReplacement == null || this.lastReplacement.endsWith(lastReplacement) || b) && this.builder.length() < 6) {\n+            this.builder.append(lastReplacement);\n             if (this.builder.length() > 6) {\n                 this.builder.delete(6, this.builder.length());\n             }\n             this.cachedString = null;\n         }\n-        this.lastReplacement = replacement;\n+        this.lastReplacement = lastReplacement;\n     }\n     \n     @Override\n     public String toString() {\n         if (this.cachedString == null) {\n             this.cachedString = this.builder.toString();\n         }\n"}]}
