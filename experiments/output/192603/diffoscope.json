{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,203 +1,203 @@\n-  SHA-256 checksum ab1f6440ad687b51c27292c8cb542ded7b11fae8c9d9bba9033c0031743497a9\n+  SHA-256 checksum 902712f1c7d502eb9019dcc7786b6c83e7003d1902835b797cf7b9a6e36e08c7\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n-  super_class: #25                        // org/apache/commons/io/file/CountingPathVisitor\n+  super_class: #17                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Class              #84           // org/apache/commons/io/file/AccumulatorPathVisitor\n-    #2 = Methodref          #85.#86       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Methodref          #1.#87        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #4 = Methodref          #85.#88       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #5 = Methodref          #25.#87       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #6 = Class              #89           // java/util/ArrayList\n-    #7 = Methodref          #6.#90        // java/util/ArrayList.\"<init>\":()V\n-    #8 = Fieldref           #1.#91        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n-    #9 = Fieldref           #1.#92        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n-   #10 = Methodref          #25.#93       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #11 = Methodref          #94.#95       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #12 = Methodref          #25.#96       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #13 = Class              #97           // java/lang/Object\n-   #14 = Methodref          #94.#98       // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #15 = Methodref          #1.#99        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n-   #16 = Methodref          #100.#101     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #17 = Methodref          #1.#102       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n-   #18 = Class              #103          // java/nio/file/LinkOption\n-   #19 = Methodref          #104.#105     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #20 = InterfaceMethodref #23.#106      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #21 = InterfaceMethodref #78.#107      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #22 = Methodref          #25.#108      // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #23 = Class              #109          // java/nio/file/Path\n-   #24 = Methodref          #1.#108       // org/apache/commons/io/file/AccumulatorPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #25 = Class              #110          // org/apache/commons/io/file/CountingPathVisitor\n+    #1 = Class              #2            // org/apache/commons/io/file/AccumulatorPathVisitor\n+    #2 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #4 = Class              #6            // org/apache/commons/io/file/Counters\n+    #5 = NameAndType        #7:#8         // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Utf8               org/apache/commons/io/file/Counters\n+    #7 = Utf8               bigIntegerPathCounters\n+    #8 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #9 = Methodref          #1.#10        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #10 = NameAndType        #11:#12       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #13 = Methodref          #4.#14        // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #14 = NameAndType        #15:#8        // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #15 = Utf8               longPathCounters\n+   #16 = Methodref          #17.#10       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #17 = Class              #18           // org/apache/commons/io/file/CountingPathVisitor\n+   #18 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+   #19 = Class              #20           // java/util/ArrayList\n+   #20 = Utf8               java/util/ArrayList\n+   #21 = Methodref          #19.#22       // java/util/ArrayList.\"<init>\":()V\n+   #22 = NameAndType        #11:#23       // \"<init>\":()V\n+   #23 = Utf8               ()V\n+   #24 = Fieldref           #1.#25        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n+   #25 = NameAndType        #26:#27       // dirList:Ljava/util/List;\n    #26 = Utf8               dirList\n    #27 = Utf8               Ljava/util/List;\n-   #28 = Utf8               Signature\n-   #29 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+   #28 = Fieldref           #1.#29        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n+   #29 = NameAndType        #30:#27       // fileList:Ljava/util/List;\n    #30 = Utf8               fileList\n-   #31 = Utf8               withBigIntegerCounters\n-   #32 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               withLongCounters\n-   #36 = Utf8               <init>\n-   #37 = Class              #111          // org/apache/commons/io/file/Counters$PathCounters\n-   #38 = Utf8               PathCounters\n-   #39 = Utf8               InnerClasses\n-   #40 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #41 = Utf8               LocalVariableTable\n-   #42 = Utf8               this\n-   #43 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #44 = Utf8               pathCounter\n-   #45 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #46 = Utf8               equals\n-   #47 = Utf8               (Ljava/lang/Object;)Z\n-   #48 = Utf8               obj\n-   #49 = Utf8               Ljava/lang/Object;\n-   #50 = Utf8               other\n-   #51 = Utf8               StackMapTable\n+   #31 = Methodref          #17.#32       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #32 = NameAndType        #33:#34       // equals:(Ljava/lang/Object;)Z\n+   #33 = Utf8               equals\n+   #34 = Utf8               (Ljava/lang/Object;)Z\n+   #35 = Methodref          #36.#37       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #36 = Class              #38           // java/util/Objects\n+   #37 = NameAndType        #33:#39       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #38 = Utf8               java/util/Objects\n+   #39 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #40 = Methodref          #17.#41       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #41 = NameAndType        #42:#43       // hashCode:()I\n+   #42 = Utf8               hashCode\n+   #43 = Utf8               ()I\n+   #44 = Class              #45           // java/lang/Object\n+   #45 = Utf8               java/lang/Object\n+   #46 = Methodref          #36.#47       // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #47 = NameAndType        #48:#49       // hash:([Ljava/lang/Object;)I\n+   #48 = Utf8               hash\n+   #49 = Utf8               ([Ljava/lang/Object;)I\n+   #50 = Methodref          #1.#51        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n+   #51 = NameAndType        #52:#53       // getDirList:()Ljava/util/List;\n    #52 = Utf8               getDirList\n    #53 = Utf8               ()Ljava/util/List;\n-   #54 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-   #55 = Utf8               getFileList\n-   #56 = Utf8               hashCode\n-   #57 = Utf8               ()I\n-   #58 = Utf8               prime\n-   #59 = Utf8               I\n-   #60 = Utf8               result\n-   #61 = Utf8               relativizeDirectories\n-   #62 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #63 = Utf8               parent\n-   #64 = Utf8               Ljava/nio/file/Path;\n-   #65 = Utf8               sort\n-   #66 = Utf8               Z\n-   #67 = Utf8               comparator\n-   #68 = Utf8               Ljava/util/Comparator;\n-   #69 = Utf8               LocalVariableTypeTable\n-   #70 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-   #71 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #72 = Utf8               relativizeFiles\n-   #73 = Utf8               visitFile\n-   #74 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #75 = Utf8               file\n-   #76 = Utf8               attributes\n-   #77 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #78 = Class              #112          // java/util/List\n-   #79 = Utf8               Exceptions\n-   #80 = Class              #113          // java/io/IOException\n-   #81 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               AccumulatorPathVisitor.java\n-   #84 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-   #85 = Class              #114          // org/apache/commons/io/file/Counters\n-   #86 = NameAndType        #115:#116     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #87 = NameAndType        #36:#40       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #88 = NameAndType        #117:#116     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #89 = Utf8               java/util/ArrayList\n-   #90 = NameAndType        #36:#118      // \"<init>\":()V\n-   #91 = NameAndType        #26:#27       // dirList:Ljava/util/List;\n-   #92 = NameAndType        #30:#27       // fileList:Ljava/util/List;\n-   #93 = NameAndType        #46:#47       // equals:(Ljava/lang/Object;)Z\n-   #94 = Class              #119          // java/util/Objects\n-   #95 = NameAndType        #46:#120      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #96 = NameAndType        #56:#57       // hashCode:()I\n-   #97 = Utf8               java/lang/Object\n-   #98 = NameAndType        #121:#122     // hash:([Ljava/lang/Object;)I\n-   #99 = NameAndType        #52:#53       // getDirList:()Ljava/util/List;\n-  #100 = Class              #123          // org/apache/commons/io/file/PathUtils\n-  #101 = NameAndType        #124:#125     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #102 = NameAndType        #55:#53       // getFileList:()Ljava/util/List;\n-  #103 = Utf8               java/nio/file/LinkOption\n-  #104 = Class              #126          // java/nio/file/Files\n-  #105 = NameAndType        #127:#128     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #106 = NameAndType        #129:#130     // normalize:()Ljava/nio/file/Path;\n-  #107 = NameAndType        #131:#47      // add:(Ljava/lang/Object;)Z\n-  #108 = NameAndType        #73:#74       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #109 = Utf8               java/nio/file/Path\n-  #110 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #111 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #112 = Utf8               java/util/List\n-  #113 = Utf8               java/io/IOException\n-  #114 = Utf8               org/apache/commons/io/file/Counters\n-  #115 = Utf8               bigIntegerPathCounters\n-  #116 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #117 = Utf8               longPathCounters\n-  #118 = Utf8               ()V\n-  #119 = Utf8               java/util/Objects\n-  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #121 = Utf8               hash\n-  #122 = Utf8               ([Ljava/lang/Object;)I\n-  #123 = Utf8               org/apache/commons/io/file/PathUtils\n-  #124 = Utf8               relativize\n-  #125 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #126 = Utf8               java/nio/file/Files\n-  #127 = Utf8               isDirectory\n-  #128 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #129 = Utf8               normalize\n-  #130 = Utf8               ()Ljava/nio/file/Path;\n-  #131 = Utf8               add\n+   #54 = Methodref          #55.#56       // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #55 = Class              #57           // org/apache/commons/io/file/PathUtils\n+   #56 = NameAndType        #58:#59       // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #57 = Utf8               org/apache/commons/io/file/PathUtils\n+   #58 = Utf8               relativize\n+   #59 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #60 = Methodref          #1.#61        // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n+   #61 = NameAndType        #62:#53       // getFileList:()Ljava/util/List;\n+   #62 = Utf8               getFileList\n+   #63 = Class              #64           // java/nio/file/LinkOption\n+   #64 = Utf8               java/nio/file/LinkOption\n+   #65 = Methodref          #66.#67       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #66 = Class              #68           // java/nio/file/Files\n+   #67 = NameAndType        #69:#70       // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #68 = Utf8               java/nio/file/Files\n+   #69 = Utf8               isDirectory\n+   #70 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #71 = InterfaceMethodref #72.#73       // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #72 = Class              #74           // java/nio/file/Path\n+   #73 = NameAndType        #75:#76       // normalize:()Ljava/nio/file/Path;\n+   #74 = Utf8               java/nio/file/Path\n+   #75 = Utf8               normalize\n+   #76 = Utf8               ()Ljava/nio/file/Path;\n+   #77 = InterfaceMethodref #78.#79       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #78 = Class              #80           // java/util/List\n+   #79 = NameAndType        #81:#34       // add:(Ljava/lang/Object;)Z\n+   #80 = Utf8               java/util/List\n+   #81 = Utf8               add\n+   #82 = Methodref          #17.#83       // org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #83 = NameAndType        #84:#85       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #84 = Utf8               visitFile\n+   #85 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #86 = Methodref          #1.#83        // org/apache/commons/io/file/AccumulatorPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #87 = Utf8               Signature\n+   #88 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+   #89 = Utf8               withBigIntegerCounters\n+   #90 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #91 = Utf8               Code\n+   #92 = Utf8               LineNumberTable\n+   #93 = Utf8               withLongCounters\n+   #94 = Utf8               LocalVariableTable\n+   #95 = Utf8               this\n+   #96 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #97 = Utf8               pathCounter\n+   #98 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #99 = Utf8               obj\n+  #100 = Utf8               Ljava/lang/Object;\n+  #101 = Utf8               other\n+  #102 = Utf8               StackMapTable\n+  #103 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+  #104 = Utf8               prime\n+  #105 = Utf8               I\n+  #106 = Utf8               result\n+  #107 = Utf8               relativizeDirectories\n+  #108 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #109 = Utf8               parent\n+  #110 = Utf8               Ljava/nio/file/Path;\n+  #111 = Utf8               sort\n+  #112 = Utf8               Z\n+  #113 = Utf8               comparator\n+  #114 = Utf8               Ljava/util/Comparator;\n+  #115 = Utf8               LocalVariableTypeTable\n+  #116 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+  #117 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #118 = Utf8               relativizeFiles\n+  #119 = Utf8               file\n+  #120 = Utf8               attributes\n+  #121 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #122 = Utf8               Exceptions\n+  #123 = Class              #124          // java/io/IOException\n+  #124 = Utf8               java/io/IOException\n+  #125 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #126 = Utf8               SourceFile\n+  #127 = Utf8               AccumulatorPathVisitor.java\n+  #128 = Utf8               InnerClasses\n+  #129 = Class              #130          // org/apache/commons/io/file/Counters$PathCounters\n+  #130 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #131 = Utf8               PathCounters\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #29                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #88                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #29                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #88                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #3                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 48: 0\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #4                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #3                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #13                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 57: 0\n \n   public org.apache.commons.io.file.AccumulatorPathVisitor(org.apache.commons.io.file.Counters$PathCounters);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #5                  // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         2: invokespecial #16                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          5: aload_0\n-         6: new           #6                  // class java/util/ArrayList\n+         6: new           #19                 // class java/util/ArrayList\n          9: dup\n-        10: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n-        13: putfield      #8                  // Field dirList:Ljava/util/List;\n+        10: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n+        13: putfield      #24                 // Field dirList:Ljava/util/List;\n         16: aload_0\n-        17: new           #6                  // class java/util/ArrayList\n+        17: new           #19                 // class java/util/ArrayList\n         20: dup\n-        21: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n-        24: putfield      #9                  // Field fileList:Ljava/util/List;\n+        21: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n+        24: putfield      #28                 // Field fileList:Ljava/util/List;\n         27: return\n       LineNumberTable:\n         line 70: 0\n         line 60: 5\n         line 62: 16\n         line 71: 27\n       LocalVariableTable:\n@@ -213,37 +213,37 @@\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #10                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #31                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_1\n         18: instanceof    #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         21: ifne          26\n         24: iconst_0\n         25: ireturn\n         26: aload_1\n         27: checkcast     #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         30: astore_2\n         31: aload_0\n-        32: getfield      #8                  // Field dirList:Ljava/util/List;\n+        32: getfield      #24                 // Field dirList:Ljava/util/List;\n         35: aload_2\n-        36: getfield      #8                  // Field dirList:Ljava/util/List;\n-        39: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        36: getfield      #24                 // Field dirList:Ljava/util/List;\n+        39: invokestatic  #35                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         42: ifeq          63\n         45: aload_0\n-        46: getfield      #9                  // Field fileList:Ljava/util/List;\n+        46: getfield      #28                 // Field fileList:Ljava/util/List;\n         49: aload_2\n-        50: getfield      #9                  // Field fileList:Ljava/util/List;\n-        53: invokestatic  #11                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        50: getfield      #28                 // Field fileList:Ljava/util/List;\n+        53: invokestatic  #35                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         56: ifeq          63\n         59: iconst_1\n         60: goto          64\n         63: iconst_0\n         64: ireturn\n       LineNumberTable:\n         line 75: 0\n@@ -271,64 +271,64 @@\n \n   public java.util.List<java.nio.file.Path> getDirList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field dirList:Ljava/util/List;\n+         1: getfield      #24                 // Field dirList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #54                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #103                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> getFileList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field fileList:Ljava/util/List;\n+         1: getfield      #28                 // Field fileList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #54                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #103                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: bipush        31\n          2: istore_1\n          3: aload_0\n-         4: invokespecial #12                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+         4: invokespecial #40                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n          7: istore_2\n          8: bipush        31\n         10: iload_2\n         11: imul\n         12: iconst_2\n-        13: anewarray     #13                 // class java/lang/Object\n+        13: anewarray     #44                 // class java/lang/Object\n         16: dup\n         17: iconst_0\n         18: aload_0\n-        19: getfield      #8                  // Field dirList:Ljava/util/List;\n+        19: getfield      #24                 // Field dirList:Ljava/util/List;\n         22: aastore\n         23: dup\n         24: iconst_1\n         25: aload_0\n-        26: getfield      #9                  // Field fileList:Ljava/util/List;\n+        26: getfield      #28                 // Field fileList:Ljava/util/List;\n         29: aastore\n-        30: invokestatic  #14                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        30: invokestatic  #46                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         33: iadd\n         34: istore_2\n         35: iload_2\n         36: ireturn\n       LineNumberTable:\n         line 108: 0\n         line 109: 3\n@@ -342,81 +342,81 @@\n \n   public java.util.List<java.nio.file.Path> relativizeDirectories(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #15                 // Method getDirList:()Ljava/util/List;\n+         1: invokevirtual #50                 // Method getDirList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #16                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #54                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #71                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #117                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #17                 // Method getFileList:()Ljava/util/List;\n+         1: invokevirtual #60                 // Method getFileList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #16                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #54                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #71                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #117                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n          1: iconst_0\n-         2: anewarray     #18                 // class java/nio/file/LinkOption\n-         5: invokestatic  #19                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #63                 // class java/nio/file/LinkOption\n+         5: invokestatic  #65                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          18\n         11: aload_0\n-        12: getfield      #8                  // Field dirList:Ljava/util/List;\n+        12: getfield      #24                 // Field dirList:Ljava/util/List;\n         15: goto          22\n         18: aload_0\n-        19: getfield      #9                  // Field fileList:Ljava/util/List;\n+        19: getfield      #28                 // Field fileList:Ljava/util/List;\n         22: aload_1\n-        23: invokeinterface #20,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-        28: invokeinterface #21,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        23: invokeinterface #71,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+        28: invokeinterface #77,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         33: pop\n         34: aload_0\n         35: aload_1\n         36: aload_2\n-        37: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        37: invokespecial #82                 // Method org/apache/commons/io/file/CountingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n         40: areturn\n       LineNumberTable:\n         line 142: 0\n         line 143: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      41     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n@@ -432,22 +432,22 @@\n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #23                 // class java/nio/file/Path\n+         2: checkcast     #72                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #24                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #86                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 40: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #38= #37 of #85;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #131= #129 of #4;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
