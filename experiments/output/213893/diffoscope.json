{"diffoscope-json-version": 1, "source1": "first/UnixFTPEntryParser.class", "source2": "second/UnixFTPEntryParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,129 +21,128 @@\n     private static final String REGEX = \"([bcdelfmpSs-])(((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-])))\\\\+?\\\\s*(\\\\d+)\\\\s+(?:(\\\\S+(?:\\\\s\\\\S+)*?)\\\\s+)?(?:(\\\\S+(?:\\\\s\\\\S+)*)\\\\s+)?(\\\\d+(?:,\\\\s*\\\\d+)?)\\\\s+((?:\\\\d+[-/]\\\\d+[-/]\\\\d+)|(?:\\\\S{3}\\\\s+\\\\d{1,2})|(?:\\\\d{1,2}\\\\s+\\\\S{3})|(?:\\\\d{1,2}\\u6708\\\\s+\\\\d{1,2}\\u65e5))\\\\s+((?:\\\\d+(?::\\\\d+)?)|(?:\\\\d{4}\\u5e74))\\\\s(.*)\";\n     final boolean trimLeadingSpaces;\n     \n     public UnixFTPEntryParser() {\n         this(null);\n     }\n     \n-    public UnixFTPEntryParser(final FTPClientConfig config) {\n-        this(config, false);\n+    public UnixFTPEntryParser(final FTPClientConfig ftpClientConfig) {\n+        this(ftpClientConfig, false);\n     }\n     \n-    public UnixFTPEntryParser(final FTPClientConfig config, final boolean trimLeadingSpaces) {\n+    public UnixFTPEntryParser(final FTPClientConfig ftpClientConfig, final boolean trimLeadingSpaces) {\n         super(\"([bcdelfmpSs-])(((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-]))((r|-)(w|-)([xsStTL-])))\\\\+?\\\\s*(\\\\d+)\\\\s+(?:(\\\\S+(?:\\\\s\\\\S+)*?)\\\\s+)?(?:(\\\\S+(?:\\\\s\\\\S+)*)\\\\s+)?(\\\\d+(?:,\\\\s*\\\\d+)?)\\\\s+((?:\\\\d+[-/]\\\\d+[-/]\\\\d+)|(?:\\\\S{3}\\\\s+\\\\d{1,2})|(?:\\\\d{1,2}\\\\s+\\\\S{3})|(?:\\\\d{1,2}\\u6708\\\\s+\\\\d{1,2}\\u65e5))\\\\s+((?:\\\\d+(?::\\\\d+)?)|(?:\\\\d{4}\\u5e74))\\\\s(.*)\");\n-        this.configure(config);\n+        this.configure(ftpClientConfig);\n         this.trimLeadingSpaces = trimLeadingSpaces;\n     }\n     \n-    public List<String> preParse(final List<String> original) {\n-        final ListIterator<String> iter = original.listIterator();\n-        while (iter.hasNext()) {\n-            final String entry = (String)iter.next();\n-            if (entry.matches(\"^total \\\\d+$\")) {\n-                iter.remove();\n+    public List<String> preParse(final List<String> list) {\n+        final ListIterator<String> listIterator = list.listIterator();\n+        while (listIterator.hasNext()) {\n+            if (((String)listIterator.next()).matches(\"^total \\\\d+$\")) {\n+                listIterator.remove();\n             }\n         }\n-        return original;\n+        return list;\n     }\n     \n-    public FTPFile parseFTPEntry(final String entry) {\n-        final FTPFile file = new FTPFile();\n-        file.setRawListing(entry);\n-        boolean isDevice = false;\n-        if (this.matches(entry)) {\n-            final String typeStr = this.group(1);\n-            final String hardLinkCount = this.group(15);\n-            final String usr = this.group(16);\n-            final String grp = this.group(17);\n-            final String filesize = this.group(18);\n-            final String datestr = this.group(19) + \" \" + this.group(20);\n-            String name = this.group(21);\n+    public FTPFile parseFTPEntry(final String rawListing) {\n+        final FTPFile ftpFile = new FTPFile();\n+        ftpFile.setRawListing(rawListing);\n+        boolean b = false;\n+        if (this.matches(rawListing)) {\n+            final String group = this.group(1);\n+            final String group2 = this.group(15);\n+            final String group3 = this.group(16);\n+            final String group4 = this.group(17);\n+            final String group5 = this.group(18);\n+            final String string = this.group(19) + \" \" + this.group(20);\n+            String s = this.group(21);\n             if (this.trimLeadingSpaces) {\n-                name = name.replaceFirst(\"^\\\\s+\", \"\");\n+                s = s.replaceFirst(\"^\\\\s+\", \"\");\n             }\n             try {\n                 if (this.group(19).contains(\"\\u6708\")) {\n-                    final FTPTimestampParserImpl jaParser = new FTPTimestampParserImpl();\n-                    jaParser.configure(new FTPClientConfig(\"UNIX\", \"M'\\u6708' d'\\u65e5' yyyy'\\u5e74'\", \"M'\\u6708' d'\\u65e5' HH:mm\"));\n-                    file.setTimestamp(jaParser.parseTimestamp(datestr));\n+                    final FTPTimestampParserImpl ftpTimestampParserImpl = new FTPTimestampParserImpl();\n+                    ftpTimestampParserImpl.configure(new FTPClientConfig(\"UNIX\", \"M'\\u6708' d'\\u65e5' yyyy'\\u5e74'\", \"M'\\u6708' d'\\u65e5' HH:mm\"));\n+                    ftpFile.setTimestamp(ftpTimestampParserImpl.parseTimestamp(string));\n                 }\n                 else {\n-                    file.setTimestamp(super.parseTimestamp(datestr));\n+                    ftpFile.setTimestamp(super.parseTimestamp(string));\n                 }\n             }\n             catch (final ParseException ex) {}\n             int type = 0;\n-            switch (typeStr.charAt(0)) {\n+            switch (group.charAt(0)) {\n                 case 'd': {\n                     type = 1;\n                     break;\n                 }\n                 case 'e': {\n                     type = 2;\n                     break;\n                 }\n                 case 'l': {\n                     type = 2;\n                     break;\n                 }\n                 case 'b':\n                 case 'c': {\n-                    isDevice = true;\n+                    b = true;\n                     type = 0;\n                     break;\n                 }\n                 case '-':\n                 case 'f': {\n                     type = 0;\n                     break;\n                 }\n                 default: {\n                     type = 3;\n                     break;\n                 }\n             }\n-            file.setType(type);\n-            for (int g = 4, access = 0; access < 3; ++access, g += 4) {\n-                file.setPermission(access, 0, !this.group(g).equals(\"-\"));\n-                file.setPermission(access, 1, !this.group(g + 1).equals(\"-\"));\n-                final String execPerm = this.group(g + 2);\n-                if (!execPerm.equals(\"-\") && !Character.isUpperCase(execPerm.charAt(0))) {\n-                    file.setPermission(access, 2, true);\n+            ftpFile.setType(type);\n+            for (int n = 4, i = 0; i < 3; ++i, n += 4) {\n+                ftpFile.setPermission(i, 0, !this.group(n).equals(\"-\"));\n+                ftpFile.setPermission(i, 1, !this.group(n + 1).equals(\"-\"));\n+                final String group6 = this.group(n + 2);\n+                if (!group6.equals(\"-\") && !Character.isUpperCase(group6.charAt(0))) {\n+                    ftpFile.setPermission(i, 2, true);\n                 }\n                 else {\n-                    file.setPermission(access, 2, false);\n+                    ftpFile.setPermission(i, 2, false);\n                 }\n             }\n-            if (!isDevice) {\n+            if (!b) {\n                 try {\n-                    file.setHardLinkCount(Integer.parseInt(hardLinkCount));\n+                    ftpFile.setHardLinkCount(Integer.parseInt(group2));\n                 }\n                 catch (final NumberFormatException ex2) {}\n             }\n-            file.setUser(usr);\n-            file.setGroup(grp);\n+            ftpFile.setUser(group3);\n+            ftpFile.setGroup(group4);\n             try {\n-                file.setSize(Long.parseLong(filesize));\n+                ftpFile.setSize(Long.parseLong(group5));\n             }\n             catch (final NumberFormatException ex3) {}\n             if (type == 2) {\n-                final int end = name.indexOf(\" -> \");\n-                if (end == -1) {\n-                    file.setName(name);\n+                final int index = s.indexOf(\" -> \");\n+                if (index == -1) {\n+                    ftpFile.setName(s);\n                 }\n                 else {\n-                    file.setName(name.substring(0, end));\n-                    file.setLink(name.substring(end + 4));\n+                    ftpFile.setName(s.substring(0, index));\n+                    ftpFile.setLink(s.substring(index + 4));\n                 }\n             }\n             else {\n-                file.setName(name);\n+                ftpFile.setName(s);\n             }\n-            return file;\n+            return ftpFile;\n         }\n         return null;\n     }\n     \n     protected FTPClientConfig getDefaultConfiguration() {\n         return new FTPClientConfig(\"UNIX\", \"MMM d yyyy\", \"MMM d HH:mm\");\n     }\n"}]}
