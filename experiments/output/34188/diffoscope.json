{"diffoscope-json-version": 1, "source1": "first/FailablePredicate.class", "source2": "second/FailablePredicate.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,116 +1,116 @@\n-  SHA-256 checksum bdb622bbe3fa4e47fc1d1c4ac392a5effcb5b5ad14def298b106c07ae47fe83c\n+  SHA-256 checksum 4526ab87a8a1d42c32dd10871f71491fd3e19ec317713bf3c332c9d66a78183b\n   Compiled from \"FailablePredicate.java\"\n public interface org.apache.commons.lang3.function.FailablePredicate<T extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/lang3/function/FailablePredicate\n-  super_class: #11                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/function/FailablePredicate\n+  super_class: #31                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 12, attributes: 5\n Constant pool:\n-    #1 = Fieldref           #10.#55       // org/apache/commons/lang3/function/FailablePredicate.FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #2 = Fieldref           #10.#56       // org/apache/commons/lang3/function/FailablePredicate.TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #3 = Methodref          #57.#58       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #4 = InvokeDynamic      #0:#63        // #0:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #5 = InvokeDynamic      #1:#65        // #1:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #6 = InvokeDynamic      #2:#63        // #2:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #7 = InterfaceMethodref #10.#67       // org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n-    #8 = InvokeDynamic      #3:#69        // #3:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n-    #9 = InvokeDynamic      #4:#69        // #4:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #10 = Class              #71           // org/apache/commons/lang3/function/FailablePredicate\n-   #11 = Class              #72           // java/lang/Object\n-   #12 = Utf8               FALSE\n-   #13 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #14 = Utf8               TRUE\n-   #15 = Utf8               falsePredicate\n-   #16 = Utf8               ()Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #17 = Utf8               Code\n-   #18 = Utf8               LineNumberTable\n-   #19 = Utf8               Signature\n-   #20 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-   #21 = Utf8               truePredicate\n-   #22 = Utf8               and\n-   #23 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #24 = Utf8               LocalVariableTable\n-   #25 = Utf8               this\n-   #26 = Utf8               other\n-   #27 = Utf8               LocalVariableTypeTable\n-   #28 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-   #29 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;\n-   #30 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-   #31 = Utf8               negate\n-   #32 = Utf8               ()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-   #33 = Utf8               or\n-   #34 = Utf8               test\n-   #35 = Utf8               (Ljava/lang/Object;)Z\n-   #36 = Utf8               Exceptions\n-   #37 = Class              #73           // java/lang/Throwable\n-   #38 = Utf8               (TT;)Z^TE;\n-   #39 = Utf8               lambda$or$4\n-   #40 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #41 = Utf8               t\n-   #42 = Utf8               Ljava/lang/Object;\n-   #43 = Utf8               StackMapTable\n-   #44 = Utf8               lambda$negate$3\n-   #45 = Utf8               lambda$and$2\n-   #46 = Utf8               lambda$static$1\n-   #47 = Utf8               lambda$static$0\n-   #48 = Utf8               <clinit>\n-   #49 = Utf8               ()V\n-   #50 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-   #51 = Utf8               SourceFile\n-   #52 = Utf8               FailablePredicate.java\n-   #53 = Utf8               RuntimeVisibleAnnotations\n-   #54 = Utf8               Ljava/lang/FunctionalInterface;\n-   #55 = NameAndType        #12:#13       // FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #56 = NameAndType        #14:#13       // TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #57 = Class              #74           // java/util/Objects\n-   #58 = NameAndType        #75:#76       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #59 = Utf8               BootstrapMethods\n-   #60 = MethodHandle       6:#77         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #61 = MethodType         #35           //  (Ljava/lang/Object;)Z\n-   #62 = MethodHandle       7:#78         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #63 = NameAndType        #34:#79       // test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #64 = MethodHandle       7:#80         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n-   #65 = NameAndType        #34:#23       // test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #66 = MethodHandle       7:#81         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #67 = NameAndType        #34:#35       // test:(Ljava/lang/Object;)Z\n-   #68 = MethodHandle       6:#82         // REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n-   #69 = NameAndType        #34:#16       // test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #70 = MethodHandle       6:#83         // REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n-   #71 = Utf8               org/apache/commons/lang3/function/FailablePredicate\n-   #72 = Utf8               java/lang/Object\n-   #73 = Utf8               java/lang/Throwable\n-   #74 = Utf8               java/util/Objects\n-   #75 = Utf8               requireNonNull\n-   #76 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #77 = Methodref          #84.#85       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #78 = InterfaceMethodref #10.#86       // org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #79 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n-   #80 = InterfaceMethodref #10.#87       // org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n-   #81 = InterfaceMethodref #10.#88       // org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #82 = InterfaceMethodref #10.#89       // org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n-   #83 = InterfaceMethodref #10.#90       // org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n-   #84 = Class              #91           // java/lang/invoke/LambdaMetafactory\n-   #85 = NameAndType        #92:#96       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #86 = NameAndType        #45:#40       // lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #87 = NameAndType        #44:#35       // lambda$negate$3:(Ljava/lang/Object;)Z\n-   #88 = NameAndType        #39:#40       // lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-   #89 = NameAndType        #47:#35       // lambda$static$0:(Ljava/lang/Object;)Z\n-   #90 = NameAndType        #46:#35       // lambda$static$1:(Ljava/lang/Object;)Z\n-   #91 = Utf8               java/lang/invoke/LambdaMetafactory\n-   #92 = Utf8               metafactory\n-   #93 = Class              #98           // java/lang/invoke/MethodHandles$Lookup\n-   #94 = Utf8               Lookup\n-   #95 = Utf8               InnerClasses\n-   #96 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #97 = Class              #99           // java/lang/invoke/MethodHandles\n-   #98 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-   #99 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Fieldref           #2.#3         // org/apache/commons/lang3/function/FailablePredicate.FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+    #2 = Class              #4            // org/apache/commons/lang3/function/FailablePredicate\n+    #3 = NameAndType        #5:#6         // FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+    #4 = Utf8               org/apache/commons/lang3/function/FailablePredicate\n+    #5 = Utf8               FALSE\n+    #6 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate;\n+    #7 = Fieldref           #2.#8         // org/apache/commons/lang3/function/FailablePredicate.TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+    #8 = NameAndType        #9:#6         // TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+    #9 = Utf8               TRUE\n+   #10 = Methodref          #11.#12       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #11 = Class              #13           // java/util/Objects\n+   #12 = NameAndType        #14:#15       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #13 = Utf8               java/util/Objects\n+   #14 = Utf8               requireNonNull\n+   #15 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #16 = InvokeDynamic      #0:#17        // #0:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #17 = NameAndType        #18:#19       // test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #18 = Utf8               test\n+   #19 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #20 = InvokeDynamic      #1:#21        // #1:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #21 = NameAndType        #18:#22       // test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #22 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #23 = InvokeDynamic      #2:#17        // #2:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #24 = InterfaceMethodref #2.#25        // org/apache/commons/lang3/function/FailablePredicate.test:(Ljava/lang/Object;)Z\n+   #25 = NameAndType        #18:#26       // test:(Ljava/lang/Object;)Z\n+   #26 = Utf8               (Ljava/lang/Object;)Z\n+   #27 = InvokeDynamic      #3:#28        // #3:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #28 = NameAndType        #18:#29       // test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #29 = Utf8               ()Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #30 = InvokeDynamic      #4:#28        // #4:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n+   #31 = Class              #32           // java/lang/Object\n+   #32 = Utf8               java/lang/Object\n+   #33 = Utf8               falsePredicate\n+   #34 = Utf8               Code\n+   #35 = Utf8               LineNumberTable\n+   #36 = Utf8               Signature\n+   #37 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+   #38 = Utf8               truePredicate\n+   #39 = Utf8               and\n+   #40 = Utf8               LocalVariableTable\n+   #41 = Utf8               this\n+   #42 = Utf8               other\n+   #43 = Utf8               LocalVariableTypeTable\n+   #44 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+   #45 = Utf8               Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;\n+   #46 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+   #47 = Utf8               negate\n+   #48 = Utf8               ()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+   #49 = Utf8               or\n+   #50 = Utf8               Exceptions\n+   #51 = Class              #52           // java/lang/Throwable\n+   #52 = Utf8               java/lang/Throwable\n+   #53 = Utf8               (TT;)Z^TE;\n+   #54 = Utf8               lambda$or$4\n+   #55 = Utf8               (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #56 = Utf8               t\n+   #57 = Utf8               Ljava/lang/Object;\n+   #58 = Utf8               StackMapTable\n+   #59 = Utf8               lambda$negate$3\n+   #60 = Utf8               lambda$and$2\n+   #61 = Utf8               lambda$static$1\n+   #62 = Utf8               lambda$static$0\n+   #63 = Utf8               <clinit>\n+   #64 = Utf8               ()V\n+   #65 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+   #66 = Utf8               SourceFile\n+   #67 = Utf8               FailablePredicate.java\n+   #68 = Utf8               RuntimeVisibleAnnotations\n+   #69 = Utf8               Ljava/lang/FunctionalInterface;\n+   #70 = Utf8               BootstrapMethods\n+   #71 = MethodHandle       6:#72         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #72 = Methodref          #73.#74       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #73 = Class              #75           // java/lang/invoke/LambdaMetafactory\n+   #74 = NameAndType        #76:#77       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #75 = Utf8               java/lang/invoke/LambdaMetafactory\n+   #76 = Utf8               metafactory\n+   #77 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #78 = MethodType         #26           //  (Ljava/lang/Object;)Z\n+   #79 = MethodHandle       7:#80         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #80 = InterfaceMethodref #2.#81        // org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #81 = NameAndType        #60:#55       // lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #82 = MethodHandle       7:#83         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n+   #83 = InterfaceMethodref #2.#84        // org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n+   #84 = NameAndType        #59:#26       // lambda$negate$3:(Ljava/lang/Object;)Z\n+   #85 = MethodHandle       7:#86         // REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #86 = InterfaceMethodref #2.#87        // org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #87 = NameAndType        #54:#55       // lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+   #88 = MethodHandle       6:#89         // REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n+   #89 = InterfaceMethodref #2.#90        // org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n+   #90 = NameAndType        #62:#26       // lambda$static$0:(Ljava/lang/Object;)Z\n+   #91 = MethodHandle       6:#92         // REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n+   #92 = InterfaceMethodref #2.#93        // org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n+   #93 = NameAndType        #61:#26       // lambda$static$1:(Ljava/lang/Object;)Z\n+   #94 = Utf8               InnerClasses\n+   #95 = Class              #96           // java/lang/invoke/MethodHandles$Lookup\n+   #96 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+   #97 = Class              #98           // java/lang/invoke/MethodHandles\n+   #98 = Utf8               java/lang/invoke/MethodHandles\n+   #99 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailablePredicate FALSE;\n     descriptor: Lorg/apache/commons/lang3/function/FailablePredicate;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.lang3.function.FailablePredicate TRUE;\n     descriptor: Lorg/apache/commons/lang3/function/FailablePredicate;\n@@ -121,114 +121,114 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n          3: areturn\n       LineNumberTable:\n         line 49: 0\n-    Signature: #20                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+    Signature: #37                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailablePredicate<T, E> truePredicate();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailablePredicate;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+         0: getstatic     #7                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n          3: areturn\n       LineNumberTable:\n         line 60: 0\n-    Signature: #20                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+    Signature: #37                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n \n   public default org.apache.commons.lang3.function.FailablePredicate<T, E> and(org.apache.commons.lang3.function.FailablePredicate<? super T, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+         7: invokedynamic #16,  0             // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n         12: areturn\n       LineNumberTable:\n         line 71: 0\n         line 72: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailablePredicate;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;\n-    Signature: #30                          // (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+    Signature: #46                          // (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n \n   public default org.apache.commons.lang3.function.FailablePredicate<T, E> negate();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailablePredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #5,  0              // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+         1: invokedynamic #20,  0             // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n          6: areturn\n       LineNumberTable:\n         line 81: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n-    Signature: #32                          // ()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+    Signature: #48                          // ()Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n \n   public default org.apache.commons.lang3.function.FailablePredicate<T, E> or(org.apache.commons.lang3.function.FailablePredicate<? super T, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #6,  0              // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n+         7: invokedynamic #23,  0             // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailablePredicate;Lorg/apache/commons/lang3/function/FailablePredicate;)Lorg/apache/commons/lang3/function/FailablePredicate;\n         12: areturn\n       LineNumberTable:\n         line 92: 0\n         line 93: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailablePredicate;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailablePredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;\n-    Signature: #30                          // (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n+    Signature: #46                          // (Lorg/apache/commons/lang3/function/FailablePredicate<-TT;TE;>;)Lorg/apache/commons/lang3/function/FailablePredicate<TT;TE;>;\n \n   public abstract boolean test(T) throws E;\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #38                          // (TT;)Z^TE;\n+    Signature: #53                          // (TT;)Z^TE;\n \n   private boolean lambda$or$4(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(Ljava/lang/Object;)Z\n          7: ifne          20\n         10: aload_1\n         11: aload_2\n-        12: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z\n+        12: invokeinterface #24,  2           // InterfaceMethod test:(Ljava/lang/Object;)Z\n         17: ifeq          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: ireturn\n       LineNumberTable:\n         line 93: 0\n@@ -251,15 +251,15 @@\n   private boolean lambda$negate$3(java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(Ljava/lang/Object;)Z\n          7: ifne          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 81: 0\n@@ -280,19 +280,19 @@\n   private boolean lambda$and$2(org.apache.commons.lang3.function.FailablePredicate, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(Ljava/lang/Object;)Z\n          7: ifeq          24\n         10: aload_1\n         11: aload_2\n-        12: invokeinterface #7,  2            // InterfaceMethod test:(Ljava/lang/Object;)Z\n+        12: invokeinterface #24,  2           // InterfaceMethod test:(Ljava/lang/Object;)Z\n         17: ifeq          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: ireturn\n       LineNumberTable:\n         line 72: 0\n@@ -342,49 +342,49 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #8,  0              // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n+         0: invokedynamic #27,  0             // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n          5: putstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailablePredicate;\n-         8: invokedynamic #9,  0              // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n-        13: putstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n+         8: invokedynamic #30,  0             // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailablePredicate;\n+        13: putstatic     #7                  // Field TRUE:Lorg/apache/commons/lang3/function/FailablePredicate;\n         16: return\n       LineNumberTable:\n         line 35: 0\n         line 39: 8\n }\n-Signature: #50                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #65                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailablePredicate.java\"\n RuntimeVisibleAnnotations:\n-  0: #54()\n+  0: #69()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #94= #93 of #97;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 (Ljava/lang/Object;)Z\n-      #62 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-      #61 (Ljava/lang/Object;)Z\n-  1: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #78 (Ljava/lang/Object;)Z\n+      #79 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+  1: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 (Ljava/lang/Object;)Z\n-      #64 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n-      #61 (Ljava/lang/Object;)Z\n-  2: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #78 (Ljava/lang/Object;)Z\n+      #82 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$negate$3:(Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+  2: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 (Ljava/lang/Object;)Z\n-      #66 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n-      #61 (Ljava/lang/Object;)Z\n-  3: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #78 (Ljava/lang/Object;)Z\n+      #85 REF_invokeSpecial org/apache/commons/lang3/function/FailablePredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailablePredicate;Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+  3: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 (Ljava/lang/Object;)Z\n-      #68 REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n-      #61 (Ljava/lang/Object;)Z\n-  4: #60 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #78 (Ljava/lang/Object;)Z\n+      #88 REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$0:(Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+  4: #71 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #61 (Ljava/lang/Object;)Z\n-      #70 REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n-      #61 (Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+      #91 REF_invokeStatic org/apache/commons/lang3/function/FailablePredicate.lambda$static$1:(Ljava/lang/Object;)Z\n+      #78 (Ljava/lang/Object;)Z\n+InnerClasses:\n+  public static final #99= #95 of #97;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
