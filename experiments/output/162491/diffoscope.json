{"diffoscope-json-version": 1, "source1": "first/AnnotationElementValue.class", "source2": "second/AnnotationElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,96 +1,94 @@\n-  SHA-256 checksum 57d798f14520447618e3e4ef4149d5d67c804c001b7665f865d26677b89f130c\n+  SHA-256 checksum 18a16765bd95df76d007fc1e1907593d8d1e11cef06f76de067461b3f72cd5be\n   Compiled from \"AnnotationElementValue.java\"\n public class org.apache.bcel.classfile.AnnotationElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #17                         // org/apache/bcel/classfile/AnnotationElementValue\n   super_class: #2                         // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 1, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#48         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #2 = Class              #49            // org/apache/bcel/classfile/ElementValue\n-   #3 = Class              #50            // java/lang/IllegalArgumentException\n-   #4 = Class              #51            // java/lang/StringBuilder\n-   #5 = Methodref          #4.#52         // java/lang/StringBuilder.\"<init>\":()V\n-   #6 = String             #53            // Only element values of type annotation can be built with this ctor - type specified:\n-   #7 = Methodref          #4.#54         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #8 = Methodref          #4.#55         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #9 = Methodref          #4.#56         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #3.#57         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Fieldref           #17.#58        // org/apache/bcel/classfile/AnnotationElementValue.annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #12 = Methodref          #2.#59         // org/apache/bcel/classfile/ElementValue.getType:()I\n-  #13 = Methodref          #60.#61        // java/io/DataOutputStream.writeByte:(I)V\n-  #14 = Methodref          #62.#63        // org/apache/bcel/classfile/AnnotationEntry.dump:(Ljava/io/DataOutputStream;)V\n-  #15 = Methodref          #62.#56        // org/apache/bcel/classfile/AnnotationEntry.toString:()Ljava/lang/String;\n-  #16 = Methodref          #17.#64        // org/apache/bcel/classfile/AnnotationElementValue.stringifyValue:()Ljava/lang/String;\n-  #17 = Class              #65            // org/apache/bcel/classfile/AnnotationElementValue\n+   #1 = Methodref          #2.#47         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #2 = Class              #48            // org/apache/bcel/classfile/ElementValue\n+   #3 = Class              #49            // java/lang/IllegalArgumentException\n+   #4 = Class              #50            // java/lang/StringBuilder\n+   #5 = Methodref          #4.#51         // java/lang/StringBuilder.\"<init>\":()V\n+   #6 = String             #52            // Only element values of type annotation can be built with this ctor - type specified:\n+   #7 = Methodref          #4.#53         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #8 = Methodref          #4.#54         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #9 = Methodref          #4.#55         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #10 = Methodref          #3.#56         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = Fieldref           #17.#57        // org/apache/bcel/classfile/AnnotationElementValue.annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #12 = Methodref          #2.#58         // org/apache/bcel/classfile/ElementValue.getType:()I\n+  #13 = Methodref          #59.#60        // java/io/DataOutputStream.writeByte:(I)V\n+  #14 = Methodref          #32.#61        // org/apache/bcel/classfile/AnnotationEntry.dump:(Ljava/io/DataOutputStream;)V\n+  #15 = Methodref          #32.#55        // org/apache/bcel/classfile/AnnotationEntry.toString:()Ljava/lang/String;\n+  #16 = Methodref          #17.#62        // org/apache/bcel/classfile/AnnotationElementValue.stringifyValue:()Ljava/lang/String;\n+  #17 = Class              #63            // org/apache/bcel/classfile/AnnotationElementValue\n   #18 = Utf8               annotationEntry\n   #19 = Utf8               Lorg/apache/bcel/classfile/AnnotationEntry;\n   #20 = Utf8               <init>\n   #21 = Utf8               (ILorg/apache/bcel/classfile/AnnotationEntry;Lorg/apache/bcel/classfile/ConstantPool;)V\n   #22 = Utf8               Code\n   #23 = Utf8               LineNumberTable\n   #24 = Utf8               LocalVariableTable\n   #25 = Utf8               this\n   #26 = Utf8               Lorg/apache/bcel/classfile/AnnotationElementValue;\n   #27 = Utf8               type\n   #28 = Utf8               I\n   #29 = Utf8               cpool\n   #30 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n   #31 = Utf8               StackMapTable\n-  #32 = Class              #65            // org/apache/bcel/classfile/AnnotationElementValue\n-  #33 = Class              #66            // org/apache/bcel/classfile/AnnotationEntry\n-  #34 = Class              #67            // org/apache/bcel/classfile/ConstantPool\n-  #35 = Utf8               dump\n-  #36 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #37 = Utf8               dos\n-  #38 = Utf8               Ljava/io/DataOutputStream;\n-  #39 = Utf8               Exceptions\n-  #40 = Class              #68            // java/io/IOException\n-  #41 = Utf8               getAnnotationEntry\n-  #42 = Utf8               ()Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #43 = Utf8               stringifyValue\n-  #44 = Utf8               ()Ljava/lang/String;\n-  #45 = Utf8               toString\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               AnnotationElementValue.java\n-  #48 = NameAndType        #20:#69        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #49 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #50 = Utf8               java/lang/IllegalArgumentException\n-  #51 = Utf8               java/lang/StringBuilder\n-  #52 = NameAndType        #20:#70        // \"<init>\":()V\n-  #53 = Utf8               Only element values of type annotation can be built with this ctor - type specified:\n-  #54 = NameAndType        #71:#72        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #55 = NameAndType        #71:#73        // append:(I)Ljava/lang/StringBuilder;\n-  #56 = NameAndType        #45:#44        // toString:()Ljava/lang/String;\n-  #57 = NameAndType        #20:#74        // \"<init>\":(Ljava/lang/String;)V\n-  #58 = NameAndType        #18:#19        // annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #59 = NameAndType        #75:#76        // getType:()I\n-  #60 = Class              #77            // java/io/DataOutputStream\n-  #61 = NameAndType        #78:#79        // writeByte:(I)V\n-  #62 = Class              #66            // org/apache/bcel/classfile/AnnotationEntry\n-  #63 = NameAndType        #35:#36        // dump:(Ljava/io/DataOutputStream;)V\n-  #64 = NameAndType        #43:#44        // stringifyValue:()Ljava/lang/String;\n-  #65 = Utf8               org/apache/bcel/classfile/AnnotationElementValue\n-  #66 = Utf8               org/apache/bcel/classfile/AnnotationEntry\n-  #67 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #68 = Utf8               java/io/IOException\n-  #69 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #70 = Utf8               ()V\n-  #71 = Utf8               append\n-  #72 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #73 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #74 = Utf8               (Ljava/lang/String;)V\n-  #75 = Utf8               getType\n-  #76 = Utf8               ()I\n-  #77 = Utf8               java/io/DataOutputStream\n-  #78 = Utf8               writeByte\n-  #79 = Utf8               (I)V\n+  #32 = Class              #64            // org/apache/bcel/classfile/AnnotationEntry\n+  #33 = Class              #65            // org/apache/bcel/classfile/ConstantPool\n+  #34 = Utf8               dump\n+  #35 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #36 = Utf8               dos\n+  #37 = Utf8               Ljava/io/DataOutputStream;\n+  #38 = Utf8               Exceptions\n+  #39 = Class              #66            // java/io/IOException\n+  #40 = Utf8               getAnnotationEntry\n+  #41 = Utf8               ()Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #42 = Utf8               stringifyValue\n+  #43 = Utf8               ()Ljava/lang/String;\n+  #44 = Utf8               toString\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               AnnotationElementValue.java\n+  #47 = NameAndType        #20:#67        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #48 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #49 = Utf8               java/lang/IllegalArgumentException\n+  #50 = Utf8               java/lang/StringBuilder\n+  #51 = NameAndType        #20:#68        // \"<init>\":()V\n+  #52 = Utf8               Only element values of type annotation can be built with this ctor - type specified:\n+  #53 = NameAndType        #69:#70        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #54 = NameAndType        #69:#71        // append:(I)Ljava/lang/StringBuilder;\n+  #55 = NameAndType        #44:#43        // toString:()Ljava/lang/String;\n+  #56 = NameAndType        #20:#72        // \"<init>\":(Ljava/lang/String;)V\n+  #57 = NameAndType        #18:#19        // annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #58 = NameAndType        #73:#74        // getType:()I\n+  #59 = Class              #75            // java/io/DataOutputStream\n+  #60 = NameAndType        #76:#77        // writeByte:(I)V\n+  #61 = NameAndType        #34:#35        // dump:(Ljava/io/DataOutputStream;)V\n+  #62 = NameAndType        #42:#43        // stringifyValue:()Ljava/lang/String;\n+  #63 = Utf8               org/apache/bcel/classfile/AnnotationElementValue\n+  #64 = Utf8               org/apache/bcel/classfile/AnnotationEntry\n+  #65 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #66 = Utf8               java/io/IOException\n+  #67 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #68 = Utf8               ()V\n+  #69 = Utf8               append\n+  #70 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #71 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #72 = Utf8               (Ljava/lang/String;)V\n+  #73 = Utf8               getType\n+  #74 = Utf8               ()I\n+  #75 = Utf8               java/io/DataOutputStream\n+  #76 = Utf8               writeByte\n+  #77 = Utf8               (I)V\n {\n   private final org.apache.bcel.classfile.AnnotationEntry annotationEntry;\n     descriptor: Lorg/apache/bcel/classfile/AnnotationEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.classfile.AnnotationElementValue(int, org.apache.bcel.classfile.AnnotationEntry, org.apache.bcel.classfile.ConstantPool);\n     descriptor: (ILorg/apache/bcel/classfile/AnnotationEntry;Lorg/apache/bcel/classfile/ConstantPool;)V\n"}]}
