{"diffoscope-json-version": 1, "source1": "first/TreeTableModelAdapter.class", "source2": "second/TreeTableModelAdapter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,11 +1,10 @@\n \n package com.puppycrawl.tools.checkstyle.gui;\n \n-import javax.swing.tree.TreePath;\n import javax.swing.event.TreeModelListener;\n import javax.swing.event.TreeExpansionListener;\n import javax.swing.JTree;\n import javax.swing.table.AbstractTableModel;\n \n public class TreeTableModelAdapter extends AbstractTableModel\n {\n@@ -22,36 +21,35 @@\n     \n     @Override\n     public int getColumnCount() {\n         return this.treeTableModel.getColumnCount();\n     }\n     \n     @Override\n-    public String getColumnName(final int column) {\n-        return this.treeTableModel.getColumnName(column);\n+    public String getColumnName(final int n) {\n+        return this.treeTableModel.getColumnName(n);\n     }\n     \n     @Override\n-    public Class<?> getColumnClass(final int column) {\n-        return this.treeTableModel.getColumnClass(column);\n+    public Class<?> getColumnClass(final int n) {\n+        return this.treeTableModel.getColumnClass(n);\n     }\n     \n     @Override\n     public int getRowCount() {\n         return this.tree.getRowCount();\n     }\n     \n     @Override\n-    public Object getValueAt(final int row, final int column) {\n-        return this.treeTableModel.getValueAt(this.nodeForRow(row), column);\n+    public Object getValueAt(final int n, final int n2) {\n+        return this.treeTableModel.getValueAt(this.nodeForRow(n), n2);\n     }\n     \n     @Override\n-    public boolean isCellEditable(final int row, final int column) {\n-        return this.treeTableModel.isCellEditable(column);\n+    public boolean isCellEditable(final int n, final int n2) {\n+        return this.treeTableModel.isCellEditable(n2);\n     }\n     \n     private Object nodeForRow(final int row) {\n-        final TreePath treePath = this.tree.getPathForRow(row);\n-        return treePath.getLastPathComponent();\n+        return this.tree.getPathForRow(row).getLastPathComponent();\n     }\n }\n"}]}
