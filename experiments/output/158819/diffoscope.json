{"diffoscope-json-version": 1, "source1": "first/ZipUtil.class", "source2": "second/ZipUtil.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum a014ea3b972b05f4d70d0dcc4c18ce0f58c196a9109e3b51b789d98625e78ec0\n+  SHA-256 checksum 68ab351d2164cf38527c82f47d147b7f04ae3a6096929170fc4b161fdc2c16a4\n   Compiled from \"ZipUtil.java\"\n public abstract class org.apache.commons.compress.archivers.zip.ZipUtil\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipUtil\n   super_class: #3                         // java/lang/Object\n@@ -1026,66 +1026,66 @@\n         frame_type = 250 /* chop */\n           offset_delta = 27\n \n   private static java.lang.String getUnicodeStringIfOriginalMatches(org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField, byte[]);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;[B)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n-      stack=4, locals=5, args_size=2\n+      stack=4, locals=6, args_size=2\n          0: aload_0\n-         1: ifnull        45\n+         1: ifnull        46\n          4: new           #248                // class java/util/zip/CRC32\n          7: dup\n          8: invokespecial #250                // Method java/util/zip/CRC32.\"<init>\":()V\n         11: astore_2\n         12: aload_2\n         13: aload_1\n         14: invokevirtual #251                // Method java/util/zip/CRC32.update:([B)V\n         17: aload_2\n         18: invokevirtual #254                // Method java/util/zip/CRC32.getValue:()J\n         21: lstore_3\n         22: lload_3\n         23: aload_0\n         24: invokevirtual #255                // Method org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getNameCRC32:()J\n         27: lcmp\n-        28: ifne          45\n+        28: ifne          46\n         31: getstatic     #260                // Field org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         34: aload_0\n         35: invokevirtual #266                // Method org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getUnicodeName:()[B\n         38: invokeinterface #270,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n         43: areturn\n-        44: pop\n-        45: aconst_null\n-        46: areturn\n+        44: astore        5\n+        46: aconst_null\n+        47: areturn\n       Exception table:\n          from    to  target type\n             31    43    44   Class java/io/IOException\n       LineNumberTable:\n         line 270: 0\n         line 271: 4\n         line 272: 12\n         line 273: 17\n         line 275: 22\n         line 278: 31\n         line 277: 43\n         line 279: 44\n-        line 286: 45\n+        line 286: 46\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      47     0     f   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-            0      47     1  orig   [B\n-           12      33     2 crc32   Ljava/util/zip/CRC32;\n-           22      23     3 origCRC32   J\n+            0      48     0     f   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+            0      48     1  orig   [B\n+           12      34     2 crc32   Ljava/util/zip/CRC32;\n+           22      24     3 origCRC32   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 44\n           locals = [ class org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField, class \"[B\", class java/util/zip/CRC32, long ]\n           stack = [ class java/io/IOException ]\n         frame_type = 249 /* chop */\n-          offset_delta = 0\n+          offset_delta = 1\n \n   static byte[] copy(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n"}]}
