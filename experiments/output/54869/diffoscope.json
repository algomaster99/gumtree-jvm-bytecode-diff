{"diffoscope-json-version": 1, "source1": "first/INIConfiguration.class", "source2": "second/INIConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -29,14 +29,18 @@\n     private static final String LINE_SEPARATOR;\n     private static final String QUOTE_CHARACTERS = \"\\\"'\";\n     private static final String LINE_CONT = \"\\\\\";\n     private String separatorUsedInOutput;\n     private String separatorUsedInInput;\n     private String commentCharsUsedInInput;\n     \n+    static {\n+        LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+    }\n+    \n     public INIConfiguration() {\n         this.separatorUsedInOutput = \" = \";\n         this.separatorUsedInInput = \"=:\";\n         this.commentCharsUsedInInput = \"#;\";\n     }\n     \n     public INIConfiguration(final HierarchicalConfiguration<ImmutableNode> c) {\n@@ -60,14 +64,15 @@\n         this.beginWrite(false);\n         try {\n             this.separatorUsedInOutput = separator;\n         }\n         finally {\n             this.endWrite();\n         }\n+        this.endWrite();\n     }\n     \n     public String getSeparatorUsedInInput() {\n         this.beginRead(false);\n         try {\n             return this.separatorUsedInInput;\n         }\n@@ -80,14 +85,15 @@\n         this.beginRead(false);\n         try {\n             this.separatorUsedInInput = separator;\n         }\n         finally {\n             this.endRead();\n         }\n+        this.endRead();\n     }\n     \n     public String getCommentLeadingCharsUsedInInput() {\n         this.beginRead(false);\n         try {\n             return this.commentCharsUsedInInput;\n         }\n@@ -100,14 +106,15 @@\n         this.beginRead(false);\n         try {\n             this.commentCharsUsedInInput = separator;\n         }\n         finally {\n             this.endRead();\n         }\n+        this.endRead();\n     }\n     \n     public void write(final Writer writer) throws ConfigurationException, IOException {\n         final PrintWriter out = new PrintWriter(writer);\n         boolean first = true;\n         final String separator = this.getSeparatorUsedInOutput();\n         this.beginRead(false);\n@@ -132,14 +139,15 @@\n             }\n             out.println();\n             out.flush();\n         }\n         finally {\n             this.endRead();\n         }\n+        this.endRead();\n     }\n     \n     public void read(final Reader in) throws ConfigurationException, IOException {\n         final BufferedReader bufferedReader = new BufferedReader(in);\n         final Map<String, ImmutableNode.Builder> sectionBuilders = new LinkedHashMap<String, ImmutableNode.Builder>();\n         final ImmutableNode.Builder rootBuilder = new ImmutableNode.Builder();\n         this.createNodeBuilders(bufferedReader, rootBuilder, sectionBuilders);\n@@ -325,25 +333,25 @@\n         for (int i = 0; i < commentChars.length() && !quoted; ++i) {\n             final char c = commentChars.charAt(i);\n             if (value.indexOf(c) != -1) {\n                 quoted = true;\n             }\n         }\n         if (quoted) {\n-            return '\\\"' + value.replaceAll(\"\\\"\", \"\\\\\\\\\\\\\\\"\") + '\\\"';\n+            return String.valueOf('\\\"') + value.replaceAll(\"\\\"\", \"\\\\\\\\\\\\\\\"\") + '\\\"';\n         }\n         return value;\n     }\n     \n     protected boolean isCommentLine(final String line) {\n         return line != null && (line.length() < 1 || this.getCommentLeadingCharsUsedInInput().indexOf(line.charAt(0)) >= 0);\n     }\n     \n     protected boolean isSectionLine(final String line) {\n-        return line != null && line.startsWith(\"[\") && line.endsWith(\"]\");\n+        return line != null && (line.startsWith(\"[\") && line.endsWith(\"]\"));\n     }\n     \n     public Set<String> getSections() {\n         final Set<String> sections = new LinkedHashSet<String>();\n         boolean globalSection = false;\n         boolean inSection = false;\n         this.beginRead(false);\n@@ -361,25 +369,26 @@\n                     sections.add(null);\n                 }\n             }\n         }\n         finally {\n             this.endRead();\n         }\n+        this.endRead();\n         return sections;\n     }\n     \n     public SubnodeConfiguration getSection(final String name) {\n         if (name == null) {\n             return this.getGlobalSection();\n         }\n         try {\n             return (SubnodeConfiguration)this.configurationAt(name, true);\n         }\n-        catch (final ConfigurationRuntimeException iex) {\n+        catch (final ConfigurationRuntimeException ex) {\n             final InMemoryNodeModel parentModel = this.getSubConfigurationParentModel();\n             final NodeSelector selector = parentModel.trackChildNodeWithCreation((String)null, name, (NodeKeyResolver)this);\n             return this.createSubConfigurationForTrackedNode(selector, (InMemoryNodeModelSupport)this);\n         }\n     }\n     \n     private SubnodeConfiguration getGlobalSection() {\n@@ -391,12 +400,8 @@\n         this.initSubConfigurationForThisParent(sub);\n         return sub;\n     }\n     \n     private static boolean isSectionNode(final ImmutableNode node) {\n         return node.getValue() == null;\n     }\n-    \n-    static {\n-        LINE_SEPARATOR = System.getProperty(\"line.separator\");\n-    }\n }\n"}]}
