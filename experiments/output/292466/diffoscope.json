{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIInputStream.class", "source2": "second/FromNetASCIIInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 1f83fa02c8b4500646a1ca6851b23bafab8a30765cdea22bf23953e3c33268cd\n+  SHA-256 checksum 8d89b1c55634c7c5947e101e4b2d134e439fdaebf0193e1c775e7e24ef885e95\n   Compiled from \"FromNetASCIIInputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIInputStream extends java.io.PushbackInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #30                         // org/apache/commons/net/io/FromNetASCIIInputStream\n   super_class: #31                        // java/io/PushbackInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #30.#61       // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-    #2 = Fieldref           #30.#62       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-    #3 = Methodref          #31.#63       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #30.#64       // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n-    #5 = Methodref          #31.#65       // java/io/PushbackInputStream.read:()I\n-    #6 = Methodref          #30.#66       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n-    #7 = Methodref          #30.#67       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n-    #8 = Methodref          #30.#68       // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n-    #9 = Methodref          #30.#69       // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n-   #10 = Methodref          #31.#69       // java/io/PushbackInputStream.read:([BII)I\n-   #11 = Methodref          #30.#70       // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n-   #12 = Fieldref           #30.#71       // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n-   #13 = Class              #72           // java/io/IOException\n-   #14 = String             #73           // Stream closed\n-   #15 = Methodref          #13.#74       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Fieldref           #30.#75       // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n-   #17 = Fieldref           #30.#76       // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n-   #18 = Methodref          #77.#70       // java/io/InputStream.available:()I\n-   #19 = String             #78           // line.separator\n-   #20 = Methodref          #79.#80       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Fieldref           #30.#81       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n-   #22 = String             #82           // \\r\\n\n-   #23 = Methodref          #83.#84       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #24 = String             #85           // US-ASCII\n-   #25 = Methodref          #83.#86       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #26 = Class              #87           // java/io/UnsupportedEncodingException\n-   #27 = Class              #88           // java/lang/RuntimeException\n-   #28 = String             #89           // Broken JVM - cannot find US-ASCII charset!\n-   #29 = Methodref          #27.#90       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #30 = Class              #91           // org/apache/commons/net/io/FromNetASCIIInputStream\n-   #31 = Class              #92           // java/io/PushbackInputStream\n+    #1 = Fieldref           #30.#59       // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+    #2 = Fieldref           #30.#60       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+    #3 = Methodref          #31.#61       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Fieldref           #30.#62       // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n+    #5 = Methodref          #31.#63       // java/io/PushbackInputStream.read:()I\n+    #6 = Methodref          #30.#64       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n+    #7 = Methodref          #30.#65       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n+    #8 = Methodref          #30.#66       // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n+    #9 = Methodref          #30.#67       // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n+   #10 = Methodref          #31.#67       // java/io/PushbackInputStream.read:([BII)I\n+   #11 = Methodref          #30.#68       // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n+   #12 = Fieldref           #30.#69       // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n+   #13 = Class              #70           // java/io/IOException\n+   #14 = String             #71           // Stream closed\n+   #15 = Methodref          #13.#72       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Fieldref           #30.#73       // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n+   #17 = Fieldref           #30.#74       // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n+   #18 = Methodref          #75.#68       // java/io/InputStream.available:()I\n+   #19 = String             #76           // line.separator\n+   #20 = Methodref          #77.#78       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #21 = Fieldref           #30.#79       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n+   #22 = String             #80           // \\r\\n\n+   #23 = Methodref          #81.#82       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #24 = String             #83           // US-ASCII\n+   #25 = Methodref          #81.#84       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #26 = Class              #85           // java/io/UnsupportedEncodingException\n+   #27 = Class              #86           // java/lang/RuntimeException\n+   #28 = String             #87           // Broken JVM - cannot find US-ASCII charset!\n+   #29 = Methodref          #27.#88       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #30 = Class              #89           // org/apache/commons/net/io/FromNetASCIIInputStream\n+   #31 = Class              #90           // java/io/PushbackInputStream\n    #32 = Utf8               _noConversionRequired\n    #33 = Utf8               Z\n    #34 = Utf8               _lineSeparator\n    #35 = Utf8               Ljava/lang/String;\n    #36 = Utf8               _lineSeparatorBytes\n    #37 = Utf8               [B\n    #38 = Utf8               length\n@@ -56,73 +56,71 @@\n    #46 = Utf8               (Ljava/io/InputStream;)V\n    #47 = Utf8               __read\n    #48 = Utf8               ()I\n    #49 = Utf8               Exceptions\n    #50 = Utf8               read\n    #51 = Utf8               ([B)I\n    #52 = Utf8               ([BII)I\n-   #53 = Class              #91           // org/apache/commons/net/io/FromNetASCIIInputStream\n-   #54 = Class              #37           // \"[B\"\n-   #55 = Utf8               available\n-   #56 = Utf8               <clinit>\n-   #57 = Utf8               ()V\n-   #58 = Class              #87           // java/io/UnsupportedEncodingException\n-   #59 = Utf8               SourceFile\n-   #60 = Utf8               FromNetASCIIInputStream.java\n-   #61 = NameAndType        #32:#33       // _noConversionRequired:Z\n-   #62 = NameAndType        #36:#37       // _lineSeparatorBytes:[B\n-   #63 = NameAndType        #45:#93       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #64 = NameAndType        #38:#39       // length:I\n-   #65 = NameAndType        #50:#48       // read:()I\n-   #66 = NameAndType        #94:#95       // unread:([B)V\n-   #67 = NameAndType        #94:#96       // unread:(I)V\n-   #68 = NameAndType        #47:#48       // __read:()I\n-   #69 = NameAndType        #50:#52       // read:([BII)I\n-   #70 = NameAndType        #55:#48       // available:()I\n-   #71 = NameAndType        #97:#98       // in:Ljava/io/InputStream;\n-   #72 = Utf8               java/io/IOException\n-   #73 = Utf8               Stream closed\n-   #74 = NameAndType        #45:#99       // \"<init>\":(Ljava/lang/String;)V\n-   #75 = NameAndType        #100:#37      // buf:[B\n-   #76 = NameAndType        #101:#39      // pos:I\n-   #77 = Class              #102          // java/io/InputStream\n-   #78 = Utf8               line.separator\n-   #79 = Class              #103          // java/lang/System\n-   #80 = NameAndType        #104:#105     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #81 = NameAndType        #34:#35       // _lineSeparator:Ljava/lang/String;\n-   #82 = Utf8               \\r\\n\n-   #83 = Class              #106          // java/lang/String\n-   #84 = NameAndType        #107:#108     // equals:(Ljava/lang/Object;)Z\n-   #85 = Utf8               US-ASCII\n-   #86 = NameAndType        #109:#110     // getBytes:(Ljava/lang/String;)[B\n-   #87 = Utf8               java/io/UnsupportedEncodingException\n-   #88 = Utf8               java/lang/RuntimeException\n-   #89 = Utf8               Broken JVM - cannot find US-ASCII charset!\n-   #90 = NameAndType        #45:#111      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #91 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-   #92 = Utf8               java/io/PushbackInputStream\n-   #93 = Utf8               (Ljava/io/InputStream;I)V\n-   #94 = Utf8               unread\n-   #95 = Utf8               ([B)V\n-   #96 = Utf8               (I)V\n-   #97 = Utf8               in\n-   #98 = Utf8               Ljava/io/InputStream;\n-   #99 = Utf8               (Ljava/lang/String;)V\n-  #100 = Utf8               buf\n-  #101 = Utf8               pos\n-  #102 = Utf8               java/io/InputStream\n-  #103 = Utf8               java/lang/System\n-  #104 = Utf8               getProperty\n-  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #106 = Utf8               java/lang/String\n-  #107 = Utf8               equals\n-  #108 = Utf8               (Ljava/lang/Object;)Z\n-  #109 = Utf8               getBytes\n-  #110 = Utf8               (Ljava/lang/String;)[B\n-  #111 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #53 = Class              #37           // \"[B\"\n+   #54 = Utf8               available\n+   #55 = Utf8               <clinit>\n+   #56 = Utf8               ()V\n+   #57 = Utf8               SourceFile\n+   #58 = Utf8               FromNetASCIIInputStream.java\n+   #59 = NameAndType        #32:#33       // _noConversionRequired:Z\n+   #60 = NameAndType        #36:#37       // _lineSeparatorBytes:[B\n+   #61 = NameAndType        #45:#91       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #62 = NameAndType        #38:#39       // length:I\n+   #63 = NameAndType        #50:#48       // read:()I\n+   #64 = NameAndType        #92:#93       // unread:([B)V\n+   #65 = NameAndType        #92:#94       // unread:(I)V\n+   #66 = NameAndType        #47:#48       // __read:()I\n+   #67 = NameAndType        #50:#52       // read:([BII)I\n+   #68 = NameAndType        #54:#48       // available:()I\n+   #69 = NameAndType        #95:#96       // in:Ljava/io/InputStream;\n+   #70 = Utf8               java/io/IOException\n+   #71 = Utf8               Stream closed\n+   #72 = NameAndType        #45:#97       // \"<init>\":(Ljava/lang/String;)V\n+   #73 = NameAndType        #98:#37       // buf:[B\n+   #74 = NameAndType        #99:#39       // pos:I\n+   #75 = Class              #100          // java/io/InputStream\n+   #76 = Utf8               line.separator\n+   #77 = Class              #101          // java/lang/System\n+   #78 = NameAndType        #102:#103     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #79 = NameAndType        #34:#35       // _lineSeparator:Ljava/lang/String;\n+   #80 = Utf8               \\r\\n\n+   #81 = Class              #104          // java/lang/String\n+   #82 = NameAndType        #105:#106     // equals:(Ljava/lang/Object;)Z\n+   #83 = Utf8               US-ASCII\n+   #84 = NameAndType        #107:#108     // getBytes:(Ljava/lang/String;)[B\n+   #85 = Utf8               java/io/UnsupportedEncodingException\n+   #86 = Utf8               java/lang/RuntimeException\n+   #87 = Utf8               Broken JVM - cannot find US-ASCII charset!\n+   #88 = NameAndType        #45:#109      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #89 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+   #90 = Utf8               java/io/PushbackInputStream\n+   #91 = Utf8               (Ljava/io/InputStream;I)V\n+   #92 = Utf8               unread\n+   #93 = Utf8               ([B)V\n+   #94 = Utf8               (I)V\n+   #95 = Utf8               in\n+   #96 = Utf8               Ljava/io/InputStream;\n+   #97 = Utf8               (Ljava/lang/String;)V\n+   #98 = Utf8               buf\n+   #99 = Utf8               pos\n+  #100 = Utf8               java/io/InputStream\n+  #101 = Utf8               java/lang/System\n+  #102 = Utf8               getProperty\n+  #103 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #104 = Utf8               java/lang/String\n+  #105 = Utf8               equals\n+  #106 = Utf8               (Ljava/lang/Object;)Z\n+  #107 = Utf8               getBytes\n+  #108 = Utf8               (Ljava/lang/String;)[B\n+  #109 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n {\n   static final boolean _noConversionRequired;\n     descriptor: Z\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   static final java.lang.String _lineSeparator;\n     descriptor: Ljava/lang/String;\n"}]}
