{"diffoscope-json-version": 1, "source1": "first/PKWareExtraHeader.class", "source2": "second/PKWareExtraHeader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,135 +1,135 @@\n-  SHA-256 checksum 5681e8e423e95915004e7d58d9fe3c2e21f55ff13332a5572f0b3c52e4b17a29\n+  SHA-256 checksum 7e605afa2193f716f2fc7e99badae5ae89dccea1897cd6405216f10e1625a00c\n   Compiled from \"PKWareExtraHeader.java\"\n public abstract class org.apache.commons.compress.archivers.zip.PKWareExtraHeader implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 53\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #18                         // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  super_class: #19                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Methodref          #19.#64       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #18.#65       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #3 = Methodref          #66.#67       // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-    #4 = Fieldref           #18.#68       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.localData:[B\n-    #5 = Class              #69           // org/apache/commons/compress/archivers/zip/ZipShort\n-    #6 = Methodref          #5.#70        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #7 = Fieldref           #18.#71       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.centralData:[B\n-    #8 = Methodref          #18.#72       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #9 = Methodref          #18.#73       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.getLocalFileDataData:()[B\n-   #10 = Methodref          #74.#75       // java/util/Arrays.copyOfRange:([BII)[B\n-   #11 = Methodref          #18.#76       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.setLocalFileDataData:([B)V\n-   #12 = Methodref          #18.#77       // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.setCentralDirectoryData:([B)V\n-   #13 = Class              #78           // java/util/zip/ZipException\n-   #14 = Methodref          #19.#79       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #15 = Methodref          #80.#81       // java/lang/Class.getName:()Ljava/lang/String;\n-   #16 = InvokeDynamic      #0:#85        // #0:makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n-   #17 = Methodref          #13.#86       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #18 = Class              #87           // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-   #19 = Class              #88           // java/lang/Object\n-   #20 = Class              #89           // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #21 = Class              #90           // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-   #22 = Utf8               HashAlgorithm\n-   #23 = Utf8               InnerClasses\n-   #24 = Class              #91           // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-   #25 = Utf8               EncryptionAlgorithm\n-   #26 = Utf8               headerId\n-   #27 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #28 = Utf8               localData\n-   #29 = Utf8               [B\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+    #9 = NameAndType        #11:#12       // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #10 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+   #11 = Utf8               headerId\n+   #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #13 = Methodref          #14.#15       // org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+   #14 = Class              #16           // org/apache/commons/compress/archivers/zip/ZipUtil\n+   #15 = NameAndType        #17:#18       // copy:([B)[B\n+   #16 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+   #17 = Utf8               copy\n+   #18 = Utf8               ([B)[B\n+   #19 = Fieldref           #8.#20        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.localData:[B\n+   #20 = NameAndType        #21:#22       // localData:[B\n+   #21 = Utf8               localData\n+   #22 = Utf8               [B\n+   #23 = Class              #24           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #24 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #25 = Methodref          #23.#26       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #26 = NameAndType        #5:#27        // \"<init>\":(I)V\n+   #27 = Utf8               (I)V\n+   #28 = Fieldref           #8.#29        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.centralData:[B\n+   #29 = NameAndType        #30:#22       // centralData:[B\n    #30 = Utf8               centralData\n-   #31 = Utf8               <init>\n-   #32 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               LocalVariableTable\n-   #36 = Utf8               this\n-   #37 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n-   #38 = Utf8               getHeaderId\n-   #39 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #40 = Utf8               setLocalFileDataData\n-   #41 = Utf8               ([B)V\n-   #42 = Utf8               data\n-   #43 = Utf8               getLocalFileDataLength\n-   #44 = Utf8               StackMapTable\n-   #45 = Utf8               getLocalFileDataData\n-   #46 = Utf8               ()[B\n-   #47 = Utf8               setCentralDirectoryData\n-   #48 = Utf8               getCentralDirectoryLength\n-   #49 = Utf8               getCentralDirectoryData\n-   #50 = Utf8               parseFromLocalFileData\n-   #51 = Utf8               ([BII)V\n-   #52 = Utf8               offset\n-   #53 = Utf8               I\n-   #54 = Utf8               length\n-   #55 = Utf8               Exceptions\n-   #56 = Utf8               parseFromCentralDirectoryData\n-   #57 = Utf8               tmp\n-   #58 = Class              #29           // \"[B\"\n-   #59 = Utf8               assertMinimalLength\n-   #60 = Utf8               (II)V\n-   #61 = Utf8               minimum\n-   #62 = Utf8               SourceFile\n-   #63 = Utf8               PKWareExtraHeader.java\n-   #64 = NameAndType        #31:#92       // \"<init>\":()V\n-   #65 = NameAndType        #26:#27       // headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #66 = Class              #93           // org/apache/commons/compress/archivers/zip/ZipUtil\n-   #67 = NameAndType        #94:#95       // copy:([B)[B\n-   #68 = NameAndType        #28:#29       // localData:[B\n-   #69 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #70 = NameAndType        #31:#96       // \"<init>\":(I)V\n-   #71 = NameAndType        #30:#29       // centralData:[B\n-   #72 = NameAndType        #43:#39       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #73 = NameAndType        #45:#46       // getLocalFileDataData:()[B\n-   #74 = Class              #97           // java/util/Arrays\n-   #75 = NameAndType        #98:#99       // copyOfRange:([BII)[B\n-   #76 = NameAndType        #40:#41       // setLocalFileDataData:([B)V\n-   #77 = NameAndType        #47:#41       // setCentralDirectoryData:([B)V\n-   #78 = Utf8               java/util/zip/ZipException\n-   #79 = NameAndType        #100:#101     // getClass:()Ljava/lang/Class;\n-   #80 = Class              #102          // java/lang/Class\n-   #81 = NameAndType        #103:#104     // getName:()Ljava/lang/String;\n-   #82 = Utf8               BootstrapMethods\n-   #83 = MethodHandle       6:#105        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #84 = String             #106          // \\u0001 is too short, only \\u0001 bytes, expected at least \\u0001\n-   #85 = NameAndType        #107:#108     // makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n-   #86 = NameAndType        #31:#109      // \"<init>\":(Ljava/lang/String;)V\n-   #87 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-   #88 = Utf8               java/lang/Object\n-   #89 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #90 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-   #91 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-   #92 = Utf8               ()V\n-   #93 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-   #94 = Utf8               copy\n-   #95 = Utf8               ([B)[B\n-   #96 = Utf8               (I)V\n-   #97 = Utf8               java/util/Arrays\n-   #98 = Utf8               copyOfRange\n-   #99 = Utf8               ([BII)[B\n-  #100 = Utf8               getClass\n-  #101 = Utf8               ()Ljava/lang/Class;\n-  #102 = Utf8               java/lang/Class\n-  #103 = Utf8               getName\n-  #104 = Utf8               ()Ljava/lang/String;\n-  #105 = Methodref          #110.#111     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #31 = Methodref          #8.#32        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #32 = NameAndType        #33:#34       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #33 = Utf8               getLocalFileDataLength\n+   #34 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #35 = Methodref          #8.#36        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.getLocalFileDataData:()[B\n+   #36 = NameAndType        #37:#38       // getLocalFileDataData:()[B\n+   #37 = Utf8               getLocalFileDataData\n+   #38 = Utf8               ()[B\n+   #39 = Methodref          #40.#41       // java/util/Arrays.copyOfRange:([BII)[B\n+   #40 = Class              #42           // java/util/Arrays\n+   #41 = NameAndType        #43:#44       // copyOfRange:([BII)[B\n+   #42 = Utf8               java/util/Arrays\n+   #43 = Utf8               copyOfRange\n+   #44 = Utf8               ([BII)[B\n+   #45 = Methodref          #8.#46        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.setLocalFileDataData:([B)V\n+   #46 = NameAndType        #47:#48       // setLocalFileDataData:([B)V\n+   #47 = Utf8               setLocalFileDataData\n+   #48 = Utf8               ([B)V\n+   #49 = Methodref          #8.#50        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.setCentralDirectoryData:([B)V\n+   #50 = NameAndType        #51:#48       // setCentralDirectoryData:([B)V\n+   #51 = Utf8               setCentralDirectoryData\n+   #52 = Class              #53           // java/util/zip/ZipException\n+   #53 = Utf8               java/util/zip/ZipException\n+   #54 = Methodref          #2.#55        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #55 = NameAndType        #56:#57       // getClass:()Ljava/lang/Class;\n+   #56 = Utf8               getClass\n+   #57 = Utf8               ()Ljava/lang/Class;\n+   #58 = Methodref          #59.#60       // java/lang/Class.getName:()Ljava/lang/String;\n+   #59 = Class              #61           // java/lang/Class\n+   #60 = NameAndType        #62:#63       // getName:()Ljava/lang/String;\n+   #61 = Utf8               java/lang/Class\n+   #62 = Utf8               getName\n+   #63 = Utf8               ()Ljava/lang/String;\n+   #64 = InvokeDynamic      #0:#65        // #0:makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n+   #65 = NameAndType        #66:#67       // makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n+   #66 = Utf8               makeConcatWithConstants\n+   #67 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n+   #68 = Methodref          #52.#69       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #69 = NameAndType        #5:#70        // \"<init>\":(Ljava/lang/String;)V\n+   #70 = Utf8               (Ljava/lang/String;)V\n+   #71 = Class              #72           // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #72 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #73 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+   #74 = Utf8               Code\n+   #75 = Utf8               LineNumberTable\n+   #76 = Utf8               LocalVariableTable\n+   #77 = Utf8               this\n+   #78 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n+   #79 = Utf8               getHeaderId\n+   #80 = Utf8               data\n+   #81 = Utf8               StackMapTable\n+   #82 = Utf8               getCentralDirectoryLength\n+   #83 = Utf8               getCentralDirectoryData\n+   #84 = Utf8               parseFromLocalFileData\n+   #85 = Utf8               ([BII)V\n+   #86 = Utf8               offset\n+   #87 = Utf8               I\n+   #88 = Utf8               length\n+   #89 = Utf8               Exceptions\n+   #90 = Utf8               parseFromCentralDirectoryData\n+   #91 = Utf8               tmp\n+   #92 = Class              #22           // \"[B\"\n+   #93 = Utf8               assertMinimalLength\n+   #94 = Utf8               (II)V\n+   #95 = Utf8               minimum\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               PKWareExtraHeader.java\n+   #98 = Utf8               BootstrapMethods\n+   #99 = MethodHandle       6:#100        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #100 = Methodref          #101.#102     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #101 = Class              #103          // java/lang/invoke/StringConcatFactory\n+  #102 = NameAndType        #66:#104      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #103 = Utf8               java/lang/invoke/StringConcatFactory\n+  #104 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #105 = String             #106          // \\u0001 is too short, only \\u0001 bytes, expected at least \\u0001\n   #106 = Utf8               \\u0001 is too short, only \\u0001 bytes, expected at least \\u0001\n-  #107 = Utf8               makeConcatWithConstants\n-  #108 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n-  #109 = Utf8               (Ljava/lang/String;)V\n-  #110 = Class              #112          // java/lang/invoke/StringConcatFactory\n-  #111 = NameAndType        #107:#115     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #112 = Utf8               java/lang/invoke/StringConcatFactory\n-  #113 = Class              #117          // java/lang/invoke/MethodHandles$Lookup\n-  #114 = Utf8               Lookup\n-  #115 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #116 = Class              #118          // java/lang/invoke/MethodHandles\n-  #117 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #118 = Utf8               java/lang/invoke/MethodHandles\n+  #107 = Utf8               InnerClasses\n+  #108 = Class              #109          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+  #109 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+  #110 = Utf8               HashAlgorithm\n+  #111 = Class              #112          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+  #112 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+  #113 = Utf8               EncryptionAlgorithm\n+  #114 = Class              #115          // java/lang/invoke/MethodHandles$Lookup\n+  #115 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #116 = Class              #117          // java/lang/invoke/MethodHandles\n+  #117 = Utf8               java/lang/invoke/MethodHandles\n+  #118 = Utf8               Lookup\n {\n   private final org.apache.commons.compress.archivers.zip.ZipShort headerId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private byte[] localData;\n     descriptor: [B\n@@ -144,15 +144,15 @@\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         6: putfield      #7                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          9: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 4\n         line 84: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -161,56 +161,56 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: getfield      #7                  // Field headerId:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 93: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n \n   public void setLocalFileDataData(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-         5: putfield      #4                  // Field localData:[B\n+         2: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         5: putfield      #19                 // Field localData:[B\n          8: return\n       LineNumberTable:\n         line 104: 0\n         line 105: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n             0       9     1  data   [B\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #23                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: aload_0\n-         5: getfield      #4                  // Field localData:[B\n+         5: getfield      #19                 // Field localData:[B\n          8: ifnull        19\n         11: aload_0\n-        12: getfield      #4                  // Field localData:[B\n+        12: getfield      #19                 // Field localData:[B\n         15: arraylength\n         16: goto          20\n         19: iconst_0\n-        20: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        20: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         23: areturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n       StackMapTable: number_of_entries = 2\n@@ -225,32 +225,32 @@\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field localData:[B\n-         4: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         1: getfield      #19                 // Field localData:[B\n+         4: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n          7: areturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n \n   public void setCentralDirectoryData(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n-         5: putfield      #7                  // Field centralData:[B\n+         2: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         5: putfield      #28                 // Field centralData:[B\n          8: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n@@ -258,25 +258,25 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field centralData:[B\n+         1: getfield      #28                 // Field centralData:[B\n          4: ifnull        20\n-         7: new           #5                  // class org/apache/commons/compress/archivers/zip/ZipShort\n+         7: new           #23                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         10: dup\n         11: aload_0\n-        12: getfield      #7                  // Field centralData:[B\n+        12: getfield      #28                 // Field centralData:[B\n         15: arraylength\n-        16: invokespecial #6                  // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        16: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         19: areturn\n         20: aload_0\n-        21: invokevirtual #8                  // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        21: invokevirtual #31                 // Method getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         24: areturn\n       LineNumberTable:\n         line 145: 0\n         line 146: 7\n         line 148: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -286,22 +286,22 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field centralData:[B\n+         1: getfield      #28                 // Field centralData:[B\n          4: ifnull        15\n          7: aload_0\n-         8: getfield      #7                  // Field centralData:[B\n-        11: invokestatic  #3                  // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n+         8: getfield      #28                 // Field centralData:[B\n+        11: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipUtil.copy:([B)[B\n         14: areturn\n         15: aload_0\n-        16: invokevirtual #9                  // Method getLocalFileDataData:()[B\n+        16: invokevirtual #35                 // Method getLocalFileDataData:()[B\n         19: areturn\n       LineNumberTable:\n         line 158: 0\n         line 159: 7\n         line 161: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -316,16 +316,16 @@\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_2\n          4: iload_3\n          5: iadd\n-         6: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-         9: invokevirtual #11                 // Method setLocalFileDataData:([B)V\n+         6: invokestatic  #39                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+         9: invokevirtual #45                 // Method setLocalFileDataData:([B)V\n         12: return\n       LineNumberTable:\n         line 176: 0\n         line 177: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader;\n@@ -341,25 +341,25 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: iload_2\n          2: iload_2\n          3: iload_3\n          4: iadd\n-         5: invokestatic  #10                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+         5: invokestatic  #39                 // Method java/util/Arrays.copyOfRange:([BII)[B\n          8: astore        4\n         10: aload_0\n         11: aload         4\n-        13: invokevirtual #12                 // Method setCentralDirectoryData:([B)V\n+        13: invokevirtual #49                 // Method setCentralDirectoryData:([B)V\n         16: aload_0\n-        17: getfield      #4                  // Field localData:[B\n+        17: getfield      #19                 // Field localData:[B\n         20: ifnonnull     29\n         23: aload_0\n         24: aload         4\n-        26: invokevirtual #11                 // Method setLocalFileDataData:([B)V\n+        26: invokevirtual #45                 // Method setLocalFileDataData:([B)V\n         29: return\n       LineNumberTable:\n         line 191: 0\n         line 192: 10\n         line 193: 16\n         line 194: 23\n         line 196: 29\n@@ -381,23 +381,23 @@\n     descriptor: (II)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=5, locals=3, args_size=3\n          0: iload_2\n          1: iload_1\n          2: if_icmpge     27\n-         5: new           #13                 // class java/util/zip/ZipException\n+         5: new           #52                 // class java/util/zip/ZipException\n          8: dup\n          9: aload_0\n-        10: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        13: invokevirtual #15                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        10: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        13: invokevirtual #58                 // Method java/lang/Class.getName:()Ljava/lang/String;\n         16: iload_2\n         17: iload_1\n-        18: invokedynamic #16,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n-        23: invokespecial #17                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        18: invokedynamic #64,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;II)Ljava/lang/String;\n+        23: invokespecial #68                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         26: athrow\n         27: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 5\n         line 204: 27\n       LocalVariableTable:\n@@ -407,15 +407,15 @@\n             0      28     2 length   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 27 /* same */\n     Exceptions:\n       throws java.util.zip.ZipException\n }\n SourceFile: \"PKWareExtraHeader.java\"\n-InnerClasses:\n-  public static final #22= #21 of #18;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  public static final #25= #24 of #18;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  public static final #114= #113 of #116; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #83 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #99 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #84 \\u0001 is too short, only \\u0001 bytes, expected at least \\u0001\n+      #105 \\u0001 is too short, only \\u0001 bytes, expected at least \\u0001\n+InnerClasses:\n+  public static final #110= #108 of #8;   // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #113= #111 of #8;   // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #118= #114 of #116; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
