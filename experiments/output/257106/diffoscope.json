{"diffoscope-json-version": 1, "source1": "first/ZipArchiveOutputStream$CurrentEntry.class", "source2": "second/ZipArchiveOutputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 08039880fa551cf9655a0a29119e1a4e8031d910f80d31b3d6709cffb1b640f7\n+  SHA-256 checksum d286d764f372db693c22360b8685aab6259175cfbe8795cc6e5cef14a704d34b\n   Compiled from \"ZipArchiveOutputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry\n   super_class: #29                        // java/lang/Object\n@@ -38,45 +38,39 @@\n   #28 = Methodref          #29.#30        // java/lang/Object.\"<init>\":()V\n   #29 = Class              #31            // java/lang/Object\n   #30 = NameAndType        #9:#32         // \"<init>\":()V\n   #31 = Utf8               java/lang/Object\n   #32 = Utf8               ()V\n   #33 = Utf8               Code\n   #34 = Utf8               LineNumberTable\n-  #35 = Utf8               LocalVariableTable\n-  #36 = Utf8               this\n-  #37 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-  #38 = Utf8               access$000\n-  #39 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #40 = Utf8               x0\n-  #41 = Utf8               access$100\n-  #42 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n-  #43 = Utf8               access$202\n-  #44 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n-  #45 = Utf8               x1\n-  #46 = Utf8               access$302\n-  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n-  #48 = Utf8               access$602\n-  #49 = Utf8               access$200\n-  #50 = Utf8               access$300\n-  #51 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n-  #52 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n-  #53 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n-  #54 = Utf8               access$800\n-  #55 = Utf8               access$600\n-  #56 = Utf8               access$802\n-  #57 = Utf8               access$102\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               ZipArchiveOutputStream.java\n-  #60 = Utf8               InnerClasses\n-  #61 = Class              #62            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #62 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #63 = Utf8               CurrentEntry\n-  #64 = Class              #65            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n-  #65 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  #35 = Utf8               access$000\n+  #36 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #37 = Utf8               access$100\n+  #38 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n+  #39 = Utf8               access$202\n+  #40 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n+  #41 = Utf8               access$302\n+  #42 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n+  #43 = Utf8               access$602\n+  #44 = Utf8               access$200\n+  #45 = Utf8               access$300\n+  #46 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n+  #47 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n+  #48 = Utf8               access$800\n+  #49 = Utf8               access$600\n+  #50 = Utf8               access$802\n+  #51 = Utf8               access$102\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               ZipArchiveOutputStream.java\n+  #54 = Utf8               InnerClasses\n+  #55 = Class              #56            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #56 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #57 = Utf8               CurrentEntry\n+  #58 = Class              #59            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long localDataStart;\n     descriptor: J\n@@ -109,202 +103,155 @@\n          5: aload_1\n          6: putfield      #24                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          9: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 4\n         line 121: 9\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0      10     1 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   static org.apache.commons.compress.archivers.zip.ZipArchiveEntry access$000(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #24                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   static long access$100(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #21                 // Field dataStart:J\n          4: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   static long access$202(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n          3: putfield      #18                 // Field bytesRead:J\n          6: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n \n   static boolean access$302(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n          3: putfield      #15                 // Field hasWritten:Z\n          6: ireturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n   static boolean access$602(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, boolean);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;Z)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: dup_x1\n          3: putfield      #11                 // Field causedUseOfZip64:Z\n          6: ireturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   Z\n \n   static long access$200(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #18                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   static boolean access$300(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #15                 // Field hasWritten:Z\n          4: ireturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: invokespecial #7                  // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n          5: return\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       6     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-            0       6     2    x1   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n \n   static long access$800(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field localDataStart:J\n          4: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   static boolean access$600(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #11                 // Field causedUseOfZip64:Z\n          4: ireturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n \n   static long access$802(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n          3: putfield      #1                  // Field localDataStart:J\n          6: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n \n   static long access$102(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: dup2_x1\n          3: putfield      #21                 // Field dataStart:J\n          6: lreturn\n       LineNumberTable:\n         line 80: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       7     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry;\n-            0       7     1    x1   J\n }\n SourceFile: \"ZipArchiveOutputStream.java\"\n InnerClasses:\n-  private static final #63= #2 of #61;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  static #64;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  private static final #57= #2 of #55;    // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  static #58;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n"}]}
