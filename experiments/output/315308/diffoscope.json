{"diffoscope-json-version": 1, "source1": "first/DelegateFileFilter.class", "source2": "second/DelegateFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,89 +1,89 @@\n-  SHA-256 checksum 7383c87cbd8167969227978e5f9aad915d41bd68413e38ede9788692704a10bc\n+  SHA-256 checksum f09efc52aa937bdbf9081e1ce81d0399c38b8a2c307099664e472eadb977af31\n   Compiled from \"DelegateFileFilter.java\"\n public class org.apache.commons.io.filefilter.DelegateFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/io/filefilter/DelegateFileFilter\n-  super_class: #21                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #15                         // org/apache/commons/io/filefilter/DelegateFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#48        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #49            // java/lang/IllegalArgumentException\n-   #3 = String             #50            // The FilenameFilter must not be null\n-   #4 = Methodref          #2.#51         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = Fieldref           #20.#52        // org/apache/commons/io/filefilter/DelegateFileFilter.filenameFilter:Ljava/io/FilenameFilter;\n-   #6 = Fieldref           #20.#53        // org/apache/commons/io/filefilter/DelegateFileFilter.fileFilter:Ljava/io/FileFilter;\n-   #7 = String             #54            // The FileFilter must not be null\n-   #8 = InterfaceMethodref #39.#55        // java/io/FileFilter.accept:(Ljava/io/File;)Z\n-   #9 = Methodref          #21.#55        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-  #10 = InterfaceMethodref #37.#56        // java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #11 = Methodref          #21.#56        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #12 = Methodref          #57.#58        // java/lang/Object.toString:()Ljava/lang/String;\n-  #13 = Class              #59            // java/lang/StringBuilder\n-  #14 = Methodref          #13.#48        // java/lang/StringBuilder.\"<init>\":()V\n-  #15 = Methodref          #21.#58        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-  #16 = Methodref          #13.#60        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #17 = String             #61            // (\n-  #18 = String             #62            // )\n-  #19 = Methodref          #13.#58        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #20 = Class              #63            // org/apache/commons/io/filefilter/DelegateFileFilter\n-  #21 = Class              #64            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #22 = Class              #65            // java/io/Serializable\n-  #23 = Utf8               serialVersionUID\n-  #24 = Utf8               J\n-  #25 = Utf8               ConstantValue\n-  #26 = Long               -8723373124984771318l\n-  #28 = Utf8               filenameFilter\n-  #29 = Utf8               Ljava/io/FilenameFilter;\n-  #30 = Utf8               fileFilter\n-  #31 = Utf8               Ljava/io/FileFilter;\n-  #32 = Utf8               <init>\n-  #33 = Utf8               (Ljava/io/FilenameFilter;)V\n-  #34 = Utf8               Code\n-  #35 = Utf8               LineNumberTable\n-  #36 = Utf8               StackMapTable\n-  #37 = Class              #66            // java/io/FilenameFilter\n-  #38 = Utf8               (Ljava/io/FileFilter;)V\n-  #39 = Class              #67            // java/io/FileFilter\n-  #40 = Utf8               accept\n-  #41 = Utf8               (Ljava/io/File;)Z\n-  #42 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/lang/IllegalArgumentException\n+   #8 = Utf8               java/lang/IllegalArgumentException\n+   #9 = String             #10            // The FilenameFilter must not be null\n+  #10 = Utf8               The FilenameFilter must not be null\n+  #11 = Methodref          #7.#12         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #12 = NameAndType        #5:#13         // \"<init>\":(Ljava/lang/String;)V\n+  #13 = Utf8               (Ljava/lang/String;)V\n+  #14 = Fieldref           #15.#16        // org/apache/commons/io/filefilter/DelegateFileFilter.filenameFilter:Ljava/io/FilenameFilter;\n+  #15 = Class              #17            // org/apache/commons/io/filefilter/DelegateFileFilter\n+  #16 = NameAndType        #18:#19        // filenameFilter:Ljava/io/FilenameFilter;\n+  #17 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n+  #18 = Utf8               filenameFilter\n+  #19 = Utf8               Ljava/io/FilenameFilter;\n+  #20 = Fieldref           #15.#21        // org/apache/commons/io/filefilter/DelegateFileFilter.fileFilter:Ljava/io/FileFilter;\n+  #21 = NameAndType        #22:#23        // fileFilter:Ljava/io/FileFilter;\n+  #22 = Utf8               fileFilter\n+  #23 = Utf8               Ljava/io/FileFilter;\n+  #24 = String             #25            // The FileFilter must not be null\n+  #25 = Utf8               The FileFilter must not be null\n+  #26 = InterfaceMethodref #27.#28        // java/io/FileFilter.accept:(Ljava/io/File;)Z\n+  #27 = Class              #29            // java/io/FileFilter\n+  #28 = NameAndType        #30:#31        // accept:(Ljava/io/File;)Z\n+  #29 = Utf8               java/io/FileFilter\n+  #30 = Utf8               accept\n+  #31 = Utf8               (Ljava/io/File;)Z\n+  #32 = Methodref          #2.#28         // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+  #33 = InterfaceMethodref #34.#35        // java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #34 = Class              #36            // java/io/FilenameFilter\n+  #35 = NameAndType        #30:#37        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #36 = Utf8               java/io/FilenameFilter\n+  #37 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #38 = Methodref          #2.#35         // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #39 = Methodref          #40.#41        // java/lang/Object.toString:()Ljava/lang/String;\n+  #40 = Class              #42            // java/lang/Object\n+  #41 = NameAndType        #43:#44        // toString:()Ljava/lang/String;\n+  #42 = Utf8               java/lang/Object\n   #43 = Utf8               toString\n   #44 = Utf8               ()Ljava/lang/String;\n-  #45 = Class              #68            // java/lang/String\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               DelegateFileFilter.java\n-  #48 = NameAndType        #32:#69        // \"<init>\":()V\n-  #49 = Utf8               java/lang/IllegalArgumentException\n-  #50 = Utf8               The FilenameFilter must not be null\n-  #51 = NameAndType        #32:#70        // \"<init>\":(Ljava/lang/String;)V\n-  #52 = NameAndType        #28:#29        // filenameFilter:Ljava/io/FilenameFilter;\n-  #53 = NameAndType        #30:#31        // fileFilter:Ljava/io/FileFilter;\n-  #54 = Utf8               The FileFilter must not be null\n-  #55 = NameAndType        #40:#41        // accept:(Ljava/io/File;)Z\n-  #56 = NameAndType        #40:#42        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #57 = Class              #71            // java/lang/Object\n-  #58 = NameAndType        #43:#44        // toString:()Ljava/lang/String;\n-  #59 = Utf8               java/lang/StringBuilder\n-  #60 = NameAndType        #72:#73        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #61 = Utf8               (\n-  #62 = Utf8               )\n-  #63 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n-  #64 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #65 = Utf8               java/io/Serializable\n-  #66 = Utf8               java/io/FilenameFilter\n-  #67 = Utf8               java/io/FileFilter\n-  #68 = Utf8               java/lang/String\n-  #69 = Utf8               ()V\n-  #70 = Utf8               (Ljava/lang/String;)V\n-  #71 = Utf8               java/lang/Object\n-  #72 = Utf8               append\n-  #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #45 = Class              #46            // java/lang/StringBuilder\n+  #46 = Utf8               java/lang/StringBuilder\n+  #47 = Methodref          #45.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #48 = Methodref          #2.#41         // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #49 = Methodref          #45.#50        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #50 = NameAndType        #51:#52        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #51 = Utf8               append\n+  #52 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #53 = String             #54            // (\n+  #54 = Utf8               (\n+  #55 = String             #56            // )\n+  #56 = Utf8               )\n+  #57 = Methodref          #45.#41        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #58 = Class              #59            // java/io/Serializable\n+  #59 = Utf8               java/io/Serializable\n+  #60 = Utf8               serialVersionUID\n+  #61 = Utf8               J\n+  #62 = Utf8               ConstantValue\n+  #63 = Long               -8723373124984771318l\n+  #65 = Utf8               (Ljava/io/FilenameFilter;)V\n+  #66 = Utf8               Code\n+  #67 = Utf8               LineNumberTable\n+  #68 = Utf8               StackMapTable\n+  #69 = Utf8               (Ljava/io/FileFilter;)V\n+  #70 = Class              #71            // java/lang/String\n+  #71 = Utf8               java/lang/String\n+  #72 = Utf8               SourceFile\n+  #73 = Utf8               DelegateFileFilter.java\n {\n   private static final long serialVersionUID = -8723373124984771318l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -8723373124984771318l\n \n   private final java.io.FilenameFilter filenameFilter;\n@@ -99,25 +99,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #3                  // String The FilenameFilter must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #9                  // String The FilenameFilter must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #5                  // Field filenameFilter:Ljava/io/FilenameFilter;\n+        20: putfield      #14                 // Field filenameFilter:Ljava/io/FilenameFilter;\n         23: aload_0\n         24: aconst_null\n-        25: putfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n+        25: putfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n         28: return\n       LineNumberTable:\n         line 46: 0\n         line 47: 4\n         line 48: 8\n         line 50: 18\n         line 51: 23\n@@ -133,25 +133,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #7                  // String The FileFilter must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #24                 // String The FileFilter must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n+        20: putfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n         23: aload_0\n         24: aconst_null\n-        25: putfield      #5                  // Field filenameFilter:Ljava/io/FilenameFilter;\n+        25: putfield      #14                 // Field filenameFilter:Ljava/io/FilenameFilter;\n         28: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 4\n         line 61: 8\n         line 63: 18\n         line 64: 23\n@@ -164,87 +164,87 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n+         1: getfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n          4: ifnull        18\n          7: aload_0\n-         8: getfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n+         8: getfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n         11: aload_1\n-        12: invokeinterface #8,  2            // InterfaceMethod java/io/FileFilter.accept:(Ljava/io/File;)Z\n+        12: invokeinterface #26,  2           // InterfaceMethod java/io/FileFilter.accept:(Ljava/io/File;)Z\n         17: ireturn\n         18: aload_0\n         19: aload_1\n-        20: invokespecial #9                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+        20: invokespecial #32                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n         23: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 76: 7\n         line 78: 18\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #5                  // Field filenameFilter:Ljava/io/FilenameFilter;\n+         1: getfield      #14                 // Field filenameFilter:Ljava/io/FilenameFilter;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #5                  // Field filenameFilter:Ljava/io/FilenameFilter;\n+         8: getfield      #14                 // Field filenameFilter:Ljava/io/FilenameFilter;\n         11: aload_1\n         12: aload_2\n-        13: invokeinterface #10,  3           // InterfaceMethod java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        13: invokeinterface #33,  3           // InterfaceMethod java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n         18: ireturn\n         19: aload_0\n         20: aload_1\n         21: aload_2\n-        22: invokespecial #11                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        22: invokespecial #38                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n         25: ireturn\n       LineNumberTable:\n         line 90: 0\n         line 91: 7\n         line 93: 19\n       StackMapTable: number_of_entries = 1\n         frame_type = 19 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n+         1: getfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n          4: ifnull        17\n          7: aload_0\n-         8: getfield      #6                  // Field fileFilter:Ljava/io/FileFilter;\n-        11: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         8: getfield      #20                 // Field fileFilter:Ljava/io/FileFilter;\n+        11: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;\n         14: goto          24\n         17: aload_0\n-        18: getfield      #5                  // Field filenameFilter:Ljava/io/FilenameFilter;\n-        21: invokevirtual #12                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        18: getfield      #14                 // Field filenameFilter:Ljava/io/FilenameFilter;\n+        21: invokevirtual #39                 // Method java/lang/Object.toString:()Ljava/lang/String;\n         24: astore_1\n-        25: new           #13                 // class java/lang/StringBuilder\n+        25: new           #45                 // class java/lang/StringBuilder\n         28: dup\n-        29: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        29: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n         32: aload_0\n-        33: invokespecial #15                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-        36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: ldc           #17                 // String (\n-        41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokespecial #48                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+        36: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        39: ldc           #53                 // String (\n+        41: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         44: aload_1\n-        45: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #18                 // String )\n-        50: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        45: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #55                 // String )\n+        50: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         56: areturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 25\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n"}]}
