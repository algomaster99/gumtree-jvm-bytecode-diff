{"diffoscope-json-version": 1, "source1": "first/CanExecuteFileFilter.class", "source2": "second/CanExecuteFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum accece5ce6454030f9aa7c9340e71f9d6d29d6b98982a5d1a39612026712ec19\n+  SHA-256 checksum 363e809547ea4a6162312436cc122f3e8064998d62ce8fc3a299befd68fb7f13\n   Compiled from \"CanExecuteFileFilter.java\"\n public class org.apache.commons.io.filefilter.CanExecuteFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #13                         // org/apache/commons/io/filefilter/CanExecuteFileFilter\n   super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n@@ -39,24 +39,19 @@\n   #29 = Utf8               java/io/Serializable\n   #30 = Utf8               serialVersionUID\n   #31 = Utf8               J\n   #32 = Utf8               ConstantValue\n   #33 = Long               3179904805251622989l\n   #35 = Utf8               Code\n   #36 = Utf8               LineNumberTable\n-  #37 = Utf8               LocalVariableTable\n-  #38 = Utf8               this\n-  #39 = Utf8               Lorg/apache/commons/io/filefilter/CanExecuteFileFilter;\n-  #40 = Utf8               accept\n-  #41 = Utf8               (Ljava/io/File;)Z\n-  #42 = Utf8               file\n-  #43 = Utf8               Ljava/io/File;\n-  #44 = Utf8               <clinit>\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               CanExecuteFileFilter.java\n+  #37 = Utf8               accept\n+  #38 = Utf8               (Ljava/io/File;)Z\n+  #39 = Utf8               <clinit>\n+  #40 = Utf8               SourceFile\n+  #41 = Utf8               CanExecuteFileFilter.java\n {\n   private static final long serialVersionUID = 3179904805251622989l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 3179904805251622989l\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter CAN_EXECUTE;\n@@ -74,32 +69,25 @@\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 64: 0\n         line 65: 4\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/filefilter/CanExecuteFileFilter;\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: invokevirtual #7                  // Method java/io/File.canExecute:()Z\n          4: ireturn\n       LineNumberTable:\n         line 75: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/filefilter/CanExecuteFileFilter;\n-            0       5     1  file   Ljava/io/File;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #13                 // class org/apache/commons/io/filefilter/CanExecuteFileFilter\n"}]}
