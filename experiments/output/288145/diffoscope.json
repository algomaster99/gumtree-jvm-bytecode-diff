{"diffoscope-json-version": 1, "source1": "first/AbstractLZ77CompressorInputStream.class", "source2": "second/AbstractLZ77CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,198 +1,197 @@\n-  SHA-256 checksum 194532edf88a32d5816b8c51f829b4d5149ac64eee46e972d3805a02c10af517\n+  SHA-256 checksum 435ab20e5f65ee054291545cad7c867b71843ac1a9cd49d08068549cd3c8bd91\n   Compiled from \"AbstractLZ77CompressorInputStream.java\"\n public abstract class org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #41                         // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n   super_class: #42                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 10, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #42.#97       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #2 = Fieldref           #41.#98       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.oneByte:[B\n-    #3 = InvokeDynamic      #0:#103       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #4 = Fieldref           #41.#104      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #5 = Class              #105          // org/apache/commons/compress/utils/CountingInputStream\n-    #6 = Methodref          #5.#106       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #7 = Fieldref           #41.#107      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-    #8 = Class              #108          // java/lang/IllegalArgumentException\n-    #9 = String             #109          // windowSize must be bigger than 0\n-   #10 = Methodref          #8.#110       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Fieldref           #41.#111      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.windowSize:I\n-   #12 = Fieldref           #41.#112      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.buf:[B\n-   #13 = Fieldref           #41.#113      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readIndex:I\n-   #14 = Fieldref           #41.#114      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.writeIndex:I\n-   #15 = Fieldref           #41.#115      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.bytesRemaining:J\n-   #16 = Methodref          #5.#116       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #17 = Methodref          #5.#117       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #18 = Fieldref           #41.#118      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.size:I\n-   #19 = Class              #119          // java/lang/IllegalStateException\n-   #20 = String             #120          // The stream has already been read from, can\\'t prefill anymore\n-   #21 = Methodref          #19.#110      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Methodref          #121.#122     // java/lang/Math.min:(II)I\n-   #23 = Methodref          #123.#124     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #24 = Methodref          #41.#125      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.read:([BII)I\n-   #25 = Methodref          #41.#126      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.available:()I\n-   #26 = Methodref          #41.#127      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToCopy:(I)V\n-   #27 = Methodref          #41.#128      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readFromBuffer:([BII)I\n-   #28 = Methodref          #41.#129      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.slideBuffer:()V\n-   #29 = Methodref          #41.#130      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToReadLiteral:(I)V\n-   #30 = Methodref          #5.#131       // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #31 = Methodref          #41.#132      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.count:(I)V\n-   #32 = String             #133          // offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n-   #33 = String             #134          // length must not be negative\n-   #34 = Fieldref           #41.#135      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.backReferenceOffset:I\n-   #35 = Methodref          #121.#136     // java/lang/Math.min:(JJ)J\n-   #36 = Methodref          #137.#138     // java/util/Arrays.fill:([BIIB)V\n-   #37 = Methodref          #139.#140     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #38 = Class              #141          // java/io/IOException\n-   #39 = String             #142          // Premature end of stream reading literal\n-   #40 = Methodref          #38.#110      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #41 = Class              #143          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #42 = Class              #144          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #43 = Class              #145          // org/apache/commons/compress/utils/InputStreamStatistics\n+    #1 = Methodref          #42.#96       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #2 = Fieldref           #41.#97       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.oneByte:[B\n+    #3 = InvokeDynamic      #0:#102       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #4 = Fieldref           #41.#103      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #5 = Class              #104          // org/apache/commons/compress/utils/CountingInputStream\n+    #6 = Methodref          #5.#105       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #7 = Fieldref           #41.#106      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+    #8 = Class              #107          // java/lang/IllegalArgumentException\n+    #9 = String             #108          // windowSize must be bigger than 0\n+   #10 = Methodref          #8.#109       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #11 = Fieldref           #41.#110      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.windowSize:I\n+   #12 = Fieldref           #41.#111      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.buf:[B\n+   #13 = Fieldref           #41.#112      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readIndex:I\n+   #14 = Fieldref           #41.#113      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.writeIndex:I\n+   #15 = Fieldref           #41.#114      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.bytesRemaining:J\n+   #16 = Methodref          #5.#115       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #17 = Methodref          #5.#116       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #18 = Fieldref           #41.#117      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.size:I\n+   #19 = Class              #118          // java/lang/IllegalStateException\n+   #20 = String             #119          // The stream has already been read from, can\\'t prefill anymore\n+   #21 = Methodref          #19.#109      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Methodref          #120.#121     // java/lang/Math.min:(II)I\n+   #23 = Methodref          #122.#123     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #24 = Methodref          #41.#124      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.read:([BII)I\n+   #25 = Methodref          #41.#125      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.available:()I\n+   #26 = Methodref          #41.#126      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToCopy:(I)V\n+   #27 = Methodref          #41.#127      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readFromBuffer:([BII)I\n+   #28 = Methodref          #41.#128      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.slideBuffer:()V\n+   #29 = Methodref          #41.#129      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToReadLiteral:(I)V\n+   #30 = Methodref          #5.#130       // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+   #31 = Methodref          #41.#131      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.count:(I)V\n+   #32 = String             #132          // offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n+   #33 = String             #133          // length must not be negative\n+   #34 = Fieldref           #41.#134      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.backReferenceOffset:I\n+   #35 = Methodref          #120.#135     // java/lang/Math.min:(JJ)J\n+   #36 = Methodref          #136.#137     // java/util/Arrays.fill:([BIIB)V\n+   #37 = Methodref          #138.#139     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #38 = Class              #140          // java/io/IOException\n+   #39 = String             #141          // Premature end of stream reading literal\n+   #40 = Methodref          #38.#109      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #41 = Class              #142          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+   #42 = Class              #143          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #43 = Class              #144          // org/apache/commons/compress/utils/InputStreamStatistics\n    #44 = Utf8               windowSize\n    #45 = Utf8               I\n    #46 = Utf8               buf\n    #47 = Utf8               [B\n    #48 = Utf8               writeIndex\n    #49 = Utf8               readIndex\n    #50 = Utf8               in\n    #51 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n    #52 = Utf8               bytesRemaining\n    #53 = Utf8               J\n    #54 = Utf8               backReferenceOffset\n    #55 = Utf8               size\n    #56 = Utf8               oneByte\n    #57 = Utf8               supplier\n-   #58 = Class              #147          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+   #58 = Class              #146          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n    #59 = Utf8               ByteSupplier\n    #60 = Utf8               InnerClasses\n    #61 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n    #62 = Utf8               <init>\n    #63 = Utf8               (Ljava/io/InputStream;I)V\n    #64 = Utf8               Code\n    #65 = Utf8               LineNumberTable\n    #66 = Utf8               StackMapTable\n-   #67 = Class              #143          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #68 = Class              #148          // java/io/InputStream\n-   #69 = Utf8               available\n-   #70 = Utf8               ()I\n-   #71 = Utf8               close\n-   #72 = Utf8               ()V\n-   #73 = Utf8               Exceptions\n-   #74 = Utf8               getCompressedCount\n-   #75 = Utf8               ()J\n-   #76 = Utf8               getSize\n-   #77 = Utf8               hasMoreDataInBlock\n-   #78 = Utf8               ()Z\n-   #79 = Utf8               prefill\n-   #80 = Utf8               ([B)V\n-   #81 = Utf8               read\n-   #82 = Utf8               readBackReference\n-   #83 = Utf8               ([BII)I\n-   #84 = Utf8               readFromBuffer\n-   #85 = Utf8               readLiteral\n-   #86 = Utf8               readOneByte\n-   #87 = Utf8               slideBuffer\n-   #88 = Utf8               startBackReference\n-   #89 = Utf8               (IJ)V\n-   #90 = Utf8               startLiteral\n-   #91 = Utf8               (J)V\n-   #92 = Utf8               tryToCopy\n-   #93 = Utf8               (I)V\n-   #94 = Utf8               tryToReadLiteral\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               AbstractLZ77CompressorInputStream.java\n-   #97 = NameAndType        #62:#72       // \"<init>\":()V\n-   #98 = NameAndType        #56:#47       // oneByte:[B\n-   #99 = Utf8               BootstrapMethods\n-  #100 = MethodHandle       6:#149        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #101 = MethodType         #70           //  ()I\n-  #102 = MethodHandle       5:#150        // REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-  #103 = NameAndType        #151:#152     // getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #104 = NameAndType        #57:#61       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #105 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #106 = NameAndType        #62:#153      // \"<init>\":(Ljava/io/InputStream;)V\n-  #107 = NameAndType        #50:#51       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #108 = Utf8               java/lang/IllegalArgumentException\n-  #109 = Utf8               windowSize must be bigger than 0\n-  #110 = NameAndType        #62:#154      // \"<init>\":(Ljava/lang/String;)V\n-  #111 = NameAndType        #44:#45       // windowSize:I\n-  #112 = NameAndType        #46:#47       // buf:[B\n-  #113 = NameAndType        #49:#45       // readIndex:I\n-  #114 = NameAndType        #48:#45       // writeIndex:I\n-  #115 = NameAndType        #52:#53       // bytesRemaining:J\n-  #116 = NameAndType        #71:#72       // close:()V\n-  #117 = NameAndType        #155:#75      // getBytesRead:()J\n-  #118 = NameAndType        #55:#45       // size:I\n-  #119 = Utf8               java/lang/IllegalStateException\n-  #120 = Utf8               The stream has already been read from, can\\'t prefill anymore\n-  #121 = Class              #156          // java/lang/Math\n-  #122 = NameAndType        #157:#158     // min:(II)I\n-  #123 = Class              #159          // java/lang/System\n-  #124 = NameAndType        #160:#161     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #125 = NameAndType        #81:#83       // read:([BII)I\n-  #126 = NameAndType        #69:#70       // available:()I\n-  #127 = NameAndType        #92:#93       // tryToCopy:(I)V\n-  #128 = NameAndType        #84:#83       // readFromBuffer:([BII)I\n-  #129 = NameAndType        #87:#72       // slideBuffer:()V\n-  #130 = NameAndType        #94:#93       // tryToReadLiteral:(I)V\n-  #131 = NameAndType        #81:#70       // read:()I\n-  #132 = NameAndType        #162:#93      // count:(I)V\n-  #133 = Utf8               offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n-  #134 = Utf8               length must not be negative\n-  #135 = NameAndType        #54:#45       // backReferenceOffset:I\n-  #136 = NameAndType        #157:#163     // min:(JJ)J\n-  #137 = Class              #164          // java/util/Arrays\n-  #138 = NameAndType        #165:#166     // fill:([BIIB)V\n-  #139 = Class              #167          // org/apache/commons/compress/utils/IOUtils\n-  #140 = NameAndType        #168:#169     // readFully:(Ljava/io/InputStream;[BII)I\n-  #141 = Utf8               java/io/IOException\n-  #142 = Utf8               Premature end of stream reading literal\n-  #143 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  #144 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #145 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #146 = Class              #170          // org/apache/commons/compress/utils/ByteUtils\n-  #147 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #148 = Utf8               java/io/InputStream\n-  #149 = Methodref          #171.#172     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #150 = Methodref          #41.#173      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-  #151 = Utf8               getAsByte\n-  #152 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #153 = Utf8               (Ljava/io/InputStream;)V\n-  #154 = Utf8               (Ljava/lang/String;)V\n-  #155 = Utf8               getBytesRead\n-  #156 = Utf8               java/lang/Math\n-  #157 = Utf8               min\n-  #158 = Utf8               (II)I\n-  #159 = Utf8               java/lang/System\n-  #160 = Utf8               arraycopy\n-  #161 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #162 = Utf8               count\n-  #163 = Utf8               (JJ)J\n-  #164 = Utf8               java/util/Arrays\n-  #165 = Utf8               fill\n-  #166 = Utf8               ([BIIB)V\n-  #167 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #168 = Utf8               readFully\n-  #169 = Utf8               (Ljava/io/InputStream;[BII)I\n-  #170 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #171 = Class              #174          // java/lang/invoke/LambdaMetafactory\n-  #172 = NameAndType        #175:#178     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #173 = NameAndType        #86:#70       // readOneByte:()I\n-  #174 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #175 = Utf8               metafactory\n-  #176 = Class              #180          // java/lang/invoke/MethodHandles$Lookup\n-  #177 = Utf8               Lookup\n-  #178 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #179 = Class              #181          // java/lang/invoke/MethodHandles\n-  #180 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #181 = Utf8               java/lang/invoke/MethodHandles\n+   #67 = Class              #147          // java/io/InputStream\n+   #68 = Utf8               available\n+   #69 = Utf8               ()I\n+   #70 = Utf8               close\n+   #71 = Utf8               ()V\n+   #72 = Utf8               Exceptions\n+   #73 = Utf8               getCompressedCount\n+   #74 = Utf8               ()J\n+   #75 = Utf8               getSize\n+   #76 = Utf8               hasMoreDataInBlock\n+   #77 = Utf8               ()Z\n+   #78 = Utf8               prefill\n+   #79 = Utf8               ([B)V\n+   #80 = Utf8               read\n+   #81 = Utf8               readBackReference\n+   #82 = Utf8               ([BII)I\n+   #83 = Utf8               readFromBuffer\n+   #84 = Utf8               readLiteral\n+   #85 = Utf8               readOneByte\n+   #86 = Utf8               slideBuffer\n+   #87 = Utf8               startBackReference\n+   #88 = Utf8               (IJ)V\n+   #89 = Utf8               startLiteral\n+   #90 = Utf8               (J)V\n+   #91 = Utf8               tryToCopy\n+   #92 = Utf8               (I)V\n+   #93 = Utf8               tryToReadLiteral\n+   #94 = Utf8               SourceFile\n+   #95 = Utf8               AbstractLZ77CompressorInputStream.java\n+   #96 = NameAndType        #62:#71       // \"<init>\":()V\n+   #97 = NameAndType        #56:#47       // oneByte:[B\n+   #98 = Utf8               BootstrapMethods\n+   #99 = MethodHandle       6:#148        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #100 = MethodType         #69           //  ()I\n+  #101 = MethodHandle       5:#149        // REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+  #102 = NameAndType        #150:#151     // getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #103 = NameAndType        #57:#61       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #104 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #105 = NameAndType        #62:#152      // \"<init>\":(Ljava/io/InputStream;)V\n+  #106 = NameAndType        #50:#51       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #107 = Utf8               java/lang/IllegalArgumentException\n+  #108 = Utf8               windowSize must be bigger than 0\n+  #109 = NameAndType        #62:#153      // \"<init>\":(Ljava/lang/String;)V\n+  #110 = NameAndType        #44:#45       // windowSize:I\n+  #111 = NameAndType        #46:#47       // buf:[B\n+  #112 = NameAndType        #49:#45       // readIndex:I\n+  #113 = NameAndType        #48:#45       // writeIndex:I\n+  #114 = NameAndType        #52:#53       // bytesRemaining:J\n+  #115 = NameAndType        #70:#71       // close:()V\n+  #116 = NameAndType        #154:#74      // getBytesRead:()J\n+  #117 = NameAndType        #55:#45       // size:I\n+  #118 = Utf8               java/lang/IllegalStateException\n+  #119 = Utf8               The stream has already been read from, can\\'t prefill anymore\n+  #120 = Class              #155          // java/lang/Math\n+  #121 = NameAndType        #156:#157     // min:(II)I\n+  #122 = Class              #158          // java/lang/System\n+  #123 = NameAndType        #159:#160     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #124 = NameAndType        #80:#82       // read:([BII)I\n+  #125 = NameAndType        #68:#69       // available:()I\n+  #126 = NameAndType        #91:#92       // tryToCopy:(I)V\n+  #127 = NameAndType        #83:#82       // readFromBuffer:([BII)I\n+  #128 = NameAndType        #86:#71       // slideBuffer:()V\n+  #129 = NameAndType        #93:#92       // tryToReadLiteral:(I)V\n+  #130 = NameAndType        #80:#69       // read:()I\n+  #131 = NameAndType        #161:#92      // count:(I)V\n+  #132 = Utf8               offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n+  #133 = Utf8               length must not be negative\n+  #134 = NameAndType        #54:#45       // backReferenceOffset:I\n+  #135 = NameAndType        #156:#162     // min:(JJ)J\n+  #136 = Class              #163          // java/util/Arrays\n+  #137 = NameAndType        #164:#165     // fill:([BIIB)V\n+  #138 = Class              #166          // org/apache/commons/compress/utils/IOUtils\n+  #139 = NameAndType        #167:#168     // readFully:(Ljava/io/InputStream;[BII)I\n+  #140 = Utf8               java/io/IOException\n+  #141 = Utf8               Premature end of stream reading literal\n+  #142 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  #143 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #144 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #145 = Class              #169          // org/apache/commons/compress/utils/ByteUtils\n+  #146 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #147 = Utf8               java/io/InputStream\n+  #148 = Methodref          #170.#171     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #149 = Methodref          #41.#172      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+  #150 = Utf8               getAsByte\n+  #151 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #152 = Utf8               (Ljava/io/InputStream;)V\n+  #153 = Utf8               (Ljava/lang/String;)V\n+  #154 = Utf8               getBytesRead\n+  #155 = Utf8               java/lang/Math\n+  #156 = Utf8               min\n+  #157 = Utf8               (II)I\n+  #158 = Utf8               java/lang/System\n+  #159 = Utf8               arraycopy\n+  #160 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #161 = Utf8               count\n+  #162 = Utf8               (JJ)J\n+  #163 = Utf8               java/util/Arrays\n+  #164 = Utf8               fill\n+  #165 = Utf8               ([BIIB)V\n+  #166 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #167 = Utf8               readFully\n+  #168 = Utf8               (Ljava/io/InputStream;[BII)I\n+  #169 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #170 = Class              #173          // java/lang/invoke/LambdaMetafactory\n+  #171 = NameAndType        #174:#177     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #172 = NameAndType        #85:#69       // readOneByte:()I\n+  #173 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #174 = Utf8               metafactory\n+  #175 = Class              #179          // java/lang/invoke/MethodHandles$Lookup\n+  #176 = Utf8               Lookup\n+  #177 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #178 = Class              #180          // java/lang/invoke/MethodHandles\n+  #179 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #180 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final int windowSize;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final byte[] buf;\n     descriptor: [B\n@@ -953,15 +952,16 @@\n         85: i2l\n         86: lsub\n         87: putfield      #15                 // Field bytesRemaining:J\n         90: return\n       LineNumberTable:\n         line 351: 0\n         line 353: 24\n-        line 354: 41\n+        line 354: 28\n+        line 355: 47\n         line 356: 49\n         line 357: 54\n         line 358: 59\n         line 360: 69\n         line 361: 79\n         line 362: 90\n       StackMapTable: number_of_entries = 3\n@@ -974,15 +974,15 @@\n           offset_delta = 20\n           locals = [ int ]\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"AbstractLZ77CompressorInputStream.java\"\n InnerClasses:\n-  public static #59= #58 of #146;         // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #177= #176 of #179; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static #59= #58 of #145;         // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #176= #175 of #178; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #100 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #99 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #101 ()I\n-      #102 REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-      #101 ()I\n+      #100 ()I\n+      #101 REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+      #100 ()I\n"}]}
