{"diffoscope-json-version": 1, "source1": "first/ArArchiveEntry.class", "source2": "second/ArArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,156 +1,156 @@\n-  SHA-256 checksum 06064b643a97e8c447ddabcd940ccb5a5c677c03a764399ccf744b72ab1b9f2a\n+  SHA-256 checksum 6065655b3eeca0accd69f3018cb99db88afd79bea1538c506637b27eac6aa793\n   Compiled from \"ArArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveEntry implements org.apache.commons.compress.archivers.ArchiveEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  super_class: #30                        // java/lang/Object\n+  this_class: #11                         // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+  super_class: #48                        // java/lang/Object\n   interfaces: 1, fields: 9, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #53.#81       // java/io/File.isFile:()Z\n-    #2 = Methodref          #53.#82       // java/io/File.length:()J\n-    #3 = Class              #83           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-    #4 = Integer            33188\n-    #5 = Methodref          #53.#84       // java/io/File.lastModified:()J\n-    #6 = Long               1000l\n-    #8 = Methodref          #3.#85        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-    #9 = Methodref          #86.#87       // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #10 = Methodref          #86.#88       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #11 = Methodref          #86.#89       // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #12 = Methodref          #90.#91       // java/nio/file/attribute/FileTime.toMillis:()J\n-   #13 = Methodref          #92.#93       // java/lang/System.currentTimeMillis:()J\n-   #14 = Methodref          #30.#94       // java/lang/Object.\"<init>\":()V\n-   #15 = Fieldref           #3.#95        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.name:Ljava/lang/String;\n-   #16 = Class              #96           // java/lang/IllegalArgumentException\n-   #17 = String             #97           // length must not be negative\n-   #18 = Methodref          #16.#98       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Fieldref           #3.#99        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.length:J\n-   #20 = Fieldref           #3.#100       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.userId:I\n-   #21 = Fieldref           #3.#101       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.groupId:I\n-   #22 = Fieldref           #3.#102       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.mode:I\n-   #23 = Fieldref           #3.#103       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.lastModified:J\n-   #24 = Methodref          #30.#104      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #25 = Methodref          #54.#105      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #26 = Class              #106          // java/util/Date\n-   #27 = Methodref          #3.#107       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n-   #28 = Methodref          #26.#108      // java/util/Date.\"<init>\":(J)V\n-   #29 = Methodref          #3.#109       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #30 = Class              #110          // java/lang/Object\n-   #31 = Methodref          #111.#112     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #32 = Class              #113          // org/apache/commons/compress/archivers/ArchiveEntry\n-   #33 = Utf8               HEADER\n-   #34 = Utf8               Ljava/lang/String;\n-   #35 = Utf8               ConstantValue\n-   #36 = String             #114          // !<arch>\\n\n-   #37 = Utf8               TRAILER\n-   #38 = String             #115          // `\\n\n-   #39 = Utf8               DEFAULT_MODE\n-   #40 = Utf8               I\n-   #41 = Utf8               name\n-   #42 = Utf8               userId\n-   #43 = Utf8               groupId\n-   #44 = Utf8               mode\n-   #45 = Utf8               lastModified\n-   #46 = Utf8               J\n-   #47 = Utf8               length\n-   #48 = Utf8               <init>\n-   #49 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #50 = Utf8               Code\n-   #51 = Utf8               LineNumberTable\n-   #52 = Utf8               StackMapTable\n-   #53 = Class              #116          // java/io/File\n-   #54 = Class              #117          // java/lang/String\n-   #55 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #56 = Class              #118          // java/nio/file/Path\n-   #57 = Class              #119          // \"[Ljava/nio/file/LinkOption;\"\n-   #58 = Utf8               Exceptions\n-   #59 = Class              #120          // java/io/IOException\n-   #60 = Utf8               (Ljava/lang/String;J)V\n-   #61 = Utf8               (Ljava/lang/String;JIIIJ)V\n-   #62 = Utf8               equals\n-   #63 = Utf8               (Ljava/lang/Object;)Z\n-   #64 = Utf8               getGroupId\n-   #65 = Utf8               ()I\n-   #66 = Utf8               getLastModified\n-   #67 = Utf8               ()J\n-   #68 = Utf8               getLastModifiedDate\n-   #69 = Utf8               ()Ljava/util/Date;\n-   #70 = Utf8               getLength\n-   #71 = Utf8               getMode\n-   #72 = Utf8               getName\n-   #73 = Utf8               ()Ljava/lang/String;\n-   #74 = Utf8               getSize\n-   #75 = Utf8               getUserId\n-   #76 = Utf8               hashCode\n-   #77 = Utf8               isDirectory\n-   #78 = Utf8               ()Z\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               ArArchiveEntry.java\n-   #81 = NameAndType        #121:#78      // isFile:()Z\n-   #82 = NameAndType        #47:#67       // length:()J\n-   #83 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #84 = NameAndType        #45:#67       // lastModified:()J\n-   #85 = NameAndType        #48:#61       // \"<init>\":(Ljava/lang/String;JIIIJ)V\n-   #86 = Class              #122          // java/nio/file/Files\n-   #87 = NameAndType        #123:#124     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #88 = NameAndType        #125:#126     // size:(Ljava/nio/file/Path;)J\n-   #89 = NameAndType        #127:#128     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #90 = Class              #129          // java/nio/file/attribute/FileTime\n-   #91 = NameAndType        #130:#67      // toMillis:()J\n-   #92 = Class              #131          // java/lang/System\n-   #93 = NameAndType        #132:#67      // currentTimeMillis:()J\n-   #94 = NameAndType        #48:#133      // \"<init>\":()V\n-   #95 = NameAndType        #41:#34       // name:Ljava/lang/String;\n-   #96 = Utf8               java/lang/IllegalArgumentException\n-   #97 = Utf8               length must not be negative\n-   #98 = NameAndType        #48:#134      // \"<init>\":(Ljava/lang/String;)V\n-   #99 = NameAndType        #47:#46       // length:J\n-  #100 = NameAndType        #42:#40       // userId:I\n-  #101 = NameAndType        #43:#40       // groupId:I\n-  #102 = NameAndType        #44:#40       // mode:I\n-  #103 = NameAndType        #45:#46       // lastModified:J\n-  #104 = NameAndType        #135:#136     // getClass:()Ljava/lang/Class;\n-  #105 = NameAndType        #62:#63       // equals:(Ljava/lang/Object;)Z\n-  #106 = Utf8               java/util/Date\n-  #107 = NameAndType        #66:#67       // getLastModified:()J\n-  #108 = NameAndType        #48:#137      // \"<init>\":(J)V\n-  #109 = NameAndType        #70:#67       // getLength:()J\n-  #110 = Utf8               java/lang/Object\n-  #111 = Class              #138          // java/util/Objects\n-  #112 = NameAndType        #139:#140     // hash:([Ljava/lang/Object;)I\n-  #113 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #114 = Utf8               !<arch>\\n\n-  #115 = Utf8               `\\n\n-  #116 = Utf8               java/io/File\n-  #117 = Utf8               java/lang/String\n-  #118 = Utf8               java/nio/file/Path\n-  #119 = Utf8               [Ljava/nio/file/LinkOption;\n-  #120 = Utf8               java/io/IOException\n-  #121 = Utf8               isFile\n-  #122 = Utf8               java/nio/file/Files\n-  #123 = Utf8               isRegularFile\n-  #124 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #125 = Utf8               size\n-  #126 = Utf8               (Ljava/nio/file/Path;)J\n-  #127 = Utf8               getLastModifiedTime\n-  #128 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #129 = Utf8               java/nio/file/attribute/FileTime\n-  #130 = Utf8               toMillis\n-  #131 = Utf8               java/lang/System\n-  #132 = Utf8               currentTimeMillis\n-  #133 = Utf8               ()V\n-  #134 = Utf8               (Ljava/lang/String;)V\n-  #135 = Utf8               getClass\n-  #136 = Utf8               ()Ljava/lang/Class;\n-  #137 = Utf8               (J)V\n-  #138 = Utf8               java/util/Objects\n-  #139 = Utf8               hash\n-  #140 = Utf8               ([Ljava/lang/Object;)I\n+    #1 = Methodref          #2.#3         // java/io/File.isFile:()Z\n+    #2 = Class              #4            // java/io/File\n+    #3 = NameAndType        #5:#6         // isFile:()Z\n+    #4 = Utf8               java/io/File\n+    #5 = Utf8               isFile\n+    #6 = Utf8               ()Z\n+    #7 = Methodref          #2.#8         // java/io/File.length:()J\n+    #8 = NameAndType        #9:#10        // length:()J\n+    #9 = Utf8               length\n+   #10 = Utf8               ()J\n+   #11 = Class              #12           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #12 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #13 = Integer            33188\n+   #14 = Methodref          #2.#15        // java/io/File.lastModified:()J\n+   #15 = NameAndType        #16:#10       // lastModified:()J\n+   #16 = Utf8               lastModified\n+   #17 = Long               1000l\n+   #19 = Methodref          #11.#20       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+   #20 = NameAndType        #21:#22       // \"<init>\":(Ljava/lang/String;JIIIJ)V\n+   #21 = Utf8               <init>\n+   #22 = Utf8               (Ljava/lang/String;JIIIJ)V\n+   #23 = Methodref          #24.#25       // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #24 = Class              #26           // java/nio/file/Files\n+   #25 = NameAndType        #27:#28       // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #26 = Utf8               java/nio/file/Files\n+   #27 = Utf8               isRegularFile\n+   #28 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #29 = Methodref          #24.#30       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #30 = NameAndType        #31:#32       // size:(Ljava/nio/file/Path;)J\n+   #31 = Utf8               size\n+   #32 = Utf8               (Ljava/nio/file/Path;)J\n+   #33 = Methodref          #24.#34       // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #34 = NameAndType        #35:#36       // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #35 = Utf8               getLastModifiedTime\n+   #36 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #37 = Methodref          #38.#39       // java/nio/file/attribute/FileTime.toMillis:()J\n+   #38 = Class              #40           // java/nio/file/attribute/FileTime\n+   #39 = NameAndType        #41:#10       // toMillis:()J\n+   #40 = Utf8               java/nio/file/attribute/FileTime\n+   #41 = Utf8               toMillis\n+   #42 = Methodref          #43.#44       // java/lang/System.currentTimeMillis:()J\n+   #43 = Class              #45           // java/lang/System\n+   #44 = NameAndType        #46:#10       // currentTimeMillis:()J\n+   #45 = Utf8               java/lang/System\n+   #46 = Utf8               currentTimeMillis\n+   #47 = Methodref          #48.#49       // java/lang/Object.\"<init>\":()V\n+   #48 = Class              #50           // java/lang/Object\n+   #49 = NameAndType        #21:#51       // \"<init>\":()V\n+   #50 = Utf8               java/lang/Object\n+   #51 = Utf8               ()V\n+   #52 = Fieldref           #11.#53       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.name:Ljava/lang/String;\n+   #53 = NameAndType        #54:#55       // name:Ljava/lang/String;\n+   #54 = Utf8               name\n+   #55 = Utf8               Ljava/lang/String;\n+   #56 = Class              #57           // java/lang/IllegalArgumentException\n+   #57 = Utf8               java/lang/IllegalArgumentException\n+   #58 = String             #59           // length must not be negative\n+   #59 = Utf8               length must not be negative\n+   #60 = Methodref          #56.#61       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #61 = NameAndType        #21:#62       // \"<init>\":(Ljava/lang/String;)V\n+   #62 = Utf8               (Ljava/lang/String;)V\n+   #63 = Fieldref           #11.#64       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.length:J\n+   #64 = NameAndType        #9:#65        // length:J\n+   #65 = Utf8               J\n+   #66 = Fieldref           #11.#67       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.userId:I\n+   #67 = NameAndType        #68:#69       // userId:I\n+   #68 = Utf8               userId\n+   #69 = Utf8               I\n+   #70 = Fieldref           #11.#71       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.groupId:I\n+   #71 = NameAndType        #72:#69       // groupId:I\n+   #72 = Utf8               groupId\n+   #73 = Fieldref           #11.#74       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.mode:I\n+   #74 = NameAndType        #75:#69       // mode:I\n+   #75 = Utf8               mode\n+   #76 = Fieldref           #11.#77       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.lastModified:J\n+   #77 = NameAndType        #16:#65       // lastModified:J\n+   #78 = Methodref          #48.#79       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #79 = NameAndType        #80:#81       // getClass:()Ljava/lang/Class;\n+   #80 = Utf8               getClass\n+   #81 = Utf8               ()Ljava/lang/Class;\n+   #82 = Methodref          #83.#84       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #83 = Class              #85           // java/lang/String\n+   #84 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z\n+   #85 = Utf8               java/lang/String\n+   #86 = Utf8               equals\n+   #87 = Utf8               (Ljava/lang/Object;)Z\n+   #88 = Class              #89           // java/util/Date\n+   #89 = Utf8               java/util/Date\n+   #90 = Methodref          #11.#91       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n+   #91 = NameAndType        #92:#10       // getLastModified:()J\n+   #92 = Utf8               getLastModified\n+   #93 = Methodref          #88.#94       // java/util/Date.\"<init>\":(J)V\n+   #94 = NameAndType        #21:#95       // \"<init>\":(J)V\n+   #95 = Utf8               (J)V\n+   #96 = Methodref          #11.#97       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #97 = NameAndType        #98:#10       // getLength:()J\n+   #98 = Utf8               getLength\n+   #99 = Methodref          #100.#101     // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #100 = Class              #102          // java/util/Objects\n+  #101 = NameAndType        #103:#104     // hash:([Ljava/lang/Object;)I\n+  #102 = Utf8               java/util/Objects\n+  #103 = Utf8               hash\n+  #104 = Utf8               ([Ljava/lang/Object;)I\n+  #105 = Class              #106          // org/apache/commons/compress/archivers/ArchiveEntry\n+  #106 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #107 = Utf8               HEADER\n+  #108 = Utf8               ConstantValue\n+  #109 = String             #110          // !<arch>\\n\n+  #110 = Utf8               !<arch>\\n\n+  #111 = Utf8               TRAILER\n+  #112 = String             #113          // `\\n\n+  #113 = Utf8               `\\n\n+  #114 = Utf8               DEFAULT_MODE\n+  #115 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #116 = Utf8               Code\n+  #117 = Utf8               LineNumberTable\n+  #118 = Utf8               StackMapTable\n+  #119 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #120 = Class              #121          // java/nio/file/Path\n+  #121 = Utf8               java/nio/file/Path\n+  #122 = Class              #123          // \"[Ljava/nio/file/LinkOption;\"\n+  #123 = Utf8               [Ljava/nio/file/LinkOption;\n+  #124 = Utf8               Exceptions\n+  #125 = Class              #126          // java/io/IOException\n+  #126 = Utf8               java/io/IOException\n+  #127 = Utf8               (Ljava/lang/String;J)V\n+  #128 = Utf8               getGroupId\n+  #129 = Utf8               ()I\n+  #130 = Utf8               getLastModifiedDate\n+  #131 = Utf8               ()Ljava/util/Date;\n+  #132 = Utf8               getMode\n+  #133 = Utf8               getName\n+  #134 = Utf8               ()Ljava/lang/String;\n+  #135 = Utf8               getSize\n+  #136 = Utf8               getUserId\n+  #137 = Utf8               hashCode\n+  #138 = Utf8               isDirectory\n+  #139 = Utf8               SourceFile\n+  #140 = Utf8               ArArchiveEntry.java\n {\n   public static final java.lang.String HEADER = \"!<arch>\\n\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String !<arch>\\n\n \n   public static final java.lang.String TRAILER = \"`\\n\";\n@@ -194,25 +194,25 @@\n       stack=11, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n          2: aload_1\n          3: invokevirtual #1                  // Method java/io/File.isFile:()Z\n          6: ifeq          16\n          9: aload_1\n-        10: invokevirtual #2                  // Method java/io/File.length:()J\n+        10: invokevirtual #7                  // Method java/io/File.length:()J\n         13: goto          17\n         16: lconst_0\n         17: iconst_0\n         18: iconst_0\n-        19: ldc           #4                  // int 33188\n+        19: ldc           #13                 // int 33188\n         21: aload_1\n-        22: invokevirtual #5                  // Method java/io/File.lastModified:()J\n-        25: ldc2_w        #6                  // long 1000l\n+        22: invokevirtual #14                 // Method java/io/File.lastModified:()J\n+        25: ldc2_w        #17                 // long 1000l\n         28: ldiv\n-        29: invokespecial #8                  // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n+        29: invokespecial #19                 // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n         32: return\n       LineNumberTable:\n         line 87: 0\n         line 88: 22\n         line 87: 29\n         line 89: 32\n       StackMapTable: number_of_entries = 2\n@@ -230,30 +230,30 @@\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=11, locals=4, args_size=4\n          0: aload_0\n          1: aload_2\n          2: aload_1\n          3: aload_3\n-         4: invokestatic  #9                  // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         4: invokestatic  #23                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          7: ifeq          17\n         10: aload_1\n-        11: invokestatic  #10                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        11: invokestatic  #29                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n         14: goto          18\n         17: lconst_0\n         18: iconst_0\n         19: iconst_0\n-        20: ldc           #4                  // int 33188\n+        20: ldc           #13                 // int 33188\n         22: aload_1\n         23: aload_3\n-        24: invokestatic  #11                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        27: invokevirtual #12                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n-        30: ldc2_w        #6                  // long 1000l\n+        24: invokestatic  #33                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        27: invokevirtual #37                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n+        30: ldc2_w        #17                 // long 1000l\n         33: ldiv\n-        34: invokespecial #8                  // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n+        34: invokespecial #19                 // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n         37: return\n       LineNumberTable:\n         line 100: 0\n         line 101: 24\n         line 100: 34\n         line 102: 37\n       StackMapTable: number_of_entries = 2\n@@ -274,60 +274,60 @@\n     Code:\n       stack=11, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: lload_2\n          3: iconst_0\n          4: iconst_0\n-         5: ldc           #4                  // int 33188\n-         7: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J\n-        10: ldc2_w        #6                  // long 1000l\n+         5: ldc           #13                 // int 33188\n+         7: invokestatic  #42                 // Method java/lang/System.currentTimeMillis:()J\n+        10: ldc2_w        #17                 // long 1000l\n         13: ldiv\n-        14: invokespecial #8                  // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n+        14: invokespecial #19                 // Method \"<init>\":(Ljava/lang/String;JIIIJ)V\n         17: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 7\n         line 114: 14\n         line 116: 17\n \n   public org.apache.commons.compress.archivers.ar.ArArchiveEntry(java.lang.String, long, int, int, int, long);\n     descriptor: (Ljava/lang/String;JIIIJ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=9, args_size=7\n          0: aload_0\n-         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #47                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #15                 // Field name:Ljava/lang/String;\n+         6: putfield      #52                 // Field name:Ljava/lang/String;\n          9: lload_2\n         10: lconst_0\n         11: lcmp\n         12: ifge          25\n-        15: new           #16                 // class java/lang/IllegalArgumentException\n+        15: new           #56                 // class java/lang/IllegalArgumentException\n         18: dup\n-        19: ldc           #17                 // String length must not be negative\n-        21: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        19: ldc           #58                 // String length must not be negative\n+        21: invokespecial #60                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         24: athrow\n         25: aload_0\n         26: lload_2\n-        27: putfield      #19                 // Field length:J\n+        27: putfield      #63                 // Field length:J\n         30: aload_0\n         31: iload         4\n-        33: putfield      #20                 // Field userId:I\n+        33: putfield      #66                 // Field userId:I\n         36: aload_0\n         37: iload         5\n-        39: putfield      #21                 // Field groupId:I\n+        39: putfield      #70                 // Field groupId:I\n         42: aload_0\n         43: iload         6\n-        45: putfield      #22                 // Field mode:I\n+        45: putfield      #73                 // Field mode:I\n         48: aload_0\n         49: lload         7\n-        51: putfield      #23                 // Field lastModified:J\n+        51: putfield      #76                 // Field lastModified:J\n         54: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 4\n         line 131: 9\n         line 132: 15\n         line 134: 25\n@@ -351,38 +351,38 @@\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_0\n-        12: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_1\n-        16: invokevirtual #24                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #78                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #3                  // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        25: checkcast     #11                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n         28: astore_2\n         29: aload_0\n-        30: getfield      #15                 // Field name:Ljava/lang/String;\n+        30: getfield      #52                 // Field name:Ljava/lang/String;\n         33: ifnonnull     49\n         36: aload_2\n-        37: getfield      #15                 // Field name:Ljava/lang/String;\n+        37: getfield      #52                 // Field name:Ljava/lang/String;\n         40: ifnonnull     47\n         43: iconst_1\n         44: goto          48\n         47: iconst_0\n         48: ireturn\n         49: aload_0\n-        50: getfield      #15                 // Field name:Ljava/lang/String;\n+        50: getfield      #52                 // Field name:Ljava/lang/String;\n         53: aload_2\n-        54: getfield      #15                 // Field name:Ljava/lang/String;\n-        57: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        54: getfield      #52                 // Field name:Ljava/lang/String;\n+        57: invokevirtual #82                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         60: ireturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 5\n         line 146: 7\n         line 147: 22\n         line 149: 24\n@@ -402,114 +402,114 @@\n \n   public int getGroupId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field groupId:I\n+         1: getfield      #70                 // Field groupId:I\n          4: ireturn\n       LineNumberTable:\n         line 157: 0\n \n   public long getLastModified();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field lastModified:J\n+         1: getfield      #76                 // Field lastModified:J\n          4: lreturn\n       LineNumberTable:\n         line 165: 0\n \n   public java.util.Date getLastModifiedDate();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: new           #26                 // class java/util/Date\n+         0: new           #88                 // class java/util/Date\n          3: dup\n-         4: ldc2_w        #6                  // long 1000l\n+         4: ldc2_w        #17                 // long 1000l\n          7: aload_0\n-         8: invokevirtual #27                 // Method getLastModified:()J\n+         8: invokevirtual #90                 // Method getLastModified:()J\n         11: lmul\n-        12: invokespecial #28                 // Method java/util/Date.\"<init>\":(J)V\n+        12: invokespecial #93                 // Method java/util/Date.\"<init>\":(J)V\n         15: areturn\n       LineNumberTable:\n         line 170: 0\n \n   public long getLength();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field length:J\n+         1: getfield      #63                 // Field length:J\n          4: lreturn\n       LineNumberTable:\n         line 174: 0\n \n   public int getMode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field mode:I\n+         1: getfield      #73                 // Field mode:I\n          4: ireturn\n       LineNumberTable:\n         line 178: 0\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field name:Ljava/lang/String;\n+         1: getfield      #52                 // Field name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 183: 0\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method getLength:()J\n+         1: invokevirtual #96                 // Method getLength:()J\n          4: lreturn\n       LineNumberTable:\n         line 188: 0\n \n   public int getUserId();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field userId:I\n+         1: getfield      #66                 // Field userId:I\n          4: ireturn\n       LineNumberTable:\n         line 192: 0\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_1\n-         1: anewarray     #30                 // class java/lang/Object\n+         1: anewarray     #48                 // class java/lang/Object\n          4: dup\n          5: iconst_0\n          6: aload_0\n-         7: getfield      #15                 // Field name:Ljava/lang/String;\n+         7: getfield      #52                 // Field name:Ljava/lang/String;\n         10: aastore\n-        11: invokestatic  #31                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        11: invokestatic  #99                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         14: ireturn\n       LineNumberTable:\n         line 197: 0\n \n   public boolean isDirectory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n"}]}
