{"diffoscope-json-version": 1, "source1": "first/AbstractUnicodeExtraField.class", "source2": "second/AbstractUnicodeExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,150 +1,146 @@\n-  SHA-256 checksum 733b131afe68803ba23f93a8fcb26199e672efbae9aabb2b0a5164b0f890a189\n+  SHA-256 checksum 88f150784a15f38c658c02712e73162d76ba87c4c3642b456df08e3351786fc7\n   Compiled from \"AbstractUnicodeExtraField.java\"\n public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #36                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n   super_class: #37                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #37.#76       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #77           // java/util/zip/CRC32\n-    #3 = Methodref          #2.#76        // java/util/zip/CRC32.\"<init>\":()V\n-    #4 = Methodref          #2.#78        // java/util/zip/CRC32.update:([BII)V\n-    #5 = Methodref          #2.#79        // java/util/zip/CRC32.getValue:()J\n-    #6 = Fieldref           #36.#80       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n-    #7 = Class              #81           // org/apache/commons/compress/utils/CharsetNames\n-    #8 = String             #82           // UTF-8\n-    #9 = Methodref          #83.#84       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #10 = Fieldref           #36.#85       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n-   #11 = Class              #86           // java/io/UnsupportedEncodingException\n-   #12 = Class              #87           // java/lang/RuntimeException\n-   #13 = String             #88           // FATAL: UTF-8 encoding not supported.\n-   #14 = Methodref          #12.#89       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #15 = Methodref          #36.#90       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n-   #16 = Fieldref           #36.#91       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n-   #17 = Methodref          #92.#93       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #18 = Methodref          #94.#95       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #36.#96       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n-   #20 = Class              #97           // org/apache/commons/compress/archivers/zip/ZipShort\n-   #21 = Methodref          #20.#98       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #22 = Methodref          #36.#99       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n-   #23 = Methodref          #36.#100      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #24 = Class              #101          // java/util/zip/ZipException\n-   #25 = String             #102          // UniCode path extra data must have at least 5 bytes.\n-   #26 = Methodref          #24.#103      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Class              #104          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#76       // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #105          // Unsupported version [\n-   #30 = Methodref          #27.#106      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #27.#107      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #32 = String             #108          // ] for UniCode path extra data.\n-   #33 = Methodref          #27.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #92.#110      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #35 = Methodref          #36.#111      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n-   #36 = Class              #112          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #37 = Class              #113          // java/lang/Object\n-   #38 = Class              #114          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #1 = Methodref          #37.#73       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #74           // java/util/zip/CRC32\n+    #3 = Methodref          #2.#73        // java/util/zip/CRC32.\"<init>\":()V\n+    #4 = Methodref          #2.#75        // java/util/zip/CRC32.update:([BII)V\n+    #5 = Methodref          #2.#76        // java/util/zip/CRC32.getValue:()J\n+    #6 = Fieldref           #36.#77       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n+    #7 = Class              #78           // org/apache/commons/compress/utils/CharsetNames\n+    #8 = String             #79           // UTF-8\n+    #9 = Methodref          #50.#80       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #10 = Fieldref           #36.#81       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n+   #11 = Class              #82           // java/io/UnsupportedEncodingException\n+   #12 = Class              #83           // java/lang/RuntimeException\n+   #13 = String             #84           // FATAL: UTF-8 encoding not supported.\n+   #14 = Methodref          #12.#85       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #15 = Methodref          #36.#86       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n+   #16 = Fieldref           #36.#87       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n+   #17 = Methodref          #88.#89       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #18 = Methodref          #90.#91       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #19 = Methodref          #36.#92       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n+   #20 = Class              #93           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #21 = Methodref          #20.#94       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #22 = Methodref          #36.#95       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n+   #23 = Methodref          #36.#96       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #24 = Class              #97           // java/util/zip/ZipException\n+   #25 = String             #98           // UniCode path extra data must have at least 5 bytes.\n+   #26 = Methodref          #24.#99       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = Class              #100          // java/lang/StringBuilder\n+   #28 = Methodref          #27.#73       // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = String             #101          // Unsupported version [\n+   #30 = Methodref          #27.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = Methodref          #27.#103      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #32 = String             #104          // ] for UniCode path extra data.\n+   #33 = Methodref          #27.#105      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #34 = Methodref          #88.#106      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #35 = Methodref          #36.#107      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n+   #36 = Class              #108          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+   #37 = Class              #109          // java/lang/Object\n+   #38 = Class              #110          // org/apache/commons/compress/archivers/zip/ZipExtraField\n    #39 = Utf8               nameCRC32\n    #40 = Utf8               J\n    #41 = Utf8               unicodeName\n    #42 = Utf8               [B\n    #43 = Utf8               data\n    #44 = Utf8               <init>\n    #45 = Utf8               ()V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               (Ljava/lang/String;[BII)V\n    #49 = Utf8               StackMapTable\n-   #50 = Class              #112          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #51 = Class              #115          // java/lang/String\n-   #52 = Class              #42           // \"[B\"\n-   #53 = Class              #77           // java/util/zip/CRC32\n-   #54 = Class              #86           // java/io/UnsupportedEncodingException\n-   #55 = Utf8               (Ljava/lang/String;[B)V\n-   #56 = Utf8               assembleData\n-   #57 = Utf8               getNameCRC32\n-   #58 = Utf8               ()J\n-   #59 = Utf8               setNameCRC32\n-   #60 = Utf8               (J)V\n-   #61 = Utf8               getUnicodeName\n-   #62 = Utf8               ()[B\n-   #63 = Utf8               setUnicodeName\n-   #64 = Utf8               ([B)V\n-   #65 = Utf8               getCentralDirectoryData\n-   #66 = Utf8               getCentralDirectoryLength\n-   #67 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #68 = Utf8               getLocalFileDataData\n-   #69 = Utf8               getLocalFileDataLength\n-   #70 = Utf8               parseFromLocalFileData\n-   #71 = Utf8               ([BII)V\n-   #72 = Utf8               Exceptions\n-   #73 = Utf8               parseFromCentralDirectoryData\n-   #74 = Utf8               SourceFile\n-   #75 = Utf8               AbstractUnicodeExtraField.java\n-   #76 = NameAndType        #44:#45       // \"<init>\":()V\n-   #77 = Utf8               java/util/zip/CRC32\n-   #78 = NameAndType        #116:#71      // update:([BII)V\n-   #79 = NameAndType        #117:#58      // getValue:()J\n-   #80 = NameAndType        #39:#40       // nameCRC32:J\n-   #81 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-   #82 = Utf8               UTF-8\n-   #83 = Class              #115          // java/lang/String\n-   #84 = NameAndType        #118:#119     // getBytes:(Ljava/lang/String;)[B\n-   #85 = NameAndType        #41:#42       // unicodeName:[B\n-   #86 = Utf8               java/io/UnsupportedEncodingException\n-   #87 = Utf8               java/lang/RuntimeException\n-   #88 = Utf8               FATAL: UTF-8 encoding not supported.\n-   #89 = NameAndType        #44:#120      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #90 = NameAndType        #44:#48       // \"<init>\":(Ljava/lang/String;[BII)V\n-   #91 = NameAndType        #43:#42       // data:[B\n-   #92 = Class              #121          // org/apache/commons/compress/archivers/zip/ZipLong\n-   #93 = NameAndType        #118:#122     // getBytes:(J)[B\n-   #94 = Class              #123          // java/lang/System\n-   #95 = NameAndType        #124:#125     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #96 = NameAndType        #56:#45       // assembleData:()V\n-   #97 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #98 = NameAndType        #44:#126      // \"<init>\":(I)V\n-   #99 = NameAndType        #65:#62       // getCentralDirectoryData:()[B\n-  #100 = NameAndType        #66:#67       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #101 = Utf8               java/util/zip/ZipException\n-  #102 = Utf8               UniCode path extra data must have at least 5 bytes.\n-  #103 = NameAndType        #44:#127      // \"<init>\":(Ljava/lang/String;)V\n-  #104 = Utf8               java/lang/StringBuilder\n-  #105 = Utf8               Unsupported version [\n-  #106 = NameAndType        #128:#129     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #107 = NameAndType        #128:#130     // append:(I)Ljava/lang/StringBuilder;\n-  #108 = Utf8               ] for UniCode path extra data.\n-  #109 = NameAndType        #131:#132     // toString:()Ljava/lang/String;\n-  #110 = NameAndType        #117:#133     // getValue:([BI)J\n-  #111 = NameAndType        #70:#71       // parseFromLocalFileData:([BII)V\n-  #112 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  #113 = Utf8               java/lang/Object\n-  #114 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #115 = Utf8               java/lang/String\n-  #116 = Utf8               update\n-  #117 = Utf8               getValue\n-  #118 = Utf8               getBytes\n-  #119 = Utf8               (Ljava/lang/String;)[B\n-  #120 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #121 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #122 = Utf8               (J)[B\n-  #123 = Utf8               java/lang/System\n-  #124 = Utf8               arraycopy\n-  #125 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #126 = Utf8               (I)V\n-  #127 = Utf8               (Ljava/lang/String;)V\n-  #128 = Utf8               append\n-  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #130 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #131 = Utf8               toString\n-  #132 = Utf8               ()Ljava/lang/String;\n-  #133 = Utf8               ([BI)J\n+   #50 = Class              #111          // java/lang/String\n+   #51 = Class              #42           // \"[B\"\n+   #52 = Utf8               (Ljava/lang/String;[B)V\n+   #53 = Utf8               assembleData\n+   #54 = Utf8               getNameCRC32\n+   #55 = Utf8               ()J\n+   #56 = Utf8               setNameCRC32\n+   #57 = Utf8               (J)V\n+   #58 = Utf8               getUnicodeName\n+   #59 = Utf8               ()[B\n+   #60 = Utf8               setUnicodeName\n+   #61 = Utf8               ([B)V\n+   #62 = Utf8               getCentralDirectoryData\n+   #63 = Utf8               getCentralDirectoryLength\n+   #64 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #65 = Utf8               getLocalFileDataData\n+   #66 = Utf8               getLocalFileDataLength\n+   #67 = Utf8               parseFromLocalFileData\n+   #68 = Utf8               ([BII)V\n+   #69 = Utf8               Exceptions\n+   #70 = Utf8               parseFromCentralDirectoryData\n+   #71 = Utf8               SourceFile\n+   #72 = Utf8               AbstractUnicodeExtraField.java\n+   #73 = NameAndType        #44:#45       // \"<init>\":()V\n+   #74 = Utf8               java/util/zip/CRC32\n+   #75 = NameAndType        #112:#68      // update:([BII)V\n+   #76 = NameAndType        #113:#55      // getValue:()J\n+   #77 = NameAndType        #39:#40       // nameCRC32:J\n+   #78 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+   #79 = Utf8               UTF-8\n+   #80 = NameAndType        #114:#115     // getBytes:(Ljava/lang/String;)[B\n+   #81 = NameAndType        #41:#42       // unicodeName:[B\n+   #82 = Utf8               java/io/UnsupportedEncodingException\n+   #83 = Utf8               java/lang/RuntimeException\n+   #84 = Utf8               FATAL: UTF-8 encoding not supported.\n+   #85 = NameAndType        #44:#116      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #86 = NameAndType        #44:#48       // \"<init>\":(Ljava/lang/String;[BII)V\n+   #87 = NameAndType        #43:#42       // data:[B\n+   #88 = Class              #117          // org/apache/commons/compress/archivers/zip/ZipLong\n+   #89 = NameAndType        #114:#118     // getBytes:(J)[B\n+   #90 = Class              #119          // java/lang/System\n+   #91 = NameAndType        #120:#121     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #92 = NameAndType        #53:#45       // assembleData:()V\n+   #93 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #94 = NameAndType        #44:#122      // \"<init>\":(I)V\n+   #95 = NameAndType        #62:#59       // getCentralDirectoryData:()[B\n+   #96 = NameAndType        #63:#64       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #97 = Utf8               java/util/zip/ZipException\n+   #98 = Utf8               UniCode path extra data must have at least 5 bytes.\n+   #99 = NameAndType        #44:#123      // \"<init>\":(Ljava/lang/String;)V\n+  #100 = Utf8               java/lang/StringBuilder\n+  #101 = Utf8               Unsupported version [\n+  #102 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #103 = NameAndType        #124:#126     // append:(I)Ljava/lang/StringBuilder;\n+  #104 = Utf8               ] for UniCode path extra data.\n+  #105 = NameAndType        #127:#128     // toString:()Ljava/lang/String;\n+  #106 = NameAndType        #113:#129     // getValue:([BI)J\n+  #107 = NameAndType        #67:#68       // parseFromLocalFileData:([BII)V\n+  #108 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  #109 = Utf8               java/lang/Object\n+  #110 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #111 = Utf8               java/lang/String\n+  #112 = Utf8               update\n+  #113 = Utf8               getValue\n+  #114 = Utf8               getBytes\n+  #115 = Utf8               (Ljava/lang/String;)[B\n+  #116 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #117 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #118 = Utf8               (J)[B\n+  #119 = Utf8               java/lang/System\n+  #120 = Utf8               arraycopy\n+  #121 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #122 = Utf8               (I)V\n+  #123 = Utf8               (Ljava/lang/String;)V\n+  #124 = Utf8               append\n+  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #126 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #127 = Utf8               toString\n+  #128 = Utf8               ()Ljava/lang/String;\n+  #129 = Utf8               ([BI)J\n {\n   private long nameCRC32;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] unicodeName;\n     descriptor: [B\n"}]}
