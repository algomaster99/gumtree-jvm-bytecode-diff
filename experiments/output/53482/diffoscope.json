{"diffoscope-json-version": 1, "source1": "first/ZipEncoding.class", "source2": "second/ZipEncoding.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,32 +1,32 @@\n-  SHA-256 checksum 1c6e4cd4380edba128671e1e33b1dd99bf91add9292385b9046681ac290e5b27\n+  SHA-256 checksum 30ff2a9c5f289ff3608cd71a2f5d9c4df93f3d5450b9d42e33ead5cc7076c6a2\n   Compiled from \"ZipEncoding.java\"\n public interface org.apache.commons.compress.archivers.zip.ZipEncoding\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  super_class: #2                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Class              #13            // org/apache/commons/compress/archivers/zip/ZipEncoding\n-   #2 = Class              #14            // java/lang/Object\n-   #3 = Utf8               canEncode\n-   #4 = Utf8               (Ljava/lang/String;)Z\n-   #5 = Utf8               encode\n-   #6 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-   #7 = Utf8               Exceptions\n-   #8 = Class              #15            // java/io/IOException\n-   #9 = Utf8               decode\n-  #10 = Utf8               ([B)Ljava/lang/String;\n-  #11 = Utf8               SourceFile\n-  #12 = Utf8               ZipEncoding.java\n-  #13 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #14 = Utf8               java/lang/Object\n-  #15 = Utf8               java/io/IOException\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipEncoding\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               canEncode\n+   #6 = Utf8               (Ljava/lang/String;)Z\n+   #7 = Utf8               encode\n+   #8 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Utf8               decode\n+  #13 = Utf8               ([B)Ljava/lang/String;\n+  #14 = Utf8               SourceFile\n+  #15 = Utf8               ZipEncoding.java\n {\n   public abstract boolean canEncode(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract java.nio.ByteBuffer encode(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n"}]}
