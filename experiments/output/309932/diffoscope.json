{"diffoscope-json-version": 1, "source1": "first/ScatterZipOutputStream$ZipEntryWriter.class", "source2": "second/ScatterZipOutputStream$ZipEntryWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum a232e19a2b50a707bbdc73234c26efb0f3e0c9a94a02153eb2894ac78e5f1f0a\n+  SHA-256 checksum 49b2b41eb4cf823a5e9cefb07f36732c1178abd96e0fccae401b42e269e1cd59\n   Compiled from \"ScatterZipOutputStream.java\"\n public class org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter implements java.io.Closeable\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  super_class: #21                        // java/lang/Object\n+  this_class: #29                         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #21.#45        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #46.#47        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-   #3 = InterfaceMethodref #48.#49        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n-   #4 = Methodref          #46.#50        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-   #5 = InterfaceMethodref #51.#52        // java/util/Queue.iterator:()Ljava/util/Iterator;\n-   #6 = Fieldref           #20.#53        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIterator:Ljava/util/Iterator;\n-   #7 = InterfaceMethodref #48.#54        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n-   #8 = Fieldref           #20.#55        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIteratorData:Ljava/io/InputStream;\n-   #9 = Methodref          #56.#57        // java/io/InputStream.close:()V\n-  #10 = InterfaceMethodref #58.#59        // java/util/Iterator.next:()Ljava/lang/Object;\n-  #11 = Class              #60            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-  #12 = Class              #61            // org/apache/commons/compress/utils/BoundedInputStream\n-  #13 = Fieldref           #11.#62        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-  #14 = Methodref          #12.#63        // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-  #15 = Methodref          #11.#64        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #16 = Methodref          #42.#65        // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #17 = Methodref          #12.#57        // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-  #18 = Class              #66            // java/lang/Throwable\n-  #19 = Methodref          #18.#67        // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #20 = Class              #68            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #21 = Class              #70            // java/lang/Object\n-  #22 = Class              #71            // java/io/Closeable\n-  #23 = Utf8               itemsIterator\n-  #24 = Utf8               Ljava/util/Iterator;\n-  #25 = Utf8               Signature\n-  #26 = Utf8               CompressedEntry\n-  #27 = Utf8               InnerClasses\n-  #28 = Utf8               Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n-  #29 = Utf8               itemsIteratorData\n-  #30 = Utf8               Ljava/io/InputStream;\n-  #31 = Utf8               <init>\n-  #32 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #72            // java/io/IOException\n-  #37 = Utf8               close\n-  #38 = Utf8               ()V\n-  #39 = Utf8               StackMapTable\n-  #40 = Utf8               writeNextZipEntry\n-  #41 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-  #42 = Class              #73            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #43 = Utf8               SourceFile\n-  #44 = Utf8               ScatterZipOutputStream.java\n-  #45 = NameAndType        #31:#38        // \"<init>\":()V\n-  #46 = Class              #74            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #47 = NameAndType        #75:#76        // access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #48 = Class              #77            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #49 = NameAndType        #78:#38        // closeForWriting:()V\n-  #50 = NameAndType        #79:#80        // access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-  #51 = Class              #81            // java/util/Queue\n-  #52 = NameAndType        #82:#83        // iterator:()Ljava/util/Iterator;\n-  #53 = NameAndType        #23:#24        // itemsIterator:Ljava/util/Iterator;\n-  #54 = NameAndType        #84:#85        // getInputStream:()Ljava/io/InputStream;\n-  #55 = NameAndType        #29:#30        // itemsIteratorData:Ljava/io/InputStream;\n-  #56 = Class              #86            // java/io/InputStream\n-  #57 = NameAndType        #37:#38        // close:()V\n-  #58 = Class              #87            // java/util/Iterator\n-  #59 = NameAndType        #88:#89        // next:()Ljava/lang/Object;\n-  #60 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-  #61 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #62 = NameAndType        #90:#91        // compressedSize:J\n-  #63 = NameAndType        #31:#92        // \"<init>\":(Ljava/io/InputStream;J)V\n-  #64 = NameAndType        #93:#94        // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #65 = NameAndType        #95:#96        // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #66 = Utf8               java/lang/Throwable\n-  #67 = NameAndType        #97:#98        // addSuppressed:(Ljava/lang/Throwable;)V\n-  #68 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #69 = Utf8               ZipEntryWriter\n-  #70 = Utf8               java/lang/Object\n-  #71 = Utf8               java/io/Closeable\n-  #72 = Utf8               java/io/IOException\n-  #73 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #74 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #75 = Utf8               access$000\n-  #76 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #77 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #78 = Utf8               closeForWriting\n-  #79 = Utf8               access$100\n-  #80 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-  #81 = Utf8               java/util/Queue\n-  #82 = Utf8               iterator\n-  #83 = Utf8               ()Ljava/util/Iterator;\n-  #84 = Utf8               getInputStream\n-  #85 = Utf8               ()Ljava/io/InputStream;\n-  #86 = Utf8               java/io/InputStream\n-  #87 = Utf8               java/util/Iterator\n-  #88 = Utf8               next\n-  #89 = Utf8               ()Ljava/lang/Object;\n-  #90 = Utf8               compressedSize\n-  #91 = Utf8               J\n-  #92 = Utf8               (Ljava/io/InputStream;J)V\n-  #93 = Utf8               transferToArchiveEntry\n-  #94 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #95 = Utf8               addRawArchiveEntry\n-  #96 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #97 = Utf8               addSuppressed\n-  #98 = Utf8               (Ljava/lang/Throwable;)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #9 = NameAndType        #11:#12        // access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #10 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  #11 = Utf8               access$000\n+  #12 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #13 = InterfaceMethodref #14.#15        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n+  #14 = Class              #16            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #15 = NameAndType        #17:#6         // closeForWriting:()V\n+  #16 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #17 = Utf8               closeForWriting\n+  #18 = Methodref          #8.#19         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+  #19 = NameAndType        #20:#21        // access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+  #20 = Utf8               access$100\n+  #21 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+  #22 = InterfaceMethodref #23.#24        // java/util/Queue.iterator:()Ljava/util/Iterator;\n+  #23 = Class              #25            // java/util/Queue\n+  #24 = NameAndType        #26:#27        // iterator:()Ljava/util/Iterator;\n+  #25 = Utf8               java/util/Queue\n+  #26 = Utf8               iterator\n+  #27 = Utf8               ()Ljava/util/Iterator;\n+  #28 = Fieldref           #29.#30        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIterator:Ljava/util/Iterator;\n+  #29 = Class              #31            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #30 = NameAndType        #32:#33        // itemsIterator:Ljava/util/Iterator;\n+  #31 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #32 = Utf8               itemsIterator\n+  #33 = Utf8               Ljava/util/Iterator;\n+  #34 = InterfaceMethodref #14.#35        // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n+  #35 = NameAndType        #36:#37        // getInputStream:()Ljava/io/InputStream;\n+  #36 = Utf8               getInputStream\n+  #37 = Utf8               ()Ljava/io/InputStream;\n+  #38 = Fieldref           #29.#39        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.itemsIteratorData:Ljava/io/InputStream;\n+  #39 = NameAndType        #40:#41        // itemsIteratorData:Ljava/io/InputStream;\n+  #40 = Utf8               itemsIteratorData\n+  #41 = Utf8               Ljava/io/InputStream;\n+  #42 = Methodref          #43.#44        // java/io/InputStream.close:()V\n+  #43 = Class              #45            // java/io/InputStream\n+  #44 = NameAndType        #46:#6         // close:()V\n+  #45 = Utf8               java/io/InputStream\n+  #46 = Utf8               close\n+  #47 = InterfaceMethodref #48.#49        // java/util/Iterator.next:()Ljava/lang/Object;\n+  #48 = Class              #50            // java/util/Iterator\n+  #49 = NameAndType        #51:#52        // next:()Ljava/lang/Object;\n+  #50 = Utf8               java/util/Iterator\n+  #51 = Utf8               next\n+  #52 = Utf8               ()Ljava/lang/Object;\n+  #53 = Class              #54            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+  #54 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+  #55 = Class              #56            // org/apache/commons/compress/utils/BoundedInputStream\n+  #56 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #57 = Fieldref           #53.#58        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+  #58 = NameAndType        #59:#60        // compressedSize:J\n+  #59 = Utf8               compressedSize\n+  #60 = Utf8               J\n+  #61 = Methodref          #55.#62        // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #62 = NameAndType        #5:#63         // \"<init>\":(Ljava/io/InputStream;J)V\n+  #63 = Utf8               (Ljava/io/InputStream;J)V\n+  #64 = Methodref          #53.#65        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #65 = NameAndType        #66:#67        // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #66 = Utf8               transferToArchiveEntry\n+  #67 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #68 = Methodref          #69.#70        // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #69 = Class              #71            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #70 = NameAndType        #72:#73        // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #71 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #72 = Utf8               addRawArchiveEntry\n+  #73 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #74 = Methodref          #55.#44        // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+  #75 = Class              #76            // java/lang/Throwable\n+  #76 = Utf8               java/lang/Throwable\n+  #77 = Methodref          #75.#78        // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #78 = NameAndType        #79:#80        // addSuppressed:(Ljava/lang/Throwable;)V\n+  #79 = Utf8               addSuppressed\n+  #80 = Utf8               (Ljava/lang/Throwable;)V\n+  #81 = Class              #82            // java/io/Closeable\n+  #82 = Utf8               java/io/Closeable\n+  #83 = Utf8               Signature\n+  #84 = Utf8               Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n+  #85 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n+  #86 = Utf8               Code\n+  #87 = Utf8               LineNumberTable\n+  #88 = Utf8               Exceptions\n+  #89 = Class              #90            // java/io/IOException\n+  #90 = Utf8               java/io/IOException\n+  #91 = Utf8               StackMapTable\n+  #92 = Utf8               writeNextZipEntry\n+  #93 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #94 = Utf8               SourceFile\n+  #95 = Utf8               ScatterZipOutputStream.java\n+  #96 = Utf8               InnerClasses\n+  #97 = Utf8               ZipEntryWriter\n+  #98 = Utf8               CompressedEntry\n {\n   private final java.util.Iterator<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry> itemsIterator;\n     descriptor: Ljava/util/Iterator;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #28                          // Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n+    Signature: #84                          // Ljava/util/Iterator<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n \n   private final java.io.InputStream itemsIteratorData;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter(org.apache.commons.compress.archivers.zip.ScatterZipOutputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n-         5: invokestatic  #2                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-         8: invokeinterface #3,  1            // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n+         5: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+         8: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n         13: aload_0\n         14: aload_1\n-        15: invokestatic  #4                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-        18: invokeinterface #5,  1            // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n-        23: putfield      #6                  // Field itemsIterator:Ljava/util/Iterator;\n+        15: invokestatic  #18                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$100:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+        18: invokeinterface #22,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n+        23: putfield      #28                 // Field itemsIterator:Ljava/util/Iterator;\n         26: aload_0\n         27: aload_1\n-        28: invokestatic  #2                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-        31: invokeinterface #7,  1            // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n-        36: putfield      #8                  // Field itemsIteratorData:Ljava/io/InputStream;\n+        28: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.access$000:(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+        31: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n+        36: putfield      #38                 // Field itemsIteratorData:Ljava/io/InputStream;\n         39: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 4\n         line 131: 13\n         line 132: 26\n         line 133: 39\n@@ -148,19 +148,19 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field itemsIteratorData:Ljava/io/InputStream;\n+         1: getfield      #38                 // Field itemsIteratorData:Ljava/io/InputStream;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #8                  // Field itemsIteratorData:Ljava/io/InputStream;\n-        11: invokevirtual #9                  // Method java/io/InputStream.close:()V\n+         8: getfield      #38                 // Field itemsIteratorData:Ljava/io/InputStream;\n+        11: invokevirtual #42                 // Method java/io/InputStream.close:()V\n         14: return\n       LineNumberTable:\n         line 137: 0\n         line 138: 7\n         line 140: 14\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n@@ -169,42 +169,42 @@\n \n   public void writeNextZipEntry(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field itemsIterator:Ljava/util/Iterator;\n-         4: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-         9: checkcast     #11                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+         1: getfield      #28                 // Field itemsIterator:Ljava/util/Iterator;\n+         4: invokeinterface #47,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+         9: checkcast     #53                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n         12: astore_2\n-        13: new           #12                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        13: new           #55                 // class org/apache/commons/compress/utils/BoundedInputStream\n         16: dup\n         17: aload_0\n-        18: getfield      #8                  // Field itemsIteratorData:Ljava/io/InputStream;\n+        18: getfield      #38                 // Field itemsIteratorData:Ljava/io/InputStream;\n         21: aload_2\n-        22: getfield      #13                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-        25: invokespecial #14                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        22: getfield      #57                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+        25: invokespecial #61                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         28: astore_3\n         29: aload_1\n         30: aload_2\n-        31: invokevirtual #15                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        31: invokevirtual #64                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n         34: aload_3\n-        35: invokevirtual #16                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+        35: invokevirtual #68                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n         38: aload_3\n-        39: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        39: invokevirtual #74                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n         42: goto          66\n         45: astore        4\n         47: aload_3\n-        48: invokevirtual #17                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        48: invokevirtual #74                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n         51: goto          63\n         54: astore        5\n         56: aload         4\n         58: aload         5\n-        60: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        60: invokevirtual #77                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         63: aload         4\n         65: athrow\n         66: return\n       Exception table:\n          from    to  target type\n             29    38    45   Class java/lang/Throwable\n             47    51    54   Class java/lang/Throwable\n@@ -228,9 +228,9 @@\n         frame_type = 249 /* chop */\n           offset_delta = 2\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ScatterZipOutputStream.java\"\n InnerClasses:\n-  private static #26= #11 of #46;         // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  public static #69= #20 of #46;          // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  public static #97= #29 of #8;           // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  private static #98= #53 of #8;          // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n"}]}
