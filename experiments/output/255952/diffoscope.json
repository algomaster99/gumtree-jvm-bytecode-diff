{"diffoscope-json-version": 1, "source1": "first/CPString.class", "source2": "second/CPString.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,42 +7,39 @@\n public class CPString extends CPConstant\n {\n     private transient int nameIndex;\n     private final CPUTF8 name;\n     private boolean hashcodeComputed;\n     private int cachedHashCode;\n     \n-    public CPString(final CPUTF8 value, final int globalIndex) {\n-        super((byte)8, (Object)value, globalIndex);\n-        this.name = value;\n+    public CPString(final CPUTF8 name, final int n) {\n+        super((byte)8, (Object)name, n);\n+        this.name = name;\n     }\n     \n-    protected void writeBody(final DataOutputStream dos) throws IOException {\n-        dos.writeShort(this.nameIndex);\n+    protected void writeBody(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeShort(this.nameIndex);\n     }\n     \n     public String toString() {\n         return \"String: \" + this.getValue();\n     }\n     \n-    protected void resolve(final ClassConstantPool pool) {\n-        super.resolve(pool);\n-        this.nameIndex = pool.indexOf((ClassFileEntry)this.name);\n+    protected void resolve(final ClassConstantPool classConstantPool) {\n+        super.resolve(classConstantPool);\n+        this.nameIndex = classConstantPool.indexOf((ClassFileEntry)this.name);\n     }\n     \n     protected ClassFileEntry[] getNestedClassFileEntries() {\n         return new ClassFileEntry[] { (ClassFileEntry)this.name };\n     }\n     \n     private void generateHashCode() {\n         this.hashcodeComputed = true;\n-        final int PRIME = 31;\n-        int result = 1;\n-        result = 31 * result + this.name.hashCode();\n-        this.cachedHashCode = result;\n+        this.cachedHashCode = 31 * 1 + this.name.hashCode();\n     }\n     \n     public int hashCode() {\n         if (!this.hashcodeComputed) {\n             this.generateHashCode();\n         }\n         return this.cachedHashCode;\n"}]}
