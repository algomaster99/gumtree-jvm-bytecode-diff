{"diffoscope-json-version": 1, "source1": "first/ClassBands.class", "source2": "second/ClassBands.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -199,15 +199,15 @@\n         }\n     }\n     \n     public void addClass(final int major, int flags, final String className, final String signature, final String superName, final String[] interfaces) {\n         this.class_this[this.index] = this.cpBands.getCPClass(className);\n         this.class_super[this.index] = this.cpBands.getCPClass(superName);\n         this.class_interface_count[this.index] = interfaces.length;\n-        Arrays.setAll(this.class_interface[this.index] = new CPClass[interfaces.length], i -> this.cpBands.getCPClass(interfaces[i]));\n+        Arrays.setAll(this.class_interface[this.index] = new CPClass[interfaces.length], i -> this.cpBands.getCPClass(array[i]));\n         this.major_versions[this.index] = major;\n         this.class_flags[this.index] = flags;\n         if (!this.anySyntheticClasses && (flags & 0x1000) != 0x0 && this.segment.getCurrentClassReader().hasSyntheticAttributes()) {\n             this.cpBands.addCPUtf8(\"Synthetic\");\n             this.anySyntheticClasses = true;\n         }\n         if ((flags & 0x20000) != 0x0) {\n@@ -400,36 +400,44 @@\n         final Comparator<NewAttributeBands> comparator = (arg0, arg1) -> arg0.getFlagIndex() - arg1.getFlagIndex();\n         this.classAttributeBands.sort(comparator);\n         this.methodAttributeBands.sort(comparator);\n         this.fieldAttributeBands.sort(comparator);\n         this.codeAttributeBands.sort(comparator);\n         for (final NewAttributeBands bands : this.classAttributeBands) {\n             if (bands.isUsedAtLeastOnce()) {\n-                for (final int backwardsCallCount : bands.numBackwardsCalls()) {\n+                int[] numBackwardsCalls;\n+                for (int length = (numBackwardsCalls = bands.numBackwardsCalls()).length, l = 0; l < length; ++l) {\n+                    final int backwardsCallCount = numBackwardsCalls[l];\n                     classAttrCalls.add(backwardsCallCount);\n                 }\n             }\n         }\n         for (final NewAttributeBands bands : this.methodAttributeBands) {\n             if (bands.isUsedAtLeastOnce()) {\n-                for (final int backwardsCallCount : bands.numBackwardsCalls()) {\n+                int[] numBackwardsCalls2;\n+                for (int length2 = (numBackwardsCalls2 = bands.numBackwardsCalls()).length, n3 = 0; n3 < length2; ++n3) {\n+                    final int backwardsCallCount = numBackwardsCalls2[n3];\n                     methodAttrCalls.add(backwardsCallCount);\n                 }\n             }\n         }\n         for (final NewAttributeBands bands : this.fieldAttributeBands) {\n             if (bands.isUsedAtLeastOnce()) {\n-                for (final int backwardsCallCount : bands.numBackwardsCalls()) {\n+                int[] numBackwardsCalls3;\n+                for (int length3 = (numBackwardsCalls3 = bands.numBackwardsCalls()).length, n4 = 0; n4 < length3; ++n4) {\n+                    final int backwardsCallCount = numBackwardsCalls3[n4];\n                     fieldAttrCalls.add(backwardsCallCount);\n                 }\n             }\n         }\n         for (final NewAttributeBands bands : this.codeAttributeBands) {\n             if (bands.isUsedAtLeastOnce()) {\n-                for (final int backwardsCallCount : bands.numBackwardsCalls()) {\n+                int[] numBackwardsCalls4;\n+                for (int length4 = (numBackwardsCalls4 = bands.numBackwardsCalls()).length, n5 = 0; n5 < length4; ++n5) {\n+                    final int backwardsCallCount = numBackwardsCalls4[n5];\n                     codeAttrCalls.add(backwardsCallCount);\n                 }\n             }\n         }\n         this.class_attr_calls = classAttrCalls.toArray();\n         this.field_attr_calls = fieldAttrCalls.toArray();\n         this.method_attr_calls = methodAttrCalls.toArray();\n@@ -446,17 +454,21 @@\n         PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from class_super[\" + this.class_super.length + \"]\");\n         encodedBand = this.encodeBandInt(\"class_interface_count\", this.class_interface_count, Codec.DELTA5);\n         out.write(encodedBand);\n         PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from class_interface_count[\" + this.class_interface_count.length + \"]\");\n         final int totalInterfaces = this.sum(this.class_interface_count);\n         final int[] classInterface = new int[totalInterfaces];\n         int k = 0;\n-        for (final CPClass[] element : this.class_interface) {\n+        CPClass[][] class_interface;\n+        for (int length = (class_interface = this.class_interface).length, n = 0; n < length; ++n) {\n+            final CPClass[] element = class_interface[n];\n             if (element != null) {\n-                for (final CPClass cpClass : element) {\n+                CPClass[] array;\n+                for (int length2 = (array = element).length, n2 = 0; n2 < length2; ++n2) {\n+                    final CPClass cpClass = array[n2];\n                     classInterface[k] = cpClass.getIndex();\n                     ++k;\n                 }\n             }\n         }\n         encodedBand = this.encodeBandInt(\"class_interface\", classInterface, Codec.DELTA5);\n         out.write(encodedBand);\n@@ -804,15 +816,15 @@\n     }\n     \n     public void addSourceFile(final String source) {\n         String implicitSourceFileName = this.class_this[this.index].toString();\n         if (implicitSourceFileName.indexOf(36) != -1) {\n             implicitSourceFileName = implicitSourceFileName.substring(0, implicitSourceFileName.indexOf(36));\n         }\n-        implicitSourceFileName = implicitSourceFileName.substring(implicitSourceFileName.lastIndexOf(47) + 1) + \".java\";\n+        implicitSourceFileName = String.valueOf(implicitSourceFileName.substring(implicitSourceFileName.lastIndexOf(47) + 1)) + \".java\";\n         if (source.equals(implicitSourceFileName)) {\n             this.classSourceFile.add(null);\n         }\n         else {\n             this.classSourceFile.add(this.cpBands.getCPUtf8(source));\n         }\n         final long[] class_flags = this.class_flags;\n"}]}
