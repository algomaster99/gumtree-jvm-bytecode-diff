{"diffoscope-json-version": 1, "source1": "first/Range.class", "source2": "second/Range.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,222 +1,222 @@\n-  SHA-256 checksum 12fd1ef82142ac31c8f9e658cdcfeffef4f8e615d9579133ac68c06c164ba25f\n+  SHA-256 checksum c31403f441a02706195a4ca6935218f737be2ec51760fbb694c116d3e7b137ce\n   Compiled from \"Range.java\"\n public final class org.apache.commons.lang3.Range<T extends java.lang.Object> extends java.lang.Object implements java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #2                          // org/apache/commons/lang3/Range\n-  super_class: #20                        // java/lang/Object\n+  super_class: #12                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 24, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#131       // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-    #2 = Class              #132          // org/apache/commons/lang3/Range\n-    #3 = Methodref          #2.#133       // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-    #4 = Methodref          #20.#134      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #135          // java/lang/IllegalArgumentException\n-    #6 = Class              #136          // java/lang/StringBuilder\n-    #7 = Methodref          #6.#134       // java/lang/StringBuilder.\"<init>\":()V\n-    #8 = String             #137          // Elements in a range must not be null: element1=\n-    #9 = Methodref          #6.#138       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #6.#139       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #11 = String             #140          // , element2=\n-   #12 = Methodref          #6.#141       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #13 = Methodref          #5.#142       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Fieldref           #39.#143      // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-   #15 = Fieldref           #2.#144       // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n-   #16 = InterfaceMethodref #86.#145      // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-   #17 = Fieldref           #2.#146       // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n-   #18 = Fieldref           #2.#147       // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n-   #19 = String             #148          // Element is null\n-   #20 = Class              #149          // java/lang/Object\n-   #21 = Methodref          #150.#151     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Methodref          #2.#152       // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n-   #23 = Methodref          #2.#153       // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n-   #24 = Methodref          #2.#154       // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n-   #25 = Methodref          #2.#155       // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-   #26 = String             #156          // Cannot calculate intersection with non-overlapping range %s\n-   #27 = Methodref          #157.#158     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #28 = Methodref          #2.#159       // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n-   #29 = Methodref          #2.#160       // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n-   #30 = Methodref          #20.#161      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #31 = Methodref          #20.#159      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #32 = Fieldref           #2.#162       // org/apache/commons/lang3/Range.hashCode:I\n-   #33 = Methodref          #20.#163      // java/lang/Object.hashCode:()I\n-   #34 = Fieldref           #2.#164       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n-   #35 = String             #165          // [\n-   #36 = String             #166          // ..\n-   #37 = String             #167          // ]\n-   #38 = Class              #168          // java/io/Serializable\n-   #39 = Class              #169          // org/apache/commons/lang3/Range$ComparableComparator\n-   #40 = Utf8               ComparableComparator\n-   #41 = Utf8               InnerClasses\n-   #42 = Utf8               serialVersionUID\n-   #43 = Utf8               J\n-   #44 = Utf8               ConstantValue\n-   #45 = Long               1l\n+    #1 = Methodref          #2.#3         // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+    #2 = Class              #4            // org/apache/commons/lang3/Range\n+    #3 = NameAndType        #5:#6         // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+    #4 = Utf8               org/apache/commons/lang3/Range\n+    #5 = Utf8               between\n+    #6 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+    #7 = Methodref          #2.#8         // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+    #8 = NameAndType        #9:#10        // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+    #9 = Utf8               <init>\n+   #10 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+   #11 = Methodref          #12.#13       // java/lang/Object.\"<init>\":()V\n+   #12 = Class              #14           // java/lang/Object\n+   #13 = NameAndType        #9:#15        // \"<init>\":()V\n+   #14 = Utf8               java/lang/Object\n+   #15 = Utf8               ()V\n+   #16 = Class              #17           // java/lang/IllegalArgumentException\n+   #17 = Utf8               java/lang/IllegalArgumentException\n+   #18 = Class              #19           // java/lang/StringBuilder\n+   #19 = Utf8               java/lang/StringBuilder\n+   #20 = Methodref          #18.#13       // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = String             #22           // Elements in a range must not be null: element1=\n+   #22 = Utf8               Elements in a range must not be null: element1=\n+   #23 = Methodref          #18.#24       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = NameAndType        #25:#26       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Utf8               append\n+   #26 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #18.#28       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #28 = NameAndType        #25:#29       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #29 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #30 = String             #31           // , element2=\n+   #31 = Utf8               , element2=\n+   #32 = Methodref          #18.#33       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #33 = NameAndType        #34:#35       // toString:()Ljava/lang/String;\n+   #34 = Utf8               toString\n+   #35 = Utf8               ()Ljava/lang/String;\n+   #36 = Methodref          #16.#37       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = NameAndType        #9:#38        // \"<init>\":(Ljava/lang/String;)V\n+   #38 = Utf8               (Ljava/lang/String;)V\n+   #39 = Fieldref           #40.#41       // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+   #40 = Class              #42           // org/apache/commons/lang3/Range$ComparableComparator\n+   #41 = NameAndType        #43:#44       // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+   #42 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n+   #43 = Utf8               INSTANCE\n+   #44 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n+   #45 = Fieldref           #2.#46        // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n+   #46 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n    #47 = Utf8               comparator\n    #48 = Utf8               Ljava/util/Comparator;\n-   #49 = Utf8               Signature\n-   #50 = Utf8               Ljava/util/Comparator<TT;>;\n-   #51 = Utf8               minimum\n-   #52 = Utf8               Ljava/lang/Object;\n-   #53 = Utf8               TT;\n-   #54 = Utf8               maximum\n-   #55 = Utf8               hashCode\n-   #56 = Utf8               I\n-   #57 = Utf8               toString\n-   #58 = Utf8               Ljava/lang/String;\n-   #59 = Utf8               is\n-   #60 = Utf8               (Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n-   #61 = Utf8               Code\n-   #62 = Utf8               LineNumberTable\n-   #63 = Utf8               LocalVariableTable\n-   #64 = Utf8               element\n-   #65 = Utf8               Ljava/lang/Comparable;\n-   #66 = Utf8               LocalVariableTypeTable\n-   #67 = Utf8               <T::Ljava/lang/Comparable<TT;>;>(TT;)Lorg/apache/commons/lang3/Range<TT;>;\n-   #68 = Utf8               (Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-   #69 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n-   #70 = Utf8               between\n-   #71 = Utf8               (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n-   #72 = Utf8               fromInclusive\n-   #73 = Utf8               toInclusive\n-   #74 = Utf8               <T::Ljava/lang/Comparable<TT;>;>(TT;TT;)Lorg/apache/commons/lang3/Range<TT;>;\n-   #75 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-   #76 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n-   #77 = Utf8               <init>\n-   #78 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-   #79 = Utf8               this\n-   #80 = Utf8               Lorg/apache/commons/lang3/Range;\n-   #81 = Utf8               element1\n-   #82 = Utf8               element2\n-   #83 = Utf8               comp\n-   #84 = Utf8               Lorg/apache/commons/lang3/Range<TT;>;\n-   #85 = Utf8               StackMapTable\n-   #86 = Class              #170          // java/util/Comparator\n-   #87 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n-   #88 = Utf8               getMinimum\n-   #89 = Utf8               ()Ljava/lang/Object;\n-   #90 = Utf8               ()TT;\n-   #91 = Utf8               getMaximum\n-   #92 = Utf8               getComparator\n-   #93 = Utf8               ()Ljava/util/Comparator;\n-   #94 = Utf8               ()Ljava/util/Comparator<TT;>;\n-   #95 = Utf8               isNaturalOrdering\n-   #96 = Utf8               ()Z\n-   #97 = Utf8               contains\n-   #98 = Utf8               (Ljava/lang/Object;)Z\n-   #99 = Utf8               (TT;)Z\n-  #100 = Utf8               isAfter\n-  #101 = Utf8               isStartedBy\n-  #102 = Utf8               isEndedBy\n-  #103 = Utf8               isBefore\n-  #104 = Utf8               elementCompareTo\n-  #105 = Utf8               (Ljava/lang/Object;)I\n-  #106 = Utf8               (TT;)I\n-  #107 = Utf8               containsRange\n-  #108 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n-  #109 = Utf8               otherRange\n-  #110 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n-  #111 = Utf8               isAfterRange\n-  #112 = Utf8               isOverlappedBy\n-  #113 = Utf8               isBeforeRange\n-  #114 = Utf8               intersectionWith\n-  #115 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n-  #116 = Utf8               other\n-  #117 = Utf8               min\n-  #118 = Utf8               max\n-  #119 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n-  #120 = Utf8               equals\n-  #121 = Utf8               range\n-  #122 = Utf8               obj\n-  #123 = Utf8               ()I\n-  #124 = Utf8               result\n-  #125 = Utf8               ()Ljava/lang/String;\n-  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #127 = Utf8               format\n-  #128 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n-  #129 = Utf8               SourceFile\n-  #130 = Utf8               Range.java\n-  #131 = NameAndType        #70:#75       // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-  #132 = Utf8               org/apache/commons/lang3/Range\n-  #133 = NameAndType        #77:#78       // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-  #134 = NameAndType        #77:#171      // \"<init>\":()V\n-  #135 = Utf8               java/lang/IllegalArgumentException\n-  #136 = Utf8               java/lang/StringBuilder\n-  #137 = Utf8               Elements in a range must not be null: element1=\n-  #138 = NameAndType        #172:#173     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #139 = NameAndType        #172:#174     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #140 = Utf8               , element2=\n-  #141 = NameAndType        #57:#125      // toString:()Ljava/lang/String;\n-  #142 = NameAndType        #77:#175      // \"<init>\":(Ljava/lang/String;)V\n-  #143 = NameAndType        #176:#177     // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #144 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n-  #145 = NameAndType        #178:#179     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-  #146 = NameAndType        #51:#52       // minimum:Ljava/lang/Object;\n-  #147 = NameAndType        #54:#52       // maximum:Ljava/lang/Object;\n-  #148 = Utf8               Element is null\n-  #149 = Utf8               java/lang/Object\n-  #150 = Class              #180          // org/apache/commons/lang3/Validate\n-  #151 = NameAndType        #181:#182     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #152 = NameAndType        #100:#98      // isAfter:(Ljava/lang/Object;)Z\n-  #153 = NameAndType        #103:#98      // isBefore:(Ljava/lang/Object;)Z\n-  #154 = NameAndType        #97:#98       // contains:(Ljava/lang/Object;)Z\n-  #155 = NameAndType        #112:#108     // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-  #156 = Utf8               Cannot calculate intersection with non-overlapping range %s\n-  #157 = Class              #183          // java/lang/String\n-  #158 = NameAndType        #127:#184     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #159 = NameAndType        #120:#98      // equals:(Ljava/lang/Object;)Z\n-  #160 = NameAndType        #92:#93       // getComparator:()Ljava/util/Comparator;\n-  #161 = NameAndType        #185:#186     // getClass:()Ljava/lang/Class;\n-  #162 = NameAndType        #55:#56       // hashCode:I\n-  #163 = NameAndType        #55:#123      // hashCode:()I\n-  #164 = NameAndType        #57:#58       // toString:Ljava/lang/String;\n-  #165 = Utf8               [\n-  #166 = Utf8               ..\n-  #167 = Utf8               ]\n-  #168 = Utf8               java/io/Serializable\n-  #169 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n-  #170 = Utf8               java/util/Comparator\n-  #171 = Utf8               ()V\n-  #172 = Utf8               append\n-  #173 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #174 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #175 = Utf8               (Ljava/lang/String;)V\n-  #176 = Utf8               INSTANCE\n-  #177 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #178 = Utf8               compare\n-  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #180 = Utf8               org/apache/commons/lang3/Validate\n-  #181 = Utf8               notNull\n-  #182 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #183 = Utf8               java/lang/String\n-  #184 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #185 = Utf8               getClass\n-  #186 = Utf8               ()Ljava/lang/Class;\n+   #49 = InterfaceMethodref #50.#51       // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+   #50 = Class              #52           // java/util/Comparator\n+   #51 = NameAndType        #53:#54       // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+   #52 = Utf8               java/util/Comparator\n+   #53 = Utf8               compare\n+   #54 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n+   #55 = Fieldref           #2.#56        // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n+   #56 = NameAndType        #57:#58       // minimum:Ljava/lang/Object;\n+   #57 = Utf8               minimum\n+   #58 = Utf8               Ljava/lang/Object;\n+   #59 = Fieldref           #2.#60        // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n+   #60 = NameAndType        #61:#58       // maximum:Ljava/lang/Object;\n+   #61 = Utf8               maximum\n+   #62 = String             #63           // Element is null\n+   #63 = Utf8               Element is null\n+   #64 = Methodref          #65.#66       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #65 = Class              #67           // org/apache/commons/lang3/Validate\n+   #66 = NameAndType        #68:#69       // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #67 = Utf8               org/apache/commons/lang3/Validate\n+   #68 = Utf8               notNull\n+   #69 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #70 = Methodref          #2.#71        // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n+   #71 = NameAndType        #72:#73       // isAfter:(Ljava/lang/Object;)Z\n+   #72 = Utf8               isAfter\n+   #73 = Utf8               (Ljava/lang/Object;)Z\n+   #74 = Methodref          #2.#75        // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n+   #75 = NameAndType        #76:#73       // isBefore:(Ljava/lang/Object;)Z\n+   #76 = Utf8               isBefore\n+   #77 = Methodref          #2.#78        // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n+   #78 = NameAndType        #79:#73       // contains:(Ljava/lang/Object;)Z\n+   #79 = Utf8               contains\n+   #80 = Methodref          #2.#81        // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+   #81 = NameAndType        #82:#83       // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+   #82 = Utf8               isOverlappedBy\n+   #83 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n+   #84 = String             #85           // Cannot calculate intersection with non-overlapping range %s\n+   #85 = Utf8               Cannot calculate intersection with non-overlapping range %s\n+   #86 = Methodref          #87.#88       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #87 = Class              #89           // java/lang/String\n+   #88 = NameAndType        #90:#91       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #89 = Utf8               java/lang/String\n+   #90 = Utf8               format\n+   #91 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #92 = Methodref          #2.#93        // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n+   #93 = NameAndType        #94:#73       // equals:(Ljava/lang/Object;)Z\n+   #94 = Utf8               equals\n+   #95 = Methodref          #2.#96        // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n+   #96 = NameAndType        #97:#98       // getComparator:()Ljava/util/Comparator;\n+   #97 = Utf8               getComparator\n+   #98 = Utf8               ()Ljava/util/Comparator;\n+   #99 = Methodref          #12.#100      // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #100 = NameAndType        #101:#102     // getClass:()Ljava/lang/Class;\n+  #101 = Utf8               getClass\n+  #102 = Utf8               ()Ljava/lang/Class;\n+  #103 = Methodref          #12.#93       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #104 = Fieldref           #2.#105       // org/apache/commons/lang3/Range.hashCode:I\n+  #105 = NameAndType        #106:#107     // hashCode:I\n+  #106 = Utf8               hashCode\n+  #107 = Utf8               I\n+  #108 = Methodref          #12.#109      // java/lang/Object.hashCode:()I\n+  #109 = NameAndType        #106:#110     // hashCode:()I\n+  #110 = Utf8               ()I\n+  #111 = Fieldref           #2.#112       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n+  #112 = NameAndType        #34:#113      // toString:Ljava/lang/String;\n+  #113 = Utf8               Ljava/lang/String;\n+  #114 = String             #115          // [\n+  #115 = Utf8               [\n+  #116 = String             #117          // ..\n+  #117 = Utf8               ..\n+  #118 = String             #119          // ]\n+  #119 = Utf8               ]\n+  #120 = Class              #121          // java/io/Serializable\n+  #121 = Utf8               java/io/Serializable\n+  #122 = Utf8               serialVersionUID\n+  #123 = Utf8               J\n+  #124 = Utf8               ConstantValue\n+  #125 = Long               1l\n+  #127 = Utf8               Signature\n+  #128 = Utf8               Ljava/util/Comparator<TT;>;\n+  #129 = Utf8               TT;\n+  #130 = Utf8               is\n+  #131 = Utf8               (Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n+  #132 = Utf8               Code\n+  #133 = Utf8               LineNumberTable\n+  #134 = Utf8               LocalVariableTable\n+  #135 = Utf8               element\n+  #136 = Utf8               Ljava/lang/Comparable;\n+  #137 = Utf8               LocalVariableTypeTable\n+  #138 = Utf8               <T::Ljava/lang/Comparable<TT;>;>(TT;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #139 = Utf8               (Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+  #140 = Utf8               <T:Ljava/lang/Object;>(TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #141 = Utf8               (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n+  #142 = Utf8               fromInclusive\n+  #143 = Utf8               toInclusive\n+  #144 = Utf8               <T::Ljava/lang/Comparable<TT;>;>(TT;TT;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #145 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #146 = Utf8               this\n+  #147 = Utf8               Lorg/apache/commons/lang3/Range;\n+  #148 = Utf8               element1\n+  #149 = Utf8               element2\n+  #150 = Utf8               comp\n+  #151 = Utf8               Lorg/apache/commons/lang3/Range<TT;>;\n+  #152 = Utf8               StackMapTable\n+  #153 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n+  #154 = Utf8               getMinimum\n+  #155 = Utf8               ()Ljava/lang/Object;\n+  #156 = Utf8               ()TT;\n+  #157 = Utf8               getMaximum\n+  #158 = Utf8               ()Ljava/util/Comparator<TT;>;\n+  #159 = Utf8               isNaturalOrdering\n+  #160 = Utf8               ()Z\n+  #161 = Utf8               (TT;)Z\n+  #162 = Utf8               isStartedBy\n+  #163 = Utf8               isEndedBy\n+  #164 = Utf8               elementCompareTo\n+  #165 = Utf8               (Ljava/lang/Object;)I\n+  #166 = Utf8               (TT;)I\n+  #167 = Utf8               containsRange\n+  #168 = Utf8               otherRange\n+  #169 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+  #170 = Utf8               isAfterRange\n+  #171 = Utf8               isBeforeRange\n+  #172 = Utf8               intersectionWith\n+  #173 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n+  #174 = Utf8               other\n+  #175 = Utf8               min\n+  #176 = Utf8               max\n+  #177 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #178 = Utf8               range\n+  #179 = Utf8               obj\n+  #180 = Utf8               result\n+  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #182 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+  #183 = Utf8               SourceFile\n+  #184 = Utf8               Range.java\n+  #185 = Utf8               InnerClasses\n+  #186 = Utf8               ComparableComparator\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.Comparator<T> comparator;\n     descriptor: Ljava/util/Comparator;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #50                          // Ljava/util/Comparator<TT;>;\n+    Signature: #128                         // Ljava/util/Comparator<TT;>;\n \n   private final T minimum;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #53                          // TT;\n+    Signature: #129                         // TT;\n \n   private final T maximum;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #53                          // TT;\n+    Signature: #129                         // TT;\n \n   private transient int hashCode;\n     descriptor: I\n     flags: (0x0082) ACC_PRIVATE, ACC_TRANSIENT\n \n   private transient java.lang.String toString;\n     descriptor: Ljava/lang/String;\n@@ -236,15 +236,15 @@\n         line 75: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 element   Ljava/lang/Comparable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 element   TT;\n-    Signature: #67                          // <T::Ljava/lang/Comparable<TT;>;>(TT;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #138                         // <T::Ljava/lang/Comparable<TT;>;>(TT;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public static <T extends java.lang.Object> org.apache.commons.lang3.Range<T> is(T, java.util.Comparator<T>);\n     descriptor: (Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -258,15 +258,15 @@\n         Start  Length  Slot  Name   Signature\n             0       7     0 element   Ljava/lang/Object;\n             0       7     1 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 element   TT;\n             0       7     1 comparator   Ljava/util/Comparator<TT;>;\n-    Signature: #69                          // <T:Ljava/lang/Object;>(TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #140                         // <T:Ljava/lang/Object;>(TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public static <T extends java.lang.Comparable<T>> org.apache.commons.lang3.Range<T> between(T, T);\n     descriptor: (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -280,98 +280,98 @@\n         Start  Length  Slot  Name   Signature\n             0       7     0 fromInclusive   Ljava/lang/Comparable;\n             0       7     1 toInclusive   Ljava/lang/Comparable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 fromInclusive   TT;\n             0       7     1 toInclusive   TT;\n-    Signature: #74                          // <T::Ljava/lang/Comparable<TT;>;>(TT;TT;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #144                         // <T::Ljava/lang/Comparable<TT;>;>(TT;TT;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public static <T extends java.lang.Object> org.apache.commons.lang3.Range<T> between(T, T, java.util.Comparator<T>);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: new           #2                  // class org/apache/commons/lang3/Range\n          3: dup\n          4: aload_0\n          5: aload_1\n          6: aload_2\n-         7: invokespecial #3                  // Method \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+         7: invokespecial #7                  // Method \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n         10: areturn\n       LineNumberTable:\n         line 134: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 fromInclusive   Ljava/lang/Object;\n             0      11     1 toInclusive   Ljava/lang/Object;\n             0      11     2 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 fromInclusive   TT;\n             0      11     1 toInclusive   TT;\n             0      11     2 comparator   Ljava/util/Comparator<TT;>;\n-    Signature: #76                          // <T:Ljava/lang/Object;>(TT;TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #145                         // <T:Ljava/lang/Object;>(TT;TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   private org.apache.commons.lang3.Range(T, T, java.util.Comparator<T>);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #11                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnull        12\n          8: aload_2\n          9: ifnonnull     48\n-        12: new           #5                  // class java/lang/IllegalArgumentException\n+        12: new           #16                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: new           #6                  // class java/lang/StringBuilder\n+        16: new           #18                 // class java/lang/StringBuilder\n         19: dup\n-        20: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        23: ldc           #8                  // String Elements in a range must not be null: element1=\n-        25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        23: ldc           #21                 // String Elements in a range must not be null: element1=\n+        25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: aload_1\n-        29: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        32: ldc           #11                 // String , element2=\n-        34: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        32: ldc           #30                 // String , element2=\n+        34: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: aload_2\n-        38: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        41: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        44: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        38: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        44: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         47: athrow\n         48: aload_3\n         49: ifnonnull     62\n         52: aload_0\n-        53: getstatic     #14                 // Field org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-        56: putfield      #15                 // Field comparator:Ljava/util/Comparator;\n+        53: getstatic     #39                 // Field org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+        56: putfield      #45                 // Field comparator:Ljava/util/Comparator;\n         59: goto          67\n         62: aload_0\n         63: aload_3\n-        64: putfield      #15                 // Field comparator:Ljava/util/Comparator;\n+        64: putfield      #45                 // Field comparator:Ljava/util/Comparator;\n         67: aload_0\n-        68: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+        68: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         71: aload_1\n         72: aload_2\n-        73: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        73: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         78: iconst_1\n         79: if_icmpge     95\n         82: aload_0\n         83: aload_1\n-        84: putfield      #17                 // Field minimum:Ljava/lang/Object;\n+        84: putfield      #55                 // Field minimum:Ljava/lang/Object;\n         87: aload_0\n         88: aload_2\n-        89: putfield      #18                 // Field maximum:Ljava/lang/Object;\n+        89: putfield      #59                 // Field maximum:Ljava/lang/Object;\n         92: goto          105\n         95: aload_0\n         96: aload_2\n-        97: putfield      #17                 // Field minimum:Ljava/lang/Object;\n+        97: putfield      #55                 // Field minimum:Ljava/lang/Object;\n        100: aload_0\n        101: aload_1\n-       102: putfield      #18                 // Field maximum:Ljava/lang/Object;\n+       102: putfield      #59                 // Field maximum:Ljava/lang/Object;\n        105: return\n       LineNumberTable:\n         line 145: 0\n         line 146: 4\n         line 147: 12\n         line 150: 48\n         line 151: 52\n@@ -400,78 +400,78 @@\n           locals = [ class org/apache/commons/lang3/Range, class java/lang/Object, class java/lang/Object, class java/util/Comparator ]\n           stack = []\n         frame_type = 35 /* same */\n         frame_type = 13 /* same */\n         frame_type = 4 /* same */\n         frame_type = 27 /* same */\n         frame_type = 9 /* same */\n-    Signature: #87                          // (TT;TT;Ljava/util/Comparator<TT;>;)V\n+    Signature: #153                         // (TT;TT;Ljava/util/Comparator<TT;>;)V\n \n   public T getMinimum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+         1: getfield      #55                 // Field minimum:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #90                          // ()TT;\n+    Signature: #156                         // ()TT;\n \n   public T getMaximum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+         1: getfield      #59                 // Field maximum:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #90                          // ()TT;\n+    Signature: #156                         // ()TT;\n \n   public java.util.Comparator<T> getComparator();\n     descriptor: ()Ljava/util/Comparator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         1: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n          4: areturn\n       LineNumberTable:\n         line 194: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #94                          // ()Ljava/util/Comparator<TT;>;\n+    Signature: #158                         // ()Ljava/util/Comparator<TT;>;\n \n   public boolean isNaturalOrdering();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n-         4: getstatic     #14                 // Field org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+         1: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n+         4: getstatic     #39                 // Field org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n          7: if_acmpne     14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 206: 0\n@@ -492,27 +492,27 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         7: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         10: aload_1\n         11: aload_0\n-        12: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        15: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        12: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        15: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         20: iconst_m1\n         21: if_icmple     46\n         24: aload_0\n-        25: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+        25: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         28: aload_1\n         29: aload_0\n-        30: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        33: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        30: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        33: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         38: iconst_1\n         39: if_icmpge     46\n         42: iconst_1\n         43: goto          47\n         46: iconst_0\n         47: ireturn\n       LineNumberTable:\n@@ -528,31 +528,31 @@\n             0      48     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      48     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 39 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (TT;)Z\n+    Signature: #161                         // (TT;)Z\n \n   public boolean isAfter(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         7: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         10: aload_1\n         11: aload_0\n-        12: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        15: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        12: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        15: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         20: ifge          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 232: 0\n@@ -567,31 +567,31 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (TT;)Z\n+    Signature: #161                         // (TT;)Z\n \n   public boolean isStartedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         7: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         10: aload_1\n         11: aload_0\n-        12: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        15: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        12: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        15: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         20: ifne          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 245: 0\n@@ -606,31 +606,31 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (TT;)Z\n+    Signature: #161                         // (TT;)Z\n \n   public boolean isEndedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         7: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         10: aload_1\n         11: aload_0\n-        12: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        15: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        12: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        15: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         20: ifne          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 258: 0\n@@ -645,31 +645,31 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (TT;)Z\n+    Signature: #161                         // (TT;)Z\n \n   public boolean isBefore(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+         7: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         10: aload_1\n         11: aload_0\n-        12: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        15: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        12: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        15: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         20: ifle          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 271: 0\n@@ -684,36 +684,36 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (TT;)Z\n+    Signature: #161                         // (TT;)Z\n \n   public int elementCompareTo(T);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #19                 // String Element is null\n+         1: ldc           #62                 // String Element is null\n          3: iconst_0\n-         4: anewarray     #20                 // class java/lang/Object\n-         7: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #12                 // class java/lang/Object\n+         7: invokestatic  #64                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #22                 // Method isAfter:(Ljava/lang/Object;)Z\n+        13: invokevirtual #70                 // Method isAfter:(Ljava/lang/Object;)Z\n         16: ifeq          21\n         19: iconst_m1\n         20: ireturn\n         21: aload_0\n         22: aload_1\n-        23: invokevirtual #23                 // Method isBefore:(Ljava/lang/Object;)Z\n+        23: invokevirtual #74                 // Method isBefore:(Ljava/lang/Object;)Z\n         26: ifeq          31\n         29: iconst_1\n         30: ireturn\n         31: iconst_0\n         32: ireturn\n       LineNumberTable:\n         line 289: 0\n@@ -729,34 +729,34 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      33     1 element   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 21 /* same */\n         frame_type = 9 /* same */\n-    Signature: #106                         // (TT;)I\n+    Signature: #166                         // (TT;)I\n \n   public boolean containsRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n-         8: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        11: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z\n+         8: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        11: invokevirtual #77                 // Method contains:(Ljava/lang/Object;)Z\n         14: ifeq          32\n         17: aload_0\n         18: aload_1\n-        19: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        22: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z\n+        19: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        22: invokevirtual #77                 // Method contains:(Ljava/lang/Object;)Z\n         25: ifeq          32\n         28: iconst_1\n         29: goto          33\n         32: iconst_0\n         33: ireturn\n       LineNumberTable:\n         line 312: 0\n@@ -773,29 +773,29 @@\n             0      34     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      34     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 25 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #169                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isAfterRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n-         8: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        11: invokevirtual #22                 // Method isAfter:(Ljava/lang/Object;)Z\n+         8: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        11: invokevirtual #70                 // Method isAfter:(Ljava/lang/Object;)Z\n         14: ireturn\n       LineNumberTable:\n         line 329: 0\n         line 330: 4\n         line 332: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -803,39 +803,39 @@\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #169                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isOverlappedBy(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_1\n          7: aload_0\n-         8: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        11: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z\n+         8: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        11: invokevirtual #77                 // Method contains:(Ljava/lang/Object;)Z\n         14: ifne          39\n         17: aload_1\n         18: aload_0\n-        19: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        22: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z\n+        19: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        22: invokevirtual #77                 // Method contains:(Ljava/lang/Object;)Z\n         25: ifne          39\n         28: aload_0\n         29: aload_1\n-        30: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        33: invokevirtual #24                 // Method contains:(Ljava/lang/Object;)Z\n+        30: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        33: invokevirtual #77                 // Method contains:(Ljava/lang/Object;)Z\n         36: ifeq          43\n         39: iconst_1\n         40: goto          44\n         43: iconst_0\n         44: ireturn\n       LineNumberTable:\n         line 348: 0\n@@ -854,29 +854,29 @@\n             0      45     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 4\n         frame_type = 6 /* same */\n         frame_type = 32 /* same */\n         frame_type = 3 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #169                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isBeforeRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n-         8: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        11: invokevirtual #23                 // Method isBefore:(Ljava/lang/Object;)Z\n+         8: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        11: invokevirtual #74                 // Method isBefore:(Ljava/lang/Object;)Z\n         14: ireturn\n       LineNumberTable:\n         line 366: 0\n         line 367: 4\n         line 369: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -884,75 +884,75 @@\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #169                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public org.apache.commons.lang3.Range<T> intersectionWith(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #25                 // Method isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+         2: invokevirtual #80                 // Method isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n          5: ifne          29\n-         8: new           #5                  // class java/lang/IllegalArgumentException\n+         8: new           #16                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #26                 // String Cannot calculate intersection with non-overlapping range %s\n+        12: ldc           #84                 // String Cannot calculate intersection with non-overlapping range %s\n         14: iconst_1\n-        15: anewarray     #20                 // class java/lang/Object\n+        15: anewarray     #12                 // class java/lang/Object\n         18: dup\n         19: iconst_0\n         20: aload_1\n         21: aastore\n-        22: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        25: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        22: invokestatic  #86                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        25: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         28: athrow\n         29: aload_0\n         30: aload_1\n-        31: invokevirtual #28                 // Method equals:(Ljava/lang/Object;)Z\n+        31: invokevirtual #92                 // Method equals:(Ljava/lang/Object;)Z\n         34: ifeq          39\n         37: aload_0\n         38: areturn\n         39: aload_0\n-        40: invokevirtual #29                 // Method getComparator:()Ljava/util/Comparator;\n+        40: invokevirtual #95                 // Method getComparator:()Ljava/util/Comparator;\n         43: aload_0\n-        44: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+        44: getfield      #55                 // Field minimum:Ljava/lang/Object;\n         47: aload_1\n-        48: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        51: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        48: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        51: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         56: ifge          66\n         59: aload_1\n-        60: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+        60: getfield      #55                 // Field minimum:Ljava/lang/Object;\n         63: goto          70\n         66: aload_0\n-        67: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+        67: getfield      #55                 // Field minimum:Ljava/lang/Object;\n         70: astore_2\n         71: aload_0\n-        72: invokevirtual #29                 // Method getComparator:()Ljava/util/Comparator;\n+        72: invokevirtual #95                 // Method getComparator:()Ljava/util/Comparator;\n         75: aload_0\n-        76: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+        76: getfield      #59                 // Field maximum:Ljava/lang/Object;\n         79: aload_1\n-        80: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        83: invokeinterface #16,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+        80: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        83: invokeinterface #49,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n         88: ifge          98\n         91: aload_0\n-        92: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+        92: getfield      #59                 // Field maximum:Ljava/lang/Object;\n         95: goto          102\n         98: aload_1\n-        99: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+        99: getfield      #59                 // Field maximum:Ljava/lang/Object;\n        102: astore_3\n        103: aload_2\n        104: aload_3\n        105: aload_0\n-       106: invokevirtual #29                 // Method getComparator:()Ljava/util/Comparator;\n+       106: invokevirtual #95                 // Method getComparator:()Ljava/util/Comparator;\n        109: invokestatic  #1                  // Method between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n        112: areturn\n       LineNumberTable:\n         line 380: 0\n         line 381: 8\n         line 384: 29\n         line 385: 37\n@@ -978,49 +978,49 @@\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Object ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #119                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #177                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_1\n-        12: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_0\n-        16: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n         25: checkcast     #2                  // class org/apache/commons/lang3/Range\n         28: astore_2\n         29: aload_0\n-        30: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+        30: getfield      #55                 // Field minimum:Ljava/lang/Object;\n         33: aload_2\n-        34: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        37: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        34: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        37: invokevirtual #103                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         40: ifeq          61\n         43: aload_0\n-        44: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+        44: getfield      #59                 // Field maximum:Ljava/lang/Object;\n         47: aload_2\n-        48: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        51: invokevirtual #31                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        48: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        51: invokevirtual #103                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         54: ifeq          61\n         57: iconst_1\n         58: goto          62\n         61: iconst_0\n         62: ireturn\n       LineNumberTable:\n         line 406: 0\n@@ -1052,48 +1052,48 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #32                 // Field hashCode:I\n+         1: getfield      #104                // Field hashCode:I\n          4: istore_1\n          5: aload_0\n-         6: getfield      #32                 // Field hashCode:I\n+         6: getfield      #104                // Field hashCode:I\n          9: ifne          59\n         12: bipush        17\n         14: istore_1\n         15: bipush        37\n         17: iload_1\n         18: imul\n         19: aload_0\n-        20: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        23: invokevirtual #33                 // Method java/lang/Object.hashCode:()I\n+        20: invokevirtual #99                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        23: invokevirtual #108                // Method java/lang/Object.hashCode:()I\n         26: iadd\n         27: istore_1\n         28: bipush        37\n         30: iload_1\n         31: imul\n         32: aload_0\n-        33: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        36: invokevirtual #33                 // Method java/lang/Object.hashCode:()I\n+        33: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        36: invokevirtual #108                // Method java/lang/Object.hashCode:()I\n         39: iadd\n         40: istore_1\n         41: bipush        37\n         43: iload_1\n         44: imul\n         45: aload_0\n-        46: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        49: invokevirtual #33                 // Method java/lang/Object.hashCode:()I\n+        46: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        49: invokevirtual #108                // Method java/lang/Object.hashCode:()I\n         52: iadd\n         53: istore_1\n         54: aload_0\n         55: iload_1\n-        56: putfield      #32                 // Field hashCode:I\n+        56: putfield      #104                // Field hashCode:I\n         59: iload_1\n         60: ireturn\n       LineNumberTable:\n         line 426: 0\n         line 427: 5\n         line 428: 12\n         line 429: 15\n@@ -1115,36 +1115,36 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #34                 // Field toString:Ljava/lang/String;\n+         1: getfield      #111                // Field toString:Ljava/lang/String;\n          4: ifnonnull     50\n          7: aload_0\n-         8: new           #6                  // class java/lang/StringBuilder\n+         8: new           #18                 // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        15: ldc           #35                 // String [\n-        17: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        15: ldc           #114                // String [\n+        17: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         20: aload_0\n-        21: getfield      #17                 // Field minimum:Ljava/lang/Object;\n-        24: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        27: ldc           #36                 // String ..\n-        29: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: getfield      #55                 // Field minimum:Ljava/lang/Object;\n+        24: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        27: ldc           #116                // String ..\n+        29: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         32: aload_0\n-        33: getfield      #18                 // Field maximum:Ljava/lang/Object;\n-        36: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        39: ldc           #37                 // String ]\n-        41: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        44: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        47: putfield      #34                 // Field toString:Ljava/lang/String;\n+        33: getfield      #59                 // Field maximum:Ljava/lang/Object;\n+        36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        39: ldc           #118                // String ]\n+        41: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        47: putfield      #111                // Field toString:Ljava/lang/String;\n         50: aload_0\n-        51: getfield      #34                 // Field toString:Ljava/lang/String;\n+        51: getfield      #111                // Field toString:Ljava/lang/String;\n         54: areturn\n       LineNumberTable:\n         line 446: 0\n         line 447: 7\n         line 449: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1158,39 +1158,39 @@\n   public java.lang.String toString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_1\n          1: iconst_3\n-         2: anewarray     #20                 // class java/lang/Object\n+         2: anewarray     #12                 // class java/lang/Object\n          5: dup\n          6: iconst_0\n          7: aload_0\n-         8: getfield      #17                 // Field minimum:Ljava/lang/Object;\n+         8: getfield      #55                 // Field minimum:Ljava/lang/Object;\n         11: aastore\n         12: dup\n         13: iconst_1\n         14: aload_0\n-        15: getfield      #18                 // Field maximum:Ljava/lang/Object;\n+        15: getfield      #59                 // Field maximum:Ljava/lang/Object;\n         18: aastore\n         19: dup\n         20: iconst_2\n         21: aload_0\n-        22: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n+        22: getfield      #45                 // Field comparator:Ljava/util/Comparator;\n         25: aastore\n-        26: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        26: invokestatic  #86                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         29: areturn\n       LineNumberTable:\n         line 465: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/lang3/Range;\n             0      30     1 format   Ljava/lang/String;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n }\n-Signature: #128                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+Signature: #182                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n SourceFile: \"Range.java\"\n InnerClasses:\n-  private static final #40= #39 of #2;    // ComparableComparator=class org/apache/commons/lang3/Range$ComparableComparator of class org/apache/commons/lang3/Range\n+  private static final #186= #40 of #2;   // ComparableComparator=class org/apache/commons/lang3/Range$ComparableComparator of class org/apache/commons/lang3/Range\n"}]}
