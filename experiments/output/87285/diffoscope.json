{"diffoscope-json-version": 1, "source1": "first/LazyInitializer.class", "source2": "second/LazyInitializer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,14 +2,18 @@\n package org.apache.commons.lang3.concurrent;\n \n public abstract class LazyInitializer<T> implements ConcurrentInitializer<T>\n {\n     private static final Object NO_INIT;\n     private volatile T object;\n     \n+    static {\n+        NO_INIT = new Object();\n+    }\n+    \n     public LazyInitializer() {\n         this.object = (T)LazyInitializer.NO_INIT;\n     }\n     \n     public T get() throws ConcurrentException {\n         T result = this.object;\n         if (result == LazyInitializer.NO_INIT) {\n@@ -20,12 +24,8 @@\n                 }\n             }\n         }\n         return result;\n     }\n     \n     protected abstract T initialize() throws ConcurrentException;\n-    \n-    static {\n-        NO_INIT = new Object();\n-    }\n }\n"}]}
