{"diffoscope-json-version": 1, "source1": "first/B64.class", "source2": "second/B64.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,28 +4,28 @@\n import java.util.Random;\n import java.security.SecureRandom;\n \n class B64\n {\n     static final String B64T = \"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n     \n-    static void b64from24bit(final byte b2, final byte b1, final byte b0, final int outLen, final StringBuilder buffer) {\n-        int w = (b2 << 16 & 0xFFFFFF) | (b1 << 8 & 0xFFFF) | (b0 & 0xFF);\n-        int n = outLen;\n-        while (n-- > 0) {\n-            buffer.append(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".charAt(w & 0x3F));\n-            w >>= 6;\n+    static void b64from24bit(final byte b, final byte b2, final byte b3, final int n, final StringBuilder sb) {\n+        int n2 = (b << 16 & 0xFFFFFF) | (b2 << 8 & 0xFFFF) | (b3 & 0xFF);\n+        int n3 = n;\n+        while (n3-- > 0) {\n+            sb.append(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".charAt(n2 & 0x3F));\n+            n2 >>= 6;\n         }\n     }\n     \n-    static String getRandomSalt(final int num) {\n-        return getRandomSalt(num, new SecureRandom());\n+    static String getRandomSalt(final int n) {\n+        return getRandomSalt(n, new SecureRandom());\n     }\n     \n-    static String getRandomSalt(final int num, final Random random) {\n-        final StringBuilder saltString = new StringBuilder(num);\n-        for (int i = 1; i <= num; ++i) {\n-            saltString.append(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".charAt(random.nextInt(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".length())));\n+    static String getRandomSalt(final int capacity, final Random random) {\n+        final StringBuilder sb = new StringBuilder(capacity);\n+        for (int i = 1; i <= capacity; ++i) {\n+            sb.append(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".charAt(random.nextInt(\"./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".length())));\n         }\n-        return saltString.toString();\n+        return sb.toString();\n     }\n }\n"}]}
