{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,49 +1,49 @@\n-  SHA-256 checksum feacb2cf534ba93f5137d60bf44a2ff61e268fcb080e3f021fc61e56ec96cb8c\n+  SHA-256 checksum ee7ffd72a1558df5708911657ed032bdf6aa4a2383f882abf52b061cd8fc4c60\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #30                         // org/apache/commons/io/filefilter/RegexFileFilter\n   super_class: #31                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Class              #87           // java/lang/IllegalArgumentException\n-    #2 = String             #88           // Pattern is missing\n-    #3 = Methodref          #1.#89        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #6.#90        // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-    #5 = Methodref          #91.#92       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-    #6 = Class              #93           // java/util/regex/Pattern\n-    #7 = InvokeDynamic      #0:#99        // #0:apply:()Ljava/util/function/Function;\n-    #8 = Methodref          #30.#100      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-    #9 = Methodref          #31.#101      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #10 = Fieldref           #30.#102      // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #11 = Fieldref           #30.#103      // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n-   #12 = Methodref          #30.#104      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n-   #13 = Methodref          #30.#90       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #14 = Methodref          #30.#105      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n-   #15 = Methodref          #30.#106      // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #16 = Methodref          #6.#107       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #17 = Methodref          #108.#109     // java/util/regex/Matcher.matches:()Z\n-   #18 = InterfaceMethodref #110.#111     // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = Class              #112          // java/lang/CharSequence\n-   #20 = Methodref          #30.#113      // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #21 = Class              #114          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#101      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #115          // RegexFileFilter [pattern=\n-   #24 = Methodref          #21.#116      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#117      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #26 = String             #118          // ]\n-   #27 = Methodref          #21.#119      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = InterfaceMethodref #120.#121     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #29 = InterfaceMethodref #120.#119     // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #30 = Class              #122          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #31 = Class              #123          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #32 = Class              #124          // java/io/Serializable\n+    #1 = Class              #85           // java/lang/IllegalArgumentException\n+    #2 = String             #86           // Pattern is missing\n+    #3 = Methodref          #1.#87        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #6.#88        // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+    #5 = Methodref          #89.#90       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+    #6 = Class              #91           // java/util/regex/Pattern\n+    #7 = InvokeDynamic      #0:#97        // #0:apply:()Ljava/util/function/Function;\n+    #8 = Methodref          #30.#98       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+    #9 = Methodref          #31.#99       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #10 = Fieldref           #30.#100      // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #11 = Fieldref           #30.#101      // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n+   #12 = Methodref          #30.#102      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n+   #13 = Methodref          #30.#88       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #14 = Methodref          #30.#103      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n+   #15 = Methodref          #30.#104      // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #16 = Methodref          #6.#105       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #17 = Methodref          #106.#107     // java/util/regex/Matcher.matches:()Z\n+   #18 = InterfaceMethodref #63.#108      // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #19 = Class              #109          // java/lang/CharSequence\n+   #20 = Methodref          #30.#110      // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #21 = Class              #111          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#99       // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #112          // RegexFileFilter [pattern=\n+   #24 = Methodref          #21.#113      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #21.#114      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #26 = String             #115          // ]\n+   #27 = Methodref          #21.#116      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = InterfaceMethodref #117.#118     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #29 = InterfaceMethodref #117.#116     // java/nio/file/Path.toString:()Ljava/lang/String;\n+   #30 = Class              #119          // org/apache/commons/io/filefilter/RegexFileFilter\n+   #31 = Class              #120          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #32 = Class              #121          // java/io/Serializable\n    #33 = Utf8               serialVersionUID\n    #34 = Utf8               J\n    #35 = Utf8               ConstantValue\n    #36 = Long               4269646126155225062l\n    #38 = Utf8               pattern\n    #39 = Utf8               Ljava/util/regex/Pattern;\n    #40 = Utf8               pathToString\n@@ -65,111 +65,108 @@\n    #56 = Utf8               Lorg/apache/commons/io/IOCase;\n    #57 = Utf8               <init>\n    #58 = Utf8               (Ljava/util/regex/Pattern;)V\n    #59 = Utf8               this\n    #60 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n    #61 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n    #62 = Utf8               LocalVariableTypeTable\n-   #63 = Class              #122          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #64 = Class              #93           // java/util/regex/Pattern\n-   #65 = Class              #125          // java/util/function/Function\n-   #66 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n-   #67 = Utf8               (Ljava/lang/String;)V\n-   #68 = Utf8               (Ljava/lang/String;I)V\n-   #69 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #70 = Utf8               accept\n-   #71 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #72 = Utf8               dir\n-   #73 = Utf8               Ljava/io/File;\n-   #74 = Utf8               name\n-   #75 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #76 = Utf8               path\n-   #77 = Utf8               Ljava/nio/file/Path;\n-   #78 = Utf8               attributes\n-   #79 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #80 = Utf8               toString\n-   #81 = Utf8               ()Ljava/lang/String;\n-   #82 = Utf8               lambda$new$0\n-   #83 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n-   #84 = Utf8               p\n-   #85 = Utf8               SourceFile\n-   #86 = Utf8               RegexFileFilter.java\n-   #87 = Utf8               java/lang/IllegalArgumentException\n-   #88 = Utf8               Pattern is missing\n-   #89 = NameAndType        #57:#67       // \"<init>\":(Ljava/lang/String;)V\n-   #90 = NameAndType        #44:#45       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #91 = Class              #126          // org/apache/commons/io/IOCase\n-   #92 = NameAndType        #127:#128     // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-   #93 = Utf8               java/util/regex/Pattern\n-   #94 = Utf8               BootstrapMethods\n-   #95 = MethodHandle       6:#129        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #96 = MethodType         #130          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-   #97 = MethodHandle       6:#131        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-   #98 = MethodType         #83           //  (Ljava/nio/file/Path;)Ljava/lang/String;\n-   #99 = NameAndType        #132:#133     // apply:()Ljava/util/function/Function;\n-  #100 = NameAndType        #57:#61       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-  #101 = NameAndType        #57:#134      // \"<init>\":()V\n-  #102 = NameAndType        #38:#39       // pattern:Ljava/util/regex/Pattern;\n-  #103 = NameAndType        #40:#41       // pathToString:Ljava/util/function/Function;\n-  #104 = NameAndType        #57:#68       // \"<init>\":(Ljava/lang/String;I)V\n-  #105 = NameAndType        #57:#58       // \"<init>\":(Ljava/util/regex/Pattern;)V\n-  #106 = NameAndType        #53:#54       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n-  #107 = NameAndType        #135:#136     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #108 = Class              #137          // java/util/regex/Matcher\n-  #109 = NameAndType        #138:#139     // matches:()Z\n-  #110 = Class              #125          // java/util/function/Function\n-  #111 = NameAndType        #132:#130     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #112 = Utf8               java/lang/CharSequence\n-  #113 = NameAndType        #140:#141     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #114 = Utf8               java/lang/StringBuilder\n-  #115 = Utf8               RegexFileFilter [pattern=\n-  #116 = NameAndType        #142:#143     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #117 = NameAndType        #142:#144     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #118 = Utf8               ]\n-  #119 = NameAndType        #80:#81       // toString:()Ljava/lang/String;\n-  #120 = Class              #145          // java/nio/file/Path\n-  #121 = NameAndType        #146:#147     // getFileName:()Ljava/nio/file/Path;\n-  #122 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-  #123 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #124 = Utf8               java/io/Serializable\n-  #125 = Utf8               java/util/function/Function\n-  #126 = Utf8               org/apache/commons/io/IOCase\n-  #127 = Utf8               isCaseSensitive\n-  #128 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n-  #129 = Methodref          #148.#149     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #130 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #131 = Methodref          #30.#150      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #132 = Utf8               apply\n-  #133 = Utf8               ()Ljava/util/function/Function;\n-  #134 = Utf8               ()V\n-  #135 = Utf8               matcher\n-  #136 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #137 = Utf8               java/util/regex/Matcher\n-  #138 = Utf8               matches\n-  #139 = Utf8               ()Z\n-  #140 = Utf8               toFileVisitResult\n-  #141 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #142 = Utf8               append\n-  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               java/nio/file/Path\n-  #146 = Utf8               getFileName\n-  #147 = Utf8               ()Ljava/nio/file/Path;\n-  #148 = Class              #151          // java/lang/invoke/LambdaMetafactory\n-  #149 = NameAndType        #152:#156     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #150 = NameAndType        #82:#83       // lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #151 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #152 = Utf8               metafactory\n-  #153 = Class              #158          // java/lang/invoke/MethodHandles$Lookup\n-  #154 = Utf8               Lookup\n-  #155 = Utf8               InnerClasses\n-  #156 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #157 = Class              #159          // java/lang/invoke/MethodHandles\n-  #158 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #159 = Utf8               java/lang/invoke/MethodHandles\n+   #63 = Class              #122          // java/util/function/Function\n+   #64 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+   #65 = Utf8               (Ljava/lang/String;)V\n+   #66 = Utf8               (Ljava/lang/String;I)V\n+   #67 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #68 = Utf8               accept\n+   #69 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #70 = Utf8               dir\n+   #71 = Utf8               Ljava/io/File;\n+   #72 = Utf8               name\n+   #73 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #74 = Utf8               path\n+   #75 = Utf8               Ljava/nio/file/Path;\n+   #76 = Utf8               attributes\n+   #77 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #78 = Utf8               toString\n+   #79 = Utf8               ()Ljava/lang/String;\n+   #80 = Utf8               lambda$new$0\n+   #81 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+   #82 = Utf8               p\n+   #83 = Utf8               SourceFile\n+   #84 = Utf8               RegexFileFilter.java\n+   #85 = Utf8               java/lang/IllegalArgumentException\n+   #86 = Utf8               Pattern is missing\n+   #87 = NameAndType        #57:#65       // \"<init>\":(Ljava/lang/String;)V\n+   #88 = NameAndType        #44:#45       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #89 = Class              #123          // org/apache/commons/io/IOCase\n+   #90 = NameAndType        #124:#125     // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #91 = Utf8               java/util/regex/Pattern\n+   #92 = Utf8               BootstrapMethods\n+   #93 = MethodHandle       6:#126        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #94 = MethodType         #127          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+   #95 = MethodHandle       6:#128        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+   #96 = MethodType         #81           //  (Ljava/nio/file/Path;)Ljava/lang/String;\n+   #97 = NameAndType        #129:#130     // apply:()Ljava/util/function/Function;\n+   #98 = NameAndType        #57:#61       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #99 = NameAndType        #57:#131      // \"<init>\":()V\n+  #100 = NameAndType        #38:#39       // pattern:Ljava/util/regex/Pattern;\n+  #101 = NameAndType        #40:#41       // pathToString:Ljava/util/function/Function;\n+  #102 = NameAndType        #57:#66       // \"<init>\":(Ljava/lang/String;I)V\n+  #103 = NameAndType        #57:#58       // \"<init>\":(Ljava/util/regex/Pattern;)V\n+  #104 = NameAndType        #53:#54       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n+  #105 = NameAndType        #132:#133     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #106 = Class              #134          // java/util/regex/Matcher\n+  #107 = NameAndType        #135:#136     // matches:()Z\n+  #108 = NameAndType        #129:#127     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #109 = Utf8               java/lang/CharSequence\n+  #110 = NameAndType        #137:#138     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #111 = Utf8               java/lang/StringBuilder\n+  #112 = Utf8               RegexFileFilter [pattern=\n+  #113 = NameAndType        #139:#140     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = NameAndType        #139:#141     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #115 = Utf8               ]\n+  #116 = NameAndType        #78:#79       // toString:()Ljava/lang/String;\n+  #117 = Class              #142          // java/nio/file/Path\n+  #118 = NameAndType        #143:#144     // getFileName:()Ljava/nio/file/Path;\n+  #119 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+  #120 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #121 = Utf8               java/io/Serializable\n+  #122 = Utf8               java/util/function/Function\n+  #123 = Utf8               org/apache/commons/io/IOCase\n+  #124 = Utf8               isCaseSensitive\n+  #125 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n+  #126 = Methodref          #145.#146     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #128 = Methodref          #30.#147      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #129 = Utf8               apply\n+  #130 = Utf8               ()Ljava/util/function/Function;\n+  #131 = Utf8               ()V\n+  #132 = Utf8               matcher\n+  #133 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #134 = Utf8               java/util/regex/Matcher\n+  #135 = Utf8               matches\n+  #136 = Utf8               ()Z\n+  #137 = Utf8               toFileVisitResult\n+  #138 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #139 = Utf8               append\n+  #140 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #141 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #142 = Utf8               java/nio/file/Path\n+  #143 = Utf8               getFileName\n+  #144 = Utf8               ()Ljava/nio/file/Path;\n+  #145 = Class              #148          // java/lang/invoke/LambdaMetafactory\n+  #146 = NameAndType        #149:#153     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #147 = NameAndType        #80:#81       // lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #148 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #149 = Utf8               metafactory\n+  #150 = Class              #155          // java/lang/invoke/MethodHandles$Lookup\n+  #151 = Utf8               Lookup\n+  #152 = Utf8               InnerClasses\n+  #153 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #154 = Class              #156          // java/lang/invoke/MethodHandles\n+  #155 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #156 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final long serialVersionUID = 4269646126155225062l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 4269646126155225062l\n \n   private final java.util.regex.Pattern pattern;\n@@ -285,15 +282,15 @@\n         Start  Length  Slot  Name   Signature\n             0      29     2 pathToString   Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/io/filefilter/RegexFileFilter, class java/util/regex/Pattern, class java/util/function/Function ]\n           stack = []\n-    Signature: #66                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+    Signature: #64                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -430,14 +427,14 @@\n         line 110: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     p   Ljava/nio/file/Path;\n }\n SourceFile: \"RegexFileFilter.java\"\n InnerClasses:\n-  public static final #154= #153 of #157; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #151= #150 of #154; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #95 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #93 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #96 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #97 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-      #98 (Ljava/nio/file/Path;)Ljava/lang/String;\n+      #94 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #95 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+      #96 (Ljava/nio/file/Path;)Ljava/lang/String;\n"}]}
