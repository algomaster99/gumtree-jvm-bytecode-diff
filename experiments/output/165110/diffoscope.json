{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorInputStream.class", "source2": "second/BlockLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum cfa4e4992c209ce7be2275cceb4a5b5fcf3b44d2aaa157f233b6425af19beece\n+  SHA-256 checksum 115bd36edb9562e8b7d996e8fb00115427efab563284d5c53eb4c0715efa1b83\n   Compiled from \"BlockLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStream extends org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n   super_class: #44                        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n   interfaces: 0, fields: 6, methods: 5, attributes: 2\n Constant pool:\n-    #1 = Class              #101          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+    #1 = Class              #98           // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n     #2 = Integer            65536\n-    #3 = Methodref          #44.#102      // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #47.#103      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #5 = Fieldref           #1.#104       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-    #6 = Fieldref           #45.#105      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-    #7 = Methodref          #47.#106      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n-    #8 = Methodref          #1.#107       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n-    #9 = Methodref          #1.#108       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n-   #10 = Methodref          #1.#109       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n-   #11 = Fieldref           #47.#110      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #12 = Methodref          #1.#111       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n-   #13 = Methodref          #1.#112       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n-   #14 = Fieldref           #47.#113      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #15 = Methodref          #1.#114       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n-   #16 = Class              #115          // java/io/IOException\n-   #17 = Class              #116          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#117      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #118          // Unknown stream state\n-   #20 = Methodref          #17.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#120      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #17.#121      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Methodref          #16.#122      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = Methodref          #1.#123       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n-   #25 = String             #124          // Premature end of stream while looking for next block\n-   #26 = Fieldref           #1.#125       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n+    #3 = Methodref          #44.#99       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Fieldref           #47.#100      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+    #5 = Fieldref           #1.#101       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+    #6 = Fieldref           #45.#102      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+    #7 = Methodref          #47.#103      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.ordinal:()I\n+    #8 = Methodref          #1.#104       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizes:()V\n+    #9 = Methodref          #1.#105       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readLiteral:([BII)I\n+   #10 = Methodref          #1.#106       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.hasMoreDataInBlock:()Z\n+   #11 = Fieldref           #47.#107      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #12 = Methodref          #1.#108       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.read:([BII)I\n+   #13 = Methodref          #1.#109       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.initializeBackReference:()Z\n+   #14 = Fieldref           #47.#110      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #15 = Methodref          #1.#111       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readBackReference:([BII)I\n+   #16 = Class              #112          // java/io/IOException\n+   #17 = Class              #113          // java/lang/StringBuilder\n+   #18 = Methodref          #17.#114      // java/lang/StringBuilder.\"<init>\":()V\n+   #19 = String             #115          // Unknown stream state\n+   #20 = Methodref          #17.#116      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Methodref          #17.#117      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #22 = Methodref          #17.#118      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #23 = Methodref          #16.#119      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #24 = Methodref          #1.#120       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readOneByte:()I\n+   #25 = String             #121          // Premature end of stream while looking for next block\n+   #26 = Fieldref           #1.#122       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.nextBackReferenceSize:I\n    #27 = Long               15l\n-   #29 = Methodref          #1.#126       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n-   #30 = String             #127          // Illegal block with a negative literal size found\n-   #31 = Methodref          #1.#128       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n-   #32 = Fieldref           #47.#129      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #33 = String             #130          // Premature end of stream while parsing length\n-   #34 = Fieldref           #1.#131       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #35 = Methodref          #132.#133     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #36 = String             #134          // Illegal block with a negative match length found\n+   #29 = Methodref          #1.#123       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.readSizeBytes:()J\n+   #30 = String             #124          // Illegal block with a negative literal size found\n+   #31 = Methodref          #1.#125       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startLiteral:(J)V\n+   #32 = Fieldref           #47.#126      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #33 = String             #127          // Premature end of stream while parsing length\n+   #34 = Fieldref           #1.#128       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #35 = Methodref          #129.#130     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #36 = String             #131          // Illegal block with a negative match length found\n    #37 = Long               4l\n-   #39 = Methodref          #1.#135       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n-   #40 = Class              #136          // java/lang/IllegalArgumentException\n-   #41 = String             #137          // Illegal block with bad offset found\n-   #42 = Methodref          #16.#138      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #43 = Fieldref           #47.#139      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-   #44 = Class              #140          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #45 = Class              #141          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+   #39 = Methodref          #1.#132       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.startBackReference:(IJ)V\n+   #40 = Class              #133          // java/lang/IllegalArgumentException\n+   #41 = String             #134          // Illegal block with bad offset found\n+   #42 = Methodref          #16.#135      // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #43 = Fieldref           #47.#136      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State.IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+   #44 = Class              #137          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+   #45 = Class              #138          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n    #46 = Utf8               InnerClasses\n-   #47 = Class              #142          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+   #47 = Class              #139          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n    #48 = Utf8               State\n    #49 = Utf8               WINDOW_SIZE\n    #50 = Utf8               I\n    #51 = Utf8               ConstantValue\n    #52 = Utf8               SIZE_BITS\n    #53 = Integer            4\n    #54 = Utf8               BACK_REFERENCE_SIZE_MASK\n@@ -97,94 +97,91 @@\n    #89 = Utf8               initializeBackReference\n    #90 = Utf8               ()Z\n    #91 = Utf8               ex\n    #92 = Utf8               Ljava/io/IOException;\n    #93 = Utf8               Ljava/lang/IllegalArgumentException;\n    #94 = Utf8               backReferenceOffset\n    #95 = Utf8               backReferenceSize\n-   #96 = Class              #101          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #97 = Class              #115          // java/io/IOException\n-   #98 = Class              #136          // java/lang/IllegalArgumentException\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               BlockLZ4CompressorInputStream.java\n-  #101 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #102 = NameAndType        #61:#143      // \"<init>\":(Ljava/io/InputStream;I)V\n-  #103 = NameAndType        #144:#60      // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #104 = NameAndType        #59:#60       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #105 = NameAndType        #145:#146     // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n-  #106 = NameAndType        #147:#148     // ordinal:()I\n-  #107 = NameAndType        #80:#81       // readSizes:()V\n-  #108 = NameAndType        #149:#71      // readLiteral:([BII)I\n-  #109 = NameAndType        #150:#90      // hasMoreDataInBlock:()Z\n-  #110 = NameAndType        #151:#60      // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #111 = NameAndType        #70:#71       // read:([BII)I\n-  #112 = NameAndType        #89:#90       // initializeBackReference:()Z\n-  #113 = NameAndType        #152:#60      // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #114 = NameAndType        #153:#71      // readBackReference:([BII)I\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               java/lang/StringBuilder\n-  #117 = NameAndType        #61:#81       // \"<init>\":()V\n-  #118 = Utf8               Unknown stream state\n-  #119 = NameAndType        #154:#155     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #120 = NameAndType        #154:#156     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #121 = NameAndType        #157:#158     // toString:()Ljava/lang/String;\n-  #122 = NameAndType        #61:#159      // \"<init>\":(Ljava/lang/String;)V\n-  #123 = NameAndType        #160:#148     // readOneByte:()I\n-  #124 = Utf8               Premature end of stream while looking for next block\n-  #125 = NameAndType        #58:#50       // nextBackReferenceSize:I\n-  #126 = NameAndType        #85:#86       // readSizeBytes:()J\n-  #127 = Utf8               Illegal block with a negative literal size found\n-  #128 = NameAndType        #161:#162     // startLiteral:(J)V\n-  #129 = NameAndType        #163:#60      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #130 = Utf8               Premature end of stream while parsing length\n-  #131 = NameAndType        #164:#167     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #132 = Class              #168          // org/apache/commons/compress/utils/ByteUtils\n-  #133 = NameAndType        #169:#170     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #134 = Utf8               Illegal block with a negative match length found\n-  #135 = NameAndType        #171:#172     // startBackReference:(IJ)V\n-  #136 = Utf8               java/lang/IllegalArgumentException\n-  #137 = Utf8               Illegal block with bad offset found\n-  #138 = NameAndType        #61:#173      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #139 = NameAndType        #174:#60      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n-  #140 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  #141 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n-  #142 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n-  #143 = Utf8               (Ljava/io/InputStream;I)V\n-  #144 = Utf8               NO_BLOCK\n-  #145 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n-  #146 = Utf8               [I\n-  #147 = Utf8               ordinal\n-  #148 = Utf8               ()I\n-  #149 = Utf8               readLiteral\n-  #150 = Utf8               hasMoreDataInBlock\n-  #151 = Utf8               LOOKING_FOR_BACK_REFERENCE\n-  #152 = Utf8               EOF\n-  #153 = Utf8               readBackReference\n-  #154 = Utf8               append\n-  #155 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #157 = Utf8               toString\n-  #158 = Utf8               ()Ljava/lang/String;\n-  #159 = Utf8               (Ljava/lang/String;)V\n-  #160 = Utf8               readOneByte\n-  #161 = Utf8               startLiteral\n-  #162 = Utf8               (J)V\n-  #163 = Utf8               IN_LITERAL\n-  #164 = Utf8               supplier\n-  #165 = Class              #175          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #166 = Utf8               ByteSupplier\n-  #167 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #168 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #169 = Utf8               fromLittleEndian\n-  #170 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #171 = Utf8               startBackReference\n-  #172 = Utf8               (IJ)V\n-  #173 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #174 = Utf8               IN_BACK_REFERENCE\n-  #175 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               BlockLZ4CompressorInputStream.java\n+   #98 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+   #99 = NameAndType        #61:#140      // \"<init>\":(Ljava/io/InputStream;I)V\n+  #100 = NameAndType        #141:#60      // NO_BLOCK:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #101 = NameAndType        #59:#60       // state:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #102 = NameAndType        #142:#143     // $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State:[I\n+  #103 = NameAndType        #144:#145     // ordinal:()I\n+  #104 = NameAndType        #80:#81       // readSizes:()V\n+  #105 = NameAndType        #146:#71      // readLiteral:([BII)I\n+  #106 = NameAndType        #147:#90      // hasMoreDataInBlock:()Z\n+  #107 = NameAndType        #148:#60      // LOOKING_FOR_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #108 = NameAndType        #70:#71       // read:([BII)I\n+  #109 = NameAndType        #89:#90       // initializeBackReference:()Z\n+  #110 = NameAndType        #149:#60      // EOF:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #111 = NameAndType        #150:#71      // readBackReference:([BII)I\n+  #112 = Utf8               java/io/IOException\n+  #113 = Utf8               java/lang/StringBuilder\n+  #114 = NameAndType        #61:#81       // \"<init>\":()V\n+  #115 = Utf8               Unknown stream state\n+  #116 = NameAndType        #151:#152     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #117 = NameAndType        #151:#153     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #154:#155     // toString:()Ljava/lang/String;\n+  #119 = NameAndType        #61:#156      // \"<init>\":(Ljava/lang/String;)V\n+  #120 = NameAndType        #157:#145     // readOneByte:()I\n+  #121 = Utf8               Premature end of stream while looking for next block\n+  #122 = NameAndType        #58:#50       // nextBackReferenceSize:I\n+  #123 = NameAndType        #85:#86       // readSizeBytes:()J\n+  #124 = Utf8               Illegal block with a negative literal size found\n+  #125 = NameAndType        #158:#159     // startLiteral:(J)V\n+  #126 = NameAndType        #160:#60      // IN_LITERAL:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #127 = Utf8               Premature end of stream while parsing length\n+  #128 = NameAndType        #161:#164     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #129 = Class              #165          // org/apache/commons/compress/utils/ByteUtils\n+  #130 = NameAndType        #166:#167     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #131 = Utf8               Illegal block with a negative match length found\n+  #132 = NameAndType        #168:#169     // startBackReference:(IJ)V\n+  #133 = Utf8               java/lang/IllegalArgumentException\n+  #134 = Utf8               Illegal block with bad offset found\n+  #135 = NameAndType        #61:#170      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #136 = NameAndType        #171:#60      // IN_BACK_REFERENCE:Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State;\n+  #137 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  #138 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n+  #139 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State\n+  #140 = Utf8               (Ljava/io/InputStream;I)V\n+  #141 = Utf8               NO_BLOCK\n+  #142 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz4$BlockLZ4CompressorInputStream$State\n+  #143 = Utf8               [I\n+  #144 = Utf8               ordinal\n+  #145 = Utf8               ()I\n+  #146 = Utf8               readLiteral\n+  #147 = Utf8               hasMoreDataInBlock\n+  #148 = Utf8               LOOKING_FOR_BACK_REFERENCE\n+  #149 = Utf8               EOF\n+  #150 = Utf8               readBackReference\n+  #151 = Utf8               append\n+  #152 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #153 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #154 = Utf8               toString\n+  #155 = Utf8               ()Ljava/lang/String;\n+  #156 = Utf8               (Ljava/lang/String;)V\n+  #157 = Utf8               readOneByte\n+  #158 = Utf8               startLiteral\n+  #159 = Utf8               (J)V\n+  #160 = Utf8               IN_LITERAL\n+  #161 = Utf8               supplier\n+  #162 = Class              #172          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #163 = Utf8               ByteSupplier\n+  #164 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #165 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #166 = Utf8               fromLittleEndian\n+  #167 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #168 = Utf8               startBackReference\n+  #169 = Utf8               (IJ)V\n+  #170 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #171 = Utf8               IN_BACK_REFERENCE\n+  #172 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n {\n   static final int WINDOW_SIZE = 65536;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 65536\n \n   static final int SIZE_BITS = 4;\n@@ -620,8 +617,8 @@\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BlockLZ4CompressorInputStream.java\"\n InnerClasses:\n   static #45;                             // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$1\n   private static final #48= #47 of #1;    // State=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream$State of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  public static #166= #165 of #132;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static #163= #162 of #129;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n"}]}
