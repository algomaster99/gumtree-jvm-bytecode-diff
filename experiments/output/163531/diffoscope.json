{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$HuffmanCodes.class", "source2": "second/HuffmanDecoder$HuffmanCodes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum a366754866b1ea3cdfff8b5a0d1a7acea96b4319d0695db79cde673b4286ea02\n+  SHA-256 checksum 6d5482d12770a5f3b081483fdf8409468988b5d6735ba89880758db76e61dd8d\n   Compiled from \"HuffmanDecoder.java\"\n class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$HuffmanCodes extends org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #24                         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n   super_class: #25                        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n   interfaces: 0, fields: 8, methods: 7, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #24.#85       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-    #2 = Methodref          #25.#86       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-    #3 = Fieldref           #24.#87       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.endOfBlock:Z\n-    #4 = Fieldref           #24.#88       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferPos:I\n-    #5 = Fieldref           #24.#89       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBuffer:[B\n-    #6 = Fieldref           #24.#90       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferLength:I\n-    #7 = Fieldref           #24.#91       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-    #8 = Methodref          #92.#93       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-    #9 = Fieldref           #24.#94       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #10 = Fieldref           #24.#95       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #11 = Fieldref           #96.#97       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #12 = Methodref          #24.#98       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.decodeNext:([BII)I\n-   #13 = Methodref          #24.#99       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.copyFromRunBuffer:([BII)I\n-   #14 = Methodref          #92.#100      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-   #15 = Methodref          #92.#101      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-   #16 = Methodref          #92.#102      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-   #17 = Methodref          #103.#104     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n-   #18 = Methodref          #92.#105      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n-   #19 = Methodref          #92.#106      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-   #20 = Methodref          #92.#107      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n-   #21 = Methodref          #103.#108     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n-   #22 = Methodref          #109.#110     // java/lang/Math.min:(II)I\n-   #23 = Methodref          #111.#112     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #24 = Class              #113          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-   #25 = Class              #114          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+    #1 = Fieldref           #24.#84       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #2 = Methodref          #25.#85       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+    #3 = Fieldref           #24.#86       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.endOfBlock:Z\n+    #4 = Fieldref           #24.#87       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferPos:I\n+    #5 = Fieldref           #24.#88       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBuffer:[B\n+    #6 = Fieldref           #24.#89       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferLength:I\n+    #7 = Fieldref           #24.#90       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+    #8 = Methodref          #91.#92       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+    #9 = Fieldref           #24.#93       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #10 = Fieldref           #24.#94       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #11 = Fieldref           #56.#95       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #12 = Methodref          #24.#96       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.decodeNext:([BII)I\n+   #13 = Methodref          #24.#97       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.copyFromRunBuffer:([BII)I\n+   #14 = Methodref          #91.#98       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #15 = Methodref          #91.#99       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+   #16 = Methodref          #91.#100      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #17 = Methodref          #101.#102     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+   #18 = Methodref          #91.#103      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n+   #19 = Methodref          #91.#104      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #20 = Methodref          #91.#105      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n+   #21 = Methodref          #101.#106     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n+   #22 = Methodref          #107.#108     // java/lang/Math.min:(II)I\n+   #23 = Methodref          #109.#110     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #24 = Class              #111          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n+   #25 = Class              #112          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n    #26 = Utf8               endOfBlock\n    #27 = Utf8               Z\n    #28 = Utf8               state\n    #29 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n    #30 = Utf8               lengthTree\n-   #31 = Class              #116          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n+   #31 = Class              #114          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n    #32 = Utf8               BinaryTreeNode\n    #33 = Utf8               InnerClasses\n    #34 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n    #35 = Utf8               distanceTree\n    #36 = Utf8               runBufferPos\n    #37 = Utf8               I\n    #38 = Utf8               runBuffer\n@@ -59,108 +59,106 @@\n    #49 = Utf8               HuffmanCodes\n    #50 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n    #51 = Utf8               lengths\n    #52 = Utf8               [I\n    #53 = Utf8               distance\n    #54 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n    #55 = Utf8               StackMapTable\n-   #56 = Class              #117          // org/apache/commons/compress/compressors/deflate64/HuffmanState\n+   #56 = Class              #115          // org/apache/commons/compress/compressors/deflate64/HuffmanState\n    #57 = Utf8               read\n    #58 = Utf8               ([BII)I\n    #59 = Utf8               b\n    #60 = Utf8               off\n    #61 = Utf8               len\n    #62 = Utf8               Exceptions\n-   #63 = Class              #118          // java/io/IOException\n+   #63 = Class              #116          // java/io/IOException\n    #64 = Utf8               decodeNext\n    #65 = Utf8               runMask\n    #66 = Utf8               run\n    #67 = Utf8               runXtra\n    #68 = Utf8               distSym\n    #69 = Utf8               distMask\n    #70 = Utf8               dist\n    #71 = Utf8               distXtra\n    #72 = Utf8               symbol\n    #73 = Utf8               result\n-   #74 = Class              #113          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-   #75 = Class              #39           // \"[B\"\n-   #76 = Utf8               copyFromRunBuffer\n-   #77 = Utf8               bytesInBuffer\n-   #78 = Utf8               copiedBytes\n-   #79 = Utf8               hasData\n-   #80 = Utf8               ()Z\n-   #81 = Utf8               available\n-   #82 = Utf8               ()I\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               HuffmanDecoder.java\n-   #85 = NameAndType        #41:#42       // this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #86 = NameAndType        #43:#120      // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-   #87 = NameAndType        #26:#27       // endOfBlock:Z\n-   #88 = NameAndType        #36:#37       // runBufferPos:I\n-   #89 = NameAndType        #38:#39       // runBuffer:[B\n-   #90 = NameAndType        #40:#37       // runBufferLength:I\n-   #91 = NameAndType        #28:#29       // state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #92 = Class              #121          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #93 = NameAndType        #122:#123     // access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #94 = NameAndType        #30:#34       // lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #95 = NameAndType        #35:#34       // distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #96 = Class              #117          // org/apache/commons/compress/compressors/deflate64/HuffmanState\n-   #97 = NameAndType        #124:#29      // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #98 = NameAndType        #64:#58       // decodeNext:([BII)I\n-   #99 = NameAndType        #76:#58       // copyFromRunBuffer:([BII)I\n-  #100 = NameAndType        #125:#126     // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-  #101 = NameAndType        #127:#128     // access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-  #102 = NameAndType        #129:#131     // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #103 = Class              #132          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #104 = NameAndType        #133:#134     // add:(B)B\n-  #105 = NameAndType        #135:#136     // access$1000:()[S\n-  #106 = NameAndType        #137:#138     // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-  #107 = NameAndType        #139:#140     // access$1100:()[I\n-  #108 = NameAndType        #141:#142     // recordToBuffer:(II[B)V\n-  #109 = Class              #143          // java/lang/Math\n-  #110 = NameAndType        #144:#145     // min:(II)I\n-  #111 = Class              #146          // java/lang/System\n-  #112 = NameAndType        #147:#148     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #113 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-  #114 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n-  #115 = Utf8               DecoderState\n-  #116 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n-  #117 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n-  #118 = Utf8               java/io/IOException\n-  #119 = Class              #149          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #120 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-  #121 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #122 = Utf8               access$800\n-  #123 = Utf8               ([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-  #124 = Utf8               INITIAL\n-  #125 = Utf8               access$400\n-  #126 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-  #127 = Utf8               access$900\n-  #128 = Utf8               (Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-  #129 = Utf8               access$600\n-  #130 = Utf8               DecodingMemory\n-  #131 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #132 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #133 = Utf8               add\n-  #134 = Utf8               (B)B\n-  #135 = Utf8               access$1000\n-  #136 = Utf8               ()[S\n-  #137 = Utf8               access$500\n-  #138 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-  #139 = Utf8               access$1100\n-  #140 = Utf8               ()[I\n-  #141 = Utf8               recordToBuffer\n-  #142 = Utf8               (II[B)V\n-  #143 = Utf8               java/lang/Math\n-  #144 = Utf8               min\n-  #145 = Utf8               (II)I\n-  #146 = Utf8               java/lang/System\n-  #147 = Utf8               arraycopy\n-  #148 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #149 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+   #74 = Class              #39           // \"[B\"\n+   #75 = Utf8               copyFromRunBuffer\n+   #76 = Utf8               bytesInBuffer\n+   #77 = Utf8               copiedBytes\n+   #78 = Utf8               hasData\n+   #79 = Utf8               ()Z\n+   #80 = Utf8               available\n+   #81 = Utf8               ()I\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               HuffmanDecoder.java\n+   #84 = NameAndType        #41:#42       // this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+   #85 = NameAndType        #43:#118      // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+   #86 = NameAndType        #26:#27       // endOfBlock:Z\n+   #87 = NameAndType        #36:#37       // runBufferPos:I\n+   #88 = NameAndType        #38:#39       // runBuffer:[B\n+   #89 = NameAndType        #40:#37       // runBufferLength:I\n+   #90 = NameAndType        #28:#29       // state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #91 = Class              #119          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #92 = NameAndType        #120:#121     // access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #93 = NameAndType        #30:#34       // lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #94 = NameAndType        #35:#34       // distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #95 = NameAndType        #122:#29      // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #96 = NameAndType        #64:#58       // decodeNext:([BII)I\n+   #97 = NameAndType        #75:#58       // copyFromRunBuffer:([BII)I\n+   #98 = NameAndType        #123:#124     // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #99 = NameAndType        #125:#126     // access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+  #100 = NameAndType        #127:#129     // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+  #101 = Class              #130          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+  #102 = NameAndType        #131:#132     // add:(B)B\n+  #103 = NameAndType        #133:#134     // access$1000:()[S\n+  #104 = NameAndType        #135:#136     // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+  #105 = NameAndType        #137:#138     // access$1100:()[I\n+  #106 = NameAndType        #139:#140     // recordToBuffer:(II[B)V\n+  #107 = Class              #141          // java/lang/Math\n+  #108 = NameAndType        #142:#143     // min:(II)I\n+  #109 = Class              #144          // java/lang/System\n+  #110 = NameAndType        #145:#146     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #111 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n+  #112 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+  #113 = Utf8               DecoderState\n+  #114 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n+  #115 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n+  #116 = Utf8               java/io/IOException\n+  #117 = Class              #147          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #118 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+  #119 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #120 = Utf8               access$800\n+  #121 = Utf8               ([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+  #122 = Utf8               INITIAL\n+  #123 = Utf8               access$400\n+  #124 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+  #125 = Utf8               access$900\n+  #126 = Utf8               (Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+  #127 = Utf8               access$600\n+  #128 = Utf8               DecodingMemory\n+  #129 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+  #130 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+  #131 = Utf8               add\n+  #132 = Utf8               (B)B\n+  #133 = Utf8               access$1000\n+  #134 = Utf8               ()[S\n+  #135 = Utf8               access$500\n+  #136 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+  #137 = Utf8               access$1100\n+  #138 = Utf8               ()[I\n+  #139 = Utf8               recordToBuffer\n+  #140 = Utf8               (II[B)V\n+  #141 = Utf8               java/lang/Math\n+  #142 = Utf8               min\n+  #143 = Utf8               (II)I\n+  #144 = Utf8               java/lang/System\n+  #145 = Utf8               arraycopy\n+  #146 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #147 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n {\n   private boolean endOfBlock;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private final org.apache.commons.compress.compressors.deflate64.HuffmanState state;\n     descriptor: Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n@@ -587,12 +585,12 @@\n         line 349: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n-  private static #32= #31 of #92;         // BinaryTreeNode=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private #49= #24 of #92;                // HuffmanCodes=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private static abstract #115= #25 of #92; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  static #119;                            // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  private static #130= #103 of #92;       // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static #32= #31 of #91;         // BinaryTreeNode=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private #49= #24 of #91;                // HuffmanCodes=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static abstract #113= #25 of #91; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  static #117;                            // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  private static #128= #101 of #91;       // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n"}]}
