{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,43 @@\n-  SHA-256 checksum b22386c102337ece06e7d8e1b308a47ec6cf25b6ada90d497baaeffd203dc0ba\n+  SHA-256 checksum 63deec0de3a7c6d6ca65ff286490e3d452b2a3740df5582e94ee28ce3e3ecfa3\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n   super_class: #26                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Class              #97           // org/apache/commons/io/file/AccumulatorPathVisitor\n-    #2 = Methodref          #98.#99       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Methodref          #1.#100       // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #4 = Methodref          #1.#101       // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-    #5 = Methodref          #98.#102      // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #98.#103      // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #7 = Methodref          #26.#100      // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #8 = Class              #104          // java/util/ArrayList\n-    #9 = Methodref          #8.#105       // java/util/ArrayList.\"<init>\":()V\n-   #10 = Fieldref           #1.#106       // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n-   #11 = Fieldref           #1.#107       // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n-   #12 = Methodref          #26.#101      // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #13 = InterfaceMethodref #108.#109     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #14 = InterfaceMethodref #110.#111     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #15 = Methodref          #26.#112      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #16 = Methodref          #113.#114     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #17 = Methodref          #26.#115      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #18 = Class              #116          // java/lang/Object\n-   #19 = Methodref          #113.#117     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #20 = Methodref          #1.#118       // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n-   #21 = Methodref          #119.#120     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #22 = Methodref          #1.#121       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n-   #23 = Methodref          #26.#122      // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #24 = Methodref          #1.#123       // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-   #25 = Methodref          #26.#124      // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #26 = Class              #125          // org/apache/commons/io/file/CountingPathVisitor\n+    #1 = Class              #96           // org/apache/commons/io/file/AccumulatorPathVisitor\n+    #2 = Methodref          #97.#98       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #3 = Methodref          #1.#99        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #4 = Methodref          #1.#100       // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+    #5 = Methodref          #97.#101      // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Methodref          #97.#102      // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #7 = Methodref          #26.#99       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #8 = Class              #103          // java/util/ArrayList\n+    #9 = Methodref          #8.#104       // java/util/ArrayList.\"<init>\":()V\n+   #10 = Fieldref           #1.#105       // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n+   #11 = Fieldref           #1.#106       // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n+   #12 = Methodref          #26.#100      // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #13 = InterfaceMethodref #107.#108     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #14 = InterfaceMethodref #109.#110     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #15 = Methodref          #26.#111      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #16 = Methodref          #112.#113     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #17 = Methodref          #26.#114      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #18 = Class              #115          // java/lang/Object\n+   #19 = Methodref          #112.#116     // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #20 = Methodref          #1.#117       // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n+   #21 = Methodref          #118.#119     // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #22 = Methodref          #1.#120       // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n+   #23 = Methodref          #26.#121      // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+   #24 = Methodref          #1.#122       // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+   #25 = Methodref          #26.#123      // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #26 = Class              #124          // org/apache/commons/io/file/CountingPathVisitor\n    #27 = Utf8               dirList\n    #28 = Utf8               Ljava/util/List;\n    #29 = Utf8               Signature\n    #30 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n    #31 = Utf8               fileList\n    #32 = Utf8               withBigIntegerCounters\n    #33 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n@@ -49,15 +49,15 @@\n    #39 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n    #40 = Utf8               dirFilter\n    #41 = Utf8               withLongCounters\n    #42 = Utf8               <init>\n    #43 = Utf8               ()V\n    #44 = Utf8               this\n    #45 = Utf8               Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #46 = Class              #126          // org/apache/commons/io/file/Counters$PathCounters\n+   #46 = Class              #125          // org/apache/commons/io/file/Counters$PathCounters\n    #47 = Utf8               PathCounters\n    #48 = Utf8               InnerClasses\n    #49 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n    #50 = Utf8               pathCounter\n    #51 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n    #52 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n    #53 = Utf8               add\n@@ -69,91 +69,90 @@\n    #59 = Utf8               (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n    #60 = Utf8               equals\n    #61 = Utf8               (Ljava/lang/Object;)Z\n    #62 = Utf8               obj\n    #63 = Utf8               Ljava/lang/Object;\n    #64 = Utf8               other\n    #65 = Utf8               StackMapTable\n-   #66 = Class              #97           // org/apache/commons/io/file/AccumulatorPathVisitor\n-   #67 = Utf8               getDirList\n-   #68 = Utf8               ()Ljava/util/List;\n-   #69 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-   #70 = Utf8               getFileList\n-   #71 = Utf8               hashCode\n-   #72 = Utf8               ()I\n-   #73 = Utf8               prime\n-   #74 = Utf8               I\n-   #75 = Utf8               result\n-   #76 = Utf8               relativizeDirectories\n-   #77 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #78 = Utf8               parent\n-   #79 = Utf8               sort\n-   #80 = Utf8               Z\n-   #81 = Utf8               comparator\n-   #82 = Utf8               Ljava/util/Comparator;\n-   #83 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-   #84 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #85 = Utf8               relativizeFiles\n-   #86 = Utf8               updateDirCounter\n-   #87 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #88 = Utf8               exc\n-   #89 = Utf8               Ljava/io/IOException;\n-   #90 = Utf8               updateFileCounters\n-   #91 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #92 = Utf8               file\n-   #93 = Utf8               attributes\n-   #94 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               AccumulatorPathVisitor.java\n-   #97 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-   #98 = Class              #127          // org/apache/commons/io/file/Counters\n-   #99 = NameAndType        #128:#129     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #100 = NameAndType        #42:#49       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #101 = NameAndType        #42:#52       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-  #102 = NameAndType        #130:#129     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #103 = NameAndType        #131:#129     // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #104 = Utf8               java/util/ArrayList\n-  #105 = NameAndType        #42:#43       // \"<init>\":()V\n-  #106 = NameAndType        #27:#28       // dirList:Ljava/util/List;\n-  #107 = NameAndType        #31:#28       // fileList:Ljava/util/List;\n-  #108 = Class              #132          // java/nio/file/Path\n-  #109 = NameAndType        #133:#134     // normalize:()Ljava/nio/file/Path;\n-  #110 = Class              #135          // java/util/List\n-  #111 = NameAndType        #53:#61       // add:(Ljava/lang/Object;)Z\n-  #112 = NameAndType        #60:#61       // equals:(Ljava/lang/Object;)Z\n-  #113 = Class              #136          // java/util/Objects\n-  #114 = NameAndType        #60:#137      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #115 = NameAndType        #71:#72       // hashCode:()I\n-  #116 = Utf8               java/lang/Object\n-  #117 = NameAndType        #138:#139     // hash:([Ljava/lang/Object;)I\n-  #118 = NameAndType        #67:#68       // getDirList:()Ljava/util/List;\n-  #119 = Class              #140          // org/apache/commons/io/file/PathUtils\n-  #120 = NameAndType        #141:#142     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #121 = NameAndType        #70:#68       // getFileList:()Ljava/util/List;\n-  #122 = NameAndType        #86:#87       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-  #123 = NameAndType        #53:#54       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-  #124 = NameAndType        #90:#91       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #125 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #126 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #127 = Utf8               org/apache/commons/io/file/Counters\n-  #128 = Utf8               bigIntegerPathCounters\n-  #129 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #130 = Utf8               longPathCounters\n-  #131 = Utf8               noopPathCounters\n-  #132 = Utf8               java/nio/file/Path\n-  #133 = Utf8               normalize\n-  #134 = Utf8               ()Ljava/nio/file/Path;\n-  #135 = Utf8               java/util/List\n-  #136 = Utf8               java/util/Objects\n-  #137 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #138 = Utf8               hash\n-  #139 = Utf8               ([Ljava/lang/Object;)I\n-  #140 = Utf8               org/apache/commons/io/file/PathUtils\n-  #141 = Utf8               relativize\n-  #142 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #66 = Utf8               getDirList\n+   #67 = Utf8               ()Ljava/util/List;\n+   #68 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+   #69 = Utf8               getFileList\n+   #70 = Utf8               hashCode\n+   #71 = Utf8               ()I\n+   #72 = Utf8               prime\n+   #73 = Utf8               I\n+   #74 = Utf8               result\n+   #75 = Utf8               relativizeDirectories\n+   #76 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #77 = Utf8               parent\n+   #78 = Utf8               sort\n+   #79 = Utf8               Z\n+   #80 = Utf8               comparator\n+   #81 = Utf8               Ljava/util/Comparator;\n+   #82 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+   #83 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+   #84 = Utf8               relativizeFiles\n+   #85 = Utf8               updateDirCounter\n+   #86 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n+   #87 = Utf8               exc\n+   #88 = Utf8               Ljava/io/IOException;\n+   #89 = Utf8               updateFileCounters\n+   #90 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #91 = Utf8               file\n+   #92 = Utf8               attributes\n+   #93 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #94 = Utf8               SourceFile\n+   #95 = Utf8               AccumulatorPathVisitor.java\n+   #96 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+   #97 = Class              #126          // org/apache/commons/io/file/Counters\n+   #98 = NameAndType        #127:#128     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #99 = NameAndType        #42:#49       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #100 = NameAndType        #42:#52       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+  #101 = NameAndType        #129:#128     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #102 = NameAndType        #130:#128     // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #103 = Utf8               java/util/ArrayList\n+  #104 = NameAndType        #42:#43       // \"<init>\":()V\n+  #105 = NameAndType        #27:#28       // dirList:Ljava/util/List;\n+  #106 = NameAndType        #31:#28       // fileList:Ljava/util/List;\n+  #107 = Class              #131          // java/nio/file/Path\n+  #108 = NameAndType        #132:#133     // normalize:()Ljava/nio/file/Path;\n+  #109 = Class              #134          // java/util/List\n+  #110 = NameAndType        #53:#61       // add:(Ljava/lang/Object;)Z\n+  #111 = NameAndType        #60:#61       // equals:(Ljava/lang/Object;)Z\n+  #112 = Class              #135          // java/util/Objects\n+  #113 = NameAndType        #60:#136      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #114 = NameAndType        #70:#71       // hashCode:()I\n+  #115 = Utf8               java/lang/Object\n+  #116 = NameAndType        #137:#138     // hash:([Ljava/lang/Object;)I\n+  #117 = NameAndType        #66:#67       // getDirList:()Ljava/util/List;\n+  #118 = Class              #139          // org/apache/commons/io/file/PathUtils\n+  #119 = NameAndType        #140:#141     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #120 = NameAndType        #69:#67       // getFileList:()Ljava/util/List;\n+  #121 = NameAndType        #85:#86       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+  #122 = NameAndType        #53:#54       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+  #123 = NameAndType        #89:#90       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #124 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+  #125 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #126 = Utf8               org/apache/commons/io/file/Counters\n+  #127 = Utf8               bigIntegerPathCounters\n+  #128 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #129 = Utf8               longPathCounters\n+  #130 = Utf8               noopPathCounters\n+  #131 = Utf8               java/nio/file/Path\n+  #132 = Utf8               normalize\n+  #133 = Utf8               ()Ljava/nio/file/Path;\n+  #134 = Utf8               java/util/List\n+  #135 = Utf8               java/util/Objects\n+  #136 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #137 = Utf8               hash\n+  #138 = Utf8               ([Ljava/lang/Object;)I\n+  #139 = Utf8               org/apache/commons/io/file/PathUtils\n+  #140 = Utf8               relativize\n+  #141 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #30                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n@@ -412,30 +411,30 @@\n          1: getfield      #10                 // Field dirList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 164: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #69                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #68                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> getFileList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #11                 // Field fileList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    Signature: #69                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #68                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: bipush        31\n@@ -493,15 +492,15 @@\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #84                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #83                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n@@ -518,15 +517,15 @@\n             0      11     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      11     1 parent   Ljava/nio/file/Path;\n             0      11     2  sort   Z\n             0      11     3 comparator   Ljava/util/Comparator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     3 comparator   Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-    Signature: #84                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #83                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   protected void updateDirCounter(java.nio.file.Path, java.io.IOException);\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -572,8 +571,8 @@\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n             0      16     1  file   Ljava/nio/file/Path;\n             0      16     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #47= #46 of #98;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #47= #46 of #97;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
