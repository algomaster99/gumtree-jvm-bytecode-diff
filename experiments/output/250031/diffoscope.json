{"diffoscope-json-version": 1, "source1": "first/MethodNameCheck.class", "source2": "second/MethodNameCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,24 +21,23 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 9 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        if (!AnnotationUtil.hasOverrideAnnotation(ast)) {\n-            super.visitToken(ast);\n+    public void visitToken(final DetailAST detailAST) {\n+        if (!AnnotationUtil.hasOverrideAnnotation(detailAST)) {\n+            super.visitToken(detailAST);\n         }\n         if (!this.allowClassName) {\n-            final DetailAST method = ast.findFirstToken(58);\n-            final DetailAST classDefOrNew = ast.getParent().getParent();\n-            final DetailAST classIdent = classDefOrNew.findFirstToken(58);\n-            if (classIdent != null && method.getText().equals(classIdent.getText())) {\n-                this.log(method, \"method.name.equals.class.name\", new Object[] { method.getText() });\n+            final DetailAST firstToken = detailAST.findFirstToken(58);\n+            final DetailAST firstToken2 = detailAST.getParent().getParent().findFirstToken(58);\n+            if (firstToken2 != null && firstToken.getText().equals(firstToken2.getText())) {\n+                this.log(firstToken, \"method.name.equals.class.name\", new Object[] { firstToken.getText() });\n             }\n         }\n     }\n     \n     public void setAllowClassName(final boolean allowClassName) {\n         this.allowClassName = allowClassName;\n     }\n"}]}
