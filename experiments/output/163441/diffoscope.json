{"diffoscope-json-version": 1, "source1": "first/BCodec.class", "source2": "second/BCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,65 +1,65 @@\n-  SHA-256 checksum 08eedb3a31b39a2748fa63059252a7f9252055dcf32e67421d0eb13581c186c6\n+  SHA-256 checksum 7eb034a9a0bea79da30af5e3766c306b92cbecc057954180c3fb80812d1f24ee\n   Compiled from \"BCodec.java\"\n public class org.apache.commons.codec.net.BCodec extends org.apache.commons.codec.net.RFC1522Codec implements org.apache.commons.codec.StringEncoder,org.apache.commons.codec.StringDecoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #45                         // org/apache/commons/codec/net/BCodec\n   super_class: #46                        // org/apache/commons/codec/net/RFC1522Codec\n   interfaces: 2, fields: 3, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #98.#99       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-    #2 = Methodref          #45.#100      // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n-    #3 = Fieldref           #45.#101      // org/apache/commons/codec/net/BCodec.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-    #4 = Methodref          #45.#102      // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;Lorg/apache/commons/codec/CodecPolicy;)V\n-    #5 = Methodref          #46.#103      // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n-    #6 = Fieldref           #45.#104      // org/apache/commons/codec/net/BCodec.charset:Ljava/nio/charset/Charset;\n-    #7 = Fieldref           #45.#105      // org/apache/commons/codec/net/BCodec.decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;\n-    #8 = Methodref          #106.#107     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #9 = Fieldref           #108.#109     // org/apache/commons/codec/CodecPolicy.STRICT:Lorg/apache/commons/codec/CodecPolicy;\n-   #10 = String             #110          // B\n-   #11 = Methodref          #12.#111      // org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n-   #12 = Class              #112          // org/apache/commons/codec/binary/Base64\n-   #13 = Methodref          #113.#114     // org/apache/commons/codec/binary/BaseNCodec.getChunkSeparator:()[B\n-   #14 = Methodref          #12.#115      // org/apache/commons/codec/binary/Base64.\"<init>\":(I[BZLorg/apache/commons/codec/CodecPolicy;)V\n-   #15 = Methodref          #12.#116      // org/apache/commons/codec/binary/Base64.decode:([B)[B\n-   #16 = Methodref          #45.#117      // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #17 = Methodref          #45.#118      // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Class              #119          // java/io/UnsupportedEncodingException\n-   #19 = Class              #120          // org/apache/commons/codec/EncoderException\n-   #20 = Methodref          #18.#121      // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n-   #21 = Methodref          #19.#122      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Methodref          #45.#123      // org/apache/commons/codec/net/BCodec.getCharset:()Ljava/nio/charset/Charset;\n-   #23 = Methodref          #45.#124      // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #24 = Methodref          #45.#125      // org/apache/commons/codec/net/BCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Class              #126          // java/lang/IllegalArgumentException\n-   #26 = Class              #127          // org/apache/commons/codec/DecoderException\n-   #27 = Methodref          #128.#121     // java/lang/Exception.getMessage:()Ljava/lang/String;\n-   #28 = Methodref          #26.#122      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #29 = Class              #129          // java/lang/String\n-   #30 = Methodref          #45.#130      // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #31 = Class              #131          // java/lang/StringBuilder\n-   #32 = Methodref          #31.#103      // java/lang/StringBuilder.\"<init>\":()V\n-   #33 = String             #132          // Objects of type\n-   #34 = Methodref          #31.#133      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #35 = Methodref          #134.#135     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #36 = Methodref          #136.#137     // java/lang/Class.getName:()Ljava/lang/String;\n-   #37 = String             #138          //  cannot be encoded using BCodec\n-   #38 = Methodref          #31.#139      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #39 = Methodref          #19.#140      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #40 = Methodref          #45.#141      // org/apache/commons/codec/net/BCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n-   #41 = String             #142          //  cannot be decoded using BCodec\n-   #42 = Methodref          #26.#140      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #43 = Methodref          #106.#143     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #44 = Fieldref           #108.#144     // org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n-   #45 = Class              #145          // org/apache/commons/codec/net/BCodec\n-   #46 = Class              #146          // org/apache/commons/codec/net/RFC1522Codec\n-   #47 = Class              #147          // org/apache/commons/codec/StringEncoder\n-   #48 = Class              #148          // org/apache/commons/codec/StringDecoder\n+    #1 = Fieldref           #97.#98       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+    #2 = Methodref          #45.#99       // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n+    #3 = Fieldref           #45.#100      // org/apache/commons/codec/net/BCodec.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+    #4 = Methodref          #45.#101      // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;Lorg/apache/commons/codec/CodecPolicy;)V\n+    #5 = Methodref          #46.#102      // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n+    #6 = Fieldref           #45.#103      // org/apache/commons/codec/net/BCodec.charset:Ljava/nio/charset/Charset;\n+    #7 = Fieldref           #45.#104      // org/apache/commons/codec/net/BCodec.decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;\n+    #8 = Methodref          #105.#106     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+    #9 = Fieldref           #107.#108     // org/apache/commons/codec/CodecPolicy.STRICT:Lorg/apache/commons/codec/CodecPolicy;\n+   #10 = String             #109          // B\n+   #11 = Methodref          #12.#110      // org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n+   #12 = Class              #111          // org/apache/commons/codec/binary/Base64\n+   #13 = Methodref          #112.#113     // org/apache/commons/codec/binary/BaseNCodec.getChunkSeparator:()[B\n+   #14 = Methodref          #12.#114      // org/apache/commons/codec/binary/Base64.\"<init>\":(I[BZLorg/apache/commons/codec/CodecPolicy;)V\n+   #15 = Methodref          #12.#115      // org/apache/commons/codec/binary/Base64.decode:([B)[B\n+   #16 = Methodref          #45.#116      // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #17 = Methodref          #45.#117      // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #18 = Class              #118          // java/io/UnsupportedEncodingException\n+   #19 = Class              #119          // org/apache/commons/codec/EncoderException\n+   #20 = Methodref          #18.#120      // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n+   #21 = Methodref          #19.#121      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #22 = Methodref          #45.#122      // org/apache/commons/codec/net/BCodec.getCharset:()Ljava/nio/charset/Charset;\n+   #23 = Methodref          #45.#123      // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #24 = Methodref          #45.#124      // org/apache/commons/codec/net/BCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Class              #125          // java/lang/IllegalArgumentException\n+   #26 = Class              #126          // org/apache/commons/codec/DecoderException\n+   #27 = Methodref          #88.#120      // java/lang/Exception.getMessage:()Ljava/lang/String;\n+   #28 = Methodref          #26.#121      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #29 = Class              #127          // java/lang/String\n+   #30 = Methodref          #45.#128      // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #31 = Class              #129          // java/lang/StringBuilder\n+   #32 = Methodref          #31.#102      // java/lang/StringBuilder.\"<init>\":()V\n+   #33 = String             #130          // Objects of type\n+   #34 = Methodref          #31.#131      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #35 = Methodref          #132.#133     // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #36 = Methodref          #134.#135     // java/lang/Class.getName:()Ljava/lang/String;\n+   #37 = String             #136          //  cannot be encoded using BCodec\n+   #38 = Methodref          #31.#137      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #39 = Methodref          #19.#138      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #40 = Methodref          #45.#139      // org/apache/commons/codec/net/BCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n+   #41 = String             #140          //  cannot be decoded using BCodec\n+   #42 = Methodref          #26.#138      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #43 = Methodref          #105.#141     // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #44 = Fieldref           #107.#142     // org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n+   #45 = Class              #143          // org/apache/commons/codec/net/BCodec\n+   #46 = Class              #144          // org/apache/commons/codec/net/RFC1522Codec\n+   #47 = Class              #145          // org/apache/commons/codec/StringEncoder\n+   #48 = Class              #146          // org/apache/commons/codec/StringDecoder\n    #49 = Utf8               DECODING_POLICY_DEFAULT\n    #50 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n    #51 = Utf8               charset\n    #52 = Utf8               Ljava/nio/charset/Charset;\n    #53 = Utf8               decodingPolicy\n    #54 = Utf8               <init>\n    #55 = Utf8               ()V\n@@ -87,106 +87,104 @@\n    #77 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n    #78 = Utf8               strSource\n    #79 = Utf8               sourceCharset\n    #80 = Utf8               Exceptions\n    #81 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    #82 = Utf8               e\n    #83 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #84 = Class              #119          // java/io/UnsupportedEncodingException\n-   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #86 = Utf8               decode\n-   #87 = Utf8               Ljava/lang/Exception;\n-   #88 = Utf8               value\n-   #89 = Class              #149          // java/lang/Exception\n-   #90 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Utf8               Ljava/lang/Object;\n-   #92 = Utf8               getCharset\n-   #93 = Utf8               ()Ljava/nio/charset/Charset;\n-   #94 = Utf8               getDefaultCharset\n-   #95 = Utf8               <clinit>\n-   #96 = Utf8               SourceFile\n-   #97 = Utf8               BCodec.java\n-   #98 = Class              #150          // java/nio/charset/StandardCharsets\n-   #99 = NameAndType        #151:#52      // UTF_8:Ljava/nio/charset/Charset;\n-  #100 = NameAndType        #54:#61       // \"<init>\":(Ljava/nio/charset/Charset;)V\n-  #101 = NameAndType        #49:#50       // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-  #102 = NameAndType        #54:#62       // \"<init>\":(Ljava/nio/charset/Charset;Lorg/apache/commons/codec/CodecPolicy;)V\n-  #103 = NameAndType        #54:#55       // \"<init>\":()V\n-  #104 = NameAndType        #51:#52       // charset:Ljava/nio/charset/Charset;\n-  #105 = NameAndType        #53:#50       // decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;\n-  #106 = Class              #152          // java/nio/charset/Charset\n-  #107 = NameAndType        #153:#154     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #108 = Class              #155          // org/apache/commons/codec/CodecPolicy\n-  #109 = NameAndType        #156:#50      // STRICT:Lorg/apache/commons/codec/CodecPolicy;\n-  #110 = Utf8               B\n-  #111 = NameAndType        #157:#72      // encodeBase64:([B)[B\n-  #112 = Utf8               org/apache/commons/codec/binary/Base64\n-  #113 = Class              #158          // org/apache/commons/codec/binary/BaseNCodec\n-  #114 = NameAndType        #159:#160     // getChunkSeparator:()[B\n-  #115 = NameAndType        #54:#161      // \"<init>\":(I[BZLorg/apache/commons/codec/CodecPolicy;)V\n-  #116 = NameAndType        #86:#72       // decode:([B)[B\n-  #117 = NameAndType        #162:#77      // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #118 = NameAndType        #162:#81      // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #119 = Utf8               java/io/UnsupportedEncodingException\n-  #120 = Utf8               org/apache/commons/codec/EncoderException\n-  #121 = NameAndType        #163:#70      // getMessage:()Ljava/lang/String;\n-  #122 = NameAndType        #54:#164      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #123 = NameAndType        #92:#93       // getCharset:()Ljava/nio/charset/Charset;\n-  #124 = NameAndType        #76:#77       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-  #125 = NameAndType        #165:#85      // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-  #126 = Utf8               java/lang/IllegalArgumentException\n-  #127 = Utf8               org/apache/commons/codec/DecoderException\n-  #128 = Class              #149          // java/lang/Exception\n-  #129 = Utf8               java/lang/String\n-  #130 = NameAndType        #76:#85       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #131 = Utf8               java/lang/StringBuilder\n-  #132 = Utf8               Objects of type\n-  #133 = NameAndType        #166:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #134 = Class              #168          // java/lang/Object\n-  #135 = NameAndType        #169:#170     // getClass:()Ljava/lang/Class;\n-  #136 = Class              #171          // java/lang/Class\n-  #137 = NameAndType        #172:#70      // getName:()Ljava/lang/String;\n-  #138 = Utf8                cannot be encoded using BCodec\n-  #139 = NameAndType        #173:#70      // toString:()Ljava/lang/String;\n-  #140 = NameAndType        #54:#63       // \"<init>\":(Ljava/lang/String;)V\n-  #141 = NameAndType        #86:#85       // decode:(Ljava/lang/String;)Ljava/lang/String;\n-  #142 = Utf8                cannot be decoded using BCodec\n-  #143 = NameAndType        #174:#70      // name:()Ljava/lang/String;\n-  #144 = NameAndType        #175:#50      // LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n-  #145 = Utf8               org/apache/commons/codec/net/BCodec\n-  #146 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n-  #147 = Utf8               org/apache/commons/codec/StringEncoder\n-  #148 = Utf8               org/apache/commons/codec/StringDecoder\n-  #149 = Utf8               java/lang/Exception\n-  #150 = Utf8               java/nio/charset/StandardCharsets\n-  #151 = Utf8               UTF_8\n-  #152 = Utf8               java/nio/charset/Charset\n-  #153 = Utf8               forName\n-  #154 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #155 = Utf8               org/apache/commons/codec/CodecPolicy\n-  #156 = Utf8               STRICT\n-  #157 = Utf8               encodeBase64\n-  #158 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #159 = Utf8               getChunkSeparator\n-  #160 = Utf8               ()[B\n-  #161 = Utf8               (I[BZLorg/apache/commons/codec/CodecPolicy;)V\n-  #162 = Utf8               encodeText\n-  #163 = Utf8               getMessage\n-  #164 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #165 = Utf8               decodeText\n-  #166 = Utf8               append\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #168 = Utf8               java/lang/Object\n-  #169 = Utf8               getClass\n-  #170 = Utf8               ()Ljava/lang/Class;\n-  #171 = Utf8               java/lang/Class\n-  #172 = Utf8               getName\n-  #173 = Utf8               toString\n-  #174 = Utf8               name\n-  #175 = Utf8               LENIENT\n+   #84 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #85 = Utf8               decode\n+   #86 = Utf8               Ljava/lang/Exception;\n+   #87 = Utf8               value\n+   #88 = Class              #147          // java/lang/Exception\n+   #89 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #90 = Utf8               Ljava/lang/Object;\n+   #91 = Utf8               getCharset\n+   #92 = Utf8               ()Ljava/nio/charset/Charset;\n+   #93 = Utf8               getDefaultCharset\n+   #94 = Utf8               <clinit>\n+   #95 = Utf8               SourceFile\n+   #96 = Utf8               BCodec.java\n+   #97 = Class              #148          // java/nio/charset/StandardCharsets\n+   #98 = NameAndType        #149:#52      // UTF_8:Ljava/nio/charset/Charset;\n+   #99 = NameAndType        #54:#61       // \"<init>\":(Ljava/nio/charset/Charset;)V\n+  #100 = NameAndType        #49:#50       // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+  #101 = NameAndType        #54:#62       // \"<init>\":(Ljava/nio/charset/Charset;Lorg/apache/commons/codec/CodecPolicy;)V\n+  #102 = NameAndType        #54:#55       // \"<init>\":()V\n+  #103 = NameAndType        #51:#52       // charset:Ljava/nio/charset/Charset;\n+  #104 = NameAndType        #53:#50       // decodingPolicy:Lorg/apache/commons/codec/CodecPolicy;\n+  #105 = Class              #150          // java/nio/charset/Charset\n+  #106 = NameAndType        #151:#152     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #107 = Class              #153          // org/apache/commons/codec/CodecPolicy\n+  #108 = NameAndType        #154:#50      // STRICT:Lorg/apache/commons/codec/CodecPolicy;\n+  #109 = Utf8               B\n+  #110 = NameAndType        #155:#72      // encodeBase64:([B)[B\n+  #111 = Utf8               org/apache/commons/codec/binary/Base64\n+  #112 = Class              #156          // org/apache/commons/codec/binary/BaseNCodec\n+  #113 = NameAndType        #157:#158     // getChunkSeparator:()[B\n+  #114 = NameAndType        #54:#159      // \"<init>\":(I[BZLorg/apache/commons/codec/CodecPolicy;)V\n+  #115 = NameAndType        #85:#72       // decode:([B)[B\n+  #116 = NameAndType        #160:#77      // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #117 = NameAndType        #160:#81      // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #118 = Utf8               java/io/UnsupportedEncodingException\n+  #119 = Utf8               org/apache/commons/codec/EncoderException\n+  #120 = NameAndType        #161:#70      // getMessage:()Ljava/lang/String;\n+  #121 = NameAndType        #54:#162      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #122 = NameAndType        #91:#92       // getCharset:()Ljava/nio/charset/Charset;\n+  #123 = NameAndType        #76:#77       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #124 = NameAndType        #163:#84      // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+  #125 = Utf8               java/lang/IllegalArgumentException\n+  #126 = Utf8               org/apache/commons/codec/DecoderException\n+  #127 = Utf8               java/lang/String\n+  #128 = NameAndType        #76:#84       // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #129 = Utf8               java/lang/StringBuilder\n+  #130 = Utf8               Objects of type\n+  #131 = NameAndType        #164:#165     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #132 = Class              #166          // java/lang/Object\n+  #133 = NameAndType        #167:#168     // getClass:()Ljava/lang/Class;\n+  #134 = Class              #169          // java/lang/Class\n+  #135 = NameAndType        #170:#70      // getName:()Ljava/lang/String;\n+  #136 = Utf8                cannot be encoded using BCodec\n+  #137 = NameAndType        #171:#70      // toString:()Ljava/lang/String;\n+  #138 = NameAndType        #54:#63       // \"<init>\":(Ljava/lang/String;)V\n+  #139 = NameAndType        #85:#84       // decode:(Ljava/lang/String;)Ljava/lang/String;\n+  #140 = Utf8                cannot be decoded using BCodec\n+  #141 = NameAndType        #172:#70      // name:()Ljava/lang/String;\n+  #142 = NameAndType        #173:#50      // LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n+  #143 = Utf8               org/apache/commons/codec/net/BCodec\n+  #144 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n+  #145 = Utf8               org/apache/commons/codec/StringEncoder\n+  #146 = Utf8               org/apache/commons/codec/StringDecoder\n+  #147 = Utf8               java/lang/Exception\n+  #148 = Utf8               java/nio/charset/StandardCharsets\n+  #149 = Utf8               UTF_8\n+  #150 = Utf8               java/nio/charset/Charset\n+  #151 = Utf8               forName\n+  #152 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #153 = Utf8               org/apache/commons/codec/CodecPolicy\n+  #154 = Utf8               STRICT\n+  #155 = Utf8               encodeBase64\n+  #156 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+  #157 = Utf8               getChunkSeparator\n+  #158 = Utf8               ()[B\n+  #159 = Utf8               (I[BZLorg/apache/commons/codec/CodecPolicy;)V\n+  #160 = Utf8               encodeText\n+  #161 = Utf8               getMessage\n+  #162 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #163 = Utf8               decodeText\n+  #164 = Utf8               append\n+  #165 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #166 = Utf8               java/lang/Object\n+  #167 = Utf8               getClass\n+  #168 = Utf8               ()Ljava/lang/Class;\n+  #169 = Utf8               java/lang/Class\n+  #170 = Utf8               getName\n+  #171 = Utf8               toString\n+  #172 = Utf8               name\n+  #173 = Utf8               LENIENT\n {\n   private static final org.apache.commons.codec.CodecPolicy DECODING_POLICY_DEFAULT;\n     descriptor: Lorg/apache/commons/codec/CodecPolicy;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private final java.nio.charset.Charset charset;\n     descriptor: Ljava/nio/charset/Charset;\n"}]}
