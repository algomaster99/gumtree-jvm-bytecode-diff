{"diffoscope-json-version": 1, "source1": "first/FileBasedScatterGatherBackingStore.class", "source2": "second/FileBasedScatterGatherBackingStore.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,37 +1,37 @@\n-  SHA-256 checksum afe40f4098d252d518db166a1d64893b8fe3253ff8e7dff8ea1e195cbadbeaf1\n+  SHA-256 checksum 12c0f83154e8dc6b0c1e155eaf59e107a685d1e2ff2cc4101e8c77040167ad5a\n   Compiled from \"FileBasedScatterGatherBackingStore.java\"\n public class org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore implements org.apache.commons.compress.parallel.ScatterGatherBackingStore\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #18                         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n   super_class: #19                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #60.#61        // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #2 = Methodref          #18.#62        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-   #3 = Methodref          #19.#63        // java/lang/Object.\"<init>\":()V\n-   #4 = Fieldref           #18.#64        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/nio/file/Path;\n-   #5 = Class              #65            // java/nio/file/OpenOption\n-   #6 = Methodref          #66.#67        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #7 = Fieldref           #18.#68        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.outputStream:Ljava/io/OutputStream;\n-   #8 = Class              #69            // java/io/FileNotFoundException\n-   #9 = Class              #70            // java/io/IOException\n-  #10 = Class              #71            // java/io/UncheckedIOException\n-  #11 = Methodref          #10.#72        // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-  #12 = Methodref          #66.#73        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #13 = Fieldref           #18.#74        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n-  #14 = Methodref          #75.#76        // java/io/OutputStream.close:()V\n-  #15 = Methodref          #75.#77        // java/io/OutputStream.write:([BII)V\n-  #16 = Methodref          #18.#78        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n-  #17 = Methodref          #66.#79        // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #18 = Class              #80            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #19 = Class              #81            // java/lang/Object\n-  #20 = Class              #82            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+   #1 = Methodref          #57.#58        // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #2 = Methodref          #18.#59        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+   #3 = Methodref          #19.#60        // java/lang/Object.\"<init>\":()V\n+   #4 = Fieldref           #18.#61        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/nio/file/Path;\n+   #5 = Class              #62            // java/nio/file/OpenOption\n+   #6 = Methodref          #63.#64        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #7 = Fieldref           #18.#65        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.outputStream:Ljava/io/OutputStream;\n+   #8 = Class              #66            // java/io/FileNotFoundException\n+   #9 = Class              #67            // java/io/IOException\n+  #10 = Class              #68            // java/io/UncheckedIOException\n+  #11 = Methodref          #10.#69        // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+  #12 = Methodref          #63.#70        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #13 = Fieldref           #18.#71        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n+  #14 = Methodref          #72.#73        // java/io/OutputStream.close:()V\n+  #15 = Methodref          #72.#74        // java/io/OutputStream.write:([BII)V\n+  #16 = Methodref          #18.#75        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n+  #17 = Methodref          #63.#76        // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #18 = Class              #77            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #19 = Class              #78            // java/lang/Object\n+  #20 = Class              #79            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n   #21 = Utf8               target\n   #22 = Utf8               Ljava/nio/file/Path;\n   #23 = Utf8               outputStream\n   #24 = Utf8               Ljava/io/OutputStream;\n   #25 = Utf8               closed\n   #26 = Utf8               Z\n   #27 = Utf8               <init>\n@@ -44,71 +44,68 @@\n   #34 = Utf8               Ljava/io/File;\n   #35 = Utf8               Exceptions\n   #36 = Utf8               (Ljava/nio/file/Path;)V\n   #37 = Utf8               ex\n   #38 = Utf8               Ljava/io/FileNotFoundException;\n   #39 = Utf8               Ljava/io/IOException;\n   #40 = Utf8               StackMapTable\n-  #41 = Class              #80            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #42 = Class              #83            // java/nio/file/Path\n-  #43 = Class              #69            // java/io/FileNotFoundException\n-  #44 = Class              #70            // java/io/IOException\n-  #45 = Utf8               getInputStream\n-  #46 = Utf8               ()Ljava/io/InputStream;\n-  #47 = Utf8               closeForWriting\n-  #48 = Utf8               ()V\n-  #49 = Utf8               writeOut\n-  #50 = Utf8               ([BII)V\n-  #51 = Utf8               data\n-  #52 = Utf8               [B\n-  #53 = Utf8               offset\n-  #54 = Utf8               I\n-  #55 = Utf8               length\n-  #56 = Utf8               close\n-  #57 = Class              #84            // java/lang/Throwable\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               FileBasedScatterGatherBackingStore.java\n-  #60 = Class              #85            // java/io/File\n-  #61 = NameAndType        #86:#87        // toPath:()Ljava/nio/file/Path;\n-  #62 = NameAndType        #27:#36        // \"<init>\":(Ljava/nio/file/Path;)V\n-  #63 = NameAndType        #27:#48        // \"<init>\":()V\n-  #64 = NameAndType        #21:#22        // target:Ljava/nio/file/Path;\n-  #65 = Utf8               java/nio/file/OpenOption\n-  #66 = Class              #88            // java/nio/file/Files\n-  #67 = NameAndType        #89:#90        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #68 = NameAndType        #23:#24        // outputStream:Ljava/io/OutputStream;\n-  #69 = Utf8               java/io/FileNotFoundException\n-  #70 = Utf8               java/io/IOException\n-  #71 = Utf8               java/io/UncheckedIOException\n-  #72 = NameAndType        #27:#91        // \"<init>\":(Ljava/io/IOException;)V\n-  #73 = NameAndType        #92:#93        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #74 = NameAndType        #25:#26        // closed:Z\n-  #75 = Class              #94            // java/io/OutputStream\n-  #76 = NameAndType        #56:#48        // close:()V\n-  #77 = NameAndType        #95:#50        // write:([BII)V\n-  #78 = NameAndType        #47:#48        // closeForWriting:()V\n-  #79 = NameAndType        #96:#97        // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #80 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #81 = Utf8               java/lang/Object\n-  #82 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #83 = Utf8               java/nio/file/Path\n-  #84 = Utf8               java/lang/Throwable\n-  #85 = Utf8               java/io/File\n-  #86 = Utf8               toPath\n-  #87 = Utf8               ()Ljava/nio/file/Path;\n-  #88 = Utf8               java/nio/file/Files\n-  #89 = Utf8               newOutputStream\n-  #90 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #91 = Utf8               (Ljava/io/IOException;)V\n-  #92 = Utf8               newInputStream\n-  #93 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #94 = Utf8               java/io/OutputStream\n-  #95 = Utf8               write\n-  #96 = Utf8               deleteIfExists\n-  #97 = Utf8               (Ljava/nio/file/Path;)Z\n+  #41 = Class              #80            // java/nio/file/Path\n+  #42 = Utf8               getInputStream\n+  #43 = Utf8               ()Ljava/io/InputStream;\n+  #44 = Utf8               closeForWriting\n+  #45 = Utf8               ()V\n+  #46 = Utf8               writeOut\n+  #47 = Utf8               ([BII)V\n+  #48 = Utf8               data\n+  #49 = Utf8               [B\n+  #50 = Utf8               offset\n+  #51 = Utf8               I\n+  #52 = Utf8               length\n+  #53 = Utf8               close\n+  #54 = Class              #81            // java/lang/Throwable\n+  #55 = Utf8               SourceFile\n+  #56 = Utf8               FileBasedScatterGatherBackingStore.java\n+  #57 = Class              #82            // java/io/File\n+  #58 = NameAndType        #83:#84        // toPath:()Ljava/nio/file/Path;\n+  #59 = NameAndType        #27:#36        // \"<init>\":(Ljava/nio/file/Path;)V\n+  #60 = NameAndType        #27:#45        // \"<init>\":()V\n+  #61 = NameAndType        #21:#22        // target:Ljava/nio/file/Path;\n+  #62 = Utf8               java/nio/file/OpenOption\n+  #63 = Class              #85            // java/nio/file/Files\n+  #64 = NameAndType        #86:#87        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #65 = NameAndType        #23:#24        // outputStream:Ljava/io/OutputStream;\n+  #66 = Utf8               java/io/FileNotFoundException\n+  #67 = Utf8               java/io/IOException\n+  #68 = Utf8               java/io/UncheckedIOException\n+  #69 = NameAndType        #27:#88        // \"<init>\":(Ljava/io/IOException;)V\n+  #70 = NameAndType        #89:#90        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #71 = NameAndType        #25:#26        // closed:Z\n+  #72 = Class              #91            // java/io/OutputStream\n+  #73 = NameAndType        #53:#45        // close:()V\n+  #74 = NameAndType        #92:#47        // write:([BII)V\n+  #75 = NameAndType        #44:#45        // closeForWriting:()V\n+  #76 = NameAndType        #93:#94        // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #77 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #78 = Utf8               java/lang/Object\n+  #79 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #80 = Utf8               java/nio/file/Path\n+  #81 = Utf8               java/lang/Throwable\n+  #82 = Utf8               java/io/File\n+  #83 = Utf8               toPath\n+  #84 = Utf8               ()Ljava/nio/file/Path;\n+  #85 = Utf8               java/nio/file/Files\n+  #86 = Utf8               newOutputStream\n+  #87 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #88 = Utf8               (Ljava/io/IOException;)V\n+  #89 = Utf8               newInputStream\n+  #90 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #91 = Utf8               java/io/OutputStream\n+  #92 = Utf8               write\n+  #93 = Utf8               deleteIfExists\n+  #94 = Utf8               (Ljava/nio/file/Path;)Z\n {\n   private final java.nio.file.Path target;\n     descriptor: Ljava/nio/file/Path;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream outputStream;\n     descriptor: Ljava/io/OutputStream;\n"}]}
