{"diffoscope-json-version": 1, "source1": "first/XMLPropertyListConfiguration$XMLPropertyListHandler.class", "source2": "second/XMLPropertyListConfiguration$XMLPropertyListHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,19 +10,23 @@\n \n private class XMLPropertyListHandler extends DefaultHandler\n {\n     private final StringBuilder buffer;\n     private final List<XMLPropertyListConfiguration.PListNodeBuilder> stack;\n     private final XMLPropertyListConfiguration.PListNodeBuilder resultBuilder;\n     \n+    static {\n+        XMLPropertyListHandler.$assertionsDisabled = !XMLPropertyListConfiguration.class.desiredAssertionStatus();\n+    }\n+    \n     public XMLPropertyListHandler(final XMLPropertyListConfiguration this$0) {\n         this.this$0 = this$0;\n         this.buffer = new StringBuilder();\n         this.stack = new ArrayList();\n-        this.push(this.resultBuilder = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null));\n+        this.push(this.resultBuilder = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.PListNodeBuilder)null));\n     }\n     \n     public XMLPropertyListConfiguration.PListNodeBuilder getResultBuilder() {\n         return this.resultBuilder;\n     }\n     \n     private XMLPropertyListConfiguration.PListNodeBuilder peek() {\n@@ -50,25 +54,25 @@\n     private void push(final XMLPropertyListConfiguration.PListNodeBuilder node) {\n         this.stack.add(node);\n     }\n     \n     @Override\n     public void startElement(final String uri, final String localName, final String qName, final Attributes attributes) throws SAXException {\n         if (\"array\".equals(qName)) {\n-            this.push((XMLPropertyListConfiguration.PListNodeBuilder)new XMLPropertyListConfiguration.ArrayNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null));\n+            this.push((XMLPropertyListConfiguration.PListNodeBuilder)new XMLPropertyListConfiguration.ArrayNodeBuilder((XMLPropertyListConfiguration.ArrayNodeBuilder)null));\n         }\n         else if (\"dict\".equals(qName) && this.peek() instanceof XMLPropertyListConfiguration.ArrayNodeBuilder) {\n-            this.push(new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null));\n+            this.push(new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.PListNodeBuilder)null));\n         }\n     }\n     \n     @Override\n     public void endElement(final String uri, final String localName, final String qName) throws SAXException {\n         if (\"key\".equals(qName)) {\n-            final XMLPropertyListConfiguration.PListNodeBuilder node = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null);\n+            final XMLPropertyListConfiguration.PListNodeBuilder node = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.PListNodeBuilder)null);\n             node.setName(this.buffer.toString());\n             this.peekNE().addChild(node);\n             this.push(node);\n         }\n         else if (\"dict\".equals(qName)) {\n             final XMLPropertyListConfiguration.PListNodeBuilder builder = this.pop();\n             assert builder != null : \"Stack was empty!\";\n@@ -97,15 +101,15 @@\n             else if (\"data\".equals(qName)) {\n                 this.peekNE().addDataValue(this.buffer.toString());\n             }\n             else if (\"date\".equals(qName)) {\n                 try {\n                     this.peekNE().addDateValue(this.buffer.toString());\n                 }\n-                catch (final IllegalArgumentException iex) {\n+                catch (final IllegalArgumentException ex) {\n                     this.this$0.getLogger().warn(\"Ignoring invalid date property \" + (Object)this.buffer);\n                 }\n             }\n             else if (\"array\".equals(qName)) {\n                 final XMLPropertyListConfiguration.ArrayNodeBuilder array = (XMLPropertyListConfiguration.ArrayNodeBuilder)this.pop();\n                 this.peekNE().addList(array);\n             }\n@@ -116,12 +120,8 @@\n         this.buffer.setLength();\n     }\n     \n     @Override\n     public void characters(final char[] ch, final int start, final int length) throws SAXException {\n         this.buffer.append(ch, start, length);\n     }\n-    \n-    static {\n-        XMLPropertyListHandler.$assertionsDisabled = !XMLPropertyListConfiguration.class.desiredAssertionStatus();\n-    }\n }\n"}]}
