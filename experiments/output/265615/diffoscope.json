{"diffoscope-json-version": 1, "source1": "first/Pass2Verifier$InnerClassDetector.class", "source2": "second/Pass2Verifier$InnerClassDetector.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,27 +12,24 @@\n \n private static class InnerClassDetector extends EmptyVisitor\n {\n     private boolean hasInnerClass;\n     private final JavaClass jc;\n     private final ConstantPool cp;\n     \n-    public InnerClassDetector(final JavaClass javaClass) {\n-        this.jc = javaClass;\n+    public InnerClassDetector(final JavaClass jc) {\n+        this.jc = jc;\n         this.cp = this.jc.getConstantPool();\n         new DescendingVisitor(this.jc, (Visitor)this).visit();\n     }\n     \n     public boolean innerClassReferenced() {\n         return this.hasInnerClass;\n     }\n     \n-    public void visitConstantClass(final ConstantClass obj) {\n-        final Constant c = this.cp.getConstant(obj.getNameIndex());\n-        if (c instanceof ConstantUtf8) {\n-            final String className = ((ConstantUtf8)c).getBytes();\n-            if (className.startsWith(this.jc.getClassName().replace('.', '/') + \"$\")) {\n-                this.hasInnerClass = true;\n-            }\n+    public void visitConstantClass(final ConstantClass constantClass) {\n+        final Constant constant = this.cp.getConstant(constantClass.getNameIndex());\n+        if (constant instanceof ConstantUtf8 && ((ConstantUtf8)constant).getBytes().startsWith(this.jc.getClassName().replace('.', '/') + \"$\")) {\n+            this.hasInnerClass = true;\n         }\n     }\n }\n"}]}
