{"diffoscope-json-version": 1, "source1": "first/AES256SHA256Decoder.class", "source2": "second/AES256SHA256Decoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,302 +1,301 @@\n-  SHA-256 checksum e8a780e7fe6ba163d4b6b47b64bcb3fc11839b27758643ede9d9e67d22763322\n+  SHA-256 checksum 1a3c70906c7bd0b676ee4845eb101e467158f9734a2fabfcae107b149819f69b\n   Compiled from \"AES256SHA256Decoder.java\"\n class org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder extends org.apache.commons.compress.archivers.sevenz.AbstractCoder\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #28                         // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n-  super_class: #77                        // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+  this_class: #1                          // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n+  super_class: #3                         // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n   interfaces: 0, fields: 0, methods: 7, attributes: 2\n Constant pool:\n-    #1 = String             #2            // SHA-256\n-    #2 = Utf8               SHA-256\n-    #3 = Methodref          #4.#5         // java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n-    #4 = Class              #6            // java/security/MessageDigest\n-    #5 = NameAndType        #7:#8         // getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n-    #6 = Utf8               java/security/MessageDigest\n-    #7 = Utf8               getInstance\n-    #8 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;\n-    #9 = Class              #10           // java/security/NoSuchAlgorithmException\n-   #10 = Utf8               java/security/NoSuchAlgorithmException\n-   #11 = Class              #12           // java/lang/IllegalStateException\n-   #12 = Utf8               java/lang/IllegalStateException\n-   #13 = String             #14           // SHA-256 is unsupported by your Java implementation\n-   #14 = Utf8               SHA-256 is unsupported by your Java implementation\n-   #15 = Methodref          #11.#16       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #16 = NameAndType        #17:#18       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #17 = Utf8               <init>\n-   #18 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #19 = Methodref          #4.#20        // java/security/MessageDigest.update:([B)V\n-   #20 = NameAndType        #21:#22       // update:([B)V\n-   #21 = Utf8               update\n-   #22 = Utf8               ([B)V\n-   #23 = Methodref          #4.#24        // java/security/MessageDigest.digest:()[B\n-   #24 = NameAndType        #25:#26       // digest:()[B\n-   #25 = Utf8               digest\n-   #26 = Utf8               ()[B\n-   #27 = Methodref          #28.#29       // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.utf16Decode:([C)[B\n-   #28 = Class              #30           // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n-   #29 = NameAndType        #31:#32       // utf16Decode:([C)[B\n-   #30 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n-   #31 = Utf8               utf16Decode\n-   #32 = Utf8               ([C)[B\n-   #33 = Methodref          #28.#34       // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.sha256Password:([BI[B)[B\n-   #34 = NameAndType        #35:#36       // sha256Password:([BI[B)[B\n-   #35 = Utf8               sha256Password\n-   #36 = Utf8               ([BI[B)[B\n-   #37 = Fieldref           #38.#39       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #38 = Class              #40           // java/nio/charset/StandardCharsets\n-   #39 = NameAndType        #41:#42       // UTF_16LE:Ljava/nio/charset/Charset;\n-   #40 = Utf8               java/nio/charset/StandardCharsets\n-   #41 = Utf8               UTF_16LE\n-   #42 = Utf8               Ljava/nio/charset/Charset;\n-   #43 = Methodref          #44.#45       // java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;\n-   #44 = Class              #46           // java/nio/CharBuffer\n-   #45 = NameAndType        #47:#48       // wrap:([C)Ljava/nio/CharBuffer;\n-   #46 = Utf8               java/nio/CharBuffer\n-   #47 = Utf8               wrap\n-   #48 = Utf8               ([C)Ljava/nio/CharBuffer;\n-   #49 = Methodref          #50.#51       // java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n-   #50 = Class              #52           // java/nio/charset/Charset\n-   #51 = NameAndType        #53:#54       // encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n-   #52 = Utf8               java/nio/charset/Charset\n-   #53 = Utf8               encode\n-   #54 = Utf8               (Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n-   #55 = Methodref          #56.#57       // java/nio/ByteBuffer.hasArray:()Z\n-   #56 = Class              #58           // java/nio/ByteBuffer\n-   #57 = NameAndType        #59:#60       // hasArray:()Z\n-   #58 = Utf8               java/nio/ByteBuffer\n-   #59 = Utf8               hasArray\n-   #60 = Utf8               ()Z\n-   #61 = Methodref          #56.#62       // java/nio/ByteBuffer.array:()[B\n-   #62 = NameAndType        #63:#26       // array:()[B\n-   #63 = Utf8               array\n-   #64 = Methodref          #56.#65       // java/nio/ByteBuffer.remaining:()I\n-   #65 = NameAndType        #66:#67       // remaining:()I\n-   #66 = Utf8               remaining\n-   #67 = Utf8               ()I\n-   #68 = Methodref          #56.#69       // java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;\n-   #69 = NameAndType        #70:#71       // get:([B)Ljava/nio/ByteBuffer;\n-   #70 = Utf8               get\n-   #71 = Utf8               ([B)Ljava/nio/ByteBuffer;\n-   #72 = Class              #73           // java/lang/Class\n-   #73 = Utf8               java/lang/Class\n-   #74 = Class              #75           // org/apache/commons/compress/archivers/sevenz/AES256Options\n-   #75 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256Options\n-   #76 = Methodref          #77.#78       // org/apache/commons/compress/archivers/sevenz/AbstractCoder.\"<init>\":([Ljava/lang/Class;)V\n-   #77 = Class              #79           // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n-   #78 = NameAndType        #17:#80       // \"<init>\":([Ljava/lang/Class;)V\n-   #79 = Utf8               org/apache/commons/compress/archivers/sevenz/AbstractCoder\n-   #80 = Utf8               ([Ljava/lang/Class;)V\n-   #81 = Class              #82           // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n-   #82 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n-   #83 = Methodref          #81.#84       // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n-   #84 = NameAndType        #17:#85       // \"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n-   #85 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n-   #86 = Class              #87           // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n-   #87 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n-   #88 = Methodref          #86.#89       // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n-   #89 = NameAndType        #17:#90       // \"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n-   #90 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n-   #91 = Methodref          #74.#92       // org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n-   #92 = NameAndType        #93:#26       // getSalt:()[B\n-   #93 = Utf8               getSalt\n-   #94 = Methodref          #74.#95       // org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n-   #95 = NameAndType        #96:#26       // getIv:()[B\n-   #96 = Utf8               getIv\n-   #97 = Methodref          #74.#98       // org/apache/commons/compress/archivers/sevenz/AES256Options.getNumCyclesPower:()I\n-   #98 = NameAndType        #99:#67       // getNumCyclesPower:()I\n-   #99 = Utf8               getNumCyclesPower\n-  #100 = Methodref          #101.#102     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #101 = Class              #103          // java/lang/System\n-  #102 = NameAndType        #104:#105     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #103 = Utf8               java/lang/System\n-  #104 = Utf8               arraycopy\n-  #105 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #106 = Utf8               Code\n-  #107 = Utf8               LineNumberTable\n-  #108 = Utf8               LocalVariableTable\n-  #109 = Utf8               Ljava/security/MessageDigest;\n-  #110 = Utf8               noSuchAlgorithmException\n-  #111 = Utf8               Ljava/security/NoSuchAlgorithmException;\n-  #112 = Utf8               k\n-  #113 = Utf8               I\n-  #114 = Utf8               j\n-  #115 = Utf8               J\n-  #116 = Utf8               password\n-  #117 = Utf8               [B\n-  #118 = Utf8               numCyclesPower\n-  #119 = Utf8               salt\n-  #120 = Utf8               extra\n-  #121 = Utf8               StackMapTable\n-  #122 = Class              #117          // \"[B\"\n-  #123 = Utf8               ([CI[B)[B\n-  #124 = Utf8               [C\n-  #125 = Utf8               chars\n-  #126 = Utf8               encoded\n-  #127 = Utf8               Ljava/nio/ByteBuffer;\n-  #128 = Utf8               e\n-  #129 = Utf8               ()V\n-  #130 = Utf8               this\n-  #131 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;\n-  #132 = Utf8               decode\n-  #133 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-  #134 = Utf8               archiveName\n-  #135 = Utf8               Ljava/lang/String;\n-  #136 = Utf8               in\n-  #137 = Utf8               Ljava/io/InputStream;\n-  #138 = Utf8               uncompressedLength\n-  #139 = Utf8               coder\n-  #140 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-  #141 = Utf8               passwordBytes\n-  #142 = Utf8               maxMemoryLimitInKb\n-  #143 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-  #144 = Utf8               out\n-  #145 = Utf8               Ljava/io/OutputStream;\n-  #146 = Utf8               options\n-  #147 = Utf8               Ljava/lang/Object;\n-  #148 = Utf8               opts\n-  #149 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AES256Options;\n-  #150 = Utf8               Exceptions\n-  #151 = Class              #152          // java/io/IOException\n-  #152 = Utf8               java/io/IOException\n-  #153 = Utf8               getOptionsAsProperties\n-  #154 = Utf8               (Ljava/lang/Object;)[B\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n+    #2 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder\n+    #3 = Class              #4            // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+    #4 = Utf8               org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+    #5 = Utf8               sha256Password\n+    #6 = Utf8               ([BI[B)[B\n+    #7 = Utf8               Code\n+    #8 = String             #9            // SHA-256\n+    #9 = Utf8               SHA-256\n+   #10 = Methodref          #11.#13       // java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n+   #11 = Class              #12           // java/security/MessageDigest\n+   #12 = Utf8               java/security/MessageDigest\n+   #13 = NameAndType        #14:#15       // getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n+   #14 = Utf8               getInstance\n+   #15 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;\n+   #16 = Class              #17           // java/lang/IllegalStateException\n+   #17 = Utf8               java/lang/IllegalStateException\n+   #18 = String             #19           // SHA-256 is unsupported by your Java implementation\n+   #19 = Utf8               SHA-256 is unsupported by your Java implementation\n+   #20 = Methodref          #16.#21       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #21 = NameAndType        #22:#23       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #22 = Utf8               <init>\n+   #23 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #24 = Methodref          #11.#25       // java/security/MessageDigest.update:([B)V\n+   #25 = NameAndType        #26:#27       // update:([B)V\n+   #26 = Utf8               update\n+   #27 = Utf8               ([B)V\n+   #28 = Methodref          #11.#29       // java/security/MessageDigest.digest:()[B\n+   #29 = NameAndType        #30:#31       // digest:()[B\n+   #30 = Utf8               digest\n+   #31 = Utf8               ()[B\n+   #32 = Class              #33           // java/security/NoSuchAlgorithmException\n+   #33 = Utf8               java/security/NoSuchAlgorithmException\n+   #34 = Utf8               LineNumberTable\n+   #35 = Utf8               LocalVariableTable\n+   #36 = Utf8               password\n+   #37 = Utf8               [B\n+   #38 = Utf8               numCyclesPower\n+   #39 = Utf8               I\n+   #40 = Utf8               salt\n+   #41 = Utf8               Ljava/security/MessageDigest;\n+   #42 = Utf8               noSuchAlgorithmException\n+   #43 = Utf8               Ljava/security/NoSuchAlgorithmException;\n+   #44 = Utf8               extra\n+   #45 = Utf8               j\n+   #46 = Utf8               J\n+   #47 = Utf8               k\n+   #48 = Utf8               StackMapTable\n+   #49 = Class              #37           // \"[B\"\n+   #50 = Utf8               ([CI[B)[B\n+   #51 = Methodref          #1.#52        // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.utf16Decode:([C)[B\n+   #52 = NameAndType        #53:#54       // utf16Decode:([C)[B\n+   #53 = Utf8               utf16Decode\n+   #54 = Utf8               ([C)[B\n+   #55 = Methodref          #1.#56        // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder.sha256Password:([BI[B)[B\n+   #56 = NameAndType        #5:#6         // sha256Password:([BI[B)[B\n+   #57 = Utf8               [C\n+   #58 = Fieldref           #59.#61       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #59 = Class              #60           // java/nio/charset/StandardCharsets\n+   #60 = Utf8               java/nio/charset/StandardCharsets\n+   #61 = NameAndType        #62:#63       // UTF_16LE:Ljava/nio/charset/Charset;\n+   #62 = Utf8               UTF_16LE\n+   #63 = Utf8               Ljava/nio/charset/Charset;\n+   #64 = Methodref          #65.#67       // java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;\n+   #65 = Class              #66           // java/nio/CharBuffer\n+   #66 = Utf8               java/nio/CharBuffer\n+   #67 = NameAndType        #68:#69       // wrap:([C)Ljava/nio/CharBuffer;\n+   #68 = Utf8               wrap\n+   #69 = Utf8               ([C)Ljava/nio/CharBuffer;\n+   #70 = Methodref          #71.#73       // java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n+   #71 = Class              #72           // java/nio/charset/Charset\n+   #72 = Utf8               java/nio/charset/Charset\n+   #73 = NameAndType        #74:#75       // encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n+   #74 = Utf8               encode\n+   #75 = Utf8               (Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n+   #76 = Methodref          #77.#79       // java/nio/ByteBuffer.hasArray:()Z\n+   #77 = Class              #78           // java/nio/ByteBuffer\n+   #78 = Utf8               java/nio/ByteBuffer\n+   #79 = NameAndType        #80:#81       // hasArray:()Z\n+   #80 = Utf8               hasArray\n+   #81 = Utf8               ()Z\n+   #82 = Methodref          #77.#83       // java/nio/ByteBuffer.array:()[B\n+   #83 = NameAndType        #84:#31       // array:()[B\n+   #84 = Utf8               array\n+   #85 = Methodref          #77.#86       // java/nio/ByteBuffer.remaining:()I\n+   #86 = NameAndType        #87:#88       // remaining:()I\n+   #87 = Utf8               remaining\n+   #88 = Utf8               ()I\n+   #89 = Methodref          #77.#90       // java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;\n+   #90 = NameAndType        #91:#92       // get:([B)Ljava/nio/ByteBuffer;\n+   #91 = Utf8               get\n+   #92 = Utf8               ([B)Ljava/nio/ByteBuffer;\n+   #93 = Utf8               chars\n+   #94 = Utf8               encoded\n+   #95 = Utf8               Ljava/nio/ByteBuffer;\n+   #96 = Utf8               e\n+   #97 = Utf8               ()V\n+   #98 = Class              #99           // java/lang/Class\n+   #99 = Utf8               java/lang/Class\n+  #100 = Class              #101          // org/apache/commons/compress/archivers/sevenz/AES256Options\n+  #101 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256Options\n+  #102 = Methodref          #3.#103       // org/apache/commons/compress/archivers/sevenz/AbstractCoder.\"<init>\":([Ljava/lang/Class;)V\n+  #103 = NameAndType        #22:#104      // \"<init>\":([Ljava/lang/Class;)V\n+  #104 = Utf8               ([Ljava/lang/Class;)V\n+  #105 = Utf8               this\n+  #106 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;\n+  #107 = Utf8               decode\n+  #108 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+  #109 = Class              #110          // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n+  #110 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n+  #111 = Methodref          #109.#112     // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n+  #112 = NameAndType        #22:#113      // \"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n+  #113 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n+  #114 = Utf8               archiveName\n+  #115 = Utf8               Ljava/lang/String;\n+  #116 = Utf8               in\n+  #117 = Utf8               Ljava/io/InputStream;\n+  #118 = Utf8               uncompressedLength\n+  #119 = Utf8               coder\n+  #120 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+  #121 = Utf8               passwordBytes\n+  #122 = Utf8               maxMemoryLimitInKb\n+  #123 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+  #124 = Utf8               Exceptions\n+  #125 = Class              #126          // java/io/IOException\n+  #126 = Utf8               java/io/IOException\n+  #127 = Class              #128          // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n+  #128 = Utf8               org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n+  #129 = Methodref          #127.#130     // org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n+  #130 = NameAndType        #22:#131      // \"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n+  #131 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n+  #132 = Utf8               out\n+  #133 = Utf8               Ljava/io/OutputStream;\n+  #134 = Utf8               options\n+  #135 = Utf8               Ljava/lang/Object;\n+  #136 = Utf8               opts\n+  #137 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AES256Options;\n+  #138 = Utf8               getOptionsAsProperties\n+  #139 = Utf8               (Ljava/lang/Object;)[B\n+  #140 = Methodref          #100.#141     // org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+  #141 = NameAndType        #142:#31      // getSalt:()[B\n+  #142 = Utf8               getSalt\n+  #143 = Methodref          #100.#144     // org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+  #144 = NameAndType        #145:#31      // getIv:()[B\n+  #145 = Utf8               getIv\n+  #146 = Methodref          #100.#147     // org/apache/commons/compress/archivers/sevenz/AES256Options.getNumCyclesPower:()I\n+  #147 = NameAndType        #148:#88      // getNumCyclesPower:()I\n+  #148 = Utf8               getNumCyclesPower\n+  #149 = Methodref          #150.#152     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #150 = Class              #151          // java/lang/System\n+  #151 = Utf8               java/lang/System\n+  #152 = NameAndType        #153:#154     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #153 = Utf8               arraycopy\n+  #154 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n   #155 = Utf8               props\n   #156 = Class              #157          // java/lang/Object\n   #157 = Utf8               java/lang/Object\n   #158 = Utf8               SourceFile\n   #159 = Utf8               AES256SHA256Decoder.java\n   #160 = Utf8               InnerClasses\n {\n   static byte[] sha256Password(byte[], int, byte[]);\n     descriptor: ([BI[B)[B\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=8, args_size=3\n-         0: ldc           #1                  // String SHA-256\n-         2: invokestatic  #3                  // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n+         0: ldc           #8                  // String SHA-256\n+         2: invokestatic  #10                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;\n          5: astore_3\n          6: goto          23\n          9: astore        4\n-        11: new           #11                 // class java/lang/IllegalStateException\n+        11: new           #16                 // class java/lang/IllegalStateException\n         14: dup\n-        15: ldc           #13                 // String SHA-256 is unsupported by your Java implementation\n+        15: ldc           #18                 // String SHA-256 is unsupported by your Java implementation\n         17: aload         4\n-        19: invokespecial #15                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        19: invokespecial #20                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         22: athrow\n         23: bipush        8\n         25: newarray       byte\n         27: astore        4\n         29: lconst_0\n         30: lstore        5\n-        32: lload         5\n-        34: lconst_1\n-        35: iload_1\n-        36: lshl\n-        37: lcmp\n-        38: ifge          104\n-        41: aload_3\n-        42: aload_2\n-        43: invokevirtual #19                 // Method java/security/MessageDigest.update:([B)V\n-        46: aload_3\n-        47: aload_0\n-        48: invokevirtual #19                 // Method java/security/MessageDigest.update:([B)V\n-        51: aload_3\n-        52: aload         4\n-        54: invokevirtual #19                 // Method java/security/MessageDigest.update:([B)V\n-        57: iconst_0\n-        58: istore        7\n-        60: iload         7\n-        62: aload         4\n-        64: arraylength\n-        65: if_icmpge     95\n-        68: aload         4\n-        70: iload         7\n-        72: dup2\n-        73: baload\n-        74: iconst_1\n-        75: iadd\n-        76: i2b\n-        77: bastore\n-        78: aload         4\n-        80: iload         7\n-        82: baload\n-        83: ifeq          89\n-        86: goto          95\n-        89: iinc          7, 1\n-        92: goto          60\n+        32: goto          95\n+        35: aload_3\n+        36: aload_2\n+        37: invokevirtual #24                 // Method java/security/MessageDigest.update:([B)V\n+        40: aload_3\n+        41: aload_0\n+        42: invokevirtual #24                 // Method java/security/MessageDigest.update:([B)V\n+        45: aload_3\n+        46: aload         4\n+        48: invokevirtual #24                 // Method java/security/MessageDigest.update:([B)V\n+        51: iconst_0\n+        52: istore        7\n+        54: goto          81\n+        57: aload         4\n+        59: iload         7\n+        61: dup2\n+        62: baload\n+        63: iconst_1\n+        64: iadd\n+        65: i2b\n+        66: bastore\n+        67: aload         4\n+        69: iload         7\n+        71: baload\n+        72: ifeq          78\n+        75: goto          89\n+        78: iinc          7, 1\n+        81: iload         7\n+        83: aload         4\n+        85: arraylength\n+        86: if_icmplt     57\n+        89: lload         5\n+        91: lconst_1\n+        92: ladd\n+        93: lstore        5\n         95: lload         5\n         97: lconst_1\n-        98: ladd\n-        99: lstore        5\n-       101: goto          32\n+        98: iload_1\n+        99: lshl\n+       100: lcmp\n+       101: iflt          35\n        104: aload_3\n-       105: invokevirtual #23                 // Method java/security/MessageDigest.digest:()[B\n+       105: invokevirtual #28                 // Method java/security/MessageDigest.digest:()[B\n        108: areturn\n       Exception table:\n          from    to  target type\n              0     6     9   Class java/security/NoSuchAlgorithmException\n       LineNumberTable:\n         line 45: 0\n-        line 48: 6\n-        line 46: 9\n+        line 46: 6\n         line 47: 11\n         line 49: 23\n         line 50: 29\n-        line 51: 41\n-        line 52: 46\n-        line 53: 51\n-        line 54: 57\n-        line 55: 68\n-        line 56: 78\n-        line 57: 86\n-        line 54: 89\n-        line 50: 95\n+        line 51: 35\n+        line 52: 40\n+        line 53: 45\n+        line 54: 51\n+        line 55: 57\n+        line 56: 67\n+        line 57: 75\n+        line 54: 78\n+        line 50: 89\n         line 61: 104\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6       3     3 digest   Ljava/security/MessageDigest;\n-           11      12     4 noSuchAlgorithmException   Ljava/security/NoSuchAlgorithmException;\n-           60      35     7     k   I\n-           32      72     5     j   J\n             0     109     0 password   [B\n             0     109     1 numCyclesPower   I\n             0     109     2  salt   [B\n+            6       3     3 digest   Ljava/security/MessageDigest;\n            23      86     3 digest   Ljava/security/MessageDigest;\n+           11      12     4 noSuchAlgorithmException   Ljava/security/NoSuchAlgorithmException;\n            29      80     4 extra   [B\n-      StackMapTable: number_of_entries = 7\n+           32      72     5     j   J\n+           54      35     7     k   I\n+      StackMapTable: number_of_entries = 8\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/security/NoSuchAlgorithmException ]\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class java/security/MessageDigest ]\n         frame_type = 253 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ class \"[B\", long ]\n         frame_type = 252 /* append */\n-          offset_delta = 27\n+          offset_delta = 21\n           locals = [ int ]\n-        frame_type = 28 /* same */\n+        frame_type = 20 /* same */\n+        frame_type = 2 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 5\n-        frame_type = 250 /* chop */\n-          offset_delta = 8\n+          offset_delta = 7\n+        frame_type = 5 /* same */\n \n   static byte[] sha256Password(char[], int, byte[]);\n     descriptor: ([CI[B)[B\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokestatic  #27                 // Method utf16Decode:([C)[B\n+         1: invokestatic  #51                 // Method utf16Decode:([C)[B\n          4: iload_1\n          5: aload_2\n-         6: invokestatic  #33                 // Method sha256Password:([BI[B)[B\n+         6: invokestatic  #55                 // Method sha256Password:([BI[B)[B\n          9: areturn\n       LineNumberTable:\n         line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 password   [C\n             0      10     1 numCyclesPower   I\n@@ -307,32 +306,32 @@\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: getstatic     #37                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+         6: getstatic     #58                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n          9: aload_0\n-        10: invokestatic  #43                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;\n-        13: invokevirtual #49                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n+        10: invokestatic  #64                 // Method java/nio/CharBuffer.wrap:([C)Ljava/nio/CharBuffer;\n+        13: invokevirtual #70                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;\n         16: astore_1\n         17: aload_1\n-        18: invokevirtual #55                 // Method java/nio/ByteBuffer.hasArray:()Z\n+        18: invokevirtual #76                 // Method java/nio/ByteBuffer.hasArray:()Z\n         21: ifeq          29\n         24: aload_1\n-        25: invokevirtual #61                 // Method java/nio/ByteBuffer.array:()[B\n+        25: invokevirtual #82                 // Method java/nio/ByteBuffer.array:()[B\n         28: areturn\n         29: aload_1\n-        30: invokevirtual #64                 // Method java/nio/ByteBuffer.remaining:()I\n+        30: invokevirtual #85                 // Method java/nio/ByteBuffer.remaining:()I\n         33: newarray       byte\n         35: astore_2\n         36: aload_1\n         37: aload_2\n-        38: invokevirtual #68                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;\n+        38: invokevirtual #89                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;\n         41: pop\n         42: aload_2\n         43: areturn\n       LineNumberTable:\n         line 76: 0\n         line 77: 4\n         line 79: 6\n@@ -355,41 +354,41 @@\n   org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: anewarray     #72                 // class java/lang/Class\n+         2: anewarray     #98                 // class java/lang/Class\n          5: dup\n          6: iconst_0\n-         7: ldc           #74                 // class org/apache/commons/compress/archivers/sevenz/AES256Options\n+         7: ldc           #100                // class org/apache/commons/compress/archivers/sevenz/AES256Options\n          9: aastore\n-        10: invokespecial #76                 // Method org/apache/commons/compress/archivers/sevenz/AbstractCoder.\"<init>\":([Ljava/lang/Class;)V\n+        10: invokespecial #102                // Method org/apache/commons/compress/archivers/sevenz/AbstractCoder.\"<init>\":([Ljava/lang/Class;)V\n         13: return\n       LineNumberTable:\n         line 89: 0\n         line 90: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;\n \n   java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int);\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0000)\n     Code:\n       stack=7, locals=8, args_size=7\n-         0: new           #81                 // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n+         0: new           #109                // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n          3: dup\n          4: aload_0\n          5: aload         5\n          7: aload_1\n          8: aload         6\n         10: aload_2\n-        11: invokespecial #83                 // Method org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n+        11: invokespecial #111                // Method org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/lang/String;[BLjava/io/InputStream;)V\n         14: areturn\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;\n             0      15     1 archiveName   Ljava/lang/String;\n@@ -398,138 +397,140 @@\n             0      15     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n             0      15     6 passwordBytes   [B\n             0      15     7 maxMemoryLimitInKb   I\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_2\n-         1: checkcast     #74                 // class org/apache/commons/compress/archivers/sevenz/AES256Options\n+         1: checkcast     #100                // class org/apache/commons/compress/archivers/sevenz/AES256Options\n          4: astore_3\n-         5: new           #86                 // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n+         5: new           #127                // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n          8: dup\n          9: aload_0\n         10: aload_1\n         11: aload_3\n-        12: invokespecial #88                 // Method org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n+        12: invokespecial #129                // Method org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2.\"<init>\":(Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;Ljava/io/OutputStream;Lorg/apache/commons/compress/archivers/sevenz/AES256Options;)V\n         15: areturn\n       LineNumberTable:\n         line 172: 0\n         line 174: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder;\n             0      16     1   out   Ljava/io/OutputStream;\n             0      16     2 options   Ljava/lang/Object;\n             5      11     3  opts   Lorg/apache/commons/compress/archivers/sevenz/AES256Options;\n-    Exceptions:\n-      throws java.io.IOException\n \n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_1\n-         1: checkcast     #74                 // class org/apache/commons/compress/archivers/sevenz/AES256Options\n+         1: checkcast     #100                // class org/apache/commons/compress/archivers/sevenz/AES256Options\n          4: astore_2\n          5: iconst_2\n          6: aload_2\n-         7: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+         7: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n         10: arraylength\n         11: iadd\n         12: aload_2\n-        13: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+        13: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n         16: arraylength\n         17: iadd\n         18: newarray       byte\n         20: astore_3\n         21: aload_3\n         22: iconst_0\n         23: aload_2\n-        24: invokevirtual #97                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getNumCyclesPower:()I\n+        24: invokevirtual #146                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getNumCyclesPower:()I\n         27: aload_2\n-        28: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+        28: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n         31: arraylength\n         32: ifne          39\n         35: iconst_0\n         36: goto          42\n         39: sipush        128\n         42: ior\n         43: aload_2\n-        44: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+        44: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n         47: arraylength\n         48: ifne          55\n         51: iconst_0\n         52: goto          57\n         55: bipush        64\n         57: ior\n         58: i2b\n         59: bastore\n         60: aload_2\n-        61: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+        61: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n         64: arraylength\n         65: ifne          76\n         68: aload_2\n-        69: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+        69: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n         72: arraylength\n         73: ifeq          157\n         76: aload_3\n         77: iconst_1\n         78: aload_2\n-        79: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+        79: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n         82: arraylength\n         83: ifne          90\n         86: iconst_0\n         87: goto          97\n         90: aload_2\n-        91: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+        91: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n         94: arraylength\n         95: iconst_1\n         96: isub\n         97: iconst_4\n         98: ishl\n         99: aload_2\n-       100: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+       100: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n        103: arraylength\n        104: ifne          111\n        107: iconst_0\n        108: goto          118\n        111: aload_2\n-       112: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+       112: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n        115: arraylength\n        116: iconst_1\n        117: isub\n        118: ior\n        119: i2b\n        120: bastore\n        121: aload_2\n-       122: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+       122: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n        125: iconst_0\n        126: aload_3\n        127: iconst_2\n        128: aload_2\n-       129: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+       129: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n        132: arraylength\n-       133: invokestatic  #100                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       133: invokestatic  #149                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        136: aload_2\n-       137: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+       137: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n        140: iconst_0\n        141: aload_3\n        142: iconst_2\n        143: aload_2\n-       144: invokevirtual #91                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n+       144: invokevirtual #140                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getSalt:()[B\n        147: arraylength\n        148: iadd\n        149: aload_2\n-       150: invokevirtual #94                 // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n+       150: invokevirtual #143                // Method org/apache/commons/compress/archivers/sevenz/AES256Options.getIv:()[B\n        153: arraylength\n-       154: invokestatic  #100                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       154: invokestatic  #149                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        157: aload_3\n        158: areturn\n       LineNumberTable:\n         line 235: 0\n         line 236: 5\n         line 239: 21\n         line 241: 60\n@@ -574,14 +575,12 @@\n           locals = [ class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder, class java/lang/Object, class org/apache/commons/compress/archivers/sevenz/AES256Options, class \"[B\" ]\n           stack = [ class \"[B\", int, int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 6\n           locals = [ class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder, class java/lang/Object, class org/apache/commons/compress/archivers/sevenz/AES256Options, class \"[B\" ]\n           stack = [ class \"[B\", int, int, int ]\n         frame_type = 38 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"AES256SHA256Decoder.java\"\n InnerClasses:\n-  #81;                                    // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n-  #86;                                    // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n+  #109;                                   // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$1\n+  #127;                                   // class org/apache/commons/compress/archivers/sevenz/AES256SHA256Decoder$2\n"}]}
