{"diffoscope-json-version": 1, "source1": "first/AbstractOrigin.class", "source2": "second/AbstractOrigin.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,16 +13,16 @@\n import java.nio.file.Files;\n import java.util.Objects;\n \n public abstract class AbstractOrigin<T, B extends AbstractOrigin<T, B>> extends AbstractSupplier<T, B>\n {\n     final T origin;\n     \n-    protected AbstractOrigin(final T origin) {\n-        this.origin = Objects.requireNonNull(origin, \"origin\");\n+    protected AbstractOrigin(final T obj) {\n+        this.origin = Objects.requireNonNull(obj, \"origin\");\n     }\n     \n     public T get() {\n         return this.origin;\n     }\n     \n     public byte[] getByteArray() throws IOException {\n@@ -41,19 +41,19 @@\n         return Files.newOutputStream(this.getPath(), options);\n     }\n     \n     public Path getPath() {\n         throw new UnsupportedOperationException(this.origin.toString());\n     }\n     \n-    public Reader getReader(final Charset charset) throws IOException {\n-        return Files.newBufferedReader(this.getPath(), charset);\n+    public Reader getReader(final Charset cs) throws IOException {\n+        return Files.newBufferedReader(this.getPath(), cs);\n     }\n     \n-    public Writer getWriter(final Charset charset, final OpenOption... options) throws IOException {\n-        return Files.newBufferedWriter(this.getPath(), charset, options);\n+    public Writer getWriter(final Charset cs, final OpenOption... options) throws IOException {\n+        return Files.newBufferedWriter(this.getPath(), cs, options);\n     }\n     \n     public String toString() {\n         return this.origin.toString();\n     }\n }\n"}]}
