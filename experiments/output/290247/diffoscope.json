{"diffoscope-json-version": 1, "source1": "first/SizeFileFilter.class", "source2": "second/SizeFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,139 @@\n-  SHA-256 checksum 4ea2e9279bcc1b8720c8f9d3c875bc534c9c9b64395f038ef1d1fc1bcc450fb4\n+  SHA-256 checksum 1c8be5f14b23e628794d9c2f45e6fddaa8c8b4cebdfde84ea947bf6c81814d2b\n   Compiled from \"SizeFileFilter.java\"\n public class org.apache.commons.io.filefilter.SizeFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #26                         // org/apache/commons/io/filefilter/SizeFileFilter\n   super_class: #27                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 9, attributes: 3\n Constant pool:\n-    #1 = Methodref          #26.#59       // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n-    #2 = Methodref          #27.#60       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #3 = Class              #61           // java/lang/IllegalArgumentException\n-    #4 = String             #62           // The size must be non-negative\n-    #5 = Methodref          #3.#63        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #6 = Fieldref           #26.#64       // org/apache/commons/io/filefilter/SizeFileFilter.size:J\n-    #7 = Fieldref           #26.#65       // org/apache/commons/io/filefilter/SizeFileFilter.acceptLarger:Z\n-    #8 = Methodref          #66.#67       // java/io/File.length:()J\n-    #9 = Methodref          #26.#68       // org/apache/commons/io/filefilter/SizeFileFilter.accept:(J)Z\n-   #10 = InvokeDynamic      #0:#74        // #0:get:(Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-   #11 = Methodref          #26.#75       // org/apache/commons/io/filefilter/SizeFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-   #12 = String             #76           // >=\n-   #13 = String             #77           // <\n-   #14 = Class              #78           // java/lang/StringBuilder\n-   #15 = Methodref          #14.#60       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = Methodref          #27.#79       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #17 = Methodref          #14.#80       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = String             #81           // (\n-   #19 = Methodref          #14.#82       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #20 = String             #83           // )\n-   #21 = Methodref          #14.#79       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #22 = Methodref          #84.#85       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #23 = Methodref          #26.#86       // org/apache/commons/io/filefilter/SizeFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #24 = Class              #87           // java/nio/file/Path\n-   #25 = Methodref          #26.#88       // org/apache/commons/io/filefilter/SizeFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #26 = Class              #89           // org/apache/commons/io/filefilter/SizeFileFilter\n-   #27 = Class              #90           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #28 = Class              #91           // java/io/Serializable\n+    #1 = Methodref          #26.#58       // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n+    #2 = Methodref          #27.#59       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #3 = Class              #60           // java/lang/IllegalArgumentException\n+    #4 = String             #61           // The size must be non-negative\n+    #5 = Methodref          #3.#62        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #6 = Fieldref           #26.#63       // org/apache/commons/io/filefilter/SizeFileFilter.size:J\n+    #7 = Fieldref           #26.#64       // org/apache/commons/io/filefilter/SizeFileFilter.acceptLarger:Z\n+    #8 = Methodref          #65.#66       // java/io/File.length:()J\n+    #9 = Methodref          #26.#67       // org/apache/commons/io/filefilter/SizeFileFilter.accept:(J)Z\n+   #10 = InvokeDynamic      #0:#73        // #0:get:(Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+   #11 = Methodref          #26.#74       // org/apache/commons/io/filefilter/SizeFileFilter.get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #12 = String             #75           // >=\n+   #13 = String             #76           // <\n+   #14 = Class              #77           // java/lang/StringBuilder\n+   #15 = Methodref          #14.#59       // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = Methodref          #27.#78       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #17 = Methodref          #14.#79       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = String             #80           // (\n+   #19 = Methodref          #14.#81       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #20 = String             #82           // )\n+   #21 = Methodref          #14.#78       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #22 = Methodref          #83.#84       // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #23 = Methodref          #26.#85       // org/apache/commons/io/filefilter/SizeFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #24 = Class              #86           // java/nio/file/Path\n+   #25 = Methodref          #26.#87       // org/apache/commons/io/filefilter/SizeFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #26 = Class              #88           // org/apache/commons/io/filefilter/SizeFileFilter\n+   #27 = Class              #89           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #28 = Class              #90           // java/io/Serializable\n    #29 = Utf8               serialVersionUID\n    #30 = Utf8               J\n    #31 = Utf8               ConstantValue\n    #32 = Long               7388077430788600069l\n    #34 = Utf8               acceptLarger\n    #35 = Utf8               Z\n    #36 = Utf8               size\n    #37 = Utf8               <init>\n    #38 = Utf8               (J)V\n    #39 = Utf8               Code\n    #40 = Utf8               LineNumberTable\n    #41 = Utf8               (JZ)V\n    #42 = Utf8               StackMapTable\n-   #43 = Class              #89           // org/apache/commons/io/filefilter/SizeFileFilter\n-   #44 = Utf8               accept\n-   #45 = Utf8               (Ljava/io/File;)Z\n-   #46 = Utf8               (J)Z\n-   #47 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #48 = Utf8               toString\n-   #49 = Utf8               ()Ljava/lang/String;\n-   #50 = Class              #92           // java/lang/String\n-   #51 = Utf8               visitFile\n-   #52 = Utf8               Exceptions\n-   #53 = Class              #93           // java/io/IOException\n-   #54 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #55 = Utf8               lambda$accept$0\n-   #56 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #57 = Utf8               SourceFile\n-   #58 = Utf8               SizeFileFilter.java\n-   #59 = NameAndType        #37:#41       // \"<init>\":(JZ)V\n-   #60 = NameAndType        #37:#94       // \"<init>\":()V\n-   #61 = Utf8               java/lang/IllegalArgumentException\n-   #62 = Utf8               The size must be non-negative\n-   #63 = NameAndType        #37:#95       // \"<init>\":(Ljava/lang/String;)V\n-   #64 = NameAndType        #36:#30       // size:J\n-   #65 = NameAndType        #34:#35       // acceptLarger:Z\n-   #66 = Class              #96           // java/io/File\n-   #67 = NameAndType        #97:#98       // length:()J\n-   #68 = NameAndType        #44:#46       // accept:(J)Z\n-   #69 = Utf8               BootstrapMethods\n-   #70 = MethodHandle       6:#99         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #71 = MethodType         #100          //  ()Ljava/lang/Object;\n-   #72 = MethodHandle       7:#101        // REF_invokeSpecial org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #73 = MethodType         #102          //  ()Ljava/nio/file/FileVisitResult;\n-   #74 = NameAndType        #103:#104     // get:(Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-   #75 = NameAndType        #103:#105     // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-   #76 = Utf8               >=\n-   #77 = Utf8               <\n-   #78 = Utf8               java/lang/StringBuilder\n-   #79 = NameAndType        #48:#49       // toString:()Ljava/lang/String;\n-   #80 = NameAndType        #106:#107     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #81 = Utf8               (\n-   #82 = NameAndType        #106:#108     // append:(J)Ljava/lang/StringBuilder;\n-   #83 = Utf8               )\n-   #84 = Class              #109          // java/nio/file/Files\n-   #85 = NameAndType        #36:#110      // size:(Ljava/nio/file/Path;)J\n-   #86 = NameAndType        #111:#112     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #87 = Utf8               java/nio/file/Path\n-   #88 = NameAndType        #51:#47       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #89 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n-   #90 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #91 = Utf8               java/io/Serializable\n-   #92 = Utf8               java/lang/String\n-   #93 = Utf8               java/io/IOException\n-   #94 = Utf8               ()V\n-   #95 = Utf8               (Ljava/lang/String;)V\n-   #96 = Utf8               java/io/File\n-   #97 = Utf8               length\n-   #98 = Utf8               ()J\n-   #99 = Methodref          #113.#114     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #100 = Utf8               ()Ljava/lang/Object;\n-  #101 = Methodref          #26.#115      // org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #102 = Utf8               ()Ljava/nio/file/FileVisitResult;\n-  #103 = Utf8               get\n-  #104 = Utf8               (Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n-  #105 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-  #106 = Utf8               append\n-  #107 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #109 = Utf8               java/nio/file/Files\n-  #110 = Utf8               (Ljava/nio/file/Path;)J\n-  #111 = Utf8               toFileVisitResult\n-  #112 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n-  #113 = Class              #116          // java/lang/invoke/LambdaMetafactory\n-  #114 = NameAndType        #117:#121     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #115 = NameAndType        #55:#56       // lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #116 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #117 = Utf8               metafactory\n-  #118 = Class              #123          // java/lang/invoke/MethodHandles$Lookup\n-  #119 = Utf8               Lookup\n-  #120 = Utf8               InnerClasses\n-  #121 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #122 = Class              #124          // java/lang/invoke/MethodHandles\n-  #123 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #124 = Utf8               java/lang/invoke/MethodHandles\n+   #43 = Utf8               accept\n+   #44 = Utf8               (Ljava/io/File;)Z\n+   #45 = Utf8               (J)Z\n+   #46 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #47 = Utf8               toString\n+   #48 = Utf8               ()Ljava/lang/String;\n+   #49 = Class              #91           // java/lang/String\n+   #50 = Utf8               visitFile\n+   #51 = Utf8               Exceptions\n+   #52 = Class              #92           // java/io/IOException\n+   #53 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #54 = Utf8               lambda$accept$0\n+   #55 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #56 = Utf8               SourceFile\n+   #57 = Utf8               SizeFileFilter.java\n+   #58 = NameAndType        #37:#41       // \"<init>\":(JZ)V\n+   #59 = NameAndType        #37:#93       // \"<init>\":()V\n+   #60 = Utf8               java/lang/IllegalArgumentException\n+   #61 = Utf8               The size must be non-negative\n+   #62 = NameAndType        #37:#94       // \"<init>\":(Ljava/lang/String;)V\n+   #63 = NameAndType        #36:#30       // size:J\n+   #64 = NameAndType        #34:#35       // acceptLarger:Z\n+   #65 = Class              #95           // java/io/File\n+   #66 = NameAndType        #96:#97       // length:()J\n+   #67 = NameAndType        #43:#45       // accept:(J)Z\n+   #68 = Utf8               BootstrapMethods\n+   #69 = MethodHandle       6:#98         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #70 = MethodType         #99           //  ()Ljava/lang/Object;\n+   #71 = MethodHandle       7:#100        // REF_invokeSpecial org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #72 = MethodType         #101          //  ()Ljava/nio/file/FileVisitResult;\n+   #73 = NameAndType        #102:#103     // get:(Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+   #74 = NameAndType        #102:#104     // get:(Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+   #75 = Utf8               >=\n+   #76 = Utf8               <\n+   #77 = Utf8               java/lang/StringBuilder\n+   #78 = NameAndType        #47:#48       // toString:()Ljava/lang/String;\n+   #79 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Utf8               (\n+   #81 = NameAndType        #105:#107     // append:(J)Ljava/lang/StringBuilder;\n+   #82 = Utf8               )\n+   #83 = Class              #108          // java/nio/file/Files\n+   #84 = NameAndType        #36:#109      // size:(Ljava/nio/file/Path;)J\n+   #85 = NameAndType        #110:#111     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #86 = Utf8               java/nio/file/Path\n+   #87 = NameAndType        #50:#46       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #88 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n+   #89 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #90 = Utf8               java/io/Serializable\n+   #91 = Utf8               java/lang/String\n+   #92 = Utf8               java/io/IOException\n+   #93 = Utf8               ()V\n+   #94 = Utf8               (Ljava/lang/String;)V\n+   #95 = Utf8               java/io/File\n+   #96 = Utf8               length\n+   #97 = Utf8               ()J\n+   #98 = Methodref          #112.#113     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #99 = Utf8               ()Ljava/lang/Object;\n+  #100 = Methodref          #26.#114      // org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #101 = Utf8               ()Ljava/nio/file/FileVisitResult;\n+  #102 = Utf8               get\n+  #103 = Utf8               (Lorg/apache/commons/io/filefilter/SizeFileFilter;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOSupplier;\n+  #104 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+  #105 = Utf8               append\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #108 = Utf8               java/nio/file/Files\n+  #109 = Utf8               (Ljava/nio/file/Path;)J\n+  #110 = Utf8               toFileVisitResult\n+  #111 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n+  #112 = Class              #115          // java/lang/invoke/LambdaMetafactory\n+  #113 = NameAndType        #116:#120     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #114 = NameAndType        #54:#55       // lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #115 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #116 = Utf8               metafactory\n+  #117 = Class              #122          // java/lang/invoke/MethodHandles$Lookup\n+  #118 = Utf8               Lookup\n+  #119 = Utf8               InnerClasses\n+  #120 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #121 = Class              #123          // java/lang/invoke/MethodHandles\n+  #122 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #123 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final long serialVersionUID = 7388077430788600069l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 7388077430788600069l\n \n   private final boolean acceptLarger;\n@@ -340,14 +339,14 @@\n       LineNumberTable:\n         line 144: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"SizeFileFilter.java\"\n InnerClasses:\n-  public static final #119= #118 of #122; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #118= #117 of #121; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #69 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #71 ()Ljava/lang/Object;\n-      #72 REF_invokeSpecial org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-      #73 ()Ljava/nio/file/FileVisitResult;\n+      #70 ()Ljava/lang/Object;\n+      #71 REF_invokeSpecial org/apache/commons/io/filefilter/SizeFileFilter.lambda$accept$0:(Ljava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+      #72 ()Ljava/nio/file/FileVisitResult;\n"}]}
