{"diffoscope-json-version": 1, "source1": "first/CpioArchiveInputStream.class", "source2": "second/CpioArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,120 +1,120 @@\n-  SHA-256 checksum 85cfa0740a4efea54d1580e0519b54c776a5d61fe50ad6fa2ca31637c0b98ed2\n+  SHA-256 checksum 7665ff5e65447d21c0873314b116fa3d844b31aa7d85695b473497ff8d560564\n   Compiled from \"CpioArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream implements org.apache.commons.compress.archivers.cpio.CpioConstants\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #105                        // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n   super_class: #106                       // org/apache/commons/compress/archivers/ArchiveInputStream\n   interfaces: 1, fields: 13, methods: 22, attributes: 1\n Constant pool:\n-    #1 = Class              #170          // org/apache/commons/compress/archivers/cpio/CpioConstants\n-    #2 = Class              #171          // org/apache/commons/compress/utils/CharsetNames\n-    #3 = String             #172          // US-ASCII\n-    #4 = Methodref          #105.#173     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;ILjava/lang/String;)V\n-    #5 = Methodref          #106.#174     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #6 = Fieldref           #105.#175     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.closed:Z\n-    #7 = Fieldref           #105.#176     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entryBytesRead:J\n-    #8 = Fieldref           #105.#177     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entryEOF:Z\n-    #9 = Fieldref           #105.#178     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.tmpbuf:[B\n-   #10 = Fieldref           #105.#179     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.crc:J\n-   #11 = Fieldref           #105.#180     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.twoBytesBuf:[B\n-   #12 = Fieldref           #105.#181     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.fourBytesBuf:[B\n-   #13 = Fieldref           #105.#182     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.sixBytesBuf:[B\n-   #14 = Fieldref           #105.#183     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.in:Ljava/io/InputStream;\n-   #15 = Fieldref           #105.#184     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.blockSize:I\n-   #16 = Fieldref           #105.#185     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.encoding:Ljava/lang/String;\n-   #17 = Methodref          #186.#187     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #18 = Fieldref           #105.#188     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #19 = Methodref          #105.#189     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.ensureOpen:()V\n-   #20 = Methodref          #190.#191     // java/io/InputStream.close:()V\n-   #21 = Class              #192          // java/lang/Integer\n+    #1 = Class              #169          // org/apache/commons/compress/archivers/cpio/CpioConstants\n+    #2 = Class              #170          // org/apache/commons/compress/utils/CharsetNames\n+    #3 = String             #171          // US-ASCII\n+    #4 = Methodref          #105.#172     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;ILjava/lang/String;)V\n+    #5 = Methodref          #106.#173     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+    #6 = Fieldref           #105.#174     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.closed:Z\n+    #7 = Fieldref           #105.#175     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entryBytesRead:J\n+    #8 = Fieldref           #105.#176     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entryEOF:Z\n+    #9 = Fieldref           #105.#177     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.tmpbuf:[B\n+   #10 = Fieldref           #105.#178     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.crc:J\n+   #11 = Fieldref           #105.#179     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.twoBytesBuf:[B\n+   #12 = Fieldref           #105.#180     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.fourBytesBuf:[B\n+   #13 = Fieldref           #105.#181     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.sixBytesBuf:[B\n+   #14 = Fieldref           #105.#182     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.in:Ljava/io/InputStream;\n+   #15 = Fieldref           #105.#183     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.blockSize:I\n+   #16 = Fieldref           #105.#184     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.encoding:Ljava/lang/String;\n+   #17 = Methodref          #185.#186     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #18 = Fieldref           #105.#187     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #19 = Methodref          #105.#188     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.ensureOpen:()V\n+   #20 = Methodref          #189.#190     // java/io/InputStream.close:()V\n+   #21 = Class              #191          // java/lang/Integer\n    #22 = Long               2147483647l\n-   #24 = Methodref          #105.#193     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skip:(J)J\n-   #25 = Class              #194          // java/io/IOException\n-   #26 = String             #195          // Stream closed\n-   #27 = Methodref          #25.#196      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #28 = Fieldref           #105.#197     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #29 = Methodref          #105.#198     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.closeEntry:()V\n-   #30 = Methodref          #105.#199     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readFully:([BII)I\n-   #31 = Methodref          #200.#201     // org/apache/commons/compress/archivers/cpio/CpioUtil.byteArray2long:([BZ)J\n+   #24 = Methodref          #105.#192     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skip:(J)J\n+   #25 = Class              #193          // java/io/IOException\n+   #26 = String             #194          // Stream closed\n+   #27 = Methodref          #25.#195      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #28 = Fieldref           #105.#196     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #29 = Methodref          #105.#197     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.closeEntry:()V\n+   #30 = Methodref          #105.#198     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readFully:([BII)I\n+   #31 = Methodref          #199.#200     // org/apache/commons/compress/archivers/cpio/CpioUtil.byteArray2long:([BZ)J\n    #32 = Long               29127l\n-   #34 = Methodref          #105.#202     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readOldBinaryEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #35 = Methodref          #203.#204     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #36 = Methodref          #205.#206     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-   #37 = Methodref          #207.#208     // java/lang/String.hashCode:()I\n-   #38 = String             #209          // 070701\n-   #39 = Methodref          #207.#210     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #40 = String             #211          // 070702\n-   #41 = String             #212          // 070707\n-   #42 = Methodref          #105.#213     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readNewEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #43 = Methodref          #105.#214     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readOldAsciiEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-   #44 = Class              #215          // java/lang/StringBuilder\n-   #45 = Methodref          #44.#174      // java/lang/StringBuilder.\"<init>\":()V\n-   #46 = String             #216          // Unknown magic [\n-   #47 = Methodref          #44.#217      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #48 = String             #218          // ]. Occured at byte:\n-   #49 = Methodref          #105.#219     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.getBytesRead:()J\n-   #50 = Methodref          #44.#220      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #51 = Methodref          #44.#221      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #71.#222      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n-   #53 = String             #223          // TRAILER!!!\n-   #54 = Methodref          #105.#224     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skipRemainderOfLastBlock:()V\n-   #55 = Class              #225          // java/lang/IndexOutOfBoundsException\n-   #56 = Methodref          #55.#174      // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #57 = Methodref          #71.#226      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n-   #58 = Methodref          #71.#227      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n-   #59 = Methodref          #105.#228     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skip:(I)V\n-   #60 = Methodref          #71.#229      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n-   #61 = Methodref          #71.#230      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n-   #62 = String             #231          // CRC Error. Occured at byte:\n-   #63 = Methodref          #232.#233     // java/lang/Math.min:(JJ)J\n+   #34 = Methodref          #105.#201     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readOldBinaryEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #35 = Methodref          #202.#203     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #36 = Methodref          #204.#205     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+   #37 = Methodref          #145.#206     // java/lang/String.hashCode:()I\n+   #38 = String             #207          // 070701\n+   #39 = Methodref          #145.#208     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #40 = String             #209          // 070702\n+   #41 = String             #210          // 070707\n+   #42 = Methodref          #105.#211     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readNewEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #43 = Methodref          #105.#212     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readOldAsciiEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+   #44 = Class              #213          // java/lang/StringBuilder\n+   #45 = Methodref          #44.#173      // java/lang/StringBuilder.\"<init>\":()V\n+   #46 = String             #214          // Unknown magic [\n+   #47 = Methodref          #44.#215      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #48 = String             #216          // ]. Occured at byte:\n+   #49 = Methodref          #105.#217     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.getBytesRead:()J\n+   #50 = Methodref          #44.#218      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #44.#219      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = Methodref          #71.#220      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getName:()Ljava/lang/String;\n+   #53 = String             #221          // TRAILER!!!\n+   #54 = Methodref          #105.#222     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skipRemainderOfLastBlock:()V\n+   #55 = Class              #223          // java/lang/IndexOutOfBoundsException\n+   #56 = Methodref          #55.#173      // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #57 = Methodref          #71.#224      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getSize:()J\n+   #58 = Methodref          #71.#225      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getDataPadCount:()I\n+   #59 = Methodref          #105.#226     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.skip:(I)V\n+   #60 = Methodref          #71.#227      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getFormat:()S\n+   #61 = Methodref          #71.#228      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getChksum:()J\n+   #62 = String             #229          // CRC Error. Occured at byte:\n+   #63 = Methodref          #230.#231     // java/lang/Math.min:(JJ)J\n    #64 = Long               4294967295l\n-   #66 = Methodref          #234.#235     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #67 = Methodref          #105.#236     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.count:(I)V\n-   #68 = Class              #237          // java/io/EOFException\n-   #69 = Methodref          #68.#174      // java/io/EOFException.\"<init>\":()V\n-   #70 = Methodref          #238.#239     // java/lang/Long.parseLong:(Ljava/lang/String;I)J\n-   #71 = Class              #240          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-   #72 = Methodref          #71.#241      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n-   #73 = Methodref          #105.#242     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readAsciiLong:(II)J\n-   #74 = Methodref          #71.#243      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setInode:(J)V\n-   #75 = Methodref          #200.#244     // org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J\n-   #76 = Methodref          #71.#245      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setMode:(J)V\n-   #77 = Methodref          #71.#246      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setUID:(J)V\n-   #78 = Methodref          #71.#247      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setGID:(J)V\n-   #79 = Methodref          #71.#248      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n-   #80 = Methodref          #71.#249      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n-   #81 = Methodref          #71.#250      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setSize:(J)V\n-   #82 = Methodref          #71.#251      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDeviceMaj:(J)V\n-   #83 = Methodref          #71.#252      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDeviceMin:(J)V\n-   #84 = Methodref          #71.#253      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDeviceMaj:(J)V\n-   #85 = Methodref          #71.#254      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDeviceMin:(J)V\n-   #86 = Methodref          #71.#255      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setChksum:(J)V\n-   #87 = Methodref          #105.#256     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readCString:(I)Ljava/lang/String;\n-   #88 = Methodref          #71.#257      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n-   #89 = String             #258          // Mode 0 only allowed in the trailer. Found entry name:\n-   #90 = Methodref          #205.#259     // org/apache/commons/compress/utils/ArchiveUtils.sanitize:(Ljava/lang/String;)Ljava/lang/String;\n-   #91 = String             #260          //  Occured at byte:\n-   #92 = Methodref          #71.#261      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n-   #93 = Methodref          #71.#262      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDevice:(J)V\n-   #94 = Methodref          #71.#263      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDevice:(J)V\n-   #95 = String             #264          // Mode 0 only allowed in the trailer. Found entry:\n-   #96 = Methodref          #105.#265     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readBinaryLong:(IZ)J\n-   #97 = String             #266          // Occured at byte:\n-   #98 = Methodref          #190.#267     // java/io/InputStream.read:()I\n-   #99 = InterfaceMethodref #268.#269     // org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n-  #100 = Class              #270          // java/lang/IllegalArgumentException\n-  #101 = String             #271          // negative skip length\n-  #102 = Methodref          #100.#196     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #103 = Methodref          #105.#272     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.read:([BII)I\n-  #104 = Methodref          #105.#273     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.getNextCPIOEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #105 = Class              #274          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-  #106 = Class              #275          // org/apache/commons/compress/archivers/ArchiveInputStream\n+   #66 = Methodref          #232.#233     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #67 = Methodref          #105.#234     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.count:(I)V\n+   #68 = Class              #235          // java/io/EOFException\n+   #69 = Methodref          #68.#173      // java/io/EOFException.\"<init>\":()V\n+   #70 = Methodref          #236.#237     // java/lang/Long.parseLong:(Ljava/lang/String;I)J\n+   #71 = Class              #238          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+   #72 = Methodref          #71.#239      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n+   #73 = Methodref          #105.#240     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readAsciiLong:(II)J\n+   #74 = Methodref          #71.#241      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setInode:(J)V\n+   #75 = Methodref          #199.#242     // org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J\n+   #76 = Methodref          #71.#243      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setMode:(J)V\n+   #77 = Methodref          #71.#244      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setUID:(J)V\n+   #78 = Methodref          #71.#245      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setGID:(J)V\n+   #79 = Methodref          #71.#246      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setNumberOfLinks:(J)V\n+   #80 = Methodref          #71.#247      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n+   #81 = Methodref          #71.#248      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setSize:(J)V\n+   #82 = Methodref          #71.#249      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDeviceMaj:(J)V\n+   #83 = Methodref          #71.#250      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDeviceMin:(J)V\n+   #84 = Methodref          #71.#251      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDeviceMaj:(J)V\n+   #85 = Methodref          #71.#252      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDeviceMin:(J)V\n+   #86 = Methodref          #71.#253      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setChksum:(J)V\n+   #87 = Methodref          #105.#254     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readCString:(I)Ljava/lang/String;\n+   #88 = Methodref          #71.#255      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setName:(Ljava/lang/String;)V\n+   #89 = String             #256          // Mode 0 only allowed in the trailer. Found entry name:\n+   #90 = Methodref          #204.#257     // org/apache/commons/compress/utils/ArchiveUtils.sanitize:(Ljava/lang/String;)Ljava/lang/String;\n+   #91 = String             #258          //  Occured at byte:\n+   #92 = Methodref          #71.#259      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:()I\n+   #93 = Methodref          #71.#260      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setDevice:(J)V\n+   #94 = Methodref          #71.#261      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setRemoteDevice:(J)V\n+   #95 = String             #262          // Mode 0 only allowed in the trailer. Found entry:\n+   #96 = Methodref          #105.#263     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.readBinaryLong:(IZ)J\n+   #97 = String             #264          // Occured at byte:\n+   #98 = Methodref          #189.#265     // java/io/InputStream.read:()I\n+   #99 = InterfaceMethodref #266.#267     // org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n+  #100 = Class              #268          // java/lang/IllegalArgumentException\n+  #101 = String             #269          // negative skip length\n+  #102 = Methodref          #100.#195     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #103 = Methodref          #105.#270     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.read:([BII)I\n+  #104 = Methodref          #105.#271     // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.getNextCPIOEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #105 = Class              #272          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+  #106 = Class              #273          // org/apache/commons/compress/archivers/ArchiveInputStream\n   #107 = Utf8               closed\n   #108 = Utf8               Z\n   #109 = Utf8               entry\n   #110 = Utf8               Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n   #111 = Utf8               entryBytesRead\n   #112 = Utf8               J\n   #113 = Utf8               entryEOF\n@@ -145,208 +145,206 @@\n   #138 = Utf8               Exceptions\n   #139 = Utf8               close\n   #140 = Utf8               ()V\n   #141 = Utf8               closeEntry\n   #142 = Utf8               ensureOpen\n   #143 = Utf8               getNextCPIOEntry\n   #144 = Utf8               ()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #145 = Class              #276          // java/lang/String\n+  #145 = Class              #274          // java/lang/String\n   #146 = Utf8               skip\n   #147 = Utf8               (I)V\n   #148 = Utf8               read\n   #149 = Utf8               ([BII)I\n   #150 = Utf8               readFully\n   #151 = Utf8               readBinaryLong\n   #152 = Utf8               (IZ)J\n   #153 = Utf8               readAsciiLong\n   #154 = Utf8               (II)J\n   #155 = Utf8               readNewEntry\n   #156 = Utf8               (Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #157 = Class              #240          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #158 = Utf8               readOldAsciiEntry\n-  #159 = Utf8               readOldBinaryEntry\n-  #160 = Utf8               readCString\n-  #161 = Utf8               (I)Ljava/lang/String;\n-  #162 = Utf8               (J)J\n-  #163 = Utf8               getNextEntry\n-  #164 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #165 = Utf8               skipRemainderOfLastBlock\n-  #166 = Utf8               matches\n-  #167 = Utf8               ([BI)Z\n-  #168 = Utf8               SourceFile\n-  #169 = Utf8               CpioArchiveInputStream.java\n-  #170 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n-  #171 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-  #172 = Utf8               US-ASCII\n-  #173 = NameAndType        #128:#134     // \"<init>\":(Ljava/io/InputStream;ILjava/lang/String;)V\n-  #174 = NameAndType        #128:#140     // \"<init>\":()V\n-  #175 = NameAndType        #107:#108     // closed:Z\n-  #176 = NameAndType        #111:#112     // entryBytesRead:J\n-  #177 = NameAndType        #113:#108     // entryEOF:Z\n-  #178 = NameAndType        #114:#115     // tmpbuf:[B\n-  #179 = NameAndType        #116:#112     // crc:J\n-  #180 = NameAndType        #119:#115     // twoBytesBuf:[B\n-  #181 = NameAndType        #120:#115     // fourBytesBuf:[B\n-  #182 = NameAndType        #121:#115     // sixBytesBuf:[B\n-  #183 = NameAndType        #117:#118     // in:Ljava/io/InputStream;\n-  #184 = NameAndType        #122:#123     // blockSize:I\n-  #185 = NameAndType        #126:#127     // encoding:Ljava/lang/String;\n-  #186 = Class              #277          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #187 = NameAndType        #278:#279     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #188 = NameAndType        #124:#125     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #189 = NameAndType        #142:#140     // ensureOpen:()V\n-  #190 = Class              #280          // java/io/InputStream\n-  #191 = NameAndType        #139:#140     // close:()V\n-  #192 = Utf8               java/lang/Integer\n-  #193 = NameAndType        #146:#162     // skip:(J)J\n-  #194 = Utf8               java/io/IOException\n-  #195 = Utf8               Stream closed\n-  #196 = NameAndType        #128:#281     // \"<init>\":(Ljava/lang/String;)V\n-  #197 = NameAndType        #109:#110     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #198 = NameAndType        #141:#140     // closeEntry:()V\n-  #199 = NameAndType        #150:#149     // readFully:([BII)I\n-  #200 = Class              #282          // org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #201 = NameAndType        #283:#284     // byteArray2long:([BZ)J\n-  #202 = NameAndType        #159:#156     // readOldBinaryEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #203 = Class              #285          // java/lang/System\n-  #204 = NameAndType        #286:#287     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #205 = Class              #288          // org/apache/commons/compress/utils/ArchiveUtils\n-  #206 = NameAndType        #289:#290     // toAsciiString:([B)Ljava/lang/String;\n-  #207 = Class              #276          // java/lang/String\n-  #208 = NameAndType        #291:#136     // hashCode:()I\n-  #209 = Utf8               070701\n-  #210 = NameAndType        #292:#293     // equals:(Ljava/lang/Object;)Z\n-  #211 = Utf8               070702\n-  #212 = Utf8               070707\n-  #213 = NameAndType        #155:#156     // readNewEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #214 = NameAndType        #158:#144     // readOldAsciiEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #215 = Utf8               java/lang/StringBuilder\n-  #216 = Utf8               Unknown magic [\n-  #217 = NameAndType        #294:#295     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #218 = Utf8               ]. Occured at byte:\n-  #219 = NameAndType        #296:#297     // getBytesRead:()J\n-  #220 = NameAndType        #294:#298     // append:(J)Ljava/lang/StringBuilder;\n-  #221 = NameAndType        #299:#300     // toString:()Ljava/lang/String;\n-  #222 = NameAndType        #301:#300     // getName:()Ljava/lang/String;\n-  #223 = Utf8               TRAILER!!!\n-  #224 = NameAndType        #165:#140     // skipRemainderOfLastBlock:()V\n-  #225 = Utf8               java/lang/IndexOutOfBoundsException\n-  #226 = NameAndType        #302:#297     // getSize:()J\n-  #227 = NameAndType        #303:#136     // getDataPadCount:()I\n-  #228 = NameAndType        #146:#147     // skip:(I)V\n-  #229 = NameAndType        #304:#305     // getFormat:()S\n-  #230 = NameAndType        #306:#297     // getChksum:()J\n-  #231 = Utf8               CRC Error. Occured at byte:\n-  #232 = Class              #307          // java/lang/Math\n-  #233 = NameAndType        #308:#309     // min:(JJ)J\n-  #234 = Class              #310          // org/apache/commons/compress/utils/IOUtils\n-  #235 = NameAndType        #150:#311     // readFully:(Ljava/io/InputStream;[BII)I\n-  #236 = NameAndType        #312:#147     // count:(I)V\n-  #237 = Utf8               java/io/EOFException\n-  #238 = Class              #313          // java/lang/Long\n-  #239 = NameAndType        #314:#315     // parseLong:(Ljava/lang/String;I)J\n-  #240 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #241 = NameAndType        #128:#316     // \"<init>\":(S)V\n-  #242 = NameAndType        #153:#154     // readAsciiLong:(II)J\n-  #243 = NameAndType        #317:#318     // setInode:(J)V\n-  #244 = NameAndType        #319:#162     // fileType:(J)J\n-  #245 = NameAndType        #320:#318     // setMode:(J)V\n-  #246 = NameAndType        #321:#318     // setUID:(J)V\n-  #247 = NameAndType        #322:#318     // setGID:(J)V\n-  #248 = NameAndType        #323:#318     // setNumberOfLinks:(J)V\n-  #249 = NameAndType        #324:#318     // setTime:(J)V\n-  #250 = NameAndType        #325:#318     // setSize:(J)V\n-  #251 = NameAndType        #326:#318     // setDeviceMaj:(J)V\n-  #252 = NameAndType        #327:#318     // setDeviceMin:(J)V\n-  #253 = NameAndType        #328:#318     // setRemoteDeviceMaj:(J)V\n-  #254 = NameAndType        #329:#318     // setRemoteDeviceMin:(J)V\n-  #255 = NameAndType        #330:#318     // setChksum:(J)V\n-  #256 = NameAndType        #160:#161     // readCString:(I)Ljava/lang/String;\n-  #257 = NameAndType        #331:#281     // setName:(Ljava/lang/String;)V\n-  #258 = Utf8               Mode 0 only allowed in the trailer. Found entry name:\n-  #259 = NameAndType        #332:#333     // sanitize:(Ljava/lang/String;)Ljava/lang/String;\n-  #260 = Utf8                Occured at byte:\n-  #261 = NameAndType        #334:#136     // getHeaderPadCount:()I\n-  #262 = NameAndType        #335:#318     // setDevice:(J)V\n-  #263 = NameAndType        #336:#318     // setRemoteDevice:(J)V\n-  #264 = Utf8               Mode 0 only allowed in the trailer. Found entry:\n-  #265 = NameAndType        #151:#152     // readBinaryLong:(IZ)J\n-  #266 = Utf8               Occured at byte:\n-  #267 = NameAndType        #148:#136     // read:()I\n-  #268 = Class              #337          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #269 = NameAndType        #338:#290     // decode:([B)Ljava/lang/String;\n-  #270 = Utf8               java/lang/IllegalArgumentException\n-  #271 = Utf8               negative skip length\n-  #272 = NameAndType        #148:#149     // read:([BII)I\n-  #273 = NameAndType        #143:#144     // getNextCPIOEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n-  #274 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-  #275 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #276 = Utf8               java/lang/String\n-  #277 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #278 = Utf8               getZipEncoding\n-  #279 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #280 = Utf8               java/io/InputStream\n-  #281 = Utf8               (Ljava/lang/String;)V\n-  #282 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #283 = Utf8               byteArray2long\n-  #284 = Utf8               ([BZ)J\n-  #285 = Utf8               java/lang/System\n-  #286 = Utf8               arraycopy\n-  #287 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #288 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #289 = Utf8               toAsciiString\n-  #290 = Utf8               ([B)Ljava/lang/String;\n-  #291 = Utf8               hashCode\n-  #292 = Utf8               equals\n-  #293 = Utf8               (Ljava/lang/Object;)Z\n-  #294 = Utf8               append\n-  #295 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #296 = Utf8               getBytesRead\n-  #297 = Utf8               ()J\n-  #298 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #299 = Utf8               toString\n-  #300 = Utf8               ()Ljava/lang/String;\n-  #301 = Utf8               getName\n-  #302 = Utf8               getSize\n-  #303 = Utf8               getDataPadCount\n-  #304 = Utf8               getFormat\n-  #305 = Utf8               ()S\n-  #306 = Utf8               getChksum\n-  #307 = Utf8               java/lang/Math\n-  #308 = Utf8               min\n-  #309 = Utf8               (JJ)J\n-  #310 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #311 = Utf8               (Ljava/io/InputStream;[BII)I\n-  #312 = Utf8               count\n-  #313 = Utf8               java/lang/Long\n-  #314 = Utf8               parseLong\n-  #315 = Utf8               (Ljava/lang/String;I)J\n-  #316 = Utf8               (S)V\n-  #317 = Utf8               setInode\n-  #318 = Utf8               (J)V\n-  #319 = Utf8               fileType\n-  #320 = Utf8               setMode\n-  #321 = Utf8               setUID\n-  #322 = Utf8               setGID\n-  #323 = Utf8               setNumberOfLinks\n-  #324 = Utf8               setTime\n-  #325 = Utf8               setSize\n-  #326 = Utf8               setDeviceMaj\n-  #327 = Utf8               setDeviceMin\n-  #328 = Utf8               setRemoteDeviceMaj\n-  #329 = Utf8               setRemoteDeviceMin\n-  #330 = Utf8               setChksum\n-  #331 = Utf8               setName\n-  #332 = Utf8               sanitize\n-  #333 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #334 = Utf8               getHeaderPadCount\n-  #335 = Utf8               setDevice\n-  #336 = Utf8               setRemoteDevice\n-  #337 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #338 = Utf8               decode\n+  #157 = Utf8               readOldAsciiEntry\n+  #158 = Utf8               readOldBinaryEntry\n+  #159 = Utf8               readCString\n+  #160 = Utf8               (I)Ljava/lang/String;\n+  #161 = Utf8               (J)J\n+  #162 = Utf8               getNextEntry\n+  #163 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #164 = Utf8               skipRemainderOfLastBlock\n+  #165 = Utf8               matches\n+  #166 = Utf8               ([BI)Z\n+  #167 = Utf8               SourceFile\n+  #168 = Utf8               CpioArchiveInputStream.java\n+  #169 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n+  #170 = Utf8               org/apache/commons/compress/utils/CharsetNames\n+  #171 = Utf8               US-ASCII\n+  #172 = NameAndType        #128:#134     // \"<init>\":(Ljava/io/InputStream;ILjava/lang/String;)V\n+  #173 = NameAndType        #128:#140     // \"<init>\":()V\n+  #174 = NameAndType        #107:#108     // closed:Z\n+  #175 = NameAndType        #111:#112     // entryBytesRead:J\n+  #176 = NameAndType        #113:#108     // entryEOF:Z\n+  #177 = NameAndType        #114:#115     // tmpbuf:[B\n+  #178 = NameAndType        #116:#112     // crc:J\n+  #179 = NameAndType        #119:#115     // twoBytesBuf:[B\n+  #180 = NameAndType        #120:#115     // fourBytesBuf:[B\n+  #181 = NameAndType        #121:#115     // sixBytesBuf:[B\n+  #182 = NameAndType        #117:#118     // in:Ljava/io/InputStream;\n+  #183 = NameAndType        #122:#123     // blockSize:I\n+  #184 = NameAndType        #126:#127     // encoding:Ljava/lang/String;\n+  #185 = Class              #275          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #186 = NameAndType        #276:#277     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #187 = NameAndType        #124:#125     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #188 = NameAndType        #142:#140     // ensureOpen:()V\n+  #189 = Class              #278          // java/io/InputStream\n+  #190 = NameAndType        #139:#140     // close:()V\n+  #191 = Utf8               java/lang/Integer\n+  #192 = NameAndType        #146:#161     // skip:(J)J\n+  #193 = Utf8               java/io/IOException\n+  #194 = Utf8               Stream closed\n+  #195 = NameAndType        #128:#279     // \"<init>\":(Ljava/lang/String;)V\n+  #196 = NameAndType        #109:#110     // entry:Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #197 = NameAndType        #141:#140     // closeEntry:()V\n+  #198 = NameAndType        #150:#149     // readFully:([BII)I\n+  #199 = Class              #280          // org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #200 = NameAndType        #281:#282     // byteArray2long:([BZ)J\n+  #201 = NameAndType        #158:#156     // readOldBinaryEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #202 = Class              #283          // java/lang/System\n+  #203 = NameAndType        #284:#285     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #204 = Class              #286          // org/apache/commons/compress/utils/ArchiveUtils\n+  #205 = NameAndType        #287:#288     // toAsciiString:([B)Ljava/lang/String;\n+  #206 = NameAndType        #289:#136     // hashCode:()I\n+  #207 = Utf8               070701\n+  #208 = NameAndType        #290:#291     // equals:(Ljava/lang/Object;)Z\n+  #209 = Utf8               070702\n+  #210 = Utf8               070707\n+  #211 = NameAndType        #155:#156     // readNewEntry:(Z)Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #212 = NameAndType        #157:#144     // readOldAsciiEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #213 = Utf8               java/lang/StringBuilder\n+  #214 = Utf8               Unknown magic [\n+  #215 = NameAndType        #292:#293     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #216 = Utf8               ]. Occured at byte:\n+  #217 = NameAndType        #294:#295     // getBytesRead:()J\n+  #218 = NameAndType        #292:#296     // append:(J)Ljava/lang/StringBuilder;\n+  #219 = NameAndType        #297:#298     // toString:()Ljava/lang/String;\n+  #220 = NameAndType        #299:#298     // getName:()Ljava/lang/String;\n+  #221 = Utf8               TRAILER!!!\n+  #222 = NameAndType        #164:#140     // skipRemainderOfLastBlock:()V\n+  #223 = Utf8               java/lang/IndexOutOfBoundsException\n+  #224 = NameAndType        #300:#295     // getSize:()J\n+  #225 = NameAndType        #301:#136     // getDataPadCount:()I\n+  #226 = NameAndType        #146:#147     // skip:(I)V\n+  #227 = NameAndType        #302:#303     // getFormat:()S\n+  #228 = NameAndType        #304:#295     // getChksum:()J\n+  #229 = Utf8               CRC Error. Occured at byte:\n+  #230 = Class              #305          // java/lang/Math\n+  #231 = NameAndType        #306:#307     // min:(JJ)J\n+  #232 = Class              #308          // org/apache/commons/compress/utils/IOUtils\n+  #233 = NameAndType        #150:#309     // readFully:(Ljava/io/InputStream;[BII)I\n+  #234 = NameAndType        #310:#147     // count:(I)V\n+  #235 = Utf8               java/io/EOFException\n+  #236 = Class              #311          // java/lang/Long\n+  #237 = NameAndType        #312:#313     // parseLong:(Ljava/lang/String;I)J\n+  #238 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+  #239 = NameAndType        #128:#314     // \"<init>\":(S)V\n+  #240 = NameAndType        #153:#154     // readAsciiLong:(II)J\n+  #241 = NameAndType        #315:#316     // setInode:(J)V\n+  #242 = NameAndType        #317:#161     // fileType:(J)J\n+  #243 = NameAndType        #318:#316     // setMode:(J)V\n+  #244 = NameAndType        #319:#316     // setUID:(J)V\n+  #245 = NameAndType        #320:#316     // setGID:(J)V\n+  #246 = NameAndType        #321:#316     // setNumberOfLinks:(J)V\n+  #247 = NameAndType        #322:#316     // setTime:(J)V\n+  #248 = NameAndType        #323:#316     // setSize:(J)V\n+  #249 = NameAndType        #324:#316     // setDeviceMaj:(J)V\n+  #250 = NameAndType        #325:#316     // setDeviceMin:(J)V\n+  #251 = NameAndType        #326:#316     // setRemoteDeviceMaj:(J)V\n+  #252 = NameAndType        #327:#316     // setRemoteDeviceMin:(J)V\n+  #253 = NameAndType        #328:#316     // setChksum:(J)V\n+  #254 = NameAndType        #159:#160     // readCString:(I)Ljava/lang/String;\n+  #255 = NameAndType        #329:#279     // setName:(Ljava/lang/String;)V\n+  #256 = Utf8               Mode 0 only allowed in the trailer. Found entry name:\n+  #257 = NameAndType        #330:#331     // sanitize:(Ljava/lang/String;)Ljava/lang/String;\n+  #258 = Utf8                Occured at byte:\n+  #259 = NameAndType        #332:#136     // getHeaderPadCount:()I\n+  #260 = NameAndType        #333:#316     // setDevice:(J)V\n+  #261 = NameAndType        #334:#316     // setRemoteDevice:(J)V\n+  #262 = Utf8               Mode 0 only allowed in the trailer. Found entry:\n+  #263 = NameAndType        #151:#152     // readBinaryLong:(IZ)J\n+  #264 = Utf8               Occured at byte:\n+  #265 = NameAndType        #148:#136     // read:()I\n+  #266 = Class              #335          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #267 = NameAndType        #336:#288     // decode:([B)Ljava/lang/String;\n+  #268 = Utf8               java/lang/IllegalArgumentException\n+  #269 = Utf8               negative skip length\n+  #270 = NameAndType        #148:#149     // read:([BII)I\n+  #271 = NameAndType        #143:#144     // getNextCPIOEntry:()Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n+  #272 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+  #273 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+  #274 = Utf8               java/lang/String\n+  #275 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #276 = Utf8               getZipEncoding\n+  #277 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #278 = Utf8               java/io/InputStream\n+  #279 = Utf8               (Ljava/lang/String;)V\n+  #280 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #281 = Utf8               byteArray2long\n+  #282 = Utf8               ([BZ)J\n+  #283 = Utf8               java/lang/System\n+  #284 = Utf8               arraycopy\n+  #285 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #286 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #287 = Utf8               toAsciiString\n+  #288 = Utf8               ([B)Ljava/lang/String;\n+  #289 = Utf8               hashCode\n+  #290 = Utf8               equals\n+  #291 = Utf8               (Ljava/lang/Object;)Z\n+  #292 = Utf8               append\n+  #293 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #294 = Utf8               getBytesRead\n+  #295 = Utf8               ()J\n+  #296 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #297 = Utf8               toString\n+  #298 = Utf8               ()Ljava/lang/String;\n+  #299 = Utf8               getName\n+  #300 = Utf8               getSize\n+  #301 = Utf8               getDataPadCount\n+  #302 = Utf8               getFormat\n+  #303 = Utf8               ()S\n+  #304 = Utf8               getChksum\n+  #305 = Utf8               java/lang/Math\n+  #306 = Utf8               min\n+  #307 = Utf8               (JJ)J\n+  #308 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #309 = Utf8               (Ljava/io/InputStream;[BII)I\n+  #310 = Utf8               count\n+  #311 = Utf8               java/lang/Long\n+  #312 = Utf8               parseLong\n+  #313 = Utf8               (Ljava/lang/String;I)J\n+  #314 = Utf8               (S)V\n+  #315 = Utf8               setInode\n+  #316 = Utf8               (J)V\n+  #317 = Utf8               fileType\n+  #318 = Utf8               setMode\n+  #319 = Utf8               setUID\n+  #320 = Utf8               setGID\n+  #321 = Utf8               setNumberOfLinks\n+  #322 = Utf8               setTime\n+  #323 = Utf8               setSize\n+  #324 = Utf8               setDeviceMaj\n+  #325 = Utf8               setDeviceMin\n+  #326 = Utf8               setRemoteDeviceMaj\n+  #327 = Utf8               setRemoteDeviceMin\n+  #328 = Utf8               setChksum\n+  #329 = Utf8               setName\n+  #330 = Utf8               sanitize\n+  #331 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #332 = Utf8               getHeaderPadCount\n+  #333 = Utf8               setDevice\n+  #334 = Utf8               setRemoteDevice\n+  #335 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #336 = Utf8               decode\n {\n   private boolean closed;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.cpio.CpioArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/cpio/CpioArchiveEntry;\n@@ -1775,14 +1773,15 @@\n         61: lsub\n         62: lstore_3\n         63: goto          29\n         66: return\n       LineNumberTable:\n         line 509: 0\n         line 510: 11\n+        line 511: 21\n         line 512: 29\n         line 513: 35\n         line 514: 48\n         line 515: 55\n         line 517: 58\n         line 518: 63\n         line 519: 66\n"}]}
