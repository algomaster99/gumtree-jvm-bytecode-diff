{"diffoscope-json-version": 1, "source1": "first/CPRef.class", "source2": "second/CPRef.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,153 +1,153 @@\n-  SHA-256 checksum 5f44477855c3b8633a84c16223b3d05f8dc0fc9ba9dc4aa3241faea283723b12\n+  SHA-256 checksum 921556c866bceb56d407be0ad6a73b67bd66fdc0e4e36d4c71b6e883aa7309c1\n   Compiled from \"CPRef.java\"\n public abstract class org.apache.commons.compress.harmony.unpack200.bytecode.CPRef extends org.apache.commons.compress.harmony.unpack200.bytecode.ConstantPoolEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #12                         // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n-  super_class: #22                        // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n+  this_class: #18                         // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n+  super_class: #2                         // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n   interfaces: 0, fields: 5, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #22.#80       // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.\"<init>\":(BI)V\n-    #2 = String             #35           // className\n-    #3 = Methodref          #81.#82       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #4 = Class              #83           // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-    #5 = Fieldref           #12.#84       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-    #6 = String             #53           // descriptor\n-    #7 = Class              #85           // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n-    #8 = Fieldref           #12.#86       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-    #9 = Methodref          #87.#88       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #10 = Methodref          #12.#89       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.hashCode:()I\n-   #11 = Methodref          #87.#89       // java/lang/Object.hashCode:()I\n-   #12 = Class              #90           // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n-   #13 = Methodref          #4.#91        // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.equals:(Ljava/lang/Object;)Z\n-   #14 = Methodref          #7.#91        // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.equals:(Ljava/lang/Object;)Z\n-   #15 = Class              #92           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #16 = Methodref          #22.#93       // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #17 = Methodref          #94.#95       // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #18 = Fieldref           #12.#96       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.nameAndTypeIndex:I\n-   #19 = Fieldref           #12.#97       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.classNameIndex:I\n-   #20 = Fieldref           #12.#98       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.cachedToString:Ljava/lang/String;\n-   #21 = Methodref          #12.#99       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.getTag:()B\n-   #22 = Class              #100          // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n-   #23 = String             #101          // FieldRef\n-   #24 = String             #102          // MethoddRef\n-   #25 = String             #103          // InterfaceMethodRef\n-   #26 = String             #104          // unknown\n-   #27 = Class              #105          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#106      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = Methodref          #27.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #30 = String             #108          // :\n-   #31 = Methodref          #27.#109      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #32 = String             #110          // #\n-   #33 = Methodref          #27.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #112.#113     // java/io/DataOutputStream.writeShort:(I)V\n-   #35 = Utf8               className\n-   #36 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #37 = Utf8               classNameIndex\n-   #38 = Utf8               I\n-   #39 = Utf8               nameAndType\n-   #40 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-   #41 = Utf8               nameAndTypeIndex\n-   #42 = Utf8               cachedToString\n-   #43 = Utf8               Ljava/lang/String;\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (BLorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPRef;\n-   #51 = Utf8               type\n-   #52 = Utf8               B\n-   #53 = Utf8               descriptor\n-   #54 = Utf8               globalIndex\n-   #55 = Utf8               equals\n-   #56 = Utf8               (Ljava/lang/Object;)Z\n-   #57 = Utf8               obj\n-   #58 = Utf8               Ljava/lang/Object;\n-   #59 = Utf8               other\n-   #60 = Utf8               StackMapTable\n-   #61 = Utf8               getNestedClassFileEntries\n-   #62 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #63 = Utf8               entries\n-   #64 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #65 = Utf8               resolve\n-   #66 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #67 = Utf8               pool\n-   #68 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n-   #69 = Utf8               toString\n-   #70 = Utf8               ()Ljava/lang/String;\n-   #71 = Class              #114          // java/lang/String\n-   #72 = Utf8               writeBody\n-   #73 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #74 = Utf8               dos\n-   #75 = Utf8               Ljava/io/DataOutputStream;\n-   #76 = Utf8               Exceptions\n-   #77 = Class              #115          // java/io/IOException\n-   #78 = Utf8               SourceFile\n-   #79 = Utf8               CPRef.java\n-   #80 = NameAndType        #44:#116      // \"<init>\":(BI)V\n-   #81 = Class              #117          // java/util/Objects\n-   #82 = NameAndType        #118:#119     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #83 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-   #84 = NameAndType        #35:#36       // className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #85 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n-   #86 = NameAndType        #39:#40       // nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-   #87 = Class              #120          // java/lang/Object\n-   #88 = NameAndType        #121:#122     // getClass:()Ljava/lang/Class;\n-   #89 = NameAndType        #123:#124     // hashCode:()I\n-   #90 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n-   #91 = NameAndType        #55:#56       // equals:(Ljava/lang/Object;)Z\n-   #92 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #93 = NameAndType        #65:#66       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #94 = Class              #125          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-   #95 = NameAndType        #126:#127     // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #96 = NameAndType        #41:#38       // nameAndTypeIndex:I\n-   #97 = NameAndType        #37:#38       // classNameIndex:I\n-   #98 = NameAndType        #42:#43       // cachedToString:Ljava/lang/String;\n-   #99 = NameAndType        #128:#129     // getTag:()B\n-  #100 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n-  #101 = Utf8               FieldRef\n-  #102 = Utf8               MethoddRef\n-  #103 = Utf8               InterfaceMethodRef\n-  #104 = Utf8               unknown\n-  #105 = Utf8               java/lang/StringBuilder\n-  #106 = NameAndType        #44:#130      // \"<init>\":()V\n-  #107 = NameAndType        #131:#132     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = Utf8               :\n-  #109 = NameAndType        #131:#133     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #110 = Utf8               #\n-  #111 = NameAndType        #69:#70       // toString:()Ljava/lang/String;\n-  #112 = Class              #134          // java/io/DataOutputStream\n-  #113 = NameAndType        #135:#136     // writeShort:(I)V\n-  #114 = Utf8               java/lang/String\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               (BI)V\n-  #117 = Utf8               java/util/Objects\n-  #118 = Utf8               requireNonNull\n-  #119 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #120 = Utf8               java/lang/Object\n-  #121 = Utf8               getClass\n-  #122 = Utf8               ()Ljava/lang/Class;\n-  #123 = Utf8               hashCode\n-  #124 = Utf8               ()I\n-  #125 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #126 = Utf8               indexOf\n-  #127 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #128 = Utf8               getTag\n-  #129 = Utf8               ()B\n-  #130 = Utf8               ()V\n-  #131 = Utf8               append\n-  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #133 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #134 = Utf8               java/io/DataOutputStream\n-  #135 = Utf8               writeShort\n-  #136 = Utf8               (I)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.\"<init>\":(BI)V\n+    #2 = Class              #4            // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n+    #3 = NameAndType        #5:#6         // \"<init>\":(BI)V\n+    #4 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (BI)V\n+    #7 = String             #8            // className\n+    #8 = Utf8               className\n+    #9 = Methodref          #10.#11       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #10 = Class              #12           // java/util/Objects\n+   #11 = NameAndType        #13:#14       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #12 = Utf8               java/util/Objects\n+   #13 = Utf8               requireNonNull\n+   #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #15 = Class              #16           // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #16 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #17 = Fieldref           #18.#19       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #18 = Class              #20           // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n+   #19 = NameAndType        #8:#21        // className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #20 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n+   #21 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #22 = String             #23           // descriptor\n+   #23 = Utf8               descriptor\n+   #24 = Class              #25           // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n+   #25 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n+   #26 = Fieldref           #18.#27       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+   #27 = NameAndType        #28:#29       // nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+   #28 = Utf8               nameAndType\n+   #29 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+   #30 = Methodref          #31.#32       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #31 = Class              #33           // java/lang/Object\n+   #32 = NameAndType        #34:#35       // getClass:()Ljava/lang/Class;\n+   #33 = Utf8               java/lang/Object\n+   #34 = Utf8               getClass\n+   #35 = Utf8               ()Ljava/lang/Class;\n+   #36 = Methodref          #18.#37       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.hashCode:()I\n+   #37 = NameAndType        #38:#39       // hashCode:()I\n+   #38 = Utf8               hashCode\n+   #39 = Utf8               ()I\n+   #40 = Methodref          #31.#37       // java/lang/Object.hashCode:()I\n+   #41 = Methodref          #15.#42       // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.equals:(Ljava/lang/Object;)Z\n+   #42 = NameAndType        #43:#44       // equals:(Ljava/lang/Object;)Z\n+   #43 = Utf8               equals\n+   #44 = Utf8               (Ljava/lang/Object;)Z\n+   #45 = Methodref          #24.#42       // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.equals:(Ljava/lang/Object;)Z\n+   #46 = Class              #47           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #47 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #48 = Methodref          #2.#49        // org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #49 = NameAndType        #50:#51       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #50 = Utf8               resolve\n+   #51 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #52 = Methodref          #53.#54       // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #53 = Class              #55           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #54 = NameAndType        #56:#57       // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #55 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #56 = Utf8               indexOf\n+   #57 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #58 = Fieldref           #18.#59       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.nameAndTypeIndex:I\n+   #59 = NameAndType        #60:#61       // nameAndTypeIndex:I\n+   #60 = Utf8               nameAndTypeIndex\n+   #61 = Utf8               I\n+   #62 = Fieldref           #18.#63       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.classNameIndex:I\n+   #63 = NameAndType        #64:#61       // classNameIndex:I\n+   #64 = Utf8               classNameIndex\n+   #65 = Fieldref           #18.#66       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.cachedToString:Ljava/lang/String;\n+   #66 = NameAndType        #67:#68       // cachedToString:Ljava/lang/String;\n+   #67 = Utf8               cachedToString\n+   #68 = Utf8               Ljava/lang/String;\n+   #69 = Methodref          #18.#70       // org/apache/commons/compress/harmony/unpack200/bytecode/CPRef.getTag:()B\n+   #70 = NameAndType        #71:#72       // getTag:()B\n+   #71 = Utf8               getTag\n+   #72 = Utf8               ()B\n+   #73 = String             #74           // FieldRef\n+   #74 = Utf8               FieldRef\n+   #75 = String             #76           // MethoddRef\n+   #76 = Utf8               MethoddRef\n+   #77 = String             #78           // InterfaceMethodRef\n+   #78 = Utf8               InterfaceMethodRef\n+   #79 = String             #80           // unknown\n+   #80 = Utf8               unknown\n+   #81 = Class              #82           // java/lang/StringBuilder\n+   #82 = Utf8               java/lang/StringBuilder\n+   #83 = Methodref          #81.#84       // java/lang/StringBuilder.\"<init>\":()V\n+   #84 = NameAndType        #5:#85        // \"<init>\":()V\n+   #85 = Utf8               ()V\n+   #86 = Methodref          #81.#87       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #87 = NameAndType        #88:#89       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #88 = Utf8               append\n+   #89 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = String             #91           // :\n+   #91 = Utf8               :\n+   #92 = Methodref          #81.#93       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #93 = NameAndType        #88:#94       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #94 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #95 = String             #96           // #\n+   #96 = Utf8               #\n+   #97 = Methodref          #81.#98       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #98 = NameAndType        #99:#100      // toString:()Ljava/lang/String;\n+   #99 = Utf8               toString\n+  #100 = Utf8               ()Ljava/lang/String;\n+  #101 = Methodref          #102.#103     // java/io/DataOutputStream.writeShort:(I)V\n+  #102 = Class              #104          // java/io/DataOutputStream\n+  #103 = NameAndType        #105:#106     // writeShort:(I)V\n+  #104 = Utf8               java/io/DataOutputStream\n+  #105 = Utf8               writeShort\n+  #106 = Utf8               (I)V\n+  #107 = Utf8               (BLorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;I)V\n+  #108 = Utf8               Code\n+  #109 = Utf8               LineNumberTable\n+  #110 = Utf8               LocalVariableTable\n+  #111 = Utf8               this\n+  #112 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPRef;\n+  #113 = Utf8               type\n+  #114 = Utf8               B\n+  #115 = Utf8               globalIndex\n+  #116 = Utf8               obj\n+  #117 = Utf8               Ljava/lang/Object;\n+  #118 = Utf8               other\n+  #119 = Utf8               StackMapTable\n+  #120 = Utf8               getNestedClassFileEntries\n+  #121 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #122 = Utf8               entries\n+  #123 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #124 = Utf8               pool\n+  #125 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n+  #126 = Class              #127          // java/lang/String\n+  #127 = Utf8               java/lang/String\n+  #128 = Utf8               writeBody\n+  #129 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #130 = Utf8               dos\n+  #131 = Utf8               Ljava/io/DataOutputStream;\n+  #132 = Utf8               Exceptions\n+  #133 = Class              #134          // java/io/IOException\n+  #134 = Utf8               java/io/IOException\n+  #135 = Utf8               SourceFile\n+  #136 = Utf8               CPRef.java\n {\n   org.apache.commons.compress.harmony.unpack200.bytecode.CPClass className;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n     flags: (0x0000)\n \n   transient int classNameIndex;\n     descriptor: I\n@@ -172,24 +172,24 @@\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload         4\n          4: invokespecial #1                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.\"<init>\":(BI)V\n          7: aload_0\n          8: aload_2\n-         9: ldc           #2                  // String className\n-        11: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        14: checkcast     #4                  // class org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-        17: putfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         9: ldc           #7                  // String className\n+        11: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        14: checkcast     #15                 // class org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+        17: putfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         20: aload_0\n         21: aload_3\n-        22: ldc           #6                  // String descriptor\n-        24: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        27: checkcast     #7                  // class org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n-        30: putfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        22: ldc           #22                 // String descriptor\n+        24: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        27: checkcast     #24                 // class org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n+        30: putfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         33: return\n       LineNumberTable:\n         line 46: 0\n         line 47: 7\n         line 48: 20\n         line 49: 33\n       LocalVariableTable:\n@@ -211,43 +211,43 @@\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnonnull     13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n-        14: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        14: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         17: aload_1\n-        18: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: if_acmpeq     26\n         24: iconst_0\n         25: ireturn\n         26: aload_0\n-        27: invokevirtual #10                 // Method hashCode:()I\n+        27: invokevirtual #36                 // Method hashCode:()I\n         30: aload_1\n-        31: invokevirtual #11                 // Method java/lang/Object.hashCode:()I\n+        31: invokevirtual #40                 // Method java/lang/Object.hashCode:()I\n         34: if_icmpeq     39\n         37: iconst_0\n         38: ireturn\n         39: aload_1\n-        40: checkcast     #12                 // class org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n+        40: checkcast     #18                 // class org/apache/commons/compress/harmony/unpack200/bytecode/CPRef\n         43: astore_2\n         44: aload_0\n-        45: getfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        45: getfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         48: aload_2\n-        49: getfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        52: invokevirtual #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.equals:(Ljava/lang/Object;)Z\n+        49: getfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        52: invokevirtual #41                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.equals:(Ljava/lang/Object;)Z\n         55: ifne          60\n         58: iconst_0\n         59: ireturn\n         60: aload_0\n-        61: getfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        61: getfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         64: aload_2\n-        65: getfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-        68: invokevirtual #14                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.equals:(Ljava/lang/Object;)Z\n+        65: getfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        68: invokevirtual #45                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.equals:(Ljava/lang/Object;)Z\n         71: ifne          76\n         74: iconst_0\n         75: ireturn\n         76: iconst_1\n         77: ireturn\n       LineNumberTable:\n         line 53: 0\n@@ -281,25 +281,25 @@\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n-         1: anewarray     #15                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         1: anewarray     #46                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_0\n-         8: getfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         8: getfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         11: aastore\n         12: aload_1\n         13: iconst_1\n         14: aload_0\n-        15: getfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        15: getfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         18: aastore\n         19: aload_1\n         20: areturn\n       LineNumberTable:\n         line 77: 0\n         line 78: 5\n         line 79: 12\n@@ -312,27 +312,27 @@\n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #16                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #48                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ConstantPoolEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: aload_0\n          6: aload_1\n          7: aload_0\n-         8: getfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-        11: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        14: putfield      #18                 // Field nameAndTypeIndex:I\n+         8: getfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        11: invokevirtual #52                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        14: putfield      #58                 // Field nameAndTypeIndex:I\n         17: aload_0\n         18: aload_1\n         19: aload_0\n-        20: getfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        23: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        26: putfield      #19                 // Field classNameIndex:I\n+        20: getfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        23: invokevirtual #52                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        26: putfield      #62                 // Field classNameIndex:I\n         29: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 5\n         line 87: 17\n         line 88: 29\n       LocalVariableTable:\n@@ -342,59 +342,59 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field cachedToString:Ljava/lang/String;\n+         1: getfield      #65                 // Field cachedToString:Ljava/lang/String;\n          4: ifnonnull     97\n          7: aload_0\n-         8: invokevirtual #21                 // Method getTag:()B\n+         8: invokevirtual #69                 // Method getTag:()B\n         11: bipush        9\n         13: if_icmpne     22\n-        16: ldc           #23                 // String FieldRef\n+        16: ldc           #73                 // String FieldRef\n         18: astore_1\n         19: goto          55\n         22: aload_0\n-        23: invokevirtual #21                 // Method getTag:()B\n+        23: invokevirtual #69                 // Method getTag:()B\n         26: bipush        10\n         28: if_icmpne     37\n-        31: ldc           #24                 // String MethoddRef\n+        31: ldc           #75                 // String MethoddRef\n         33: astore_1\n         34: goto          55\n         37: aload_0\n-        38: invokevirtual #21                 // Method getTag:()B\n+        38: invokevirtual #69                 // Method getTag:()B\n         41: bipush        11\n         43: if_icmpne     52\n-        46: ldc           #25                 // String InterfaceMethodRef\n+        46: ldc           #77                 // String InterfaceMethodRef\n         48: astore_1\n         49: goto          55\n-        52: ldc           #26                 // String unknown\n+        52: ldc           #79                 // String unknown\n         54: astore_1\n         55: aload_0\n-        56: new           #27                 // class java/lang/StringBuilder\n+        56: new           #81                 // class java/lang/StringBuilder\n         59: dup\n-        60: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        60: invokespecial #83                 // Method java/lang/StringBuilder.\"<init>\":()V\n         63: aload_1\n-        64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #30                 // String :\n-        69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: ldc           #90                 // String :\n+        69: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         72: aload_0\n-        73: getfield      #5                  // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        76: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        79: ldc           #32                 // String #\n-        81: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        73: getfield      #17                 // Field className:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        76: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        79: ldc           #95                 // String #\n+        81: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         84: aload_0\n-        85: getfield      #8                  // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-        88: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        91: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        94: putfield      #20                 // Field cachedToString:Ljava/lang/String;\n+        85: getfield      #26                 // Field nameAndType:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        88: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        91: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        94: putfield      #65                 // Field cachedToString:Ljava/lang/String;\n         97: aload_0\n-        98: getfield      #20                 // Field cachedToString:Ljava/lang/String;\n+        98: getfield      #65                 // Field cachedToString:Ljava/lang/String;\n        101: areturn\n       LineNumberTable:\n         line 92: 0\n         line 94: 7\n         line 95: 16\n         line 96: 22\n         line 97: 31\n@@ -423,20 +423,20 @@\n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #19                 // Field classNameIndex:I\n-         5: invokevirtual #34                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #62                 // Field classNameIndex:I\n+         5: invokevirtual #101                // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #18                 // Field nameAndTypeIndex:I\n-        13: invokevirtual #34                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #58                 // Field nameAndTypeIndex:I\n+        13: invokevirtual #101                // Method java/io/DataOutputStream.writeShort:(I)V\n         16: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 8\n         line 112: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
