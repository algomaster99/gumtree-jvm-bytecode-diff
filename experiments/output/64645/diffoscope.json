{"diffoscope-json-version": 1, "source1": "first/ChecksumVerifyingInputStream.class", "source2": "second/ChecksumVerifyingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,93 +1,93 @@\n-  SHA-256 checksum b4ba9bf97e8412c88f64c44a9936f0523e394dcaa4d62941bdd2dfe762af81db\n+  SHA-256 checksum 2248ffc9452c4ab79e1b1d943b40f601c3fea8ddb45568bb883cb91e184e9e25\n   Compiled from \"ChecksumVerifyingInputStream.java\"\n public class org.apache.commons.compress.utils.ChecksumVerifyingInputStream extends java.io.InputStream\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  super_class: #18                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #18.#53        // java/io/InputStream.\"<init>\":()V\n-   #2 = Fieldref           #17.#54        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n-   #3 = Fieldref           #17.#55        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n-   #4 = Fieldref           #17.#56        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n-   #5 = Fieldref           #17.#57        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n-   #6 = Methodref          #18.#58        // java/io/InputStream.read:()I\n-   #7 = InterfaceMethodref #59.#60        // java/util/zip/Checksum.update:(I)V\n-   #8 = InterfaceMethodref #59.#61        // java/util/zip/Checksum.getValue:()J\n-   #9 = Class              #62            // java/io/IOException\n-  #10 = String             #63            // Checksum verification failed\n-  #11 = Methodref          #9.#64         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = Methodref          #17.#65        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n-  #13 = Methodref          #18.#65        // java/io/InputStream.read:([BII)I\n-  #14 = InterfaceMethodref #59.#66        // java/util/zip/Checksum.update:([BII)V\n-  #15 = Methodref          #17.#58        // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n-  #16 = Methodref          #18.#67        // java/io/InputStream.close:()V\n-  #17 = Class              #68            // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  #18 = Class              #69            // java/io/InputStream\n-  #19 = Utf8               in\n-  #20 = Utf8               Ljava/io/InputStream;\n-  #21 = Utf8               bytesRemaining\n-  #22 = Utf8               J\n-  #23 = Utf8               expectedChecksum\n-  #24 = Utf8               checksum\n-  #25 = Utf8               Ljava/util/zip/Checksum;\n-  #26 = Utf8               <init>\n-  #27 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               LocalVariableTable\n-  #31 = Utf8               this\n-  #32 = Utf8               Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n-  #33 = Utf8               size\n-  #34 = Utf8               read\n-  #35 = Utf8               ()I\n-  #36 = Utf8               ret\n-  #37 = Utf8               I\n-  #38 = Utf8               StackMapTable\n-  #39 = Utf8               Exceptions\n-  #40 = Utf8               ([B)I\n-  #41 = Utf8               b\n-  #42 = Utf8               [B\n-  #43 = Utf8               ([BII)I\n-  #44 = Utf8               off\n-  #45 = Utf8               len\n-  #46 = Utf8               skip\n-  #47 = Utf8               (J)J\n-  #48 = Utf8               n\n-  #49 = Utf8               close\n-  #50 = Utf8               ()V\n-  #51 = Utf8               SourceFile\n-  #52 = Utf8               ChecksumVerifyingInputStream.java\n-  #53 = NameAndType        #26:#50        // \"<init>\":()V\n-  #54 = NameAndType        #24:#25        // checksum:Ljava/util/zip/Checksum;\n-  #55 = NameAndType        #19:#20        // in:Ljava/io/InputStream;\n-  #56 = NameAndType        #23:#22        // expectedChecksum:J\n-  #57 = NameAndType        #21:#22        // bytesRemaining:J\n-  #58 = NameAndType        #34:#35        // read:()I\n-  #59 = Class              #70            // java/util/zip/Checksum\n-  #60 = NameAndType        #71:#72        // update:(I)V\n-  #61 = NameAndType        #73:#74        // getValue:()J\n-  #62 = Utf8               java/io/IOException\n-  #63 = Utf8               Checksum verification failed\n-  #64 = NameAndType        #26:#75        // \"<init>\":(Ljava/lang/String;)V\n-  #65 = NameAndType        #34:#43        // read:([BII)I\n-  #66 = NameAndType        #71:#76        // update:([BII)V\n-  #67 = NameAndType        #49:#50        // close:()V\n-  #68 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  #69 = Utf8               java/io/InputStream\n-  #70 = Utf8               java/util/zip/Checksum\n-  #71 = Utf8               update\n-  #72 = Utf8               (I)V\n-  #73 = Utf8               getValue\n-  #74 = Utf8               ()J\n-  #75 = Utf8               (Ljava/lang/String;)V\n-  #76 = Utf8               ([BII)V\n+   #1 = Class              #2             // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+   #2 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               in\n+   #6 = Utf8               Ljava/io/InputStream;\n+   #7 = Utf8               bytesRemaining\n+   #8 = Utf8               J\n+   #9 = Utf8               expectedChecksum\n+  #10 = Utf8               checksum\n+  #11 = Utf8               Ljava/util/zip/Checksum;\n+  #12 = Utf8               <init>\n+  #13 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n+  #14 = Utf8               Code\n+  #15 = Methodref          #3.#16         // java/io/InputStream.\"<init>\":()V\n+  #16 = NameAndType        #12:#17        // \"<init>\":()V\n+  #17 = Utf8               ()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n+  #19 = NameAndType        #10:#11        // checksum:Ljava/util/zip/Checksum;\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n+  #21 = NameAndType        #5:#6          // in:Ljava/io/InputStream;\n+  #22 = Fieldref           #1.#23         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n+  #23 = NameAndType        #9:#8          // expectedChecksum:J\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n+  #25 = NameAndType        #7:#8          // bytesRemaining:J\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n+  #30 = Utf8               size\n+  #31 = Utf8               read\n+  #32 = Utf8               ()I\n+  #33 = Utf8               Exceptions\n+  #34 = Class              #35            // java/io/IOException\n+  #35 = Utf8               java/io/IOException\n+  #36 = Methodref          #3.#37         // java/io/InputStream.read:()I\n+  #37 = NameAndType        #31:#32        // read:()I\n+  #38 = InterfaceMethodref #39.#41        // java/util/zip/Checksum.update:(I)V\n+  #39 = Class              #40            // java/util/zip/Checksum\n+  #40 = Utf8               java/util/zip/Checksum\n+  #41 = NameAndType        #42:#43        // update:(I)V\n+  #42 = Utf8               update\n+  #43 = Utf8               (I)V\n+  #44 = InterfaceMethodref #39.#45        // java/util/zip/Checksum.getValue:()J\n+  #45 = NameAndType        #46:#47        // getValue:()J\n+  #46 = Utf8               getValue\n+  #47 = Utf8               ()J\n+  #48 = String             #49            // Checksum verification failed\n+  #49 = Utf8               Checksum verification failed\n+  #50 = Methodref          #34.#51        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #51 = NameAndType        #12:#52        // \"<init>\":(Ljava/lang/String;)V\n+  #52 = Utf8               (Ljava/lang/String;)V\n+  #53 = Utf8               ret\n+  #54 = Utf8               I\n+  #55 = Utf8               StackMapTable\n+  #56 = Utf8               ([B)I\n+  #57 = Methodref          #1.#58         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n+  #58 = NameAndType        #31:#59        // read:([BII)I\n+  #59 = Utf8               ([BII)I\n+  #60 = Utf8               b\n+  #61 = Utf8               [B\n+  #62 = Methodref          #3.#58         // java/io/InputStream.read:([BII)I\n+  #63 = InterfaceMethodref #39.#64        // java/util/zip/Checksum.update:([BII)V\n+  #64 = NameAndType        #42:#65        // update:([BII)V\n+  #65 = Utf8               ([BII)V\n+  #66 = Utf8               off\n+  #67 = Utf8               len\n+  #68 = Utf8               skip\n+  #69 = Utf8               (J)J\n+  #70 = Methodref          #1.#37         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n+  #71 = Utf8               n\n+  #72 = Utf8               close\n+  #73 = Methodref          #3.#74         // java/io/InputStream.close:()V\n+  #74 = NameAndType        #72:#17        // close:()V\n+  #75 = Utf8               SourceFile\n+  #76 = Utf8               ChecksumVerifyingInputStream.java\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long bytesRemaining;\n     descriptor: J\n@@ -103,30 +103,30 @@\n \n   public org.apache.commons.compress.utils.ChecksumVerifyingInputStream(java.util.zip.Checksum, java.io.InputStream, long, long);\n     descriptor: (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+         6: putfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field in:Ljava/io/InputStream;\n+        11: putfield      #20                 // Field in:Ljava/io/InputStream;\n         14: aload_0\n         15: lload         5\n-        17: putfield      #4                  // Field expectedChecksum:J\n+        17: putfield      #22                 // Field expectedChecksum:J\n         20: aload_0\n         21: lload_3\n-        22: putfield      #5                  // Field bytesRemaining:J\n+        22: putfield      #24                 // Field bytesRemaining:J\n         25: return\n       LineNumberTable:\n-        line 37: 0\n+        line 36: 0\n         line 38: 4\n         line 39: 9\n         line 40: 14\n         line 41: 20\n         line 42: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -135,55 +135,57 @@\n             0      26     2    in   Ljava/io/InputStream;\n             0      26     3  size   J\n             0      26     5 expectedChecksum   J\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytesRemaining:J\n+         1: getfield      #24                 // Field bytesRemaining:J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          11\n          9: iconst_m1\n         10: ireturn\n         11: aload_0\n-        12: getfield      #3                  // Field in:Ljava/io/InputStream;\n-        15: invokevirtual #6                  // Method java/io/InputStream.read:()I\n+        12: getfield      #20                 // Field in:Ljava/io/InputStream;\n+        15: invokevirtual #36                 // Method java/io/InputStream.read:()I\n         18: istore_1\n         19: iload_1\n         20: iflt          43\n         23: aload_0\n-        24: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n         27: iload_1\n-        28: invokeinterface #7,  2            // InterfaceMethod java/util/zip/Checksum.update:(I)V\n+        28: invokeinterface #38,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V\n         33: aload_0\n         34: dup\n-        35: getfield      #5                  // Field bytesRemaining:J\n+        35: getfield      #24                 // Field bytesRemaining:J\n         38: lconst_1\n         39: lsub\n-        40: putfield      #5                  // Field bytesRemaining:J\n+        40: putfield      #24                 // Field bytesRemaining:J\n         43: aload_0\n-        44: getfield      #5                  // Field bytesRemaining:J\n+        44: getfield      #24                 // Field bytesRemaining:J\n         47: lconst_0\n         48: lcmp\n         49: ifne          79\n         52: aload_0\n-        53: getfield      #4                  // Field expectedChecksum:J\n+        53: getfield      #22                 // Field expectedChecksum:J\n         56: aload_0\n-        57: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n-        60: invokeinterface #8,  1            // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+        57: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n+        60: invokeinterface #44,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n         65: lcmp\n         66: ifeq          79\n-        69: new           #9                  // class java/io/IOException\n+        69: new           #34                 // class java/io/IOException\n         72: dup\n-        73: ldc           #10                 // String Checksum verification failed\n-        75: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        73: ldc           #48                 // String Checksum verification failed\n+        75: invokespecial #50                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         78: athrow\n         79: iload_1\n         80: ireturn\n       LineNumberTable:\n         line 52: 0\n         line 53: 9\n         line 55: 11\n@@ -199,81 +201,81 @@\n            19      62     1   ret   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 11 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 31\n           locals = [ int ]\n         frame_type = 35 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #12                 // Method read:([BII)I\n+         5: invokevirtual #57                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 74: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #20                 // Field in:Ljava/io/InputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #13                 // Method java/io/InputStream.read:([BII)I\n+         7: invokevirtual #62                 // Method java/io/InputStream.read:([BII)I\n         10: istore        4\n         12: iload         4\n         14: iflt          42\n         17: aload_0\n-        18: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n+        18: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n         21: aload_1\n         22: iload_2\n         23: iload         4\n-        25: invokeinterface #14,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n+        25: invokeinterface #63,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n         30: aload_0\n         31: dup\n-        32: getfield      #5                  // Field bytesRemaining:J\n+        32: getfield      #24                 // Field bytesRemaining:J\n         35: iload         4\n         37: i2l\n         38: lsub\n-        39: putfield      #5                  // Field bytesRemaining:J\n+        39: putfield      #24                 // Field bytesRemaining:J\n         42: aload_0\n-        43: getfield      #5                  // Field bytesRemaining:J\n+        43: getfield      #24                 // Field bytesRemaining:J\n         46: lconst_0\n         47: lcmp\n         48: ifgt          78\n         51: aload_0\n-        52: getfield      #4                  // Field expectedChecksum:J\n+        52: getfield      #22                 // Field expectedChecksum:J\n         55: aload_0\n-        56: getfield      #2                  // Field checksum:Ljava/util/zip/Checksum;\n-        59: invokeinterface #8,  1            // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+        56: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n+        59: invokeinterface #44,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n         64: lcmp\n         65: ifeq          78\n-        68: new           #9                  // class java/io/IOException\n+        68: new           #34                 // class java/io/IOException\n         71: dup\n-        72: ldc           #10                 // String Checksum verification failed\n-        74: invokespecial #11                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        72: ldc           #48                 // String Checksum verification failed\n+        74: invokespecial #50                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         77: athrow\n         78: iload         4\n         80: ireturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 12\n         line 87: 17\n@@ -289,24 +291,24 @@\n             0      81     3   len   I\n            12      69     4   ret   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 42\n           locals = [ int ]\n         frame_type = 35 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #15                 // Method read:()I\n+         1: invokevirtual #70                 // Method read:()I\n          4: iflt          9\n          7: lconst_1\n          8: lreturn\n          9: lconst_0\n         10: lreturn\n       LineNumberTable:\n         line 99: 0\n@@ -314,29 +316,27 @@\n         line 102: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n             0      11     1     n   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 9 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #16                 // Method java/io/InputStream.close:()V\n+         1: getfield      #20                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #73                 // Method java/io/InputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ChecksumVerifyingInputStream.java\"\n"}]}
