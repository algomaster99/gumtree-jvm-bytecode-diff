{"diffoscope-json-version": 1, "source1": "first/ByteOrderParser.class", "source2": "second/ByteOrderParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,73 +1,73 @@\n-  SHA-256 checksum 39cfe4f563457223998981a1106ee20af3fca252381be9848b6667871e3f84d8\n+  SHA-256 checksum 09d0a3499d5f1c385592d10c353787cb62bd1966acda930a252176b9afa3c7ab\n   Compiled from \"ByteOrderParser.java\"\n public final class org.apache.commons.io.ByteOrderParser\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/io/ByteOrderParser\n-  super_class: #17                        // java/lang/Object\n+  this_class: #48                         // org/apache/commons/io/ByteOrderParser\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#27        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #28.#29        // java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-   #3 = Methodref          #28.#30        // java/nio/ByteOrder.toString:()Ljava/lang/String;\n-   #4 = Methodref          #31.#32        // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #5 = Fieldref           #28.#33        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #6 = Class              #34            // java/lang/IllegalArgumentException\n-   #7 = Class              #35            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#27         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #36            // Unsupported byte order setting:\n-  #10 = Methodref          #7.#37         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = String             #38            // , expected one of\n-  #12 = Methodref          #7.#39         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #13 = String             #40            // ,\n-  #14 = Methodref          #7.#30         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #15 = Methodref          #6.#41         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Class              #42            // org/apache/commons/io/ByteOrderParser\n-  #17 = Class              #43            // java/lang/Object\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               parseByteOrder\n-  #23 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteOrder;\n-  #24 = Utf8               StackMapTable\n-  #25 = Utf8               SourceFile\n-  #26 = Utf8               ByteOrderParser.java\n-  #27 = NameAndType        #18:#19        // \"<init>\":()V\n-  #28 = Class              #44            // java/nio/ByteOrder\n-  #29 = NameAndType        #45:#46        // BIG_ENDIAN:Ljava/nio/ByteOrder;\n-  #30 = NameAndType        #47:#48        // toString:()Ljava/lang/String;\n-  #31 = Class              #49            // java/lang/String\n-  #32 = NameAndType        #50:#51        // equals:(Ljava/lang/Object;)Z\n-  #33 = NameAndType        #52:#46        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #34 = Utf8               java/lang/IllegalArgumentException\n-  #35 = Utf8               java/lang/StringBuilder\n-  #36 = Utf8               Unsupported byte order setting:\n-  #37 = NameAndType        #53:#54        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+   #8 = Class              #10            // java/nio/ByteOrder\n+   #9 = NameAndType        #11:#12        // BIG_ENDIAN:Ljava/nio/ByteOrder;\n+  #10 = Utf8               java/nio/ByteOrder\n+  #11 = Utf8               BIG_ENDIAN\n+  #12 = Utf8               Ljava/nio/ByteOrder;\n+  #13 = Methodref          #8.#14         // java/nio/ByteOrder.toString:()Ljava/lang/String;\n+  #14 = NameAndType        #15:#16        // toString:()Ljava/lang/String;\n+  #15 = Utf8               toString\n+  #16 = Utf8               ()Ljava/lang/String;\n+  #17 = Methodref          #18.#19        // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #18 = Class              #20            // java/lang/String\n+  #19 = NameAndType        #21:#22        // equals:(Ljava/lang/Object;)Z\n+  #20 = Utf8               java/lang/String\n+  #21 = Utf8               equals\n+  #22 = Utf8               (Ljava/lang/Object;)Z\n+  #23 = Fieldref           #8.#24         // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #24 = NameAndType        #25:#12        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #25 = Utf8               LITTLE_ENDIAN\n+  #26 = Class              #27            // java/lang/IllegalArgumentException\n+  #27 = Utf8               java/lang/IllegalArgumentException\n+  #28 = Class              #29            // java/lang/StringBuilder\n+  #29 = Utf8               java/lang/StringBuilder\n+  #30 = Methodref          #28.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #31 = String             #32            // Unsupported byte order setting:\n+  #32 = Utf8               Unsupported byte order setting:\n+  #33 = Methodref          #28.#34        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = NameAndType        #35:#36        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #35 = Utf8               append\n+  #36 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = String             #38            // , expected one of\n   #38 = Utf8               , expected one of\n-  #39 = NameAndType        #53:#55        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #40 = Utf8               ,\n-  #41 = NameAndType        #18:#56        // \"<init>\":(Ljava/lang/String;)V\n-  #42 = Utf8               org/apache/commons/io/ByteOrderParser\n-  #43 = Utf8               java/lang/Object\n-  #44 = Utf8               java/nio/ByteOrder\n-  #45 = Utf8               BIG_ENDIAN\n-  #46 = Utf8               Ljava/nio/ByteOrder;\n-  #47 = Utf8               toString\n-  #48 = Utf8               ()Ljava/lang/String;\n-  #49 = Utf8               java/lang/String\n-  #50 = Utf8               equals\n-  #51 = Utf8               (Ljava/lang/Object;)Z\n-  #52 = Utf8               LITTLE_ENDIAN\n-  #53 = Utf8               append\n-  #54 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #55 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #56 = Utf8               (Ljava/lang/String;)V\n+  #39 = Methodref          #28.#40        // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #40 = NameAndType        #35:#41        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #41 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #42 = String             #43            // ,\n+  #43 = Utf8               ,\n+  #44 = Methodref          #28.#14        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #45 = Methodref          #26.#46        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #46 = NameAndType        #5:#47         // \"<init>\":(Ljava/lang/String;)V\n+  #47 = Utf8               (Ljava/lang/String;)V\n+  #48 = Class              #49            // org/apache/commons/io/ByteOrderParser\n+  #49 = Utf8               org/apache/commons/io/ByteOrderParser\n+  #50 = Utf8               Code\n+  #51 = Utf8               LineNumberTable\n+  #52 = Utf8               parseByteOrder\n+  #53 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteOrder;\n+  #54 = Utf8               StackMapTable\n+  #55 = Utf8               SourceFile\n+  #56 = Utf8               ByteOrderParser.java\n {\n   private org.apache.commons.io.ByteOrderParser();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -78,47 +78,47 @@\n         line 33: 4\n \n   public static java.nio.ByteOrder parseByteOrder(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/nio/ByteOrder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-         3: invokevirtual #3                  // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n+         0: getstatic     #7                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+         3: invokevirtual #13                 // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n          6: aload_0\n-         7: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         7: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         10: ifeq          17\n-        13: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+        13: getstatic     #7                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n         16: areturn\n-        17: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-        20: invokevirtual #3                  // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n+        17: getstatic     #23                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        20: invokevirtual #13                 // Method java/nio/ByteOrder.toString:()Ljava/lang/String;\n         23: aload_0\n-        24: invokevirtual #4                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        24: invokevirtual #17                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         27: ifeq          34\n-        30: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        30: getstatic     #23                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n         33: areturn\n-        34: new           #6                  // class java/lang/IllegalArgumentException\n+        34: new           #26                 // class java/lang/IllegalArgumentException\n         37: dup\n-        38: new           #7                  // class java/lang/StringBuilder\n+        38: new           #28                 // class java/lang/StringBuilder\n         41: dup\n-        42: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        45: ldc           #9                  // String Unsupported byte order setting:\n-        47: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokespecial #30                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        45: ldc           #31                 // String Unsupported byte order setting:\n+        47: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: aload_0\n-        51: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: ldc           #11                 // String , expected one of\n-        56: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        59: getstatic     #5                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-        62: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        65: ldc           #13                 // String ,\n-        67: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        70: getstatic     #2                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n-        73: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        76: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        79: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        51: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: ldc           #37                 // String , expected one of\n+        56: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: getstatic     #23                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        62: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        65: ldc           #42                 // String ,\n+        67: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        70: getstatic     #7                  // Field java/nio/ByteOrder.BIG_ENDIAN:Ljava/nio/ByteOrder;\n+        73: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        76: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        79: invokespecial #45                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         82: athrow\n       LineNumberTable:\n         line 56: 0\n         line 57: 13\n         line 59: 17\n         line 60: 30\n         line 62: 34\n"}]}
