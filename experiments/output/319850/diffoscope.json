{"diffoscope-json-version": 1, "source1": "first/CharTypes.class", "source2": "second/CharTypes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,191 +1,185 @@\n-  SHA-256 checksum 8eb94352f09178bfd059d7a2f43555be45677a106ad48c5a0343c7cdc99d4b14\n+  SHA-256 checksum fc76f5e91adaa8fb500e8edfabf6f9dbbe29faf96e2644a12cc1bb3cbbd2122f\n   Compiled from \"CharTypes.java\"\n public final class com.fasterxml.jackson.core.io.CharTypes\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #35                         // com/fasterxml/jackson/core/io/CharTypes\n-  super_class: #36                        // java/lang/Object\n+  this_class: #8                          // com/fasterxml/jackson/core/io/CharTypes\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 12, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Methodref          #36.#113      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #35.#114      // com/fasterxml/jackson/core/io/CharTypes.sInputCodes:[I\n-    #3 = Fieldref           #35.#115      // com/fasterxml/jackson/core/io/CharTypes.sInputCodesUTF8:[I\n-    #4 = Fieldref           #35.#116      // com/fasterxml/jackson/core/io/CharTypes.sInputCodesJsNames:[I\n-    #5 = Fieldref           #35.#117      // com/fasterxml/jackson/core/io/CharTypes.sInputCodesUtf8JsNames:[I\n-    #6 = Fieldref           #35.#118      // com/fasterxml/jackson/core/io/CharTypes.sInputCodesComment:[I\n-    #7 = Fieldref           #35.#119      // com/fasterxml/jackson/core/io/CharTypes.sInputCodesWS:[I\n-    #8 = Fieldref           #35.#120      // com/fasterxml/jackson/core/io/CharTypes.sOutputEscapes128:[I\n-    #9 = Fieldref           #37.#121      // com/fasterxml/jackson/core/io/CharTypes$AltEscapes.instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n-   #10 = Methodref          #37.#122      // com/fasterxml/jackson/core/io/CharTypes$AltEscapes.escapesFor:(I)[I\n-   #11 = Fieldref           #35.#123      // com/fasterxml/jackson/core/io/CharTypes.sHexValues:[I\n-   #12 = Fieldref           #35.#124      // com/fasterxml/jackson/core/io/CharTypes.HC:[C\n-   #13 = Methodref          #94.#125      // java/lang/String.length:()I\n-   #14 = Methodref          #94.#126      // java/lang/String.charAt:(I)C\n-   #15 = Methodref          #93.#127      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #35.#128      // com/fasterxml/jackson/core/io/CharTypes.copyHexChars:(Z)[C\n-   #17 = Methodref          #129.#130     // \"[C\".clone:()Ljava/lang/Object;\n-   #18 = Class              #41           // \"[C\"\n-   #19 = Fieldref           #35.#131      // com/fasterxml/jackson/core/io/CharTypes.HClower:[C\n-   #20 = Methodref          #132.#130     // \"[C\".clone:()Ljava/lang/Object;\n-   #21 = Methodref          #35.#133      // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n-   #22 = Fieldref           #35.#134      // com/fasterxml/jackson/core/io/CharTypes.HB:[B\n-   #23 = Methodref          #135.#130     // \"[B\".clone:()Ljava/lang/Object;\n-   #24 = Class              #44           // \"[B\"\n-   #25 = Fieldref           #35.#136      // com/fasterxml/jackson/core/io/CharTypes.HBlower:[B\n-   #26 = Methodref          #137.#130     // \"[B\".clone:()Ljava/lang/Object;\n-   #27 = String             #138          // 0123456789ABCDEF\n-   #28 = Methodref          #94.#139      // java/lang/String.toCharArray:()[C\n-   #29 = String             #140          // 0123456789abcdef\n-   #30 = Methodref          #141.#142     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #31 = Methodref          #143.#144     // java/util/Arrays.fill:([II)V\n-   #32 = Methodref          #145.#146     // java/lang/Character.isJavaIdentifierPart:(C)Z\n-   #33 = Methodref          #143.#147     // java/util/Arrays.fill:([IIII)V\n-   #34 = Class              #148          // com/fasterxml/jackson/core/io/CharacterEscapes\n-   #35 = Class              #149          // com/fasterxml/jackson/core/io/CharTypes\n-   #36 = Class              #150          // java/lang/Object\n-   #37 = Class              #151          // com/fasterxml/jackson/core/io/CharTypes$AltEscapes\n-   #38 = Utf8               AltEscapes\n-   #39 = Utf8               InnerClasses\n-   #40 = Utf8               HC\n-   #41 = Utf8               [C\n-   #42 = Utf8               HClower\n-   #43 = Utf8               HB\n-   #44 = Utf8               [B\n-   #45 = Utf8               HBlower\n-   #46 = Utf8               sInputCodes\n-   #47 = Utf8               [I\n-   #48 = Utf8               sInputCodesUTF8\n-   #49 = Utf8               sInputCodesJsNames\n-   #50 = Utf8               sInputCodesUtf8JsNames\n-   #51 = Utf8               sInputCodesComment\n-   #52 = Utf8               sInputCodesWS\n-   #53 = Utf8               sOutputEscapes128\n-   #54 = Utf8               sHexValues\n-   #55 = Utf8               <init>\n-   #56 = Utf8               ()V\n-   #57 = Utf8               Code\n-   #58 = Utf8               LineNumberTable\n-   #59 = Utf8               LocalVariableTable\n-   #60 = Utf8               this\n-   #61 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes;\n-   #62 = Utf8               getInputCodeLatin1\n-   #63 = Utf8               ()[I\n-   #64 = Utf8               getInputCodeUtf8\n-   #65 = Utf8               getInputCodeLatin1JsNames\n-   #66 = Utf8               getInputCodeUtf8JsNames\n-   #67 = Utf8               getInputCodeComment\n-   #68 = Utf8               getInputCodeWS\n-   #69 = Utf8               get7BitOutputEscapes\n-   #70 = Utf8               (I)[I\n-   #71 = Utf8               quoteChar\n-   #72 = Utf8               I\n-   #73 = Utf8               StackMapTable\n-   #74 = Utf8               charToHex\n-   #75 = Utf8               (I)I\n-   #76 = Utf8               ch\n-   #77 = Utf8               hexToChar\n-   #78 = Utf8               (I)C\n-   #79 = Utf8               appendQuoted\n-   #80 = Utf8               (Ljava/lang/StringBuilder;Ljava/lang/String;)V\n-   #81 = Utf8               value\n-   #82 = Utf8               c\n-   #83 = Utf8               C\n-   #84 = Utf8               escCode\n-   #85 = Utf8               i\n-   #86 = Utf8               len\n-   #87 = Utf8               sb\n-   #88 = Utf8               Ljava/lang/StringBuilder;\n-   #89 = Utf8               content\n-   #90 = Utf8               Ljava/lang/String;\n-   #91 = Utf8               escCodes\n-   #92 = Utf8               escLen\n-   #93 = Class              #152          // java/lang/StringBuilder\n-   #94 = Class              #153          // java/lang/String\n-   #95 = Class              #47           // \"[I\"\n-   #96 = Utf8               copyHexChars\n-   #97 = Utf8               ()[C\n-   #98 = Utf8               Deprecated\n-   #99 = Utf8               RuntimeVisibleAnnotations\n-  #100 = Utf8               Ljava/lang/Deprecated;\n-  #101 = Utf8               (Z)[C\n-  #102 = Utf8               uppercase\n-  #103 = Utf8               Z\n-  #104 = Utf8               copyHexBytes\n-  #105 = Utf8               ()[B\n-  #106 = Utf8               (Z)[B\n-  #107 = Utf8               <clinit>\n-  #108 = Utf8               table\n-  #109 = Utf8               code\n-  #110 = Utf8               buf\n-  #111 = Utf8               SourceFile\n-  #112 = Utf8               CharTypes.java\n-  #113 = NameAndType        #55:#56       // \"<init>\":()V\n-  #114 = NameAndType        #46:#47       // sInputCodes:[I\n-  #115 = NameAndType        #48:#47       // sInputCodesUTF8:[I\n-  #116 = NameAndType        #49:#47       // sInputCodesJsNames:[I\n-  #117 = NameAndType        #50:#47       // sInputCodesUtf8JsNames:[I\n-  #118 = NameAndType        #51:#47       // sInputCodesComment:[I\n-  #119 = NameAndType        #52:#47       // sInputCodesWS:[I\n-  #120 = NameAndType        #53:#47       // sOutputEscapes128:[I\n-  #121 = NameAndType        #154:#155     // instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n-  #122 = NameAndType        #156:#70      // escapesFor:(I)[I\n-  #123 = NameAndType        #54:#47       // sHexValues:[I\n-  #124 = NameAndType        #40:#41       // HC:[C\n-  #125 = NameAndType        #157:#158     // length:()I\n-  #126 = NameAndType        #159:#78      // charAt:(I)C\n-  #127 = NameAndType        #160:#161     // append:(C)Ljava/lang/StringBuilder;\n-  #128 = NameAndType        #96:#101      // copyHexChars:(Z)[C\n-  #129 = Class              #41           // \"[C\"\n-  #130 = NameAndType        #162:#163     // clone:()Ljava/lang/Object;\n-  #131 = NameAndType        #42:#41       // HClower:[C\n-  #132 = Class              #41           // \"[C\"\n-  #133 = NameAndType        #104:#106     // copyHexBytes:(Z)[B\n-  #134 = NameAndType        #43:#44       // HB:[B\n-  #135 = Class              #44           // \"[B\"\n-  #136 = NameAndType        #45:#44       // HBlower:[B\n-  #137 = Class              #44           // \"[B\"\n-  #138 = Utf8               0123456789ABCDEF\n-  #139 = NameAndType        #164:#97      // toCharArray:()[C\n-  #140 = Utf8               0123456789abcdef\n-  #141 = Class              #165          // java/lang/System\n-  #142 = NameAndType        #166:#167     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #143 = Class              #168          // java/util/Arrays\n-  #144 = NameAndType        #169:#170     // fill:([II)V\n-  #145 = Class              #171          // java/lang/Character\n-  #146 = NameAndType        #172:#173     // isJavaIdentifierPart:(C)Z\n-  #147 = NameAndType        #169:#174     // fill:([IIII)V\n-  #148 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n-  #149 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n-  #150 = Utf8               java/lang/Object\n-  #151 = Utf8               com/fasterxml/jackson/core/io/CharTypes$AltEscapes\n-  #152 = Utf8               java/lang/StringBuilder\n-  #153 = Utf8               java/lang/String\n-  #154 = Utf8               instance\n-  #155 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n-  #156 = Utf8               escapesFor\n-  #157 = Utf8               length\n-  #158 = Utf8               ()I\n-  #159 = Utf8               charAt\n-  #160 = Utf8               append\n-  #161 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #162 = Utf8               clone\n-  #163 = Utf8               ()Ljava/lang/Object;\n-  #164 = Utf8               toCharArray\n-  #165 = Utf8               java/lang/System\n-  #166 = Utf8               arraycopy\n-  #167 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #168 = Utf8               java/util/Arrays\n-  #169 = Utf8               fill\n-  #170 = Utf8               ([II)V\n-  #171 = Utf8               java/lang/Character\n-  #172 = Utf8               isJavaIdentifierPart\n-  #173 = Utf8               (C)Z\n-  #174 = Utf8               ([IIII)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // com/fasterxml/jackson/core/io/CharTypes.sInputCodes:[I\n+    #8 = Class              #10           // com/fasterxml/jackson/core/io/CharTypes\n+    #9 = NameAndType        #11:#12       // sInputCodes:[I\n+   #10 = Utf8               com/fasterxml/jackson/core/io/CharTypes\n+   #11 = Utf8               sInputCodes\n+   #12 = Utf8               [I\n+   #13 = Fieldref           #8.#14        // com/fasterxml/jackson/core/io/CharTypes.sInputCodesUTF8:[I\n+   #14 = NameAndType        #15:#12       // sInputCodesUTF8:[I\n+   #15 = Utf8               sInputCodesUTF8\n+   #16 = Fieldref           #8.#17        // com/fasterxml/jackson/core/io/CharTypes.sInputCodesJsNames:[I\n+   #17 = NameAndType        #18:#12       // sInputCodesJsNames:[I\n+   #18 = Utf8               sInputCodesJsNames\n+   #19 = Fieldref           #8.#20        // com/fasterxml/jackson/core/io/CharTypes.sInputCodesUtf8JsNames:[I\n+   #20 = NameAndType        #21:#12       // sInputCodesUtf8JsNames:[I\n+   #21 = Utf8               sInputCodesUtf8JsNames\n+   #22 = Fieldref           #8.#23        // com/fasterxml/jackson/core/io/CharTypes.sInputCodesComment:[I\n+   #23 = NameAndType        #24:#12       // sInputCodesComment:[I\n+   #24 = Utf8               sInputCodesComment\n+   #25 = Fieldref           #8.#26        // com/fasterxml/jackson/core/io/CharTypes.sInputCodesWS:[I\n+   #26 = NameAndType        #27:#12       // sInputCodesWS:[I\n+   #27 = Utf8               sInputCodesWS\n+   #28 = Fieldref           #8.#29        // com/fasterxml/jackson/core/io/CharTypes.sOutputEscapes128:[I\n+   #29 = NameAndType        #30:#12       // sOutputEscapes128:[I\n+   #30 = Utf8               sOutputEscapes128\n+   #31 = Fieldref           #32.#33       // com/fasterxml/jackson/core/io/CharTypes$AltEscapes.instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n+   #32 = Class              #34           // com/fasterxml/jackson/core/io/CharTypes$AltEscapes\n+   #33 = NameAndType        #35:#36       // instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n+   #34 = Utf8               com/fasterxml/jackson/core/io/CharTypes$AltEscapes\n+   #35 = Utf8               instance\n+   #36 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n+   #37 = Methodref          #32.#38       // com/fasterxml/jackson/core/io/CharTypes$AltEscapes.escapesFor:(I)[I\n+   #38 = NameAndType        #39:#40       // escapesFor:(I)[I\n+   #39 = Utf8               escapesFor\n+   #40 = Utf8               (I)[I\n+   #41 = Fieldref           #8.#42        // com/fasterxml/jackson/core/io/CharTypes.sHexValues:[I\n+   #42 = NameAndType        #43:#12       // sHexValues:[I\n+   #43 = Utf8               sHexValues\n+   #44 = Fieldref           #8.#45        // com/fasterxml/jackson/core/io/CharTypes.HC:[C\n+   #45 = NameAndType        #46:#47       // HC:[C\n+   #46 = Utf8               HC\n+   #47 = Utf8               [C\n+   #48 = Methodref          #49.#50       // java/lang/String.length:()I\n+   #49 = Class              #51           // java/lang/String\n+   #50 = NameAndType        #52:#53       // length:()I\n+   #51 = Utf8               java/lang/String\n+   #52 = Utf8               length\n+   #53 = Utf8               ()I\n+   #54 = Methodref          #49.#55       // java/lang/String.charAt:(I)C\n+   #55 = NameAndType        #56:#57       // charAt:(I)C\n+   #56 = Utf8               charAt\n+   #57 = Utf8               (I)C\n+   #58 = Methodref          #59.#60       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #59 = Class              #61           // java/lang/StringBuilder\n+   #60 = NameAndType        #62:#63       // append:(C)Ljava/lang/StringBuilder;\n+   #61 = Utf8               java/lang/StringBuilder\n+   #62 = Utf8               append\n+   #63 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #64 = Methodref          #8.#65        // com/fasterxml/jackson/core/io/CharTypes.copyHexChars:(Z)[C\n+   #65 = NameAndType        #66:#67       // copyHexChars:(Z)[C\n+   #66 = Utf8               copyHexChars\n+   #67 = Utf8               (Z)[C\n+   #68 = Methodref          #69.#70       // \"[C\".clone:()Ljava/lang/Object;\n+   #69 = Class              #47           // \"[C\"\n+   #70 = NameAndType        #71:#72       // clone:()Ljava/lang/Object;\n+   #71 = Utf8               clone\n+   #72 = Utf8               ()Ljava/lang/Object;\n+   #73 = Fieldref           #8.#74        // com/fasterxml/jackson/core/io/CharTypes.HClower:[C\n+   #74 = NameAndType        #75:#47       // HClower:[C\n+   #75 = Utf8               HClower\n+   #76 = Methodref          #8.#77        // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n+   #77 = NameAndType        #78:#79       // copyHexBytes:(Z)[B\n+   #78 = Utf8               copyHexBytes\n+   #79 = Utf8               (Z)[B\n+   #80 = Fieldref           #8.#81        // com/fasterxml/jackson/core/io/CharTypes.HB:[B\n+   #81 = NameAndType        #82:#83       // HB:[B\n+   #82 = Utf8               HB\n+   #83 = Utf8               [B\n+   #84 = Methodref          #85.#70       // \"[B\".clone:()Ljava/lang/Object;\n+   #85 = Class              #83           // \"[B\"\n+   #86 = Fieldref           #8.#87        // com/fasterxml/jackson/core/io/CharTypes.HBlower:[B\n+   #87 = NameAndType        #88:#83       // HBlower:[B\n+   #88 = Utf8               HBlower\n+   #89 = String             #90           // 0123456789ABCDEF\n+   #90 = Utf8               0123456789ABCDEF\n+   #91 = Methodref          #49.#92       // java/lang/String.toCharArray:()[C\n+   #92 = NameAndType        #93:#94       // toCharArray:()[C\n+   #93 = Utf8               toCharArray\n+   #94 = Utf8               ()[C\n+   #95 = String             #96           // 0123456789abcdef\n+   #96 = Utf8               0123456789abcdef\n+   #97 = Methodref          #98.#99       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #98 = Class              #100          // java/lang/System\n+   #99 = NameAndType        #101:#102     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #100 = Utf8               java/lang/System\n+  #101 = Utf8               arraycopy\n+  #102 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #103 = Methodref          #104.#105     // java/util/Arrays.fill:([II)V\n+  #104 = Class              #106          // java/util/Arrays\n+  #105 = NameAndType        #107:#108     // fill:([II)V\n+  #106 = Utf8               java/util/Arrays\n+  #107 = Utf8               fill\n+  #108 = Utf8               ([II)V\n+  #109 = Methodref          #110.#111     // java/lang/Character.isJavaIdentifierPart:(C)Z\n+  #110 = Class              #112          // java/lang/Character\n+  #111 = NameAndType        #113:#114     // isJavaIdentifierPart:(C)Z\n+  #112 = Utf8               java/lang/Character\n+  #113 = Utf8               isJavaIdentifierPart\n+  #114 = Utf8               (C)Z\n+  #115 = Methodref          #104.#116     // java/util/Arrays.fill:([IIII)V\n+  #116 = NameAndType        #107:#117     // fill:([IIII)V\n+  #117 = Utf8               ([IIII)V\n+  #118 = Class              #119          // com/fasterxml/jackson/core/io/CharacterEscapes\n+  #119 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n+  #120 = Utf8               Code\n+  #121 = Utf8               LineNumberTable\n+  #122 = Utf8               LocalVariableTable\n+  #123 = Utf8               this\n+  #124 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes;\n+  #125 = Utf8               getInputCodeLatin1\n+  #126 = Utf8               ()[I\n+  #127 = Utf8               getInputCodeUtf8\n+  #128 = Utf8               getInputCodeLatin1JsNames\n+  #129 = Utf8               getInputCodeUtf8JsNames\n+  #130 = Utf8               getInputCodeComment\n+  #131 = Utf8               getInputCodeWS\n+  #132 = Utf8               get7BitOutputEscapes\n+  #133 = Utf8               quoteChar\n+  #134 = Utf8               I\n+  #135 = Utf8               StackMapTable\n+  #136 = Utf8               charToHex\n+  #137 = Utf8               (I)I\n+  #138 = Utf8               ch\n+  #139 = Utf8               hexToChar\n+  #140 = Utf8               appendQuoted\n+  #141 = Utf8               (Ljava/lang/StringBuilder;Ljava/lang/String;)V\n+  #142 = Utf8               value\n+  #143 = Utf8               c\n+  #144 = Utf8               C\n+  #145 = Utf8               escCode\n+  #146 = Utf8               i\n+  #147 = Utf8               len\n+  #148 = Utf8               sb\n+  #149 = Utf8               Ljava/lang/StringBuilder;\n+  #150 = Utf8               content\n+  #151 = Utf8               Ljava/lang/String;\n+  #152 = Utf8               escCodes\n+  #153 = Utf8               escLen\n+  #154 = Class              #12           // \"[I\"\n+  #155 = Utf8               Deprecated\n+  #156 = Utf8               RuntimeVisibleAnnotations\n+  #157 = Utf8               Ljava/lang/Deprecated;\n+  #158 = Utf8               uppercase\n+  #159 = Utf8               Z\n+  #160 = Utf8               ()[B\n+  #161 = Utf8               <clinit>\n+  #162 = Utf8               table\n+  #163 = Utf8               code\n+  #164 = Utf8               buf\n+  #165 = Utf8               SourceFile\n+  #166 = Utf8               CharTypes.java\n+  #167 = Utf8               InnerClasses\n+  #168 = Utf8               AltEscapes\n {\n   protected static final char[] HC;\n     descriptor: [C\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n \n   protected static final char[] HClower;\n     descriptor: [C\n@@ -246,92 +240,92 @@\n             0       5     0  this   Lcom/fasterxml/jackson/core/io/CharTypes;\n \n   public static int[] getInputCodeLatin1();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field sInputCodes:[I\n+         0: getstatic     #7                  // Field sInputCodes:[I\n          3: areturn\n       LineNumberTable:\n         line 198: 0\n \n   public static int[] getInputCodeUtf8();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #3                  // Field sInputCodesUTF8:[I\n+         0: getstatic     #13                 // Field sInputCodesUTF8:[I\n          3: areturn\n       LineNumberTable:\n         line 199: 0\n \n   public static int[] getInputCodeLatin1JsNames();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #4                  // Field sInputCodesJsNames:[I\n+         0: getstatic     #16                 // Field sInputCodesJsNames:[I\n          3: areturn\n       LineNumberTable:\n         line 201: 0\n \n   public static int[] getInputCodeUtf8JsNames();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #5                  // Field sInputCodesUtf8JsNames:[I\n+         0: getstatic     #19                 // Field sInputCodesUtf8JsNames:[I\n          3: areturn\n       LineNumberTable:\n         line 202: 0\n \n   public static int[] getInputCodeComment();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #6                  // Field sInputCodesComment:[I\n+         0: getstatic     #22                 // Field sInputCodesComment:[I\n          3: areturn\n       LineNumberTable:\n         line 204: 0\n \n   public static int[] getInputCodeWS();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #7                  // Field sInputCodesWS:[I\n+         0: getstatic     #25                 // Field sInputCodesWS:[I\n          3: areturn\n       LineNumberTable:\n         line 205: 0\n \n   public static int[] get7BitOutputEscapes();\n     descriptor: ()[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #8                  // Field sOutputEscapes128:[I\n+         0: getstatic     #28                 // Field sOutputEscapes128:[I\n          3: areturn\n       LineNumberTable:\n         line 216: 0\n \n   public static int[] get7BitOutputEscapes(int);\n     descriptor: (I)[I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iload_0\n          1: bipush        34\n          3: if_icmpne     10\n-         6: getstatic     #8                  // Field sOutputEscapes128:[I\n+         6: getstatic     #28                 // Field sOutputEscapes128:[I\n          9: areturn\n-        10: getstatic     #9                  // Field com/fasterxml/jackson/core/io/CharTypes$AltEscapes.instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n+        10: getstatic     #31                 // Field com/fasterxml/jackson/core/io/CharTypes$AltEscapes.instance:Lcom/fasterxml/jackson/core/io/CharTypes$AltEscapes;\n         13: iload_0\n-        14: invokevirtual #10                 // Method com/fasterxml/jackson/core/io/CharTypes$AltEscapes.escapesFor:(I)[I\n+        14: invokevirtual #37                 // Method com/fasterxml/jackson/core/io/CharTypes$AltEscapes.escapesFor:(I)[I\n         17: areturn\n       LineNumberTable:\n         line 230: 0\n         line 231: 6\n         line 233: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -340,15 +334,15 @@\n         frame_type = 10 /* same */\n \n   public static int charToHex(int);\n     descriptor: (I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: getstatic     #11                 // Field sHexValues:[I\n+         0: getstatic     #41                 // Field sHexValues:[I\n          3: iload_0\n          4: sipush        255\n          7: iand\n          8: iaload\n          9: ireturn\n       LineNumberTable:\n         line 240: 0\n@@ -357,103 +351,103 @@\n             0      10     0    ch   I\n \n   public static char hexToChar(int);\n     descriptor: (I)C\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #12                 // Field HC:[C\n+         0: getstatic     #44                 // Field HC:[C\n          3: iload_0\n          4: caload\n          5: ireturn\n       LineNumberTable:\n         line 246: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0    ch   I\n \n   public static void appendQuoted(java.lang.StringBuilder, java.lang.String);\n     descriptor: (Ljava/lang/StringBuilder;Ljava/lang/String;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=2\n-         0: getstatic     #8                  // Field sOutputEscapes128:[I\n+         0: getstatic     #28                 // Field sOutputEscapes128:[I\n          3: astore_2\n          4: aload_2\n          5: arraylength\n          6: istore_3\n          7: iconst_0\n          8: istore        4\n         10: aload_1\n-        11: invokevirtual #13                 // Method java/lang/String.length:()I\n+        11: invokevirtual #48                 // Method java/lang/String.length:()I\n         14: istore        5\n         16: iload         4\n         18: iload         5\n         20: if_icmpge     141\n         23: aload_1\n         24: iload         4\n-        26: invokevirtual #14                 // Method java/lang/String.charAt:(I)C\n+        26: invokevirtual #54                 // Method java/lang/String.charAt:(I)C\n         29: istore        6\n         31: iload         6\n         33: iload_3\n         34: if_icmpge     44\n         37: aload_2\n         38: iload         6\n         40: iaload\n         41: ifne          54\n         44: aload_0\n         45: iload         6\n-        47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        47: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         50: pop\n         51: goto          135\n         54: aload_0\n         55: bipush        92\n-        57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        57: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         60: pop\n         61: aload_2\n         62: iload         6\n         64: iaload\n         65: istore        7\n         67: iload         7\n         69: ifge          127\n         72: aload_0\n         73: bipush        117\n-        75: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        75: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         78: pop\n         79: aload_0\n         80: bipush        48\n-        82: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        82: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         85: pop\n         86: aload_0\n         87: bipush        48\n-        89: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        89: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         92: pop\n         93: iload         6\n         95: istore        8\n         97: aload_0\n-        98: getstatic     #12                 // Field HC:[C\n+        98: getstatic     #44                 // Field HC:[C\n        101: iload         8\n        103: iconst_4\n        104: ishr\n        105: caload\n-       106: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       106: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        109: pop\n        110: aload_0\n-       111: getstatic     #12                 // Field HC:[C\n+       111: getstatic     #44                 // Field HC:[C\n        114: iload         8\n        116: bipush        15\n        118: iand\n        119: caload\n-       120: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       120: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        123: pop\n        124: goto          135\n        127: aload_0\n        128: iload         7\n        130: i2c\n-       131: invokevirtual #15                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       131: invokevirtual #58                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        134: pop\n        135: iinc          4, 1\n        138: goto          16\n        141: return\n       LineNumberTable:\n         line 260: 0\n         line 261: 4\n@@ -505,37 +499,37 @@\n \n   public static char[] copyHexChars();\n     descriptor: ()[C\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_1\n-         1: invokestatic  #16                 // Method copyHexChars:(Z)[C\n+         1: invokestatic  #64                 // Method copyHexChars:(Z)[C\n          4: areturn\n       LineNumberTable:\n         line 296: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #100()\n+      0: #157()\n         java.lang.Deprecated\n \n   public static char[] copyHexChars(boolean);\n     descriptor: (Z)[C\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n          1: ifeq          16\n-         4: getstatic     #12                 // Field HC:[C\n-         7: invokevirtual #17                 // Method \"[C\".clone:()Ljava/lang/Object;\n-        10: checkcast     #18                 // class \"[C\"\n+         4: getstatic     #44                 // Field HC:[C\n+         7: invokevirtual #68                 // Method \"[C\".clone:()Ljava/lang/Object;\n+        10: checkcast     #69                 // class \"[C\"\n         13: goto          25\n-        16: getstatic     #19                 // Field HClower:[C\n-        19: invokevirtual #20                 // Method \"[C\".clone:()Ljava/lang/Object;\n-        22: checkcast     #18                 // class \"[C\"\n+        16: getstatic     #73                 // Field HClower:[C\n+        19: invokevirtual #68                 // Method \"[C\".clone:()Ljava/lang/Object;\n+        22: checkcast     #69                 // class \"[C\"\n         25: areturn\n       LineNumberTable:\n         line 300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 uppercase   Z\n       StackMapTable: number_of_entries = 2\n@@ -545,37 +539,37 @@\n \n   public static byte[] copyHexBytes();\n     descriptor: ()[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_1\n-         1: invokestatic  #21                 // Method copyHexBytes:(Z)[B\n+         1: invokestatic  #76                 // Method copyHexBytes:(Z)[B\n          4: areturn\n       LineNumberTable:\n         line 308: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #100()\n+      0: #157()\n         java.lang.Deprecated\n \n   public static byte[] copyHexBytes(boolean);\n     descriptor: (Z)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n          1: ifeq          16\n-         4: getstatic     #22                 // Field HB:[B\n-         7: invokevirtual #23                 // Method \"[B\".clone:()Ljava/lang/Object;\n-        10: checkcast     #24                 // class \"[B\"\n+         4: getstatic     #80                 // Field HB:[B\n+         7: invokevirtual #84                 // Method \"[B\".clone:()Ljava/lang/Object;\n+        10: checkcast     #85                 // class \"[B\"\n         13: goto          25\n-        16: getstatic     #25                 // Field HBlower:[B\n-        19: invokevirtual #26                 // Method \"[B\".clone:()Ljava/lang/Object;\n-        22: checkcast     #24                 // class \"[B\"\n+        16: getstatic     #86                 // Field HBlower:[B\n+        19: invokevirtual #84                 // Method \"[B\".clone:()Ljava/lang/Object;\n+        22: checkcast     #85                 // class \"[B\"\n         25: areturn\n       LineNumberTable:\n         line 312: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 uppercase   Z\n       StackMapTable: number_of_entries = 2\n@@ -584,44 +578,44 @@\n           stack = [ class \"[B\" ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=0\n-         0: ldc           #27                 // String 0123456789ABCDEF\n-         2: invokevirtual #28                 // Method java/lang/String.toCharArray:()[C\n-         5: putstatic     #12                 // Field HC:[C\n-         8: ldc           #29                 // String 0123456789abcdef\n-        10: invokevirtual #28                 // Method java/lang/String.toCharArray:()[C\n-        13: putstatic     #19                 // Field HClower:[C\n-        16: getstatic     #12                 // Field HC:[C\n+         0: ldc           #89                 // String 0123456789ABCDEF\n+         2: invokevirtual #91                 // Method java/lang/String.toCharArray:()[C\n+         5: putstatic     #44                 // Field HC:[C\n+         8: ldc           #95                 // String 0123456789abcdef\n+        10: invokevirtual #91                 // Method java/lang/String.toCharArray:()[C\n+        13: putstatic     #73                 // Field HClower:[C\n+        16: getstatic     #44                 // Field HC:[C\n         19: arraylength\n         20: istore_0\n         21: iload_0\n         22: newarray       byte\n-        24: putstatic     #22                 // Field HB:[B\n+        24: putstatic     #80                 // Field HB:[B\n         27: iload_0\n         28: newarray       byte\n-        30: putstatic     #25                 // Field HBlower:[B\n+        30: putstatic     #86                 // Field HBlower:[B\n         33: iconst_0\n         34: istore_1\n         35: iload_1\n         36: iload_0\n         37: if_icmpge     68\n-        40: getstatic     #22                 // Field HB:[B\n+        40: getstatic     #80                 // Field HB:[B\n         43: iload_1\n-        44: getstatic     #12                 // Field HC:[C\n+        44: getstatic     #44                 // Field HC:[C\n         47: iload_1\n         48: caload\n         49: i2b\n         50: bastore\n-        51: getstatic     #25                 // Field HBlower:[B\n+        51: getstatic     #86                 // Field HBlower:[B\n         54: iload_1\n-        55: getstatic     #19                 // Field HClower:[C\n+        55: getstatic     #73                 // Field HClower:[C\n         58: iload_1\n         59: caload\n         60: i2b\n         61: bastore\n         62: iinc          1, 1\n         65: goto          35\n         68: sipush        256\n@@ -643,26 +637,26 @@\n         95: iconst_1\n         96: iastore\n         97: aload_0\n         98: bipush        92\n        100: iconst_1\n        101: iastore\n        102: aload_0\n-       103: putstatic     #2                  // Field sInputCodes:[I\n-       106: getstatic     #2                  // Field sInputCodes:[I\n+       103: putstatic     #7                  // Field sInputCodes:[I\n+       106: getstatic     #7                  // Field sInputCodes:[I\n        109: arraylength\n        110: newarray       int\n        112: astore_0\n-       113: getstatic     #2                  // Field sInputCodes:[I\n+       113: getstatic     #7                  // Field sInputCodes:[I\n        116: iconst_0\n        117: aload_0\n        118: iconst_0\n        119: aload_0\n        120: arraylength\n-       121: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       121: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        124: sipush        128\n        127: istore_1\n        128: iload_1\n        129: sipush        256\n        132: if_icmpge     195\n        135: iload_1\n        136: sipush        224\n@@ -693,29 +687,29 @@\n        185: aload_0\n        186: iload_1\n        187: iload_2\n        188: iastore\n        189: iinc          1, 1\n        192: goto          128\n        195: aload_0\n-       196: putstatic     #3                  // Field sInputCodesUTF8:[I\n+       196: putstatic     #13                 // Field sInputCodesUTF8:[I\n        199: sipush        256\n        202: newarray       int\n        204: astore_0\n        205: aload_0\n        206: iconst_m1\n-       207: invokestatic  #31                 // Method java/util/Arrays.fill:([II)V\n+       207: invokestatic  #103                // Method java/util/Arrays.fill:([II)V\n        210: bipush        33\n        212: istore_1\n        213: iload_1\n        214: sipush        256\n        217: if_icmpge     238\n        220: iload_1\n        221: i2c\n-       222: invokestatic  #32                 // Method java/lang/Character.isJavaIdentifierPart:(C)Z\n+       222: invokestatic  #109                // Method java/lang/Character.isJavaIdentifierPart:(C)Z\n        225: ifeq          232\n        228: aload_0\n        229: iload_1\n        230: iconst_0\n        231: iastore\n        232: iinc          1, 1\n        235: goto          213\n@@ -736,46 +730,46 @@\n        256: iconst_0\n        257: iastore\n        258: aload_0\n        259: bipush        43\n        261: iconst_0\n        262: iastore\n        263: aload_0\n-       264: putstatic     #4                  // Field sInputCodesJsNames:[I\n+       264: putstatic     #16                 // Field sInputCodesJsNames:[I\n        267: sipush        256\n        270: newarray       int\n        272: astore_0\n-       273: getstatic     #4                  // Field sInputCodesJsNames:[I\n+       273: getstatic     #16                 // Field sInputCodesJsNames:[I\n        276: iconst_0\n        277: aload_0\n        278: iconst_0\n        279: aload_0\n        280: arraylength\n-       281: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       281: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        284: aload_0\n        285: sipush        128\n        288: sipush        128\n        291: iconst_0\n-       292: invokestatic  #33                 // Method java/util/Arrays.fill:([IIII)V\n+       292: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        295: aload_0\n-       296: putstatic     #5                  // Field sInputCodesUtf8JsNames:[I\n+       296: putstatic     #19                 // Field sInputCodesUtf8JsNames:[I\n        299: sipush        256\n        302: newarray       int\n        304: astore_0\n-       305: getstatic     #3                  // Field sInputCodesUTF8:[I\n+       305: getstatic     #13                 // Field sInputCodesUTF8:[I\n        308: sipush        128\n        311: aload_0\n        312: sipush        128\n        315: sipush        128\n-       318: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       318: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        321: aload_0\n        322: iconst_0\n        323: bipush        32\n        325: iconst_m1\n-       326: invokestatic  #33                 // Method java/util/Arrays.fill:([IIII)V\n+       326: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        329: aload_0\n        330: bipush        9\n        332: iconst_0\n        333: iastore\n        334: aload_0\n        335: bipush        10\n        337: bipush        10\n@@ -785,29 +779,29 @@\n        343: bipush        13\n        345: iastore\n        346: aload_0\n        347: bipush        42\n        349: bipush        42\n        351: iastore\n        352: aload_0\n-       353: putstatic     #6                  // Field sInputCodesComment:[I\n+       353: putstatic     #22                 // Field sInputCodesComment:[I\n        356: sipush        256\n        359: newarray       int\n        361: astore_0\n-       362: getstatic     #3                  // Field sInputCodesUTF8:[I\n+       362: getstatic     #13                 // Field sInputCodesUTF8:[I\n        365: sipush        128\n        368: aload_0\n        369: sipush        128\n        372: sipush        128\n-       375: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       375: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        378: aload_0\n        379: iconst_0\n        380: bipush        32\n        382: iconst_m1\n-       383: invokestatic  #33                 // Method java/util/Arrays.fill:([IIII)V\n+       383: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        386: aload_0\n        387: bipush        32\n        389: iconst_1\n        390: iastore\n        391: aload_0\n        392: bipush        9\n        394: iconst_1\n@@ -825,15 +819,15 @@\n        411: bipush        47\n        413: iastore\n        414: aload_0\n        415: bipush        35\n        417: bipush        35\n        419: iastore\n        420: aload_0\n-       421: putstatic     #7                  // Field sInputCodesWS:[I\n+       421: putstatic     #25                 // Field sInputCodesWS:[I\n        424: sipush        128\n        427: newarray       int\n        429: astore_0\n        430: iconst_0\n        431: istore_1\n        432: iload_1\n        433: bipush        32\n@@ -869,48 +863,48 @@\n        481: bipush        110\n        483: iastore\n        484: aload_0\n        485: bipush        13\n        487: bipush        114\n        489: iastore\n        490: aload_0\n-       491: putstatic     #8                  // Field sOutputEscapes128:[I\n+       491: putstatic     #28                 // Field sOutputEscapes128:[I\n        494: sipush        256\n        497: newarray       int\n-       499: putstatic     #11                 // Field sHexValues:[I\n-       502: getstatic     #11                 // Field sHexValues:[I\n+       499: putstatic     #41                 // Field sHexValues:[I\n+       502: getstatic     #41                 // Field sHexValues:[I\n        505: iconst_m1\n-       506: invokestatic  #31                 // Method java/util/Arrays.fill:([II)V\n+       506: invokestatic  #103                // Method java/util/Arrays.fill:([II)V\n        509: iconst_0\n        510: istore_0\n        511: iload_0\n        512: bipush        10\n        514: if_icmpge     532\n-       517: getstatic     #11                 // Field sHexValues:[I\n+       517: getstatic     #41                 // Field sHexValues:[I\n        520: bipush        48\n        522: iload_0\n        523: iadd\n        524: iload_0\n        525: iastore\n        526: iinc          0, 1\n        529: goto          511\n        532: iconst_0\n        533: istore_0\n        534: iload_0\n        535: bipush        6\n        537: if_icmpge     570\n-       540: getstatic     #11                 // Field sHexValues:[I\n+       540: getstatic     #41                 // Field sHexValues:[I\n        543: bipush        97\n        545: iload_0\n        546: iadd\n        547: bipush        10\n        549: iload_0\n        550: iadd\n        551: iastore\n-       552: getstatic     #11                 // Field sHexValues:[I\n+       552: getstatic     #41                 // Field sHexValues:[I\n        555: bipush        65\n        557: iload_0\n        558: iadd\n        559: bipush        10\n        561: iload_0\n        562: iadd\n        563: iastore\n@@ -1067,8 +1061,8 @@\n           offset_delta = 1\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 35\n }\n SourceFile: \"CharTypes.java\"\n InnerClasses:\n-  private static #38= #37 of #35;         // AltEscapes=class com/fasterxml/jackson/core/io/CharTypes$AltEscapes of class com/fasterxml/jackson/core/io/CharTypes\n+  private static #168= #32 of #8;         // AltEscapes=class com/fasterxml/jackson/core/io/CharTypes$AltEscapes of class com/fasterxml/jackson/core/io/CharTypes\n"}]}
