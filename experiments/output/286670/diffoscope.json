{"diffoscope-json-version": 1, "source1": "first/X7875_NewUnix.class", "source2": "second/X7875_NewUnix.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -80,30 +80,30 @@\n         return array;\n     }\n     \n     public byte[] getCentralDirectoryData() {\n         return new byte[0];\n     }\n     \n-    public void parseFromLocalFileData(final byte[] array, int n, final int i) throws ZipException {\n+    public void parseFromLocalFileData(final byte[] array, int n, final int n2) throws ZipException {\n         this.reset();\n-        if (i < 3) {\n-            throw new ZipException(\"X7875_NewUnix length is too short, only \" + i + \" bytes\");\n+        if (n2 < 3) {\n+            throw new ZipException(\"X7875_NewUnix length is too short, only \" + n2 + \" bytes\");\n         }\n         this.version = ZipUtil.signedByteToUnsignedInt(array[n++]);\n         final int signedByteToUnsignedInt = ZipUtil.signedByteToUnsignedInt(array[n++]);\n-        if (signedByteToUnsignedInt + 3 > i) {\n-            throw new ZipException(\"X7875_NewUnix invalid: uidSize \" + signedByteToUnsignedInt + \" doesn't fit into \" + i + \" bytes\");\n+        if (signedByteToUnsignedInt + 3 > n2) {\n+            throw new ZipException(\"X7875_NewUnix invalid: uidSize \" + signedByteToUnsignedInt + \" doesn't fit into \" + n2 + \" bytes\");\n         }\n         final byte[] copyOfRange = Arrays.copyOfRange(array, n, n + signedByteToUnsignedInt);\n         n += signedByteToUnsignedInt;\n         this.uid = new BigInteger(1, ZipUtil.reverse(copyOfRange));\n         final int signedByteToUnsignedInt2 = ZipUtil.signedByteToUnsignedInt(array[n++]);\n-        if (signedByteToUnsignedInt + 3 + signedByteToUnsignedInt2 > i) {\n-            throw new ZipException(\"X7875_NewUnix invalid: gidSize \" + signedByteToUnsignedInt2 + \" doesn't fit into \" + i + \" bytes\");\n+        if (signedByteToUnsignedInt + 3 + signedByteToUnsignedInt2 > n2) {\n+            throw new ZipException(\"X7875_NewUnix invalid: gidSize \" + signedByteToUnsignedInt2 + \" doesn't fit into \" + n2 + \" bytes\");\n         }\n         this.gid = new BigInteger(1, ZipUtil.reverse(Arrays.copyOfRange(array, n, n + signedByteToUnsignedInt2)));\n     }\n     \n     public void parseFromCentralDirectoryData(final byte[] array, final int n, final int n2) throws ZipException {\n     }\n     \n"}]}
