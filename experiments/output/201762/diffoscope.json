{"diffoscope-json-version": 1, "source1": "first/DumpArchiveSummary.class", "source2": "second/DumpArchiveSummary.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,42 +15,42 @@\n     private String filesys;\n     private String devname;\n     private String hostname;\n     private int flags;\n     private int firstrec;\n     private int ntrec;\n     \n-    DumpArchiveSummary(final byte[] buffer, final ZipEncoding encoding) throws IOException {\n-        this.dumpDate = 1000L * DumpArchiveUtil.convert32(buffer, 4);\n-        this.previousDumpDate = 1000L * DumpArchiveUtil.convert32(buffer, 8);\n-        this.volume = DumpArchiveUtil.convert32(buffer, 12);\n-        this.label = DumpArchiveUtil.decode(encoding, buffer, 676, 16).trim();\n-        this.level = DumpArchiveUtil.convert32(buffer, 692);\n-        this.filesys = DumpArchiveUtil.decode(encoding, buffer, 696, 64).trim();\n-        this.devname = DumpArchiveUtil.decode(encoding, buffer, 760, 64).trim();\n-        this.hostname = DumpArchiveUtil.decode(encoding, buffer, 824, 64).trim();\n-        this.flags = DumpArchiveUtil.convert32(buffer, 888);\n-        this.firstrec = DumpArchiveUtil.convert32(buffer, 892);\n-        this.ntrec = DumpArchiveUtil.convert32(buffer, 896);\n+    DumpArchiveSummary(final byte[] array, final ZipEncoding zipEncoding) throws IOException {\n+        this.dumpDate = 1000L * DumpArchiveUtil.convert32(array, 4);\n+        this.previousDumpDate = 1000L * DumpArchiveUtil.convert32(array, 8);\n+        this.volume = DumpArchiveUtil.convert32(array, 12);\n+        this.label = DumpArchiveUtil.decode(zipEncoding, array, 676, 16).trim();\n+        this.level = DumpArchiveUtil.convert32(array, 692);\n+        this.filesys = DumpArchiveUtil.decode(zipEncoding, array, 696, 64).trim();\n+        this.devname = DumpArchiveUtil.decode(zipEncoding, array, 760, 64).trim();\n+        this.hostname = DumpArchiveUtil.decode(zipEncoding, array, 824, 64).trim();\n+        this.flags = DumpArchiveUtil.convert32(array, 888);\n+        this.firstrec = DumpArchiveUtil.convert32(array, 892);\n+        this.ntrec = DumpArchiveUtil.convert32(array, 896);\n     }\n     \n     public Date getDumpDate() {\n         return new Date(this.dumpDate);\n     }\n     \n-    public void setDumpDate(final Date dumpDate) {\n-        this.dumpDate = dumpDate.getTime();\n+    public void setDumpDate(final Date date) {\n+        this.dumpDate = date.getTime();\n     }\n     \n     public Date getPreviousDumpDate() {\n         return new Date(this.previousDumpDate);\n     }\n     \n-    public void setPreviousDumpDate(final Date previousDumpDate) {\n-        this.previousDumpDate = previousDumpDate.getTime();\n+    public void setPreviousDumpDate(final Date date) {\n+        this.previousDumpDate = date.getTime();\n     }\n     \n     public int getVolume() {\n         return this.volume;\n     }\n     \n     public void setVolume(final int volume) {\n@@ -73,16 +73,16 @@\n         this.label = label;\n     }\n     \n     public String getFilesystem() {\n         return this.filesys;\n     }\n     \n-    public void setFilesystem(final String filesystem) {\n-        this.filesys = filesystem;\n+    public void setFilesystem(final String filesys) {\n+        this.filesys = filesys;\n     }\n     \n     public String getDevname() {\n         return this.devname;\n     }\n     \n     public void setDevname(final String devname) {\n@@ -139,33 +139,33 @@\n     \n     public boolean isExtendedAttributes() {\n         return (this.flags & 0x8000) == 0x8000;\n     }\n     \n     @Override\n     public int hashCode() {\n-        int hash = 17;\n+        int hashCode = 17;\n         if (this.label != null) {\n-            hash = this.label.hashCode();\n+            hashCode = this.label.hashCode();\n         }\n-        hash += 31L * this.dumpDate;\n+        int n = (int)(hashCode + 31L * this.dumpDate);\n         if (this.hostname != null) {\n-            hash = 31 * this.hostname.hashCode() + 17;\n+            n = 31 * this.hostname.hashCode() + 17;\n         }\n         if (this.devname != null) {\n-            hash = 31 * this.devname.hashCode() + 17;\n+            n = 31 * this.devname.hashCode() + 17;\n         }\n-        return hash;\n+        return n;\n     }\n     \n     @Override\n     public boolean equals(final Object o) {\n         if (this == o) {\n             return true;\n         }\n         if (o == null || !o.getClass().equals(this.getClass())) {\n             return false;\n         }\n-        final DumpArchiveSummary rhs = (DumpArchiveSummary)o;\n-        return this.dumpDate == rhs.dumpDate && this.getHostname() != null && this.getHostname().equals(rhs.getHostname()) && this.getDevname() != null && this.getDevname().equals(rhs.getDevname());\n+        final DumpArchiveSummary dumpArchiveSummary = (DumpArchiveSummary)o;\n+        return this.dumpDate == dumpArchiveSummary.dumpDate && this.getHostname() != null && this.getHostname().equals(dumpArchiveSummary.getHostname()) && this.getDevname() != null && this.getDevname().equals(dumpArchiveSummary.getDevname());\n     }\n }\n"}]}
