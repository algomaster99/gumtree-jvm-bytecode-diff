{"diffoscope-json-version": 1, "source1": "first/SizeFileFilter.class", "source2": "second/SizeFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,87 @@\n-  SHA-256 checksum 9696e076a87d87337706646926b1a13ef895b8bf178985b1f4239c163bfde055\n+  SHA-256 checksum 427e7d588885ac8691df170233a6eecc85d63caeb43e2cc6daafe1b3ba95b135\n   Compiled from \"SizeFileFilter.java\"\n public class org.apache.commons.io.filefilter.SizeFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #19                         // org/apache/commons/io/filefilter/SizeFileFilter\n   super_class: #20                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #19.#44        // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n-   #2 = Methodref          #20.#45        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #3 = Class              #46            // java/lang/IllegalArgumentException\n-   #4 = String             #47            // The size must be non-negative\n-   #5 = Methodref          #3.#48         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #6 = Fieldref           #19.#49        // org/apache/commons/io/filefilter/SizeFileFilter.size:J\n-   #7 = Fieldref           #19.#50        // org/apache/commons/io/filefilter/SizeFileFilter.acceptLarger:Z\n-   #8 = Methodref          #51.#52        // java/io/File.length:()J\n-   #9 = String             #53            // >=\n-  #10 = String             #54            // <\n-  #11 = Class              #55            // java/lang/StringBuilder\n-  #12 = Methodref          #11.#45        // java/lang/StringBuilder.\"<init>\":()V\n-  #13 = Methodref          #20.#56        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-  #14 = Methodref          #11.#57        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #15 = String             #58            // (\n-  #16 = Methodref          #11.#59        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-  #17 = String             #60            // )\n-  #18 = Methodref          #11.#56        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #19 = Class              #61            // org/apache/commons/io/filefilter/SizeFileFilter\n-  #20 = Class              #62            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #21 = Class              #63            // java/io/Serializable\n+   #1 = Methodref          #19.#43        // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n+   #2 = Methodref          #20.#44        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #3 = Class              #45            // java/lang/IllegalArgumentException\n+   #4 = String             #46            // The size must be non-negative\n+   #5 = Methodref          #3.#47         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #6 = Fieldref           #19.#48        // org/apache/commons/io/filefilter/SizeFileFilter.size:J\n+   #7 = Fieldref           #19.#49        // org/apache/commons/io/filefilter/SizeFileFilter.acceptLarger:Z\n+   #8 = Methodref          #50.#51        // java/io/File.length:()J\n+   #9 = String             #52            // >=\n+  #10 = String             #53            // <\n+  #11 = Class              #54            // java/lang/StringBuilder\n+  #12 = Methodref          #11.#44        // java/lang/StringBuilder.\"<init>\":()V\n+  #13 = Methodref          #20.#55        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #14 = Methodref          #11.#56        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #15 = String             #57            // (\n+  #16 = Methodref          #11.#58        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #17 = String             #59            // )\n+  #18 = Methodref          #11.#55        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #19 = Class              #60            // org/apache/commons/io/filefilter/SizeFileFilter\n+  #20 = Class              #61            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #21 = Class              #62            // java/io/Serializable\n   #22 = Utf8               serialVersionUID\n   #23 = Utf8               J\n   #24 = Utf8               ConstantValue\n   #25 = Long               7388077430788600069l\n   #27 = Utf8               size\n   #28 = Utf8               acceptLarger\n   #29 = Utf8               Z\n   #30 = Utf8               <init>\n   #31 = Utf8               (J)V\n   #32 = Utf8               Code\n   #33 = Utf8               LineNumberTable\n   #34 = Utf8               (JZ)V\n   #35 = Utf8               StackMapTable\n-  #36 = Class              #61            // org/apache/commons/io/filefilter/SizeFileFilter\n-  #37 = Utf8               accept\n-  #38 = Utf8               (Ljava/io/File;)Z\n-  #39 = Utf8               toString\n-  #40 = Utf8               ()Ljava/lang/String;\n-  #41 = Class              #64            // java/lang/String\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               SizeFileFilter.java\n-  #44 = NameAndType        #30:#34        // \"<init>\":(JZ)V\n-  #45 = NameAndType        #30:#65        // \"<init>\":()V\n-  #46 = Utf8               java/lang/IllegalArgumentException\n-  #47 = Utf8               The size must be non-negative\n-  #48 = NameAndType        #30:#66        // \"<init>\":(Ljava/lang/String;)V\n-  #49 = NameAndType        #27:#23        // size:J\n-  #50 = NameAndType        #28:#29        // acceptLarger:Z\n-  #51 = Class              #67            // java/io/File\n-  #52 = NameAndType        #68:#69        // length:()J\n-  #53 = Utf8               >=\n-  #54 = Utf8               <\n-  #55 = Utf8               java/lang/StringBuilder\n-  #56 = NameAndType        #39:#40        // toString:()Ljava/lang/String;\n-  #57 = NameAndType        #70:#71        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #58 = Utf8               (\n-  #59 = NameAndType        #70:#72        // append:(J)Ljava/lang/StringBuilder;\n-  #60 = Utf8               )\n-  #61 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n-  #62 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #63 = Utf8               java/io/Serializable\n-  #64 = Utf8               java/lang/String\n-  #65 = Utf8               ()V\n-  #66 = Utf8               (Ljava/lang/String;)V\n-  #67 = Utf8               java/io/File\n-  #68 = Utf8               length\n-  #69 = Utf8               ()J\n-  #70 = Utf8               append\n-  #71 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #72 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #36 = Utf8               accept\n+  #37 = Utf8               (Ljava/io/File;)Z\n+  #38 = Utf8               toString\n+  #39 = Utf8               ()Ljava/lang/String;\n+  #40 = Class              #63            // java/lang/String\n+  #41 = Utf8               SourceFile\n+  #42 = Utf8               SizeFileFilter.java\n+  #43 = NameAndType        #30:#34        // \"<init>\":(JZ)V\n+  #44 = NameAndType        #30:#64        // \"<init>\":()V\n+  #45 = Utf8               java/lang/IllegalArgumentException\n+  #46 = Utf8               The size must be non-negative\n+  #47 = NameAndType        #30:#65        // \"<init>\":(Ljava/lang/String;)V\n+  #48 = NameAndType        #27:#23        // size:J\n+  #49 = NameAndType        #28:#29        // acceptLarger:Z\n+  #50 = Class              #66            // java/io/File\n+  #51 = NameAndType        #67:#68        // length:()J\n+  #52 = Utf8               >=\n+  #53 = Utf8               <\n+  #54 = Utf8               java/lang/StringBuilder\n+  #55 = NameAndType        #38:#39        // toString:()Ljava/lang/String;\n+  #56 = NameAndType        #69:#70        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #57 = Utf8               (\n+  #58 = NameAndType        #69:#71        // append:(J)Ljava/lang/StringBuilder;\n+  #59 = Utf8               )\n+  #60 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n+  #61 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #62 = Utf8               java/io/Serializable\n+  #63 = Utf8               java/lang/String\n+  #64 = Utf8               ()V\n+  #65 = Utf8               (Ljava/lang/String;)V\n+  #66 = Utf8               java/io/File\n+  #67 = Utf8               length\n+  #68 = Utf8               ()J\n+  #69 = Utf8               append\n+  #70 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #71 = Utf8               (J)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = 7388077430788600069l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 7388077430788600069l\n \n   private final long size;\n"}]}
