{"diffoscope-json-version": 1, "source1": "first/XMLPropertyListConfiguration$XMLPropertyListHandler.class", "source2": "second/XMLPropertyListConfiguration$XMLPropertyListHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -29,99 +29,96 @@\n         if (!this.stack.isEmpty()) {\n             return this.stack.get(this.stack.size() - 1);\n         }\n         return null;\n     }\n     \n     private XMLPropertyListConfiguration.PListNodeBuilder peekNE() {\n-        final XMLPropertyListConfiguration.PListNodeBuilder result = this.peek();\n-        if (result == null) {\n+        final XMLPropertyListConfiguration.PListNodeBuilder peek = this.peek();\n+        if (peek == null) {\n             throw new ConfigurationRuntimeException(\"Access to empty stack!\");\n         }\n-        return result;\n+        return peek;\n     }\n     \n     private XMLPropertyListConfiguration.PListNodeBuilder pop() {\n         if (!this.stack.isEmpty()) {\n             return this.stack.remove(this.stack.size() - 1);\n         }\n         return null;\n     }\n     \n-    private void push(final XMLPropertyListConfiguration.PListNodeBuilder node) {\n-        this.stack.add(node);\n+    private void push(final XMLPropertyListConfiguration.PListNodeBuilder pListNodeBuilder) {\n+        this.stack.add(pListNodeBuilder);\n     }\n     \n     @Override\n-    public void startElement(final String uri, final String localName, final String qName, final Attributes attributes) throws SAXException {\n-        if (\"array\".equals(qName)) {\n+    public void startElement(final String s, final String s2, final String s3, final Attributes attributes) throws SAXException {\n+        if (\"array\".equals(s3)) {\n             this.push((XMLPropertyListConfiguration.PListNodeBuilder)new XMLPropertyListConfiguration.ArrayNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null));\n         }\n-        else if (\"dict\".equals(qName) && this.peek() instanceof XMLPropertyListConfiguration.ArrayNodeBuilder) {\n+        else if (\"dict\".equals(s3) && this.peek() instanceof XMLPropertyListConfiguration.ArrayNodeBuilder) {\n             this.push(new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null));\n         }\n     }\n     \n     @Override\n-    public void endElement(final String uri, final String localName, final String qName) throws SAXException {\n-        if (\"key\".equals(qName)) {\n-            final XMLPropertyListConfiguration.PListNodeBuilder node = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null);\n-            node.setName(this.buffer.toString());\n-            this.peekNE().addChild(node);\n-            this.push(node);\n-        }\n-        else if (\"dict\".equals(qName)) {\n-            final XMLPropertyListConfiguration.PListNodeBuilder builder = this.pop();\n-            assert builder != null : \"Stack was empty!\";\n+    public void endElement(final String s, final String s2, final String s3) throws SAXException {\n+        if (\"key\".equals(s3)) {\n+            final XMLPropertyListConfiguration.PListNodeBuilder pListNodeBuilder = new XMLPropertyListConfiguration.PListNodeBuilder((XMLPropertyListConfiguration.XMLPropertyListConfiguration$1)null);\n+            pListNodeBuilder.setName(this.buffer.toString());\n+            this.peekNE().addChild(pListNodeBuilder);\n+            this.push(pListNodeBuilder);\n+        }\n+        else if (\"dict\".equals(s3)) {\n+            final XMLPropertyListConfiguration.PListNodeBuilder pop = this.pop();\n+            assert pop != null : \"Stack was empty!\";\n             if (this.peek() instanceof XMLPropertyListConfiguration.ArrayNodeBuilder) {\n-                final XMLPropertyListConfiguration config = new XMLPropertyListConfiguration(builder.createNode());\n-                final XMLPropertyListConfiguration.ArrayNodeBuilder node2 = (XMLPropertyListConfiguration.ArrayNodeBuilder)this.peekNE();\n-                node2.addValue((Object)config);\n+                ((XMLPropertyListConfiguration.ArrayNodeBuilder)this.peekNE()).addValue((Object)new XMLPropertyListConfiguration(pop.createNode()));\n             }\n         }\n         else {\n-            if (\"string\".equals(qName)) {\n+            if (\"string\".equals(s3)) {\n                 this.peekNE().addValue((Object)this.buffer.toString());\n             }\n-            else if (\"integer\".equals(qName)) {\n+            else if (\"integer\".equals(s3)) {\n                 this.peekNE().addIntegerValue(this.buffer.toString());\n             }\n-            else if (\"real\".equals(qName)) {\n+            else if (\"real\".equals(s3)) {\n                 this.peekNE().addRealValue(this.buffer.toString());\n             }\n-            else if (\"true\".equals(qName)) {\n+            else if (\"true\".equals(s3)) {\n                 this.peekNE().addTrueValue();\n             }\n-            else if (\"false\".equals(qName)) {\n+            else if (\"false\".equals(s3)) {\n                 this.peekNE().addFalseValue();\n             }\n-            else if (\"data\".equals(qName)) {\n+            else if (\"data\".equals(s3)) {\n                 this.peekNE().addDataValue(this.buffer.toString());\n             }\n-            else if (\"date\".equals(qName)) {\n+            else if (\"date\".equals(s3)) {\n                 try {\n                     this.peekNE().addDateValue(this.buffer.toString());\n                 }\n-                catch (final IllegalArgumentException iex) {\n+                catch (final IllegalArgumentException ex) {\n                     this.this$0.getLogger().warn(\"Ignoring invalid date property \" + (Object)this.buffer);\n                 }\n             }\n-            else if (\"array\".equals(qName)) {\n-                final XMLPropertyListConfiguration.ArrayNodeBuilder array = (XMLPropertyListConfiguration.ArrayNodeBuilder)this.pop();\n-                this.peekNE().addList(array);\n+            else if (\"array\".equals(s3)) {\n+                this.peekNE().addList((XMLPropertyListConfiguration.ArrayNodeBuilder)this.pop());\n             }\n             if (!(this.peek() instanceof XMLPropertyListConfiguration.ArrayNodeBuilder)) {\n                 this.pop();\n             }\n         }\n         this.buffer.setLength();\n     }\n     \n     @Override\n-    public void characters(final char[] ch, final int start, final int length) throws SAXException {\n-        this.buffer.append(ch, start, length);\n+    public void characters(final char[] str, final int offset, final int len) throws SAXException {\n+        this.buffer.append(str, offset, len);\n     }\n     \n     static {\n         XMLPropertyListHandler.$assertionsDisabled = !XMLPropertyListConfiguration.class.desiredAssertionStatus();\n     }\n }\n"}]}
