{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,333 +1,333 @@\n-  SHA-256 checksum 69ff14c30dc72fafcc29da93300721a6eac88e25ec250e9e8774a7c24d2e24e4\n+  SHA-256 checksum 29eff79c5438f25f2990e77368d8292125de876a99d8ac83149d4b39f3709036\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #41                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #90                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #2                          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  super_class: #12                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 21, attributes: 3\n Constant pool:\n-    #1 = Methodref          #41.#181      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-    #2 = Methodref          #41.#182      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #3 = Methodref          #90.#183      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #4 = Fieldref           #41.#184      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #5 = Class              #185          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-    #6 = Methodref          #5.#186       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-    #7 = Fieldref           #41.#187      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #8 = Class              #188          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #9 = Methodref          #8.#183       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-   #10 = Fieldref           #41.#189      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #11 = Fieldref           #41.#190      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #12 = Class              #191          // org/apache/commons/compress/utils/CountingInputStream\n-   #13 = Methodref          #12.#192      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #14 = Fieldref           #41.#193      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #15 = Fieldref           #41.#194      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #16 = Methodref          #41.#195      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #17 = Methodref          #41.#196      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #18 = Fieldref           #41.#197      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #19 = Methodref          #161.#198     // java/io/InputStream.close:()V\n-   #20 = Methodref          #12.#198      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #21 = Fieldref           #41.#199      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #22 = Methodref          #41.#200      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #23 = Methodref          #41.#201      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #24 = Fieldref           #41.#202      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #25 = Methodref          #41.#203      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #26 = Fieldref           #41.#204      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #27 = Methodref          #8.#205       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #28 = Methodref          #12.#206      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #29 = Methodref          #41.#207      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #30 = Methodref          #41.#208      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #31 = String             #209          // Not a LZ4 frame stream\n-   #32 = String             #210          // LZ4 frame stream followed by garbage\n-   #33 = Methodref          #211.#212     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #34 = Methodref          #41.#213      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #35 = Class              #214          // java/io/IOException\n-   #36 = Methodref          #35.#215      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #41.#216      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #38 = Methodref          #41.#217      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #39 = String             #218          // Premature end of stream while reading frame flags\n-   #40 = Methodref          #8.#219       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #41 = Class              #220          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #42 = InvokeDynamic      #0:#224       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #43 = Fieldref           #41.#225      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #44 = Class              #226          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #45 = Integer            65536\n-   #46 = Fieldref           #41.#227      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #47 = Fieldref           #41.#228      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #48 = String             #229          // Premature end of stream while reading frame BD byte\n-   #49 = String             #230          // Premature end of stream while reading content size\n-   #50 = String             #231          // Premature end of stream while reading frame header checksum\n-   #51 = Methodref          #8.#232       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #52 = Long               255l\n-   #54 = Methodref          #8.#233       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #55 = String             #234          // Frame header checksum mismatch\n-   #56 = Methodref          #41.#235      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #57 = Methodref          #236.#237     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #58 = Long               -2147483648l\n-   #60 = Long               2147483647l\n-   #62 = String             #238          // Found illegal block with negative size\n-   #63 = Methodref          #41.#239      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #64 = Class              #240          // org/apache/commons/compress/utils/BoundedInputStream\n-   #65 = Methodref          #64.#241      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #66 = Class              #242          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #67 = Methodref          #66.#243      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #68 = Fieldref           #41.#244      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #69 = Methodref          #44.#192      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #70 = Methodref          #44.#245      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #71 = String             #246          // block\n-   #72 = Methodref          #41.#247      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #73 = String             #248          // content\n-   #74 = InvokeDynamic      #1:#250       // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #75 = Methodref          #236.#251     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #76 = InvokeDynamic      #2:#250       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #77 = Methodref          #12.#253      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #78 = Methodref          #161.#196     // java/io/InputStream.read:([BII)I\n-   #79 = Methodref          #44.#206      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #80 = Methodref          #41.#254      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #81 = Fieldref           #41.#255      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #82 = Methodref          #41.#256      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #83 = String             #257          // Found illegal skippable frame with negative size\n-   #84 = Methodref          #211.#258     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #85 = String             #259          // Premature end of stream while skipping frame\n-   #86 = Methodref          #260.#261     // java/lang/Math.min:(II)I\n-   #87 = Methodref          #262.#263     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #88 = Fieldref           #41.#264      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #89 = Methodref          #265.#266     // java/util/Arrays.equals:([B[B)Z\n-   #90 = Class              #267          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #91 = Class              #268          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #92 = Utf8               InnerClasses\n-   #93 = Utf8               LZ4_SIGNATURE\n-   #94 = Utf8               [B\n-   #95 = Utf8               SKIPPABLE_FRAME_TRAILER\n-   #96 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-   #97 = Utf8               B\n-   #98 = Utf8               ConstantValue\n-   #99 = Integer            80\n-  #100 = Utf8               VERSION_MASK\n-  #101 = Utf8               I\n-  #102 = Integer            192\n-  #103 = Utf8               SUPPORTED_VERSION\n-  #104 = Integer            64\n-  #105 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #106 = Integer            32\n-  #107 = Utf8               BLOCK_CHECKSUM_MASK\n-  #108 = Integer            16\n-  #109 = Utf8               CONTENT_SIZE_MASK\n-  #110 = Integer            8\n-  #111 = Utf8               CONTENT_CHECKSUM_MASK\n-  #112 = Integer            4\n-  #113 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #114 = Integer            112\n-  #115 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #116 = Integer            -2147483648\n-  #117 = Utf8               oneByte\n-  #118 = Utf8               supplier\n-  #119 = Class              #269          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #120 = Utf8               ByteSupplier\n-  #121 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #122 = Utf8               inputStream\n-  #123 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #124 = Utf8               decompressConcatenated\n-  #125 = Utf8               Z\n-  #126 = Utf8               expectBlockChecksum\n-  #127 = Utf8               expectBlockDependency\n-  #128 = Utf8               expectContentSize\n-  #129 = Utf8               expectContentChecksum\n-  #130 = Utf8               currentBlock\n-  #131 = Utf8               Ljava/io/InputStream;\n-  #132 = Utf8               endReached\n-  #133 = Utf8               inUncompressed\n-  #134 = Utf8               contentHash\n-  #135 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #136 = Utf8               blockHash\n-  #137 = Utf8               blockDependencyBuffer\n-  #138 = Utf8               <init>\n-  #139 = Utf8               (Ljava/io/InputStream;)V\n-  #140 = Utf8               Code\n-  #141 = Utf8               LineNumberTable\n-  #142 = Utf8               Exceptions\n-  #143 = Utf8               (Ljava/io/InputStream;Z)V\n-  #144 = Utf8               read\n-  #145 = Utf8               ()I\n-  #146 = Utf8               StackMapTable\n-  #147 = Utf8               close\n-  #148 = Utf8               ()V\n-  #149 = Class              #270          // java/lang/Throwable\n-  #150 = Utf8               ([BII)I\n-  #151 = Utf8               getCompressedCount\n-  #152 = Utf8               ()J\n-  #153 = Utf8               init\n-  #154 = Utf8               (Z)V\n-  #155 = Utf8               readSignature\n-  #156 = Utf8               (Z)Z\n-  #157 = Class              #271          // java/lang/String\n-  #158 = Class              #94           // \"[B\"\n-  #159 = Utf8               readFrameDescriptor\n-  #160 = Utf8               nextBlock\n-  #161 = Class              #272          // java/io/InputStream\n-  #162 = Utf8               maybeFinishCurrentBlock\n-  #163 = Utf8               verifyContentChecksum\n-  #164 = Utf8               verifyChecksum\n-  #165 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #166 = Utf8               readOneByte\n-  #167 = Utf8               readOnce\n-  #168 = Utf8               isSkippableFrameSignature\n-  #169 = Utf8               ([B)Z\n-  #170 = Utf8               skipSkippableFrame\n-  #171 = Utf8               ([B)I\n-  #172 = Utf8               appendToBlockDependencyBuffer\n-  #173 = Utf8               ([BII)V\n-  #174 = Utf8               matches\n-  #175 = Utf8               ([BI)Z\n-  #176 = Utf8               access$000\n-  #177 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n-  #178 = Utf8               <clinit>\n-  #179 = Utf8               SourceFile\n-  #180 = Utf8               FramedLZ4CompressorInputStream.java\n-  #181 = NameAndType        #166:#145     // readOneByte:()I\n-  #182 = NameAndType        #138:#143     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #183 = NameAndType        #138:#148     // \"<init>\":()V\n-  #184 = NameAndType        #117:#94      // oneByte:[B\n-  #185 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  #186 = NameAndType        #138:#273     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #187 = NameAndType        #118:#121     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #188 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #189 = NameAndType        #134:#135     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #190 = NameAndType        #136:#135     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #191 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #192 = NameAndType        #138:#139     // \"<init>\":(Ljava/io/InputStream;)V\n-  #193 = NameAndType        #122:#123     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #194 = NameAndType        #124:#125     // decompressConcatenated:Z\n-  #195 = NameAndType        #153:#154     // init:(Z)V\n-  #196 = NameAndType        #144:#150     // read:([BII)I\n-  #197 = NameAndType        #130:#131     // currentBlock:Ljava/io/InputStream;\n-  #198 = NameAndType        #147:#148     // close:()V\n-  #199 = NameAndType        #132:#125     // endReached:Z\n-  #200 = NameAndType        #167:#150     // readOnce:([BII)I\n-  #201 = NameAndType        #160:#148     // nextBlock:()V\n-  #202 = NameAndType        #127:#125     // expectBlockDependency:Z\n-  #203 = NameAndType        #172:#173     // appendToBlockDependencyBuffer:([BII)V\n-  #204 = NameAndType        #129:#125     // expectContentChecksum:Z\n-  #205 = NameAndType        #274:#173     // update:([BII)V\n-  #206 = NameAndType        #275:#152     // getBytesRead:()J\n-  #207 = NameAndType        #155:#156     // readSignature:(Z)Z\n-  #208 = NameAndType        #159:#148     // readFrameDescriptor:()V\n-  #209 = Utf8               Not a LZ4 frame stream\n-  #210 = Utf8               LZ4 frame stream followed by garbage\n-  #211 = Class              #276          // org/apache/commons/compress/utils/IOUtils\n-  #212 = NameAndType        #277:#278     // readFully:(Ljava/io/InputStream;[B)I\n-  #213 = NameAndType        #279:#280     // count:(I)V\n-  #214 = Utf8               java/io/IOException\n-  #215 = NameAndType        #138:#281     // \"<init>\":(Ljava/lang/String;)V\n-  #216 = NameAndType        #170:#171     // skipSkippableFrame:([B)I\n-  #217 = NameAndType        #174:#175     // matches:([BI)Z\n-  #218 = Utf8               Premature end of stream while reading frame flags\n-  #219 = NameAndType        #274:#280     // update:(I)V\n-  #220 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #221 = Utf8               BootstrapMethods\n-  #222 = MethodHandle       6:#282        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #223 = String             #283          // Unsupported version \\u0001\n-  #224 = NameAndType        #284:#285     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #225 = NameAndType        #137:#94      // blockDependencyBuffer:[B\n-  #226 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #227 = NameAndType        #126:#125     // expectBlockChecksum:Z\n-  #228 = NameAndType        #128:#125     // expectContentSize:Z\n-  #229 = Utf8               Premature end of stream while reading frame BD byte\n-  #230 = Utf8               Premature end of stream while reading content size\n-  #231 = Utf8               Premature end of stream while reading frame header checksum\n-  #232 = NameAndType        #286:#152     // getValue:()J\n-  #233 = NameAndType        #287:#148     // reset:()V\n-  #234 = Utf8               Frame header checksum mismatch\n-  #235 = NameAndType        #162:#148     // maybeFinishCurrentBlock:()V\n-  #236 = Class              #288          // org/apache/commons/compress/utils/ByteUtils\n-  #237 = NameAndType        #289:#290     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #238 = Utf8               Found illegal block with negative size\n-  #239 = NameAndType        #163:#148     // verifyContentChecksum:()V\n-  #240 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #241 = NameAndType        #138:#291     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #242 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #243 = NameAndType        #138:#292     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #244 = NameAndType        #133:#125     // inUncompressed:Z\n-  #245 = NameAndType        #293:#294     // prefill:([B)V\n-  #246 = Utf8               block\n-  #247 = NameAndType        #164:#165     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #248 = Utf8               content\n-  #249 = String             #295          // Premature end of stream while reading \\u0001 checksum\n-  #250 = NameAndType        #284:#296     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #251 = NameAndType        #289:#297     // fromLittleEndian:([B)J\n-  #252 = String             #298          // \\u0001 checksum mismatch.\n-  #253 = NameAndType        #144:#145     // read:()I\n-  #254 = NameAndType        #279:#299     // count:(J)V\n-  #255 = NameAndType        #95:#94       // SKIPPABLE_FRAME_TRAILER:[B\n-  #256 = NameAndType        #168:#169     // isSkippableFrameSignature:([B)Z\n-  #257 = Utf8               Found illegal skippable frame with negative size\n-  #258 = NameAndType        #300:#301     // skip:(Ljava/io/InputStream;J)J\n-  #259 = Utf8               Premature end of stream while skipping frame\n-  #260 = Class              #302          // java/lang/Math\n-  #261 = NameAndType        #303:#304     // min:(II)I\n-  #262 = Class              #305          // java/lang/System\n-  #263 = NameAndType        #306:#307     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #264 = NameAndType        #93:#94       // LZ4_SIGNATURE:[B\n-  #265 = Class              #308          // java/util/Arrays\n-  #266 = NameAndType        #309:#310     // equals:([B[B)Z\n-  #267 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #268 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #269 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #270 = Utf8               java/lang/Throwable\n-  #271 = Utf8               java/lang/String\n-  #272 = Utf8               java/io/InputStream\n-  #273 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-  #274 = Utf8               update\n-  #275 = Utf8               getBytesRead\n-  #276 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #277 = Utf8               readFully\n-  #278 = Utf8               (Ljava/io/InputStream;[B)I\n-  #279 = Utf8               count\n-  #280 = Utf8               (I)V\n-  #281 = Utf8               (Ljava/lang/String;)V\n-  #282 = Methodref          #311.#312     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #283 = Utf8               Unsupported version \\u0001\n-  #284 = Utf8               makeConcatWithConstants\n-  #285 = Utf8               (I)Ljava/lang/String;\n-  #286 = Utf8               getValue\n-  #287 = Utf8               reset\n-  #288 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #289 = Utf8               fromLittleEndian\n-  #290 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #291 = Utf8               (Ljava/io/InputStream;J)V\n-  #292 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #293 = Utf8               prefill\n-  #294 = Utf8               ([B)V\n-  #295 = Utf8               Premature end of stream while reading \\u0001 checksum\n-  #296 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #297 = Utf8               ([B)J\n-  #298 = Utf8               \\u0001 checksum mismatch.\n-  #299 = Utf8               (J)V\n-  #300 = Utf8               skip\n-  #301 = Utf8               (Ljava/io/InputStream;J)J\n-  #302 = Utf8               java/lang/Math\n-  #303 = Utf8               min\n-  #304 = Utf8               (II)I\n-  #305 = Utf8               java/lang/System\n-  #306 = Utf8               arraycopy\n-  #307 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #308 = Utf8               java/util/Arrays\n-  #309 = Utf8               equals\n-  #310 = Utf8               ([B[B)Z\n-  #311 = Class              #313          // java/lang/invoke/StringConcatFactory\n-  #312 = NameAndType        #284:#316     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #313 = Utf8               java/lang/invoke/StringConcatFactory\n-  #314 = Class              #318          // java/lang/invoke/MethodHandles$Lookup\n-  #315 = Utf8               Lookup\n-  #316 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #317 = Class              #319          // java/lang/invoke/MethodHandles\n-  #318 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #319 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #3 = NameAndType        #5:#6         // readOneByte:()I\n+    #4 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #5 = Utf8               readOneByte\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #2.#8         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #8 = NameAndType        #9:#10        // \"<init>\":(Ljava/io/InputStream;Z)V\n+    #9 = Utf8               <init>\n+   #10 = Utf8               (Ljava/io/InputStream;Z)V\n+   #11 = Methodref          #12.#13       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #12 = Class              #14           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #13 = NameAndType        #9:#15        // \"<init>\":()V\n+   #14 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #15 = Utf8               ()V\n+   #16 = Fieldref           #2.#17        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+   #17 = NameAndType        #18:#19       // oneByte:[B\n+   #18 = Utf8               oneByte\n+   #19 = Utf8               [B\n+   #20 = Class              #21           // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+   #21 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+   #22 = Methodref          #20.#23       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+   #23 = NameAndType        #9:#24        // \"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+   #24 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+   #25 = Fieldref           #2.#26        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #26 = NameAndType        #27:#28       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #27 = Utf8               supplier\n+   #28 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #29 = Class              #30           // org/apache/commons/compress/compressors/lz4/XXHash32\n+   #30 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+   #31 = Methodref          #29.#13       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #32 = Fieldref           #2.#33        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #33 = NameAndType        #34:#35       // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #34 = Utf8               contentHash\n+   #35 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #36 = Fieldref           #2.#37        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #37 = NameAndType        #38:#35       // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #38 = Utf8               blockHash\n+   #39 = Class              #40           // org/apache/commons/compress/utils/CountingInputStream\n+   #40 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #41 = Methodref          #39.#42       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #42 = NameAndType        #9:#43        // \"<init>\":(Ljava/io/InputStream;)V\n+   #43 = Utf8               (Ljava/io/InputStream;)V\n+   #44 = Fieldref           #2.#45        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #45 = NameAndType        #46:#47       // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #46 = Utf8               inputStream\n+   #47 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #48 = Fieldref           #2.#49        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #49 = NameAndType        #50:#51       // decompressConcatenated:Z\n+   #50 = Utf8               decompressConcatenated\n+   #51 = Utf8               Z\n+   #52 = Methodref          #2.#53        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #53 = NameAndType        #54:#55       // init:(Z)V\n+   #54 = Utf8               init\n+   #55 = Utf8               (Z)V\n+   #56 = Methodref          #2.#57        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #57 = NameAndType        #58:#59       // read:([BII)I\n+   #58 = Utf8               read\n+   #59 = Utf8               ([BII)I\n+   #60 = Fieldref           #2.#61        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #61 = NameAndType        #62:#63       // currentBlock:Ljava/io/InputStream;\n+   #62 = Utf8               currentBlock\n+   #63 = Utf8               Ljava/io/InputStream;\n+   #64 = Methodref          #65.#66       // java/io/InputStream.close:()V\n+   #65 = Class              #67           // java/io/InputStream\n+   #66 = NameAndType        #68:#15       // close:()V\n+   #67 = Utf8               java/io/InputStream\n+   #68 = Utf8               close\n+   #69 = Methodref          #39.#66       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #70 = Fieldref           #2.#71        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #71 = NameAndType        #72:#51       // endReached:Z\n+   #72 = Utf8               endReached\n+   #73 = Methodref          #2.#74        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #74 = NameAndType        #75:#59       // readOnce:([BII)I\n+   #75 = Utf8               readOnce\n+   #76 = Methodref          #2.#77        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #77 = NameAndType        #78:#15       // nextBlock:()V\n+   #78 = Utf8               nextBlock\n+   #79 = Fieldref           #2.#80        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #80 = NameAndType        #81:#51       // expectBlockDependency:Z\n+   #81 = Utf8               expectBlockDependency\n+   #82 = Methodref          #2.#83        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #83 = NameAndType        #84:#85       // appendToBlockDependencyBuffer:([BII)V\n+   #84 = Utf8               appendToBlockDependencyBuffer\n+   #85 = Utf8               ([BII)V\n+   #86 = Fieldref           #2.#87        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #87 = NameAndType        #88:#51       // expectContentChecksum:Z\n+   #88 = Utf8               expectContentChecksum\n+   #89 = Methodref          #29.#90       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #90 = NameAndType        #91:#85       // update:([BII)V\n+   #91 = Utf8               update\n+   #92 = Methodref          #39.#93       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #93 = NameAndType        #94:#95       // getBytesRead:()J\n+   #94 = Utf8               getBytesRead\n+   #95 = Utf8               ()J\n+   #96 = Methodref          #2.#97        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #97 = NameAndType        #98:#99       // readSignature:(Z)Z\n+   #98 = Utf8               readSignature\n+   #99 = Utf8               (Z)Z\n+  #100 = Methodref          #2.#101       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+  #101 = NameAndType        #102:#15      // readFrameDescriptor:()V\n+  #102 = Utf8               readFrameDescriptor\n+  #103 = String             #104          // Not a LZ4 frame stream\n+  #104 = Utf8               Not a LZ4 frame stream\n+  #105 = String             #106          // LZ4 frame stream followed by garbage\n+  #106 = Utf8               LZ4 frame stream followed by garbage\n+  #107 = Methodref          #108.#109     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #108 = Class              #110          // org/apache/commons/compress/utils/IOUtils\n+  #109 = NameAndType        #111:#112     // readFully:(Ljava/io/InputStream;[B)I\n+  #110 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #111 = Utf8               readFully\n+  #112 = Utf8               (Ljava/io/InputStream;[B)I\n+  #113 = Methodref          #2.#114       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+  #114 = NameAndType        #115:#116     // count:(I)V\n+  #115 = Utf8               count\n+  #116 = Utf8               (I)V\n+  #117 = Class              #118          // java/io/IOException\n+  #118 = Utf8               java/io/IOException\n+  #119 = Methodref          #117.#120     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #120 = NameAndType        #9:#121       // \"<init>\":(Ljava/lang/String;)V\n+  #121 = Utf8               (Ljava/lang/String;)V\n+  #122 = Methodref          #2.#123       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+  #123 = NameAndType        #124:#125     // skipSkippableFrame:([B)I\n+  #124 = Utf8               skipSkippableFrame\n+  #125 = Utf8               ([B)I\n+  #126 = Methodref          #2.#127       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+  #127 = NameAndType        #128:#129     // matches:([BI)Z\n+  #128 = Utf8               matches\n+  #129 = Utf8               ([BI)Z\n+  #130 = String             #131          // Premature end of stream while reading frame flags\n+  #131 = Utf8               Premature end of stream while reading frame flags\n+  #132 = Methodref          #29.#133      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+  #133 = NameAndType        #91:#116      // update:(I)V\n+  #134 = InvokeDynamic      #0:#135       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #135 = NameAndType        #136:#137     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #136 = Utf8               makeConcatWithConstants\n+  #137 = Utf8               (I)Ljava/lang/String;\n+  #138 = Fieldref           #2.#139       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+  #139 = NameAndType        #140:#19      // blockDependencyBuffer:[B\n+  #140 = Utf8               blockDependencyBuffer\n+  #141 = Class              #142          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #142 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #143 = Integer            65536\n+  #144 = Fieldref           #2.#145       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+  #145 = NameAndType        #146:#51      // expectBlockChecksum:Z\n+  #146 = Utf8               expectBlockChecksum\n+  #147 = Fieldref           #2.#148       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+  #148 = NameAndType        #149:#51      // expectContentSize:Z\n+  #149 = Utf8               expectContentSize\n+  #150 = String             #151          // Premature end of stream while reading frame BD byte\n+  #151 = Utf8               Premature end of stream while reading frame BD byte\n+  #152 = String             #153          // Premature end of stream while reading content size\n+  #153 = Utf8               Premature end of stream while reading content size\n+  #154 = String             #155          // Premature end of stream while reading frame header checksum\n+  #155 = Utf8               Premature end of stream while reading frame header checksum\n+  #156 = Methodref          #29.#157      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+  #157 = NameAndType        #158:#95      // getValue:()J\n+  #158 = Utf8               getValue\n+  #159 = Long               255l\n+  #161 = Methodref          #29.#162      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+  #162 = NameAndType        #163:#15      // reset:()V\n+  #163 = Utf8               reset\n+  #164 = String             #165          // Frame header checksum mismatch\n+  #165 = Utf8               Frame header checksum mismatch\n+  #166 = Methodref          #2.#167       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+  #167 = NameAndType        #168:#15      // maybeFinishCurrentBlock:()V\n+  #168 = Utf8               maybeFinishCurrentBlock\n+  #169 = Methodref          #170.#171     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #170 = Class              #172          // org/apache/commons/compress/utils/ByteUtils\n+  #171 = NameAndType        #173:#174     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #172 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #173 = Utf8               fromLittleEndian\n+  #174 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #175 = Long               -2147483648l\n+  #177 = Long               2147483647l\n+  #179 = String             #180          // Found illegal block with negative size\n+  #180 = Utf8               Found illegal block with negative size\n+  #181 = Methodref          #2.#182       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+  #182 = NameAndType        #183:#15      // verifyContentChecksum:()V\n+  #183 = Utf8               verifyContentChecksum\n+  #184 = Class              #185          // org/apache/commons/compress/utils/BoundedInputStream\n+  #185 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #186 = Methodref          #184.#187     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #187 = NameAndType        #9:#188       // \"<init>\":(Ljava/io/InputStream;J)V\n+  #188 = Utf8               (Ljava/io/InputStream;J)V\n+  #189 = Class              #190          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #190 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #191 = Methodref          #189.#192     // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #192 = NameAndType        #9:#193       // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #193 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #194 = Fieldref           #2.#195       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+  #195 = NameAndType        #196:#51      // inUncompressed:Z\n+  #196 = Utf8               inUncompressed\n+  #197 = Methodref          #141.#42      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #198 = Methodref          #141.#199     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+  #199 = NameAndType        #200:#201     // prefill:([B)V\n+  #200 = Utf8               prefill\n+  #201 = Utf8               ([B)V\n+  #202 = String             #203          // block\n+  #203 = Utf8               block\n+  #204 = Methodref          #2.#205       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #205 = NameAndType        #206:#207     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #206 = Utf8               verifyChecksum\n+  #207 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #208 = String             #209          // content\n+  #209 = Utf8               content\n+  #210 = InvokeDynamic      #1:#211       // #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #211 = NameAndType        #136:#212     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #212 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #213 = Methodref          #170.#214     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #214 = NameAndType        #173:#215     // fromLittleEndian:([B)J\n+  #215 = Utf8               ([B)J\n+  #216 = InvokeDynamic      #2:#211       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #217 = Methodref          #39.#218      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #218 = NameAndType        #58:#6        // read:()I\n+  #219 = Methodref          #65.#57       // java/io/InputStream.read:([BII)I\n+  #220 = Methodref          #141.#93      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+  #221 = Methodref          #2.#222       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+  #222 = NameAndType        #115:#223     // count:(J)V\n+  #223 = Utf8               (J)V\n+  #224 = Fieldref           #2.#225       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+  #225 = NameAndType        #226:#19      // SKIPPABLE_FRAME_TRAILER:[B\n+  #226 = Utf8               SKIPPABLE_FRAME_TRAILER\n+  #227 = Methodref          #2.#228       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+  #228 = NameAndType        #229:#230     // isSkippableFrameSignature:([B)Z\n+  #229 = Utf8               isSkippableFrameSignature\n+  #230 = Utf8               ([B)Z\n+  #231 = String             #232          // Found illegal skippable frame with negative size\n+  #232 = Utf8               Found illegal skippable frame with negative size\n+  #233 = Methodref          #108.#234     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #234 = NameAndType        #235:#236     // skip:(Ljava/io/InputStream;J)J\n+  #235 = Utf8               skip\n+  #236 = Utf8               (Ljava/io/InputStream;J)J\n+  #237 = String             #238          // Premature end of stream while skipping frame\n+  #238 = Utf8               Premature end of stream while skipping frame\n+  #239 = Methodref          #240.#241     // java/lang/Math.min:(II)I\n+  #240 = Class              #242          // java/lang/Math\n+  #241 = NameAndType        #243:#244     // min:(II)I\n+  #242 = Utf8               java/lang/Math\n+  #243 = Utf8               min\n+  #244 = Utf8               (II)I\n+  #245 = Methodref          #246.#247     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #246 = Class              #248          // java/lang/System\n+  #247 = NameAndType        #249:#250     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #248 = Utf8               java/lang/System\n+  #249 = Utf8               arraycopy\n+  #250 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #251 = Fieldref           #2.#252       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+  #252 = NameAndType        #253:#19      // LZ4_SIGNATURE:[B\n+  #253 = Utf8               LZ4_SIGNATURE\n+  #254 = Methodref          #255.#256     // java/util/Arrays.equals:([B[B)Z\n+  #255 = Class              #257          // java/util/Arrays\n+  #256 = NameAndType        #258:#259     // equals:([B[B)Z\n+  #257 = Utf8               java/util/Arrays\n+  #258 = Utf8               equals\n+  #259 = Utf8               ([B[B)Z\n+  #260 = Class              #261          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #261 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #262 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+  #263 = Utf8               B\n+  #264 = Utf8               ConstantValue\n+  #265 = Integer            80\n+  #266 = Utf8               VERSION_MASK\n+  #267 = Utf8               I\n+  #268 = Integer            192\n+  #269 = Utf8               SUPPORTED_VERSION\n+  #270 = Integer            64\n+  #271 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #272 = Integer            32\n+  #273 = Utf8               BLOCK_CHECKSUM_MASK\n+  #274 = Integer            16\n+  #275 = Utf8               CONTENT_SIZE_MASK\n+  #276 = Integer            8\n+  #277 = Utf8               CONTENT_CHECKSUM_MASK\n+  #278 = Integer            4\n+  #279 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #280 = Integer            112\n+  #281 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #282 = Integer            -2147483648\n+  #283 = Utf8               Code\n+  #284 = Utf8               LineNumberTable\n+  #285 = Utf8               Exceptions\n+  #286 = Utf8               StackMapTable\n+  #287 = Class              #288          // java/lang/Throwable\n+  #288 = Utf8               java/lang/Throwable\n+  #289 = Utf8               getCompressedCount\n+  #290 = Class              #291          // java/lang/String\n+  #291 = Utf8               java/lang/String\n+  #292 = Class              #19           // \"[B\"\n+  #293 = Utf8               access$000\n+  #294 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)I\n+  #295 = Utf8               <clinit>\n+  #296 = Utf8               SourceFile\n+  #297 = Utf8               FramedLZ4CompressorInputStream.java\n+  #298 = Utf8               BootstrapMethods\n+  #299 = MethodHandle       6:#300        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #300 = Methodref          #301.#302     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #301 = Class              #303          // java/lang/invoke/StringConcatFactory\n+  #302 = NameAndType        #136:#304     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #303 = Utf8               java/lang/invoke/StringConcatFactory\n+  #304 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #305 = String             #306          // Unsupported version \\u0001\n+  #306 = Utf8               Unsupported version \\u0001\n+  #307 = String             #308          // Premature end of stream while reading \\u0001 checksum\n+  #308 = Utf8               Premature end of stream while reading \\u0001 checksum\n+  #309 = String             #310          // \\u0001 checksum mismatch.\n+  #310 = Utf8               \\u0001 checksum mismatch.\n+  #311 = Utf8               InnerClasses\n+  #312 = Class              #313          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #313 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #314 = Utf8               ByteSupplier\n+  #315 = Class              #316          // java/lang/invoke/MethodHandles$Lookup\n+  #316 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #317 = Class              #318          // java/lang/invoke/MethodHandles\n+  #318 = Utf8               java/lang/invoke/MethodHandles\n+  #319 = Utf8               Lookup\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -438,61 +438,61 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #2                  // Method \"<init>\":(Ljava/io/InputStream;Z)V\n+         3: invokespecial #7                  // Method \"<init>\":(Ljava/io/InputStream;Z)V\n          6: return\n       LineNumberTable:\n         line 101: 0\n         line 102: 6\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #11                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #4                  // Field oneByte:[B\n+         8: putfield      #16                 // Field oneByte:[B\n         11: aload_0\n-        12: new           #5                  // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+        12: new           #20                 // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n         15: dup\n         16: aload_0\n-        17: invokespecial #6                  // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n-        20: putfield      #7                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        17: invokespecial #22                 // Method org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)V\n+        20: putfield      #25                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         23: aload_0\n-        24: new           #8                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        24: new           #29                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         27: dup\n-        28: invokespecial #9                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        31: putfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        28: invokespecial #31                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        31: putfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         34: aload_0\n-        35: new           #8                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        35: new           #29                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         38: dup\n-        39: invokespecial #9                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        42: putfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        39: invokespecial #31                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        42: putfield      #36                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         45: aload_0\n-        46: new           #12                 // class org/apache/commons/compress/utils/CountingInputStream\n+        46: new           #39                 // class org/apache/commons/compress/utils/CountingInputStream\n         49: dup\n         50: aload_1\n-        51: invokespecial #13                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        54: putfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        51: invokespecial #41                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        54: putfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         57: aload_0\n         58: iload_2\n-        59: putfield      #15                 // Field decompressConcatenated:Z\n+        59: putfield      #48                 // Field decompressConcatenated:Z\n         62: aload_0\n         63: iconst_1\n-        64: invokespecial #16                 // Method init:(Z)V\n+        64: invokespecial #52                 // Method init:(Z)V\n         67: return\n       LineNumberTable:\n         line 114: 0\n         line 64: 4\n         line 66: 11\n         line 85: 23\n         line 88: 34\n@@ -506,24 +506,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #4                  // Field oneByte:[B\n+         2: getfield      #16                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #17                 // Method read:([BII)I\n+         7: invokevirtual #56                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #4                  // Field oneByte:[B\n+        19: getfield      #16                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 123: 0\n@@ -536,30 +536,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #19                 // Method java/io/InputStream.close:()V\n+         8: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #64                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        23: invokevirtual #20                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        20: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        23: invokevirtual #69                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        34: invokevirtual #20                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        31: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        34: invokevirtual #69                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -585,58 +585,58 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #21                 // Field endReached:Z\n+         7: getfield      #70                 // Field endReached:Z\n         10: ifeq          15\n         13: iconst_m1\n         14: ireturn\n         15: aload_0\n         16: aload_1\n         17: iload_2\n         18: iload_3\n-        19: invokespecial #22                 // Method readOnce:([BII)I\n+        19: invokespecial #73                 // Method readOnce:([BII)I\n         22: istore        4\n         24: iload         4\n         26: iconst_m1\n         27: if_icmpne     50\n         30: aload_0\n-        31: invokespecial #23                 // Method nextBlock:()V\n+        31: invokespecial #76                 // Method nextBlock:()V\n         34: aload_0\n-        35: getfield      #21                 // Field endReached:Z\n+        35: getfield      #70                 // Field endReached:Z\n         38: ifne          50\n         41: aload_0\n         42: aload_1\n         43: iload_2\n         44: iload_3\n-        45: invokespecial #22                 // Method readOnce:([BII)I\n+        45: invokespecial #73                 // Method readOnce:([BII)I\n         48: istore        4\n         50: iload         4\n         52: iconst_m1\n         53: if_icmpeq     89\n         56: aload_0\n-        57: getfield      #24                 // Field expectBlockDependency:Z\n+        57: getfield      #79                 // Field expectBlockDependency:Z\n         60: ifeq          71\n         63: aload_0\n         64: aload_1\n         65: iload_2\n         66: iload         4\n-        68: invokespecial #25                 // Method appendToBlockDependencyBuffer:([BII)V\n+        68: invokespecial #82                 // Method appendToBlockDependencyBuffer:([BII)V\n         71: aload_0\n-        72: getfield      #26                 // Field expectContentChecksum:Z\n+        72: getfield      #86                 // Field expectContentChecksum:Z\n         75: ifeq          89\n         78: aload_0\n-        79: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        79: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         82: aload_1\n         83: iload_2\n         84: iload         4\n-        86: invokevirtual #27                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+        86: invokevirtual #89                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n         89: iload         4\n         91: ireturn\n       LineNumberTable:\n         line 142: 0\n         line 143: 4\n         line 145: 6\n         line 146: 13\n@@ -664,33 +664,33 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #28                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #92                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 171: 0\n \n   private void init(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #29                 // Method readSignature:(Z)Z\n+         2: invokespecial #96                 // Method readSignature:(Z)Z\n          5: ifeq          16\n          8: aload_0\n-         9: invokespecial #30                 // Method readFrameDescriptor:()V\n+         9: invokespecial #100                // Method readFrameDescriptor:()V\n         12: aload_0\n-        13: invokespecial #23                 // Method nextBlock:()V\n+        13: invokespecial #76                 // Method nextBlock:()V\n         16: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 8\n         line 177: 12\n         line 179: 16\n       StackMapTable: number_of_entries = 1\n@@ -701,72 +701,72 @@\n   private boolean readSignature(boolean) throws java.io.IOException;\n     descriptor: (Z)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n          1: ifeq          9\n-         4: ldc           #31                 // String Not a LZ4 frame stream\n+         4: ldc           #103                // String Not a LZ4 frame stream\n          6: goto          11\n-         9: ldc           #32                 // String LZ4 frame stream followed by garbage\n+         9: ldc           #105                // String LZ4 frame stream followed by garbage\n         11: astore_2\n         12: iconst_4\n         13: newarray       byte\n         15: astore_3\n         16: aload_0\n-        17: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        17: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         20: aload_3\n-        21: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        21: invokestatic  #107                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         24: istore        4\n         26: aload_0\n         27: iload         4\n-        29: invokevirtual #34                 // Method count:(I)V\n+        29: invokevirtual #113                // Method count:(I)V\n         32: iconst_0\n         33: iload         4\n         35: if_icmpne     49\n         38: iload_1\n         39: ifne          49\n         42: aload_0\n         43: iconst_1\n-        44: putfield      #21                 // Field endReached:Z\n+        44: putfield      #70                 // Field endReached:Z\n         47: iconst_0\n         48: ireturn\n         49: iconst_4\n         50: iload         4\n         52: if_icmpeq     64\n-        55: new           #35                 // class java/io/IOException\n+        55: new           #117                // class java/io/IOException\n         58: dup\n         59: aload_2\n-        60: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         63: athrow\n         64: aload_0\n         65: aload_3\n-        66: invokespecial #37                 // Method skipSkippableFrame:([B)I\n+        66: invokespecial #122                // Method skipSkippableFrame:([B)I\n         69: istore        4\n         71: iconst_0\n         72: iload         4\n         74: if_icmpne     88\n         77: iload_1\n         78: ifne          88\n         81: aload_0\n         82: iconst_1\n-        83: putfield      #21                 // Field endReached:Z\n+        83: putfield      #70                 // Field endReached:Z\n         86: iconst_0\n         87: ireturn\n         88: iconst_4\n         89: iload         4\n         91: if_icmpne     102\n         94: aload_3\n         95: iconst_4\n-        96: invokestatic  #38                 // Method matches:([BI)Z\n+        96: invokestatic  #126                // Method matches:([BI)Z\n         99: ifne          111\n-       102: new           #35                 // class java/io/IOException\n+       102: new           #117                // class java/io/IOException\n        105: dup\n        106: aload_2\n-       107: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       107: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        110: athrow\n        111: iconst_1\n        112: ireturn\n       LineNumberTable:\n         line 182: 0\n         line 183: 12\n         line 184: 16\n@@ -804,160 +804,160 @@\n       stack=4, locals=5, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n-        10: new           #35                 // class java/io/IOException\n+        10: new           #117                // class java/io/IOException\n         13: dup\n-        14: ldc           #39                 // String Premature end of stream while reading frame flags\n-        16: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #130                // String Premature end of stream while reading frame flags\n+        16: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n-        25: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+        25: invokevirtual #132                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n         35: if_icmpeq     55\n-        38: new           #35                 // class java/io/IOException\n+        38: new           #117                // class java/io/IOException\n         41: dup\n         42: iload_1\n         43: bipush        6\n         45: ishr\n-        46: invokedynamic #42,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        51: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokedynamic #134,  0            // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        51: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         54: athrow\n         55: aload_0\n         56: iload_1\n         57: bipush        32\n         59: iand\n         60: ifne          67\n         63: iconst_1\n         64: goto          68\n         67: iconst_0\n-        68: putfield      #24                 // Field expectBlockDependency:Z\n+        68: putfield      #79                 // Field expectBlockDependency:Z\n         71: aload_0\n-        72: getfield      #24                 // Field expectBlockDependency:Z\n+        72: getfield      #79                 // Field expectBlockDependency:Z\n         75: ifeq          96\n         78: aload_0\n-        79: getfield      #43                 // Field blockDependencyBuffer:[B\n+        79: getfield      #138                // Field blockDependencyBuffer:[B\n         82: ifnonnull     101\n         85: aload_0\n-        86: ldc           #45                 // int 65536\n+        86: ldc           #143                // int 65536\n         88: newarray       byte\n-        90: putfield      #43                 // Field blockDependencyBuffer:[B\n+        90: putfield      #138                // Field blockDependencyBuffer:[B\n         93: goto          101\n         96: aload_0\n         97: aconst_null\n-        98: putfield      #43                 // Field blockDependencyBuffer:[B\n+        98: putfield      #138                // Field blockDependencyBuffer:[B\n        101: aload_0\n        102: iload_1\n        103: bipush        16\n        105: iand\n        106: ifeq          113\n        109: iconst_1\n        110: goto          114\n        113: iconst_0\n-       114: putfield      #46                 // Field expectBlockChecksum:Z\n+       114: putfield      #144                // Field expectBlockChecksum:Z\n        117: aload_0\n        118: iload_1\n        119: bipush        8\n        121: iand\n        122: ifeq          129\n        125: iconst_1\n        126: goto          130\n        129: iconst_0\n-       130: putfield      #47                 // Field expectContentSize:Z\n+       130: putfield      #147                // Field expectContentSize:Z\n        133: aload_0\n        134: iload_1\n        135: iconst_4\n        136: iand\n        137: ifeq          144\n        140: iconst_1\n        141: goto          145\n        144: iconst_0\n-       145: putfield      #26                 // Field expectContentChecksum:Z\n+       145: putfield      #86                 // Field expectContentChecksum:Z\n        148: aload_0\n        149: invokespecial #1                  // Method readOneByte:()I\n        152: istore_2\n        153: iload_2\n        154: iconst_m1\n        155: if_icmpne     168\n-       158: new           #35                 // class java/io/IOException\n+       158: new           #117                // class java/io/IOException\n        161: dup\n-       162: ldc           #48                 // String Premature end of stream while reading frame BD byte\n-       164: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       162: ldc           #150                // String Premature end of stream while reading frame BD byte\n+       164: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        167: athrow\n        168: aload_0\n-       169: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       169: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        172: iload_2\n-       173: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       173: invokevirtual #132                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n        176: aload_0\n-       177: getfield      #47                 // Field expectContentSize:Z\n+       177: getfield      #147                // Field expectContentSize:Z\n        180: ifeq          232\n        183: bipush        8\n        185: newarray       byte\n        187: astore_3\n        188: aload_0\n-       189: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       189: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n        192: aload_3\n-       193: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       193: invokestatic  #107                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        196: istore        4\n        198: aload_0\n        199: iload         4\n-       201: invokevirtual #34                 // Method count:(I)V\n+       201: invokevirtual #113                // Method count:(I)V\n        204: bipush        8\n        206: iload         4\n        208: if_icmpeq     221\n-       211: new           #35                 // class java/io/IOException\n+       211: new           #117                // class java/io/IOException\n        214: dup\n-       215: ldc           #49                 // String Premature end of stream while reading content size\n-       217: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       215: ldc           #152                // String Premature end of stream while reading content size\n+       217: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        220: athrow\n        221: aload_0\n-       222: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       222: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        225: aload_3\n        226: iconst_0\n        227: aload_3\n        228: arraylength\n-       229: invokevirtual #27                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       229: invokevirtual #89                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n        232: aload_0\n        233: invokespecial #1                  // Method readOneByte:()I\n        236: istore_3\n        237: iload_3\n        238: iconst_m1\n        239: if_icmpne     252\n-       242: new           #35                 // class java/io/IOException\n+       242: new           #117                // class java/io/IOException\n        245: dup\n-       246: ldc           #50                 // String Premature end of stream while reading frame header checksum\n-       248: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       246: ldc           #154                // String Premature end of stream while reading frame header checksum\n+       248: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        251: athrow\n        252: aload_0\n-       253: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       256: invokevirtual #51                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       253: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       256: invokevirtual #156                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n        259: bipush        8\n        261: lshr\n-       262: ldc2_w        #52                 // long 255l\n+       262: ldc2_w        #159                // long 255l\n        265: land\n        266: l2i\n        267: istore        4\n        269: aload_0\n-       270: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       273: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       270: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       273: invokevirtual #161                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n        276: iload_3\n        277: iload         4\n        279: if_icmpeq     292\n-       282: new           #35                 // class java/io/IOException\n+       282: new           #117                // class java/io/IOException\n        285: dup\n-       286: ldc           #55                 // String Frame header checksum mismatch\n-       288: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       286: ldc           #164                // String Frame header checksum mismatch\n+       288: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        291: athrow\n        292: return\n       LineNumberTable:\n         line 208: 0\n         line 209: 5\n         line 210: 10\n         line 212: 20\n@@ -1040,102 +1040,102 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #56                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #166                // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n-         5: getfield      #7                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         5: getfield      #25                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #57                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #169                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #58                 // long -2147483648l\n+        14: ldc2_w        #175                // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #60                 // long 2147483647l\n+        30: ldc2_w        #177                // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifge          52\n-        42: new           #35                 // class java/io/IOException\n+        42: new           #117                // class java/io/IOException\n         45: dup\n-        46: ldc           #62                 // String Found illegal block with negative size\n-        48: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        46: ldc           #179                // String Found illegal block with negative size\n+        48: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: iload         4\n         54: ifne          82\n         57: aload_0\n-        58: invokespecial #63                 // Method verifyContentChecksum:()V\n+        58: invokespecial #181                // Method verifyContentChecksum:()V\n         61: aload_0\n-        62: getfield      #15                 // Field decompressConcatenated:Z\n+        62: getfield      #48                 // Field decompressConcatenated:Z\n         65: ifne          76\n         68: aload_0\n         69: iconst_1\n-        70: putfield      #21                 // Field endReached:Z\n+        70: putfield      #70                 // Field endReached:Z\n         73: goto          81\n         76: aload_0\n         77: iconst_0\n-        78: invokespecial #16                 // Method init:(Z)V\n+        78: invokespecial #52                 // Method init:(Z)V\n         81: return\n-        82: new           #64                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        82: new           #184                // class org/apache/commons/compress/utils/BoundedInputStream\n         85: dup\n         86: aload_0\n-        87: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        87: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         90: iload         4\n         92: i2l\n-        93: invokespecial #65                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        93: invokespecial #186                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         96: astore        5\n         98: aload_0\n-        99: getfield      #46                 // Field expectBlockChecksum:Z\n+        99: getfield      #144                // Field expectBlockChecksum:Z\n        102: ifeq          120\n-       105: new           #66                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+       105: new           #189                // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n        108: dup\n        109: aload_0\n-       110: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       110: getfield      #36                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        113: aload         5\n-       115: invokespecial #67                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       115: invokespecial #191                // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        118: astore        5\n        120: iload_3\n        121: ifeq          138\n        124: aload_0\n        125: iconst_1\n-       126: putfield      #68                 // Field inUncompressed:Z\n+       126: putfield      #194                // Field inUncompressed:Z\n        129: aload_0\n        130: aload         5\n-       132: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+       132: putfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n        135: goto          176\n        138: aload_0\n        139: iconst_0\n-       140: putfield      #68                 // Field inUncompressed:Z\n-       143: new           #44                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       140: putfield      #194                // Field inUncompressed:Z\n+       143: new           #141                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        146: dup\n        147: aload         5\n-       149: invokespecial #69                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       149: invokespecial #197                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        152: astore        6\n        154: aload_0\n-       155: getfield      #24                 // Field expectBlockDependency:Z\n+       155: getfield      #79                 // Field expectBlockDependency:Z\n        158: ifeq          170\n        161: aload         6\n        163: aload_0\n-       164: getfield      #43                 // Field blockDependencyBuffer:[B\n-       167: invokevirtual #70                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       164: getfield      #138                // Field blockDependencyBuffer:[B\n+       167: invokevirtual #198                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        170: aload_0\n        171: aload         6\n-       173: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+       173: putfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n        176: return\n       LineNumberTable:\n         line 253: 0\n         line 254: 4\n         line 255: 13\n         line 256: 29\n         line 257: 37\n@@ -1184,33 +1184,33 @@\n \n   private void maybeFinishCurrentBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        43\n          7: aload_0\n-         8: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #19                 // Method java/io/InputStream.close:()V\n+         8: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #64                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #46                 // Field expectBlockChecksum:Z\n+        20: getfield      #144                // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n-        28: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #71                 // String block\n-        33: invokespecial #72                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        28: getfield      #36                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        31: ldc           #202                // String block\n+        33: invokespecial #204                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n-        37: getfield      #11                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        37: getfield      #36                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        40: invokevirtual #161                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 287: 0\n         line 288: 7\n         line 289: 14\n         line 290: 19\n         line 291: 26\n@@ -1223,24 +1223,24 @@\n \n   private void verifyContentChecksum() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field expectContentChecksum:Z\n+         1: getfield      #86                 // Field expectContentChecksum:Z\n          4: ifeq          17\n          7: aload_0\n          8: aload_0\n-         9: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #73                 // String content\n-        14: invokespecial #72                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+         9: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        12: ldc           #208                // String content\n+        14: invokespecial #204                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         17: aload_0\n-        18: getfield      #10                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        18: getfield      #32                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: invokevirtual #161                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         24: return\n       LineNumberTable:\n         line 298: 0\n         line 299: 7\n         line 301: 17\n         line 302: 24\n       StackMapTable: number_of_entries = 1\n@@ -1253,43 +1253,43 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: iconst_4\n          1: newarray       byte\n          3: astore_3\n          4: aload_0\n-         5: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         5: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n          8: aload_3\n-         9: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #107                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n-        17: invokevirtual #34                 // Method count:(I)V\n+        17: invokevirtual #113                // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n         23: if_icmpeq     40\n-        26: new           #35                 // class java/io/IOException\n+        26: new           #117                // class java/io/IOException\n         29: dup\n         30: aload_2\n-        31: invokedynamic #74,  0             // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        36: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        31: invokedynamic #210,  0            // InvokeDynamic #1:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload_1\n-        41: invokevirtual #51                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        41: invokevirtual #156                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n         44: lstore        5\n         46: lload         5\n         48: aload_3\n-        49: invokestatic  #75                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        49: invokestatic  #213                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n         52: lcmp\n         53: ifeq          70\n-        56: new           #35                 // class java/io/IOException\n+        56: new           #117                // class java/io/IOException\n         59: dup\n         60: aload_2\n-        61: invokedynamic #76,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        66: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        61: invokedynamic #216,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        66: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         69: athrow\n         70: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 4\n         line 307: 14\n         line 308: 20\n@@ -1310,23 +1310,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #77                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         1: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #217                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #34                 // Method count:(I)V\n+        15: invokevirtual #113                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1344,48 +1344,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #68                 // Field inUncompressed:Z\n+         1: getfield      #194                // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+         8: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #219                // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n-        22: invokevirtual #34                 // Method count:(I)V\n+        22: invokevirtual #113                // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n-        29: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #44                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        29: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n+        32: checkcast     #141                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #220                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n-        45: getfield      #18                 // Field currentBlock:Ljava/io/InputStream;\n+        45: getfield      #60                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #78                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #219                // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #79                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #220                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #80                 // Method count:(J)V\n+        65: invokevirtual #221                // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 327: 0\n         line 328: 7\n         line 329: 19\n         line 330: 25\n@@ -1417,15 +1417,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #81                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #224                // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -1457,55 +1457,55 @@\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n          4: if_icmpne     89\n          7: aload_1\n-         8: invokestatic  #82                 // Method isSkippableFrameSignature:([B)Z\n+         8: invokestatic  #227                // Method isSkippableFrameSignature:([B)Z\n         11: ifeq          89\n         14: aload_0\n-        15: getfield      #7                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        15: getfield      #25                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #57                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #169                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n         26: ifge          39\n-        29: new           #35                 // class java/io/IOException\n+        29: new           #117                // class java/io/IOException\n         32: dup\n-        33: ldc           #83                 // String Found illegal skippable frame with negative size\n-        35: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        33: ldc           #231                // String Found illegal skippable frame with negative size\n+        35: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n-        40: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        40: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         43: lload_3\n-        44: invokestatic  #84                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        44: invokestatic  #233                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         47: lstore        5\n         49: aload_0\n         50: lload         5\n-        52: invokevirtual #80                 // Method count:(J)V\n+        52: invokevirtual #221                // Method count:(J)V\n         55: lload_3\n         56: lload         5\n         58: lcmp\n         59: ifeq          72\n-        62: new           #35                 // class java/io/IOException\n+        62: new           #117                // class java/io/IOException\n         65: dup\n-        66: ldc           #85                 // String Premature end of stream while skipping frame\n-        68: invokespecial #36                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        66: ldc           #237                // String Premature end of stream while skipping frame\n+        68: invokespecial #119                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n-        73: getfield      #14                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        73: getfield      #44                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: aload_1\n-        77: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        77: invokestatic  #107                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         80: istore_2\n         81: aload_0\n         82: iload_2\n-        83: invokevirtual #34                 // Method count:(I)V\n+        83: invokevirtual #113                // Method count:(I)V\n         86: goto          2\n         89: iload_2\n         90: ireturn\n       LineNumberTable:\n         line 360: 0\n         line 361: 2\n         line 362: 14\n@@ -1537,43 +1537,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #43                 // Field blockDependencyBuffer:[B\n+         2: getfield      #138                // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #86                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #239                // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #43                 // Field blockDependencyBuffer:[B\n+        15: getfield      #138                // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #43                 // Field blockDependencyBuffer:[B\n+        29: getfield      #138                // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #43                 // Field blockDependencyBuffer:[B\n+        34: getfield      #138                // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #245                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #43                 // Field blockDependencyBuffer:[B\n+        46: getfield      #138                // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #245                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 378: 0\n         line 379: 10\n         line 380: 14\n         line 381: 23\n         line 383: 28\n@@ -1588,40 +1588,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #251                // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #251                // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n+        21: getstatic     #251                // Field LZ4_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n+        32: getstatic     #251                // Field LZ4_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #87                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #245                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #88                 // Field LZ4_SIGNATURE:[B\n-        43: invokestatic  #89                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #251                // Field LZ4_SIGNATURE:[B\n+        43: invokestatic  #254                // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 401: 0\n         line 402: 8\n         line 405: 10\n         line 406: 12\n         line 407: 21\n@@ -1665,43 +1665,43 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #88                 // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #251                // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #81                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #224                // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n-InnerClasses:\n-  #5;                                     // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n-  public static #120= #119 of #236;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #315= #314 of #317; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #222 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #299 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #223 Unsupported version \\u0001\n-  1: #222 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #305 Unsupported version \\u0001\n+  1: #299 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #249 Premature end of stream while reading \\u0001 checksum\n-  2: #222 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #307 Premature end of stream while reading \\u0001 checksum\n+  2: #299 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #252 \\u0001 checksum mismatch.\n+      #309 \\u0001 checksum mismatch.\n+InnerClasses:\n+  #20;                                    // class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream$1\n+  public static #314= #312 of #170;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #319= #315 of #317; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
