{"diffoscope-json-version": 1, "source1": "first/JSONConfiguration.class", "source2": "second/JSONConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,35 +19,35 @@\n     private final MapType type;\n     \n     public JSONConfiguration() {\n         this.mapper = new ObjectMapper();\n         this.type = this.mapper.getTypeFactory().constructMapType((Class)Map.class, (Class)String.class, (Class)Object.class);\n     }\n     \n-    public JSONConfiguration(final HierarchicalConfiguration<ImmutableNode> c) {\n-        super((HierarchicalConfiguration)c);\n+    public JSONConfiguration(final HierarchicalConfiguration<ImmutableNode> hierarchicalConfiguration) {\n+        super((HierarchicalConfiguration)hierarchicalConfiguration);\n         this.mapper = new ObjectMapper();\n         this.type = this.mapper.getTypeFactory().constructMapType((Class)Map.class, (Class)String.class, (Class)Object.class);\n     }\n     \n-    public void read(final Reader in) throws ConfigurationException {\n+    public void read(final Reader reader) throws ConfigurationException {\n         try {\n-            this.load((Map)this.mapper.readValue(in, (JavaType)this.type));\n+            this.load((Map)this.mapper.readValue(reader, (JavaType)this.type));\n         }\n-        catch (final Exception e) {\n-            rethrowException(e);\n+        catch (final Exception ex) {\n+            rethrowException(ex);\n         }\n     }\n     \n-    public void write(final Writer out) throws ConfigurationException, IOException {\n-        this.mapper.writer().writeValue(out, (Object)this.constructMap((ImmutableNode)this.getNodeModel().getNodeHandler().getRootNode()));\n+    public void write(final Writer writer) throws ConfigurationException, IOException {\n+        this.mapper.writer().writeValue(writer, (Object)this.constructMap((ImmutableNode)this.getNodeModel().getNodeHandler().getRootNode()));\n     }\n     \n-    public void read(final InputStream in) throws ConfigurationException {\n+    public void read(final InputStream inputStream) throws ConfigurationException {\n         try {\n-            this.load((Map)this.mapper.readValue(in, (JavaType)this.type));\n+            this.load((Map)this.mapper.readValue(inputStream, (JavaType)this.type));\n         }\n-        catch (final Exception e) {\n-            rethrowException(e);\n+        catch (final Exception ex) {\n+            rethrowException(ex);\n         }\n     }\n }\n"}]}
