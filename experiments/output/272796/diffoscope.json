{"diffoscope-json-version": 1, "source1": "first/LambdaParameterNameCheck.class", "source2": "second/LambdaParameterNameCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,22 +19,21 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 181 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final boolean isInSwitchRule = ast.getParent().getType() == 208;\n-        if (Objects.nonNull(ast.findFirstToken(20))) {\n-            final DetailAST parametersNode = ast.findFirstToken(20);\n-            TokenUtil.forEachChild(parametersNode, 21, x$0 -> super.visitToken(x$0));\n+    public void visitToken(final DetailAST detailAST) {\n+        final boolean b = detailAST.getParent().getType() == 208;\n+        if (Objects.nonNull(detailAST.findFirstToken(20))) {\n+            TokenUtil.forEachChild(detailAST.findFirstToken(20), 21, detailAST2 -> super.visitToken(detailAST2));\n         }\n-        else if (!isInSwitchRule) {\n-            super.visitToken(ast);\n+        else if (!b) {\n+            super.visitToken(detailAST);\n         }\n     }\n     \n-    protected boolean mustCheckName(final DetailAST ast) {\n+    protected boolean mustCheckName(final DetailAST detailAST) {\n         return true;\n     }\n }\n"}]}
