{"diffoscope-json-version": 1, "source1": "first/BCELifier.class", "source2": "second/BCELifier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,196 +1,196 @@\n-  SHA-256 checksum 967de474c56debfd432ab6e94f8d39ef076f7c0f4784d5ccaece5c2854af879c\n+  SHA-256 checksum c00cc17fb78c501d8042edb93d4397eb9af8f6b2bd0e99e0b8b9cf698bacb27c\n   Compiled from \"BCELifier.java\"\n public class org.apache.bcel.util.BCELifier extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/bcel/util/BCELifier\n   super_class: #178                       // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 5, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #234.#235     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-    #2 = Class              #236          // org/apache/bcel/classfile/ClassParser\n-    #3 = Methodref          #2.#237       // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #2.#238       // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n-    #5 = Fieldref           #239.#240     // java/lang/System.out:Ljava/io/PrintStream;\n-    #6 = String             #241          // Usage: BCELifier classname\n-    #7 = Methodref          #242.#243     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-    #8 = String             #244          // \\tThe class must exist on the classpath\n-    #9 = Class              #245          // org/apache/bcel/util/BCELifier\n-   #10 = Methodref          #9.#246       // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #11 = Methodref          #9.#247       // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-   #12 = Methodref          #9.#248       // org/apache/bcel/util/BCELifier.start:()V\n-   #13 = String             #249          // Type.NO_ARGS\n-   #14 = Class              #250          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#251      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = Methodref          #9.#252       // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-   #17 = Methodref          #14.#253      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = String             #254          // ,\n-   #19 = String             #255          // new Type[] {\n-   #20 = Methodref          #14.#256      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = String             #257          //  }\n-   #22 = Fieldref           #179.#258     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #23 = Methodref          #9.#259       // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-   #24 = String             #260          // 0\n-   #25 = Class              #261          // org/apache/bcel/Const\n+    #1 = Methodref          #231.#232     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+    #2 = Class              #233          // org/apache/bcel/classfile/ClassParser\n+    #3 = Methodref          #2.#234       // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #2.#235       // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n+    #5 = Fieldref           #236.#237     // java/lang/System.out:Ljava/io/PrintStream;\n+    #6 = String             #238          // Usage: BCELifier classname\n+    #7 = Methodref          #239.#240     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+    #8 = String             #241          // \\tThe class must exist on the classpath\n+    #9 = Class              #242          // org/apache/bcel/util/BCELifier\n+   #10 = Methodref          #9.#243       // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #11 = Methodref          #9.#244       // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+   #12 = Methodref          #9.#245       // org/apache/bcel/util/BCELifier.start:()V\n+   #13 = String             #246          // Type.NO_ARGS\n+   #14 = Class              #247          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#248      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = Methodref          #9.#249       // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+   #17 = Methodref          #14.#250      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = String             #251          // ,\n+   #19 = String             #252          // new Type[] {\n+   #20 = Methodref          #14.#253      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #21 = String             #254          //  }\n+   #22 = Fieldref           #179.#255     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #23 = Methodref          #9.#256       // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+   #24 = String             #257          // 0\n+   #25 = Class              #258          // org/apache/bcel/Const\n    #26 = Integer            32768\n-   #27 = Fieldref           #179.#262     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #28 = Fieldref           #9.#263       // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n-   #29 = String             #264          // ACC_SUPER |\n-   #30 = Fieldref           #179.#265     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #31 = String             #266          // ACC_BRIDGE |\n-   #32 = String             #267          // ACC_VARARGS |\n-   #33 = Fieldref           #25.#268      // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n-   #34 = String             #269          // ACC_\n-   #35 = Methodref          #25.#270      // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n-   #36 = Fieldref           #271.#272     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-   #37 = Methodref          #273.#274     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #38 = String             #275          //  |\n-   #39 = String             #276          // ACC_BIT %x |\n-   #40 = Class              #277          // java/lang/Object\n-   #41 = Methodref          #278.#279     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #42 = Methodref          #273.#280     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #43 = Methodref          #273.#281     // java/lang/String.length:()I\n-   #44 = Methodref          #273.#282     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #45 = Methodref          #283.#284     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #46 = Methodref          #283.#285     // org/apache/bcel/generic/Type.getType:()B\n-   #47 = String             #286          // Type.\n-   #48 = Methodref          #25.#287      // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n-   #49 = Methodref          #283.#256     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n-   #50 = String             #288          // java.lang.String\n-   #51 = Methodref          #273.#289     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #52 = String             #290          // Type.STRING\n-   #53 = String             #291          // java.lang.Object\n-   #54 = String             #292          // Type.OBJECT\n-   #55 = String             #293          // java.lang.StringBuffer\n-   #56 = String             #294          // Type.STRINGBUFFER\n-   #57 = Class              #295          // org/apache/bcel/generic/ArrayType\n-   #58 = String             #296          // new ArrayType(\n-   #59 = Methodref          #57.#297      // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n-   #60 = Methodref          #57.#298      // org/apache/bcel/generic/ArrayType.getDimensions:()I\n-   #61 = Methodref          #14.#299      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #62 = String             #300          // )\n-   #63 = String             #301          // new ObjectType(\\\"\n-   #64 = Methodref          #302.#303     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #65 = String             #304          // \\\")\n-   #66 = Methodref          #283.#305     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n-   #67 = Methodref          #9.#306       // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n-   #68 = Methodref          #178.#251     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-   #69 = Fieldref           #9.#307       // org/apache/bcel/util/BCELifier.clazz:Lorg/apache/bcel/classfile/JavaClass;\n-   #70 = Class              #308          // java/io/PrintWriter\n-   #71 = Class              #309          // java/io/OutputStreamWriter\n-   #72 = Fieldref           #310.#311     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #73 = Methodref          #71.#312      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #74 = Methodref          #70.#313      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #75 = Fieldref           #9.#314       // org/apache/bcel/util/BCELifier.printWriter:Ljava/io/PrintWriter;\n-   #76 = Class              #315          // org/apache/bcel/generic/ConstantPoolGen\n-   #77 = Methodref          #316.#317     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #78 = Methodref          #76.#318      // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #79 = Fieldref           #9.#319       // org/apache/bcel/util/BCELifier.constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #80 = String             #320          //   public void create(OutputStream out) throws IOException {\n-   #81 = Methodref          #70.#243      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #82 = Methodref          #316.#321     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n-   #83 = String             #322          //     createFields();\n-   #84 = Methodref          #316.#323     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #85 = String             #324          //     createMethod_\n-   #86 = String             #325          // ();\n-   #87 = String             #326          //     _cg.getJavaClass().dump(out);\n-   #88 = String             #327          //   }\n-   #89 = Methodref          #70.#328      // java/io/PrintWriter.println:()V\n-   #90 = Methodref          #316.#329     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n-   #91 = String             #330          //   public static void main(String[] args) throws Exception {\n-   #92 = String             #331          //\n-   #93 = String             #332          // Creator creator = new\n-   #94 = String             #333          // Creator();\n-   #95 = String             #334          //     creator.create(new FileOutputStream(\\\"\n-   #96 = String             #335          // .class\\\"));\n-   #97 = Methodref          #9.#336       // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-   #98 = Methodref          #70.#337      // java/io/PrintWriter.flush:()V\n-   #99 = String             #338          //     field = new FieldGen(\n-  #100 = Methodref          #339.#340     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n-  #101 = Methodref          #9.#341       // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n-  #102 = Methodref          #339.#305     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n-  #103 = String             #342          // , \\\"\n-  #104 = Methodref          #339.#343     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n-  #105 = String             #344          // \\\", _cp);\n-  #106 = Methodref          #339.#345     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-  #107 = String             #346          //     field.setInitValue(\n-  #108 = Methodref          #14.#347      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #109 = String             #348          //     _cg.addField(field.getField());\n-  #110 = Methodref          #316.#349     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n-  #111 = Methodref          #316.#350     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n-  #112 = Methodref          #316.#351     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n-  #113 = Methodref          #302.#352     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #114 = Methodref          #353.#354     // org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z\n-  #115 = Methodref          #273.#355     // java/lang/String.substring:(I)Ljava/lang/String;\n-  #116 = String             #356          // package\n-  #117 = String             #357          // ;\n-  #118 = String             #358          // import\n-  #119 = Fieldref           #9.#359       // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n-  #120 = String             #360          // .generic.*;\n-  #121 = String             #361          // .classfile.*;\n-  #122 = String             #362          // .*;\n-  #123 = String             #363          // import java.io.*;\n-  #124 = String             #364          // public class\n-  #125 = String             #365          // Creator {\n-  #126 = String             #366          //   private InstructionFactory _factory;\n-  #127 = String             #367          //   private ConstantPoolGen    _cp;\n-  #128 = String             #368          //   private ClassGen           _cg;\n-  #129 = String             #369          //   public\n-  #130 = String             #370          // Creator() {\n-  #131 = String             #371          //     _cg = new ClassGen(\\\"\n-  #132 = Methodref          #273.#372     // java/lang/String.isEmpty:()Z\n-  #133 = String             #373          // .\n-  #134 = String             #374          // \\\", \\\"\n-  #135 = Methodref          #316.#375     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n-  #136 = String             #376          // \\\",\n-  #137 = Methodref          #316.#340     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n-  #138 = String             #377          // , new String[] {\n-  #139 = String             #378          //  });\n-  #140 = String             #379          //     _cg.setMajor(\n-  #141 = Methodref          #316.#380     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n-  #142 = String             #381          // );\n-  #143 = String             #382          //     _cg.setMinor(\n-  #144 = Methodref          #316.#383     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n-  #145 = String             #384          //     _cp = _cg.getConstantPool();\n-  #146 = String             #385          //     _factory = new InstructionFactory(_cg, _cp);\n-  #147 = Methodref          #9.#386       // org/apache/bcel/util/BCELifier.printCreate:()V\n-  #148 = String             #387          //   private void createFields() {\n-  #149 = String             #388          //     FieldGen field;\n-  #150 = Methodref          #339.#389     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #151 = String             #390          //   private void createMethod_\n-  #152 = String             #391          // () {\n-  #153 = Methodref          #392.#389     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #154 = Methodref          #9.#393       // org/apache/bcel/util/BCELifier.printMain:()V\n-  #155 = String             #394          // }\n-  #156 = Class              #395          // org/apache/bcel/generic/MethodGen\n-  #157 = Methodref          #156.#396     // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #158 = String             #397          //     InstructionList il = new InstructionList();\n-  #159 = String             #398          //     MethodGen method = new MethodGen(\n-  #160 = Methodref          #392.#340     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n-  #161 = Methodref          #156.#399     // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #162 = Methodref          #156.#400     // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #163 = Methodref          #9.#401       // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #164 = Methodref          #156.#402     // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n-  #165 = String             #403          //  }, \\\"\n-  #166 = Methodref          #392.#343     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n-  #167 = String             #404          // \\\", il, _cp);\n-  #168 = Class              #405          // org/apache/bcel/util/BCELFactory\n-  #169 = Methodref          #168.#406     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #170 = Methodref          #168.#248     // org/apache/bcel/util/BCELFactory.start:()V\n-  #171 = String             #407          //     method.setMaxStack();\n-  #172 = String             #408          //     method.setMaxLocals();\n-  #173 = String             #409          //     _cg.addMethod(method.getMethod());\n-  #174 = String             #410          //     il.dispose();\n-  #175 = Methodref          #411.#412     // java/lang/Class.getPackage:()Ljava/lang/Package;\n-  #176 = Methodref          #413.#343     // java/lang/Package.getName:()Ljava/lang/String;\n-  #177 = Methodref          #411.#414     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-  #178 = Class              #415          // org/apache/bcel/classfile/EmptyVisitor\n-  #179 = Class              #416          // org/apache/bcel/util/BCELifier$FLAGS\n+   #27 = Fieldref           #179.#259     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #28 = Fieldref           #9.#260       // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n+   #29 = String             #261          // ACC_SUPER |\n+   #30 = Fieldref           #179.#262     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #31 = String             #263          // ACC_BRIDGE |\n+   #32 = String             #264          // ACC_VARARGS |\n+   #33 = Fieldref           #25.#265      // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n+   #34 = String             #266          // ACC_\n+   #35 = Methodref          #25.#267      // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n+   #36 = Fieldref           #268.#269     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+   #37 = Methodref          #225.#270     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #38 = String             #271          //  |\n+   #39 = String             #272          // ACC_BIT %x |\n+   #40 = Class              #273          // java/lang/Object\n+   #41 = Methodref          #274.#275     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #42 = Methodref          #225.#276     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #43 = Methodref          #225.#277     // java/lang/String.length:()I\n+   #44 = Methodref          #225.#278     // java/lang/String.substring:(II)Ljava/lang/String;\n+   #45 = Methodref          #210.#279     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #46 = Methodref          #210.#280     // org/apache/bcel/generic/Type.getType:()B\n+   #47 = String             #281          // Type.\n+   #48 = Methodref          #25.#282      // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n+   #49 = Methodref          #210.#253     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n+   #50 = String             #283          // java.lang.String\n+   #51 = Methodref          #225.#284     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #52 = String             #285          // Type.STRING\n+   #53 = String             #286          // java.lang.Object\n+   #54 = String             #287          // Type.OBJECT\n+   #55 = String             #288          // java.lang.StringBuffer\n+   #56 = String             #289          // Type.STRINGBUFFER\n+   #57 = Class              #290          // org/apache/bcel/generic/ArrayType\n+   #58 = String             #291          // new ArrayType(\n+   #59 = Methodref          #57.#292      // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n+   #60 = Methodref          #57.#293      // org/apache/bcel/generic/ArrayType.getDimensions:()I\n+   #61 = Methodref          #14.#294      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #62 = String             #295          // )\n+   #63 = String             #296          // new ObjectType(\\\"\n+   #64 = Methodref          #297.#298     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #65 = String             #299          // \\\")\n+   #66 = Methodref          #210.#300     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n+   #67 = Methodref          #9.#301       // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n+   #68 = Methodref          #178.#248     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+   #69 = Fieldref           #9.#302       // org/apache/bcel/util/BCELifier.clazz:Lorg/apache/bcel/classfile/JavaClass;\n+   #70 = Class              #303          // java/io/PrintWriter\n+   #71 = Class              #304          // java/io/OutputStreamWriter\n+   #72 = Fieldref           #305.#306     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #73 = Methodref          #71.#307      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #74 = Methodref          #70.#308      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+   #75 = Fieldref           #9.#309       // org/apache/bcel/util/BCELifier.printWriter:Ljava/io/PrintWriter;\n+   #76 = Class              #310          // org/apache/bcel/generic/ConstantPoolGen\n+   #77 = Methodref          #196.#311     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #78 = Methodref          #76.#312      // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #79 = Fieldref           #9.#313       // org/apache/bcel/util/BCELifier.constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #80 = String             #314          //   public void create(OutputStream out) throws IOException {\n+   #81 = Methodref          #70.#240      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #82 = Methodref          #196.#315     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n+   #83 = String             #316          //     createFields();\n+   #84 = Methodref          #196.#317     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #85 = String             #318          //     createMethod_\n+   #86 = String             #319          // ();\n+   #87 = String             #320          //     _cg.getJavaClass().dump(out);\n+   #88 = String             #321          //   }\n+   #89 = Methodref          #70.#322      // java/io/PrintWriter.println:()V\n+   #90 = Methodref          #196.#323     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n+   #91 = String             #324          //   public static void main(String[] args) throws Exception {\n+   #92 = String             #325          //\n+   #93 = String             #326          // Creator creator = new\n+   #94 = String             #327          // Creator();\n+   #95 = String             #328          //     creator.create(new FileOutputStream(\\\"\n+   #96 = String             #329          // .class\\\"));\n+   #97 = Methodref          #9.#330       // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+   #98 = Methodref          #70.#331      // java/io/PrintWriter.flush:()V\n+   #99 = String             #332          //     field = new FieldGen(\n+  #100 = Methodref          #333.#334     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n+  #101 = Methodref          #9.#335       // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n+  #102 = Methodref          #333.#300     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n+  #103 = String             #336          // , \\\"\n+  #104 = Methodref          #333.#337     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n+  #105 = String             #338          // \\\", _cp);\n+  #106 = Methodref          #333.#339     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+  #107 = String             #340          //     field.setInitValue(\n+  #108 = Methodref          #14.#341      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #109 = String             #342          //     _cg.addField(field.getField());\n+  #110 = Methodref          #196.#343     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n+  #111 = Methodref          #196.#344     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n+  #112 = Methodref          #196.#345     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n+  #113 = Methodref          #297.#346     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #114 = Methodref          #347.#348     // org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z\n+  #115 = Methodref          #225.#349     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #116 = String             #350          // package\n+  #117 = String             #351          // ;\n+  #118 = String             #352          // import\n+  #119 = Fieldref           #9.#353       // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n+  #120 = String             #354          // .generic.*;\n+  #121 = String             #355          // .classfile.*;\n+  #122 = String             #356          // .*;\n+  #123 = String             #357          // import java.io.*;\n+  #124 = String             #358          // public class\n+  #125 = String             #359          // Creator {\n+  #126 = String             #360          //   private InstructionFactory _factory;\n+  #127 = String             #361          //   private ConstantPoolGen    _cp;\n+  #128 = String             #362          //   private ClassGen           _cg;\n+  #129 = String             #363          //   public\n+  #130 = String             #364          // Creator() {\n+  #131 = String             #365          //     _cg = new ClassGen(\\\"\n+  #132 = Methodref          #225.#366     // java/lang/String.isEmpty:()Z\n+  #133 = String             #367          // .\n+  #134 = String             #368          // \\\", \\\"\n+  #135 = Methodref          #196.#369     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n+  #136 = String             #370          // \\\",\n+  #137 = Methodref          #196.#334     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n+  #138 = String             #371          // , new String[] {\n+  #139 = String             #372          //  });\n+  #140 = String             #373          //     _cg.setMajor(\n+  #141 = Methodref          #196.#374     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n+  #142 = String             #375          // );\n+  #143 = String             #376          //     _cg.setMinor(\n+  #144 = Methodref          #196.#377     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n+  #145 = String             #378          //     _cp = _cg.getConstantPool();\n+  #146 = String             #379          //     _factory = new InstructionFactory(_cg, _cp);\n+  #147 = Methodref          #9.#380       // org/apache/bcel/util/BCELifier.printCreate:()V\n+  #148 = String             #381          //   private void createFields() {\n+  #149 = String             #382          //     FieldGen field;\n+  #150 = Methodref          #333.#383     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #151 = String             #384          //   private void createMethod_\n+  #152 = String             #385          // () {\n+  #153 = Methodref          #386.#383     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #154 = Methodref          #9.#387       // org/apache/bcel/util/BCELifier.printMain:()V\n+  #155 = String             #388          // }\n+  #156 = Class              #389          // org/apache/bcel/generic/MethodGen\n+  #157 = Methodref          #156.#390     // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #158 = String             #391          //     InstructionList il = new InstructionList();\n+  #159 = String             #392          //     MethodGen method = new MethodGen(\n+  #160 = Methodref          #386.#334     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n+  #161 = Methodref          #156.#393     // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #162 = Methodref          #156.#394     // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #163 = Methodref          #9.#395       // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #164 = Methodref          #156.#396     // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n+  #165 = String             #397          //  }, \\\"\n+  #166 = Methodref          #386.#337     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n+  #167 = String             #398          // \\\", il, _cp);\n+  #168 = Class              #399          // org/apache/bcel/util/BCELFactory\n+  #169 = Methodref          #168.#400     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #170 = Methodref          #168.#245     // org/apache/bcel/util/BCELFactory.start:()V\n+  #171 = String             #401          //     method.setMaxStack();\n+  #172 = String             #402          //     method.setMaxLocals();\n+  #173 = String             #403          //     _cg.addMethod(method.getMethod());\n+  #174 = String             #404          //     il.dispose();\n+  #175 = Methodref          #405.#406     // java/lang/Class.getPackage:()Ljava/lang/Package;\n+  #176 = Methodref          #407.#337     // java/lang/Package.getName:()Ljava/lang/String;\n+  #177 = Methodref          #405.#408     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #178 = Class              #409          // org/apache/bcel/classfile/EmptyVisitor\n+  #179 = Class              #410          // org/apache/bcel/util/BCELifier$FLAGS\n   #180 = Utf8               FLAGS\n   #181 = Utf8               InnerClasses\n   #182 = Utf8               BASE_PACKAGE\n   #183 = Utf8               Ljava/lang/String;\n   #184 = Utf8               CONSTANT_PREFIX\n   #185 = Utf8               clazz\n   #186 = Utf8               Lorg/apache/bcel/classfile/JavaClass;\n@@ -199,341 +199,335 @@\n   #189 = Utf8               constantPoolGen\n   #190 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n   #191 = Utf8               getJavaClass\n   #192 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n   #193 = Utf8               Code\n   #194 = Utf8               LineNumberTable\n   #195 = Utf8               StackMapTable\n-  #196 = Class              #417          // org/apache/bcel/classfile/JavaClass\n+  #196 = Class              #411          // org/apache/bcel/classfile/JavaClass\n   #197 = Utf8               Exceptions\n-  #198 = Class              #418          // java/lang/ClassNotFoundException\n-  #199 = Class              #419          // java/io/IOException\n+  #198 = Class              #412          // java/lang/ClassNotFoundException\n+  #199 = Class              #413          // java/io/IOException\n   #200 = Utf8               main\n   #201 = Utf8               ([Ljava/lang/String;)V\n-  #202 = Class              #420          // java/lang/Exception\n+  #202 = Class              #414          // java/lang/Exception\n   #203 = Utf8               printArgumentTypes\n   #204 = Utf8               ([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #205 = Class              #250          // java/lang/StringBuilder\n-  #206 = Utf8               printFlags\n-  #207 = Utf8               (I)Ljava/lang/String;\n-  #208 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #209 = Utf8               printType\n-  #210 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #211 = Class              #421          // org/apache/bcel/generic/Type\n-  #212 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #213 = Utf8               <init>\n-  #214 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #215 = Utf8               printCreate\n-  #216 = Utf8               ()V\n-  #217 = Class              #422          // \"[Lorg/apache/bcel/classfile/Field;\"\n-  #218 = Class              #423          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #219 = Utf8               printMain\n-  #220 = Utf8               start\n-  #221 = Utf8               visitField\n-  #222 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n-  #223 = Class              #424          // org/apache/bcel/classfile/ConstantValue\n-  #224 = Utf8               visitJavaClass\n-  #225 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n-  #226 = Class              #245          // org/apache/bcel/util/BCELifier\n-  #227 = Class              #425          // java/lang/String\n-  #228 = Class              #308          // java/io/PrintWriter\n-  #229 = Utf8               visitMethod\n-  #230 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n-  #231 = Utf8               <clinit>\n-  #232 = Utf8               SourceFile\n-  #233 = Utf8               BCELifier.java\n-  #234 = Class              #426          // org/apache/bcel/Repository\n-  #235 = NameAndType        #427:#192     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #236 = Utf8               org/apache/bcel/classfile/ClassParser\n-  #237 = NameAndType        #213:#428     // \"<init>\":(Ljava/lang/String;)V\n-  #238 = NameAndType        #429:#430     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n-  #239 = Class              #431          // java/lang/System\n-  #240 = NameAndType        #432:#433     // out:Ljava/io/PrintStream;\n-  #241 = Utf8               Usage: BCELifier classname\n-  #242 = Class              #434          // java/io/PrintStream\n-  #243 = NameAndType        #435:#428     // println:(Ljava/lang/String;)V\n-  #244 = Utf8               \\tThe class must exist on the classpath\n-  #245 = Utf8               org/apache/bcel/util/BCELifier\n-  #246 = NameAndType        #191:#192     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #247 = NameAndType        #213:#214     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #248 = NameAndType        #220:#216     // start:()V\n-  #249 = Utf8               Type.NO_ARGS\n-  #250 = Utf8               java/lang/StringBuilder\n-  #251 = NameAndType        #213:#216     // \"<init>\":()V\n-  #252 = NameAndType        #209:#212     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #253 = NameAndType        #436:#437     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #254 = Utf8               ,\n-  #255 = Utf8               new Type[] {\n-  #256 = NameAndType        #438:#439     // toString:()Ljava/lang/String;\n-  #257 = Utf8                }\n-  #258 = NameAndType        #440:#441     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #259 = NameAndType        #206:#208     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #260 = Utf8               0\n-  #261 = Utf8               org/apache/bcel/Const\n-  #262 = NameAndType        #442:#441     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #263 = NameAndType        #184:#183     // CONSTANT_PREFIX:Ljava/lang/String;\n-  #264 = Utf8               ACC_SUPER |\n-  #265 = NameAndType        #443:#441     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #266 = Utf8               ACC_BRIDGE |\n-  #267 = Utf8               ACC_VARARGS |\n-  #268 = NameAndType        #444:#445     // ACCESS_NAMES_LENGTH:I\n-  #269 = Utf8               ACC_\n-  #270 = NameAndType        #446:#207     // getAccessName:(I)Ljava/lang/String;\n-  #271 = Class              #447          // java/util/Locale\n-  #272 = NameAndType        #448:#449     // ENGLISH:Ljava/util/Locale;\n-  #273 = Class              #425          // java/lang/String\n-  #274 = NameAndType        #450:#451     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #275 = Utf8                |\n-  #276 = Utf8               ACC_BIT %x |\n-  #277 = Utf8               java/lang/Object\n-  #278 = Class              #452          // java/lang/Integer\n-  #279 = NameAndType        #453:#454     // valueOf:(I)Ljava/lang/Integer;\n-  #280 = NameAndType        #455:#456     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #281 = NameAndType        #457:#458     // length:()I\n-  #282 = NameAndType        #459:#460     // substring:(II)Ljava/lang/String;\n-  #283 = Class              #421          // org/apache/bcel/generic/Type\n-  #284 = NameAndType        #461:#462     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #285 = NameAndType        #461:#463     // getType:()B\n-  #286 = Utf8               Type.\n-  #287 = NameAndType        #464:#207     // getTypeName:(I)Ljava/lang/String;\n-  #288 = Utf8               java.lang.String\n-  #289 = NameAndType        #465:#466     // equals:(Ljava/lang/Object;)Z\n-  #290 = Utf8               Type.STRING\n-  #291 = Utf8               java.lang.Object\n-  #292 = Utf8               Type.OBJECT\n-  #293 = Utf8               java.lang.StringBuffer\n-  #294 = Utf8               Type.STRINGBUFFER\n-  #295 = Utf8               org/apache/bcel/generic/ArrayType\n-  #296 = Utf8               new ArrayType(\n-  #297 = NameAndType        #467:#468     // getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #298 = NameAndType        #469:#458     // getDimensions:()I\n-  #299 = NameAndType        #436:#470     // append:(I)Ljava/lang/StringBuilder;\n-  #300 = Utf8               )\n-  #301 = Utf8               new ObjectType(\\\"\n-  #302 = Class              #471          // org/apache/bcel/classfile/Utility\n-  #303 = NameAndType        #472:#473     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #304 = Utf8               \\\")\n-  #305 = NameAndType        #474:#439     // getSignature:()Ljava/lang/String;\n-  #306 = NameAndType        #209:#210     // printType:(Ljava/lang/String;)Ljava/lang/String;\n-  #307 = NameAndType        #185:#186     // clazz:Lorg/apache/bcel/classfile/JavaClass;\n-  #308 = Utf8               java/io/PrintWriter\n-  #309 = Utf8               java/io/OutputStreamWriter\n-  #310 = Class              #475          // java/nio/charset/StandardCharsets\n-  #311 = NameAndType        #476:#477     // UTF_8:Ljava/nio/charset/Charset;\n-  #312 = NameAndType        #213:#478     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #313 = NameAndType        #213:#479     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #314 = NameAndType        #187:#188     // printWriter:Ljava/io/PrintWriter;\n-  #315 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #316 = Class              #417          // org/apache/bcel/classfile/JavaClass\n-  #317 = NameAndType        #480:#481     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #318 = NameAndType        #213:#482     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #319 = NameAndType        #189:#190     // constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #320 = Utf8                 public void create(OutputStream out) throws IOException {\n-  #321 = NameAndType        #483:#484     // getFields:()[Lorg/apache/bcel/classfile/Field;\n-  #322 = Utf8                   createFields();\n-  #323 = NameAndType        #485:#486     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #324 = Utf8                   createMethod_\n-  #325 = Utf8               ();\n-  #326 = Utf8                   _cg.getJavaClass().dump(out);\n-  #327 = Utf8                 }\n-  #328 = NameAndType        #435:#216     // println:()V\n-  #329 = NameAndType        #487:#439     // getClassName:()Ljava/lang/String;\n-  #330 = Utf8                 public static void main(String[] args) throws Exception {\n-  #331 = Utf8\n-  #332 = Utf8               Creator creator = new\n-  #333 = Utf8               Creator();\n-  #334 = Utf8                   creator.create(new FileOutputStream(\\\"\n-  #335 = Utf8               .class\\\"));\n-  #336 = NameAndType        #224:#225     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-  #337 = NameAndType        #488:#216     // flush:()V\n-  #338 = Utf8                   field = new FieldGen(\n-  #339 = Class              #489          // org/apache/bcel/classfile/Field\n-  #340 = NameAndType        #490:#458     // getAccessFlags:()I\n-  #341 = NameAndType        #206:#207     // printFlags:(I)Ljava/lang/String;\n-  #342 = Utf8               , \\\"\n-  #343 = NameAndType        #491:#439     // getName:()Ljava/lang/String;\n-  #344 = Utf8               \\\", _cp);\n-  #345 = NameAndType        #492:#493     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-  #346 = Utf8                   field.setInitValue(\n-  #347 = NameAndType        #436:#494     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #348 = Utf8                   _cg.addField(field.getField());\n-  #349 = NameAndType        #495:#439     // getSuperclassName:()Ljava/lang/String;\n-  #350 = NameAndType        #496:#439     // getPackageName:()Ljava/lang/String;\n-  #351 = NameAndType        #497:#498     // getInterfaceNames:()[Ljava/lang/String;\n-  #352 = NameAndType        #499:#500     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #353 = Class              #501          // org/apache/commons/lang3/StringUtils\n-  #354 = NameAndType        #502:#503     // isNotEmpty:(Ljava/lang/CharSequence;)Z\n-  #355 = NameAndType        #459:#207     // substring:(I)Ljava/lang/String;\n-  #356 = Utf8               package\n-  #357 = Utf8               ;\n-  #358 = Utf8               import\n-  #359 = NameAndType        #182:#183     // BASE_PACKAGE:Ljava/lang/String;\n-  #360 = Utf8               .generic.*;\n-  #361 = Utf8               .classfile.*;\n-  #362 = Utf8               .*;\n-  #363 = Utf8               import java.io.*;\n-  #364 = Utf8               public class\n-  #365 = Utf8               Creator {\n-  #366 = Utf8                 private InstructionFactory _factory;\n-  #367 = Utf8                 private ConstantPoolGen    _cp;\n-  #368 = Utf8                 private ClassGen           _cg;\n-  #369 = Utf8                 public\n-  #370 = Utf8               Creator() {\n-  #371 = Utf8                   _cg = new ClassGen(\\\"\n-  #372 = NameAndType        #504:#505     // isEmpty:()Z\n-  #373 = Utf8               .\n-  #374 = Utf8               \\\", \\\"\n-  #375 = NameAndType        #506:#439     // getSourceFileName:()Ljava/lang/String;\n-  #376 = Utf8               \\\",\n-  #377 = Utf8               , new String[] {\n-  #378 = Utf8                });\n-  #379 = Utf8                   _cg.setMajor(\n-  #380 = NameAndType        #507:#458     // getMajor:()I\n-  #381 = Utf8               );\n-  #382 = Utf8                   _cg.setMinor(\n-  #383 = NameAndType        #508:#458     // getMinor:()I\n-  #384 = Utf8                   _cp = _cg.getConstantPool();\n-  #385 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n-  #386 = NameAndType        #215:#216     // printCreate:()V\n-  #387 = Utf8                 private void createFields() {\n-  #388 = Utf8                   FieldGen field;\n-  #389 = NameAndType        #509:#510     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #390 = Utf8                 private void createMethod_\n-  #391 = Utf8               () {\n-  #392 = Class              #511          // org/apache/bcel/classfile/Method\n-  #393 = NameAndType        #219:#216     // printMain:()V\n-  #394 = Utf8               }\n-  #395 = Utf8               org/apache/bcel/generic/MethodGen\n-  #396 = NameAndType        #213:#512     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #397 = Utf8                   InstructionList il = new InstructionList();\n-  #398 = Utf8                   MethodGen method = new MethodGen(\n-  #399 = NameAndType        #513:#468     // getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #400 = NameAndType        #514:#515     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #401 = NameAndType        #203:#204     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #402 = NameAndType        #516:#498     // getArgumentNames:()[Ljava/lang/String;\n-  #403 = Utf8                }, \\\"\n-  #404 = Utf8               \\\", il, _cp);\n-  #405 = Utf8               org/apache/bcel/util/BCELFactory\n-  #406 = NameAndType        #213:#517     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #407 = Utf8                   method.setMaxStack();\n-  #408 = Utf8                   method.setMaxLocals();\n-  #409 = Utf8                   _cg.addMethod(method.getMethod());\n-  #410 = Utf8                   il.dispose();\n-  #411 = Class              #518          // java/lang/Class\n-  #412 = NameAndType        #519:#520     // getPackage:()Ljava/lang/Package;\n-  #413 = Class              #521          // java/lang/Package\n-  #414 = NameAndType        #522:#439     // getSimpleName:()Ljava/lang/String;\n-  #415 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-  #416 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n-  #417 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #418 = Utf8               java/lang/ClassNotFoundException\n-  #419 = Utf8               java/io/IOException\n-  #420 = Utf8               java/lang/Exception\n-  #421 = Utf8               org/apache/bcel/generic/Type\n-  #422 = Utf8               [Lorg/apache/bcel/classfile/Field;\n-  #423 = Utf8               [Lorg/apache/bcel/classfile/Method;\n-  #424 = Utf8               org/apache/bcel/classfile/ConstantValue\n-  #425 = Utf8               java/lang/String\n-  #426 = Utf8               org/apache/bcel/Repository\n-  #427 = Utf8               lookupClass\n-  #428 = Utf8               (Ljava/lang/String;)V\n-  #429 = Utf8               parse\n-  #430 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n-  #431 = Utf8               java/lang/System\n-  #432 = Utf8               out\n-  #433 = Utf8               Ljava/io/PrintStream;\n-  #434 = Utf8               java/io/PrintStream\n-  #435 = Utf8               println\n-  #436 = Utf8               append\n-  #437 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #438 = Utf8               toString\n-  #439 = Utf8               ()Ljava/lang/String;\n-  #440 = Utf8               UNKNOWN\n-  #441 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #442 = Utf8               CLASS\n-  #443 = Utf8               METHOD\n-  #444 = Utf8               ACCESS_NAMES_LENGTH\n-  #445 = Utf8               I\n-  #446 = Utf8               getAccessName\n-  #447 = Utf8               java/util/Locale\n-  #448 = Utf8               ENGLISH\n-  #449 = Utf8               Ljava/util/Locale;\n-  #450 = Utf8               toUpperCase\n-  #451 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #452 = Utf8               java/lang/Integer\n-  #453 = Utf8               valueOf\n-  #454 = Utf8               (I)Ljava/lang/Integer;\n-  #455 = Utf8               format\n-  #456 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #457 = Utf8               length\n-  #458 = Utf8               ()I\n-  #459 = Utf8               substring\n-  #460 = Utf8               (II)Ljava/lang/String;\n-  #461 = Utf8               getType\n-  #462 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #463 = Utf8               ()B\n-  #464 = Utf8               getTypeName\n-  #465 = Utf8               equals\n-  #466 = Utf8               (Ljava/lang/Object;)Z\n-  #467 = Utf8               getBasicType\n-  #468 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #469 = Utf8               getDimensions\n-  #470 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #471 = Utf8               org/apache/bcel/classfile/Utility\n-  #472 = Utf8               signatureToString\n-  #473 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #474 = Utf8               getSignature\n-  #475 = Utf8               java/nio/charset/StandardCharsets\n-  #476 = Utf8               UTF_8\n-  #477 = Utf8               Ljava/nio/charset/Charset;\n-  #478 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #479 = Utf8               (Ljava/io/Writer;Z)V\n-  #480 = Utf8               getConstantPool\n-  #481 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #482 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #483 = Utf8               getFields\n-  #484 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n-  #485 = Utf8               getMethods\n-  #486 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #487 = Utf8               getClassName\n-  #488 = Utf8               flush\n-  #489 = Utf8               org/apache/bcel/classfile/Field\n-  #490 = Utf8               getAccessFlags\n-  #491 = Utf8               getName\n-  #492 = Utf8               getConstantValue\n-  #493 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n-  #494 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #495 = Utf8               getSuperclassName\n-  #496 = Utf8               getPackageName\n-  #497 = Utf8               getInterfaceNames\n-  #498 = Utf8               ()[Ljava/lang/String;\n-  #499 = Utf8               printArray\n-  #500 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #501 = Utf8               org/apache/commons/lang3/StringUtils\n-  #502 = Utf8               isNotEmpty\n-  #503 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #504 = Utf8               isEmpty\n-  #505 = Utf8               ()Z\n-  #506 = Utf8               getSourceFileName\n-  #507 = Utf8               getMajor\n-  #508 = Utf8               getMinor\n-  #509 = Utf8               accept\n-  #510 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #511 = Utf8               org/apache/bcel/classfile/Method\n-  #512 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #513 = Utf8               getReturnType\n-  #514 = Utf8               getArgumentTypes\n-  #515 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n-  #516 = Utf8               getArgumentNames\n-  #517 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #518 = Utf8               java/lang/Class\n-  #519 = Utf8               getPackage\n-  #520 = Utf8               ()Ljava/lang/Package;\n-  #521 = Utf8               java/lang/Package\n-  #522 = Utf8               getSimpleName\n+  #205 = Utf8               printFlags\n+  #206 = Utf8               (I)Ljava/lang/String;\n+  #207 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #208 = Utf8               printType\n+  #209 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #210 = Class              #415          // org/apache/bcel/generic/Type\n+  #211 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #212 = Utf8               <init>\n+  #213 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #214 = Utf8               printCreate\n+  #215 = Utf8               ()V\n+  #216 = Class              #416          // \"[Lorg/apache/bcel/classfile/Field;\"\n+  #217 = Class              #417          // \"[Lorg/apache/bcel/classfile/Method;\"\n+  #218 = Utf8               printMain\n+  #219 = Utf8               start\n+  #220 = Utf8               visitField\n+  #221 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n+  #222 = Class              #418          // org/apache/bcel/classfile/ConstantValue\n+  #223 = Utf8               visitJavaClass\n+  #224 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n+  #225 = Class              #419          // java/lang/String\n+  #226 = Utf8               visitMethod\n+  #227 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n+  #228 = Utf8               <clinit>\n+  #229 = Utf8               SourceFile\n+  #230 = Utf8               BCELifier.java\n+  #231 = Class              #420          // org/apache/bcel/Repository\n+  #232 = NameAndType        #421:#192     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #233 = Utf8               org/apache/bcel/classfile/ClassParser\n+  #234 = NameAndType        #212:#422     // \"<init>\":(Ljava/lang/String;)V\n+  #235 = NameAndType        #423:#424     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n+  #236 = Class              #425          // java/lang/System\n+  #237 = NameAndType        #426:#427     // out:Ljava/io/PrintStream;\n+  #238 = Utf8               Usage: BCELifier classname\n+  #239 = Class              #428          // java/io/PrintStream\n+  #240 = NameAndType        #429:#422     // println:(Ljava/lang/String;)V\n+  #241 = Utf8               \\tThe class must exist on the classpath\n+  #242 = Utf8               org/apache/bcel/util/BCELifier\n+  #243 = NameAndType        #191:#192     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #244 = NameAndType        #212:#213     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #245 = NameAndType        #219:#215     // start:()V\n+  #246 = Utf8               Type.NO_ARGS\n+  #247 = Utf8               java/lang/StringBuilder\n+  #248 = NameAndType        #212:#215     // \"<init>\":()V\n+  #249 = NameAndType        #208:#211     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #250 = NameAndType        #430:#431     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #251 = Utf8               ,\n+  #252 = Utf8               new Type[] {\n+  #253 = NameAndType        #432:#433     // toString:()Ljava/lang/String;\n+  #254 = Utf8                }\n+  #255 = NameAndType        #434:#435     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #256 = NameAndType        #205:#207     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #257 = Utf8               0\n+  #258 = Utf8               org/apache/bcel/Const\n+  #259 = NameAndType        #436:#435     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #260 = NameAndType        #184:#183     // CONSTANT_PREFIX:Ljava/lang/String;\n+  #261 = Utf8               ACC_SUPER |\n+  #262 = NameAndType        #437:#435     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #263 = Utf8               ACC_BRIDGE |\n+  #264 = Utf8               ACC_VARARGS |\n+  #265 = NameAndType        #438:#439     // ACCESS_NAMES_LENGTH:I\n+  #266 = Utf8               ACC_\n+  #267 = NameAndType        #440:#206     // getAccessName:(I)Ljava/lang/String;\n+  #268 = Class              #441          // java/util/Locale\n+  #269 = NameAndType        #442:#443     // ENGLISH:Ljava/util/Locale;\n+  #270 = NameAndType        #444:#445     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #271 = Utf8                |\n+  #272 = Utf8               ACC_BIT %x |\n+  #273 = Utf8               java/lang/Object\n+  #274 = Class              #446          // java/lang/Integer\n+  #275 = NameAndType        #447:#448     // valueOf:(I)Ljava/lang/Integer;\n+  #276 = NameAndType        #449:#450     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #277 = NameAndType        #451:#452     // length:()I\n+  #278 = NameAndType        #453:#454     // substring:(II)Ljava/lang/String;\n+  #279 = NameAndType        #455:#456     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #280 = NameAndType        #455:#457     // getType:()B\n+  #281 = Utf8               Type.\n+  #282 = NameAndType        #458:#206     // getTypeName:(I)Ljava/lang/String;\n+  #283 = Utf8               java.lang.String\n+  #284 = NameAndType        #459:#460     // equals:(Ljava/lang/Object;)Z\n+  #285 = Utf8               Type.STRING\n+  #286 = Utf8               java.lang.Object\n+  #287 = Utf8               Type.OBJECT\n+  #288 = Utf8               java.lang.StringBuffer\n+  #289 = Utf8               Type.STRINGBUFFER\n+  #290 = Utf8               org/apache/bcel/generic/ArrayType\n+  #291 = Utf8               new ArrayType(\n+  #292 = NameAndType        #461:#462     // getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #293 = NameAndType        #463:#452     // getDimensions:()I\n+  #294 = NameAndType        #430:#464     // append:(I)Ljava/lang/StringBuilder;\n+  #295 = Utf8               )\n+  #296 = Utf8               new ObjectType(\\\"\n+  #297 = Class              #465          // org/apache/bcel/classfile/Utility\n+  #298 = NameAndType        #466:#467     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #299 = Utf8               \\\")\n+  #300 = NameAndType        #468:#433     // getSignature:()Ljava/lang/String;\n+  #301 = NameAndType        #208:#209     // printType:(Ljava/lang/String;)Ljava/lang/String;\n+  #302 = NameAndType        #185:#186     // clazz:Lorg/apache/bcel/classfile/JavaClass;\n+  #303 = Utf8               java/io/PrintWriter\n+  #304 = Utf8               java/io/OutputStreamWriter\n+  #305 = Class              #469          // java/nio/charset/StandardCharsets\n+  #306 = NameAndType        #470:#471     // UTF_8:Ljava/nio/charset/Charset;\n+  #307 = NameAndType        #212:#472     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #308 = NameAndType        #212:#473     // \"<init>\":(Ljava/io/Writer;Z)V\n+  #309 = NameAndType        #187:#188     // printWriter:Ljava/io/PrintWriter;\n+  #310 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #311 = NameAndType        #474:#475     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #312 = NameAndType        #212:#476     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #313 = NameAndType        #189:#190     // constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #314 = Utf8                 public void create(OutputStream out) throws IOException {\n+  #315 = NameAndType        #477:#478     // getFields:()[Lorg/apache/bcel/classfile/Field;\n+  #316 = Utf8                   createFields();\n+  #317 = NameAndType        #479:#480     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #318 = Utf8                   createMethod_\n+  #319 = Utf8               ();\n+  #320 = Utf8                   _cg.getJavaClass().dump(out);\n+  #321 = Utf8                 }\n+  #322 = NameAndType        #429:#215     // println:()V\n+  #323 = NameAndType        #481:#433     // getClassName:()Ljava/lang/String;\n+  #324 = Utf8                 public static void main(String[] args) throws Exception {\n+  #325 = Utf8\n+  #326 = Utf8               Creator creator = new\n+  #327 = Utf8               Creator();\n+  #328 = Utf8                   creator.create(new FileOutputStream(\\\"\n+  #329 = Utf8               .class\\\"));\n+  #330 = NameAndType        #223:#224     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+  #331 = NameAndType        #482:#215     // flush:()V\n+  #332 = Utf8                   field = new FieldGen(\n+  #333 = Class              #483          // org/apache/bcel/classfile/Field\n+  #334 = NameAndType        #484:#452     // getAccessFlags:()I\n+  #335 = NameAndType        #205:#206     // printFlags:(I)Ljava/lang/String;\n+  #336 = Utf8               , \\\"\n+  #337 = NameAndType        #485:#433     // getName:()Ljava/lang/String;\n+  #338 = Utf8               \\\", _cp);\n+  #339 = NameAndType        #486:#487     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+  #340 = Utf8                   field.setInitValue(\n+  #341 = NameAndType        #430:#488     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #342 = Utf8                   _cg.addField(field.getField());\n+  #343 = NameAndType        #489:#433     // getSuperclassName:()Ljava/lang/String;\n+  #344 = NameAndType        #490:#433     // getPackageName:()Ljava/lang/String;\n+  #345 = NameAndType        #491:#492     // getInterfaceNames:()[Ljava/lang/String;\n+  #346 = NameAndType        #493:#494     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #347 = Class              #495          // org/apache/commons/lang3/StringUtils\n+  #348 = NameAndType        #496:#497     // isNotEmpty:(Ljava/lang/CharSequence;)Z\n+  #349 = NameAndType        #453:#206     // substring:(I)Ljava/lang/String;\n+  #350 = Utf8               package\n+  #351 = Utf8               ;\n+  #352 = Utf8               import\n+  #353 = NameAndType        #182:#183     // BASE_PACKAGE:Ljava/lang/String;\n+  #354 = Utf8               .generic.*;\n+  #355 = Utf8               .classfile.*;\n+  #356 = Utf8               .*;\n+  #357 = Utf8               import java.io.*;\n+  #358 = Utf8               public class\n+  #359 = Utf8               Creator {\n+  #360 = Utf8                 private InstructionFactory _factory;\n+  #361 = Utf8                 private ConstantPoolGen    _cp;\n+  #362 = Utf8                 private ClassGen           _cg;\n+  #363 = Utf8                 public\n+  #364 = Utf8               Creator() {\n+  #365 = Utf8                   _cg = new ClassGen(\\\"\n+  #366 = NameAndType        #498:#499     // isEmpty:()Z\n+  #367 = Utf8               .\n+  #368 = Utf8               \\\", \\\"\n+  #369 = NameAndType        #500:#433     // getSourceFileName:()Ljava/lang/String;\n+  #370 = Utf8               \\\",\n+  #371 = Utf8               , new String[] {\n+  #372 = Utf8                });\n+  #373 = Utf8                   _cg.setMajor(\n+  #374 = NameAndType        #501:#452     // getMajor:()I\n+  #375 = Utf8               );\n+  #376 = Utf8                   _cg.setMinor(\n+  #377 = NameAndType        #502:#452     // getMinor:()I\n+  #378 = Utf8                   _cp = _cg.getConstantPool();\n+  #379 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n+  #380 = NameAndType        #214:#215     // printCreate:()V\n+  #381 = Utf8                 private void createFields() {\n+  #382 = Utf8                   FieldGen field;\n+  #383 = NameAndType        #503:#504     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #384 = Utf8                 private void createMethod_\n+  #385 = Utf8               () {\n+  #386 = Class              #505          // org/apache/bcel/classfile/Method\n+  #387 = NameAndType        #218:#215     // printMain:()V\n+  #388 = Utf8               }\n+  #389 = Utf8               org/apache/bcel/generic/MethodGen\n+  #390 = NameAndType        #212:#506     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #391 = Utf8                   InstructionList il = new InstructionList();\n+  #392 = Utf8                   MethodGen method = new MethodGen(\n+  #393 = NameAndType        #507:#462     // getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #394 = NameAndType        #508:#509     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #395 = NameAndType        #203:#204     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #396 = NameAndType        #510:#492     // getArgumentNames:()[Ljava/lang/String;\n+  #397 = Utf8                }, \\\"\n+  #398 = Utf8               \\\", il, _cp);\n+  #399 = Utf8               org/apache/bcel/util/BCELFactory\n+  #400 = NameAndType        #212:#511     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #401 = Utf8                   method.setMaxStack();\n+  #402 = Utf8                   method.setMaxLocals();\n+  #403 = Utf8                   _cg.addMethod(method.getMethod());\n+  #404 = Utf8                   il.dispose();\n+  #405 = Class              #512          // java/lang/Class\n+  #406 = NameAndType        #513:#514     // getPackage:()Ljava/lang/Package;\n+  #407 = Class              #515          // java/lang/Package\n+  #408 = NameAndType        #516:#433     // getSimpleName:()Ljava/lang/String;\n+  #409 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+  #410 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n+  #411 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #412 = Utf8               java/lang/ClassNotFoundException\n+  #413 = Utf8               java/io/IOException\n+  #414 = Utf8               java/lang/Exception\n+  #415 = Utf8               org/apache/bcel/generic/Type\n+  #416 = Utf8               [Lorg/apache/bcel/classfile/Field;\n+  #417 = Utf8               [Lorg/apache/bcel/classfile/Method;\n+  #418 = Utf8               org/apache/bcel/classfile/ConstantValue\n+  #419 = Utf8               java/lang/String\n+  #420 = Utf8               org/apache/bcel/Repository\n+  #421 = Utf8               lookupClass\n+  #422 = Utf8               (Ljava/lang/String;)V\n+  #423 = Utf8               parse\n+  #424 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n+  #425 = Utf8               java/lang/System\n+  #426 = Utf8               out\n+  #427 = Utf8               Ljava/io/PrintStream;\n+  #428 = Utf8               java/io/PrintStream\n+  #429 = Utf8               println\n+  #430 = Utf8               append\n+  #431 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #432 = Utf8               toString\n+  #433 = Utf8               ()Ljava/lang/String;\n+  #434 = Utf8               UNKNOWN\n+  #435 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #436 = Utf8               CLASS\n+  #437 = Utf8               METHOD\n+  #438 = Utf8               ACCESS_NAMES_LENGTH\n+  #439 = Utf8               I\n+  #440 = Utf8               getAccessName\n+  #441 = Utf8               java/util/Locale\n+  #442 = Utf8               ENGLISH\n+  #443 = Utf8               Ljava/util/Locale;\n+  #444 = Utf8               toUpperCase\n+  #445 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #446 = Utf8               java/lang/Integer\n+  #447 = Utf8               valueOf\n+  #448 = Utf8               (I)Ljava/lang/Integer;\n+  #449 = Utf8               format\n+  #450 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #451 = Utf8               length\n+  #452 = Utf8               ()I\n+  #453 = Utf8               substring\n+  #454 = Utf8               (II)Ljava/lang/String;\n+  #455 = Utf8               getType\n+  #456 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #457 = Utf8               ()B\n+  #458 = Utf8               getTypeName\n+  #459 = Utf8               equals\n+  #460 = Utf8               (Ljava/lang/Object;)Z\n+  #461 = Utf8               getBasicType\n+  #462 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #463 = Utf8               getDimensions\n+  #464 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #465 = Utf8               org/apache/bcel/classfile/Utility\n+  #466 = Utf8               signatureToString\n+  #467 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #468 = Utf8               getSignature\n+  #469 = Utf8               java/nio/charset/StandardCharsets\n+  #470 = Utf8               UTF_8\n+  #471 = Utf8               Ljava/nio/charset/Charset;\n+  #472 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #473 = Utf8               (Ljava/io/Writer;Z)V\n+  #474 = Utf8               getConstantPool\n+  #475 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #476 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #477 = Utf8               getFields\n+  #478 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n+  #479 = Utf8               getMethods\n+  #480 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #481 = Utf8               getClassName\n+  #482 = Utf8               flush\n+  #483 = Utf8               org/apache/bcel/classfile/Field\n+  #484 = Utf8               getAccessFlags\n+  #485 = Utf8               getName\n+  #486 = Utf8               getConstantValue\n+  #487 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n+  #488 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #489 = Utf8               getSuperclassName\n+  #490 = Utf8               getPackageName\n+  #491 = Utf8               getInterfaceNames\n+  #492 = Utf8               ()[Ljava/lang/String;\n+  #493 = Utf8               printArray\n+  #494 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #495 = Utf8               org/apache/commons/lang3/StringUtils\n+  #496 = Utf8               isNotEmpty\n+  #497 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #498 = Utf8               isEmpty\n+  #499 = Utf8               ()Z\n+  #500 = Utf8               getSourceFileName\n+  #501 = Utf8               getMajor\n+  #502 = Utf8               getMinor\n+  #503 = Utf8               accept\n+  #504 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #505 = Utf8               org/apache/bcel/classfile/Method\n+  #506 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #507 = Utf8               getReturnType\n+  #508 = Utf8               getArgumentTypes\n+  #509 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n+  #510 = Utf8               getArgumentNames\n+  #511 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #512 = Utf8               java/lang/Class\n+  #513 = Utf8               getPackage\n+  #514 = Utf8               ()Ljava/lang/Package;\n+  #515 = Utf8               java/lang/Package\n+  #516 = Utf8               getSimpleName\n {\n   private static final java.lang.String BASE_PACKAGE;\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.lang.String CONSTANT_PREFIX;\n     descriptor: Ljava/lang/String;\n"}]}
