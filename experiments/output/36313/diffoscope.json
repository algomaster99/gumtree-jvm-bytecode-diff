{"diffoscope-json-version": 1, "source1": "first/VMSVersioningFTPEntryParser.class", "source2": "second/VMSVersioningFTPEntryParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,170 +1,170 @@\n-  SHA-256 checksum 325a9c6e95464369f1cb9cda857e1f9470d8d08f4410fe1e3bda46dadad59f05\n+  SHA-256 checksum 99166bd806136e3357519c5c0426867a9f1edd3a75d400e64443a47cb05e1de8\n   Compiled from \"VMSVersioningFTPEntryParser.java\"\n public class org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser extends org.apache.commons.net.ftp.parser.VMSFTPEntryParser\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-  super_class: #32                        // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+  this_class: #2                          // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+  super_class: #8                         // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n   interfaces: 0, fields: 2, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #4.#85        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #2 = Methodref          #32.#86       // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n-    #3 = Methodref          #4.#87        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #4 = Class              #88           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-    #5 = String             #89           // (.*?);([0-9]+)\\\\s*.*\n-    #6 = Methodref          #90.#91       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #7 = Fieldref           #4.#92        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n-    #8 = Class              #93           // java/util/regex/PatternSyntaxException\n-    #9 = Class              #94           // java/lang/IllegalArgumentException\n-   #10 = String             #95           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #11 = Methodref          #9.#96        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Class              #97           // java/util/HashMap\n-   #13 = Methodref          #12.#86       // java/util/HashMap.\"<init>\":()V\n-   #14 = InterfaceMethodref #78.#98       // java/util/List.listIterator:()Ljava/util/ListIterator;\n-   #15 = InterfaceMethodref #77.#99       // java/util/ListIterator.hasNext:()Z\n-   #16 = InterfaceMethodref #77.#100      // java/util/ListIterator.next:()Ljava/lang/Object;\n-   #17 = Class              #101          // java/lang/String\n-   #18 = Methodref          #17.#102      // java/lang/String.trim:()Ljava/lang/String;\n-   #19 = Methodref          #90.#103      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #20 = Methodref          #80.#104      // java/util/regex/Matcher.matches:()Z\n-   #21 = Methodref          #80.#105      // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n-   #22 = InterfaceMethodref #79.#106      // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n-   #23 = Methodref          #25.#107      // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #24 = Methodref          #12.#108      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = Class              #109          // java/lang/Integer\n-   #26 = Methodref          #25.#110      // java/lang/Integer.intValue:()I\n-   #27 = InterfaceMethodref #77.#111      // java/util/ListIterator.remove:()V\n-   #28 = Methodref          #12.#112      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #29 = InterfaceMethodref #77.#113      // java/util/ListIterator.hasPrevious:()Z\n-   #30 = InterfaceMethodref #77.#114      // java/util/ListIterator.previous:()Ljava/lang/Object;\n-   #31 = Methodref          #25.#115      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #32 = Class              #116          // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n-   #33 = Utf8               PRE_PARSE_REGEX\n-   #34 = Utf8               Ljava/lang/String;\n-   #35 = Utf8               ConstantValue\n-   #36 = Utf8               preparsePattern\n-   #37 = Utf8               Ljava/util/regex/Pattern;\n-   #38 = Utf8               <init>\n-   #39 = Utf8               ()V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser;\n-   #45 = Utf8               (Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #46 = Utf8               pse\n-   #47 = Utf8               Ljava/util/regex/PatternSyntaxException;\n-   #48 = Utf8               config\n-   #49 = Utf8               Lorg/apache/commons/net/ftp/FTPClientConfig;\n-   #50 = Utf8               StackMapTable\n-   #51 = Class              #117          // org/apache/commons/net/ftp/FTPClientConfig\n-   #52 = Utf8               isVersioning\n-   #53 = Utf8               ()Z\n-   #54 = Utf8               preParse\n-   #55 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-   #56 = Utf8               name\n-   #57 = Utf8               version\n-   #58 = Utf8               nv\n-   #59 = Utf8               Ljava/lang/Integer;\n-   #60 = Utf8               existing\n-   #61 = Utf8               entry\n-   #62 = Utf8               result\n-   #63 = Utf8               Ljava/util/regex/MatchResult;\n-   #64 = Utf8               _preparse_matcher_\n-   #65 = Utf8               Ljava/util/regex/Matcher;\n-   #66 = Utf8               I\n-   #67 = Utf8               original\n-   #68 = Utf8               Ljava/util/List;\n-   #69 = Utf8               existingEntries\n-   #70 = Utf8               Ljava/util/HashMap;\n-   #71 = Utf8               iter\n-   #72 = Utf8               Ljava/util/ListIterator;\n-   #73 = Utf8               LocalVariableTypeTable\n-   #74 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-   #75 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;\n-   #76 = Utf8               Ljava/util/ListIterator<Ljava/lang/String;>;\n-   #77 = Class              #118          // java/util/ListIterator\n-   #78 = Class              #119          // java/util/List\n-   #79 = Class              #120          // java/util/regex/MatchResult\n-   #80 = Class              #121          // java/util/regex/Matcher\n-   #81 = Utf8               Signature\n-   #82 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               VMSVersioningFTPEntryParser.java\n-   #85 = NameAndType        #38:#45       // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #86 = NameAndType        #38:#39       // \"<init>\":()V\n-   #87 = NameAndType        #122:#45      // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #88 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-   #89 = Utf8               (.*?);([0-9]+)\\\\s*.*\n-   #90 = Class              #123          // java/util/regex/Pattern\n-   #91 = NameAndType        #124:#125     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #92 = NameAndType        #36:#37       // preparsePattern:Ljava/util/regex/Pattern;\n-   #93 = Utf8               java/util/regex/PatternSyntaxException\n-   #94 = Utf8               java/lang/IllegalArgumentException\n-   #95 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #96 = NameAndType        #38:#126      // \"<init>\":(Ljava/lang/String;)V\n-   #97 = Utf8               java/util/HashMap\n-   #98 = NameAndType        #127:#128     // listIterator:()Ljava/util/ListIterator;\n-   #99 = NameAndType        #129:#53      // hasNext:()Z\n-  #100 = NameAndType        #130:#131     // next:()Ljava/lang/Object;\n-  #101 = Utf8               java/lang/String\n-  #102 = NameAndType        #132:#133     // trim:()Ljava/lang/String;\n-  #103 = NameAndType        #134:#135     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #104 = NameAndType        #136:#53      // matches:()Z\n-  #105 = NameAndType        #137:#138     // toMatchResult:()Ljava/util/regex/MatchResult;\n-  #106 = NameAndType        #139:#140     // group:(I)Ljava/lang/String;\n-  #107 = NameAndType        #141:#142     // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #108 = NameAndType        #143:#144     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #109 = Utf8               java/lang/Integer\n-  #110 = NameAndType        #145:#146     // intValue:()I\n-  #111 = NameAndType        #147:#39      // remove:()V\n-  #112 = NameAndType        #148:#149     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #113 = NameAndType        #150:#53      // hasPrevious:()Z\n-  #114 = NameAndType        #151:#131     // previous:()Ljava/lang/Object;\n-  #115 = NameAndType        #152:#153     // parseInt:(Ljava/lang/String;)I\n-  #116 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n-  #117 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n-  #118 = Utf8               java/util/ListIterator\n-  #119 = Utf8               java/util/List\n-  #120 = Utf8               java/util/regex/MatchResult\n-  #121 = Utf8               java/util/regex/Matcher\n-  #122 = Utf8               configure\n-  #123 = Utf8               java/util/regex/Pattern\n-  #124 = Utf8               compile\n-  #125 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #126 = Utf8               (Ljava/lang/String;)V\n-  #127 = Utf8               listIterator\n-  #128 = Utf8               ()Ljava/util/ListIterator;\n-  #129 = Utf8               hasNext\n-  #130 = Utf8               next\n-  #131 = Utf8               ()Ljava/lang/Object;\n-  #132 = Utf8               trim\n-  #133 = Utf8               ()Ljava/lang/String;\n-  #134 = Utf8               matcher\n-  #135 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #136 = Utf8               matches\n-  #137 = Utf8               toMatchResult\n-  #138 = Utf8               ()Ljava/util/regex/MatchResult;\n-  #139 = Utf8               group\n-  #140 = Utf8               (I)Ljava/lang/String;\n-  #141 = Utf8               valueOf\n-  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #143 = Utf8               get\n-  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #145 = Utf8               intValue\n-  #146 = Utf8               ()I\n-  #147 = Utf8               remove\n-  #148 = Utf8               put\n-  #149 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #150 = Utf8               hasPrevious\n-  #151 = Utf8               previous\n-  #152 = Utf8               parseInt\n-  #153 = Utf8               (Ljava/lang/String;)I\n+    #1 = Methodref          #2.#3         // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #2 = Class              #4            // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #4 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+   #11 = Utf8               ()V\n+   #12 = Methodref          #2.#13        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #13 = NameAndType        #14:#6        // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #14 = Utf8               configure\n+   #15 = String             #16           // (.*?);([0-9]+)\\\\s*.*\n+   #16 = Utf8               (.*?);([0-9]+)\\\\s*.*\n+   #17 = Methodref          #18.#19       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #18 = Class              #20           // java/util/regex/Pattern\n+   #19 = NameAndType        #21:#22       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #20 = Utf8               java/util/regex/Pattern\n+   #21 = Utf8               compile\n+   #22 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #23 = Fieldref           #2.#24        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n+   #24 = NameAndType        #25:#26       // preparsePattern:Ljava/util/regex/Pattern;\n+   #25 = Utf8               preparsePattern\n+   #26 = Utf8               Ljava/util/regex/Pattern;\n+   #27 = Class              #28           // java/util/regex/PatternSyntaxException\n+   #28 = Utf8               java/util/regex/PatternSyntaxException\n+   #29 = Class              #30           // java/lang/IllegalArgumentException\n+   #30 = Utf8               java/lang/IllegalArgumentException\n+   #31 = String             #32           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #32 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #33 = Methodref          #29.#34       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = NameAndType        #5:#35        // \"<init>\":(Ljava/lang/String;)V\n+   #35 = Utf8               (Ljava/lang/String;)V\n+   #36 = Class              #37           // java/util/HashMap\n+   #37 = Utf8               java/util/HashMap\n+   #38 = Methodref          #36.#9        // java/util/HashMap.\"<init>\":()V\n+   #39 = InterfaceMethodref #40.#41       // java/util/List.listIterator:()Ljava/util/ListIterator;\n+   #40 = Class              #42           // java/util/List\n+   #41 = NameAndType        #43:#44       // listIterator:()Ljava/util/ListIterator;\n+   #42 = Utf8               java/util/List\n+   #43 = Utf8               listIterator\n+   #44 = Utf8               ()Ljava/util/ListIterator;\n+   #45 = InterfaceMethodref #46.#47       // java/util/ListIterator.hasNext:()Z\n+   #46 = Class              #48           // java/util/ListIterator\n+   #47 = NameAndType        #49:#50       // hasNext:()Z\n+   #48 = Utf8               java/util/ListIterator\n+   #49 = Utf8               hasNext\n+   #50 = Utf8               ()Z\n+   #51 = InterfaceMethodref #46.#52       // java/util/ListIterator.next:()Ljava/lang/Object;\n+   #52 = NameAndType        #53:#54       // next:()Ljava/lang/Object;\n+   #53 = Utf8               next\n+   #54 = Utf8               ()Ljava/lang/Object;\n+   #55 = Class              #56           // java/lang/String\n+   #56 = Utf8               java/lang/String\n+   #57 = Methodref          #55.#58       // java/lang/String.trim:()Ljava/lang/String;\n+   #58 = NameAndType        #59:#60       // trim:()Ljava/lang/String;\n+   #59 = Utf8               trim\n+   #60 = Utf8               ()Ljava/lang/String;\n+   #61 = Methodref          #18.#62       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #62 = NameAndType        #63:#64       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #63 = Utf8               matcher\n+   #64 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #65 = Methodref          #66.#67       // java/util/regex/Matcher.matches:()Z\n+   #66 = Class              #68           // java/util/regex/Matcher\n+   #67 = NameAndType        #69:#50       // matches:()Z\n+   #68 = Utf8               java/util/regex/Matcher\n+   #69 = Utf8               matches\n+   #70 = Methodref          #66.#71       // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n+   #71 = NameAndType        #72:#73       // toMatchResult:()Ljava/util/regex/MatchResult;\n+   #72 = Utf8               toMatchResult\n+   #73 = Utf8               ()Ljava/util/regex/MatchResult;\n+   #74 = InterfaceMethodref #75.#76       // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+   #75 = Class              #77           // java/util/regex/MatchResult\n+   #76 = NameAndType        #78:#79       // group:(I)Ljava/lang/String;\n+   #77 = Utf8               java/util/regex/MatchResult\n+   #78 = Utf8               group\n+   #79 = Utf8               (I)Ljava/lang/String;\n+   #80 = Methodref          #81.#82       // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #81 = Class              #83           // java/lang/Integer\n+   #82 = NameAndType        #84:#85       // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #83 = Utf8               java/lang/Integer\n+   #84 = Utf8               valueOf\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+   #86 = Methodref          #36.#87       // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #87 = NameAndType        #88:#89       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #88 = Utf8               get\n+   #89 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #90 = Methodref          #81.#91       // java/lang/Integer.intValue:()I\n+   #91 = NameAndType        #92:#93       // intValue:()I\n+   #92 = Utf8               intValue\n+   #93 = Utf8               ()I\n+   #94 = InterfaceMethodref #46.#95       // java/util/ListIterator.remove:()V\n+   #95 = NameAndType        #96:#11       // remove:()V\n+   #96 = Utf8               remove\n+   #97 = Methodref          #36.#98       // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #98 = NameAndType        #99:#100      // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #99 = Utf8               put\n+  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #101 = InterfaceMethodref #46.#102      // java/util/ListIterator.hasPrevious:()Z\n+  #102 = NameAndType        #103:#50      // hasPrevious:()Z\n+  #103 = Utf8               hasPrevious\n+  #104 = InterfaceMethodref #46.#105      // java/util/ListIterator.previous:()Ljava/lang/Object;\n+  #105 = NameAndType        #106:#54      // previous:()Ljava/lang/Object;\n+  #106 = Utf8               previous\n+  #107 = Methodref          #81.#108      // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #108 = NameAndType        #109:#110     // parseInt:(Ljava/lang/String;)I\n+  #109 = Utf8               parseInt\n+  #110 = Utf8               (Ljava/lang/String;)I\n+  #111 = Utf8               PRE_PARSE_REGEX\n+  #112 = Utf8               Ljava/lang/String;\n+  #113 = Utf8               ConstantValue\n+  #114 = Utf8               Code\n+  #115 = Utf8               LineNumberTable\n+  #116 = Utf8               LocalVariableTable\n+  #117 = Utf8               this\n+  #118 = Utf8               Lorg/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser;\n+  #119 = Utf8               pse\n+  #120 = Utf8               Ljava/util/regex/PatternSyntaxException;\n+  #121 = Utf8               config\n+  #122 = Utf8               Lorg/apache/commons/net/ftp/FTPClientConfig;\n+  #123 = Utf8               StackMapTable\n+  #124 = Class              #125          // org/apache/commons/net/ftp/FTPClientConfig\n+  #125 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n+  #126 = Utf8               isVersioning\n+  #127 = Utf8               preParse\n+  #128 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #129 = Utf8               name\n+  #130 = Utf8               version\n+  #131 = Utf8               nv\n+  #132 = Utf8               Ljava/lang/Integer;\n+  #133 = Utf8               existing\n+  #134 = Utf8               entry\n+  #135 = Utf8               result\n+  #136 = Utf8               Ljava/util/regex/MatchResult;\n+  #137 = Utf8               _preparse_matcher_\n+  #138 = Utf8               Ljava/util/regex/Matcher;\n+  #139 = Utf8               I\n+  #140 = Utf8               original\n+  #141 = Utf8               Ljava/util/List;\n+  #142 = Utf8               existingEntries\n+  #143 = Utf8               Ljava/util/HashMap;\n+  #144 = Utf8               iter\n+  #145 = Utf8               Ljava/util/ListIterator;\n+  #146 = Utf8               LocalVariableTypeTable\n+  #147 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #148 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;\n+  #149 = Utf8               Ljava/util/ListIterator<Ljava/lang/String;>;\n+  #150 = Utf8               Signature\n+  #151 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+  #152 = Utf8               SourceFile\n+  #153 = Utf8               VMSVersioningFTPEntryParser.java\n {\n   private static final java.lang.String PRE_PARSE_REGEX = \"(.*?);([0-9]+)\\\\s*.*\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String (.*?);([0-9]+)\\\\s*.*\n \n   private final java.util.regex.Pattern preparsePattern;\n@@ -189,28 +189,28 @@\n \n   public org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser(org.apache.commons.net.ftp.FTPClientConfig);\n     descriptor: (Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #3                  // Method configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+         6: invokevirtual #12                 // Method configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n          9: aload_0\n-        10: ldc           #5                  // String (.*?);([0-9]+)\\\\s*.*\n-        12: invokestatic  #6                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        15: putfield      #7                  // Field preparsePattern:Ljava/util/regex/Pattern;\n+        10: ldc           #15                 // String (.*?);([0-9]+)\\\\s*.*\n+        12: invokestatic  #17                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        15: putfield      #23                 // Field preparsePattern:Ljava/util/regex/Pattern;\n         18: goto          32\n         21: astore_2\n-        22: new           #9                  // class java/lang/IllegalArgumentException\n+        22: new           #29                 // class java/lang/IllegalArgumentException\n         25: dup\n-        26: ldc           #10                 // String Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-        28: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #31                 // String Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+        28: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: return\n       Exception table:\n          from    to  target type\n              9    18    21   Class java/util/regex/PatternSyntaxException\n       LineNumberTable:\n         line 68: 0\n@@ -246,121 +246,121 @@\n             0       2     0  this   Lorg/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser;\n \n   public java.util.List<java.lang.String> preParse(java.util.List<java.lang.String>);\n     descriptor: (Ljava/util/List;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=11, args_size=2\n-         0: new           #12                 // class java/util/HashMap\n+         0: new           #36                 // class java/util/HashMap\n          3: dup\n-         4: invokespecial #13                 // Method java/util/HashMap.\"<init>\":()V\n+         4: invokespecial #38                 // Method java/util/HashMap.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n-         9: invokeinterface #14,  1           // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;\n+         9: invokeinterface #39,  1           // InterfaceMethod java/util/List.listIterator:()Ljava/util/ListIterator;\n         14: astore_3\n         15: aload_3\n-        16: invokeinterface #15,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z\n+        16: invokeinterface #45,  1           // InterfaceMethod java/util/ListIterator.hasNext:()Z\n         21: ifeq          145\n         24: aload_3\n-        25: invokeinterface #16,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;\n-        30: checkcast     #17                 // class java/lang/String\n-        33: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;\n+        25: invokeinterface #51,  1           // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;\n+        30: checkcast     #55                 // class java/lang/String\n+        33: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;\n         36: astore        4\n         38: aconst_null\n         39: astore        5\n         41: aload_0\n-        42: getfield      #7                  // Field preparsePattern:Ljava/util/regex/Pattern;\n+        42: getfield      #23                 // Field preparsePattern:Ljava/util/regex/Pattern;\n         45: aload         4\n-        47: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        47: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         50: astore        6\n         52: aload         6\n-        54: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z\n+        54: invokevirtual #65                 // Method java/util/regex/Matcher.matches:()Z\n         57: ifeq          142\n         60: aload         6\n-        62: invokevirtual #21                 // Method java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n+        62: invokevirtual #70                 // Method java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n         65: astore        5\n         67: aload         5\n         69: iconst_1\n-        70: invokeinterface #22,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+        70: invokeinterface #74,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n         75: astore        7\n         77: aload         5\n         79: iconst_2\n-        80: invokeinterface #22,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+        80: invokeinterface #74,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n         85: astore        8\n         87: aload         8\n-        89: invokestatic  #23                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+        89: invokestatic  #80                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n         92: astore        9\n         94: aload_2\n         95: aload         7\n-        97: invokevirtual #24                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       100: checkcast     #25                 // class java/lang/Integer\n+        97: invokevirtual #86                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       100: checkcast     #81                 // class java/lang/Integer\n        103: astore        10\n        105: aconst_null\n        106: aload         10\n        108: if_acmpeq     133\n        111: aload         9\n-       113: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n+       113: invokevirtual #90                 // Method java/lang/Integer.intValue:()I\n        116: aload         10\n-       118: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n+       118: invokevirtual #90                 // Method java/lang/Integer.intValue:()I\n        121: if_icmpge     133\n        124: aload_3\n-       125: invokeinterface #27,  1           // InterfaceMethod java/util/ListIterator.remove:()V\n+       125: invokeinterface #94,  1           // InterfaceMethod java/util/ListIterator.remove:()V\n        130: goto          15\n        133: aload_2\n        134: aload         7\n        136: aload         9\n-       138: invokevirtual #28                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       138: invokevirtual #97                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        141: pop\n        142: goto          15\n        145: aload_3\n-       146: invokeinterface #29,  1           // InterfaceMethod java/util/ListIterator.hasPrevious:()Z\n+       146: invokeinterface #101,  1          // InterfaceMethod java/util/ListIterator.hasPrevious:()Z\n        151: ifeq          260\n        154: aload_3\n-       155: invokeinterface #30,  1           // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;\n-       160: checkcast     #17                 // class java/lang/String\n-       163: invokevirtual #18                 // Method java/lang/String.trim:()Ljava/lang/String;\n+       155: invokeinterface #104,  1          // InterfaceMethod java/util/ListIterator.previous:()Ljava/lang/Object;\n+       160: checkcast     #55                 // class java/lang/String\n+       163: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;\n        166: astore        4\n        168: aconst_null\n        169: astore        5\n        171: aload_0\n-       172: getfield      #7                  // Field preparsePattern:Ljava/util/regex/Pattern;\n+       172: getfield      #23                 // Field preparsePattern:Ljava/util/regex/Pattern;\n        175: aload         4\n-       177: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+       177: invokevirtual #61                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n        180: astore        6\n        182: aload         6\n-       184: invokevirtual #20                 // Method java/util/regex/Matcher.matches:()Z\n+       184: invokevirtual #65                 // Method java/util/regex/Matcher.matches:()Z\n        187: ifeq          257\n        190: aload         6\n-       192: invokevirtual #21                 // Method java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n+       192: invokevirtual #70                 // Method java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n        195: astore        5\n        197: aload         5\n        199: iconst_1\n-       200: invokeinterface #22,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+       200: invokeinterface #74,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n        205: astore        7\n        207: aload         5\n        209: iconst_2\n-       210: invokeinterface #22,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+       210: invokeinterface #74,  2           // InterfaceMethod java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n        215: astore        8\n        217: aload         8\n-       219: invokestatic  #31                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       219: invokestatic  #107                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        222: istore        9\n        224: aload_2\n        225: aload         7\n-       227: invokevirtual #24                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       230: checkcast     #25                 // class java/lang/Integer\n+       227: invokevirtual #86                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       230: checkcast     #81                 // class java/lang/Integer\n        233: astore        10\n        235: aconst_null\n        236: aload         10\n        238: if_acmpeq     257\n        241: iload         9\n        243: aload         10\n-       245: invokevirtual #26                 // Method java/lang/Integer.intValue:()I\n+       245: invokevirtual #90                 // Method java/lang/Integer.intValue:()I\n        248: if_icmpge     257\n        251: aload_3\n-       252: invokeinterface #27,  1           // InterfaceMethod java/util/ListIterator.remove:()V\n+       252: invokeinterface #94,  1           // InterfaceMethod java/util/ListIterator.remove:()V\n        257: goto          145\n        260: aload_1\n        261: areturn\n       LineNumberTable:\n         line 94: 0\n         line 95: 8\n         line 96: 15\n@@ -429,10 +429,10 @@\n           offset_delta = 8\n           locals = [ class org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser, class java/util/List, class java/util/HashMap, class java/util/ListIterator ]\n           stack = []\n         frame_type = 2 /* same */\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 111\n         frame_type = 2 /* same */\n-    Signature: #82                          // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #151                         // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n }\n SourceFile: \"VMSVersioningFTPEntryParser.java\"\n"}]}
