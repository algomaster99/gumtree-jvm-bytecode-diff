{"diffoscope-json-version": 1, "source1": "first/DotTerminatedMessageWriter.class", "source2": "second/DotTerminatedMessageWriter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,76 +18,83 @@\n         this.state = 0;\n     }\n     \n     @Override\n     public void close() throws IOException {\n         synchronized (this.lock) {\n             if (this.output == null) {\n+                monitorexit(this.lock);\n                 return;\n             }\n             if (this.state == 1) {\n                 this.output.write(10);\n             }\n             else if (this.state != 2) {\n                 this.output.write(\"\\r\\n\");\n             }\n             this.output.write(\".\\r\\n\");\n             this.output.flush();\n             this.output = null;\n+            monitorexit(this.lock);\n         }\n     }\n     \n     @Override\n     public void flush() throws IOException {\n         synchronized (this.lock) {\n             this.output.flush();\n+            monitorexit(this.lock);\n         }\n     }\n     \n     @Override\n     public void write(final char[] buffer) throws IOException {\n         this.write(buffer, 0, buffer.length);\n     }\n     \n     @Override\n     public void write(final char[] buffer, int offset, int length) throws IOException {\n         synchronized (this.lock) {\n             while (length-- > 0) {\n                 this.write(buffer[offset++]);\n             }\n+            monitorexit(this.lock);\n         }\n     }\n     \n     @Override\n     public void write(final int ch) throws IOException {\n         synchronized (this.lock) {\n             switch (ch) {\n                 case 13: {\n                     this.state = 1;\n                     this.output.write(13);\n+                    monitorexit(this.lock);\n                     return;\n                 }\n                 case 10: {\n                     if (this.state != 1) {\n                         this.output.write(13);\n                     }\n                     this.output.write(10);\n                     this.state = 2;\n+                    monitorexit(this.lock);\n                     return;\n                 }\n                 case 46: {\n                     if (this.state == 2) {\n                         this.output.write(46);\n                         break;\n                     }\n                     break;\n                 }\n             }\n             this.state = 0;\n             this.output.write(ch);\n+            monitorexit(this.lock);\n         }\n     }\n     \n     @Override\n     public void write(final String string) throws IOException {\n         this.write(string.toCharArray());\n     }\n"}]}
