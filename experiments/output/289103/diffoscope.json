{"diffoscope-json-version": 1, "source1": "first/NodeTreeWalker.class", "source2": "second/NodeTreeWalker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum d71a553d0f2c5422f29138999d01c6b750cef064076dc3569034836ff21dbc6f\n+  SHA-256 checksum 8ff9baee70d753f1c5bc4d7ee4a8020ecd1af3631a335fe0ab06babe62bb7ecc\n   Compiled from \"NodeTreeWalker.java\"\n public class org.apache.commons.configuration2.tree.NodeTreeWalker\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/configuration2/tree/NodeTreeWalker\n   super_class: #25                        // java/lang/Object\n@@ -11,105 +11,103 @@\n    #1 = Methodref          #25.#48        // java/lang/Object.\"<init>\":()V\n    #2 = Methodref          #22.#49        // org/apache/commons/configuration2/tree/NodeTreeWalker.checkParameters:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n    #3 = Methodref          #22.#50        // org/apache/commons/configuration2/tree/NodeTreeWalker.dfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n    #4 = Methodref          #22.#51        // org/apache/commons/configuration2/tree/NodeTreeWalker.bfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n    #5 = InterfaceMethodref #52.#53        // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.terminate:()Z\n    #6 = InterfaceMethodref #52.#54        // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n    #7 = InterfaceMethodref #55.#56        // org/apache/commons/configuration2/tree/NodeHandler.getChildren:(Ljava/lang/Object;)Ljava/util/List;\n-   #8 = InterfaceMethodref #57.#58        // java/util/List.iterator:()Ljava/util/Iterator;\n-   #9 = InterfaceMethodref #59.#60        // java/util/Iterator.hasNext:()Z\n-  #10 = InterfaceMethodref #59.#61        // java/util/Iterator.next:()Ljava/lang/Object;\n-  #11 = InterfaceMethodref #52.#62        // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #12 = Class              #63            // java/util/LinkedList\n+   #8 = InterfaceMethodref #41.#57        // java/util/List.iterator:()Ljava/util/Iterator;\n+   #9 = InterfaceMethodref #39.#58        // java/util/Iterator.hasNext:()Z\n+  #10 = InterfaceMethodref #39.#59        // java/util/Iterator.next:()Ljava/lang/Object;\n+  #11 = InterfaceMethodref #52.#60        // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor.visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+  #12 = Class              #61            // java/util/LinkedList\n   #13 = Methodref          #12.#48        // java/util/LinkedList.\"<init>\":()V\n-  #14 = InterfaceMethodref #57.#64        // java/util/List.add:(Ljava/lang/Object;)Z\n-  #15 = InterfaceMethodref #57.#65        // java/util/List.isEmpty:()Z\n-  #16 = InterfaceMethodref #57.#66        // java/util/List.remove:(I)Ljava/lang/Object;\n-  #17 = InterfaceMethodref #57.#67        // java/util/List.addAll:(Ljava/util/Collection;)Z\n-  #18 = Class              #68            // java/lang/IllegalArgumentException\n-  #19 = String             #69            // Visitor must not be null!\n-  #20 = Methodref          #18.#70        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #21 = String             #71            // NodeHandler must not be null!\n-  #22 = Class              #72            // org/apache/commons/configuration2/tree/NodeTreeWalker\n+  #14 = InterfaceMethodref #41.#62        // java/util/List.add:(Ljava/lang/Object;)Z\n+  #15 = InterfaceMethodref #41.#63        // java/util/List.isEmpty:()Z\n+  #16 = InterfaceMethodref #41.#64        // java/util/List.remove:(I)Ljava/lang/Object;\n+  #17 = InterfaceMethodref #41.#65        // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #18 = Class              #66            // java/lang/IllegalArgumentException\n+  #19 = String             #67            // Visitor must not be null!\n+  #20 = Methodref          #18.#68        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #21 = String             #69            // NodeHandler must not be null!\n+  #22 = Class              #70            // org/apache/commons/configuration2/tree/NodeTreeWalker\n   #23 = Methodref          #22.#48        // org/apache/commons/configuration2/tree/NodeTreeWalker.\"<init>\":()V\n-  #24 = Fieldref           #22.#73        // org/apache/commons/configuration2/tree/NodeTreeWalker.INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n-  #25 = Class              #74            // java/lang/Object\n+  #24 = Fieldref           #22.#71        // org/apache/commons/configuration2/tree/NodeTreeWalker.INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n+  #25 = Class              #72            // java/lang/Object\n   #26 = Utf8               INSTANCE\n   #27 = Utf8               Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n   #28 = Utf8               <init>\n   #29 = Utf8               ()V\n   #30 = Utf8               Code\n   #31 = Utf8               LineNumberTable\n   #32 = Utf8               walkDFS\n   #33 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n   #34 = Utf8               StackMapTable\n   #35 = Utf8               Signature\n   #36 = Utf8               <T:Ljava/lang/Object;>(TT;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor<TT;>;Lorg/apache/commons/configuration2/tree/NodeHandler<TT;>;)V\n   #37 = Utf8               walkBFS\n   #38 = Utf8               dfs\n-  #39 = Class              #75            // java/util/Iterator\n+  #39 = Class              #73            // java/util/Iterator\n   #40 = Utf8               bfs\n-  #41 = Class              #76            // java/util/List\n+  #41 = Class              #74            // java/util/List\n   #42 = Utf8               checkParameters\n   #43 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n   #44 = Utf8               <T:Ljava/lang/Object;>(TT;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor<TT;>;Lorg/apache/commons/configuration2/tree/NodeHandler<TT;>;)Z\n   #45 = Utf8               <clinit>\n   #46 = Utf8               SourceFile\n   #47 = Utf8               NodeTreeWalker.java\n   #48 = NameAndType        #28:#29        // \"<init>\":()V\n   #49 = NameAndType        #42:#43        // checkParameters:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)Z\n   #50 = NameAndType        #38:#33        // dfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n   #51 = NameAndType        #40:#33        // bfs:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/ConfigurationNodeVisitor;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #52 = Class              #77            // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n-  #53 = NameAndType        #78:#79        // terminate:()Z\n-  #54 = NameAndType        #80:#81        // visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #55 = Class              #82            // org/apache/commons/configuration2/tree/NodeHandler\n-  #56 = NameAndType        #83:#84        // getChildren:(Ljava/lang/Object;)Ljava/util/List;\n-  #57 = Class              #76            // java/util/List\n-  #58 = NameAndType        #85:#86        // iterator:()Ljava/util/Iterator;\n-  #59 = Class              #75            // java/util/Iterator\n-  #60 = NameAndType        #87:#79        // hasNext:()Z\n-  #61 = NameAndType        #88:#89        // next:()Ljava/lang/Object;\n-  #62 = NameAndType        #90:#81        // visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #63 = Utf8               java/util/LinkedList\n-  #64 = NameAndType        #91:#92        // add:(Ljava/lang/Object;)Z\n-  #65 = NameAndType        #93:#79        // isEmpty:()Z\n-  #66 = NameAndType        #94:#95        // remove:(I)Ljava/lang/Object;\n-  #67 = NameAndType        #96:#97        // addAll:(Ljava/util/Collection;)Z\n-  #68 = Utf8               java/lang/IllegalArgumentException\n-  #69 = Utf8               Visitor must not be null!\n-  #70 = NameAndType        #28:#98        // \"<init>\":(Ljava/lang/String;)V\n-  #71 = Utf8               NodeHandler must not be null!\n-  #72 = Utf8               org/apache/commons/configuration2/tree/NodeTreeWalker\n-  #73 = NameAndType        #26:#27        // INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n-  #74 = Utf8               java/lang/Object\n-  #75 = Utf8               java/util/Iterator\n-  #76 = Utf8               java/util/List\n-  #77 = Utf8               org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n-  #78 = Utf8               terminate\n-  #79 = Utf8               ()Z\n-  #80 = Utf8               visitBeforeChildren\n-  #81 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n-  #82 = Utf8               org/apache/commons/configuration2/tree/NodeHandler\n-  #83 = Utf8               getChildren\n-  #84 = Utf8               (Ljava/lang/Object;)Ljava/util/List;\n-  #85 = Utf8               iterator\n-  #86 = Utf8               ()Ljava/util/Iterator;\n-  #87 = Utf8               hasNext\n-  #88 = Utf8               next\n-  #89 = Utf8               ()Ljava/lang/Object;\n-  #90 = Utf8               visitAfterChildren\n-  #91 = Utf8               add\n-  #92 = Utf8               (Ljava/lang/Object;)Z\n-  #93 = Utf8               isEmpty\n-  #94 = Utf8               remove\n-  #95 = Utf8               (I)Ljava/lang/Object;\n-  #96 = Utf8               addAll\n-  #97 = Utf8               (Ljava/util/Collection;)Z\n-  #98 = Utf8               (Ljava/lang/String;)V\n+  #52 = Class              #75            // org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n+  #53 = NameAndType        #76:#77        // terminate:()Z\n+  #54 = NameAndType        #78:#79        // visitBeforeChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+  #55 = Class              #80            // org/apache/commons/configuration2/tree/NodeHandler\n+  #56 = NameAndType        #81:#82        // getChildren:(Ljava/lang/Object;)Ljava/util/List;\n+  #57 = NameAndType        #83:#84        // iterator:()Ljava/util/Iterator;\n+  #58 = NameAndType        #85:#77        // hasNext:()Z\n+  #59 = NameAndType        #86:#87        // next:()Ljava/lang/Object;\n+  #60 = NameAndType        #88:#79        // visitAfterChildren:(Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+  #61 = Utf8               java/util/LinkedList\n+  #62 = NameAndType        #89:#90        // add:(Ljava/lang/Object;)Z\n+  #63 = NameAndType        #91:#77        // isEmpty:()Z\n+  #64 = NameAndType        #92:#93        // remove:(I)Ljava/lang/Object;\n+  #65 = NameAndType        #94:#95        // addAll:(Ljava/util/Collection;)Z\n+  #66 = Utf8               java/lang/IllegalArgumentException\n+  #67 = Utf8               Visitor must not be null!\n+  #68 = NameAndType        #28:#96        // \"<init>\":(Ljava/lang/String;)V\n+  #69 = Utf8               NodeHandler must not be null!\n+  #70 = Utf8               org/apache/commons/configuration2/tree/NodeTreeWalker\n+  #71 = NameAndType        #26:#27        // INSTANCE:Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n+  #72 = Utf8               java/lang/Object\n+  #73 = Utf8               java/util/Iterator\n+  #74 = Utf8               java/util/List\n+  #75 = Utf8               org/apache/commons/configuration2/tree/ConfigurationNodeVisitor\n+  #76 = Utf8               terminate\n+  #77 = Utf8               ()Z\n+  #78 = Utf8               visitBeforeChildren\n+  #79 = Utf8               (Ljava/lang/Object;Lorg/apache/commons/configuration2/tree/NodeHandler;)V\n+  #80 = Utf8               org/apache/commons/configuration2/tree/NodeHandler\n+  #81 = Utf8               getChildren\n+  #82 = Utf8               (Ljava/lang/Object;)Ljava/util/List;\n+  #83 = Utf8               iterator\n+  #84 = Utf8               ()Ljava/util/Iterator;\n+  #85 = Utf8               hasNext\n+  #86 = Utf8               next\n+  #87 = Utf8               ()Ljava/lang/Object;\n+  #88 = Utf8               visitAfterChildren\n+  #89 = Utf8               add\n+  #90 = Utf8               (Ljava/lang/Object;)Z\n+  #91 = Utf8               isEmpty\n+  #92 = Utf8               remove\n+  #93 = Utf8               (I)Ljava/lang/Object;\n+  #94 = Utf8               addAll\n+  #95 = Utf8               (Ljava/util/Collection;)Z\n+  #96 = Utf8               (Ljava/lang/String;)V\n {\n   public static final org.apache.commons.configuration2.tree.NodeTreeWalker INSTANCE;\n     descriptor: Lorg/apache/commons/configuration2/tree/NodeTreeWalker;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.configuration2.tree.NodeTreeWalker();\n     descriptor: ()V\n"}]}
