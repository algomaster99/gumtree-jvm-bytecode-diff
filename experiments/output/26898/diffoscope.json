{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream$BoundedInputStream.class", "source2": "second/ZipArchiveInputStream$BoundedInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,115 +1,115 @@\n-  SHA-256 checksum 559ca30b508c2a650f6bf4b5a8aea01f272a34555ec72890ce24c28402b76561\n+  SHA-256 checksum e1f3c8c51b5050612d5f084e70f55b044e696f52eb419904ed8a0190ceef455b\n   Compiled from \"ZipArchiveInputStream.java\"\n class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #17                         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n-  super_class: #18                        // java/io/InputStream\n+  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n+  super_class: #8                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 6, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #17.#59        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n-   #2 = Methodref          #18.#60        // java/io/InputStream.\"<init>\":()V\n-   #3 = Fieldref           #17.#61        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.pos:J\n-   #4 = Fieldref           #17.#62        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.max:J\n-   #5 = Fieldref           #17.#63        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.in:Ljava/io/InputStream;\n-   #6 = Methodref          #18.#64        // java/io/InputStream.read:()I\n-   #7 = Methodref          #65.#66        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n-   #8 = Methodref          #65.#67        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-   #9 = Methodref          #68.#69        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #10 = Methodref          #17.#70        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read:([BII)I\n-  #11 = Methodref          #71.#72        // java/lang/Math.min:(JJ)J\n-  #12 = Methodref          #18.#70        // java/io/InputStream.read:([BII)I\n-  #13 = Methodref          #65.#73        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n-  #14 = Methodref          #68.#74        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #15 = Methodref          #75.#76        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-  #16 = Methodref          #18.#77        // java/io/InputStream.available:()I\n-  #17 = Class              #78            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n-  #18 = Class              #79            // java/io/InputStream\n-  #19 = Utf8               in\n-  #20 = Utf8               Ljava/io/InputStream;\n-  #21 = Utf8               max\n-  #22 = Utf8               J\n-  #23 = Utf8               pos\n-  #24 = Utf8               this$0\n-  #25 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n-  #26 = Utf8               <init>\n-  #27 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;Ljava/io/InputStream;J)V\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               LocalVariableTable\n-  #31 = Utf8               this\n-  #32 = Utf8               BoundedInputStream\n-  #33 = Utf8               InnerClasses\n-  #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream;\n-  #35 = Utf8               size\n-  #36 = Utf8               read\n-  #37 = Utf8               ()I\n-  #38 = Utf8               result\n-  #39 = Utf8               I\n-  #40 = Utf8               StackMapTable\n-  #41 = Utf8               Exceptions\n-  #42 = Class              #80            // java/io/IOException\n-  #43 = Utf8               ([B)I\n-  #44 = Utf8               b\n-  #45 = Utf8               [B\n+   #1 = Fieldref           #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n+   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n+   #3 = NameAndType        #5:#6          // this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n+   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n+   #5 = Utf8               this$0\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n+   #7 = Methodref          #8.#9          // java/io/InputStream.\"<init>\":()V\n+   #8 = Class              #10            // java/io/InputStream\n+   #9 = NameAndType        #11:#12        // \"<init>\":()V\n+  #10 = Utf8               java/io/InputStream\n+  #11 = Utf8               <init>\n+  #12 = Utf8               ()V\n+  #13 = Fieldref           #2.#14         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.pos:J\n+  #14 = NameAndType        #15:#16        // pos:J\n+  #15 = Utf8               pos\n+  #16 = Utf8               J\n+  #17 = Fieldref           #2.#18         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.max:J\n+  #18 = NameAndType        #19:#16        // max:J\n+  #19 = Utf8               max\n+  #20 = Fieldref           #2.#21         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.in:Ljava/io/InputStream;\n+  #21 = NameAndType        #22:#23        // in:Ljava/io/InputStream;\n+  #22 = Utf8               in\n+  #23 = Utf8               Ljava/io/InputStream;\n+  #24 = Methodref          #8.#25         // java/io/InputStream.read:()I\n+  #25 = NameAndType        #26:#27        // read:()I\n+  #26 = Utf8               read\n+  #27 = Utf8               ()I\n+  #28 = Methodref          #29.#30        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+  #29 = Class              #31            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #30 = NameAndType        #32:#33        // access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+  #31 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #32 = Utf8               access$800\n+  #33 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+  #34 = Methodref          #29.#35        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+  #35 = NameAndType        #36:#37        // access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+  #36 = Utf8               access$900\n+  #37 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+  #38 = Methodref          #39.#40        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #39 = Class              #41            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  #40 = NameAndType        #42:#43        // access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #41 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  #42 = Utf8               access$708\n+  #43 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  #44 = Methodref          #2.#45         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream.read:([BII)I\n+  #45 = NameAndType        #26:#46        // read:([BII)I\n   #46 = Utf8               ([BII)I\n-  #47 = Utf8               off\n-  #48 = Utf8               len\n-  #49 = Utf8               maxRead\n-  #50 = Utf8               bytesRead\n-  #51 = Utf8               skip\n-  #52 = Utf8               (J)J\n-  #53 = Utf8               n\n-  #54 = Utf8               toSkip\n-  #55 = Utf8               skippedBytes\n-  #56 = Utf8               available\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               ZipArchiveInputStream.java\n-  #59 = NameAndType        #24:#25        // this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n-  #60 = NameAndType        #26:#81        // \"<init>\":()V\n-  #61 = NameAndType        #23:#22        // pos:J\n-  #62 = NameAndType        #21:#22        // max:J\n-  #63 = NameAndType        #19:#20        // in:Ljava/io/InputStream;\n-  #64 = NameAndType        #36:#37        // read:()I\n-  #65 = Class              #82            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #66 = NameAndType        #83:#84        // access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n-  #67 = NameAndType        #85:#87        // access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-  #68 = Class              #88            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #69 = NameAndType        #89:#90        // access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #70 = NameAndType        #36:#46        // read:([BII)I\n-  #71 = Class              #91            // java/lang/Math\n-  #72 = NameAndType        #92:#93        // min:(JJ)J\n-  #73 = NameAndType        #94:#84        // access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n-  #74 = NameAndType        #95:#96        // access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #75 = Class              #97            // org/apache/commons/compress/utils/IOUtils\n-  #76 = NameAndType        #51:#98        // skip:(Ljava/io/InputStream;J)J\n-  #77 = NameAndType        #56:#37        // available:()I\n-  #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream\n-  #79 = Utf8               java/io/InputStream\n-  #80 = Utf8               java/io/IOException\n-  #81 = Utf8               ()V\n-  #82 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #83 = Utf8               access$800\n-  #84 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n-  #85 = Utf8               access$900\n-  #86 = Utf8               CurrentEntry\n-  #87 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-  #88 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #89 = Utf8               access$708\n-  #90 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #91 = Utf8               java/lang/Math\n-  #92 = Utf8               min\n-  #93 = Utf8               (JJ)J\n-  #94 = Utf8               access$1000\n-  #95 = Utf8               access$714\n-  #96 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #97 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #98 = Utf8               (Ljava/io/InputStream;J)J\n+  #47 = Methodref          #48.#49        // java/lang/Math.min:(JJ)J\n+  #48 = Class              #50            // java/lang/Math\n+  #49 = NameAndType        #51:#52        // min:(JJ)J\n+  #50 = Utf8               java/lang/Math\n+  #51 = Utf8               min\n+  #52 = Utf8               (JJ)J\n+  #53 = Methodref          #8.#45         // java/io/InputStream.read:([BII)I\n+  #54 = Methodref          #29.#55        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+  #55 = NameAndType        #56:#33        // access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+  #56 = Utf8               access$1000\n+  #57 = Methodref          #39.#58        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #58 = NameAndType        #59:#60        // access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #59 = Utf8               access$714\n+  #60 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #61 = Methodref          #62.#63        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #62 = Class              #64            // org/apache/commons/compress/utils/IOUtils\n+  #63 = NameAndType        #65:#66        // skip:(Ljava/io/InputStream;J)J\n+  #64 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #65 = Utf8               skip\n+  #66 = Utf8               (Ljava/io/InputStream;J)J\n+  #67 = Methodref          #8.#68         // java/io/InputStream.available:()I\n+  #68 = NameAndType        #69:#27        // available:()I\n+  #69 = Utf8               available\n+  #70 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;Ljava/io/InputStream;J)V\n+  #71 = Utf8               Code\n+  #72 = Utf8               LineNumberTable\n+  #73 = Utf8               LocalVariableTable\n+  #74 = Utf8               this\n+  #75 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream;\n+  #76 = Utf8               size\n+  #77 = Utf8               result\n+  #78 = Utf8               I\n+  #79 = Utf8               StackMapTable\n+  #80 = Utf8               Exceptions\n+  #81 = Class              #82            // java/io/IOException\n+  #82 = Utf8               java/io/IOException\n+  #83 = Utf8               ([B)I\n+  #84 = Utf8               b\n+  #85 = Utf8               [B\n+  #86 = Utf8               off\n+  #87 = Utf8               len\n+  #88 = Utf8               maxRead\n+  #89 = Utf8               bytesRead\n+  #90 = Utf8               (J)J\n+  #91 = Utf8               n\n+  #92 = Utf8               toSkip\n+  #93 = Utf8               skippedBytes\n+  #94 = Utf8               SourceFile\n+  #95 = Utf8               ZipArchiveInputStream.java\n+  #96 = Utf8               InnerClasses\n+  #97 = Utf8               BoundedInputStream\n+  #98 = Utf8               CurrentEntry\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final long max;\n     descriptor: J\n@@ -128,24 +128,24 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: putfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n          5: aload_0\n-         6: invokespecial #2                  // Method java/io/InputStream.\"<init>\":()V\n+         6: invokespecial #7                  // Method java/io/InputStream.\"<init>\":()V\n          9: aload_0\n         10: lconst_0\n-        11: putfield      #3                  // Field pos:J\n+        11: putfield      #13                 // Field pos:J\n         14: aload_0\n         15: lload_3\n-        16: putfield      #4                  // Field max:J\n+        16: putfield      #17                 // Field max:J\n         19: aload_0\n         20: aload_2\n-        21: putfield      #5                  // Field in:Ljava/io/InputStream;\n+        21: putfield      #20                 // Field in:Ljava/io/InputStream;\n         24: return\n       LineNumberTable:\n         line 1265: 0\n         line 1256: 9\n         line 1266: 14\n         line 1267: 19\n         line 1268: 24\n@@ -157,44 +157,44 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field max:J\n+         1: getfield      #17                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          23\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n+        10: getfield      #13                 // Field pos:J\n         13: aload_0\n-        14: getfield      #4                  // Field max:J\n+        14: getfield      #17                 // Field max:J\n         17: lcmp\n         18: iflt          23\n         21: iconst_m1\n         22: ireturn\n         23: aload_0\n-        24: getfield      #5                  // Field in:Ljava/io/InputStream;\n-        27: invokevirtual #6                  // Method java/io/InputStream.read:()I\n+        24: getfield      #20                 // Field in:Ljava/io/InputStream;\n+        27: invokevirtual #24                 // Method java/io/InputStream.read:()I\n         30: istore_1\n         31: aload_0\n         32: dup\n-        33: getfield      #3                  // Field pos:J\n+        33: getfield      #13                 // Field pos:J\n         36: lconst_1\n         37: ladd\n-        38: putfield      #3                  // Field pos:J\n+        38: putfield      #13                 // Field pos:J\n         41: aload_0\n         42: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n         45: iconst_1\n-        46: invokestatic  #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+        46: invokestatic  #28                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$800:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n         49: aload_0\n         50: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n-        53: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n-        56: invokestatic  #9                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+        53: invokestatic  #34                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+        56: invokestatic  #38                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$708:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n         59: pop2\n         60: iload_1\n         61: ireturn\n       LineNumberTable:\n         line 1272: 0\n         line 1273: 21\n         line 1275: 23\n@@ -217,15 +217,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #10                 // Method read:([BII)I\n+         5: invokevirtual #44                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 1284: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream;\n             0       9     1     b   [B\n@@ -238,73 +238,73 @@\n     Code:\n       stack=6, locals=7, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #4                  // Field max:J\n+         7: getfield      #17                 // Field max:J\n         10: lconst_0\n         11: lcmp\n         12: iflt          29\n         15: aload_0\n-        16: getfield      #3                  // Field pos:J\n+        16: getfield      #13                 // Field pos:J\n         19: aload_0\n-        20: getfield      #4                  // Field max:J\n+        20: getfield      #17                 // Field max:J\n         23: lcmp\n         24: iflt          29\n         27: iconst_m1\n         28: ireturn\n         29: aload_0\n-        30: getfield      #4                  // Field max:J\n+        30: getfield      #17                 // Field max:J\n         33: lconst_0\n         34: lcmp\n         35: iflt          55\n         38: iload_3\n         39: i2l\n         40: aload_0\n-        41: getfield      #4                  // Field max:J\n+        41: getfield      #17                 // Field max:J\n         44: aload_0\n-        45: getfield      #3                  // Field pos:J\n+        45: getfield      #13                 // Field pos:J\n         48: lsub\n-        49: invokestatic  #11                 // Method java/lang/Math.min:(JJ)J\n+        49: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J\n         52: goto          57\n         55: iload_3\n         56: i2l\n         57: lstore        4\n         59: aload_0\n-        60: getfield      #5                  // Field in:Ljava/io/InputStream;\n+        60: getfield      #20                 // Field in:Ljava/io/InputStream;\n         63: aload_1\n         64: iload_2\n         65: lload         4\n         67: l2i\n-        68: invokevirtual #12                 // Method java/io/InputStream.read:([BII)I\n+        68: invokevirtual #53                 // Method java/io/InputStream.read:([BII)I\n         71: istore        6\n         73: iload         6\n         75: iconst_m1\n         76: if_icmpne     81\n         79: iconst_m1\n         80: ireturn\n         81: aload_0\n         82: dup\n-        83: getfield      #3                  // Field pos:J\n+        83: getfield      #13                 // Field pos:J\n         86: iload         6\n         88: i2l\n         89: ladd\n-        90: putfield      #3                  // Field pos:J\n+        90: putfield      #13                 // Field pos:J\n         93: aload_0\n         94: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n         97: iload         6\n-        99: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n+        99: invokestatic  #54                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$1000:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;I)V\n        102: aload_0\n        103: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;\n-       106: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n+       106: invokestatic  #34                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.access$900:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;\n        109: iload         6\n        111: i2l\n-       112: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+       112: invokestatic  #57                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.access$714:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n        115: pop2\n        116: iload         6\n        118: ireturn\n       LineNumberTable:\n         line 1289: 0\n         line 1290: 4\n         line 1292: 6\n@@ -339,39 +339,39 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field max:J\n+         1: getfield      #17                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          25\n          9: lload_1\n         10: aload_0\n-        11: getfield      #4                  // Field max:J\n+        11: getfield      #17                 // Field max:J\n         14: aload_0\n-        15: getfield      #3                  // Field pos:J\n+        15: getfield      #13                 // Field pos:J\n         18: lsub\n-        19: invokestatic  #11                 // Method java/lang/Math.min:(JJ)J\n+        19: invokestatic  #47                 // Method java/lang/Math.min:(JJ)J\n         22: goto          26\n         25: lload_1\n         26: lstore_3\n         27: aload_0\n-        28: getfield      #5                  // Field in:Ljava/io/InputStream;\n+        28: getfield      #20                 // Field in:Ljava/io/InputStream;\n         31: lload_3\n-        32: invokestatic  #15                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        32: invokestatic  #61                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         35: lstore        5\n         37: aload_0\n         38: dup\n-        39: getfield      #3                  // Field pos:J\n+        39: getfield      #13                 // Field pos:J\n         42: lload         5\n         44: ladd\n-        45: putfield      #3                  // Field pos:J\n+        45: putfield      #13                 // Field pos:J\n         48: lload         5\n         50: lreturn\n       LineNumberTable:\n         line 1310: 0\n         line 1311: 27\n         line 1312: 37\n         line 1313: 48\n@@ -390,29 +390,29 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field max:J\n+         1: getfield      #17                 // Field max:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          23\n          9: aload_0\n-        10: getfield      #3                  // Field pos:J\n+        10: getfield      #13                 // Field pos:J\n         13: aload_0\n-        14: getfield      #4                  // Field max:J\n+        14: getfield      #17                 // Field max:J\n         17: lcmp\n         18: iflt          23\n         21: iconst_0\n         22: ireturn\n         23: aload_0\n-        24: getfield      #5                  // Field in:Ljava/io/InputStream;\n-        27: invokevirtual #16                 // Method java/io/InputStream.available:()I\n+        24: getfield      #20                 // Field in:Ljava/io/InputStream;\n+        27: invokevirtual #67                 // Method java/io/InputStream.available:()I\n         30: ireturn\n       LineNumberTable:\n         line 1318: 0\n         line 1319: 21\n         line 1321: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -420,9 +420,9 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 23 /* same */\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ZipArchiveInputStream.java\"\n InnerClasses:\n-  private #32= #17 of #65;                // BoundedInputStream=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  private static final #86= #68 of #65;   // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  private #97= #2 of #29;                 // BoundedInputStream=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$BoundedInputStream of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  private static final #98= #39 of #29;   // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n"}]}
