{"diffoscope-json-version": 1, "source1": "first/TypeReference.class", "source2": "second/TypeReference.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,77 @@\n-  SHA-256 checksum c1d237747b369f40e1396e4e5b46bef6faa63c35df187053f071f3931614f6ed\n+  SHA-256 checksum 1754dd8364b04d302fdc78ced51fa63552016ea6eba565a5ecf5acea0cf44fc8\n   Compiled from \"TypeReference.java\"\n public abstract class com.fasterxml.jackson.core.type.TypeReference<T extends java.lang.Object> extends java.lang.Object implements java.lang.Comparable<com.fasterxml.jackson.core.type.TypeReference<T>>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #11                         // com/fasterxml/jackson/core/type/TypeReference\n   super_class: #13                        // java/lang/Object\n   interfaces: 1, fields: 1, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #13.#41        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #13.#42        // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #3 = Methodref          #4.#43         // java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n-   #4 = Class              #44            // java/lang/Class\n-   #5 = Class              #45            // java/lang/IllegalArgumentException\n-   #6 = String             #46            // Internal error: TypeReference constructed without actual type information\n-   #7 = Methodref          #5.#47         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #8 = Class              #48            // java/lang/reflect/ParameterizedType\n-   #9 = InterfaceMethodref #8.#49         // java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n-  #10 = Fieldref           #11.#50        // com/fasterxml/jackson/core/type/TypeReference._type:Ljava/lang/reflect/Type;\n-  #11 = Class              #51            // com/fasterxml/jackson/core/type/TypeReference\n-  #12 = Methodref          #11.#52        // com/fasterxml/jackson/core/type/TypeReference.compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #13 = Class              #53            // java/lang/Object\n-  #14 = Class              #54            // java/lang/Comparable\n+   #1 = Methodref          #13.#40        // java/lang/Object.\"<init>\":()V\n+   #2 = Methodref          #13.#41        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #3 = Methodref          #4.#42         // java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n+   #4 = Class              #43            // java/lang/Class\n+   #5 = Class              #44            // java/lang/IllegalArgumentException\n+   #6 = String             #45            // Internal error: TypeReference constructed without actual type information\n+   #7 = Methodref          #5.#46         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #8 = Class              #47            // java/lang/reflect/ParameterizedType\n+   #9 = InterfaceMethodref #8.#48         // java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n+  #10 = Fieldref           #11.#49        // com/fasterxml/jackson/core/type/TypeReference._type:Ljava/lang/reflect/Type;\n+  #11 = Class              #50            // com/fasterxml/jackson/core/type/TypeReference\n+  #12 = Methodref          #11.#51        // com/fasterxml/jackson/core/type/TypeReference.compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #13 = Class              #52            // java/lang/Object\n+  #14 = Class              #53            // java/lang/Comparable\n   #15 = Utf8               _type\n   #16 = Utf8               Ljava/lang/reflect/Type;\n   #17 = Utf8               <init>\n   #18 = Utf8               ()V\n   #19 = Utf8               Code\n   #20 = Utf8               LineNumberTable\n   #21 = Utf8               LocalVariableTable\n   #22 = Utf8               this\n   #23 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference;\n   #24 = Utf8               superClass\n   #25 = Utf8               LocalVariableTypeTable\n   #26 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n   #27 = Utf8               StackMapTable\n-  #28 = Class              #51            // com/fasterxml/jackson/core/type/TypeReference\n-  #29 = Class              #55            // java/lang/reflect/Type\n-  #30 = Utf8               getType\n-  #31 = Utf8               ()Ljava/lang/reflect/Type;\n-  #32 = Utf8               compareTo\n-  #33 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #34 = Utf8               o\n-  #35 = Utf8               Signature\n-  #36 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n-  #37 = Utf8               (Ljava/lang/Object;)I\n-  #38 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               TypeReference.java\n-  #41 = NameAndType        #17:#18        // \"<init>\":()V\n-  #42 = NameAndType        #56:#57        // getClass:()Ljava/lang/Class;\n-  #43 = NameAndType        #58:#31        // getGenericSuperclass:()Ljava/lang/reflect/Type;\n-  #44 = Utf8               java/lang/Class\n-  #45 = Utf8               java/lang/IllegalArgumentException\n-  #46 = Utf8               Internal error: TypeReference constructed without actual type information\n-  #47 = NameAndType        #17:#59        // \"<init>\":(Ljava/lang/String;)V\n-  #48 = Utf8               java/lang/reflect/ParameterizedType\n-  #49 = NameAndType        #60:#61        // getActualTypeArguments:()[Ljava/lang/reflect/Type;\n-  #50 = NameAndType        #15:#16        // _type:Ljava/lang/reflect/Type;\n-  #51 = Utf8               com/fasterxml/jackson/core/type/TypeReference\n-  #52 = NameAndType        #32:#33        // compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #53 = Utf8               java/lang/Object\n-  #54 = Utf8               java/lang/Comparable\n-  #55 = Utf8               java/lang/reflect/Type\n-  #56 = Utf8               getClass\n-  #57 = Utf8               ()Ljava/lang/Class;\n-  #58 = Utf8               getGenericSuperclass\n-  #59 = Utf8               (Ljava/lang/String;)V\n-  #60 = Utf8               getActualTypeArguments\n-  #61 = Utf8               ()[Ljava/lang/reflect/Type;\n+  #28 = Class              #54            // java/lang/reflect/Type\n+  #29 = Utf8               getType\n+  #30 = Utf8               ()Ljava/lang/reflect/Type;\n+  #31 = Utf8               compareTo\n+  #32 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #33 = Utf8               o\n+  #34 = Utf8               Signature\n+  #35 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n+  #36 = Utf8               (Ljava/lang/Object;)I\n+  #37 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n+  #38 = Utf8               SourceFile\n+  #39 = Utf8               TypeReference.java\n+  #40 = NameAndType        #17:#18        // \"<init>\":()V\n+  #41 = NameAndType        #55:#56        // getClass:()Ljava/lang/Class;\n+  #42 = NameAndType        #57:#30        // getGenericSuperclass:()Ljava/lang/reflect/Type;\n+  #43 = Utf8               java/lang/Class\n+  #44 = Utf8               java/lang/IllegalArgumentException\n+  #45 = Utf8               Internal error: TypeReference constructed without actual type information\n+  #46 = NameAndType        #17:#58        // \"<init>\":(Ljava/lang/String;)V\n+  #47 = Utf8               java/lang/reflect/ParameterizedType\n+  #48 = NameAndType        #59:#60        // getActualTypeArguments:()[Ljava/lang/reflect/Type;\n+  #49 = NameAndType        #15:#16        // _type:Ljava/lang/reflect/Type;\n+  #50 = Utf8               com/fasterxml/jackson/core/type/TypeReference\n+  #51 = NameAndType        #31:#32        // compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #52 = Utf8               java/lang/Object\n+  #53 = Utf8               java/lang/Comparable\n+  #54 = Utf8               java/lang/reflect/Type\n+  #55 = Utf8               getClass\n+  #56 = Utf8               ()Ljava/lang/Class;\n+  #57 = Utf8               getGenericSuperclass\n+  #58 = Utf8               (Ljava/lang/String;)V\n+  #59 = Utf8               getActualTypeArguments\n+  #60 = Utf8               ()[Ljava/lang/reflect/Type;\n {\n   protected final java.lang.reflect.Type _type;\n     descriptor: Ljava/lang/reflect/Type;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected com.fasterxml.jackson.core.type.TypeReference();\n     descriptor: ()V\n@@ -151,15 +150,15 @@\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/type/TypeReference;\n             0       2     1     o   Lcom/fasterxml/jackson/core/type/TypeReference;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n             0       2     1     o   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n-    Signature: #36                          // (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n+    Signature: #35                          // (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -172,9 +171,9 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/type/TypeReference;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n }\n-Signature: #38                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n+Signature: #37                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n SourceFile: \"TypeReference.java\"\n"}]}
