{"diffoscope-json-version": 1, "source1": "first/CharTypes.class", "source2": "second/CharTypes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum c57371b15f01a14baf014030471a19016fb23141c87bc0e6676bf581a2d8fc25\n+  SHA-256 checksum fc76f5e91adaa8fb500e8edfabf6f9dbbe29faf96e2644a12cc1bb3cbbd2122f\n   Compiled from \"CharTypes.java\"\n public final class com.fasterxml.jackson.core.io.CharTypes\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // com/fasterxml/jackson/core/io/CharTypes\n   super_class: #2                         // java/lang/Object\n@@ -79,109 +79,107 @@\n    #69 = Class              #47           // \"[C\"\n    #70 = NameAndType        #71:#72       // clone:()Ljava/lang/Object;\n    #71 = Utf8               clone\n    #72 = Utf8               ()Ljava/lang/Object;\n    #73 = Fieldref           #8.#74        // com/fasterxml/jackson/core/io/CharTypes.HClower:[C\n    #74 = NameAndType        #75:#47       // HClower:[C\n    #75 = Utf8               HClower\n-   #76 = Methodref          #69.#70       // \"[C\".clone:()Ljava/lang/Object;\n-   #77 = Methodref          #8.#78        // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n-   #78 = NameAndType        #79:#80       // copyHexBytes:(Z)[B\n-   #79 = Utf8               copyHexBytes\n-   #80 = Utf8               (Z)[B\n-   #81 = Fieldref           #8.#82        // com/fasterxml/jackson/core/io/CharTypes.HB:[B\n-   #82 = NameAndType        #83:#84       // HB:[B\n-   #83 = Utf8               HB\n-   #84 = Utf8               [B\n-   #85 = Methodref          #86.#70       // \"[B\".clone:()Ljava/lang/Object;\n-   #86 = Class              #84           // \"[B\"\n-   #87 = Fieldref           #8.#88        // com/fasterxml/jackson/core/io/CharTypes.HBlower:[B\n-   #88 = NameAndType        #89:#84       // HBlower:[B\n-   #89 = Utf8               HBlower\n-   #90 = Methodref          #86.#70       // \"[B\".clone:()Ljava/lang/Object;\n-   #91 = String             #92           // 0123456789ABCDEF\n-   #92 = Utf8               0123456789ABCDEF\n-   #93 = Methodref          #49.#94       // java/lang/String.toCharArray:()[C\n-   #94 = NameAndType        #95:#96       // toCharArray:()[C\n-   #95 = Utf8               toCharArray\n-   #96 = Utf8               ()[C\n-   #97 = String             #98           // 0123456789abcdef\n-   #98 = Utf8               0123456789abcdef\n-   #99 = Methodref          #100.#101     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #100 = Class              #102          // java/lang/System\n-  #101 = NameAndType        #103:#104     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #102 = Utf8               java/lang/System\n-  #103 = Utf8               arraycopy\n-  #104 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #105 = Methodref          #106.#107     // java/util/Arrays.fill:([II)V\n-  #106 = Class              #108          // java/util/Arrays\n-  #107 = NameAndType        #109:#110     // fill:([II)V\n-  #108 = Utf8               java/util/Arrays\n-  #109 = Utf8               fill\n-  #110 = Utf8               ([II)V\n-  #111 = Methodref          #112.#113     // java/lang/Character.isJavaIdentifierPart:(C)Z\n-  #112 = Class              #114          // java/lang/Character\n-  #113 = NameAndType        #115:#116     // isJavaIdentifierPart:(C)Z\n-  #114 = Utf8               java/lang/Character\n-  #115 = Utf8               isJavaIdentifierPart\n-  #116 = Utf8               (C)Z\n-  #117 = Methodref          #106.#118     // java/util/Arrays.fill:([IIII)V\n-  #118 = NameAndType        #109:#119     // fill:([IIII)V\n-  #119 = Utf8               ([IIII)V\n-  #120 = Class              #121          // com/fasterxml/jackson/core/io/CharacterEscapes\n-  #121 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n-  #122 = Utf8               Code\n-  #123 = Utf8               LineNumberTable\n-  #124 = Utf8               LocalVariableTable\n-  #125 = Utf8               this\n-  #126 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes;\n-  #127 = Utf8               getInputCodeLatin1\n-  #128 = Utf8               ()[I\n-  #129 = Utf8               getInputCodeUtf8\n-  #130 = Utf8               getInputCodeLatin1JsNames\n-  #131 = Utf8               getInputCodeUtf8JsNames\n-  #132 = Utf8               getInputCodeComment\n-  #133 = Utf8               getInputCodeWS\n-  #134 = Utf8               get7BitOutputEscapes\n-  #135 = Utf8               quoteChar\n-  #136 = Utf8               I\n-  #137 = Utf8               StackMapTable\n-  #138 = Utf8               charToHex\n-  #139 = Utf8               (I)I\n-  #140 = Utf8               ch\n-  #141 = Utf8               hexToChar\n-  #142 = Utf8               appendQuoted\n-  #143 = Utf8               (Ljava/lang/StringBuilder;Ljava/lang/String;)V\n-  #144 = Utf8               value\n-  #145 = Utf8               c\n-  #146 = Utf8               C\n-  #147 = Utf8               escCode\n-  #148 = Utf8               i\n-  #149 = Utf8               len\n-  #150 = Utf8               sb\n-  #151 = Utf8               Ljava/lang/StringBuilder;\n-  #152 = Utf8               content\n-  #153 = Utf8               Ljava/lang/String;\n-  #154 = Utf8               escCodes\n-  #155 = Utf8               escLen\n-  #156 = Class              #12           // \"[I\"\n-  #157 = Utf8               Deprecated\n-  #158 = Utf8               RuntimeVisibleAnnotations\n-  #159 = Utf8               Ljava/lang/Deprecated;\n-  #160 = Utf8               uppercase\n-  #161 = Utf8               Z\n-  #162 = Utf8               ()[B\n-  #163 = Utf8               <clinit>\n-  #164 = Utf8               table\n-  #165 = Utf8               code\n-  #166 = Utf8               buf\n-  #167 = Utf8               SourceFile\n-  #168 = Utf8               CharTypes.java\n-  #169 = Utf8               InnerClasses\n-  #170 = Utf8               AltEscapes\n+   #76 = Methodref          #8.#77        // com/fasterxml/jackson/core/io/CharTypes.copyHexBytes:(Z)[B\n+   #77 = NameAndType        #78:#79       // copyHexBytes:(Z)[B\n+   #78 = Utf8               copyHexBytes\n+   #79 = Utf8               (Z)[B\n+   #80 = Fieldref           #8.#81        // com/fasterxml/jackson/core/io/CharTypes.HB:[B\n+   #81 = NameAndType        #82:#83       // HB:[B\n+   #82 = Utf8               HB\n+   #83 = Utf8               [B\n+   #84 = Methodref          #85.#70       // \"[B\".clone:()Ljava/lang/Object;\n+   #85 = Class              #83           // \"[B\"\n+   #86 = Fieldref           #8.#87        // com/fasterxml/jackson/core/io/CharTypes.HBlower:[B\n+   #87 = NameAndType        #88:#83       // HBlower:[B\n+   #88 = Utf8               HBlower\n+   #89 = String             #90           // 0123456789ABCDEF\n+   #90 = Utf8               0123456789ABCDEF\n+   #91 = Methodref          #49.#92       // java/lang/String.toCharArray:()[C\n+   #92 = NameAndType        #93:#94       // toCharArray:()[C\n+   #93 = Utf8               toCharArray\n+   #94 = Utf8               ()[C\n+   #95 = String             #96           // 0123456789abcdef\n+   #96 = Utf8               0123456789abcdef\n+   #97 = Methodref          #98.#99       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #98 = Class              #100          // java/lang/System\n+   #99 = NameAndType        #101:#102     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #100 = Utf8               java/lang/System\n+  #101 = Utf8               arraycopy\n+  #102 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #103 = Methodref          #104.#105     // java/util/Arrays.fill:([II)V\n+  #104 = Class              #106          // java/util/Arrays\n+  #105 = NameAndType        #107:#108     // fill:([II)V\n+  #106 = Utf8               java/util/Arrays\n+  #107 = Utf8               fill\n+  #108 = Utf8               ([II)V\n+  #109 = Methodref          #110.#111     // java/lang/Character.isJavaIdentifierPart:(C)Z\n+  #110 = Class              #112          // java/lang/Character\n+  #111 = NameAndType        #113:#114     // isJavaIdentifierPart:(C)Z\n+  #112 = Utf8               java/lang/Character\n+  #113 = Utf8               isJavaIdentifierPart\n+  #114 = Utf8               (C)Z\n+  #115 = Methodref          #104.#116     // java/util/Arrays.fill:([IIII)V\n+  #116 = NameAndType        #107:#117     // fill:([IIII)V\n+  #117 = Utf8               ([IIII)V\n+  #118 = Class              #119          // com/fasterxml/jackson/core/io/CharacterEscapes\n+  #119 = Utf8               com/fasterxml/jackson/core/io/CharacterEscapes\n+  #120 = Utf8               Code\n+  #121 = Utf8               LineNumberTable\n+  #122 = Utf8               LocalVariableTable\n+  #123 = Utf8               this\n+  #124 = Utf8               Lcom/fasterxml/jackson/core/io/CharTypes;\n+  #125 = Utf8               getInputCodeLatin1\n+  #126 = Utf8               ()[I\n+  #127 = Utf8               getInputCodeUtf8\n+  #128 = Utf8               getInputCodeLatin1JsNames\n+  #129 = Utf8               getInputCodeUtf8JsNames\n+  #130 = Utf8               getInputCodeComment\n+  #131 = Utf8               getInputCodeWS\n+  #132 = Utf8               get7BitOutputEscapes\n+  #133 = Utf8               quoteChar\n+  #134 = Utf8               I\n+  #135 = Utf8               StackMapTable\n+  #136 = Utf8               charToHex\n+  #137 = Utf8               (I)I\n+  #138 = Utf8               ch\n+  #139 = Utf8               hexToChar\n+  #140 = Utf8               appendQuoted\n+  #141 = Utf8               (Ljava/lang/StringBuilder;Ljava/lang/String;)V\n+  #142 = Utf8               value\n+  #143 = Utf8               c\n+  #144 = Utf8               C\n+  #145 = Utf8               escCode\n+  #146 = Utf8               i\n+  #147 = Utf8               len\n+  #148 = Utf8               sb\n+  #149 = Utf8               Ljava/lang/StringBuilder;\n+  #150 = Utf8               content\n+  #151 = Utf8               Ljava/lang/String;\n+  #152 = Utf8               escCodes\n+  #153 = Utf8               escLen\n+  #154 = Class              #12           // \"[I\"\n+  #155 = Utf8               Deprecated\n+  #156 = Utf8               RuntimeVisibleAnnotations\n+  #157 = Utf8               Ljava/lang/Deprecated;\n+  #158 = Utf8               uppercase\n+  #159 = Utf8               Z\n+  #160 = Utf8               ()[B\n+  #161 = Utf8               <clinit>\n+  #162 = Utf8               table\n+  #163 = Utf8               code\n+  #164 = Utf8               buf\n+  #165 = Utf8               SourceFile\n+  #166 = Utf8               CharTypes.java\n+  #167 = Utf8               InnerClasses\n+  #168 = Utf8               AltEscapes\n {\n   protected static final char[] HC;\n     descriptor: [C\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n \n   protected static final char[] HClower;\n     descriptor: [C\n@@ -507,30 +505,30 @@\n          0: iconst_1\n          1: invokestatic  #64                 // Method copyHexChars:(Z)[C\n          4: areturn\n       LineNumberTable:\n         line 296: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #159()\n+      0: #157()\n         java.lang.Deprecated\n \n   public static char[] copyHexChars(boolean);\n     descriptor: (Z)[C\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n          1: ifeq          16\n          4: getstatic     #44                 // Field HC:[C\n          7: invokevirtual #68                 // Method \"[C\".clone:()Ljava/lang/Object;\n         10: checkcast     #69                 // class \"[C\"\n         13: goto          25\n         16: getstatic     #73                 // Field HClower:[C\n-        19: invokevirtual #76                 // Method \"[C\".clone:()Ljava/lang/Object;\n+        19: invokevirtual #68                 // Method \"[C\".clone:()Ljava/lang/Object;\n         22: checkcast     #69                 // class \"[C\"\n         25: areturn\n       LineNumberTable:\n         line 300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 uppercase   Z\n@@ -541,37 +539,37 @@\n \n   public static byte[] copyHexBytes();\n     descriptor: ()[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_1\n-         1: invokestatic  #77                 // Method copyHexBytes:(Z)[B\n+         1: invokestatic  #76                 // Method copyHexBytes:(Z)[B\n          4: areturn\n       LineNumberTable:\n         line 308: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #159()\n+      0: #157()\n         java.lang.Deprecated\n \n   public static byte[] copyHexBytes(boolean);\n     descriptor: (Z)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n          1: ifeq          16\n-         4: getstatic     #81                 // Field HB:[B\n-         7: invokevirtual #85                 // Method \"[B\".clone:()Ljava/lang/Object;\n-        10: checkcast     #86                 // class \"[B\"\n+         4: getstatic     #80                 // Field HB:[B\n+         7: invokevirtual #84                 // Method \"[B\".clone:()Ljava/lang/Object;\n+        10: checkcast     #85                 // class \"[B\"\n         13: goto          25\n-        16: getstatic     #87                 // Field HBlower:[B\n-        19: invokevirtual #90                 // Method \"[B\".clone:()Ljava/lang/Object;\n-        22: checkcast     #86                 // class \"[B\"\n+        16: getstatic     #86                 // Field HBlower:[B\n+        19: invokevirtual #84                 // Method \"[B\".clone:()Ljava/lang/Object;\n+        22: checkcast     #85                 // class \"[B\"\n         25: areturn\n       LineNumberTable:\n         line 312: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 uppercase   Z\n       StackMapTable: number_of_entries = 2\n@@ -580,42 +578,42 @@\n           stack = [ class \"[B\" ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=0\n-         0: ldc           #91                 // String 0123456789ABCDEF\n-         2: invokevirtual #93                 // Method java/lang/String.toCharArray:()[C\n+         0: ldc           #89                 // String 0123456789ABCDEF\n+         2: invokevirtual #91                 // Method java/lang/String.toCharArray:()[C\n          5: putstatic     #44                 // Field HC:[C\n-         8: ldc           #97                 // String 0123456789abcdef\n-        10: invokevirtual #93                 // Method java/lang/String.toCharArray:()[C\n+         8: ldc           #95                 // String 0123456789abcdef\n+        10: invokevirtual #91                 // Method java/lang/String.toCharArray:()[C\n         13: putstatic     #73                 // Field HClower:[C\n         16: getstatic     #44                 // Field HC:[C\n         19: arraylength\n         20: istore_0\n         21: iload_0\n         22: newarray       byte\n-        24: putstatic     #81                 // Field HB:[B\n+        24: putstatic     #80                 // Field HB:[B\n         27: iload_0\n         28: newarray       byte\n-        30: putstatic     #87                 // Field HBlower:[B\n+        30: putstatic     #86                 // Field HBlower:[B\n         33: iconst_0\n         34: istore_1\n         35: iload_1\n         36: iload_0\n         37: if_icmpge     68\n-        40: getstatic     #81                 // Field HB:[B\n+        40: getstatic     #80                 // Field HB:[B\n         43: iload_1\n         44: getstatic     #44                 // Field HC:[C\n         47: iload_1\n         48: caload\n         49: i2b\n         50: bastore\n-        51: getstatic     #87                 // Field HBlower:[B\n+        51: getstatic     #86                 // Field HBlower:[B\n         54: iload_1\n         55: getstatic     #73                 // Field HClower:[C\n         58: iload_1\n         59: caload\n         60: i2b\n         61: bastore\n         62: iinc          1, 1\n@@ -650,15 +648,15 @@\n        112: astore_0\n        113: getstatic     #7                  // Field sInputCodes:[I\n        116: iconst_0\n        117: aload_0\n        118: iconst_0\n        119: aload_0\n        120: arraylength\n-       121: invokestatic  #99                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       121: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        124: sipush        128\n        127: istore_1\n        128: iload_1\n        129: sipush        256\n        132: if_icmpge     195\n        135: iload_1\n        136: sipush        224\n@@ -695,23 +693,23 @@\n        195: aload_0\n        196: putstatic     #13                 // Field sInputCodesUTF8:[I\n        199: sipush        256\n        202: newarray       int\n        204: astore_0\n        205: aload_0\n        206: iconst_m1\n-       207: invokestatic  #105                // Method java/util/Arrays.fill:([II)V\n+       207: invokestatic  #103                // Method java/util/Arrays.fill:([II)V\n        210: bipush        33\n        212: istore_1\n        213: iload_1\n        214: sipush        256\n        217: if_icmpge     238\n        220: iload_1\n        221: i2c\n-       222: invokestatic  #111                // Method java/lang/Character.isJavaIdentifierPart:(C)Z\n+       222: invokestatic  #109                // Method java/lang/Character.isJavaIdentifierPart:(C)Z\n        225: ifeq          232\n        228: aload_0\n        229: iload_1\n        230: iconst_0\n        231: iastore\n        232: iinc          1, 1\n        235: goto          213\n@@ -742,36 +740,36 @@\n        272: astore_0\n        273: getstatic     #16                 // Field sInputCodesJsNames:[I\n        276: iconst_0\n        277: aload_0\n        278: iconst_0\n        279: aload_0\n        280: arraylength\n-       281: invokestatic  #99                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       281: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        284: aload_0\n        285: sipush        128\n        288: sipush        128\n        291: iconst_0\n-       292: invokestatic  #117                // Method java/util/Arrays.fill:([IIII)V\n+       292: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        295: aload_0\n        296: putstatic     #19                 // Field sInputCodesUtf8JsNames:[I\n        299: sipush        256\n        302: newarray       int\n        304: astore_0\n        305: getstatic     #13                 // Field sInputCodesUTF8:[I\n        308: sipush        128\n        311: aload_0\n        312: sipush        128\n        315: sipush        128\n-       318: invokestatic  #99                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       318: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        321: aload_0\n        322: iconst_0\n        323: bipush        32\n        325: iconst_m1\n-       326: invokestatic  #117                // Method java/util/Arrays.fill:([IIII)V\n+       326: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        329: aload_0\n        330: bipush        9\n        332: iconst_0\n        333: iastore\n        334: aload_0\n        335: bipush        10\n        337: bipush        10\n@@ -790,20 +788,20 @@\n        359: newarray       int\n        361: astore_0\n        362: getstatic     #13                 // Field sInputCodesUTF8:[I\n        365: sipush        128\n        368: aload_0\n        369: sipush        128\n        372: sipush        128\n-       375: invokestatic  #99                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       375: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        378: aload_0\n        379: iconst_0\n        380: bipush        32\n        382: iconst_m1\n-       383: invokestatic  #117                // Method java/util/Arrays.fill:([IIII)V\n+       383: invokestatic  #115                // Method java/util/Arrays.fill:([IIII)V\n        386: aload_0\n        387: bipush        32\n        389: iconst_1\n        390: iastore\n        391: aload_0\n        392: bipush        9\n        394: iconst_1\n@@ -871,15 +869,15 @@\n        490: aload_0\n        491: putstatic     #28                 // Field sOutputEscapes128:[I\n        494: sipush        256\n        497: newarray       int\n        499: putstatic     #41                 // Field sHexValues:[I\n        502: getstatic     #41                 // Field sHexValues:[I\n        505: iconst_m1\n-       506: invokestatic  #105                // Method java/util/Arrays.fill:([II)V\n+       506: invokestatic  #103                // Method java/util/Arrays.fill:([II)V\n        509: iconst_0\n        510: istore_0\n        511: iload_0\n        512: bipush        10\n        514: if_icmpge     532\n        517: getstatic     #41                 // Field sHexValues:[I\n        520: bipush        48\n@@ -1063,8 +1061,8 @@\n           offset_delta = 1\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 35\n }\n SourceFile: \"CharTypes.java\"\n InnerClasses:\n-  private static #170= #32 of #8;         // AltEscapes=class com/fasterxml/jackson/core/io/CharTypes$AltEscapes of class com/fasterxml/jackson/core/io/CharTypes\n+  private static #168= #32 of #8;         // AltEscapes=class com/fasterxml/jackson/core/io/CharTypes$AltEscapes of class com/fasterxml/jackson/core/io/CharTypes\n"}]}
