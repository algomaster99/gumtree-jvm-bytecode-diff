{"diffoscope-json-version": 1, "source1": "first/EnumElementValueGen.class", "source2": "second/EnumElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,52 +1,52 @@\n-  SHA-256 checksum 53c3e921cb517cd8440199afe50ac1cc423f877524c93cdc698d485f8825eee8\n+  SHA-256 checksum 2cbadfaed7b7c91e8e0140d093db8cfedfbf4efe7bcfb82d4b4d3e8ed6c67011\n   Compiled from \"EnumElementValueGen.java\"\n public class org.apache.bcel.generic.EnumElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #35                         // org/apache/bcel/generic/EnumElementValueGen\n   super_class: #1                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Class              #81           // org/apache/bcel/generic/ElementValueGen\n-    #2 = Methodref          #1.#82        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #3 = Methodref          #28.#83       // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n-    #4 = Methodref          #84.#85       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-    #5 = Fieldref           #35.#86       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n-    #6 = Methodref          #28.#87       // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n-    #7 = Fieldref           #35.#88       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n-    #8 = Methodref          #28.#89       // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n-    #9 = Methodref          #28.#90       // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n-   #10 = Methodref          #1.#91        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #11 = Class              #92           // java/lang/IllegalArgumentException\n-   #12 = Class              #93           // java/lang/StringBuilder\n-   #13 = Methodref          #12.#94       // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #95           // Only element values of type enum can be built with this ctor - type specified:\n-   #15 = Methodref          #12.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#97       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#98       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#99       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #100.#101     // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n-   #20 = Methodref          #102.#103     // java/io/DataOutputStream.writeByte:(I)V\n-   #21 = Methodref          #102.#104     // java/io/DataOutputStream.writeShort:(I)V\n-   #22 = Fieldref           #105.#106     // java/lang/System.err:Ljava/io/PrintStream;\n-   #23 = String             #107          // Duplicating value:\n-   #24 = Methodref          #35.#83       // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n-   #25 = String             #108          // :\n-   #26 = Methodref          #35.#87       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n-   #27 = Methodref          #109.#110     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #28 = Class              #111          // org/apache/bcel/classfile/EnumElementValue\n-   #29 = Methodref          #35.#112      // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #30 = Methodref          #84.#113      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #31 = Methodref          #28.#114      // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #32 = Methodref          #84.#115      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #33 = Class              #116          // org/apache/bcel/classfile/ConstantUtf8\n-   #34 = Methodref          #33.#117      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #35 = Class              #118          // org/apache/bcel/generic/EnumElementValueGen\n+    #1 = Class              #79           // org/apache/bcel/generic/ElementValueGen\n+    #2 = Methodref          #1.#80        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #3 = Methodref          #28.#81       // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n+    #4 = Methodref          #53.#82       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+    #5 = Fieldref           #35.#83       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n+    #6 = Methodref          #28.#84       // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n+    #7 = Fieldref           #35.#85       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n+    #8 = Methodref          #28.#86       // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n+    #9 = Methodref          #28.#87       // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n+   #10 = Methodref          #1.#88        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #11 = Class              #89           // java/lang/IllegalArgumentException\n+   #12 = Class              #90           // java/lang/StringBuilder\n+   #13 = Methodref          #12.#91       // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #92           // Only element values of type enum can be built with this ctor - type specified:\n+   #15 = Methodref          #12.#93       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #12.#94       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #12.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #18 = Methodref          #11.#96       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #19 = Methodref          #97.#98       // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n+   #20 = Methodref          #99.#100      // java/io/DataOutputStream.writeByte:(I)V\n+   #21 = Methodref          #99.#101      // java/io/DataOutputStream.writeShort:(I)V\n+   #22 = Fieldref           #102.#103     // java/lang/System.err:Ljava/io/PrintStream;\n+   #23 = String             #104          // Duplicating value:\n+   #24 = Methodref          #35.#81       // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n+   #25 = String             #105          // :\n+   #26 = Methodref          #35.#84       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n+   #27 = Methodref          #106.#107     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #28 = Class              #108          // org/apache/bcel/classfile/EnumElementValue\n+   #29 = Methodref          #35.#109      // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #30 = Methodref          #53.#110      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #31 = Methodref          #28.#111      // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #32 = Methodref          #53.#112      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #33 = Class              #113          // org/apache/bcel/classfile/ConstantUtf8\n+   #34 = Methodref          #33.#114      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #35 = Class              #115          // org/apache/bcel/generic/EnumElementValueGen\n    #36 = Utf8               typeIdx\n    #37 = Utf8               I\n    #38 = Utf8               valueIdx\n    #39 = Utf8               <init>\n    #40 = Utf8               (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n    #41 = Utf8               Code\n    #42 = Utf8               LineNumberTable\n@@ -56,110 +56,107 @@\n    #46 = Utf8               value\n    #47 = Utf8               Lorg/apache/bcel/classfile/EnumElementValue;\n    #48 = Utf8               cpool\n    #49 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n    #50 = Utf8               copyPoolEntries\n    #51 = Utf8               Z\n    #52 = Utf8               StackMapTable\n-   #53 = Class              #118          // org/apache/bcel/generic/EnumElementValueGen\n-   #54 = Class              #111          // org/apache/bcel/classfile/EnumElementValue\n-   #55 = Class              #119          // org/apache/bcel/generic/ConstantPoolGen\n-   #56 = Utf8               MethodParameters\n-   #57 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #58 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #59 = Utf8               t\n-   #60 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n-   #61 = Utf8               Ljava/lang/String;\n-   #62 = Utf8               dump\n-   #63 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #64 = Utf8               dos\n-   #65 = Utf8               Ljava/io/DataOutputStream;\n-   #66 = Utf8               Exceptions\n-   #67 = Class              #120          // java/io/IOException\n-   #68 = Utf8               getElementValue\n-   #69 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #70 = Utf8               getEnumTypeString\n-   #71 = Utf8               ()Ljava/lang/String;\n-   #72 = Utf8               getEnumValueString\n-   #73 = Utf8               getTypeIndex\n-   #74 = Utf8               ()I\n-   #75 = Utf8               getValueIndex\n-   #76 = Utf8               stringifyValue\n-   #77 = Utf8               cu8\n-   #78 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               EnumElementValueGen.java\n-   #81 = Utf8               org/apache/bcel/generic/ElementValueGen\n-   #82 = NameAndType        #39:#121      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #83 = NameAndType        #70:#71       // getEnumTypeString:()Ljava/lang/String;\n-   #84 = Class              #119          // org/apache/bcel/generic/ConstantPoolGen\n-   #85 = NameAndType        #122:#123     // addUtf8:(Ljava/lang/String;)I\n-   #86 = NameAndType        #36:#37       // typeIdx:I\n-   #87 = NameAndType        #72:#71       // getEnumValueString:()Ljava/lang/String;\n-   #88 = NameAndType        #38:#37       // valueIdx:I\n-   #89 = NameAndType        #73:#74       // getTypeIndex:()I\n-   #90 = NameAndType        #75:#74       // getValueIndex:()I\n-   #91 = NameAndType        #124:#74      // getElementValueType:()I\n-   #92 = Utf8               java/lang/IllegalArgumentException\n-   #93 = Utf8               java/lang/StringBuilder\n-   #94 = NameAndType        #39:#125      // \"<init>\":()V\n-   #95 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n-   #96 = NameAndType        #126:#127     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #126:#128     // append:(I)Ljava/lang/StringBuilder;\n-   #98 = NameAndType        #129:#71      // toString:()Ljava/lang/String;\n-   #99 = NameAndType        #39:#130      // \"<init>\":(Ljava/lang/String;)V\n-  #100 = Class              #131          // org/apache/bcel/generic/ObjectType\n-  #101 = NameAndType        #132:#71      // getSignature:()Ljava/lang/String;\n-  #102 = Class              #133          // java/io/DataOutputStream\n-  #103 = NameAndType        #134:#135     // writeByte:(I)V\n-  #104 = NameAndType        #136:#135     // writeShort:(I)V\n-  #105 = Class              #137          // java/lang/System\n-  #106 = NameAndType        #138:#139     // err:Ljava/io/PrintStream;\n-  #107 = Utf8               Duplicating value:\n-  #108 = Utf8               :\n-  #109 = Class              #140          // java/io/PrintStream\n-  #110 = NameAndType        #141:#130     // println:(Ljava/lang/String;)V\n-  #111 = Utf8               org/apache/bcel/classfile/EnumElementValue\n-  #112 = NameAndType        #142:#143     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #113 = NameAndType        #142:#144     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #114 = NameAndType        #39:#145      // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-  #115 = NameAndType        #146:#147     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #116 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #117 = NameAndType        #148:#71      // getBytes:()Ljava/lang/String;\n-  #118 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n-  #119 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #120 = Utf8               java/io/IOException\n-  #121 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #122 = Utf8               addUtf8\n-  #123 = Utf8               (Ljava/lang/String;)I\n-  #124 = Utf8               getElementValueType\n-  #125 = Utf8               ()V\n-  #126 = Utf8               append\n-  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #128 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #129 = Utf8               toString\n-  #130 = Utf8               (Ljava/lang/String;)V\n-  #131 = Utf8               org/apache/bcel/generic/ObjectType\n-  #132 = Utf8               getSignature\n-  #133 = Utf8               java/io/DataOutputStream\n-  #134 = Utf8               writeByte\n-  #135 = Utf8               (I)V\n-  #136 = Utf8               writeShort\n-  #137 = Utf8               java/lang/System\n-  #138 = Utf8               err\n-  #139 = Utf8               Ljava/io/PrintStream;\n-  #140 = Utf8               java/io/PrintStream\n-  #141 = Utf8               println\n-  #142 = Utf8               getConstantPool\n-  #143 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #144 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #145 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n-  #146 = Utf8               getConstant\n-  #147 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #148 = Utf8               getBytes\n+   #53 = Class              #116          // org/apache/bcel/generic/ConstantPoolGen\n+   #54 = Utf8               MethodParameters\n+   #55 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #56 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #57 = Utf8               t\n+   #58 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n+   #59 = Utf8               Ljava/lang/String;\n+   #60 = Utf8               dump\n+   #61 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #62 = Utf8               dos\n+   #63 = Utf8               Ljava/io/DataOutputStream;\n+   #64 = Utf8               Exceptions\n+   #65 = Class              #117          // java/io/IOException\n+   #66 = Utf8               getElementValue\n+   #67 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+   #68 = Utf8               getEnumTypeString\n+   #69 = Utf8               ()Ljava/lang/String;\n+   #70 = Utf8               getEnumValueString\n+   #71 = Utf8               getTypeIndex\n+   #72 = Utf8               ()I\n+   #73 = Utf8               getValueIndex\n+   #74 = Utf8               stringifyValue\n+   #75 = Utf8               cu8\n+   #76 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n+   #77 = Utf8               SourceFile\n+   #78 = Utf8               EnumElementValueGen.java\n+   #79 = Utf8               org/apache/bcel/generic/ElementValueGen\n+   #80 = NameAndType        #39:#118      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #81 = NameAndType        #68:#69       // getEnumTypeString:()Ljava/lang/String;\n+   #82 = NameAndType        #119:#120     // addUtf8:(Ljava/lang/String;)I\n+   #83 = NameAndType        #36:#37       // typeIdx:I\n+   #84 = NameAndType        #70:#69       // getEnumValueString:()Ljava/lang/String;\n+   #85 = NameAndType        #38:#37       // valueIdx:I\n+   #86 = NameAndType        #71:#72       // getTypeIndex:()I\n+   #87 = NameAndType        #73:#72       // getValueIndex:()I\n+   #88 = NameAndType        #121:#72      // getElementValueType:()I\n+   #89 = Utf8               java/lang/IllegalArgumentException\n+   #90 = Utf8               java/lang/StringBuilder\n+   #91 = NameAndType        #39:#122      // \"<init>\":()V\n+   #92 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n+   #93 = NameAndType        #123:#124     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #94 = NameAndType        #123:#125     // append:(I)Ljava/lang/StringBuilder;\n+   #95 = NameAndType        #126:#69      // toString:()Ljava/lang/String;\n+   #96 = NameAndType        #39:#127      // \"<init>\":(Ljava/lang/String;)V\n+   #97 = Class              #128          // org/apache/bcel/generic/ObjectType\n+   #98 = NameAndType        #129:#69      // getSignature:()Ljava/lang/String;\n+   #99 = Class              #130          // java/io/DataOutputStream\n+  #100 = NameAndType        #131:#132     // writeByte:(I)V\n+  #101 = NameAndType        #133:#132     // writeShort:(I)V\n+  #102 = Class              #134          // java/lang/System\n+  #103 = NameAndType        #135:#136     // err:Ljava/io/PrintStream;\n+  #104 = Utf8               Duplicating value:\n+  #105 = Utf8               :\n+  #106 = Class              #137          // java/io/PrintStream\n+  #107 = NameAndType        #138:#127     // println:(Ljava/lang/String;)V\n+  #108 = Utf8               org/apache/bcel/classfile/EnumElementValue\n+  #109 = NameAndType        #139:#140     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #110 = NameAndType        #139:#141     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #111 = NameAndType        #39:#142      // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #112 = NameAndType        #143:#144     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #113 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #114 = NameAndType        #145:#69      // getBytes:()Ljava/lang/String;\n+  #115 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n+  #116 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #117 = Utf8               java/io/IOException\n+  #118 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #119 = Utf8               addUtf8\n+  #120 = Utf8               (Ljava/lang/String;)I\n+  #121 = Utf8               getElementValueType\n+  #122 = Utf8               ()V\n+  #123 = Utf8               append\n+  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #125 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #126 = Utf8               toString\n+  #127 = Utf8               (Ljava/lang/String;)V\n+  #128 = Utf8               org/apache/bcel/generic/ObjectType\n+  #129 = Utf8               getSignature\n+  #130 = Utf8               java/io/DataOutputStream\n+  #131 = Utf8               writeByte\n+  #132 = Utf8               (I)V\n+  #133 = Utf8               writeShort\n+  #134 = Utf8               java/lang/System\n+  #135 = Utf8               err\n+  #136 = Utf8               Ljava/io/PrintStream;\n+  #137 = Utf8               java/io/PrintStream\n+  #138 = Utf8               println\n+  #139 = Utf8               getConstantPool\n+  #140 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #141 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #142 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #143 = Utf8               getConstant\n+  #144 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #145 = Utf8               getBytes\n {\n   private final int typeIdx;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int valueIdx;\n     descriptor: I\n"}]}
