{"diffoscope-json-version": 1, "source1": "first/FTPFile.class", "source2": "second/FTPFile.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -104,16 +104,16 @@\n         return this.type;\n     }\n     \n     public String getUser() {\n         return this.user;\n     }\n     \n-    public boolean hasPermission(final int access, final int permission) {\n-        return this.permissions != null && this.permissions[access][permission];\n+    public boolean hasPermission(final int n, final int n2) {\n+        return this.permissions != null && this.permissions[n][n2];\n     }\n     \n     public boolean isDirectory() {\n         return this.type == 1;\n     }\n     \n     public boolean isFile() {\n@@ -128,132 +128,132 @@\n         return this.type == 3;\n     }\n     \n     public boolean isValid() {\n         return this.permissions != null;\n     }\n     \n-    private String permissionToString(final int access) {\n+    private String permissionToString(final int n) {\n         final StringBuilder sb = new StringBuilder();\n-        if (this.hasPermission(access, 0)) {\n+        if (this.hasPermission(n, 0)) {\n             sb.append('r');\n         }\n         else {\n             sb.append('-');\n         }\n-        if (this.hasPermission(access, 1)) {\n+        if (this.hasPermission(n, 1)) {\n             sb.append('w');\n         }\n         else {\n             sb.append('-');\n         }\n-        if (this.hasPermission(access, 2)) {\n+        if (this.hasPermission(n, 2)) {\n             sb.append('x');\n         }\n         else {\n             sb.append('-');\n         }\n         return sb.toString();\n     }\n     \n-    private void readObject(final ObjectInputStream in) {\n+    private void readObject(final ObjectInputStream objectInputStream) {\n         throw new UnsupportedOperationException(\"Serialization is not supported\");\n     }\n     \n     public void setGroup(final String group) {\n         this.group = group;\n     }\n     \n-    public void setHardLinkCount(final int links) {\n-        this.hardLinkCount = links;\n+    public void setHardLinkCount(final int hardLinkCount) {\n+        this.hardLinkCount = hardLinkCount;\n     }\n     \n     public void setLink(final String link) {\n         this.link = link;\n     }\n     \n     public void setName(final String name) {\n         this.name = name;\n     }\n     \n-    public void setPermission(final int access, final int permission, final boolean value) {\n-        this.permissions[access][permission] = value;\n+    public void setPermission(final int n, final int n2, final boolean b) {\n+        this.permissions[n][n2] = b;\n     }\n     \n     public void setRawListing(final String rawListing) {\n         this.rawListing = rawListing;\n     }\n     \n     public void setSize(final long size) {\n         this.size = size;\n     }\n     \n-    public void setTimestamp(final Calendar date) {\n-        this.calendar = date;\n+    public void setTimestamp(final Calendar calendar) {\n+        this.calendar = calendar;\n     }\n     \n     public void setType(final int type) {\n         this.type = type;\n     }\n     \n     public void setUser(final String user) {\n         this.user = user;\n     }\n     \n     public String toFormattedString() {\n         return this.toFormattedString(null);\n     }\n     \n-    public String toFormattedString(final String timezone) {\n+    public String toFormattedString(final String id) {\n         if (!this.isValid()) {\n             return \"[Invalid: could not parse file entry]\";\n         }\n-        final StringBuilder sb = new StringBuilder();\n-        try (final Formatter fmt = new Formatter(sb)) {\n-            sb.append(this.formatType());\n-            sb.append(this.permissionToString(0));\n-            sb.append(this.permissionToString(1));\n-            sb.append(this.permissionToString(2));\n-            fmt.format(\" %4d\", Integer.valueOf(this.getHardLinkCount()));\n-            fmt.format(\" %-8s %-8s\", this.getUser(), this.getGroup());\n-            fmt.format(\" %8d\", Long.valueOf(this.getSize()));\n+        final StringBuilder a = new StringBuilder();\n+        try (final Formatter formatter = new Formatter(a)) {\n+            a.append(this.formatType());\n+            a.append(this.permissionToString(0));\n+            a.append(this.permissionToString(1));\n+            a.append(this.permissionToString(2));\n+            formatter.format(\" %4d\", Integer.valueOf(this.getHardLinkCount()));\n+            formatter.format(\" %-8s %-8s\", this.getUser(), this.getGroup());\n+            formatter.format(\" %8d\", Long.valueOf(this.getSize()));\n             Calendar timestamp = this.getTimestamp();\n             if (timestamp != null) {\n-                if (timezone != null) {\n-                    final TimeZone newZone = TimeZone.getTimeZone(timezone);\n-                    if (!newZone.equals(timestamp.getTimeZone())) {\n-                        final Date original = timestamp.getTime();\n-                        final Calendar newStamp = Calendar.getInstance(newZone);\n-                        newStamp.setTime(original);\n-                        timestamp = newStamp;\n+                if (id != null) {\n+                    final TimeZone timeZone = TimeZone.getTimeZone(id);\n+                    if (!timeZone.equals(timestamp.getTimeZone())) {\n+                        final Date time = timestamp.getTime();\n+                        final Calendar instance = Calendar.getInstance(timeZone);\n+                        instance.setTime(time);\n+                        timestamp = instance;\n                     }\n                 }\n-                fmt.format(\" %1$tY-%1$tm-%1$td\", timestamp);\n+                formatter.format(\" %1$tY-%1$tm-%1$td\", timestamp);\n                 if (timestamp.isSet(11)) {\n-                    fmt.format(\" %1$tH\", timestamp);\n+                    formatter.format(\" %1$tH\", timestamp);\n                     if (timestamp.isSet(12)) {\n-                        fmt.format(\":%1$tM\", timestamp);\n+                        formatter.format(\":%1$tM\", timestamp);\n                         if (timestamp.isSet(13)) {\n-                            fmt.format(\":%1$tS\", timestamp);\n+                            formatter.format(\":%1$tS\", timestamp);\n                             if (timestamp.isSet(14)) {\n-                                fmt.format(\".%1$tL\", timestamp);\n+                                formatter.format(\".%1$tL\", timestamp);\n                             }\n                         }\n                     }\n-                    fmt.format(\" %1$tZ\", timestamp);\n+                    formatter.format(\" %1$tZ\", timestamp);\n                 }\n             }\n-            sb.append(' ');\n-            sb.append(this.getName());\n+            a.append(' ');\n+            a.append(this.getName());\n         }\n-        return sb.toString();\n+        return a.toString();\n     }\n     \n     @Override\n     public String toString() {\n         return this.getRawListing();\n     }\n     \n-    private void writeObject(final ObjectOutputStream out) {\n+    private void writeObject(final ObjectOutputStream objectOutputStream) {\n         throw new UnsupportedOperationException(\"Serialization is not supported\");\n     }\n }\n"}]}
