{"diffoscope-json-version": 1, "source1": "first/ThreadMonitor.class", "source2": "second/ThreadMonitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,92 +1,92 @@\n-  SHA-256 checksum 06190633a32350814081bd57d5b1f77e13d7fa25e324266606afaca8ff20d34c\n+  SHA-256 checksum 6258d7c236d75c05fcd42a841afe98c82eaffef8bf157af0df5f5cce27557f73\n   Compiled from \"ThreadMonitor.java\"\n final class org.apache.commons.io.ThreadMonitor implements java.lang.Runnable\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/io/ThreadMonitor\n-  super_class: #18                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/io/ThreadMonitor\n+  super_class: #46                        // java/lang/Object\n   interfaces: 1, fields: 2, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #5.#38         // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #2 = Methodref          #6.#39         // org/apache/commons/io/ThreadMonitor.start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n-   #3 = Methodref          #40.#41        // java/time/Duration.isZero:()Z\n-   #4 = Methodref          #40.#42        // java/time/Duration.isNegative:()Z\n-   #5 = Class              #43            // java/lang/Thread\n-   #6 = Class              #44            // org/apache/commons/io/ThreadMonitor\n-   #7 = Methodref          #6.#45         // org/apache/commons/io/ThreadMonitor.\"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n-   #8 = Methodref          #46.#47        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #9 = Methodref          #5.#48         // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n-  #10 = Methodref          #5.#49         // java/lang/Thread.setDaemon:(Z)V\n-  #11 = Methodref          #5.#50         // java/lang/Thread.start:()V\n-  #12 = Methodref          #5.#51         // java/lang/Thread.interrupt:()V\n-  #13 = Methodref          #18.#52        // java/lang/Object.\"<init>\":()V\n-  #14 = Fieldref           #6.#53         // org/apache/commons/io/ThreadMonitor.thread:Ljava/lang/Thread;\n-  #15 = Fieldref           #6.#54         // org/apache/commons/io/ThreadMonitor.timeout:Ljava/time/Duration;\n-  #16 = Methodref          #55.#56        // org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n-  #17 = Class              #57            // java/lang/InterruptedException\n-  #18 = Class              #58            // java/lang/Object\n-  #19 = Class              #59            // java/lang/Runnable\n-  #20 = Utf8               thread\n-  #21 = Utf8               Ljava/lang/Thread;\n-  #22 = Utf8               timeout\n-  #23 = Utf8               Ljava/time/Duration;\n-  #24 = Utf8               start\n-  #25 = Utf8               (Ljava/time/Duration;)Ljava/lang/Thread;\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               (Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               stop\n-  #31 = Utf8               (Ljava/lang/Thread;)V\n-  #32 = Utf8               <init>\n-  #33 = Utf8               (Ljava/lang/Thread;Ljava/time/Duration;)V\n-  #34 = Utf8               run\n-  #35 = Utf8               ()V\n-  #36 = Utf8               SourceFile\n-  #37 = Utf8               ThreadMonitor.java\n-  #38 = NameAndType        #60:#61        // currentThread:()Ljava/lang/Thread;\n-  #39 = NameAndType        #24:#28        // start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n-  #40 = Class              #62            // java/time/Duration\n-  #41 = NameAndType        #63:#64        // isZero:()Z\n-  #42 = NameAndType        #65:#64        // isNegative:()Z\n-  #43 = Utf8               java/lang/Thread\n-  #44 = Utf8               org/apache/commons/io/ThreadMonitor\n-  #45 = NameAndType        #32:#33        // \"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n-  #46 = Class              #66            // java/lang/Class\n-  #47 = NameAndType        #67:#68        // getSimpleName:()Ljava/lang/String;\n-  #48 = NameAndType        #32:#69        // \"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n-  #49 = NameAndType        #70:#71        // setDaemon:(Z)V\n-  #50 = NameAndType        #24:#35        // start:()V\n-  #51 = NameAndType        #72:#35        // interrupt:()V\n-  #52 = NameAndType        #32:#35        // \"<init>\":()V\n-  #53 = NameAndType        #20:#21        // thread:Ljava/lang/Thread;\n-  #54 = NameAndType        #22:#23        // timeout:Ljava/time/Duration;\n-  #55 = Class              #73            // org/apache/commons/io/ThreadUtils\n-  #56 = NameAndType        #74:#75        // sleep:(Ljava/time/Duration;)V\n-  #57 = Utf8               java/lang/InterruptedException\n-  #58 = Utf8               java/lang/Object\n-  #59 = Utf8               java/lang/Runnable\n-  #60 = Utf8               currentThread\n-  #61 = Utf8               ()Ljava/lang/Thread;\n-  #62 = Utf8               java/time/Duration\n-  #63 = Utf8               isZero\n-  #64 = Utf8               ()Z\n-  #65 = Utf8               isNegative\n-  #66 = Utf8               java/lang/Class\n-  #67 = Utf8               getSimpleName\n-  #68 = Utf8               ()Ljava/lang/String;\n-  #69 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V\n-  #70 = Utf8               setDaemon\n-  #71 = Utf8               (Z)V\n-  #72 = Utf8               interrupt\n-  #73 = Utf8               org/apache/commons/io/ThreadUtils\n-  #74 = Utf8               sleep\n-  #75 = Utf8               (Ljava/time/Duration;)V\n+   #1 = Methodref          #2.#3          // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #2 = Class              #4             // java/lang/Thread\n+   #3 = NameAndType        #5:#6          // currentThread:()Ljava/lang/Thread;\n+   #4 = Utf8               java/lang/Thread\n+   #5 = Utf8               currentThread\n+   #6 = Utf8               ()Ljava/lang/Thread;\n+   #7 = Methodref          #8.#9          // org/apache/commons/io/ThreadMonitor.start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n+   #8 = Class              #10            // org/apache/commons/io/ThreadMonitor\n+   #9 = NameAndType        #11:#12        // start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n+  #10 = Utf8               org/apache/commons/io/ThreadMonitor\n+  #11 = Utf8               start\n+  #12 = Utf8               (Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n+  #13 = Methodref          #14.#15        // java/time/Duration.isZero:()Z\n+  #14 = Class              #16            // java/time/Duration\n+  #15 = NameAndType        #17:#18        // isZero:()Z\n+  #16 = Utf8               java/time/Duration\n+  #17 = Utf8               isZero\n+  #18 = Utf8               ()Z\n+  #19 = Methodref          #14.#20        // java/time/Duration.isNegative:()Z\n+  #20 = NameAndType        #21:#18        // isNegative:()Z\n+  #21 = Utf8               isNegative\n+  #22 = Methodref          #8.#23         // org/apache/commons/io/ThreadMonitor.\"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n+  #23 = NameAndType        #24:#25        // \"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n+  #24 = Utf8               <init>\n+  #25 = Utf8               (Ljava/lang/Thread;Ljava/time/Duration;)V\n+  #26 = Methodref          #27.#28        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #27 = Class              #29            // java/lang/Class\n+  #28 = NameAndType        #30:#31        // getSimpleName:()Ljava/lang/String;\n+  #29 = Utf8               java/lang/Class\n+  #30 = Utf8               getSimpleName\n+  #31 = Utf8               ()Ljava/lang/String;\n+  #32 = Methodref          #2.#33         // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n+  #33 = NameAndType        #24:#34        // \"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n+  #34 = Utf8               (Ljava/lang/Runnable;Ljava/lang/String;)V\n+  #35 = Methodref          #2.#36         // java/lang/Thread.setDaemon:(Z)V\n+  #36 = NameAndType        #37:#38        // setDaemon:(Z)V\n+  #37 = Utf8               setDaemon\n+  #38 = Utf8               (Z)V\n+  #39 = Methodref          #2.#40         // java/lang/Thread.start:()V\n+  #40 = NameAndType        #11:#41        // start:()V\n+  #41 = Utf8               ()V\n+  #42 = Methodref          #2.#43         // java/lang/Thread.interrupt:()V\n+  #43 = NameAndType        #44:#41        // interrupt:()V\n+  #44 = Utf8               interrupt\n+  #45 = Methodref          #46.#47        // java/lang/Object.\"<init>\":()V\n+  #46 = Class              #48            // java/lang/Object\n+  #47 = NameAndType        #24:#41        // \"<init>\":()V\n+  #48 = Utf8               java/lang/Object\n+  #49 = Fieldref           #8.#50         // org/apache/commons/io/ThreadMonitor.thread:Ljava/lang/Thread;\n+  #50 = NameAndType        #51:#52        // thread:Ljava/lang/Thread;\n+  #51 = Utf8               thread\n+  #52 = Utf8               Ljava/lang/Thread;\n+  #53 = Fieldref           #8.#54         // org/apache/commons/io/ThreadMonitor.timeout:Ljava/time/Duration;\n+  #54 = NameAndType        #55:#56        // timeout:Ljava/time/Duration;\n+  #55 = Utf8               timeout\n+  #56 = Utf8               Ljava/time/Duration;\n+  #57 = Methodref          #58.#59        // org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n+  #58 = Class              #60            // org/apache/commons/io/ThreadUtils\n+  #59 = NameAndType        #61:#62        // sleep:(Ljava/time/Duration;)V\n+  #60 = Utf8               org/apache/commons/io/ThreadUtils\n+  #61 = Utf8               sleep\n+  #62 = Utf8               (Ljava/time/Duration;)V\n+  #63 = Class              #64            // java/lang/InterruptedException\n+  #64 = Utf8               java/lang/InterruptedException\n+  #65 = Class              #66            // java/lang/Runnable\n+  #66 = Utf8               java/lang/Runnable\n+  #67 = Utf8               (Ljava/time/Duration;)Ljava/lang/Thread;\n+  #68 = Utf8               Code\n+  #69 = Utf8               LineNumberTable\n+  #70 = Utf8               StackMapTable\n+  #71 = Utf8               stop\n+  #72 = Utf8               (Ljava/lang/Thread;)V\n+  #73 = Utf8               run\n+  #74 = Utf8               SourceFile\n+  #75 = Utf8               ThreadMonitor.java\n {\n   private final java.lang.Thread thread;\n     descriptor: Ljava/lang/Thread;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.time.Duration timeout;\n     descriptor: Ljava/time/Duration;\n@@ -95,48 +95,48 @@\n   static java.lang.Thread start(java.time.Duration);\n     descriptor: (Ljava/time/Duration;)Ljava/lang/Thread;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: invokestatic  #1                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n          3: aload_0\n-         4: invokestatic  #2                  // Method start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n+         4: invokestatic  #7                  // Method start:(Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n          7: areturn\n       LineNumberTable:\n         line 49: 0\n \n   static java.lang.Thread start(java.lang.Thread, java.time.Duration);\n     descriptor: (Ljava/lang/Thread;Ljava/time/Duration;)Ljava/lang/Thread;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=6, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #3                  // Method java/time/Duration.isZero:()Z\n+         1: invokevirtual #13                 // Method java/time/Duration.isZero:()Z\n          4: ifne          14\n          7: aload_1\n-         8: invokevirtual #4                  // Method java/time/Duration.isNegative:()Z\n+         8: invokevirtual #19                 // Method java/time/Duration.isNegative:()Z\n         11: ifeq          16\n         14: aconst_null\n         15: areturn\n-        16: new           #5                  // class java/lang/Thread\n+        16: new           #2                  // class java/lang/Thread\n         19: dup\n-        20: new           #6                  // class org/apache/commons/io/ThreadMonitor\n+        20: new           #8                  // class org/apache/commons/io/ThreadMonitor\n         23: dup\n         24: aload_0\n         25: aload_1\n-        26: invokespecial #7                  // Method \"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n-        29: ldc           #6                  // class org/apache/commons/io/ThreadMonitor\n-        31: invokevirtual #8                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n-        34: invokespecial #9                  // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n+        26: invokespecial #22                 // Method \"<init>\":(Ljava/lang/Thread;Ljava/time/Duration;)V\n+        29: ldc           #8                  // class org/apache/commons/io/ThreadMonitor\n+        31: invokevirtual #26                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+        34: invokespecial #32                 // Method java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;Ljava/lang/String;)V\n         37: astore_2\n         38: aload_2\n         39: iconst_1\n-        40: invokevirtual #10                 // Method java/lang/Thread.setDaemon:(Z)V\n+        40: invokevirtual #35                 // Method java/lang/Thread.setDaemon:(Z)V\n         43: aload_2\n-        44: invokevirtual #11                 // Method java/lang/Thread.start:()V\n+        44: invokevirtual #39                 // Method java/lang/Thread.start:()V\n         47: aload_2\n         48: areturn\n       LineNumberTable:\n         line 60: 0\n         line 61: 14\n         line 63: 16\n         line 64: 38\n@@ -150,54 +150,54 @@\n     descriptor: (Ljava/lang/Thread;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: aload_0\n-         5: invokevirtual #12                 // Method java/lang/Thread.interrupt:()V\n+         5: invokevirtual #42                 // Method java/lang/Thread.interrupt:()V\n          8: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 4\n         line 78: 8\n       StackMapTable: number_of_entries = 1\n         frame_type = 8 /* same */\n \n   private org.apache.commons.io.ThreadMonitor(java.lang.Thread, java.time.Duration);\n     descriptor: (Ljava/lang/Thread;Ljava/time/Duration;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #13                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #45                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #14                 // Field thread:Ljava/lang/Thread;\n+         6: putfield      #49                 // Field thread:Ljava/lang/Thread;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #15                 // Field timeout:Ljava/time/Duration;\n+        11: putfield      #53                 // Field timeout:Ljava/time/Duration;\n         14: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 4\n         line 92: 9\n         line 93: 14\n \n   public void run();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field timeout:Ljava/time/Duration;\n-         4: invokestatic  #16                 // Method org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n+         1: getfield      #53                 // Field timeout:Ljava/time/Duration;\n+         4: invokestatic  #57                 // Method org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n          7: aload_0\n-         8: getfield      #14                 // Field thread:Ljava/lang/Thread;\n-        11: invokevirtual #12                 // Method java/lang/Thread.interrupt:()V\n+         8: getfield      #49                 // Field thread:Ljava/lang/Thread;\n+        11: invokevirtual #42                 // Method java/lang/Thread.interrupt:()V\n         14: goto          18\n         17: astore_1\n         18: return\n       Exception table:\n          from    to  target type\n              0    14    17   Class java/lang/InterruptedException\n       LineNumberTable:\n"}]}
