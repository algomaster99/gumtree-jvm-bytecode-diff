{"diffoscope-json-version": 1, "source1": "first/NonBlockingJsonParser.class", "source2": "second/NonBlockingJsonParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,141 @@\n-  SHA-256 checksum 0b897ec177b1da49e27710c0f76ca6659ffa933224d7516094aa871b29312f9b\n+  SHA-256 checksum d62ad56e7c23286b04c65ee412a7baebca8deccc58bd2b6a8b8ca6c010151b8b\n   Compiled from \"NonBlockingJsonParser.java\"\n public class com.fasterxml.jackson.core.json.async.NonBlockingJsonParser extends com.fasterxml.jackson.core.json.async.NonBlockingUtf8JsonParserBase implements com.fasterxml.jackson.core.async.ByteArrayFeeder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n-  super_class: #21                        // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+  this_class: #1                          // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n+  super_class: #3                         // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n   interfaces: 1, fields: 1, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Methodref          #21.#63       // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-    #2 = Fieldref           #20.#64       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.NO_BYTES:[B\n-    #3 = Fieldref           #20.#65       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputBuffer:[B\n-    #4 = Fieldref           #20.#66       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputPtr:I\n-    #5 = Fieldref           #20.#67       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputEnd:I\n-    #6 = String             #68           // Still have %d undecoded bytes, should not call \\'feedInput\\'\n-    #7 = Methodref          #69.#70       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-    #8 = Methodref          #20.#71       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-    #9 = String             #72           // Input end (%d) may not be before start (%d)\n-   #10 = Methodref          #20.#73       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #11 = Fieldref           #20.#74       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._endOfInput:Z\n-   #12 = String             #75           // Already closed, can not feed more input\n-   #13 = Methodref          #20.#76       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;)V\n-   #14 = Fieldref           #20.#77       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currInputProcessed:J\n-   #15 = Fieldref           #20.#78       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._origBufferLen:I\n-   #16 = Fieldref           #20.#79       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currInputRowStart:I\n-   #17 = Fieldref           #20.#80       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currBufferStart:I\n-   #18 = Methodref          #81.#82       // java/io/OutputStream.write:([BII)V\n-   #19 = Methodref          #20.#83       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n-   #20 = Class              #84           // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n-   #21 = Class              #85           // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n-   #22 = Class              #86           // com/fasterxml/jackson/core/async/ByteArrayFeeder\n-   #23 = Utf8               _inputBuffer\n-   #24 = Utf8               [B\n-   #25 = Utf8               <init>\n-   #26 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #27 = Utf8               Code\n-   #28 = Utf8               LineNumberTable\n-   #29 = Utf8               LocalVariableTable\n-   #30 = Utf8               this\n-   #31 = Utf8               Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n-   #32 = Utf8               ctxt\n-   #33 = Utf8               Lcom/fasterxml/jackson/core/io/IOContext;\n-   #34 = Utf8               parserFeatures\n-   #35 = Utf8               I\n-   #36 = Utf8               sym\n-   #37 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #38 = Utf8               getNonBlockingInputFeeder\n-   #39 = Utf8               ()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n-   #40 = Utf8               feedInput\n-   #41 = Utf8               ([BII)V\n-   #42 = Utf8               buf\n-   #43 = Utf8               start\n-   #44 = Utf8               end\n-   #45 = Utf8               StackMapTable\n-   #46 = Utf8               Exceptions\n-   #47 = Class              #87           // java/io/IOException\n-   #48 = Utf8               releaseBuffered\n-   #49 = Utf8               (Ljava/io/OutputStream;)I\n-   #50 = Utf8               out\n-   #51 = Utf8               Ljava/io/OutputStream;\n-   #52 = Utf8               avail\n-   #53 = Utf8               getNextSignedByteFromBuffer\n-   #54 = Utf8               ()B\n-   #55 = Utf8               getNextUnsignedByteFromBuffer\n-   #56 = Utf8               ()I\n-   #57 = Utf8               getByteFromBuffer\n-   #58 = Utf8               (I)B\n-   #59 = Utf8               ptr\n-   #60 = Utf8               ()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               NonBlockingJsonParser.java\n-   #63 = NameAndType        #25:#26       // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #64 = NameAndType        #88:#24       // NO_BYTES:[B\n-   #65 = NameAndType        #23:#24       // _inputBuffer:[B\n-   #66 = NameAndType        #89:#35       // _inputPtr:I\n-   #67 = NameAndType        #90:#35       // _inputEnd:I\n-   #68 = Utf8               Still have %d undecoded bytes, should not call \\'feedInput\\'\n-   #69 = Class              #91           // java/lang/Integer\n-   #70 = NameAndType        #92:#93       // valueOf:(I)Ljava/lang/Integer;\n-   #71 = NameAndType        #94:#95       // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #72 = Utf8               Input end (%d) may not be before start (%d)\n-   #73 = NameAndType        #94:#96       // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #74 = NameAndType        #97:#98       // _endOfInput:Z\n-   #75 = Utf8               Already closed, can not feed more input\n-   #76 = NameAndType        #94:#99       // _reportError:(Ljava/lang/String;)V\n-   #77 = NameAndType        #100:#101     // _currInputProcessed:J\n-   #78 = NameAndType        #102:#35      // _origBufferLen:I\n-   #79 = NameAndType        #103:#35      // _currInputRowStart:I\n-   #80 = NameAndType        #104:#35      // _currBufferStart:I\n-   #81 = Class              #105          // java/io/OutputStream\n-   #82 = NameAndType        #106:#41      // write:([BII)V\n-   #83 = NameAndType        #38:#39       // getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n-   #84 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n-   #85 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n-   #86 = Utf8               com/fasterxml/jackson/core/async/ByteArrayFeeder\n-   #87 = Utf8               java/io/IOException\n-   #88 = Utf8               NO_BYTES\n-   #89 = Utf8               _inputPtr\n-   #90 = Utf8               _inputEnd\n-   #91 = Utf8               java/lang/Integer\n-   #92 = Utf8               valueOf\n-   #93 = Utf8               (I)Ljava/lang/Integer;\n-   #94 = Utf8               _reportError\n-   #95 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-   #96 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #97 = Utf8               _endOfInput\n-   #98 = Utf8               Z\n-   #99 = Utf8               (Ljava/lang/String;)V\n-  #100 = Utf8               _currInputProcessed\n-  #101 = Utf8               J\n-  #102 = Utf8               _origBufferLen\n-  #103 = Utf8               _currInputRowStart\n-  #104 = Utf8               _currBufferStart\n-  #105 = Utf8               java/io/OutputStream\n-  #106 = Utf8               write\n+    #1 = Class              #2            // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n+    #2 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingJsonParser\n+    #3 = Class              #4            // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+    #4 = Utf8               com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase\n+    #5 = Class              #6            // com/fasterxml/jackson/core/async/ByteArrayFeeder\n+    #6 = Utf8               com/fasterxml/jackson/core/async/ByteArrayFeeder\n+    #7 = Utf8               _inputBuffer\n+    #8 = Utf8               [B\n+    #9 = Utf8               <init>\n+   #10 = Utf8               (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #11 = Utf8               Code\n+   #12 = Methodref          #3.#13        // com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #13 = NameAndType        #9:#10        // \"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #14 = Fieldref           #1.#15        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.NO_BYTES:[B\n+   #15 = NameAndType        #16:#8        // NO_BYTES:[B\n+   #16 = Utf8               NO_BYTES\n+   #17 = Fieldref           #1.#18        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputBuffer:[B\n+   #18 = NameAndType        #7:#8         // _inputBuffer:[B\n+   #19 = Utf8               LineNumberTable\n+   #20 = Utf8               LocalVariableTable\n+   #21 = Utf8               this\n+   #22 = Utf8               Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n+   #23 = Utf8               ctxt\n+   #24 = Utf8               Lcom/fasterxml/jackson/core/io/IOContext;\n+   #25 = Utf8               parserFeatures\n+   #26 = Utf8               I\n+   #27 = Utf8               sym\n+   #28 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #29 = Utf8               getNonBlockingInputFeeder\n+   #30 = Utf8               ()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n+   #31 = Utf8               feedInput\n+   #32 = Utf8               ([BII)V\n+   #33 = Utf8               Exceptions\n+   #34 = Class              #35           // java/io/IOException\n+   #35 = Utf8               java/io/IOException\n+   #36 = Fieldref           #1.#37        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputPtr:I\n+   #37 = NameAndType        #38:#26       // _inputPtr:I\n+   #38 = Utf8               _inputPtr\n+   #39 = Fieldref           #1.#40        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._inputEnd:I\n+   #40 = NameAndType        #41:#26       // _inputEnd:I\n+   #41 = Utf8               _inputEnd\n+   #42 = String             #43           // Still have %d undecoded bytes, should not call \\'feedInput\\'\n+   #43 = Utf8               Still have %d undecoded bytes, should not call \\'feedInput\\'\n+   #44 = Methodref          #45.#47       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #45 = Class              #46           // java/lang/Integer\n+   #46 = Utf8               java/lang/Integer\n+   #47 = NameAndType        #48:#49       // valueOf:(I)Ljava/lang/Integer;\n+   #48 = Utf8               valueOf\n+   #49 = Utf8               (I)Ljava/lang/Integer;\n+   #50 = Methodref          #1.#51        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #51 = NameAndType        #52:#53       // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #52 = Utf8               _reportError\n+   #53 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+   #54 = String             #55           // Input end (%d) may not be before start (%d)\n+   #55 = Utf8               Input end (%d) may not be before start (%d)\n+   #56 = Methodref          #1.#57        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #57 = NameAndType        #52:#58       // _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #58 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #59 = Fieldref           #1.#60        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._endOfInput:Z\n+   #60 = NameAndType        #61:#62       // _endOfInput:Z\n+   #61 = Utf8               _endOfInput\n+   #62 = Utf8               Z\n+   #63 = String             #64           // Already closed, can not feed more input\n+   #64 = Utf8               Already closed, can not feed more input\n+   #65 = Methodref          #1.#66        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._reportError:(Ljava/lang/String;)V\n+   #66 = NameAndType        #52:#67       // _reportError:(Ljava/lang/String;)V\n+   #67 = Utf8               (Ljava/lang/String;)V\n+   #68 = Fieldref           #1.#69        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currInputProcessed:J\n+   #69 = NameAndType        #70:#71       // _currInputProcessed:J\n+   #70 = Utf8               _currInputProcessed\n+   #71 = Utf8               J\n+   #72 = Fieldref           #1.#73        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._origBufferLen:I\n+   #73 = NameAndType        #74:#26       // _origBufferLen:I\n+   #74 = Utf8               _origBufferLen\n+   #75 = Fieldref           #1.#76        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currInputRowStart:I\n+   #76 = NameAndType        #77:#26       // _currInputRowStart:I\n+   #77 = Utf8               _currInputRowStart\n+   #78 = Fieldref           #1.#79        // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser._currBufferStart:I\n+   #79 = NameAndType        #80:#26       // _currBufferStart:I\n+   #80 = Utf8               _currBufferStart\n+   #81 = Utf8               buf\n+   #82 = Utf8               start\n+   #83 = Utf8               end\n+   #84 = Utf8               StackMapTable\n+   #85 = Utf8               releaseBuffered\n+   #86 = Utf8               (Ljava/io/OutputStream;)I\n+   #87 = Methodref          #88.#90       // java/io/OutputStream.write:([BII)V\n+   #88 = Class              #89           // java/io/OutputStream\n+   #89 = Utf8               java/io/OutputStream\n+   #90 = NameAndType        #91:#32       // write:([BII)V\n+   #91 = Utf8               write\n+   #92 = Utf8               out\n+   #93 = Utf8               Ljava/io/OutputStream;\n+   #94 = Utf8               avail\n+   #95 = Utf8               getNextSignedByteFromBuffer\n+   #96 = Utf8               ()B\n+   #97 = Utf8               getNextUnsignedByteFromBuffer\n+   #98 = Utf8               ()I\n+   #99 = Utf8               getByteFromBuffer\n+  #100 = Utf8               (I)B\n+  #101 = Utf8               ptr\n+  #102 = Utf8               ()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;\n+  #103 = Methodref          #1.#104       // com/fasterxml/jackson/core/json/async/NonBlockingJsonParser.getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n+  #104 = NameAndType        #29:#30       // getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n+  #105 = Utf8               SourceFile\n+  #106 = Utf8               NonBlockingJsonParser.java\n {\n   private byte[] _inputBuffer;\n     descriptor: [B\n     flags: (0x0002) ACC_PRIVATE\n \n   public com.fasterxml.jackson.core.json.async.NonBlockingJsonParser(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer);\n     descriptor: (Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n-         4: invokespecial #1                  // Method com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+         4: invokespecial #12                 // Method com/fasterxml/jackson/core/json/async/NonBlockingUtf8JsonParserBase.\"<init>\":(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n          7: aload_0\n-         8: getstatic     #2                  // Field NO_BYTES:[B\n-        11: putfield      #3                  // Field _inputBuffer:[B\n+         8: getstatic     #14                 // Field NO_BYTES:[B\n+        11: putfield      #17                 // Field _inputBuffer:[B\n         14: return\n       LineNumberTable:\n         line 27: 0\n         line 23: 7\n         line 28: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -156,80 +156,82 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n \n   public void feedInput(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field _inputPtr:I\n+         1: getfield      #36                 // Field _inputPtr:I\n          4: aload_0\n-         5: getfield      #5                  // Field _inputEnd:I\n+         5: getfield      #39                 // Field _inputEnd:I\n          8: if_icmpge     29\n         11: aload_0\n-        12: ldc           #6                  // String Still have %d undecoded bytes, should not call \\'feedInput\\'\n+        12: ldc           #42                 // String Still have %d undecoded bytes, should not call \\'feedInput\\'\n         14: aload_0\n-        15: getfield      #5                  // Field _inputEnd:I\n+        15: getfield      #39                 // Field _inputEnd:I\n         18: aload_0\n-        19: getfield      #4                  // Field _inputPtr:I\n+        19: getfield      #36                 // Field _inputPtr:I\n         22: isub\n-        23: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        26: invokevirtual #8                  // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+        23: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        26: invokevirtual #50                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n         29: iload_3\n         30: iload_2\n         31: if_icmpge     48\n         34: aload_0\n-        35: ldc           #9                  // String Input end (%d) may not be before start (%d)\n+        35: ldc           #54                 // String Input end (%d) may not be before start (%d)\n         37: iload_3\n-        38: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        38: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         41: iload_2\n-        42: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        45: invokevirtual #10                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+        42: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        45: invokevirtual #56                 // Method _reportError:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n         48: aload_0\n-        49: getfield      #11                 // Field _endOfInput:Z\n+        49: getfield      #59                 // Field _endOfInput:Z\n         52: ifeq          61\n         55: aload_0\n-        56: ldc           #12                 // String Already closed, can not feed more input\n-        58: invokevirtual #13                 // Method _reportError:(Ljava/lang/String;)V\n+        56: ldc           #63                 // String Already closed, can not feed more input\n+        58: invokevirtual #65                 // Method _reportError:(Ljava/lang/String;)V\n         61: aload_0\n         62: dup\n-        63: getfield      #14                 // Field _currInputProcessed:J\n+        63: getfield      #68                 // Field _currInputProcessed:J\n         66: aload_0\n-        67: getfield      #15                 // Field _origBufferLen:I\n+        67: getfield      #72                 // Field _origBufferLen:I\n         70: i2l\n         71: ladd\n-        72: putfield      #14                 // Field _currInputProcessed:J\n+        72: putfield      #68                 // Field _currInputProcessed:J\n         75: aload_0\n         76: iload_2\n         77: aload_0\n-        78: getfield      #5                  // Field _inputEnd:I\n+        78: getfield      #39                 // Field _inputEnd:I\n         81: aload_0\n-        82: getfield      #16                 // Field _currInputRowStart:I\n+        82: getfield      #75                 // Field _currInputRowStart:I\n         85: isub\n         86: isub\n-        87: putfield      #16                 // Field _currInputRowStart:I\n+        87: putfield      #75                 // Field _currInputRowStart:I\n         90: aload_0\n         91: iload_2\n-        92: putfield      #17                 // Field _currBufferStart:I\n+        92: putfield      #78                 // Field _currBufferStart:I\n         95: aload_0\n         96: aload_1\n-        97: putfield      #3                  // Field _inputBuffer:[B\n+        97: putfield      #17                 // Field _inputBuffer:[B\n        100: aload_0\n        101: iload_2\n-       102: putfield      #4                  // Field _inputPtr:I\n+       102: putfield      #36                 // Field _inputPtr:I\n        105: aload_0\n        106: iload_3\n-       107: putfield      #5                  // Field _inputEnd:I\n+       107: putfield      #39                 // Field _inputEnd:I\n        110: aload_0\n        111: iload_3\n        112: iload_2\n        113: isub\n-       114: putfield      #15                 // Field _origBufferLen:I\n+       114: putfield      #72                 // Field _origBufferLen:I\n        117: return\n       LineNumberTable:\n         line 38: 0\n         line 39: 11\n         line 41: 29\n         line 42: 34\n         line 45: 48\n@@ -248,37 +250,37 @@\n             0     118     1   buf   [B\n             0     118     2 start   I\n             0     118     3   end   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 29 /* same */\n         frame_type = 18 /* same */\n         frame_type = 12 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int releaseBuffered(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field _inputEnd:I\n+         1: getfield      #39                 // Field _inputEnd:I\n          4: aload_0\n-         5: getfield      #4                  // Field _inputPtr:I\n+         5: getfield      #36                 // Field _inputPtr:I\n          8: isub\n          9: istore_2\n         10: iload_2\n         11: ifle          27\n         14: aload_1\n         15: aload_0\n-        16: getfield      #3                  // Field _inputBuffer:[B\n+        16: getfield      #17                 // Field _inputBuffer:[B\n         19: aload_0\n-        20: getfield      #4                  // Field _inputPtr:I\n+        20: getfield      #36                 // Field _inputPtr:I\n         23: iload_2\n-        24: invokevirtual #18                 // Method java/io/OutputStream.write:([BII)V\n+        24: invokevirtual #87                 // Method java/io/OutputStream.write:([BII)V\n         27: iload_2\n         28: ireturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 10\n         line 66: 14\n         line 68: 27\n@@ -287,53 +289,51 @@\n             0      29     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n             0      29     1   out   Ljava/io/OutputStream;\n            10      19     2 avail   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected byte getNextSignedByteFromBuffer();\n     descriptor: ()B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field _inputBuffer:[B\n+         1: getfield      #17                 // Field _inputBuffer:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #4                  // Field _inputPtr:I\n+         6: getfield      #36                 // Field _inputPtr:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #4                  // Field _inputPtr:I\n+        12: putfield      #36                 // Field _inputPtr:I\n         15: baload\n         16: ireturn\n       LineNumberTable:\n         line 73: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n \n   protected int getNextUnsignedByteFromBuffer();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field _inputBuffer:[B\n+         1: getfield      #17                 // Field _inputBuffer:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #4                  // Field _inputPtr:I\n+         6: getfield      #36                 // Field _inputPtr:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #4                  // Field _inputPtr:I\n+        12: putfield      #36                 // Field _inputPtr:I\n         15: baload\n         16: sipush        255\n         19: iand\n         20: ireturn\n       LineNumberTable:\n         line 78: 0\n       LocalVariableTable:\n@@ -342,15 +342,15 @@\n \n   protected byte getByteFromBuffer(int);\n     descriptor: (I)B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field _inputBuffer:[B\n+         1: getfield      #17                 // Field _inputBuffer:[B\n          4: iload_1\n          5: baload\n          6: ireturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -359,16 +359,15 @@\n \n   public com.fasterxml.jackson.core.async.NonBlockingInputFeeder getNonBlockingInputFeeder();\n     descriptor: ()Lcom/fasterxml/jackson/core/async/NonBlockingInputFeeder;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #19                 // Method getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n+         1: invokevirtual #103                // Method getNonBlockingInputFeeder:()Lcom/fasterxml/jackson/core/async/ByteArrayFeeder;\n          4: areturn\n       LineNumberTable:\n-        line 19: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lcom/fasterxml/jackson/core/json/async/NonBlockingJsonParser;\n }\n SourceFile: \"NonBlockingJsonParser.java\"\n"}]}
