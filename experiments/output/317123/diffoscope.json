{"diffoscope-json-version": 1, "source1": "first/RandomUtils.class", "source2": "second/RandomUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,101 +1,101 @@\n-  SHA-256 checksum b58480d12867eafc7ef44933b9d60464280f94f44858417e864d153cc223cd9d\n+  SHA-256 checksum 867e1baebd40c75a7f4f1ee3378949915c2361cb0675467144aa84f53617a4a6\n   Compiled from \"RandomUtils.java\"\n public class org.apache.commons.lang3.RandomUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #30                         // org/apache/commons/lang3/RandomUtils\n-  super_class: #5                         // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/RandomUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 13, attributes: 1\n Constant pool:\n-   #1 = Methodref          #5.#58         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #30.#59        // org/apache/commons/lang3/RandomUtils.RANDOM:Ljava/util/Random;\n-   #3 = Methodref          #28.#60        // java/util/Random.nextBoolean:()Z\n-   #4 = String             #61            // Count cannot be negative.\n-   #5 = Class              #62            // java/lang/Object\n-   #6 = Methodref          #63.#64        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #7 = Methodref          #28.#65        // java/util/Random.nextBytes:([B)V\n-   #8 = String             #66            // Start value must be smaller or equal to end value.\n-   #9 = String             #67            // Both range values must be non-negative.\n-  #10 = Methodref          #28.#68        // java/util/Random.nextInt:(I)I\n-  #11 = Class              #69            // java/lang/Integer\n-  #12 = Integer            2147483647\n-  #13 = Methodref          #30.#70        // org/apache/commons/lang3/RandomUtils.nextInt:(II)I\n-  #14 = Methodref          #30.#71        // org/apache/commons/lang3/RandomUtils.nextLong:(J)J\n-  #15 = Class              #72            // java/lang/Long\n-  #16 = Long               9223372036854775807l\n-  #18 = Methodref          #28.#73        // java/util/Random.nextLong:()J\n-  #19 = Methodref          #28.#74        // java/util/Random.nextDouble:()D\n-  #20 = Class              #75            // java/lang/Double\n-  #21 = Double             1.7976931348623157E308d\n-  #23 = Methodref          #30.#76        // org/apache/commons/lang3/RandomUtils.nextDouble:(DD)D\n-  #24 = Methodref          #28.#77        // java/util/Random.nextFloat:()F\n-  #25 = Class              #78            // java/lang/Float\n-  #26 = Float              3.4028235E38f\n-  #27 = Methodref          #30.#79        // org/apache/commons/lang3/RandomUtils.nextFloat:(FF)F\n-  #28 = Class              #80            // java/util/Random\n-  #29 = Methodref          #28.#58        // java/util/Random.\"<init>\":()V\n-  #30 = Class              #81            // org/apache/commons/lang3/RandomUtils\n-  #31 = Utf8               RANDOM\n-  #32 = Utf8               Ljava/util/Random;\n-  #33 = Utf8               <init>\n-  #34 = Utf8               ()V\n-  #35 = Utf8               Code\n-  #36 = Utf8               LineNumberTable\n-  #37 = Utf8               nextBoolean\n-  #38 = Utf8               ()Z\n-  #39 = Utf8               nextBytes\n-  #40 = Utf8               (I)[B\n-  #41 = Utf8               StackMapTable\n-  #42 = Utf8               nextInt\n-  #43 = Utf8               (II)I\n-  #44 = Utf8               ()I\n-  #45 = Utf8               nextLong\n-  #46 = Utf8               (JJ)J\n-  #47 = Utf8               ()J\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/lang3/RandomUtils.RANDOM:Ljava/util/Random;\n+   #8 = Class              #10            // org/apache/commons/lang3/RandomUtils\n+   #9 = NameAndType        #11:#12        // RANDOM:Ljava/util/Random;\n+  #10 = Utf8               org/apache/commons/lang3/RandomUtils\n+  #11 = Utf8               RANDOM\n+  #12 = Utf8               Ljava/util/Random;\n+  #13 = Methodref          #14.#15        // java/util/Random.nextBoolean:()Z\n+  #14 = Class              #16            // java/util/Random\n+  #15 = NameAndType        #17:#18        // nextBoolean:()Z\n+  #16 = Utf8               java/util/Random\n+  #17 = Utf8               nextBoolean\n+  #18 = Utf8               ()Z\n+  #19 = String             #20            // Count cannot be negative.\n+  #20 = Utf8               Count cannot be negative.\n+  #21 = Methodref          #22.#23        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #22 = Class              #24            // org/apache/commons/lang3/Validate\n+  #23 = NameAndType        #25:#26        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #24 = Utf8               org/apache/commons/lang3/Validate\n+  #25 = Utf8               isTrue\n+  #26 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #27 = Methodref          #14.#28        // java/util/Random.nextBytes:([B)V\n+  #28 = NameAndType        #29:#30        // nextBytes:([B)V\n+  #29 = Utf8               nextBytes\n+  #30 = Utf8               ([B)V\n+  #31 = String             #32            // Start value must be smaller or equal to end value.\n+  #32 = Utf8               Start value must be smaller or equal to end value.\n+  #33 = String             #34            // Both range values must be non-negative.\n+  #34 = Utf8               Both range values must be non-negative.\n+  #35 = Methodref          #14.#36        // java/util/Random.nextInt:(I)I\n+  #36 = NameAndType        #37:#38        // nextInt:(I)I\n+  #37 = Utf8               nextInt\n+  #38 = Utf8               (I)I\n+  #39 = Class              #40            // java/lang/Integer\n+  #40 = Utf8               java/lang/Integer\n+  #41 = Integer            2147483647\n+  #42 = Methodref          #8.#43         // org/apache/commons/lang3/RandomUtils.nextInt:(II)I\n+  #43 = NameAndType        #37:#44        // nextInt:(II)I\n+  #44 = Utf8               (II)I\n+  #45 = Methodref          #8.#46         // org/apache/commons/lang3/RandomUtils.nextLong:(J)J\n+  #46 = NameAndType        #47:#48        // nextLong:(J)J\n+  #47 = Utf8               nextLong\n   #48 = Utf8               (J)J\n-  #49 = Utf8               nextDouble\n-  #50 = Utf8               (DD)D\n-  #51 = Utf8               ()D\n-  #52 = Utf8               nextFloat\n-  #53 = Utf8               (FF)F\n-  #54 = Utf8               ()F\n-  #55 = Utf8               <clinit>\n-  #56 = Utf8               SourceFile\n-  #57 = Utf8               RandomUtils.java\n-  #58 = NameAndType        #33:#34        // \"<init>\":()V\n-  #59 = NameAndType        #31:#32        // RANDOM:Ljava/util/Random;\n-  #60 = NameAndType        #37:#38        // nextBoolean:()Z\n-  #61 = Utf8               Count cannot be negative.\n-  #62 = Utf8               java/lang/Object\n-  #63 = Class              #82            // org/apache/commons/lang3/Validate\n-  #64 = NameAndType        #83:#84        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #65 = NameAndType        #39:#85        // nextBytes:([B)V\n-  #66 = Utf8               Start value must be smaller or equal to end value.\n-  #67 = Utf8               Both range values must be non-negative.\n-  #68 = NameAndType        #42:#86        // nextInt:(I)I\n-  #69 = Utf8               java/lang/Integer\n-  #70 = NameAndType        #42:#43        // nextInt:(II)I\n-  #71 = NameAndType        #45:#48        // nextLong:(J)J\n-  #72 = Utf8               java/lang/Long\n-  #73 = NameAndType        #45:#47        // nextLong:()J\n-  #74 = NameAndType        #49:#51        // nextDouble:()D\n-  #75 = Utf8               java/lang/Double\n-  #76 = NameAndType        #49:#50        // nextDouble:(DD)D\n-  #77 = NameAndType        #52:#54        // nextFloat:()F\n-  #78 = Utf8               java/lang/Float\n-  #79 = NameAndType        #52:#53        // nextFloat:(FF)F\n-  #80 = Utf8               java/util/Random\n-  #81 = Utf8               org/apache/commons/lang3/RandomUtils\n-  #82 = Utf8               org/apache/commons/lang3/Validate\n-  #83 = Utf8               isTrue\n-  #84 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #85 = Utf8               ([B)V\n-  #86 = Utf8               (I)I\n+  #49 = Class              #50            // java/lang/Long\n+  #50 = Utf8               java/lang/Long\n+  #51 = Long               9223372036854775807l\n+  #53 = Methodref          #14.#54        // java/util/Random.nextLong:()J\n+  #54 = NameAndType        #47:#55        // nextLong:()J\n+  #55 = Utf8               ()J\n+  #56 = Methodref          #14.#57        // java/util/Random.nextDouble:()D\n+  #57 = NameAndType        #58:#59        // nextDouble:()D\n+  #58 = Utf8               nextDouble\n+  #59 = Utf8               ()D\n+  #60 = Class              #61            // java/lang/Double\n+  #61 = Utf8               java/lang/Double\n+  #62 = Double             1.7976931348623157E308d\n+  #64 = Methodref          #8.#65         // org/apache/commons/lang3/RandomUtils.nextDouble:(DD)D\n+  #65 = NameAndType        #58:#66        // nextDouble:(DD)D\n+  #66 = Utf8               (DD)D\n+  #67 = Methodref          #14.#68        // java/util/Random.nextFloat:()F\n+  #68 = NameAndType        #69:#70        // nextFloat:()F\n+  #69 = Utf8               nextFloat\n+  #70 = Utf8               ()F\n+  #71 = Class              #72            // java/lang/Float\n+  #72 = Utf8               java/lang/Float\n+  #73 = Float              3.4028235E38f\n+  #74 = Methodref          #8.#75         // org/apache/commons/lang3/RandomUtils.nextFloat:(FF)F\n+  #75 = NameAndType        #69:#76        // nextFloat:(FF)F\n+  #76 = Utf8               (FF)F\n+  #77 = Methodref          #14.#3         // java/util/Random.\"<init>\":()V\n+  #78 = Utf8               Code\n+  #79 = Utf8               LineNumberTable\n+  #80 = Utf8               (I)[B\n+  #81 = Utf8               StackMapTable\n+  #82 = Utf8               ()I\n+  #83 = Utf8               (JJ)J\n+  #84 = Utf8               <clinit>\n+  #85 = Utf8               SourceFile\n+  #86 = Utf8               RandomUtils.java\n {\n   private static final java.util.Random RANDOM;\n     descriptor: Ljava/util/Random;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.lang3.RandomUtils();\n     descriptor: ()V\n@@ -110,40 +110,40 @@\n         line 55: 4\n \n   public static boolean nextBoolean();\n     descriptor: ()Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n-         3: invokevirtual #3                  // Method java/util/Random.nextBoolean:()Z\n+         0: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n+         3: invokevirtual #13                 // Method java/util/Random.nextBoolean:()Z\n          6: ireturn\n       LineNumberTable:\n         line 66: 0\n \n   public static byte[] nextBytes(int);\n     descriptor: (I)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: iload_0\n          1: iflt          8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #4                  // String Count cannot be negative.\n+         9: ldc           #19                 // String Count cannot be negative.\n         11: iconst_0\n-        12: anewarray     #5                  // class java/lang/Object\n-        15: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #2                  // class java/lang/Object\n+        15: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: iload_0\n         19: newarray       byte\n         21: astore_1\n-        22: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n+        22: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n         25: aload_1\n-        26: invokevirtual #7                  // Method java/util/Random.nextBytes:([B)V\n+        26: invokevirtual #27                 // Method java/util/Random.nextBytes:([B)V\n         29: aload_1\n         30: areturn\n       LineNumberTable:\n         line 80: 0\n         line 82: 18\n         line 83: 22\n         line 84: 29\n@@ -159,38 +159,38 @@\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iload_0\n          2: if_icmplt     9\n          5: iconst_1\n          6: goto          10\n          9: iconst_0\n-        10: ldc           #8                  // String Start value must be smaller or equal to end value.\n+        10: ldc           #31                 // String Start value must be smaller or equal to end value.\n         12: iconst_0\n-        13: anewarray     #5                  // class java/lang/Object\n-        16: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        13: anewarray     #2                  // class java/lang/Object\n+        16: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         19: iload_0\n         20: iflt          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n-        28: ldc           #9                  // String Both range values must be non-negative.\n+        28: ldc           #33                 // String Both range values must be non-negative.\n         30: iconst_0\n-        31: anewarray     #5                  // class java/lang/Object\n-        34: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        31: anewarray     #2                  // class java/lang/Object\n+        34: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         37: iload_0\n         38: iload_1\n         39: if_icmpne     44\n         42: iload_0\n         43: ireturn\n         44: iload_0\n-        45: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n+        45: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n         48: iload_1\n         49: iload_0\n         50: isub\n-        51: invokevirtual #10                 // Method java/util/Random.nextInt:(I)I\n+        51: invokevirtual #35                 // Method java/util/Random.nextInt:(I)I\n         54: iadd\n         55: ireturn\n       LineNumberTable:\n         line 102: 0\n         line 104: 19\n         line 106: 37\n         line 107: 42\n@@ -206,16 +206,16 @@\n \n   public static int nextInt();\n     descriptor: ()I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: iconst_0\n-         1: ldc           #12                 // int 2147483647\n-         3: invokestatic  #13                 // Method nextInt:(II)I\n+         1: ldc           #41                 // int 2147483647\n+         3: invokestatic  #42                 // Method nextInt:(II)I\n          6: ireturn\n       LineNumberTable:\n         line 121: 0\n \n   public static long nextLong(long, long);\n     descriptor: (JJ)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -224,40 +224,40 @@\n          0: lload_2\n          1: lload_0\n          2: lcmp\n          3: iflt          10\n          6: iconst_1\n          7: goto          11\n         10: iconst_0\n-        11: ldc           #8                  // String Start value must be smaller or equal to end value.\n+        11: ldc           #31                 // String Start value must be smaller or equal to end value.\n         13: iconst_0\n-        14: anewarray     #5                  // class java/lang/Object\n-        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        14: anewarray     #2                  // class java/lang/Object\n+        17: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         20: lload_0\n         21: lconst_0\n         22: lcmp\n         23: iflt          30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n-        31: ldc           #9                  // String Both range values must be non-negative.\n+        31: ldc           #33                 // String Both range values must be non-negative.\n         33: iconst_0\n-        34: anewarray     #5                  // class java/lang/Object\n-        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        34: anewarray     #2                  // class java/lang/Object\n+        37: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         40: lload_0\n         41: lload_2\n         42: lcmp\n         43: ifne          48\n         46: lload_0\n         47: lreturn\n         48: lload_0\n         49: lload_2\n         50: lload_0\n         51: lsub\n-        52: invokestatic  #14                 // Method nextLong:(J)J\n+        52: invokestatic  #45                 // Method nextLong:(J)J\n         55: ladd\n         56: lreturn\n       LineNumberTable:\n         line 139: 0\n         line 141: 20\n         line 143: 40\n         line 144: 46\n@@ -272,27 +272,27 @@\n         frame_type = 16 /* same */\n \n   public static long nextLong();\n     descriptor: ()J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: ldc2_w        #16                 // long 9223372036854775807l\n-         3: invokestatic  #14                 // Method nextLong:(J)J\n+         0: ldc2_w        #51                 // long 9223372036854775807l\n+         3: invokestatic  #45                 // Method nextLong:(J)J\n          6: lreturn\n       LineNumberTable:\n         line 158: 0\n \n   private static long nextLong(long);\n     descriptor: (J)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=1\n-         0: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n-         3: invokevirtual #18                 // Method java/util/Random.nextLong:()J\n+         0: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n+         3: invokevirtual #53                 // Method java/util/Random.nextLong:()J\n          6: iconst_1\n          7: lushr\n          8: lstore_2\n          9: lload_2\n         10: lload_0\n         11: lrem\n         12: lstore        4\n@@ -324,41 +324,41 @@\n          0: dload_2\n          1: dload_0\n          2: dcmpl\n          3: iflt          10\n          6: iconst_1\n          7: goto          11\n         10: iconst_0\n-        11: ldc           #8                  // String Start value must be smaller or equal to end value.\n+        11: ldc           #31                 // String Start value must be smaller or equal to end value.\n         13: iconst_0\n-        14: anewarray     #5                  // class java/lang/Object\n-        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        14: anewarray     #2                  // class java/lang/Object\n+        17: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         20: dload_0\n         21: dconst_0\n         22: dcmpl\n         23: iflt          30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n-        31: ldc           #9                  // String Both range values must be non-negative.\n+        31: ldc           #33                 // String Both range values must be non-negative.\n         33: iconst_0\n-        34: anewarray     #5                  // class java/lang/Object\n-        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        34: anewarray     #2                  // class java/lang/Object\n+        37: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         40: dload_0\n         41: dload_2\n         42: dcmpl\n         43: ifne          48\n         46: dload_0\n         47: dreturn\n         48: dload_0\n         49: dload_2\n         50: dload_0\n         51: dsub\n-        52: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n-        55: invokevirtual #19                 // Method java/util/Random.nextDouble:()D\n+        52: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n+        55: invokevirtual #56                 // Method java/util/Random.nextDouble:()D\n         58: dmul\n         59: dadd\n         60: dreturn\n       LineNumberTable:\n         line 196: 0\n         line 198: 20\n         line 200: 40\n@@ -375,16 +375,16 @@\n \n   public static double nextDouble();\n     descriptor: ()D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: dconst_0\n-         1: ldc2_w        #21                 // double 1.7976931348623157E308d\n-         4: invokestatic  #23                 // Method nextDouble:(DD)D\n+         1: ldc2_w        #62                 // double 1.7976931348623157E308d\n+         4: invokestatic  #64                 // Method nextDouble:(DD)D\n          7: dreturn\n       LineNumberTable:\n         line 215: 0\n \n   public static float nextFloat(float, float);\n     descriptor: (FF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -393,41 +393,41 @@\n          0: fload_1\n          1: fload_0\n          2: fcmpl\n          3: iflt          10\n          6: iconst_1\n          7: goto          11\n         10: iconst_0\n-        11: ldc           #8                  // String Start value must be smaller or equal to end value.\n+        11: ldc           #31                 // String Start value must be smaller or equal to end value.\n         13: iconst_0\n-        14: anewarray     #5                  // class java/lang/Object\n-        17: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        14: anewarray     #2                  // class java/lang/Object\n+        17: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         20: fload_0\n         21: fconst_0\n         22: fcmpl\n         23: iflt          30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n-        31: ldc           #9                  // String Both range values must be non-negative.\n+        31: ldc           #33                 // String Both range values must be non-negative.\n         33: iconst_0\n-        34: anewarray     #5                  // class java/lang/Object\n-        37: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        34: anewarray     #2                  // class java/lang/Object\n+        37: invokestatic  #21                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         40: fload_0\n         41: fload_1\n         42: fcmpl\n         43: ifne          48\n         46: fload_0\n         47: freturn\n         48: fload_0\n         49: fload_1\n         50: fload_0\n         51: fsub\n-        52: getstatic     #2                  // Field RANDOM:Ljava/util/Random;\n-        55: invokevirtual #24                 // Method java/util/Random.nextFloat:()F\n+        52: getstatic     #7                  // Field RANDOM:Ljava/util/Random;\n+        55: invokevirtual #67                 // Method java/util/Random.nextFloat:()F\n         58: fmul\n         59: fadd\n         60: freturn\n       LineNumberTable:\n         line 233: 0\n         line 235: 20\n         line 237: 40\n@@ -444,27 +444,27 @@\n \n   public static float nextFloat();\n     descriptor: ()F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: fconst_0\n-         1: ldc           #26                 // float 3.4028235E38f\n-         3: invokestatic  #27                 // Method nextFloat:(FF)F\n+         1: ldc           #73                 // float 3.4028235E38f\n+         3: invokestatic  #74                 // Method nextFloat:(FF)F\n          6: freturn\n       LineNumberTable:\n         line 252: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #28                 // class java/util/Random\n+         0: new           #14                 // class java/util/Random\n          3: dup\n-         4: invokespecial #29                 // Method java/util/Random.\"<init>\":()V\n-         7: putstatic     #2                  // Field RANDOM:Ljava/util/Random;\n+         4: invokespecial #77                 // Method java/util/Random.\"<init>\":()V\n+         7: putstatic     #7                  // Field RANDOM:Ljava/util/Random;\n         10: return\n       LineNumberTable:\n         line 40: 0\n }\n SourceFile: \"RandomUtils.java\"\n"}]}
