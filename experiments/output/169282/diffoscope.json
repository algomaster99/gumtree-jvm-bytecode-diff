{"diffoscope-json-version": 1, "source1": "first/Validate.class", "source2": "second/Validate.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum 19073b1b0ea987f1e4e2f8de1e49092a25744c91c6b9868f69a9691a710be983\n+  SHA-256 checksum 2d24a8c784fc02f0feebe045ebc1e4e0b84e637c00e36d4a06e672f9fa183fc3\n   Compiled from \"Validate.java\"\n public class org.apache.commons.lang3.Validate\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/lang3/Validate\n   super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 20, methods: 51, attributes: 1\n Constant pool:\n-    #1 = Methodref          #3.#221       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #222          // java/lang/IllegalArgumentException\n-    #3 = Class              #223          // java/lang/Object\n-    #4 = Methodref          #224.#225     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-    #5 = Methodref          #226.#227     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-    #6 = Methodref          #2.#228       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #229.#230     // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-    #8 = Class              #231          // org/apache/commons/lang3/Validate\n-    #9 = String             #232          // The validated expression is false\n-   #10 = String             #233          // The validated object is null\n-   #11 = Methodref          #8.#234       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #12 = Class              #235          // java/lang/NullPointerException\n-   #13 = Methodref          #12.#228      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = String             #236          // The validated array is empty\n-   #15 = Methodref          #8.#237       // org/apache/commons/lang3/Validate.notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #16 = InterfaceMethodref #238.#239     // java/util/Collection.isEmpty:()Z\n-   #17 = String             #240          // The validated collection is empty\n-   #18 = Methodref          #8.#241       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-   #19 = InterfaceMethodref #242.#239     // java/util/Map.isEmpty:()Z\n-   #20 = String             #243          // The validated map is empty\n-   #21 = Methodref          #8.#244       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n-   #22 = InterfaceMethodref #245.#246     // java/lang/CharSequence.length:()I\n-   #23 = String             #247          // The validated character sequence is empty\n-   #24 = Methodref          #8.#248       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #25 = Methodref          #249.#250     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #26 = String             #251          // The validated character sequence is blank\n-   #27 = Methodref          #8.#252       // org/apache/commons/lang3/Validate.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #28 = Methodref          #8.#253       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #29 = Methodref          #254.#255     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #30 = Methodref          #256.#257     // org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-   #31 = String             #258          // The validated array contains null element at index: %d\n-   #32 = Methodref          #8.#259       // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #33 = InterfaceMethodref #260.#261     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #34 = InterfaceMethodref #262.#263     // java/util/Iterator.hasNext:()Z\n-   #35 = InterfaceMethodref #262.#264     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #36 = Methodref          #256.#265     // org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #37 = String             #266          // The validated collection contains null element at index: %d\n-   #38 = Methodref          #8.#267       // org/apache/commons/lang3/Validate.noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n-   #39 = Class              #268          // java/lang/IndexOutOfBoundsException\n-   #40 = Methodref          #39.#228      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #41 = String             #269          // The validated array index is invalid: %d\n-   #42 = Methodref          #8.#270       // org/apache/commons/lang3/Validate.validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-   #43 = InterfaceMethodref #238.#271     // java/util/Collection.size:()I\n-   #44 = String             #272          // The validated collection index is invalid: %d\n-   #45 = Methodref          #8.#273       // org/apache/commons/lang3/Validate.validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-   #46 = String             #274          // The validated character sequence index is invalid: %d\n-   #47 = Methodref          #8.#275       // org/apache/commons/lang3/Validate.validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-   #48 = Class              #276          // java/lang/IllegalStateException\n-   #49 = String             #277          // The validated state is false\n-   #50 = Methodref          #48.#228      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Methodref          #278.#279     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-   #52 = String             #280          // The string %s does not match the pattern %s\n-   #53 = String             #281          // The validated value is not a number\n-   #54 = Methodref          #8.#282       // org/apache/commons/lang3/Validate.notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n-   #55 = Methodref          #229.#283     // java/lang/Double.isNaN:(D)Z\n-   #56 = String             #284          // The value is invalid: %f\n-   #57 = Methodref          #8.#285       // org/apache/commons/lang3/Validate.finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n-   #58 = Methodref          #229.#286     // java/lang/Double.isInfinite:(D)Z\n-   #59 = InterfaceMethodref #287.#288     // java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n-   #60 = String             #289          // The value %s is not in the specified inclusive range of %s to %s\n-   #61 = String             #290          // The value %s is not in the specified exclusive range of %s to %s\n-   #62 = Methodref          #291.#292     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #63 = String             #293          // Expected type: %s, actual: %s\n-   #64 = Methodref          #291.#294     // java/lang/Class.getName:()Ljava/lang/String;\n-   #65 = String             #295          // null\n-   #66 = Methodref          #3.#296       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #67 = Methodref          #291.#297     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #68 = String             #298          // Cannot assign a %s to a %s\n+    #1 = Methodref          #3.#220       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #221          // java/lang/IllegalArgumentException\n+    #3 = Class              #222          // java/lang/Object\n+    #4 = Methodref          #223.#224     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+    #5 = Methodref          #207.#225     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+    #6 = Methodref          #2.#226       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #7 = Methodref          #227.#228     // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+    #8 = Class              #229          // org/apache/commons/lang3/Validate\n+    #9 = String             #230          // The validated expression is false\n+   #10 = String             #231          // The validated object is null\n+   #11 = Methodref          #8.#232       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #12 = Class              #233          // java/lang/NullPointerException\n+   #13 = Methodref          #12.#226      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = String             #234          // The validated array is empty\n+   #15 = Methodref          #8.#235       // org/apache/commons/lang3/Validate.notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #16 = InterfaceMethodref #236.#237     // java/util/Collection.isEmpty:()Z\n+   #17 = String             #238          // The validated collection is empty\n+   #18 = Methodref          #8.#239       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+   #19 = InterfaceMethodref #240.#237     // java/util/Map.isEmpty:()Z\n+   #20 = String             #241          // The validated map is empty\n+   #21 = Methodref          #8.#242       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+   #22 = InterfaceMethodref #243.#244     // java/lang/CharSequence.length:()I\n+   #23 = String             #245          // The validated character sequence is empty\n+   #24 = Methodref          #8.#246       // org/apache/commons/lang3/Validate.notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #25 = Methodref          #247.#248     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+   #26 = String             #249          // The validated character sequence is blank\n+   #27 = Methodref          #8.#250       // org/apache/commons/lang3/Validate.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #28 = Methodref          #8.#251       // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #29 = Methodref          #252.#253     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #30 = Methodref          #254.#255     // org/apache/commons/lang3/ArrayUtils.add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+   #31 = String             #256          // The validated array contains null element at index: %d\n+   #32 = Methodref          #8.#257       // org/apache/commons/lang3/Validate.noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #33 = InterfaceMethodref #258.#259     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #34 = InterfaceMethodref #158.#260     // java/util/Iterator.hasNext:()Z\n+   #35 = InterfaceMethodref #158.#261     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #36 = Methodref          #254.#262     // org/apache/commons/lang3/ArrayUtils.addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #37 = String             #263          // The validated collection contains null element at index: %d\n+   #38 = Methodref          #8.#264       // org/apache/commons/lang3/Validate.noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+   #39 = Class              #265          // java/lang/IndexOutOfBoundsException\n+   #40 = Methodref          #39.#226      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #41 = String             #266          // The validated array index is invalid: %d\n+   #42 = Methodref          #8.#267       // org/apache/commons/lang3/Validate.validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+   #43 = InterfaceMethodref #236.#268     // java/util/Collection.size:()I\n+   #44 = String             #269          // The validated collection index is invalid: %d\n+   #45 = Methodref          #8.#270       // org/apache/commons/lang3/Validate.validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+   #46 = String             #271          // The validated character sequence index is invalid: %d\n+   #47 = Methodref          #8.#272       // org/apache/commons/lang3/Validate.validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+   #48 = Class              #273          // java/lang/IllegalStateException\n+   #49 = String             #274          // The validated state is false\n+   #50 = Methodref          #48.#226      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #51 = Methodref          #275.#276     // java/util/regex/Pattern.matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+   #52 = String             #277          // The string %s does not match the pattern %s\n+   #53 = String             #278          // The validated value is not a number\n+   #54 = Methodref          #8.#279       // org/apache/commons/lang3/Validate.notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n+   #55 = Methodref          #227.#280     // java/lang/Double.isNaN:(D)Z\n+   #56 = String             #281          // The value is invalid: %f\n+   #57 = Methodref          #8.#282       // org/apache/commons/lang3/Validate.finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n+   #58 = Methodref          #227.#283     // java/lang/Double.isInfinite:(D)Z\n+   #59 = InterfaceMethodref #284.#285     // java/lang/Comparable.compareTo:(Ljava/lang/Object;)I\n+   #60 = String             #286          // The value %s is not in the specified inclusive range of %s to %s\n+   #61 = String             #287          // The value %s is not in the specified exclusive range of %s to %s\n+   #62 = Methodref          #206.#288     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+   #63 = String             #289          // Expected type: %s, actual: %s\n+   #64 = Methodref          #206.#290     // java/lang/Class.getName:()Ljava/lang/String;\n+   #65 = String             #291          // null\n+   #66 = Methodref          #3.#292       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #67 = Methodref          #206.#293     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #68 = String             #294          // Cannot assign a %s to a %s\n    #69 = Utf8               DEFAULT_NOT_NAN_EX_MESSAGE\n    #70 = Utf8               Ljava/lang/String;\n    #71 = Utf8               ConstantValue\n    #72 = Utf8               DEFAULT_FINITE_EX_MESSAGE\n    #73 = Utf8               DEFAULT_EXCLUSIVE_BETWEEN_EX_MESSAGE\n    #74 = Utf8               DEFAULT_INCLUSIVE_BETWEEN_EX_MESSAGE\n    #75 = Utf8               DEFAULT_MATCHES_PATTERN_EX\n@@ -161,15 +161,15 @@\n   #151 = Utf8               I\n   #152 = Utf8               (Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n   #153 = Utf8               it\n   #154 = Utf8               Ljava/util/Iterator;\n   #155 = Utf8               iterable\n   #156 = Utf8               Ljava/lang/Iterable;\n   #157 = Utf8               Ljava/util/Iterator<*>;\n-  #158 = Class              #299          // java/util/Iterator\n+  #158 = Class              #295          // java/util/Iterator\n   #159 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;Ljava/lang/String;[Ljava/lang/Object;)TT;\n   #160 = Utf8               (Ljava/lang/Iterable;)Ljava/lang/Iterable;\n   #161 = Utf8               <T::Ljava/lang/Iterable<*>;>(TT;)TT;\n   #162 = Utf8               validIndex\n   #163 = Utf8               ([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n   #164 = Utf8               index\n   #165 = Utf8               <T:Ljava/lang/Object;>([TT;ILjava/lang/String;[Ljava/lang/Object;)[TT;\n@@ -209,158 +209,154 @@\n   #199 = Utf8               exclusiveBetween\n   #200 = Utf8               isInstanceOf\n   #201 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)V\n   #202 = Utf8               type\n   #203 = Utf8               Ljava/lang/Class;\n   #204 = Utf8               obj\n   #205 = Utf8               Ljava/lang/Class<*>;\n-  #206 = Class              #300          // java/lang/Class\n-  #207 = Class              #223          // java/lang/Object\n-  #208 = Class              #301          // java/lang/String\n-  #209 = Class              #110          // \"[Ljava/lang/Object;\"\n-  #210 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n-  #211 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #212 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #213 = Utf8               isAssignableFrom\n-  #214 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V\n-  #215 = Utf8               superType\n-  #216 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n-  #217 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #218 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n-  #219 = Utf8               SourceFile\n-  #220 = Utf8               Validate.java\n-  #221 = NameAndType        #91:#92       // \"<init>\":()V\n-  #222 = Utf8               java/lang/IllegalArgumentException\n-  #223 = Utf8               java/lang/Object\n-  #224 = Class              #302          // java/lang/Long\n-  #225 = NameAndType        #303:#304     // valueOf:(J)Ljava/lang/Long;\n-  #226 = Class              #301          // java/lang/String\n-  #227 = NameAndType        #305:#306     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #228 = NameAndType        #91:#307      // \"<init>\":(Ljava/lang/String;)V\n-  #229 = Class              #308          // java/lang/Double\n-  #230 = NameAndType        #303:#309     // valueOf:(D)Ljava/lang/Double;\n-  #231 = Utf8               org/apache/commons/lang3/Validate\n-  #232 = Utf8               The validated expression is false\n-  #233 = Utf8               The validated object is null\n-  #234 = NameAndType        #112:#120     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #235 = Utf8               java/lang/NullPointerException\n-  #236 = Utf8               The validated array is empty\n-  #237 = NameAndType        #122:#123     // notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #238 = Class              #310          // java/util/Collection\n-  #239 = NameAndType        #311:#312     // isEmpty:()Z\n-  #240 = Utf8               The validated collection is empty\n-  #241 = NameAndType        #122:#129     // notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #242 = Class              #313          // java/util/Map\n-  #243 = Utf8               The validated map is empty\n-  #244 = NameAndType        #122:#135     // notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n-  #245 = Class              #314          // java/lang/CharSequence\n-  #246 = NameAndType        #315:#316     // length:()I\n-  #247 = Utf8               The validated character sequence is empty\n-  #248 = NameAndType        #122:#141     // notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #249 = Class              #317          // org/apache/commons/lang3/StringUtils\n-  #250 = NameAndType        #318:#319     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #251 = Utf8               The validated character sequence is blank\n-  #252 = NameAndType        #147:#141     // notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #253 = NameAndType        #112:#113     // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #254 = Class              #320          // java/lang/Integer\n-  #255 = NameAndType        #303:#321     // valueOf:(I)Ljava/lang/Integer;\n-  #256 = Class              #322          // org/apache/commons/lang3/ArrayUtils\n-  #257 = NameAndType        #323:#324     // add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-  #258 = Utf8               The validated array contains null element at index: %d\n-  #259 = NameAndType        #148:#123     // noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #260 = Class              #325          // java/lang/Iterable\n-  #261 = NameAndType        #326:#327     // iterator:()Ljava/util/Iterator;\n-  #262 = Class              #299          // java/util/Iterator\n-  #263 = NameAndType        #328:#312     // hasNext:()Z\n-  #264 = NameAndType        #329:#330     // next:()Ljava/lang/Object;\n-  #265 = NameAndType        #331:#332     // addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #266 = Utf8               The validated collection contains null element at index: %d\n-  #267 = NameAndType        #148:#152     // noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n-  #268 = Utf8               java/lang/IndexOutOfBoundsException\n-  #269 = Utf8               The validated array index is invalid: %d\n-  #270 = NameAndType        #162:#163     // validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #271 = NameAndType        #333:#316     // size:()I\n-  #272 = Utf8               The validated collection index is invalid: %d\n-  #273 = NameAndType        #162:#168     // validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n-  #274 = Utf8               The validated character sequence index is invalid: %d\n-  #275 = NameAndType        #162:#172     // validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n-  #276 = Utf8               java/lang/IllegalStateException\n-  #277 = Utf8               The validated state is false\n-  #278 = Class              #334          // java/util/regex/Pattern\n-  #279 = NameAndType        #335:#336     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-  #280 = Utf8               The string %s does not match the pattern %s\n-  #281 = Utf8               The validated value is not a number\n-  #282 = NameAndType        #182:#184     // notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n-  #283 = NameAndType        #337:#338     // isNaN:(D)Z\n-  #284 = Utf8               The value is invalid: %f\n-  #285 = NameAndType        #185:#184     // finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n-  #286 = NameAndType        #339:#338     // isInfinite:(D)Z\n-  #287 = Class              #340          // java/lang/Comparable\n-  #288 = NameAndType        #341:#342     // compareTo:(Ljava/lang/Object;)I\n-  #289 = Utf8               The value %s is not in the specified inclusive range of %s to %s\n-  #290 = Utf8               The value %s is not in the specified exclusive range of %s to %s\n-  #291 = Class              #300          // java/lang/Class\n-  #292 = NameAndType        #343:#344     // isInstance:(Ljava/lang/Object;)Z\n-  #293 = Utf8               Expected type: %s, actual: %s\n-  #294 = NameAndType        #345:#346     // getName:()Ljava/lang/String;\n-  #295 = Utf8               null\n-  #296 = NameAndType        #347:#348     // getClass:()Ljava/lang/Class;\n-  #297 = NameAndType        #213:#349     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #298 = Utf8               Cannot assign a %s to a %s\n-  #299 = Utf8               java/util/Iterator\n-  #300 = Utf8               java/lang/Class\n-  #301 = Utf8               java/lang/String\n-  #302 = Utf8               java/lang/Long\n-  #303 = Utf8               valueOf\n-  #304 = Utf8               (J)Ljava/lang/Long;\n-  #305 = Utf8               format\n-  #306 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #307 = Utf8               (Ljava/lang/String;)V\n-  #308 = Utf8               java/lang/Double\n-  #309 = Utf8               (D)Ljava/lang/Double;\n-  #310 = Utf8               java/util/Collection\n-  #311 = Utf8               isEmpty\n-  #312 = Utf8               ()Z\n-  #313 = Utf8               java/util/Map\n-  #314 = Utf8               java/lang/CharSequence\n-  #315 = Utf8               length\n-  #316 = Utf8               ()I\n-  #317 = Utf8               org/apache/commons/lang3/StringUtils\n-  #318 = Utf8               isBlank\n-  #319 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #320 = Utf8               java/lang/Integer\n-  #321 = Utf8               (I)Ljava/lang/Integer;\n-  #322 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #323 = Utf8               add\n-  #324 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n-  #325 = Utf8               java/lang/Iterable\n-  #326 = Utf8               iterator\n-  #327 = Utf8               ()Ljava/util/Iterator;\n-  #328 = Utf8               hasNext\n-  #329 = Utf8               next\n-  #330 = Utf8               ()Ljava/lang/Object;\n-  #331 = Utf8               addAll\n-  #332 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n-  #333 = Utf8               size\n-  #334 = Utf8               java/util/regex/Pattern\n-  #335 = Utf8               matches\n-  #336 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z\n-  #337 = Utf8               isNaN\n-  #338 = Utf8               (D)Z\n-  #339 = Utf8               isInfinite\n-  #340 = Utf8               java/lang/Comparable\n-  #341 = Utf8               compareTo\n-  #342 = Utf8               (Ljava/lang/Object;)I\n-  #343 = Utf8               isInstance\n-  #344 = Utf8               (Ljava/lang/Object;)Z\n-  #345 = Utf8               getName\n-  #346 = Utf8               ()Ljava/lang/String;\n-  #347 = Utf8               getClass\n-  #348 = Utf8               ()Ljava/lang/Class;\n-  #349 = Utf8               (Ljava/lang/Class;)Z\n+  #206 = Class              #296          // java/lang/Class\n+  #207 = Class              #297          // java/lang/String\n+  #208 = Class              #110          // \"[Ljava/lang/Object;\"\n+  #209 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n+  #210 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #211 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #212 = Utf8               isAssignableFrom\n+  #213 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;)V\n+  #214 = Utf8               superType\n+  #215 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n+  #216 = Utf8               (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #217 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n+  #218 = Utf8               SourceFile\n+  #219 = Utf8               Validate.java\n+  #220 = NameAndType        #91:#92       // \"<init>\":()V\n+  #221 = Utf8               java/lang/IllegalArgumentException\n+  #222 = Utf8               java/lang/Object\n+  #223 = Class              #298          // java/lang/Long\n+  #224 = NameAndType        #299:#300     // valueOf:(J)Ljava/lang/Long;\n+  #225 = NameAndType        #301:#302     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #226 = NameAndType        #91:#303      // \"<init>\":(Ljava/lang/String;)V\n+  #227 = Class              #304          // java/lang/Double\n+  #228 = NameAndType        #299:#305     // valueOf:(D)Ljava/lang/Double;\n+  #229 = Utf8               org/apache/commons/lang3/Validate\n+  #230 = Utf8               The validated expression is false\n+  #231 = Utf8               The validated object is null\n+  #232 = NameAndType        #112:#120     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #233 = Utf8               java/lang/NullPointerException\n+  #234 = Utf8               The validated array is empty\n+  #235 = NameAndType        #122:#123     // notEmpty:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #236 = Class              #306          // java/util/Collection\n+  #237 = NameAndType        #307:#308     // isEmpty:()Z\n+  #238 = Utf8               The validated collection is empty\n+  #239 = NameAndType        #122:#129     // notEmpty:(Ljava/util/Collection;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+  #240 = Class              #309          // java/util/Map\n+  #241 = Utf8               The validated map is empty\n+  #242 = NameAndType        #122:#135     // notEmpty:(Ljava/util/Map;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map;\n+  #243 = Class              #310          // java/lang/CharSequence\n+  #244 = NameAndType        #311:#312     // length:()I\n+  #245 = Utf8               The validated character sequence is empty\n+  #246 = NameAndType        #122:#141     // notEmpty:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #247 = Class              #313          // org/apache/commons/lang3/StringUtils\n+  #248 = NameAndType        #314:#315     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #249 = Utf8               The validated character sequence is blank\n+  #250 = NameAndType        #147:#141     // notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #251 = NameAndType        #112:#113     // notNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #252 = Class              #316          // java/lang/Integer\n+  #253 = NameAndType        #299:#317     // valueOf:(I)Ljava/lang/Integer;\n+  #254 = Class              #318          // org/apache/commons/lang3/ArrayUtils\n+  #255 = NameAndType        #319:#320     // add:([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+  #256 = Utf8               The validated array contains null element at index: %d\n+  #257 = NameAndType        #148:#123     // noNullElements:([Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #258 = Class              #321          // java/lang/Iterable\n+  #259 = NameAndType        #322:#323     // iterator:()Ljava/util/Iterator;\n+  #260 = NameAndType        #324:#308     // hasNext:()Z\n+  #261 = NameAndType        #325:#326     // next:()Ljava/lang/Object;\n+  #262 = NameAndType        #327:#328     // addAll:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #263 = Utf8               The validated collection contains null element at index: %d\n+  #264 = NameAndType        #148:#152     // noNullElements:(Ljava/lang/Iterable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Iterable;\n+  #265 = Utf8               java/lang/IndexOutOfBoundsException\n+  #266 = Utf8               The validated array index is invalid: %d\n+  #267 = NameAndType        #162:#163     // validIndex:([Ljava/lang/Object;ILjava/lang/String;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #268 = NameAndType        #329:#312     // size:()I\n+  #269 = Utf8               The validated collection index is invalid: %d\n+  #270 = NameAndType        #162:#168     // validIndex:(Ljava/util/Collection;ILjava/lang/String;[Ljava/lang/Object;)Ljava/util/Collection;\n+  #271 = Utf8               The validated character sequence index is invalid: %d\n+  #272 = NameAndType        #162:#172     // validIndex:(Ljava/lang/CharSequence;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/CharSequence;\n+  #273 = Utf8               java/lang/IllegalStateException\n+  #274 = Utf8               The validated state is false\n+  #275 = Class              #330          // java/util/regex/Pattern\n+  #276 = NameAndType        #331:#332     // matches:(Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+  #277 = Utf8               The string %s does not match the pattern %s\n+  #278 = Utf8               The validated value is not a number\n+  #279 = NameAndType        #182:#184     // notNaN:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #280 = NameAndType        #333:#334     // isNaN:(D)Z\n+  #281 = Utf8               The value is invalid: %f\n+  #282 = NameAndType        #185:#184     // finite:(DLjava/lang/String;[Ljava/lang/Object;)V\n+  #283 = NameAndType        #335:#334     // isInfinite:(D)Z\n+  #284 = Class              #336          // java/lang/Comparable\n+  #285 = NameAndType        #337:#338     // compareTo:(Ljava/lang/Object;)I\n+  #286 = Utf8               The value %s is not in the specified inclusive range of %s to %s\n+  #287 = Utf8               The value %s is not in the specified exclusive range of %s to %s\n+  #288 = NameAndType        #339:#340     // isInstance:(Ljava/lang/Object;)Z\n+  #289 = Utf8               Expected type: %s, actual: %s\n+  #290 = NameAndType        #341:#342     // getName:()Ljava/lang/String;\n+  #291 = Utf8               null\n+  #292 = NameAndType        #343:#344     // getClass:()Ljava/lang/Class;\n+  #293 = NameAndType        #212:#345     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #294 = Utf8               Cannot assign a %s to a %s\n+  #295 = Utf8               java/util/Iterator\n+  #296 = Utf8               java/lang/Class\n+  #297 = Utf8               java/lang/String\n+  #298 = Utf8               java/lang/Long\n+  #299 = Utf8               valueOf\n+  #300 = Utf8               (J)Ljava/lang/Long;\n+  #301 = Utf8               format\n+  #302 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #303 = Utf8               (Ljava/lang/String;)V\n+  #304 = Utf8               java/lang/Double\n+  #305 = Utf8               (D)Ljava/lang/Double;\n+  #306 = Utf8               java/util/Collection\n+  #307 = Utf8               isEmpty\n+  #308 = Utf8               ()Z\n+  #309 = Utf8               java/util/Map\n+  #310 = Utf8               java/lang/CharSequence\n+  #311 = Utf8               length\n+  #312 = Utf8               ()I\n+  #313 = Utf8               org/apache/commons/lang3/StringUtils\n+  #314 = Utf8               isBlank\n+  #315 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #316 = Utf8               java/lang/Integer\n+  #317 = Utf8               (I)Ljava/lang/Integer;\n+  #318 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #319 = Utf8               add\n+  #320 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)[Ljava/lang/Object;\n+  #321 = Utf8               java/lang/Iterable\n+  #322 = Utf8               iterator\n+  #323 = Utf8               ()Ljava/util/Iterator;\n+  #324 = Utf8               hasNext\n+  #325 = Utf8               next\n+  #326 = Utf8               ()Ljava/lang/Object;\n+  #327 = Utf8               addAll\n+  #328 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;\n+  #329 = Utf8               size\n+  #330 = Utf8               java/util/regex/Pattern\n+  #331 = Utf8               matches\n+  #332 = Utf8               (Ljava/lang/String;Ljava/lang/CharSequence;)Z\n+  #333 = Utf8               isNaN\n+  #334 = Utf8               (D)Z\n+  #335 = Utf8               isInfinite\n+  #336 = Utf8               java/lang/Comparable\n+  #337 = Utf8               compareTo\n+  #338 = Utf8               (Ljava/lang/Object;)I\n+  #339 = Utf8               isInstance\n+  #340 = Utf8               (Ljava/lang/Object;)Z\n+  #341 = Utf8               getName\n+  #342 = Utf8               ()Ljava/lang/String;\n+  #343 = Utf8               getClass\n+  #344 = Utf8               ()Ljava/lang/Class;\n+  #345 = Utf8               (Ljava/lang/Class;)Z\n {\n   private static final java.lang.String DEFAULT_NOT_NAN_EX_MESSAGE = \"The validated value is not a number\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String The validated value is not a number\n \n   private static final java.lang.String DEFAULT_FINITE_EX_MESSAGE = \"The value is invalid: %f\";\n@@ -2127,15 +2123,15 @@\n         44: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         47: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         50: athrow\n         51: return\n       LineNumberTable:\n         line 1262: 0\n         line 1263: 8\n-        line 1264: 37\n+        line 1264: 27\n         line 1263: 44\n         line 1266: 51\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      52     0  type   Ljava/lang/Class;\n             0      52     1   obj   Ljava/lang/Object;\n       LocalVariableTypeTable:\n@@ -2147,15 +2143,15 @@\n           locals = [ class java/lang/Class, class java/lang/Object ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 6\n           locals = [ class java/lang/Class, class java/lang/Object ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int, class java/lang/String ]\n         frame_type = 7 /* same */\n-    Signature: #210                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n+    Signature: #209                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)V\n \n   public static void isInstanceOf(java.lang.Class<?>, java.lang.Object, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n@@ -2181,15 +2177,15 @@\n             0      22     2 message   Ljava/lang/String;\n             0      22     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  type   Ljava/lang/Class<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Signature: #212                         // (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #211                         // (Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)V\n \n   public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Class;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n@@ -2239,15 +2235,15 @@\n           locals = [ class java/lang/Class, class java/lang/Class ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 3\n           locals = [ class java/lang/Class, class java/lang/Class ]\n           stack = [ uninitialized 8, uninitialized 8, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int, class java/lang/String ]\n         frame_type = 14 /* same */\n-    Signature: #216                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n+    Signature: #215                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;)V\n \n   public static void isAssignableFrom(java.lang.Class<?>, java.lang.Class<?>, java.lang.String, java.lang.Object...);\n     descriptor: (Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Object;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n@@ -2274,10 +2270,10 @@\n             0      22     3 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0 superType   Ljava/lang/Class<*>;\n             0      22     1  type   Ljava/lang/Class<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Signature: #218                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n+    Signature: #217                         // (Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/String;[Ljava/lang/Object;)V\n }\n SourceFile: \"Validate.java\"\n"}]}
