{"diffoscope-json-version": 1, "source1": "first/JsonGeneratorImpl.class", "source2": "second/JsonGeneratorImpl.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,17 +1,17 @@\n \n package com.fasterxml.jackson.core.json;\n \n-import com.fasterxml.jackson.core.io.CharTypes;\n import java.io.IOException;\n import com.fasterxml.jackson.core.util.VersionUtil;\n import com.fasterxml.jackson.core.Version;\n import com.fasterxml.jackson.core.JsonGenerator;\n import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;\n import com.fasterxml.jackson.core.ObjectCodec;\n+import com.fasterxml.jackson.core.io.CharTypes;\n import com.fasterxml.jackson.core.SerializableString;\n import com.fasterxml.jackson.core.io.CharacterEscapes;\n import com.fasterxml.jackson.core.io.IOContext;\n import com.fasterxml.jackson.core.StreamWriteCapability;\n import com.fasterxml.jackson.core.util.JacksonFeatureSet;\n import com.fasterxml.jackson.core.base.GeneratorBase;\n \n@@ -23,14 +23,19 @@\n     protected int[] _outputEscapes;\n     protected int _maximumNonEscapedChar;\n     protected CharacterEscapes _characterEscapes;\n     protected SerializableString _rootValueSeparator;\n     protected boolean _cfgUnqNames;\n     protected boolean _cfgWriteHexUppercase;\n     \n+    static {\n+        sOutputEscapes = CharTypes.get7BitOutputEscapes();\n+        JSON_WRITE_CAPABILITIES = JsonGeneratorImpl.DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n+    }\n+    \n     public JsonGeneratorImpl(final IOContext ctxt, final int features, final ObjectCodec codec) {\n         super(features, codec);\n         this._outputEscapes = JsonGeneratorImpl.sOutputEscapes;\n         this._rootValueSeparator = (SerializableString)DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;\n         this._ioContext = ctxt;\n         if (JsonGenerator.Feature.ESCAPE_NON_ASCII.enabledIn(features)) {\n             this._maximumNonEscapedChar = 127;\n@@ -139,13 +144,8 @@\n             }\n         }\n     }\n     \n     protected void _reportCantWriteValueExpectName(final String typeMsg) throws IOException {\n         this._reportError(String.format(\"Can not %s, expecting field name (context: %s)\", typeMsg, this._writeContext.typeDesc()));\n     }\n-    \n-    static {\n-        sOutputEscapes = CharTypes.get7BitOutputEscapes();\n-        JSON_WRITE_CAPABILITIES = JsonGeneratorImpl.DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n-    }\n }\n"}]}
