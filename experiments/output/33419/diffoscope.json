{"diffoscope-json-version": 1, "source1": "first/FailableObjDoubleConsumer.class", "source2": "second/FailableObjDoubleConsumer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,92 +1,92 @@\n-  SHA-256 checksum 4e426f11072e8b7c0d87eada9f7aaa7b8438abe6a3296d22d004ce237191f8c2\n+  SHA-256 checksum 49dbc6997bf8d2ea6df44af41b3e576c1315af8b361013889ed2d37514d60a6d\n   Compiled from \"FailableObjDoubleConsumer.java\"\n public interface org.apache.commons.lang3.function.FailableObjDoubleConsumer<T extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #3                          // org/apache/commons/lang3/function/FailableObjDoubleConsumer\n-  super_class: #4                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/function/FailableObjDoubleConsumer\n+  super_class: #11                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #3.#31         // org/apache/commons/lang3/function/FailableObjDoubleConsumer.NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-   #2 = InvokeDynamic      #0:#36         // #0:accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-   #3 = Class              #37            // org/apache/commons/lang3/function/FailableObjDoubleConsumer\n-   #4 = Class              #38            // java/lang/Object\n+   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableObjDoubleConsumer.NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+   #2 = Class              #4             // org/apache/commons/lang3/function/FailableObjDoubleConsumer\n+   #3 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+   #4 = Utf8               org/apache/commons/lang3/function/FailableObjDoubleConsumer\n    #5 = Utf8               NOP\n    #6 = Utf8               Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-   #7 = Utf8               nop\n-   #8 = Utf8               ()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-   #9 = Utf8               Code\n-  #10 = Utf8               LineNumberTable\n-  #11 = Utf8               Signature\n-  #12 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer<TT;TE;>;\n-  #13 = Utf8               accept\n-  #14 = Utf8               (Ljava/lang/Object;D)V\n-  #15 = Utf8               Exceptions\n-  #16 = Class              #39            // java/lang/Throwable\n-  #17 = Utf8               (TT;D)V^TE;\n-  #18 = Utf8               lambda$static$0\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               t\n-  #21 = Utf8               Ljava/lang/Object;\n-  #22 = Utf8               u\n-  #23 = Utf8               D\n-  #24 = Utf8               <clinit>\n-  #25 = Utf8               ()V\n-  #26 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #27 = Utf8               SourceFile\n-  #28 = Utf8               FailableObjDoubleConsumer.java\n-  #29 = Utf8               RuntimeVisibleAnnotations\n-  #30 = Utf8               Ljava/lang/FunctionalInterface;\n-  #31 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-  #32 = Utf8               BootstrapMethods\n-  #33 = MethodHandle       6:#40          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #34 = MethodType         #14            //  (Ljava/lang/Object;D)V\n-  #35 = MethodHandle       6:#41          // REF_invokeStatic org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n-  #36 = NameAndType        #13:#8         // accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n-  #37 = Utf8               org/apache/commons/lang3/function/FailableObjDoubleConsumer\n-  #38 = Utf8               java/lang/Object\n-  #39 = Utf8               java/lang/Throwable\n-  #40 = Methodref          #42.#43        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #41 = InterfaceMethodref #3.#44         // org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n-  #42 = Class              #45            // java/lang/invoke/LambdaMetafactory\n-  #43 = NameAndType        #46:#50        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #44 = NameAndType        #18:#14        // lambda$static$0:(Ljava/lang/Object;D)V\n-  #45 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #46 = Utf8               metafactory\n-  #47 = Class              #52            // java/lang/invoke/MethodHandles$Lookup\n-  #48 = Utf8               Lookup\n-  #49 = Utf8               InnerClasses\n-  #50 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #51 = Class              #53            // java/lang/invoke/MethodHandles\n-  #52 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #53 = Utf8               java/lang/invoke/MethodHandles\n+   #7 = InvokeDynamic      #0:#8          // #0:accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+   #8 = NameAndType        #9:#10         // accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+   #9 = Utf8               accept\n+  #10 = Utf8               ()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+  #11 = Class              #12            // java/lang/Object\n+  #12 = Utf8               java/lang/Object\n+  #13 = Utf8               nop\n+  #14 = Utf8               Code\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               Signature\n+  #17 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer<TT;TE;>;\n+  #18 = Utf8               (Ljava/lang/Object;D)V\n+  #19 = Utf8               Exceptions\n+  #20 = Class              #21            // java/lang/Throwable\n+  #21 = Utf8               java/lang/Throwable\n+  #22 = Utf8               (TT;D)V^TE;\n+  #23 = Utf8               lambda$static$0\n+  #24 = Utf8               LocalVariableTable\n+  #25 = Utf8               t\n+  #26 = Utf8               Ljava/lang/Object;\n+  #27 = Utf8               u\n+  #28 = Utf8               D\n+  #29 = Utf8               <clinit>\n+  #30 = Utf8               ()V\n+  #31 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #32 = Utf8               SourceFile\n+  #33 = Utf8               FailableObjDoubleConsumer.java\n+  #34 = Utf8               RuntimeVisibleAnnotations\n+  #35 = Utf8               Ljava/lang/FunctionalInterface;\n+  #36 = Utf8               BootstrapMethods\n+  #37 = MethodHandle       6:#38          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #38 = Methodref          #39.#40        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #39 = Class              #41            // java/lang/invoke/LambdaMetafactory\n+  #40 = NameAndType        #42:#43        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #41 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #42 = Utf8               metafactory\n+  #43 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #44 = MethodType         #18            //  (Ljava/lang/Object;D)V\n+  #45 = MethodHandle       6:#46          // REF_invokeStatic org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n+  #46 = InterfaceMethodref #2.#47         // org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n+  #47 = NameAndType        #23:#18        // lambda$static$0:(Ljava/lang/Object;D)V\n+  #48 = Utf8               InnerClasses\n+  #49 = Class              #50            // java/lang/invoke/MethodHandles$Lookup\n+  #50 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #51 = Class              #52            // java/lang/invoke/MethodHandles\n+  #52 = Utf8               java/lang/invoke/MethodHandles\n+  #53 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableObjDoubleConsumer NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableObjDoubleConsumer<T, E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n          3: areturn\n       LineNumberTable:\n         line 44: 0\n-    Signature: #12                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer<TT;TE;>;\n+    Signature: #17                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer<TT;TE;>;\n \n   public abstract void accept(T, double) throws E;\n     descriptor: (Ljava/lang/Object;D)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #17                          // (TT;D)V^TE;\n+    Signature: #22                          // (TT;D)V^TE;\n \n   private static void lambda$static$0(java.lang.Object, double) throws java.lang.Throwable;\n     descriptor: (Ljava/lang/Object;D)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=0, locals=3, args_size=2\n          0: return\n@@ -100,26 +100,26 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #2,  0              // InvokeDynamic #0:accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n+         0: invokedynamic #7,  0              // InvokeDynamic #0:accept:()Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n          5: putstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableObjDoubleConsumer;\n          8: return\n       LineNumberTable:\n         line 34: 0\n }\n-Signature: #26                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #31                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableObjDoubleConsumer.java\"\n RuntimeVisibleAnnotations:\n-  0: #30()\n+  0: #35()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #48= #47 of #51;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #33 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #37 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #34 (Ljava/lang/Object;D)V\n-      #35 REF_invokeStatic org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n-      #34 (Ljava/lang/Object;D)V\n+      #44 (Ljava/lang/Object;D)V\n+      #45 REF_invokeStatic org/apache/commons/lang3/function/FailableObjDoubleConsumer.lambda$static$0:(Ljava/lang/Object;D)V\n+      #44 (Ljava/lang/Object;D)V\n+InnerClasses:\n+  public static final #53= #49 of #51;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
