{"diffoscope-json-version": 1, "source1": "first/Counters$AbstractPathCounters.class", "source2": "second/Counters$AbstractPathCounters.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,94 @@\n-  SHA-256 checksum 4759b192ee6eafc5208b82c9bb46cee0bb4b232caf3c4af469971c0d4d2e8e1f\n+  SHA-256 checksum 640b3641b4f0ef166239b281653ef3381a998289382cb1274d95ed99ebe6fd08\n   Compiled from \"Counters.java\"\n class org.apache.commons.io.file.Counters$AbstractPathCounters implements org.apache.commons.io.file.Counters$PathCounters\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #5                          // org/apache/commons/io/file/Counters$AbstractPathCounters\n-  super_class: #7                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/file/Counters$AbstractPathCounters\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 7, attributes: 2\n Constant pool:\n-   #1 = Methodref          #7.#46         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #5.#47         // org/apache/commons/io/file/Counters$AbstractPathCounters.byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-   #3 = Fieldref           #5.#48         // org/apache/commons/io/file/Counters$AbstractPathCounters.directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-   #4 = Fieldref           #5.#49         // org/apache/commons/io/file/Counters$AbstractPathCounters.fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-   #5 = Class              #51            // org/apache/commons/io/file/Counters$AbstractPathCounters\n-   #6 = Methodref          #52.#53        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #7 = Class              #54            // java/lang/Object\n-   #8 = Methodref          #52.#55        // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #9 = String             #56            // %,d files, %,d directories, %,d bytes\n-  #10 = InterfaceMethodref #15.#57        // org/apache/commons/io/file/Counters$Counter.get:()J\n-  #11 = Methodref          #58.#59        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #12 = Methodref          #60.#61        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #13 = Class              #62            // org/apache/commons/io/file/Counters$PathCounters\n-  #14 = Utf8               byteCounter\n-  #15 = Class              #64            // org/apache/commons/io/file/Counters$Counter\n-  #16 = Utf8               Counter\n-  #17 = Utf8               InnerClasses\n-  #18 = Utf8               Lorg/apache/commons/io/file/Counters$Counter;\n-  #19 = Utf8               directoryCounter\n-  #20 = Utf8               fileCounter\n-  #21 = Utf8               <init>\n-  #22 = Utf8               (Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;)V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               LocalVariableTable\n-  #26 = Utf8               this\n-  #27 = Utf8               AbstractPathCounters\n-  #28 = Utf8               Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n-  #29 = Utf8               equals\n-  #30 = Utf8               (Ljava/lang/Object;)Z\n-  #31 = Utf8               obj\n-  #32 = Utf8               Ljava/lang/Object;\n-  #33 = Utf8               other\n-  #34 = Utf8               StackMapTable\n-  #35 = Class              #51            // org/apache/commons/io/file/Counters$AbstractPathCounters\n-  #36 = Utf8               getByteCounter\n-  #37 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n-  #38 = Utf8               getDirectoryCounter\n-  #39 = Utf8               getFileCounter\n-  #40 = Utf8               hashCode\n-  #41 = Utf8               ()I\n-  #42 = Utf8               toString\n-  #43 = Utf8               ()Ljava/lang/String;\n-  #44 = Utf8               SourceFile\n-  #45 = Utf8               Counters.java\n-  #46 = NameAndType        #21:#65        // \"<init>\":()V\n-  #47 = NameAndType        #14:#18        // byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-  #48 = NameAndType        #19:#18        // directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-  #49 = NameAndType        #20:#18        // fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-  #50 = Class              #66            // org/apache/commons/io/file/Counters\n-  #51 = Utf8               org/apache/commons/io/file/Counters$AbstractPathCounters\n-  #52 = Class              #67            // java/util/Objects\n-  #53 = NameAndType        #29:#68        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #54 = Utf8               java/lang/Object\n-  #55 = NameAndType        #69:#70        // hash:([Ljava/lang/Object;)I\n-  #56 = Utf8               %,d files, %,d directories, %,d bytes\n-  #57 = NameAndType        #71:#72        // get:()J\n-  #58 = Class              #73            // java/lang/Long\n-  #59 = NameAndType        #74:#75        // valueOf:(J)Ljava/lang/Long;\n-  #60 = Class              #76            // java/lang/String\n-  #61 = NameAndType        #77:#78        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #62 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #63 = Utf8               PathCounters\n-  #64 = Utf8               org/apache/commons/io/file/Counters$Counter\n-  #65 = Utf8               ()V\n-  #66 = Utf8               org/apache/commons/io/file/Counters\n-  #67 = Utf8               java/util/Objects\n-  #68 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #69 = Utf8               hash\n-  #70 = Utf8               ([Ljava/lang/Object;)I\n-  #71 = Utf8               get\n-  #72 = Utf8               ()J\n-  #73 = Utf8               java/lang/Long\n-  #74 = Utf8               valueOf\n-  #75 = Utf8               (J)Ljava/lang/Long;\n-  #76 = Utf8               java/lang/String\n-  #77 = Utf8               format\n-  #78 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #1 = Class              #2             // org/apache/commons/io/file/Counters$AbstractPathCounters\n+   #2 = Utf8               org/apache/commons/io/file/Counters$AbstractPathCounters\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/io/file/Counters$PathCounters\n+   #6 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+   #7 = Utf8               byteCounter\n+   #8 = Utf8               Lorg/apache/commons/io/file/Counters$Counter;\n+   #9 = Utf8               directoryCounter\n+  #10 = Utf8               fileCounter\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;)V\n+  #13 = Utf8               Code\n+  #14 = Methodref          #3.#15         // java/lang/Object.\"<init>\":()V\n+  #15 = NameAndType        #11:#16        // \"<init>\":()V\n+  #16 = Utf8               ()V\n+  #17 = Fieldref           #1.#18         // org/apache/commons/io/file/Counters$AbstractPathCounters.byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #18 = NameAndType        #7:#8          // byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #19 = Fieldref           #1.#20         // org/apache/commons/io/file/Counters$AbstractPathCounters.directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #20 = NameAndType        #9:#8          // directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #21 = Fieldref           #1.#22         // org/apache/commons/io/file/Counters$AbstractPathCounters.fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #22 = NameAndType        #10:#8         // fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+  #23 = Utf8               LineNumberTable\n+  #24 = Utf8               LocalVariableTable\n+  #25 = Utf8               this\n+  #26 = Utf8               Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n+  #27 = Utf8               equals\n+  #28 = Utf8               (Ljava/lang/Object;)Z\n+  #29 = Methodref          #30.#32        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #30 = Class              #31            // java/util/Objects\n+  #31 = Utf8               java/util/Objects\n+  #32 = NameAndType        #27:#33        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #33 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #34 = Utf8               obj\n+  #35 = Utf8               Ljava/lang/Object;\n+  #36 = Utf8               other\n+  #37 = Utf8               StackMapTable\n+  #38 = Utf8               getByteCounter\n+  #39 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n+  #40 = Utf8               getDirectoryCounter\n+  #41 = Utf8               getFileCounter\n+  #42 = Utf8               hashCode\n+  #43 = Utf8               ()I\n+  #44 = Methodref          #30.#45        // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #45 = NameAndType        #46:#47        // hash:([Ljava/lang/Object;)I\n+  #46 = Utf8               hash\n+  #47 = Utf8               ([Ljava/lang/Object;)I\n+  #48 = Utf8               toString\n+  #49 = Utf8               ()Ljava/lang/String;\n+  #50 = String             #51            // %,d files, %,d directories, %,d bytes\n+  #51 = Utf8               %,d files, %,d directories, %,d bytes\n+  #52 = InterfaceMethodref #53.#55        // org/apache/commons/io/file/Counters$Counter.get:()J\n+  #53 = Class              #54            // org/apache/commons/io/file/Counters$Counter\n+  #54 = Utf8               org/apache/commons/io/file/Counters$Counter\n+  #55 = NameAndType        #56:#57        // get:()J\n+  #56 = Utf8               get\n+  #57 = Utf8               ()J\n+  #58 = Methodref          #59.#61        // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #59 = Class              #60            // java/lang/Long\n+  #60 = Utf8               java/lang/Long\n+  #61 = NameAndType        #62:#63        // valueOf:(J)Ljava/lang/Long;\n+  #62 = Utf8               valueOf\n+  #63 = Utf8               (J)Ljava/lang/Long;\n+  #64 = Methodref          #65.#67        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #65 = Class              #66            // java/lang/String\n+  #66 = Utf8               java/lang/String\n+  #67 = NameAndType        #68:#69        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #68 = Utf8               format\n+  #69 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               Counters.java\n+  #72 = Utf8               InnerClasses\n+  #73 = Class              #74            // org/apache/commons/io/file/Counters\n+  #74 = Utf8               org/apache/commons/io/file/Counters\n+  #75 = Utf8               AbstractPathCounters\n+  #76 = Utf8               Counter\n+  #77 = Utf8               PathCounters\n {\n   private final org.apache.commons.io.file.Counters$Counter byteCounter;\n     descriptor: Lorg/apache/commons/io/file/Counters$Counter;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.apache.commons.io.file.Counters$Counter directoryCounter;\n     descriptor: Lorg/apache/commons/io/file/Counters$Counter;\n@@ -101,24 +100,24 @@\n \n   protected org.apache.commons.io.file.Counters$AbstractPathCounters(org.apache.commons.io.file.Counters$Counter, org.apache.commons.io.file.Counters$Counter, org.apache.commons.io.file.Counters$Counter);\n     descriptor: (Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;Lorg/apache/commons/io/file/Counters$Counter;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+         6: putfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        11: putfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         14: aload_0\n         15: aload_3\n-        16: putfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        16: putfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         19: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 4\n         line 50: 9\n         line 51: 14\n         line 52: 19\n@@ -136,176 +135,174 @@\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n-         8: instanceof    #5                  // class org/apache/commons/io/file/Counters$AbstractPathCounters\n+         8: instanceof    #1                  // class org/apache/commons/io/file/Counters$AbstractPathCounters\n         11: ifne          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n-        17: checkcast     #5                  // class org/apache/commons/io/file/Counters$AbstractPathCounters\n+        17: checkcast     #1                  // class org/apache/commons/io/file/Counters$AbstractPathCounters\n         20: astore_2\n         21: aload_0\n-        22: getfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        22: getfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         25: aload_2\n-        26: getfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        29: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-        32: ifeq          67\n+        26: getfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        29: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        32: ifeq          65\n         35: aload_0\n-        36: getfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        36: getfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         39: aload_2\n-        40: getfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        43: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-        46: ifeq          67\n+        40: getfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        43: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        46: ifeq          65\n         49: aload_0\n-        50: getfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        50: getfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         53: aload_2\n-        54: getfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        57: invokestatic  #6                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-        60: ifeq          67\n+        54: getfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        57: invokestatic  #29                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        60: ifeq          65\n         63: iconst_1\n-        64: goto          68\n-        67: iconst_0\n-        68: ireturn\n+        64: ireturn\n+        65: iconst_0\n+        66: ireturn\n       LineNumberTable:\n         line 56: 0\n         line 57: 5\n         line 59: 7\n         line 60: 14\n         line 62: 16\n         line 63: 21\n-        line 64: 43\n-        line 65: 57\n-        line 63: 68\n+        line 64: 35\n+        line 65: 49\n+        line 63: 63\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      69     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n-            0      69     1   obj   Ljava/lang/Object;\n-           21      48     2 other   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n-      StackMapTable: number_of_entries = 4\n+            0      67     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n+            0      67     1   obj   Ljava/lang/Object;\n+           21      46     2 other   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n+      StackMapTable: number_of_entries = 3\n         frame_type = 7 /* same */\n         frame_type = 8 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 50\n+          offset_delta = 48\n           locals = [ class org/apache/commons/io/file/Counters$AbstractPathCounters ]\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n \n   public org.apache.commons.io.file.Counters$Counter getByteCounter();\n     descriptor: ()Lorg/apache/commons/io/file/Counters$Counter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+         1: getfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n          4: areturn\n       LineNumberTable:\n         line 70: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n \n   public org.apache.commons.io.file.Counters$Counter getDirectoryCounter();\n     descriptor: ()Lorg/apache/commons/io/file/Counters$Counter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+         1: getfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n          4: areturn\n       LineNumberTable:\n         line 75: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n \n   public org.apache.commons.io.file.Counters$Counter getFileCounter();\n     descriptor: ()Lorg/apache/commons/io/file/Counters$Counter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+         1: getfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n          4: areturn\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_3\n-         1: anewarray     #7                  // class java/lang/Object\n+         1: anewarray     #3                  // class java/lang/Object\n          4: dup\n          5: iconst_0\n          6: aload_0\n-         7: getfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+         7: getfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         10: aastore\n         11: dup\n         12: iconst_1\n         13: aload_0\n-        14: getfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        14: getfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         17: aastore\n         18: dup\n         19: iconst_2\n         20: aload_0\n-        21: getfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        21: getfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n         24: aastore\n-        25: invokestatic  #8                  // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        25: invokestatic  #44                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         28: ireturn\n       LineNumberTable:\n         line 90: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: ldc           #9                  // String %,d files, %,d directories, %,d bytes\n+         0: ldc           #50                 // String %,d files, %,d directories, %,d bytes\n          2: iconst_3\n-         3: anewarray     #7                  // class java/lang/Object\n+         3: anewarray     #3                  // class java/lang/Object\n          6: dup\n          7: iconst_0\n          8: aload_0\n-         9: getfield      #4                  // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        12: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n-        17: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         9: getfield      #21                 // Field fileCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        12: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n+        17: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         20: aastore\n         21: dup\n         22: iconst_1\n         23: aload_0\n-        24: getfield      #3                  // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        27: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n-        32: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        24: getfield      #19                 // Field directoryCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        27: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n+        32: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         35: aastore\n         36: dup\n         37: iconst_2\n         38: aload_0\n-        39: getfield      #2                  // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n-        42: invokeinterface #10,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n-        47: invokestatic  #11                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        39: getfield      #17                 // Field byteCounter:Lorg/apache/commons/io/file/Counters$Counter;\n+        42: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.get:()J\n+        47: invokestatic  #58                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n         50: aastore\n-        51: invokestatic  #12                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        51: invokestatic  #64                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         54: areturn\n       LineNumberTable:\n         line 95: 0\n-        line 96: 27\n+        line 96: 23\n         line 95: 51\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      55     0  this   Lorg/apache/commons/io/file/Counters$AbstractPathCounters;\n }\n SourceFile: \"Counters.java\"\n InnerClasses:\n-  public static #16= #15 of #50;          // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n-  private static #27= #5 of #50;          // AbstractPathCounters=class org/apache/commons/io/file/Counters$AbstractPathCounters of class org/apache/commons/io/file/Counters\n-  public static #63= #13 of #50;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  private static #75= #1 of #73;          // AbstractPathCounters=class org/apache/commons/io/file/Counters$AbstractPathCounters of class org/apache/commons/io/file/Counters\n+  public static #76= #53 of #73;          // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  public static #77= #5 of #73;           // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
