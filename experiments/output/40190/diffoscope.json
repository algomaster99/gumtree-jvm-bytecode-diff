{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Union.class", "source2": "second/NewAttributeBands$Union.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,23 +12,23 @@\n     private final NewAttributeBands.Integral unionTag;\n     private final List unionCases;\n     private final List defaultCaseBody;\n     private int[] caseCounts;\n     private int defaultCount;\n     \n     public Union(final NewAttributeBands this$0, final String tag, final List unionCases, final List body) {\n-        super(this.this$0 = this$0, (NewAttributeBands.NewAttributeBands$1)null);\n+        super(this.this$0 = this$0, (NewAttributeBands.LayoutElement)null);\n         this.unionTag = new NewAttributeBands.Integral(this$0, tag);\n         this.unionCases = unionCases;\n         this.defaultCaseBody = body;\n     }\n     \n     public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n         this.unionTag.readBands(in, count);\n-        final int[] values = NewAttributeBands.Integral.access$600(this.unionTag);\n+        final int[] values = NewAttributeBands.Integral.access$0(this.unionTag);\n         this.caseCounts = new int[this.unionCases.size()];\n         for (int i = 0; i < this.caseCounts.length; ++i) {\n             final NewAttributeBands.UnionCase unionCase = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n             for (int j = 0; j < values.length; ++j) {\n                 if (unionCase.hasTag((long)values[j])) {\n                     final int[] caseCounts = this.caseCounts;\n                     final int n = i;\n@@ -56,15 +56,15 @@\n             }\n         }\n     }\n     \n     public void addToAttribute(final int n, final NewAttribute attribute) {\n         this.unionTag.addToAttribute(n, attribute);\n         int offset = 0;\n-        final int[] tagBand = NewAttributeBands.Integral.access$600(this.unionTag);\n+        final int[] tagBand = NewAttributeBands.Integral.access$0(this.unionTag);\n         final long tag = this.unionTag.getValue(n);\n         boolean defaultCase = true;\n         for (int i = 0; i < this.unionCases.size(); ++i) {\n             final NewAttributeBands.UnionCase element = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n             if (element.hasTag(tag)) {\n                 defaultCase = false;\n                 for (int j = 0; j < n; ++j) {\n"}]}
