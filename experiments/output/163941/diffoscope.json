{"diffoscope-json-version": 1, "source1": "first/SevenZFile.class", "source2": "second/SevenZFile.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -384,15 +384,15 @@\n                 if (archive.packCrcsDefined.get(i)) {\n                     archive.packCrcs[i] = (0xFFFFFFFFL & (long)header.getInt());\n                 }\n             }\n             nid = getUnsignedByte(header);\n         }\n         if (nid != 0) {\n-            throw new IOException(\"Badly terminated PackInfo (\" + nid + \")\");\n+            throw new IOException(\"Badly terminated PackInfo (\" + nid);\n         }\n     }\n     \n     private void readUnpackInfo(final ByteBuffer header, final Archive archive) throws IOException {\n         int nid = getUnsignedByte(header);\n         if (nid != 11) {\n             throw new IOException(\"Expected kFolder, got \" + nid);\n@@ -1002,15 +1002,15 @@\n             return 0L;\n         }\n         final int current = input.position();\n         final int maxSkip = input.remaining();\n         if (maxSkip < bytesToSkip) {\n             bytesToSkip = maxSkip;\n         }\n-        input.position();\n+        input.position(current + (int)bytesToSkip);\n         return bytesToSkip;\n     }\n     \n     private void readFully(final ByteBuffer buf) throws IOException {\n         buf.rewind();\n         IOUtils.readFully((ReadableByteChannel)this.channel, buf);\n         buf.flip();\n@@ -1026,15 +1026,15 @@\n             return null;\n         }\n         final String lastSegment = new File(this.fileName).getName();\n         final int dotPos = lastSegment.lastIndexOf(\".\");\n         if (dotPos > 0) {\n             return lastSegment.substring(0, dotPos);\n         }\n-        return lastSegment + \"~\";\n+        return lastSegment;\n     }\n     \n     private static byte[] utf16Decode(final char[] chars) throws IOException {\n         if (chars == null) {\n             return null;\n         }\n         final ByteBuffer encoded = SevenZFile.PASSWORD_ENCODER.encode(CharBuffer.wrap(chars));\n"}]}
