{"diffoscope-json-version": 1, "source1": "first/XZUtils.class", "source2": "second/XZUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,30 @@\n \n public class XZUtils\n {\n     private static final FileNameUtil fileNameUtil;\n     private static final byte[] HEADER_MAGIC;\n     private static volatile XZUtils.CachedAvailability cachedXZAvailability;\n     \n+    static {\n+        HEADER_MAGIC = new byte[] { -3, 55, 122, 88, 90, 0 };\n+        final Map<String, String> uncompressSuffix = new HashMap<String, String>();\n+        uncompressSuffix.put(\".txz\", \".tar\");\n+        uncompressSuffix.put(\".xz\", \"\");\n+        uncompressSuffix.put(\"-xz\", \"\");\n+        fileNameUtil = new FileNameUtil((Map)uncompressSuffix, \".xz\");\n+        XZUtils.cachedXZAvailability = XZUtils.CachedAvailability.DONT_CACHE;\n+        try {\n+            Class.forName(\"org.osgi.framework.BundleEvent\");\n+        }\n+        catch (final Exception ex) {\n+            setCacheXZAvailablity(true);\n+        }\n+    }\n+    \n     private XZUtils() {\n     }\n     \n     public static boolean matches(final byte[] signature, final int length) {\n         if (length < XZUtils.HEADER_MAGIC.length) {\n             return false;\n         }\n@@ -65,24 +81,8 @@\n             XZUtils.cachedXZAvailability = (hasXz ? XZUtils.CachedAvailability.CACHED_AVAILABLE : XZUtils.CachedAvailability.CACHED_UNAVAILABLE);\n         }\n     }\n     \n     static XZUtils.CachedAvailability getCachedXZAvailability() {\n         return XZUtils.cachedXZAvailability;\n     }\n-    \n-    static {\n-        HEADER_MAGIC = new byte[] { -3, 55, 122, 88, 90, 0 };\n-        final Map<String, String> uncompressSuffix = new HashMap<String, String>();\n-        uncompressSuffix.put(\".txz\", \".tar\");\n-        uncompressSuffix.put(\".xz\", \"\");\n-        uncompressSuffix.put(\"-xz\", \"\");\n-        fileNameUtil = new FileNameUtil((Map)uncompressSuffix, \".xz\");\n-        XZUtils.cachedXZAvailability = XZUtils.CachedAvailability.DONT_CACHE;\n-        try {\n-            Class.forName(\"org.osgi.framework.BundleEvent\");\n-        }\n-        catch (final Exception ex) {\n-            setCacheXZAvailablity(true);\n-        }\n-    }\n }\n"}]}
