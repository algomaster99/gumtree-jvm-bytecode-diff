{"diffoscope-json-version": 1, "source1": "first/NullReader.class", "source2": "second/NullReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,137 +1,135 @@\n-  SHA-256 checksum 4b600e414568c2c4b9cc557e9b25310c911e4b0abeceb9bbba7446b67392d8c9\n+  SHA-256 checksum 704d2c7991300f4f63a7d438f1b9bb694d089b619fd335ed0a87699a546971d0\n   Compiled from \"NullReader.java\"\n public class org.apache.commons.io.input.NullReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #34                         // org/apache/commons/io/input/NullReader\n-  super_class: #35                        // java/io/Reader\n+  this_class: #1                          // org/apache/commons/io/input/NullReader\n+  super_class: #3                         // java/io/Reader\n   interfaces: 0, fields: 7, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Class              #82           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #34.#83       // org/apache/commons/io/input/NullReader.\"<init>\":(JZZ)V\n-    #3 = Methodref          #35.#84       // java/io/Reader.\"<init>\":()V\n-    #4 = Long               -1l\n-    #6 = Fieldref           #34.#85       // org/apache/commons/io/input/NullReader.mark:J\n-    #7 = Fieldref           #34.#86       // org/apache/commons/io/input/NullReader.size:J\n-    #8 = Fieldref           #34.#87       // org/apache/commons/io/input/NullReader.markSupported:Z\n-    #9 = Fieldref           #34.#88       // org/apache/commons/io/input/NullReader.throwEofException:Z\n-   #10 = Fieldref           #34.#89       // org/apache/commons/io/input/NullReader.position:J\n-   #11 = Fieldref           #34.#90       // org/apache/commons/io/input/NullReader.eof:Z\n-   #12 = Methodref          #91.#92       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-   #13 = Fieldref           #34.#93       // org/apache/commons/io/input/NullReader.readlimit:J\n-   #14 = Class              #94           // java/io/IOException\n-   #15 = String             #95           // Read after end of file\n-   #16 = Methodref          #14.#96       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #34.#97       // org/apache/commons/io/input/NullReader.doEndOfFile:()I\n-   #18 = Methodref          #34.#98       // org/apache/commons/io/input/NullReader.processChar:()I\n-   #19 = Methodref          #34.#99       // org/apache/commons/io/input/NullReader.read:([CII)I\n-   #20 = Methodref          #34.#100      // org/apache/commons/io/input/NullReader.processChars:([CII)V\n-   #21 = Methodref          #91.#101      // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n-   #22 = String             #102          // No position has been marked\n-   #23 = Class              #103          // java/lang/StringBuilder\n-   #24 = Methodref          #23.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #25 = String             #104          // Marked position [\n-   #26 = Methodref          #23.#105      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #23.#106      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #28 = String             #107          // ] is no longer valid - passed the read limit [\n-   #29 = String             #108          // ]\n-   #30 = Methodref          #23.#109      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = String             #110          // Skip after end of file\n-   #32 = Class              #111          // java/io/EOFException\n-   #33 = Methodref          #32.#84       // java/io/EOFException.\"<init>\":()V\n-   #34 = Class              #112          // org/apache/commons/io/input/NullReader\n-   #35 = Class              #113          // java/io/Reader\n-   #36 = Utf8               size\n-   #37 = Utf8               J\n-   #38 = Utf8               position\n-   #39 = Utf8               mark\n-   #40 = Utf8               readlimit\n-   #41 = Utf8               eof\n-   #42 = Utf8               Z\n-   #43 = Utf8               throwEofException\n-   #44 = Utf8               markSupported\n-   #45 = Utf8               <init>\n-   #46 = Utf8               ()V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lorg/apache/commons/io/input/NullReader;\n-   #52 = Utf8               (J)V\n-   #53 = Utf8               (JZZ)V\n-   #54 = Utf8               getPosition\n-   #55 = Utf8               ()J\n-   #56 = Utf8               getSize\n-   #57 = Utf8               close\n-   #58 = Utf8               Exceptions\n-   #59 = Utf8               (I)V\n-   #60 = Utf8               I\n-   #61 = Utf8               StackMapTable\n-   #62 = Utf8               ()Z\n-   #63 = Utf8               read\n-   #64 = Utf8               ()I\n-   #65 = Utf8               ([C)I\n-   #66 = Utf8               chars\n-   #67 = Utf8               [C\n-   #68 = Utf8               ([CII)I\n-   #69 = Utf8               offset\n-   #70 = Utf8               length\n-   #71 = Utf8               returnLength\n-   #72 = Utf8               reset\n-   #73 = Utf8               skip\n-   #74 = Utf8               (J)J\n-   #75 = Utf8               numberOfChars\n-   #76 = Utf8               processChar\n-   #77 = Utf8               processChars\n-   #78 = Utf8               ([CII)V\n-   #79 = Utf8               doEndOfFile\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               NullReader.java\n-   #82 = Utf8               org/apache/commons/io/IOUtils\n-   #83 = NameAndType        #45:#53       // \"<init>\":(JZZ)V\n-   #84 = NameAndType        #45:#46       // \"<init>\":()V\n-   #85 = NameAndType        #39:#37       // mark:J\n-   #86 = NameAndType        #36:#37       // size:J\n-   #87 = NameAndType        #44:#42       // markSupported:Z\n-   #88 = NameAndType        #43:#42       // throwEofException:Z\n-   #89 = NameAndType        #38:#37       // position:J\n-   #90 = NameAndType        #41:#42       // eof:Z\n-   #91 = Class              #114          // org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #92 = NameAndType        #39:#115      // mark:()Ljava/lang/UnsupportedOperationException;\n-   #93 = NameAndType        #40:#37       // readlimit:J\n-   #94 = Utf8               java/io/IOException\n-   #95 = Utf8               Read after end of file\n-   #96 = NameAndType        #45:#116      // \"<init>\":(Ljava/lang/String;)V\n-   #97 = NameAndType        #79:#64       // doEndOfFile:()I\n-   #98 = NameAndType        #76:#64       // processChar:()I\n-   #99 = NameAndType        #63:#68       // read:([CII)I\n-  #100 = NameAndType        #77:#78       // processChars:([CII)V\n-  #101 = NameAndType        #72:#115      // reset:()Ljava/lang/UnsupportedOperationException;\n-  #102 = Utf8               No position has been marked\n-  #103 = Utf8               java/lang/StringBuilder\n-  #104 = Utf8               Marked position [\n-  #105 = NameAndType        #117:#118     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #106 = NameAndType        #117:#119     // append:(J)Ljava/lang/StringBuilder;\n-  #107 = Utf8               ] is no longer valid - passed the read limit [\n-  #108 = Utf8               ]\n-  #109 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n-  #110 = Utf8               Skip after end of file\n-  #111 = Utf8               java/io/EOFException\n-  #112 = Utf8               org/apache/commons/io/input/NullReader\n-  #113 = Utf8               java/io/Reader\n-  #114 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #115 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #116 = Utf8               (Ljava/lang/String;)V\n-  #117 = Utf8               append\n-  #118 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #119 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #120 = Utf8               toString\n-  #121 = Utf8               ()Ljava/lang/String;\n+    #1 = Class              #2            // org/apache/commons/io/input/NullReader\n+    #2 = Utf8               org/apache/commons/io/input/NullReader\n+    #3 = Class              #4            // java/io/Reader\n+    #4 = Utf8               java/io/Reader\n+    #5 = Utf8               size\n+    #6 = Utf8               J\n+    #7 = Utf8               position\n+    #8 = Utf8               mark\n+    #9 = Utf8               readlimit\n+   #10 = Utf8               eof\n+   #11 = Utf8               Z\n+   #12 = Utf8               throwEofException\n+   #13 = Utf8               markSupported\n+   #14 = Utf8               <init>\n+   #15 = Utf8               ()V\n+   #16 = Utf8               Code\n+   #17 = Methodref          #1.#18        // org/apache/commons/io/input/NullReader.\"<init>\":(JZZ)V\n+   #18 = NameAndType        #14:#19       // \"<init>\":(JZZ)V\n+   #19 = Utf8               (JZZ)V\n+   #20 = Utf8               LineNumberTable\n+   #21 = Utf8               LocalVariableTable\n+   #22 = Utf8               this\n+   #23 = Utf8               Lorg/apache/commons/io/input/NullReader;\n+   #24 = Utf8               (J)V\n+   #25 = Methodref          #3.#26        // java/io/Reader.\"<init>\":()V\n+   #26 = NameAndType        #14:#15       // \"<init>\":()V\n+   #27 = Long               -1l\n+   #29 = Fieldref           #1.#30        // org/apache/commons/io/input/NullReader.mark:J\n+   #30 = NameAndType        #8:#6         // mark:J\n+   #31 = Fieldref           #1.#32        // org/apache/commons/io/input/NullReader.size:J\n+   #32 = NameAndType        #5:#6         // size:J\n+   #33 = Fieldref           #1.#34        // org/apache/commons/io/input/NullReader.markSupported:Z\n+   #34 = NameAndType        #13:#11       // markSupported:Z\n+   #35 = Fieldref           #1.#36        // org/apache/commons/io/input/NullReader.throwEofException:Z\n+   #36 = NameAndType        #12:#11       // throwEofException:Z\n+   #37 = Utf8               getPosition\n+   #38 = Utf8               ()J\n+   #39 = Fieldref           #1.#40        // org/apache/commons/io/input/NullReader.position:J\n+   #40 = NameAndType        #7:#6         // position:J\n+   #41 = Utf8               getSize\n+   #42 = Utf8               close\n+   #43 = Utf8               Exceptions\n+   #44 = Class              #45           // java/io/IOException\n+   #45 = Utf8               java/io/IOException\n+   #46 = Fieldref           #1.#47        // org/apache/commons/io/input/NullReader.eof:Z\n+   #47 = NameAndType        #10:#11       // eof:Z\n+   #48 = Utf8               (I)V\n+   #49 = Methodref          #50.#52       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+   #50 = Class              #51           // org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #51 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #52 = NameAndType        #8:#53        // mark:()Ljava/lang/UnsupportedOperationException;\n+   #53 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+   #54 = Fieldref           #1.#55        // org/apache/commons/io/input/NullReader.readlimit:J\n+   #55 = NameAndType        #9:#6         // readlimit:J\n+   #56 = Utf8               I\n+   #57 = Utf8               StackMapTable\n+   #58 = Utf8               ()Z\n+   #59 = Utf8               read\n+   #60 = Utf8               ()I\n+   #61 = String             #62           // Read after end of file\n+   #62 = Utf8               Read after end of file\n+   #63 = Methodref          #44.#64       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = NameAndType        #14:#65       // \"<init>\":(Ljava/lang/String;)V\n+   #65 = Utf8               (Ljava/lang/String;)V\n+   #66 = Methodref          #1.#67        // org/apache/commons/io/input/NullReader.doEndOfFile:()I\n+   #67 = NameAndType        #68:#60       // doEndOfFile:()I\n+   #68 = Utf8               doEndOfFile\n+   #69 = Methodref          #1.#70        // org/apache/commons/io/input/NullReader.processChar:()I\n+   #70 = NameAndType        #71:#60       // processChar:()I\n+   #71 = Utf8               processChar\n+   #72 = Utf8               ([C)I\n+   #73 = Methodref          #1.#74        // org/apache/commons/io/input/NullReader.read:([CII)I\n+   #74 = NameAndType        #59:#75       // read:([CII)I\n+   #75 = Utf8               ([CII)I\n+   #76 = Utf8               chars\n+   #77 = Utf8               [C\n+   #78 = Methodref          #1.#79        // org/apache/commons/io/input/NullReader.processChars:([CII)V\n+   #79 = NameAndType        #80:#81       // processChars:([CII)V\n+   #80 = Utf8               processChars\n+   #81 = Utf8               ([CII)V\n+   #82 = Utf8               offset\n+   #83 = Utf8               length\n+   #84 = Utf8               returnLength\n+   #85 = Utf8               reset\n+   #86 = Methodref          #50.#87       // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+   #87 = NameAndType        #85:#53       // reset:()Ljava/lang/UnsupportedOperationException;\n+   #88 = String             #89           // No position has been marked\n+   #89 = Utf8               No position has been marked\n+   #90 = Class              #91           // java/lang/StringBuilder\n+   #91 = Utf8               java/lang/StringBuilder\n+   #92 = String             #93           // Marked position [\n+   #93 = Utf8               Marked position [\n+   #94 = Methodref          #90.#64       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #95 = Methodref          #90.#96       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #97:#98       // append:(J)Ljava/lang/StringBuilder;\n+   #97 = Utf8               append\n+   #98 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #99 = String             #100          // ] is no longer valid - passed the read limit [\n+  #100 = Utf8               ] is no longer valid - passed the read limit [\n+  #101 = Methodref          #90.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #102 = NameAndType        #97:#103      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #103 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #104 = String             #105          // ]\n+  #105 = Utf8               ]\n+  #106 = Methodref          #90.#107      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #107 = NameAndType        #108:#109     // toString:()Ljava/lang/String;\n+  #108 = Utf8               toString\n+  #109 = Utf8               ()Ljava/lang/String;\n+  #110 = Utf8               skip\n+  #111 = Utf8               (J)J\n+  #112 = String             #113          // Skip after end of file\n+  #113 = Utf8               Skip after end of file\n+  #114 = Utf8               numberOfChars\n+  #115 = Class              #116          // java/io/EOFException\n+  #116 = Utf8               java/io/EOFException\n+  #117 = Methodref          #115.#26      // java/io/EOFException.\"<init>\":()V\n+  #118 = Utf8               SourceFile\n+  #119 = Utf8               NullReader.java\n {\n   private final long size;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long position;\n     descriptor: J\n@@ -162,15 +160,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #17                 // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullReader;\n@@ -180,15 +178,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #17                 // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullReader;\n@@ -196,27 +194,27 @@\n \n   public org.apache.commons.io.input.NullReader(long, boolean, boolean);\n     descriptor: (JZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #25                 // Method java/io/Reader.\"<init>\":()V\n          4: aload_0\n-         5: ldc2_w        #4                  // long -1l\n-         8: putfield      #6                  // Field mark:J\n+         5: ldc2_w        #27                 // long -1l\n+         8: putfield      #29                 // Field mark:J\n         11: aload_0\n         12: lload_1\n-        13: putfield      #7                  // Field size:J\n+        13: putfield      #31                 // Field size:J\n         16: aload_0\n         17: iload_3\n-        18: putfield      #8                  // Field markSupported:Z\n+        18: putfield      #33                 // Field markSupported:Z\n         21: aload_0\n         22: iload         4\n-        24: putfield      #9                  // Field throwEofException:Z\n+        24: putfield      #35                 // Field throwEofException:Z\n         27: return\n       LineNumberTable:\n         line 108: 0\n         line 71: 4\n         line 109: 11\n         line 110: 16\n         line 111: 21\n@@ -230,80 +228,80 @@\n \n   public long getPosition();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field position:J\n+         1: getfield      #39                 // Field position:J\n          4: lreturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #31                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 129: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #11                 // Field eof:Z\n+         2: putfield      #46                 // Field eof:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #10                 // Field position:J\n+         7: putfield      #39                 // Field position:J\n         10: aload_0\n-        11: ldc2_w        #4                  // long -1l\n-        14: putfield      #6                  // Field mark:J\n+        11: ldc2_w        #27                 // long -1l\n+        14: putfield      #29                 // Field mark:J\n         17: return\n       LineNumberTable:\n         line 140: 0\n         line 141: 5\n         line 142: 10\n         line 143: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/input/NullReader;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #33                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #12                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #49                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n         12: aload_0\n-        13: getfield      #10                 // Field position:J\n-        16: putfield      #6                  // Field mark:J\n+        13: getfield      #39                 // Field position:J\n+        16: putfield      #29                 // Field mark:J\n         19: aload_0\n         20: iload_1\n         21: i2l\n-        22: putfield      #13                 // Field readlimit:J\n+        22: putfield      #54                 // Field readlimit:J\n         25: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 7\n         line 157: 11\n         line 158: 19\n         line 159: 25\n@@ -316,145 +314,147 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #33                 // Field markSupported:Z\n          4: ireturn\n       LineNumberTable:\n         line 168: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field eof:Z\n+         1: getfield      #46                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #14                 // class java/io/IOException\n+         7: new           #44                 // class java/io/IOException\n         10: dup\n-        11: ldc           #15                 // String Read after end of file\n-        13: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #61                 // String Read after end of file\n+        13: invokespecial #63                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #39                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #31                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #17                 // Method doEndOfFile:()I\n+        30: invokespecial #66                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #39                 // Field position:J\n         39: lconst_1\n         40: ladd\n-        41: putfield      #10                 // Field position:J\n+        41: putfield      #39                 // Field position:J\n         44: aload_0\n-        45: invokevirtual #18                 // Method processChar:()I\n+        45: invokevirtual #69                 // Method processChar:()I\n         48: ireturn\n       LineNumberTable:\n         line 183: 0\n         line 184: 7\n         line 186: 17\n         line 187: 29\n         line 189: 34\n         line 190: 44\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      49     0  this   Lorg/apache/commons/io/input/NullReader;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 16 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #19                 // Method read:([CII)I\n+         5: invokevirtual #73                 // Method read:([CII)I\n          8: ireturn\n       LineNumberTable:\n         line 206: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/NullReader;\n             0       9     1 chars   [C\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #11                 // Field eof:Z\n+         1: getfield      #46                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #14                 // class java/io/IOException\n+         7: new           #44                 // class java/io/IOException\n         10: dup\n-        11: ldc           #15                 // String Read after end of file\n-        13: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #61                 // String Read after end of file\n+        13: invokespecial #63                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #39                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #31                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #17                 // Method doEndOfFile:()I\n+        30: invokespecial #66                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #10                 // Field position:J\n+        36: getfield      #39                 // Field position:J\n         39: iload_3\n         40: i2l\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #39                 // Field position:J\n         45: iload_3\n         46: istore        4\n         48: aload_0\n-        49: getfield      #10                 // Field position:J\n+        49: getfield      #39                 // Field position:J\n         52: aload_0\n-        53: getfield      #7                  // Field size:J\n+        53: getfield      #31                 // Field size:J\n         56: lcmp\n         57: ifle          82\n         60: iload_3\n         61: aload_0\n-        62: getfield      #10                 // Field position:J\n+        62: getfield      #39                 // Field position:J\n         65: aload_0\n-        66: getfield      #7                  // Field size:J\n+        66: getfield      #31                 // Field size:J\n         69: lsub\n         70: l2i\n         71: isub\n         72: istore        4\n         74: aload_0\n         75: aload_0\n-        76: getfield      #7                  // Field size:J\n-        79: putfield      #10                 // Field position:J\n+        76: getfield      #31                 // Field size:J\n+        79: putfield      #39                 // Field position:J\n         82: aload_0\n         83: aload_1\n         84: iload_2\n         85: iload         4\n-        87: invokevirtual #20                 // Method processChars:([CII)V\n+        87: invokevirtual #78                 // Method processChars:([CII)V\n         90: iload         4\n         92: ireturn\n       LineNumberTable:\n         line 224: 0\n         line 225: 7\n         line 227: 17\n         line 228: 29\n@@ -474,143 +474,145 @@\n            48      45     4 returnLength   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 17 /* same */\n         frame_type = 16 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 47\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #33                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #21                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #86                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n-        12: getfield      #6                  // Field mark:J\n+        12: getfield      #29                 // Field mark:J\n         15: lconst_0\n         16: lcmp\n         17: ifge          30\n-        20: new           #14                 // class java/io/IOException\n+        20: new           #44                 // class java/io/IOException\n         23: dup\n-        24: ldc           #22                 // String No position has been marked\n-        26: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #88                 // String No position has been marked\n+        26: invokespecial #63                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #10                 // Field position:J\n+        31: getfield      #39                 // Field position:J\n         34: aload_0\n-        35: getfield      #6                  // Field mark:J\n+        35: getfield      #29                 // Field mark:J\n         38: aload_0\n-        39: getfield      #13                 // Field readlimit:J\n+        39: getfield      #54                 // Field readlimit:J\n         42: ladd\n         43: lcmp\n-        44: ifle          94\n-        47: new           #14                 // class java/io/IOException\n+        44: ifle          91\n+        47: new           #44                 // class java/io/IOException\n         50: dup\n-        51: new           #23                 // class java/lang/StringBuilder\n+        51: new           #90                 // class java/lang/StringBuilder\n         54: dup\n-        55: invokespecial #24                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        58: ldc           #25                 // String Marked position [\n-        60: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        63: aload_0\n-        64: getfield      #6                  // Field mark:J\n-        67: invokevirtual #27                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        70: ldc           #28                 // String ] is no longer valid - passed the read limit [\n-        72: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        75: aload_0\n-        76: getfield      #13                 // Field readlimit:J\n-        79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        82: ldc           #29                 // String ]\n-        84: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        87: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        90: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        93: athrow\n-        94: aload_0\n-        95: aload_0\n-        96: getfield      #6                  // Field mark:J\n-        99: putfield      #10                 // Field position:J\n-       102: aload_0\n-       103: iconst_0\n-       104: putfield      #11                 // Field eof:Z\n-       107: return\n+        55: ldc           #92                 // String Marked position [\n+        57: invokespecial #94                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        60: aload_0\n+        61: getfield      #29                 // Field mark:J\n+        64: invokevirtual #95                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        67: ldc           #99                 // String ] is no longer valid - passed the read limit [\n+        69: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: aload_0\n+        73: getfield      #54                 // Field readlimit:J\n+        76: invokevirtual #95                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        79: ldc           #104                // String ]\n+        81: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: invokevirtual #106                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        87: invokespecial #63                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        90: athrow\n+        91: aload_0\n+        92: aload_0\n+        93: getfield      #29                 // Field mark:J\n+        96: putfield      #39                 // Field position:J\n+        99: aload_0\n+       100: iconst_0\n+       101: putfield      #46                 // Field eof:Z\n+       104: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 7\n         line 253: 11\n         line 254: 20\n         line 256: 30\n         line 257: 47\n-        line 261: 94\n-        line 262: 102\n-        line 263: 107\n+        line 258: 67\n+        line 259: 72\n+        line 257: 87\n+        line 261: 91\n+        line 262: 99\n+        line 263: 104\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     108     0  this   Lorg/apache/commons/io/input/NullReader;\n+            0     105     0  this   Lorg/apache/commons/io/input/NullReader;\n       StackMapTable: number_of_entries = 3\n         frame_type = 11 /* same */\n         frame_type = 18 /* same */\n-        frame_type = 63 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 60 /* same */\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #11                 // Field eof:Z\n+         1: getfield      #46                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #14                 // class java/io/IOException\n+         7: new           #44                 // class java/io/IOException\n         10: dup\n-        11: ldc           #31                 // String Skip after end of file\n-        13: invokespecial #16                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #112                // String Skip after end of file\n+        13: invokespecial #63                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #10                 // Field position:J\n+        18: getfield      #39                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #31                 // Field size:J\n         25: lcmp\n         26: ifne          35\n         29: aload_0\n-        30: invokespecial #17                 // Method doEndOfFile:()I\n+        30: invokespecial #66                 // Method doEndOfFile:()I\n         33: i2l\n         34: lreturn\n         35: aload_0\n         36: dup\n-        37: getfield      #10                 // Field position:J\n+        37: getfield      #39                 // Field position:J\n         40: lload_1\n         41: ladd\n-        42: putfield      #10                 // Field position:J\n+        42: putfield      #39                 // Field position:J\n         45: lload_1\n         46: lstore_3\n         47: aload_0\n-        48: getfield      #10                 // Field position:J\n+        48: getfield      #39                 // Field position:J\n         51: aload_0\n-        52: getfield      #7                  // Field size:J\n+        52: getfield      #31                 // Field size:J\n         55: lcmp\n         56: ifle          79\n         59: lload_1\n         60: aload_0\n-        61: getfield      #10                 // Field position:J\n+        61: getfield      #39                 // Field position:J\n         64: aload_0\n-        65: getfield      #7                  // Field size:J\n+        65: getfield      #31                 // Field size:J\n         68: lsub\n         69: lsub\n         70: lstore_3\n         71: aload_0\n         72: aload_0\n-        73: getfield      #7                  // Field size:J\n-        76: putfield      #10                 // Field position:J\n+        73: getfield      #31                 // Field size:J\n+        76: putfield      #39                 // Field position:J\n         79: lload_3\n         80: lreturn\n       LineNumberTable:\n         line 278: 0\n         line 279: 7\n         line 281: 17\n         line 282: 29\n@@ -627,16 +629,14 @@\n            47      34     3 returnLength   J\n       StackMapTable: number_of_entries = 3\n         frame_type = 17 /* same */\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 43\n           locals = [ long ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected int processChar();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iconst_0\n@@ -661,35 +661,35 @@\n             0       1     1 chars   [C\n             0       1     2 offset   I\n             0       1     3 length   I\n \n   private int doEndOfFile() throws java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.EOFException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #11                 // Field eof:Z\n+         2: putfield      #46                 // Field eof:Z\n          5: aload_0\n-         6: getfield      #9                  // Field throwEofException:Z\n+         6: getfield      #35                 // Field throwEofException:Z\n          9: ifeq          20\n-        12: new           #32                 // class java/io/EOFException\n+        12: new           #115                // class java/io/EOFException\n         15: dup\n-        16: invokespecial #33                 // Method java/io/EOFException.\"<init>\":()V\n+        16: invokespecial #117                // Method java/io/EOFException.\"<init>\":()V\n         19: athrow\n         20: iconst_m1\n         21: ireturn\n       LineNumberTable:\n         line 330: 0\n         line 331: 5\n         line 332: 12\n         line 334: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/io/input/NullReader;\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n-    Exceptions:\n-      throws java.io.EOFException\n }\n SourceFile: \"NullReader.java\"\n"}]}
