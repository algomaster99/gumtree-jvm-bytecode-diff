{"diffoscope-json-version": 1, "source1": "first/ReaderInputStream.class", "source2": "second/ReaderInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,304 +1,302 @@\n-  SHA-256 checksum bfa0afeb31994c781515bd3361572e4886cf6cd16f223e7426ecfc7bc1afe23c\n+  SHA-256 checksum 5bae888d04eb47748c2f6b62f37c397aba5112ece69a8aed0a7185c231404dab\n   Compiled from \"ReaderInputStream.java\"\n public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/input/ReaderInputStream\n-  super_class: #93                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/ReaderInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 6, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Class              #4            // org/apache/commons/io/input/ReaderInputStream$Builder\n-    #4 = Utf8               org/apache/commons/io/input/ReaderInputStream$Builder\n-    #5 = Methodref          #3.#6         // org/apache/commons/io/input/ReaderInputStream$Builder.\"<init>\":()V\n-    #6 = NameAndType        #7:#8         // \"<init>\":()V\n-    #7 = Utf8               <init>\n-    #8 = Utf8               ()V\n-    #9 = Methodref          #10.#11       // org/apache/commons/io/input/ReaderInputStream.minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n-   #10 = Class              #12           // org/apache/commons/io/input/ReaderInputStream\n-   #11 = NameAndType        #13:#14       // minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n-   #12 = Utf8               org/apache/commons/io/input/ReaderInputStream\n-   #13 = Utf8               minBufferSize\n-   #14 = Utf8               (Ljava/nio/charset/CharsetEncoder;)F\n-   #15 = Class              #16           // java/lang/IllegalArgumentException\n-   #16 = Utf8               java/lang/IllegalArgumentException\n-   #17 = String             #18           // Buffer size %,d must be at least %s for a CharsetEncoder %s.\n-   #18 = Utf8               Buffer size %,d must be at least %s for a CharsetEncoder %s.\n-   #19 = Class              #20           // java/lang/Object\n-   #20 = Utf8               java/lang/Object\n-   #21 = Methodref          #22.#23       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #22 = Class              #24           // java/lang/Integer\n-   #23 = NameAndType        #25:#26       // valueOf:(I)Ljava/lang/Integer;\n-   #24 = Utf8               java/lang/Integer\n-   #25 = Utf8               valueOf\n-   #26 = Utf8               (I)Ljava/lang/Integer;\n-   #27 = Methodref          #28.#29       // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-   #28 = Class              #30           // java/lang/Float\n-   #29 = NameAndType        #25:#31       // valueOf:(F)Ljava/lang/Float;\n-   #30 = Utf8               java/lang/Float\n-   #31 = Utf8               (F)Ljava/lang/Float;\n-   #32 = Methodref          #33.#34       // java/nio/charset/CharsetEncoder.charset:()Ljava/nio/charset/Charset;\n-   #33 = Class              #35           // java/nio/charset/CharsetEncoder\n-   #34 = NameAndType        #36:#37       // charset:()Ljava/nio/charset/Charset;\n-   #35 = Utf8               java/nio/charset/CharsetEncoder\n-   #36 = Utf8               charset\n-   #37 = Utf8               ()Ljava/nio/charset/Charset;\n-   #38 = Methodref          #39.#40       // java/nio/charset/Charset.displayName:()Ljava/lang/String;\n-   #39 = Class              #41           // java/nio/charset/Charset\n-   #40 = NameAndType        #42:#43       // displayName:()Ljava/lang/String;\n-   #41 = Utf8               java/nio/charset/Charset\n-   #42 = Utf8               displayName\n-   #43 = Utf8               ()Ljava/lang/String;\n-   #44 = Methodref          #45.#46       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #45 = Class              #47           // java/lang/String\n-   #46 = NameAndType        #48:#49       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #47 = Utf8               java/lang/String\n-   #48 = Utf8               format\n-   #49 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #50 = Methodref          #15.#51       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = NameAndType        #7:#52        // \"<init>\":(Ljava/lang/String;)V\n-   #52 = Utf8               (Ljava/lang/String;)V\n-   #53 = Methodref          #33.#54       // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n-   #54 = NameAndType        #55:#56       // maxBytesPerChar:()F\n-   #55 = Utf8               maxBytesPerChar\n-   #56 = Utf8               ()F\n-   #57 = Methodref          #39.#58       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #58 = NameAndType        #59:#37       // defaultCharset:()Ljava/nio/charset/Charset;\n-   #59 = Utf8               defaultCharset\n-   #60 = Methodref          #10.#61       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #61 = NameAndType        #7:#62        // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #62 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #63 = Methodref          #10.#64       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #64 = NameAndType        #7:#65        // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #65 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #66 = Methodref          #67.#68       // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #67 = Class              #69           // org/apache/commons/io/Charsets\n-   #68 = NameAndType        #70:#71       // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #69 = Utf8               org/apache/commons/io/Charsets\n-   #70 = Utf8               toCharset\n-   #71 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #72 = Methodref          #39.#73       // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #73 = NameAndType        #74:#75       // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #74 = Utf8               newEncoder\n-   #75 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-   #76 = Fieldref           #77.#78       // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-   #77 = Class              #79           // java/nio/charset/CodingErrorAction\n-   #78 = NameAndType        #80:#81       // REPLACE:Ljava/nio/charset/CodingErrorAction;\n-   #79 = Utf8               java/nio/charset/CodingErrorAction\n-   #80 = Utf8               REPLACE\n-   #81 = Utf8               Ljava/nio/charset/CodingErrorAction;\n-   #82 = Methodref          #33.#83       // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #83 = NameAndType        #84:#85       // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #84 = Utf8               onMalformedInput\n-   #85 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #86 = Methodref          #33.#87       // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #87 = NameAndType        #88:#85       // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #88 = Utf8               onUnmappableCharacter\n-   #89 = Methodref          #10.#90       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-   #90 = NameAndType        #7:#91        // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-   #91 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-   #92 = Methodref          #93.#6        // java/io/InputStream.\"<init>\":()V\n-   #93 = Class              #94           // java/io/InputStream\n-   #94 = Utf8               java/io/InputStream\n-   #95 = Fieldref           #10.#96       // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n-   #96 = NameAndType        #97:#98       // reader:Ljava/io/Reader;\n-   #97 = Utf8               reader\n-   #98 = Utf8               Ljava/io/Reader;\n-   #99 = Methodref          #100.#101     // org/apache/commons/io/charset/CharsetEncoders.toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n-  #100 = Class              #102          // org/apache/commons/io/charset/CharsetEncoders\n-  #101 = NameAndType        #103:#104     // toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n-  #102 = Utf8               org/apache/commons/io/charset/CharsetEncoders\n-  #103 = Utf8               toCharsetEncoder\n-  #104 = Utf8               (Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n-  #105 = Fieldref           #10.#106      // org/apache/commons/io/input/ReaderInputStream.charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n-  #106 = NameAndType        #107:#108     // charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n-  #107 = Utf8               charsetEncoder\n-  #108 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-  #109 = Methodref          #10.#110      // org/apache/commons/io/input/ReaderInputStream.checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n-  #110 = NameAndType        #111:#112     // checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n-  #111 = Utf8               checkMinBufferSize\n-  #112 = Utf8               (Ljava/nio/charset/CharsetEncoder;I)I\n-  #113 = Methodref          #114.#115     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-  #114 = Class              #116          // java/nio/CharBuffer\n-  #115 = NameAndType        #117:#118     // allocate:(I)Ljava/nio/CharBuffer;\n-  #116 = Utf8               java/nio/CharBuffer\n-  #117 = Utf8               allocate\n-  #118 = Utf8               (I)Ljava/nio/CharBuffer;\n-  #119 = Fieldref           #10.#120      // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n-  #120 = NameAndType        #121:#122     // encoderIn:Ljava/nio/CharBuffer;\n-  #121 = Utf8               encoderIn\n-  #122 = Utf8               Ljava/nio/CharBuffer;\n-  #123 = Methodref          #114.#124     // java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n-  #124 = NameAndType        #125:#126     // flip:()Ljava/nio/Buffer;\n-  #125 = Utf8               flip\n-  #126 = Utf8               ()Ljava/nio/Buffer;\n-  #127 = Methodref          #128.#129     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-  #128 = Class              #130          // java/nio/ByteBuffer\n-  #129 = NameAndType        #117:#131     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #130 = Utf8               java/nio/ByteBuffer\n-  #131 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #132 = Fieldref           #10.#133      // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n-  #133 = NameAndType        #134:#135     // encoderOut:Ljava/nio/ByteBuffer;\n-  #134 = Utf8               encoderOut\n-  #135 = Utf8               Ljava/nio/ByteBuffer;\n-  #136 = Methodref          #128.#124     // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-  #137 = Methodref          #10.#138      // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-  #138 = NameAndType        #7:#139       // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-  #139 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n-  #140 = Methodref          #67.#141      // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #141 = NameAndType        #70:#142      // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #142 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #143 = Methodref          #144.#145     // java/io/Reader.close:()V\n-  #144 = Class              #146          // java/io/Reader\n-  #145 = NameAndType        #147:#8       // close:()V\n-  #146 = Utf8               java/io/Reader\n-  #147 = Utf8               close\n-  #148 = Fieldref           #10.#149      // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n-  #149 = NameAndType        #150:#151     // endOfInput:Z\n-  #150 = Utf8               endOfInput\n-  #151 = Utf8               Z\n-  #152 = Fieldref           #10.#153      // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n-  #153 = NameAndType        #154:#155     // lastCoderResult:Ljava/nio/charset/CoderResult;\n-  #154 = Utf8               lastCoderResult\n-  #155 = Utf8               Ljava/nio/charset/CoderResult;\n-  #156 = Methodref          #157.#158     // java/nio/charset/CoderResult.isUnderflow:()Z\n-  #157 = Class              #159          // java/nio/charset/CoderResult\n-  #158 = NameAndType        #160:#161     // isUnderflow:()Z\n-  #159 = Utf8               java/nio/charset/CoderResult\n-  #160 = Utf8               isUnderflow\n-  #161 = Utf8               ()Z\n-  #162 = Methodref          #114.#163     // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n-  #163 = NameAndType        #164:#165     // compact:()Ljava/nio/CharBuffer;\n-  #164 = Utf8               compact\n-  #165 = Utf8               ()Ljava/nio/CharBuffer;\n-  #166 = Methodref          #114.#167     // java/nio/CharBuffer.position:()I\n-  #167 = NameAndType        #168:#169     // position:()I\n-  #168 = Utf8               position\n-  #169 = Utf8               ()I\n-  #170 = Methodref          #114.#171     // java/nio/CharBuffer.array:()[C\n-  #171 = NameAndType        #172:#173     // array:()[C\n-  #172 = Utf8               array\n-  #173 = Utf8               ()[C\n-  #174 = Methodref          #114.#175     // java/nio/CharBuffer.remaining:()I\n-  #175 = NameAndType        #176:#169     // remaining:()I\n-  #176 = Utf8               remaining\n-  #177 = Methodref          #144.#178     // java/io/Reader.read:([CII)I\n-  #178 = NameAndType        #179:#180     // read:([CII)I\n-  #179 = Utf8               read\n-  #180 = Utf8               ([CII)I\n-  #181 = Methodref          #114.#182     // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n-  #182 = NameAndType        #168:#183     // position:(I)Ljava/nio/Buffer;\n-  #183 = Utf8               (I)Ljava/nio/Buffer;\n-  #184 = Methodref          #128.#185     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n-  #185 = NameAndType        #164:#186     // compact:()Ljava/nio/ByteBuffer;\n-  #186 = Utf8               ()Ljava/nio/ByteBuffer;\n-  #187 = Methodref          #33.#188      // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #188 = NameAndType        #189:#190     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #189 = Utf8               encode\n-  #190 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #191 = Methodref          #33.#192      // java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n-  #192 = NameAndType        #193:#194     // flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n-  #193 = Utf8               flush\n-  #194 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n-  #195 = Methodref          #157.#196     // java/nio/charset/CoderResult.isError:()Z\n-  #196 = NameAndType        #197:#161     // isError:()Z\n-  #197 = Utf8               isError\n-  #198 = Methodref          #157.#199     // java/nio/charset/CoderResult.throwException:()V\n-  #199 = NameAndType        #200:#8       // throwException:()V\n-  #200 = Utf8               throwException\n-  #201 = Methodref          #128.#202     // java/nio/ByteBuffer.hasRemaining:()Z\n-  #202 = NameAndType        #203:#161     // hasRemaining:()Z\n-  #203 = Utf8               hasRemaining\n-  #204 = Methodref          #128.#205     // java/nio/ByteBuffer.get:()B\n-  #205 = NameAndType        #206:#207     // get:()B\n-  #206 = Utf8               get\n-  #207 = Utf8               ()B\n-  #208 = Methodref          #10.#209      // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n-  #209 = NameAndType        #210:#8       // fillBuffer:()V\n-  #210 = Utf8               fillBuffer\n-  #211 = Methodref          #10.#212      // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n-  #212 = NameAndType        #179:#213     // read:([BII)I\n-  #213 = Utf8               ([BII)I\n-  #214 = String             #172          // array\n-  #215 = Methodref          #216.#217     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #216 = Class              #218          // java/util/Objects\n-  #217 = NameAndType        #219:#220     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #218 = Utf8               java/util/Objects\n-  #219 = Utf8               requireNonNull\n-  #220 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #221 = Class              #222          // java/lang/IndexOutOfBoundsException\n-  #222 = Utf8               java/lang/IndexOutOfBoundsException\n-  #223 = Class              #224          // java/lang/StringBuilder\n-  #224 = Utf8               java/lang/StringBuilder\n-  #225 = Methodref          #223.#6       // java/lang/StringBuilder.\"<init>\":()V\n-  #226 = String             #227          // Array size=\n-  #227 = Utf8               Array size=\n-  #228 = Methodref          #223.#229     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #229 = NameAndType        #230:#231     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #230 = Utf8               append\n-  #231 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #232 = Methodref          #223.#233     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #233 = NameAndType        #230:#234     // append:(I)Ljava/lang/StringBuilder;\n-  #234 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #235 = String             #236          // , offset=\n-  #236 = Utf8               , offset=\n-  #237 = String             #238          // , length=\n-  #238 = Utf8               , length=\n-  #239 = Methodref          #223.#240     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #240 = NameAndType        #241:#43      // toString:()Ljava/lang/String;\n-  #241 = Utf8               toString\n-  #242 = Methodref          #221.#51      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-  #243 = Methodref          #128.#175     // java/nio/ByteBuffer.remaining:()I\n-  #244 = Methodref          #245.#246     // java/lang/Math.min:(II)I\n-  #245 = Class              #247          // java/lang/Math\n-  #246 = NameAndType        #248:#249     // min:(II)I\n-  #247 = Utf8               java/lang/Math\n-  #248 = Utf8               min\n-  #249 = Utf8               (II)I\n-  #250 = Methodref          #128.#251     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n-  #251 = NameAndType        #206:#252     // get:([BII)Ljava/nio/ByteBuffer;\n-  #252 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n-  #253 = Utf8               builder\n-  #254 = Utf8               ()Lorg/apache/commons/io/input/ReaderInputStream$Builder;\n-  #255 = Utf8               Code\n-  #256 = Utf8               LineNumberTable\n-  #257 = Utf8               LocalVariableTable\n-  #258 = Utf8               bufferSize\n-  #259 = Utf8               I\n-  #260 = Utf8               minRequired\n-  #261 = Utf8               F\n-  #262 = Utf8               StackMapTable\n-  #263 = Utf8               (Ljava/io/Reader;)V\n-  #264 = Utf8               this\n-  #265 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n-  #266 = Utf8               Deprecated\n-  #267 = Utf8               RuntimeVisibleAnnotations\n-  #268 = Utf8               Ljava/lang/Deprecated;\n-  #269 = Utf8               Ljava/nio/charset/Charset;\n-  #270 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n-  #271 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n-  #272 = Utf8               charsetName\n-  #273 = Utf8               Ljava/lang/String;\n-  #274 = Utf8               Exceptions\n-  #275 = Class              #276          // java/io/IOException\n-  #276 = Utf8               java/io/IOException\n-  #277 = Utf8               c\n-  #278 = Utf8               getCharsetEncoder\n-  #279 = Utf8               ([B)I\n-  #280 = Utf8               b\n-  #281 = Utf8               [B\n-  #282 = Utf8               off\n-  #283 = Utf8               len\n-  #284 = Utf8               SourceFile\n-  #285 = Utf8               ReaderInputStream.java\n-  #286 = Utf8               InnerClasses\n-  #287 = Utf8               Builder\n+    #1 = Class              #2            // org/apache/commons/io/input/ReaderInputStream\n+    #2 = Utf8               org/apache/commons/io/input/ReaderInputStream\n+    #3 = Class              #4            // java/io/InputStream\n+    #4 = Utf8               java/io/InputStream\n+    #5 = Utf8               reader\n+    #6 = Utf8               Ljava/io/Reader;\n+    #7 = Utf8               charsetEncoder\n+    #8 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+    #9 = Utf8               encoderIn\n+   #10 = Utf8               Ljava/nio/CharBuffer;\n+   #11 = Utf8               encoderOut\n+   #12 = Utf8               Ljava/nio/ByteBuffer;\n+   #13 = Utf8               lastCoderResult\n+   #14 = Utf8               Ljava/nio/charset/CoderResult;\n+   #15 = Utf8               endOfInput\n+   #16 = Utf8               Z\n+   #17 = Utf8               builder\n+   #18 = Utf8               ()Lorg/apache/commons/io/input/ReaderInputStream$Builder;\n+   #19 = Utf8               Code\n+   #20 = Class              #21           // org/apache/commons/io/input/ReaderInputStream$Builder\n+   #21 = Utf8               org/apache/commons/io/input/ReaderInputStream$Builder\n+   #22 = Methodref          #20.#23       // org/apache/commons/io/input/ReaderInputStream$Builder.\"<init>\":()V\n+   #23 = NameAndType        #24:#25       // \"<init>\":()V\n+   #24 = Utf8               <init>\n+   #25 = Utf8               ()V\n+   #26 = Utf8               LineNumberTable\n+   #27 = Utf8               LocalVariableTable\n+   #28 = Utf8               checkMinBufferSize\n+   #29 = Utf8               (Ljava/nio/charset/CharsetEncoder;I)I\n+   #30 = Methodref          #1.#31        // org/apache/commons/io/input/ReaderInputStream.minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n+   #31 = NameAndType        #32:#33       // minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n+   #32 = Utf8               minBufferSize\n+   #33 = Utf8               (Ljava/nio/charset/CharsetEncoder;)F\n+   #34 = Class              #35           // java/lang/IllegalArgumentException\n+   #35 = Utf8               java/lang/IllegalArgumentException\n+   #36 = String             #37           // Buffer size %,d must be at least %s for a CharsetEncoder %s.\n+   #37 = Utf8               Buffer size %,d must be at least %s for a CharsetEncoder %s.\n+   #38 = Class              #39           // java/lang/Object\n+   #39 = Utf8               java/lang/Object\n+   #40 = Methodref          #41.#43       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #41 = Class              #42           // java/lang/Integer\n+   #42 = Utf8               java/lang/Integer\n+   #43 = NameAndType        #44:#45       // valueOf:(I)Ljava/lang/Integer;\n+   #44 = Utf8               valueOf\n+   #45 = Utf8               (I)Ljava/lang/Integer;\n+   #46 = Methodref          #47.#49       // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+   #47 = Class              #48           // java/lang/Float\n+   #48 = Utf8               java/lang/Float\n+   #49 = NameAndType        #44:#50       // valueOf:(F)Ljava/lang/Float;\n+   #50 = Utf8               (F)Ljava/lang/Float;\n+   #51 = Methodref          #52.#54       // java/nio/charset/CharsetEncoder.charset:()Ljava/nio/charset/Charset;\n+   #52 = Class              #53           // java/nio/charset/CharsetEncoder\n+   #53 = Utf8               java/nio/charset/CharsetEncoder\n+   #54 = NameAndType        #55:#56       // charset:()Ljava/nio/charset/Charset;\n+   #55 = Utf8               charset\n+   #56 = Utf8               ()Ljava/nio/charset/Charset;\n+   #57 = Methodref          #58.#60       // java/nio/charset/Charset.displayName:()Ljava/lang/String;\n+   #58 = Class              #59           // java/nio/charset/Charset\n+   #59 = Utf8               java/nio/charset/Charset\n+   #60 = NameAndType        #61:#62       // displayName:()Ljava/lang/String;\n+   #61 = Utf8               displayName\n+   #62 = Utf8               ()Ljava/lang/String;\n+   #63 = Methodref          #64.#66       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #64 = Class              #65           // java/lang/String\n+   #65 = Utf8               java/lang/String\n+   #66 = NameAndType        #67:#68       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #67 = Utf8               format\n+   #68 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #69 = Methodref          #34.#70       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #70 = NameAndType        #24:#71       // \"<init>\":(Ljava/lang/String;)V\n+   #71 = Utf8               (Ljava/lang/String;)V\n+   #72 = Utf8               bufferSize\n+   #73 = Utf8               I\n+   #74 = Utf8               minRequired\n+   #75 = Utf8               F\n+   #76 = Utf8               StackMapTable\n+   #77 = Methodref          #52.#78       // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+   #78 = NameAndType        #79:#80       // maxBytesPerChar:()F\n+   #79 = Utf8               maxBytesPerChar\n+   #80 = Utf8               ()F\n+   #81 = Utf8               (Ljava/io/Reader;)V\n+   #82 = Utf8               Deprecated\n+   #83 = Utf8               RuntimeVisibleAnnotations\n+   #84 = Utf8               Ljava/lang/Deprecated;\n+   #85 = Methodref          #58.#86       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #86 = NameAndType        #87:#56       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #87 = Utf8               defaultCharset\n+   #88 = Methodref          #1.#89        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #89 = NameAndType        #24:#90       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #90 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #91 = Utf8               this\n+   #92 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n+   #93 = Methodref          #1.#94        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #94 = NameAndType        #24:#95       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #95 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #96 = Utf8               Ljava/nio/charset/Charset;\n+   #97 = Methodref          #98.#100      // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #98 = Class              #99           // org/apache/commons/io/Charsets\n+   #99 = Utf8               org/apache/commons/io/Charsets\n+  #100 = NameAndType        #101:#102     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #101 = Utf8               toCharset\n+  #102 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #103 = Methodref          #58.#104      // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+  #104 = NameAndType        #105:#106     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+  #105 = Utf8               newEncoder\n+  #106 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+  #107 = Fieldref           #108.#110     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+  #108 = Class              #109          // java/nio/charset/CodingErrorAction\n+  #109 = Utf8               java/nio/charset/CodingErrorAction\n+  #110 = NameAndType        #111:#112     // REPLACE:Ljava/nio/charset/CodingErrorAction;\n+  #111 = Utf8               REPLACE\n+  #112 = Utf8               Ljava/nio/charset/CodingErrorAction;\n+  #113 = Methodref          #52.#114      // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+  #114 = NameAndType        #115:#116     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+  #115 = Utf8               onMalformedInput\n+  #116 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+  #117 = Methodref          #52.#118      // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+  #118 = NameAndType        #119:#116     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+  #119 = Utf8               onUnmappableCharacter\n+  #120 = Methodref          #1.#121       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+  #121 = NameAndType        #24:#122      // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+  #122 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+  #123 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n+  #124 = Methodref          #3.#23        // java/io/InputStream.\"<init>\":()V\n+  #125 = Fieldref           #1.#126       // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n+  #126 = NameAndType        #5:#6         // reader:Ljava/io/Reader;\n+  #127 = Methodref          #128.#130     // org/apache/commons/io/charset/CharsetEncoders.toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n+  #128 = Class              #129          // org/apache/commons/io/charset/CharsetEncoders\n+  #129 = Utf8               org/apache/commons/io/charset/CharsetEncoders\n+  #130 = NameAndType        #131:#132     // toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n+  #131 = Utf8               toCharsetEncoder\n+  #132 = Utf8               (Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n+  #133 = Fieldref           #1.#134       // org/apache/commons/io/input/ReaderInputStream.charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+  #134 = NameAndType        #7:#8         // charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+  #135 = Methodref          #1.#136       // org/apache/commons/io/input/ReaderInputStream.checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n+  #136 = NameAndType        #28:#29       // checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n+  #137 = Methodref          #138.#140     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+  #138 = Class              #139          // java/nio/CharBuffer\n+  #139 = Utf8               java/nio/CharBuffer\n+  #140 = NameAndType        #141:#142     // allocate:(I)Ljava/nio/CharBuffer;\n+  #141 = Utf8               allocate\n+  #142 = Utf8               (I)Ljava/nio/CharBuffer;\n+  #143 = Fieldref           #1.#144       // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n+  #144 = NameAndType        #9:#10        // encoderIn:Ljava/nio/CharBuffer;\n+  #145 = Methodref          #138.#146     // java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n+  #146 = NameAndType        #147:#148     // flip:()Ljava/nio/Buffer;\n+  #147 = Utf8               flip\n+  #148 = Utf8               ()Ljava/nio/Buffer;\n+  #149 = Methodref          #150.#152     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+  #150 = Class              #151          // java/nio/ByteBuffer\n+  #151 = Utf8               java/nio/ByteBuffer\n+  #152 = NameAndType        #141:#153     // allocate:(I)Ljava/nio/ByteBuffer;\n+  #153 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #154 = Fieldref           #1.#155       // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n+  #155 = NameAndType        #11:#12       // encoderOut:Ljava/nio/ByteBuffer;\n+  #156 = Methodref          #150.#146     // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+  #157 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n+  #158 = Methodref          #1.#159       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+  #159 = NameAndType        #24:#160      // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+  #160 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n+  #161 = Utf8               charsetName\n+  #162 = Utf8               Ljava/lang/String;\n+  #163 = Methodref          #98.#164      // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #164 = NameAndType        #101:#165     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #165 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #166 = Utf8               close\n+  #167 = Utf8               Exceptions\n+  #168 = Class              #169          // java/io/IOException\n+  #169 = Utf8               java/io/IOException\n+  #170 = Methodref          #171.#173     // java/io/Reader.close:()V\n+  #171 = Class              #172          // java/io/Reader\n+  #172 = Utf8               java/io/Reader\n+  #173 = NameAndType        #166:#25      // close:()V\n+  #174 = Utf8               fillBuffer\n+  #175 = Fieldref           #1.#176       // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n+  #176 = NameAndType        #15:#16       // endOfInput:Z\n+  #177 = Fieldref           #1.#178       // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n+  #178 = NameAndType        #13:#14       // lastCoderResult:Ljava/nio/charset/CoderResult;\n+  #179 = Methodref          #180.#182     // java/nio/charset/CoderResult.isUnderflow:()Z\n+  #180 = Class              #181          // java/nio/charset/CoderResult\n+  #181 = Utf8               java/nio/charset/CoderResult\n+  #182 = NameAndType        #183:#184     // isUnderflow:()Z\n+  #183 = Utf8               isUnderflow\n+  #184 = Utf8               ()Z\n+  #185 = Methodref          #138.#186     // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+  #186 = NameAndType        #187:#188     // compact:()Ljava/nio/CharBuffer;\n+  #187 = Utf8               compact\n+  #188 = Utf8               ()Ljava/nio/CharBuffer;\n+  #189 = Methodref          #138.#190     // java/nio/CharBuffer.position:()I\n+  #190 = NameAndType        #191:#192     // position:()I\n+  #191 = Utf8               position\n+  #192 = Utf8               ()I\n+  #193 = Methodref          #138.#194     // java/nio/CharBuffer.array:()[C\n+  #194 = NameAndType        #195:#196     // array:()[C\n+  #195 = Utf8               array\n+  #196 = Utf8               ()[C\n+  #197 = Methodref          #138.#198     // java/nio/CharBuffer.remaining:()I\n+  #198 = NameAndType        #199:#192     // remaining:()I\n+  #199 = Utf8               remaining\n+  #200 = Methodref          #171.#201     // java/io/Reader.read:([CII)I\n+  #201 = NameAndType        #202:#203     // read:([CII)I\n+  #202 = Utf8               read\n+  #203 = Utf8               ([CII)I\n+  #204 = Methodref          #138.#205     // java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+  #205 = NameAndType        #191:#206     // position:(I)Ljava/nio/Buffer;\n+  #206 = Utf8               (I)Ljava/nio/Buffer;\n+  #207 = Methodref          #150.#208     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+  #208 = NameAndType        #187:#209     // compact:()Ljava/nio/ByteBuffer;\n+  #209 = Utf8               ()Ljava/nio/ByteBuffer;\n+  #210 = Methodref          #52.#211      // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #211 = NameAndType        #212:#213     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #212 = Utf8               encode\n+  #213 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #214 = Methodref          #52.#215      // java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n+  #215 = NameAndType        #216:#217     // flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n+  #216 = Utf8               flush\n+  #217 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n+  #218 = Methodref          #180.#219     // java/nio/charset/CoderResult.isError:()Z\n+  #219 = NameAndType        #220:#184     // isError:()Z\n+  #220 = Utf8               isError\n+  #221 = Methodref          #180.#222     // java/nio/charset/CoderResult.throwException:()V\n+  #222 = NameAndType        #223:#25      // throwException:()V\n+  #223 = Utf8               throwException\n+  #224 = Utf8               c\n+  #225 = Utf8               getCharsetEncoder\n+  #226 = Methodref          #150.#227     // java/nio/ByteBuffer.hasRemaining:()Z\n+  #227 = NameAndType        #228:#184     // hasRemaining:()Z\n+  #228 = Utf8               hasRemaining\n+  #229 = Methodref          #150.#230     // java/nio/ByteBuffer.get:()B\n+  #230 = NameAndType        #231:#232     // get:()B\n+  #231 = Utf8               get\n+  #232 = Utf8               ()B\n+  #233 = Methodref          #1.#234       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n+  #234 = NameAndType        #174:#25      // fillBuffer:()V\n+  #235 = Utf8               ([B)I\n+  #236 = Methodref          #1.#237       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n+  #237 = NameAndType        #202:#238     // read:([BII)I\n+  #238 = Utf8               ([BII)I\n+  #239 = Utf8               b\n+  #240 = Utf8               [B\n+  #241 = String             #195          // array\n+  #242 = Methodref          #243.#245     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #243 = Class              #244          // java/util/Objects\n+  #244 = Utf8               java/util/Objects\n+  #245 = NameAndType        #246:#247     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #246 = Utf8               requireNonNull\n+  #247 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #248 = Class              #249          // java/lang/IndexOutOfBoundsException\n+  #249 = Utf8               java/lang/IndexOutOfBoundsException\n+  #250 = Class              #251          // java/lang/StringBuilder\n+  #251 = Utf8               java/lang/StringBuilder\n+  #252 = String             #253          // Array size=\n+  #253 = Utf8               Array size=\n+  #254 = Methodref          #250.#70      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #255 = Methodref          #250.#256     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #256 = NameAndType        #257:#258     // append:(I)Ljava/lang/StringBuilder;\n+  #257 = Utf8               append\n+  #258 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #259 = String             #260          // , offset=\n+  #260 = Utf8               , offset=\n+  #261 = Methodref          #250.#262     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #262 = NameAndType        #257:#263     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #263 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #264 = String             #265          // , length=\n+  #265 = Utf8               , length=\n+  #266 = Methodref          #250.#267     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #267 = NameAndType        #268:#62      // toString:()Ljava/lang/String;\n+  #268 = Utf8               toString\n+  #269 = Methodref          #248.#70      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #270 = Methodref          #150.#198     // java/nio/ByteBuffer.remaining:()I\n+  #271 = Methodref          #272.#274     // java/lang/Math.min:(II)I\n+  #272 = Class              #273          // java/lang/Math\n+  #273 = Utf8               java/lang/Math\n+  #274 = NameAndType        #275:#276     // min:(II)I\n+  #275 = Utf8               min\n+  #276 = Utf8               (II)I\n+  #277 = Methodref          #150.#278     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+  #278 = NameAndType        #231:#279     // get:([BII)Ljava/nio/ByteBuffer;\n+  #279 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+  #280 = Utf8               off\n+  #281 = Utf8               len\n+  #282 = Utf8               SourceFile\n+  #283 = Utf8               ReaderInputStream.java\n+  #284 = Utf8               InnerClasses\n+  #285 = Utf8               Builder\n {\n   private final java.io.Reader reader;\n     descriptor: Ljava/io/Reader;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.nio.charset.CharsetEncoder charsetEncoder;\n     descriptor: Ljava/nio/charset/CharsetEncoder;\n@@ -321,65 +319,67 @@\n     flags: (0x0002) ACC_PRIVATE\n \n   public static org.apache.commons.io.input.ReaderInputStream$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/input/ReaderInputStream$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #3                  // class org/apache/commons/io/input/ReaderInputStream$Builder\n+         0: new           #20                 // class org/apache/commons/io/input/ReaderInputStream$Builder\n          3: dup\n-         4: invokespecial #5                  // Method org/apache/commons/io/input/ReaderInputStream$Builder.\"<init>\":()V\n+         4: invokespecial #22                 // Method org/apache/commons/io/input/ReaderInputStream$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 137: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   static int checkMinBufferSize(java.nio.charset.CharsetEncoder, int);\n     descriptor: (Ljava/nio/charset/CharsetEncoder;I)I\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=7, locals=3, args_size=2\n          0: aload_0\n-         1: invokestatic  #9                  // Method minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n+         1: invokestatic  #30                 // Method minBufferSize:(Ljava/nio/charset/CharsetEncoder;)F\n          4: fstore_2\n          5: iload_1\n          6: i2f\n          7: fload_2\n          8: fcmpg\n          9: ifge          53\n-        12: new           #15                 // class java/lang/IllegalArgumentException\n+        12: new           #34                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: ldc           #17                 // String Buffer size %,d must be at least %s for a CharsetEncoder %s.\n+        16: ldc           #36                 // String Buffer size %,d must be at least %s for a CharsetEncoder %s.\n         18: iconst_3\n-        19: anewarray     #19                 // class java/lang/Object\n+        19: anewarray     #38                 // class java/lang/Object\n         22: dup\n         23: iconst_0\n         24: iload_1\n-        25: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        25: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         28: aastore\n         29: dup\n         30: iconst_1\n         31: fload_2\n-        32: invokestatic  #27                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+        32: invokestatic  #46                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n         35: aastore\n         36: dup\n         37: iconst_2\n         38: aload_0\n-        39: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.charset:()Ljava/nio/charset/Charset;\n-        42: invokevirtual #38                 // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;\n+        39: invokevirtual #51                 // Method java/nio/charset/CharsetEncoder.charset:()Ljava/nio/charset/Charset;\n+        42: invokevirtual #57                 // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;\n         45: aastore\n-        46: invokestatic  #44                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        49: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokestatic  #63                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        49: invokespecial #69                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: iload_1\n         54: ireturn\n       LineNumberTable:\n         line 141: 0\n         line 142: 5\n         line 143: 12\n-        line 144: 39\n+        line 144: 38\n         line 143: 46\n         line 146: 53\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      55     0 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n             0      55     1 bufferSize   I\n             5      50     2 minRequired   F\n@@ -390,161 +390,165 @@\n \n   static float minBufferSize(java.nio.charset.CharsetEncoder);\n     descriptor: (Ljava/nio/charset/CharsetEncoder;)F\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #53                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+         1: invokevirtual #77                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n          4: fconst_2\n          5: fmul\n          6: freturn\n       LineNumberTable:\n         line 150: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #57                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-         5: invokespecial #60                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+         2: invokestatic  #85                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         5: invokespecial #88                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n          8: return\n       LineNumberTable:\n         line 180: 0\n         line 181: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1 reader   Ljava/io/Reader;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n-         6: invokespecial #63                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         6: invokespecial #93                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n          9: return\n       LineNumberTable:\n         line 196: 0\n         line 197: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      10     1 reader   Ljava/io/Reader;\n             0      10     2 charset   Ljava/nio/charset/Charset;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.Charset, int);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #66                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-         6: invokevirtual #72                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-         9: getstatic     #76                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        12: invokevirtual #82                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-        15: getstatic     #76                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        18: invokevirtual #86                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+         3: invokestatic  #97                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+         6: invokevirtual #103                // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+         9: getstatic     #107                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        12: invokevirtual #113                // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+        15: getstatic     #107                // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        18: invokevirtual #117                // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n         21: iload_3\n-        22: invokespecial #89                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+        22: invokespecial #120                // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n         25: return\n       LineNumberTable:\n         line 214: 0\n-        line 215: 3\n-        line 216: 12\n-        line 217: 18\n-        line 214: 22\n+        line 215: 2\n+        line 216: 9\n+        line 217: 15\n+        line 218: 21\n         line 220: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      26     1 reader   Ljava/io/Reader;\n             0      26     2 charset   Ljava/nio/charset/Charset;\n             0      26     3 bufferSize   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n-         6: invokespecial #89                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+         6: invokespecial #120                // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n          9: return\n       LineNumberTable:\n         line 237: 0\n         line 238: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      10     1 reader   Ljava/io/Reader;\n             0      10     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #92                 // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #124                // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #95                 // Field reader:Ljava/io/Reader;\n+         6: putfield      #125                // Field reader:Ljava/io/Reader;\n          9: aload_0\n         10: aload_2\n-        11: invokestatic  #99                 // Method org/apache/commons/io/charset/CharsetEncoders.toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n-        14: putfield      #105                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+        11: invokestatic  #127                // Method org/apache/commons/io/charset/CharsetEncoders.toCharsetEncoder:(Ljava/nio/charset/CharsetEncoder;)Ljava/nio/charset/CharsetEncoder;\n+        14: putfield      #133                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n         17: aload_0\n         18: aload_0\n-        19: getfield      #105                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+        19: getfield      #133                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n         22: iload_3\n-        23: invokestatic  #109                // Method checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n-        26: invokestatic  #113                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-        29: putfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n+        23: invokestatic  #135                // Method checkMinBufferSize:(Ljava/nio/charset/CharsetEncoder;I)I\n+        26: invokestatic  #137                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+        29: putfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n         32: aload_0\n-        33: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        36: invokevirtual #123                // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n+        33: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        36: invokevirtual #145                // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n         39: pop\n         40: aload_0\n         41: sipush        128\n-        44: invokestatic  #127                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-        47: putfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        44: invokestatic  #149                // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        47: putfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n         50: aload_0\n-        51: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        54: invokevirtual #136                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+        51: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        54: invokevirtual #156                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n         57: pop\n         58: return\n       LineNumberTable:\n         line 255: 0\n         line 256: 4\n         line 257: 9\n         line 258: 17\n@@ -554,248 +558,247 @@\n         line 262: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      59     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      59     1 reader   Ljava/io/Reader;\n             0      59     2 charsetEncoder   Ljava/nio/charset/CharsetEncoder;\n             0      59     3 bufferSize   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String);\n     descriptor: (Ljava/io/Reader;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        8192\n-         6: invokespecial #137                // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+         6: invokespecial #158                // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n          9: return\n       LineNumberTable:\n         line 277: 0\n         line 278: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      10     1 reader   Ljava/io/Reader;\n             0      10     2 charsetName   Ljava/lang/String;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.lang.String, int);\n     descriptor: (Ljava/io/Reader;Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #84()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #140                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         3: invokestatic  #163                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n          6: iload_3\n-         7: invokespecial #63                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         7: invokespecial #93                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n         10: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      11     1 reader   Ljava/io/Reader;\n             0      11     2 charsetName   Ljava/lang/String;\n             0      11     3 bufferSize   I\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #268()\n-        java.lang.Deprecated\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #95                 // Field reader:Ljava/io/Reader;\n-         4: invokevirtual #143                // Method java/io/Reader.close:()V\n+         1: getfield      #125                // Field reader:Ljava/io/Reader;\n+         4: invokevirtual #170                // Method java/io/Reader.close:()V\n          7: return\n       LineNumberTable:\n         line 304: 0\n         line 305: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #148                // Field endOfInput:Z\n+         1: getfield      #175                // Field endOfInput:Z\n          4: ifne          95\n          7: aload_0\n-         8: getfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+         8: getfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n         11: ifnull        24\n         14: aload_0\n-        15: getfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n-        18: invokevirtual #156                // Method java/nio/charset/CoderResult.isUnderflow:()Z\n+        15: getfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+        18: invokevirtual #179                // Method java/nio/charset/CoderResult.isUnderflow:()Z\n         21: ifeq          95\n         24: aload_0\n-        25: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        28: invokevirtual #162                // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+        25: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        28: invokevirtual #185                // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n         31: pop\n         32: aload_0\n-        33: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        36: invokevirtual #166                // Method java/nio/CharBuffer.position:()I\n+        33: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        36: invokevirtual #189                // Method java/nio/CharBuffer.position:()I\n         39: istore_1\n         40: aload_0\n-        41: getfield      #95                 // Field reader:Ljava/io/Reader;\n+        41: getfield      #125                // Field reader:Ljava/io/Reader;\n         44: aload_0\n-        45: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        48: invokevirtual #170                // Method java/nio/CharBuffer.array:()[C\n+        45: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        48: invokevirtual #193                // Method java/nio/CharBuffer.array:()[C\n         51: iload_1\n         52: aload_0\n-        53: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        56: invokevirtual #174                // Method java/nio/CharBuffer.remaining:()I\n-        59: invokevirtual #177                // Method java/io/Reader.read:([CII)I\n+        53: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        56: invokevirtual #197                // Method java/nio/CharBuffer.remaining:()I\n+        59: invokevirtual #200                // Method java/io/Reader.read:([CII)I\n         62: istore_2\n         63: iload_2\n         64: iconst_m1\n         65: if_icmpne     76\n         68: aload_0\n         69: iconst_1\n-        70: putfield      #148                // Field endOfInput:Z\n+        70: putfield      #175                // Field endOfInput:Z\n         73: goto          87\n         76: aload_0\n-        77: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n+        77: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n         80: iload_1\n         81: iload_2\n         82: iadd\n-        83: invokevirtual #181                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n+        83: invokevirtual #204                // Method java/nio/CharBuffer.position:(I)Ljava/nio/Buffer;\n         86: pop\n         87: aload_0\n-        88: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n-        91: invokevirtual #123                // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n+        88: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n+        91: invokevirtual #145                // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;\n         94: pop\n         95: aload_0\n-        96: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        99: invokevirtual #184                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+        96: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        99: invokevirtual #207                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n        102: pop\n        103: aload_0\n        104: aload_0\n-       105: getfield      #105                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+       105: getfield      #133                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n        108: aload_0\n-       109: getfield      #119                // Field encoderIn:Ljava/nio/CharBuffer;\n+       109: getfield      #143                // Field encoderIn:Ljava/nio/CharBuffer;\n        112: aload_0\n-       113: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n+       113: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n        116: aload_0\n-       117: getfield      #148                // Field endOfInput:Z\n-       120: invokevirtual #187                // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-       123: putfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       117: getfield      #175                // Field endOfInput:Z\n+       120: invokevirtual #210                // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+       123: putfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n        126: aload_0\n-       127: getfield      #148                // Field endOfInput:Z\n+       127: getfield      #175                // Field endOfInput:Z\n        130: ifeq          148\n        133: aload_0\n        134: aload_0\n-       135: getfield      #105                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+       135: getfield      #133                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n        138: aload_0\n-       139: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-       142: invokevirtual #191                // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n-       145: putfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       139: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+       142: invokevirtual #214                // Method java/nio/charset/CharsetEncoder.flush:(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;\n+       145: putfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n        148: aload_0\n-       149: getfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n-       152: invokevirtual #195                // Method java/nio/charset/CoderResult.isError:()Z\n+       149: getfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       152: invokevirtual #218                // Method java/nio/charset/CoderResult.isError:()Z\n        155: ifeq          165\n        158: aload_0\n-       159: getfield      #152                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n-       162: invokevirtual #198                // Method java/nio/charset/CoderResult.throwException:()V\n+       159: getfield      #177                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       162: invokevirtual #221                // Method java/nio/charset/CoderResult.throwException:()V\n        165: aload_0\n-       166: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-       169: invokevirtual #136                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       166: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+       169: invokevirtual #156                // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n        172: pop\n        173: return\n       LineNumberTable:\n         line 313: 0\n         line 314: 24\n         line 315: 32\n         line 319: 40\n         line 320: 63\n         line 321: 68\n+        line 322: 73\n         line 323: 76\n         line 325: 87\n         line 327: 95\n         line 328: 103\n         line 329: 126\n         line 330: 133\n         line 332: 148\n         line 333: 158\n         line 335: 165\n         line 336: 173\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0     174     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n            40      55     1 position   I\n            63      32     2     c   I\n-            0     174     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n       StackMapTable: number_of_entries = 6\n         frame_type = 24 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 51\n           locals = [ int, int ]\n         frame_type = 10 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 7\n         frame_type = 52 /* same */\n         frame_type = 16 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   java.nio.charset.CharsetEncoder getCharsetEncoder();\n     descriptor: ()Ljava/nio/charset/CharsetEncoder;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #105                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n+         1: getfield      #133                // Field charsetEncoder:Ljava/nio/charset/CharsetEncoder;\n          4: areturn\n       LineNumberTable:\n         line 344: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-         4: invokevirtual #201                // Method java/nio/ByteBuffer.hasRemaining:()Z\n+         1: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+         4: invokevirtual #226                // Method java/nio/ByteBuffer.hasRemaining:()Z\n          7: ifeq          22\n         10: aload_0\n-        11: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        14: invokevirtual #204                // Method java/nio/ByteBuffer.get:()B\n+        11: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        14: invokevirtual #229                // Method java/nio/ByteBuffer.get:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n         22: aload_0\n-        23: invokespecial #208                // Method fillBuffer:()V\n+        23: invokespecial #233                // Method fillBuffer:()V\n         26: aload_0\n-        27: getfield      #148                // Field endOfInput:Z\n+        27: getfield      #175                // Field endOfInput:Z\n         30: ifeq          0\n         33: aload_0\n-        34: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        37: invokevirtual #201                // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        34: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        37: invokevirtual #226                // Method java/nio/ByteBuffer.hasRemaining:()Z\n         40: ifne          0\n         43: iconst_m1\n         44: ireturn\n       LineNumberTable:\n         line 356: 0\n         line 357: 10\n         line 359: 22\n@@ -803,169 +806,166 @@\n         line 361: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      45     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 0 /* same */\n         frame_type = 21 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #211                // Method read:([BII)I\n+         5: invokevirtual #236                // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 375: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=6, args_size=4\n+      stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #214                // String array\n-         3: invokestatic  #215                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #241                // String array\n+         3: invokestatic  #242                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n-        20: if_icmple     69\n-        23: new           #221                // class java/lang/IndexOutOfBoundsException\n+        20: if_icmple     68\n+        23: new           #248                // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #223                // class java/lang/StringBuilder\n+        27: new           #250                // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #225                // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #226                // String Array size=\n-        36: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: aload_1\n-        40: arraylength\n-        41: invokevirtual #232                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #235                // String , offset=\n-        46: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        49: iload_2\n-        50: invokevirtual #232                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #237                // String , length=\n-        55: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: iload_3\n-        59: invokevirtual #232                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #242                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        68: athrow\n-        69: iconst_0\n-        70: istore        4\n-        72: iload_3\n-        73: ifne          78\n-        76: iconst_0\n-        77: ireturn\n-        78: iload_3\n-        79: ifle          154\n-        82: aload_0\n-        83: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        86: invokevirtual #201                // Method java/nio/ByteBuffer.hasRemaining:()Z\n-        89: ifeq          137\n-        92: aload_0\n-        93: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-        96: invokevirtual #243                // Method java/nio/ByteBuffer.remaining:()I\n-        99: iload_3\n-       100: invokestatic  #244                // Method java/lang/Math.min:(II)I\n-       103: istore        5\n-       105: aload_0\n-       106: getfield      #132                // Field encoderOut:Ljava/nio/ByteBuffer;\n-       109: aload_1\n-       110: iload_2\n-       111: iload         5\n-       113: invokevirtual #250                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n-       116: pop\n-       117: iload_2\n+        31: ldc           #252                // String Array size=\n+        33: invokespecial #254                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        36: aload_1\n+        37: arraylength\n+        38: invokevirtual #255                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc_w         #259                // String , offset=\n+        44: invokevirtual #261                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: iload_2\n+        48: invokevirtual #255                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        51: ldc_w         #264                // String , length=\n+        54: invokevirtual #261                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        57: iload_3\n+        58: invokevirtual #255                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        61: invokevirtual #266                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        64: invokespecial #269                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        67: athrow\n+        68: iconst_0\n+        69: istore        4\n+        71: iload_3\n+        72: ifne          146\n+        75: iconst_0\n+        76: ireturn\n+        77: aload_0\n+        78: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        81: invokevirtual #226                // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        84: ifeq          132\n+        87: aload_0\n+        88: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+        91: invokevirtual #270                // Method java/nio/ByteBuffer.remaining:()I\n+        94: iload_3\n+        95: invokestatic  #271                // Method java/lang/Math.min:(II)I\n+        98: istore        5\n+       100: aload_0\n+       101: getfield      #154                // Field encoderOut:Ljava/nio/ByteBuffer;\n+       104: aload_1\n+       105: iload_2\n+       106: iload         5\n+       108: invokevirtual #277                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+       111: pop\n+       112: iload_2\n+       113: iload         5\n+       115: iadd\n+       116: istore_2\n+       117: iload_3\n        118: iload         5\n-       120: iadd\n-       121: istore_2\n-       122: iload_3\n-       123: iload         5\n-       125: isub\n-       126: istore_3\n-       127: iload         4\n-       129: iload         5\n-       131: iadd\n-       132: istore        4\n-       134: goto          78\n-       137: aload_0\n-       138: getfield      #148                // Field endOfInput:Z\n-       141: ifeq          147\n-       144: goto          154\n-       147: aload_0\n-       148: invokespecial #208                // Method fillBuffer:()V\n-       151: goto          78\n-       154: iload         4\n-       156: ifne          170\n-       159: aload_0\n-       160: getfield      #148                // Field endOfInput:Z\n-       163: ifeq          170\n-       166: iconst_m1\n-       167: goto          172\n-       170: iload         4\n-       172: ireturn\n+       120: isub\n+       121: istore_3\n+       122: iload         4\n+       124: iload         5\n+       126: iadd\n+       127: istore        4\n+       129: goto          146\n+       132: aload_0\n+       133: getfield      #175                // Field endOfInput:Z\n+       136: ifeq          142\n+       139: goto          150\n+       142: aload_0\n+       143: invokespecial #233                // Method fillBuffer:()V\n+       146: iload_3\n+       147: ifgt          77\n+       150: iload         4\n+       152: ifne          166\n+       155: aload_0\n+       156: getfield      #175                // Field endOfInput:Z\n+       159: ifeq          166\n+       162: iconst_m1\n+       163: goto          168\n+       166: iload         4\n+       168: ireturn\n       LineNumberTable:\n         line 389: 0\n         line 390: 7\n         line 391: 23\n-        line 393: 69\n-        line 394: 72\n-        line 395: 76\n-        line 397: 78\n-        line 398: 82\n-        line 399: 92\n-        line 400: 105\n-        line 401: 117\n-        line 402: 122\n-        line 403: 127\n-        line 404: 134\n-        line 405: 144\n-        line 407: 147\n-        line 410: 154\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          105      29     5     c   I\n-            0     173     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n-            0     173     1 array   [B\n-            0     173     2   off   I\n-            0     173     3   len   I\n-           72     101     4  read   I\n-      StackMapTable: number_of_entries = 8\n+        line 393: 68\n+        line 394: 71\n+        line 395: 75\n+        line 398: 77\n+        line 399: 87\n+        line 400: 100\n+        line 401: 112\n+        line 402: 117\n+        line 403: 122\n+        line 404: 129\n+        line 405: 139\n+        line 407: 142\n+        line 397: 146\n+        line 410: 150\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     169     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n+            0     169     1 array   [B\n+            0     169     2   off   I\n+            0     169     3   len   I\n+           71      98     4  read   I\n+          100      29     5     c   I\n+      StackMapTable: number_of_entries = 9\n         frame_type = 23 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 44 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ int ]\n-        frame_type = 58 /* same */\n+        frame_type = 54 /* same */\n         frame_type = 9 /* same */\n-        frame_type = 6 /* same */\n+        frame_type = 3 /* same */\n+        frame_type = 3 /* same */\n         frame_type = 15 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ReaderInputStream.java\"\n InnerClasses:\n-  public static #287= #3 of #10;          // Builder=class org/apache/commons/io/input/ReaderInputStream$Builder of class org/apache/commons/io/input/ReaderInputStream\n+  public static #285= #20 of #1;          // Builder=class org/apache/commons/io/input/ReaderInputStream$Builder of class org/apache/commons/io/input/ReaderInputStream\n"}]}
