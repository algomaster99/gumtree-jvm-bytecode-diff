{"diffoscope-json-version": 1, "source1": "first/AndFileFilter.class", "source2": "second/AndFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,64 +1,64 @@\n-  SHA-256 checksum 5ef3705306975531cffdfe183ec18c1f054a8bd7f13bd0819eb32773fb332bf2\n+  SHA-256 checksum 575f398451bcb453df59c50b0fec4139baa5efb8bdefce1fee19f916edc4770e\n   Compiled from \"AndFileFilter.java\"\n public class org.apache.commons.io.filefilter.AndFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #44                         // org/apache/commons/io/filefilter/AndFileFilter\n   super_class: #45                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#114      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(I)V\n-    #2 = Methodref          #45.#115      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #1 = Methodref          #44.#113      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(I)V\n+    #2 = Methodref          #45.#114      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n     #3 = String             #65           // initialList\n-    #4 = Methodref          #116.#117     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #118          // java/util/List\n-    #6 = Fieldref           #44.#119      // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n-    #7 = Class              #120          // java/util/ArrayList\n-    #8 = Methodref          #7.#114       // java/util/ArrayList.\"<init>\":(I)V\n-    #9 = Methodref          #44.#121      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n-   #10 = Methodref          #44.#122      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+    #4 = Methodref          #115.#116     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #5 = Class              #117          // java/util/List\n+    #6 = Fieldref           #44.#118      // org/apache/commons/io/filefilter/AndFileFilter.fileFilters:Ljava/util/List;\n+    #7 = Class              #119          // java/util/ArrayList\n+    #8 = Methodref          #7.#113       // java/util/ArrayList.\"<init>\":(I)V\n+    #9 = Methodref          #44.#120      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n+   #10 = Methodref          #44.#121      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n    #11 = String             #53           // fileFilters\n    #12 = Class              #78           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n-   #13 = Methodref          #44.#123      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #14 = Class              #124          // java/util/Collection\n-   #15 = Methodref          #7.#125       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #16 = Methodref          #44.#126      // org/apache/commons/io/filefilter/AndFileFilter.isEmpty:()Z\n-   #17 = InterfaceMethodref #5.#127       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #18 = InterfaceMethodref #128.#129     // java/util/Iterator.hasNext:()Z\n-   #19 = InterfaceMethodref #128.#130     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #20 = Class              #131          // org/apache/commons/io/filefilter/IOFileFilter\n-   #21 = InterfaceMethodref #20.#132      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #22 = InterfaceMethodref #20.#133      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #23 = Fieldref           #134.#135     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #24 = InterfaceMethodref #20.#136      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #25 = Fieldref           #134.#137     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #13 = Methodref          #44.#122      // org/apache/commons/io/filefilter/AndFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #14 = Class              #123          // java/util/Collection\n+   #15 = Methodref          #7.#124       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #16 = Methodref          #44.#125      // org/apache/commons/io/filefilter/AndFileFilter.isEmpty:()Z\n+   #17 = InterfaceMethodref #5.#126       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #18 = InterfaceMethodref #87.#127      // java/util/Iterator.hasNext:()Z\n+   #19 = InterfaceMethodref #87.#128      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #20 = Class              #129          // org/apache/commons/io/filefilter/IOFileFilter\n+   #21 = InterfaceMethodref #20.#130      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #22 = InterfaceMethodref #20.#131      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #23 = Fieldref           #132.#133     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #24 = InterfaceMethodref #20.#134      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #25 = Fieldref           #132.#135     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n    #26 = String             #83           // fileFilter\n-   #27 = InterfaceMethodref #5.#138       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #28 = Methodref          #139.#140     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #29 = InterfaceMethodref #5.#126       // java/util/List.isEmpty:()Z\n-   #30 = InterfaceMethodref #5.#141       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #31 = InterfaceMethodref #5.#142       // java/util/List.clear:()V\n-   #32 = InterfaceMethodref #5.#143       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #33 = Class              #144          // java/lang/StringBuilder\n-   #34 = Methodref          #33.#115      // java/lang/StringBuilder.\"<init>\":()V\n-   #35 = Methodref          #45.#145      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #36 = Methodref          #33.#146      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #37 = String             #147          // (\n-   #38 = InterfaceMethodref #5.#148       // java/util/List.size:()I\n-   #39 = String             #149          // ,\n-   #40 = InterfaceMethodref #5.#150       // java/util/List.get:(I)Ljava/lang/Object;\n-   #41 = Methodref          #33.#151      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #42 = String             #152          // )\n-   #43 = Methodref          #33.#145      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Class              #153          // org/apache/commons/io/filefilter/AndFileFilter\n-   #45 = Class              #154          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #46 = Class              #155          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #47 = Class              #156          // java/io/Serializable\n+   #27 = InterfaceMethodref #5.#136       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #28 = Methodref          #137.#138     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #29 = InterfaceMethodref #5.#125       // java/util/List.isEmpty:()Z\n+   #30 = InterfaceMethodref #5.#139       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #31 = InterfaceMethodref #5.#140       // java/util/List.clear:()V\n+   #32 = InterfaceMethodref #5.#141       // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #33 = Class              #142          // java/lang/StringBuilder\n+   #34 = Methodref          #33.#114      // java/lang/StringBuilder.\"<init>\":()V\n+   #35 = Methodref          #45.#143      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #36 = Methodref          #33.#144      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #37 = String             #145          // (\n+   #38 = InterfaceMethodref #5.#146       // java/util/List.size:()I\n+   #39 = String             #147          // ,\n+   #40 = InterfaceMethodref #5.#148       // java/util/List.get:(I)Ljava/lang/Object;\n+   #41 = Methodref          #33.#149      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #42 = String             #150          // )\n+   #43 = Methodref          #33.#143      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = Class              #151          // org/apache/commons/io/filefilter/AndFileFilter\n+   #45 = Class              #152          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #46 = Class              #153          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+   #47 = Class              #154          // java/io/Serializable\n    #48 = Utf8               serialVersionUID\n    #49 = Utf8               J\n    #50 = Utf8               ConstantValue\n    #51 = Long               7215974688563965257l\n    #53 = Utf8               fileFilters\n    #54 = Utf8               Ljava/util/List;\n    #55 = Utf8               Signature\n@@ -89,15 +89,15 @@\n    #80 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n    #81 = Utf8               accept\n    #82 = Utf8               (Ljava/io/File;)Z\n    #83 = Utf8               fileFilter\n    #84 = Utf8               file\n    #85 = Utf8               Ljava/io/File;\n    #86 = Utf8               StackMapTable\n-   #87 = Class              #157          // java/util/Iterator\n+   #87 = Class              #155          // java/util/Iterator\n    #88 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n    #89 = Utf8               name\n    #90 = Utf8               Ljava/lang/String;\n    #91 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #92 = Utf8               Ljava/nio/file/Path;\n    #93 = Utf8               attributes\n    #94 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n@@ -113,90 +113,88 @@\n   #104 = Utf8               ioFileFilter\n   #105 = Utf8               setFileFilters\n   #106 = Utf8               toString\n   #107 = Utf8               ()Ljava/lang/String;\n   #108 = Utf8               i\n   #109 = Utf8               buffer\n   #110 = Utf8               Ljava/lang/StringBuilder;\n-  #111 = Class              #144          // java/lang/StringBuilder\n-  #112 = Utf8               SourceFile\n-  #113 = Utf8               AndFileFilter.java\n-  #114 = NameAndType        #57:#70       // \"<init>\":(I)V\n-  #115 = NameAndType        #57:#58       // \"<init>\":()V\n-  #116 = Class              #158          // java/util/Objects\n-  #117 = NameAndType        #159:#160     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #118 = Utf8               java/util/List\n-  #119 = NameAndType        #53:#54       // fileFilters:Ljava/util/List;\n-  #120 = Utf8               java/util/ArrayList\n-  #121 = NameAndType        #57:#64       // \"<init>\":(Ljava/util/ArrayList;)V\n-  #122 = NameAndType        #95:#96       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #123 = NameAndType        #95:#77       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #124 = Utf8               java/util/Collection\n-  #125 = NameAndType        #57:#161      // \"<init>\":(Ljava/util/Collection;)V\n-  #126 = NameAndType        #100:#101     // isEmpty:()Z\n-  #127 = NameAndType        #162:#163     // iterator:()Ljava/util/Iterator;\n-  #128 = Class              #157          // java/util/Iterator\n-  #129 = NameAndType        #164:#101     // hasNext:()Z\n-  #130 = NameAndType        #165:#166     // next:()Ljava/lang/Object;\n-  #131 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #132 = NameAndType        #81:#82       // accept:(Ljava/io/File;)Z\n-  #133 = NameAndType        #81:#88       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #134 = Class              #167          // java/nio/file/FileVisitResult\n-  #135 = NameAndType        #168:#169     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #136 = NameAndType        #81:#91       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #137 = NameAndType        #170:#169     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #138 = NameAndType        #171:#172     // add:(Ljava/lang/Object;)Z\n-  #139 = Class              #173          // java/util/Collections\n-  #140 = NameAndType        #174:#175     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #141 = NameAndType        #176:#172     // remove:(Ljava/lang/Object;)Z\n-  #142 = NameAndType        #177:#58      // clear:()V\n-  #143 = NameAndType        #178:#179     // addAll:(Ljava/util/Collection;)Z\n-  #144 = Utf8               java/lang/StringBuilder\n-  #145 = NameAndType        #106:#107     // toString:()Ljava/lang/String;\n-  #146 = NameAndType        #180:#181     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #147 = Utf8               (\n-  #148 = NameAndType        #182:#183     // size:()I\n-  #149 = Utf8               ,\n-  #150 = NameAndType        #184:#185     // get:(I)Ljava/lang/Object;\n-  #151 = NameAndType        #180:#186     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #152 = Utf8               )\n-  #153 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #154 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #155 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #156 = Utf8               java/io/Serializable\n-  #157 = Utf8               java/util/Iterator\n-  #158 = Utf8               java/util/Objects\n-  #159 = Utf8               requireNonNull\n-  #160 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #161 = Utf8               (Ljava/util/Collection;)V\n-  #162 = Utf8               iterator\n-  #163 = Utf8               ()Ljava/util/Iterator;\n-  #164 = Utf8               hasNext\n-  #165 = Utf8               next\n-  #166 = Utf8               ()Ljava/lang/Object;\n-  #167 = Utf8               java/nio/file/FileVisitResult\n-  #168 = Utf8               TERMINATE\n-  #169 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #170 = Utf8               CONTINUE\n-  #171 = Utf8               add\n-  #172 = Utf8               (Ljava/lang/Object;)Z\n-  #173 = Utf8               java/util/Collections\n-  #174 = Utf8               unmodifiableList\n-  #175 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #176 = Utf8               remove\n-  #177 = Utf8               clear\n-  #178 = Utf8               addAll\n-  #179 = Utf8               (Ljava/util/Collection;)Z\n-  #180 = Utf8               append\n-  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #182 = Utf8               size\n-  #183 = Utf8               ()I\n-  #184 = Utf8               get\n-  #185 = Utf8               (I)Ljava/lang/Object;\n-  #186 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #111 = Utf8               SourceFile\n+  #112 = Utf8               AndFileFilter.java\n+  #113 = NameAndType        #57:#70       // \"<init>\":(I)V\n+  #114 = NameAndType        #57:#58       // \"<init>\":()V\n+  #115 = Class              #156          // java/util/Objects\n+  #116 = NameAndType        #157:#158     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #117 = Utf8               java/util/List\n+  #118 = NameAndType        #53:#54       // fileFilters:Ljava/util/List;\n+  #119 = Utf8               java/util/ArrayList\n+  #120 = NameAndType        #57:#64       // \"<init>\":(Ljava/util/ArrayList;)V\n+  #121 = NameAndType        #95:#96       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #122 = NameAndType        #95:#77       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #123 = Utf8               java/util/Collection\n+  #124 = NameAndType        #57:#159      // \"<init>\":(Ljava/util/Collection;)V\n+  #125 = NameAndType        #100:#101     // isEmpty:()Z\n+  #126 = NameAndType        #160:#161     // iterator:()Ljava/util/Iterator;\n+  #127 = NameAndType        #162:#101     // hasNext:()Z\n+  #128 = NameAndType        #163:#164     // next:()Ljava/lang/Object;\n+  #129 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #130 = NameAndType        #81:#82       // accept:(Ljava/io/File;)Z\n+  #131 = NameAndType        #81:#88       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #132 = Class              #165          // java/nio/file/FileVisitResult\n+  #133 = NameAndType        #166:#167     // TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #134 = NameAndType        #81:#91       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #135 = NameAndType        #168:#167     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #136 = NameAndType        #169:#170     // add:(Ljava/lang/Object;)Z\n+  #137 = Class              #171          // java/util/Collections\n+  #138 = NameAndType        #172:#173     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+  #139 = NameAndType        #174:#170     // remove:(Ljava/lang/Object;)Z\n+  #140 = NameAndType        #175:#58      // clear:()V\n+  #141 = NameAndType        #176:#177     // addAll:(Ljava/util/Collection;)Z\n+  #142 = Utf8               java/lang/StringBuilder\n+  #143 = NameAndType        #106:#107     // toString:()Ljava/lang/String;\n+  #144 = NameAndType        #178:#179     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #145 = Utf8               (\n+  #146 = NameAndType        #180:#181     // size:()I\n+  #147 = Utf8               ,\n+  #148 = NameAndType        #182:#183     // get:(I)Ljava/lang/Object;\n+  #149 = NameAndType        #178:#184     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #150 = Utf8               )\n+  #151 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #152 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #153 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #154 = Utf8               java/io/Serializable\n+  #155 = Utf8               java/util/Iterator\n+  #156 = Utf8               java/util/Objects\n+  #157 = Utf8               requireNonNull\n+  #158 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #159 = Utf8               (Ljava/util/Collection;)V\n+  #160 = Utf8               iterator\n+  #161 = Utf8               ()Ljava/util/Iterator;\n+  #162 = Utf8               hasNext\n+  #163 = Utf8               next\n+  #164 = Utf8               ()Ljava/lang/Object;\n+  #165 = Utf8               java/nio/file/FileVisitResult\n+  #166 = Utf8               TERMINATE\n+  #167 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #168 = Utf8               CONTINUE\n+  #169 = Utf8               add\n+  #170 = Utf8               (Ljava/lang/Object;)Z\n+  #171 = Utf8               java/util/Collections\n+  #172 = Utf8               unmodifiableList\n+  #173 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #174 = Utf8               remove\n+  #175 = Utf8               clear\n+  #176 = Utf8               addAll\n+  #177 = Utf8               (Ljava/util/Collection;)Z\n+  #178 = Utf8               append\n+  #179 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = Utf8               size\n+  #181 = Utf8               ()I\n+  #182 = Utf8               get\n+  #183 = Utf8               (I)Ljava/lang/Object;\n+  #184 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = 7215974688563965257l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 7215974688563965257l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n@@ -512,24 +510,25 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n          4: aload_1\n          5: ldc           #26                 // String fileFilter\n          7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        10: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-        15: pop\n-        16: return\n+        10: checkcast     #20                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        13: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        18: pop\n+        19: return\n       LineNumberTable:\n         line 164: 0\n-        line 165: 16\n+        line 165: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      17     0  this   Lorg/apache/commons/io/filefilter/AndFileFilter;\n-            0      17     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n+            0      20     0  this   Lorg/apache/commons/io/filefilter/AndFileFilter;\n+            0      20     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n"}]}
