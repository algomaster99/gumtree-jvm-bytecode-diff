{"diffoscope-json-version": 1, "source1": "first/FramedSnappyCompressorOutputStream.class", "source2": "second/FramedSnappyCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,176 +1,176 @@\n-  SHA-256 checksum f0ea12ae729ca22354df13f2ea1bd36ebb67db39a69ba37d35bbeb8d2c721925\n+  SHA-256 checksum e83025b1971d11b07a8ebd77f6bc1b460f23fbe7489f4c82bed3e75021dd82e9\n   Compiled from \"FramedSnappyCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n-  super_class: #50                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #23                         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+  super_class: #29                        // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 8, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Class              #92           // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-    #2 = Long               2726488792l\n-    #4 = Long               4294967295l\n-    #6 = Class              #93           // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-    #7 = Integer            32768\n-    #8 = Methodref          #33.#94       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-    #9 = Methodref          #95.#96       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #10 = Methodref          #16.#97       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-   #11 = Methodref          #50.#98       // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #12 = Class              #99           // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-   #13 = Methodref          #12.#98       // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-   #14 = Fieldref           #16.#100      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-   #15 = Fieldref           #16.#101      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.oneByte:[B\n-   #16 = Class              #102          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n-   #17 = Integer            65536\n-   #18 = Fieldref           #16.#103      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.buffer:[B\n-   #19 = Fieldref           #16.#104      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.out:Ljava/io/OutputStream;\n-   #20 = Fieldref           #16.#105      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #21 = Class              #107          // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-   #22 = Methodref          #21.#109      // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-   #23 = Fieldref           #16.#110      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #24 = Fieldref           #1.#111       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n-   #25 = Methodref          #83.#112      // java/io/OutputStream.write:([B)V\n-   #26 = Methodref          #16.#113      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.finish:()V\n-   #27 = Methodref          #83.#114      // java/io/OutputStream.close:()V\n-   #28 = Fieldref           #16.#115      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.currentIndex:I\n-   #29 = Methodref          #16.#116      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.flushBuffer:()V\n-   #30 = Methodref          #83.#117      // java/io/OutputStream.write:(I)V\n-   #31 = Class              #118          // java/io/ByteArrayOutputStream\n-   #32 = Methodref          #31.#98       // java/io/ByteArrayOutputStream.\"<init>\":()V\n-   #33 = Class              #119          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-   #34 = Methodref          #33.#120      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-   #35 = Methodref          #83.#121      // java/io/OutputStream.write:([BII)V\n-   #36 = Class              #122          // java/lang/Throwable\n-   #37 = Methodref          #36.#123      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #38 = Methodref          #31.#124      // java/io/ByteArrayOutputStream.toByteArray:()[B\n-   #39 = Long               4l\n-   #41 = Methodref          #16.#125      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.writeLittleEndian:(IJ)V\n-   #42 = Methodref          #16.#126      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.writeCrc:()V\n-   #43 = Methodref          #127.#128     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #44 = Methodref          #16.#112      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.write:([B)V\n-   #45 = Methodref          #12.#129      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n-   #46 = Methodref          #12.#130      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n-   #47 = Methodref          #16.#131      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.mask:(J)J\n-   #48 = Methodref          #12.#132      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n-   #49 = Methodref          #106.#133     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-   #50 = Class              #134          // org/apache/commons/compress/compressors/CompressorOutputStream\n-   #51 = Utf8               MAX_COMPRESSED_BUFFER_SIZE\n-   #52 = Utf8               I\n-   #53 = Utf8               ConstantValue\n-   #54 = Utf8               out\n-   #55 = Utf8               Ljava/io/OutputStream;\n-   #56 = Utf8               params\n-   #57 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #58 = Utf8               checksum\n-   #59 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-   #60 = Utf8               oneByte\n-   #61 = Utf8               [B\n-   #62 = Utf8               buffer\n-   #63 = Utf8               currentIndex\n-   #64 = Utf8               consumer\n-   #65 = Class              #135          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-   #66 = Utf8               ByteConsumer\n-   #67 = Utf8               InnerClasses\n-   #68 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #69 = Utf8               mask\n-   #70 = Utf8               (J)J\n-   #71 = Utf8               Code\n-   #72 = Utf8               LineNumberTable\n-   #73 = Utf8               <init>\n-   #74 = Utf8               (Ljava/io/OutputStream;)V\n-   #75 = Utf8               Exceptions\n-   #76 = Class              #136          // java/io/IOException\n-   #77 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-   #78 = Utf8               close\n-   #79 = Utf8               ()V\n-   #80 = Utf8               StackMapTable\n-   #81 = Utf8               finish\n-   #82 = Utf8               flushBuffer\n-   #83 = Class              #137          // java/io/OutputStream\n-   #84 = Utf8               write\n-   #85 = Utf8               ([BII)V\n-   #86 = Utf8               (I)V\n-   #87 = Utf8               writeCrc\n-   #88 = Utf8               writeLittleEndian\n-   #89 = Utf8               (IJ)V\n-   #90 = Utf8               SourceFile\n-   #91 = Utf8               FramedSnappyCompressorOutputStream.java\n-   #92 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-   #93 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-   #94 = NameAndType        #138:#140     // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #95 = Class              #142          // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-   #96 = NameAndType        #143:#144     // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #97 = NameAndType        #73:#77       // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-   #98 = NameAndType        #73:#79       // \"<init>\":()V\n-   #99 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-  #100 = NameAndType        #58:#59       // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-  #101 = NameAndType        #60:#61       // oneByte:[B\n-  #102 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n-  #103 = NameAndType        #62:#61       // buffer:[B\n-  #104 = NameAndType        #54:#55       // out:Ljava/io/OutputStream;\n-  #105 = NameAndType        #56:#57       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #106 = Class              #145          // org/apache/commons/compress/utils/ByteUtils\n-  #107 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-  #108 = Utf8               OutputStreamByteConsumer\n-  #109 = NameAndType        #73:#74       // \"<init>\":(Ljava/io/OutputStream;)V\n-  #110 = NameAndType        #64:#68       // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-  #111 = NameAndType        #146:#61      // SZ_SIGNATURE:[B\n-  #112 = NameAndType        #84:#147      // write:([B)V\n-  #113 = NameAndType        #81:#79       // finish:()V\n-  #114 = NameAndType        #78:#79       // close:()V\n-  #115 = NameAndType        #63:#52       // currentIndex:I\n-  #116 = NameAndType        #82:#79       // flushBuffer:()V\n-  #117 = NameAndType        #84:#86       // write:(I)V\n-  #118 = Utf8               java/io/ByteArrayOutputStream\n-  #119 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-  #120 = NameAndType        #73:#148      // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #121 = NameAndType        #84:#85       // write:([BII)V\n-  #122 = Utf8               java/lang/Throwable\n-  #123 = NameAndType        #149:#150     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #124 = NameAndType        #151:#152     // toByteArray:()[B\n-  #125 = NameAndType        #88:#89       // writeLittleEndian:(IJ)V\n-  #126 = NameAndType        #87:#79       // writeCrc:()V\n-  #127 = Class              #153          // java/lang/System\n-  #128 = NameAndType        #154:#155     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #129 = NameAndType        #156:#85      // update:([BII)V\n-  #130 = NameAndType        #157:#158     // getValue:()J\n-  #131 = NameAndType        #69:#70       // mask:(J)J\n-  #132 = NameAndType        #159:#79      // reset:()V\n-  #133 = NameAndType        #160:#161     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #134 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #135 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-  #136 = Utf8               java/io/IOException\n-  #137 = Utf8               java/io/OutputStream\n-  #138 = Utf8               createParameterBuilder\n-  #139 = Utf8               Builder\n-  #140 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #141 = Class              #162          // org/apache/commons/compress/compressors/lz77support/Parameters\n-  #142 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #143 = Utf8               build\n-  #144 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #145 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #146 = Utf8               SZ_SIGNATURE\n-  #147 = Utf8               ([B)V\n-  #148 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #149 = Utf8               addSuppressed\n-  #150 = Utf8               (Ljava/lang/Throwable;)V\n-  #151 = Utf8               toByteArray\n-  #152 = Utf8               ()[B\n-  #153 = Utf8               java/lang/System\n-  #154 = Utf8               arraycopy\n-  #155 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #156 = Utf8               update\n-  #157 = Utf8               getValue\n-  #158 = Utf8               ()J\n-  #159 = Utf8               reset\n-  #160 = Utf8               toLittleEndian\n-  #161 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #162 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+    #3 = Long               2726488792l\n+    #5 = Long               4294967295l\n+    #7 = Class              #8            // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+    #8 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+    #9 = Integer            32768\n+   #10 = Methodref          #11.#12       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #11 = Class              #13           // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+   #12 = NameAndType        #14:#15       // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #13 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+   #14 = Utf8               createParameterBuilder\n+   #15 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #16 = Methodref          #17.#18       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #17 = Class              #19           // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #18 = NameAndType        #20:#21       // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #19 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #20 = Utf8               build\n+   #21 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #22 = Methodref          #23.#24       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #23 = Class              #25           // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+   #24 = NameAndType        #26:#27       // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #25 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream\n+   #26 = Utf8               <init>\n+   #27 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #28 = Methodref          #29.#30       // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+   #29 = Class              #31           // org/apache/commons/compress/compressors/CompressorOutputStream\n+   #30 = NameAndType        #26:#32       // \"<init>\":()V\n+   #31 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+   #32 = Utf8               ()V\n+   #33 = Class              #34           // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #34 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #35 = Methodref          #33.#30       // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+   #36 = Fieldref           #23.#37       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #37 = NameAndType        #38:#39       // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #38 = Utf8               checksum\n+   #39 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #40 = Fieldref           #23.#41       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.oneByte:[B\n+   #41 = NameAndType        #42:#43       // oneByte:[B\n+   #42 = Utf8               oneByte\n+   #43 = Utf8               [B\n+   #44 = Integer            65536\n+   #45 = Fieldref           #23.#46       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.buffer:[B\n+   #46 = NameAndType        #47:#43       // buffer:[B\n+   #47 = Utf8               buffer\n+   #48 = Fieldref           #23.#49       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.out:Ljava/io/OutputStream;\n+   #49 = NameAndType        #50:#51       // out:Ljava/io/OutputStream;\n+   #50 = Utf8               out\n+   #51 = Utf8               Ljava/io/OutputStream;\n+   #52 = Fieldref           #23.#53       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #53 = NameAndType        #54:#55       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #54 = Utf8               params\n+   #55 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #56 = Class              #57           // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #57 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #58 = Methodref          #56.#59       // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+   #59 = NameAndType        #26:#60       // \"<init>\":(Ljava/io/OutputStream;)V\n+   #60 = Utf8               (Ljava/io/OutputStream;)V\n+   #61 = Fieldref           #23.#62       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #62 = NameAndType        #63:#64       // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #63 = Utf8               consumer\n+   #64 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #65 = Fieldref           #1.#66        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n+   #66 = NameAndType        #67:#43       // SZ_SIGNATURE:[B\n+   #67 = Utf8               SZ_SIGNATURE\n+   #68 = Methodref          #69.#70       // java/io/OutputStream.write:([B)V\n+   #69 = Class              #71           // java/io/OutputStream\n+   #70 = NameAndType        #72:#73       // write:([B)V\n+   #71 = Utf8               java/io/OutputStream\n+   #72 = Utf8               write\n+   #73 = Utf8               ([B)V\n+   #74 = Methodref          #23.#75       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.finish:()V\n+   #75 = NameAndType        #76:#32       // finish:()V\n+   #76 = Utf8               finish\n+   #77 = Methodref          #69.#78       // java/io/OutputStream.close:()V\n+   #78 = NameAndType        #79:#32       // close:()V\n+   #79 = Utf8               close\n+   #80 = Fieldref           #23.#81       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.currentIndex:I\n+   #81 = NameAndType        #82:#83       // currentIndex:I\n+   #82 = Utf8               currentIndex\n+   #83 = Utf8               I\n+   #84 = Methodref          #23.#85       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.flushBuffer:()V\n+   #85 = NameAndType        #86:#32       // flushBuffer:()V\n+   #86 = Utf8               flushBuffer\n+   #87 = Methodref          #69.#88       // java/io/OutputStream.write:(I)V\n+   #88 = NameAndType        #72:#89       // write:(I)V\n+   #89 = Utf8               (I)V\n+   #90 = Class              #91           // java/io/ByteArrayOutputStream\n+   #91 = Utf8               java/io/ByteArrayOutputStream\n+   #92 = Methodref          #90.#30       // java/io/ByteArrayOutputStream.\"<init>\":()V\n+   #93 = Methodref          #11.#94       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #94 = NameAndType        #26:#95       // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #95 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #96 = Methodref          #69.#97       // java/io/OutputStream.write:([BII)V\n+   #97 = NameAndType        #72:#98       // write:([BII)V\n+   #98 = Utf8               ([BII)V\n+   #99 = Class              #100          // java/lang/Throwable\n+  #100 = Utf8               java/lang/Throwable\n+  #101 = Methodref          #99.#102      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #102 = NameAndType        #103:#104     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #103 = Utf8               addSuppressed\n+  #104 = Utf8               (Ljava/lang/Throwable;)V\n+  #105 = Methodref          #90.#106      // java/io/ByteArrayOutputStream.toByteArray:()[B\n+  #106 = NameAndType        #107:#108     // toByteArray:()[B\n+  #107 = Utf8               toByteArray\n+  #108 = Utf8               ()[B\n+  #109 = Long               4l\n+  #111 = Methodref          #23.#112      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.writeLittleEndian:(IJ)V\n+  #112 = NameAndType        #113:#114     // writeLittleEndian:(IJ)V\n+  #113 = Utf8               writeLittleEndian\n+  #114 = Utf8               (IJ)V\n+  #115 = Methodref          #23.#116      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.writeCrc:()V\n+  #116 = NameAndType        #117:#32      // writeCrc:()V\n+  #117 = Utf8               writeCrc\n+  #118 = Methodref          #119.#120     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #119 = Class              #121          // java/lang/System\n+  #120 = NameAndType        #122:#123     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #121 = Utf8               java/lang/System\n+  #122 = Utf8               arraycopy\n+  #123 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #124 = Methodref          #23.#70       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.write:([B)V\n+  #125 = Methodref          #33.#126      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+  #126 = NameAndType        #127:#98      // update:([BII)V\n+  #127 = Utf8               update\n+  #128 = Methodref          #33.#129      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+  #129 = NameAndType        #130:#131     // getValue:()J\n+  #130 = Utf8               getValue\n+  #131 = Utf8               ()J\n+  #132 = Methodref          #23.#133      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorOutputStream.mask:(J)J\n+  #133 = NameAndType        #134:#135     // mask:(J)J\n+  #134 = Utf8               mask\n+  #135 = Utf8               (J)J\n+  #136 = Methodref          #33.#137      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+  #137 = NameAndType        #138:#32      // reset:()V\n+  #138 = Utf8               reset\n+  #139 = Methodref          #140.#141     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #140 = Class              #142          // org/apache/commons/compress/utils/ByteUtils\n+  #141 = NameAndType        #143:#144     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #142 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #143 = Utf8               toLittleEndian\n+  #144 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #145 = Utf8               MAX_COMPRESSED_BUFFER_SIZE\n+  #146 = Utf8               ConstantValue\n+  #147 = Utf8               Code\n+  #148 = Utf8               LineNumberTable\n+  #149 = Utf8               Exceptions\n+  #150 = Class              #151          // java/io/IOException\n+  #151 = Utf8               java/io/IOException\n+  #152 = Utf8               StackMapTable\n+  #153 = Utf8               SourceFile\n+  #154 = Utf8               FramedSnappyCompressorOutputStream.java\n+  #155 = Utf8               InnerClasses\n+  #156 = Class              #157          // org/apache/commons/compress/compressors/lz77support/Parameters\n+  #157 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+  #158 = Utf8               Builder\n+  #159 = Utf8               OutputStreamByteConsumer\n+  #160 = Class              #161          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #161 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #162 = Utf8               ByteConsumer\n {\n   private static final int MAX_COMPRESSED_BUFFER_SIZE = 65536;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 65536\n \n   private final java.io.OutputStream out;\n@@ -211,19 +211,19 @@\n          3: lshr\n          4: lload_0\n          5: bipush        17\n          7: lshl\n          8: lor\n          9: lstore_0\n         10: lload_0\n-        11: ldc2_w        #2                  // long 2726488792l\n+        11: ldc2_w        #3                  // long 2726488792l\n         14: ladd\n         15: lstore_0\n         16: lload_0\n-        17: ldc2_w        #4                  // long 4294967295l\n+        17: ldc2_w        #5                  // long 4294967295l\n         20: land\n         21: lstore_0\n         22: lload_0\n         23: lreturn\n       LineNumberTable:\n         line 48: 0\n         line 49: 10\n@@ -233,18 +233,18 @@\n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #7                  // int 32768\n-         4: invokestatic  #8                  // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-         7: invokevirtual #9                  // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-        10: invokespecial #10                 // Method \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+         2: ldc           #9                  // int 32768\n+         4: invokestatic  #10                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         7: invokevirtual #16                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+        10: invokespecial #22                 // Method \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n         13: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 7\n         line 71: 10\n         line 73: 13\n     Exceptions:\n@@ -252,43 +252,43 @@\n \n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorOutputStream(java.io.OutputStream, org.apache.commons.compress.compressors.lz77support.Parameters) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Lorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #11                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #28                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #12                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+         5: new           #33                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n          8: dup\n-         9: invokespecial #13                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-        12: putfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+         9: invokespecial #35                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+        12: putfield      #36                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n         15: aload_0\n         16: iconst_1\n         17: newarray       byte\n-        19: putfield      #15                 // Field oneByte:[B\n+        19: putfield      #40                 // Field oneByte:[B\n         22: aload_0\n-        23: ldc           #17                 // int 65536\n+        23: ldc           #44                 // int 65536\n         25: newarray       byte\n-        27: putfield      #18                 // Field buffer:[B\n+        27: putfield      #45                 // Field buffer:[B\n         30: aload_0\n         31: aload_1\n-        32: putfield      #19                 // Field out:Ljava/io/OutputStream;\n+        32: putfield      #48                 // Field out:Ljava/io/OutputStream;\n         35: aload_0\n         36: aload_2\n-        37: putfield      #20                 // Field params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+        37: putfield      #52                 // Field params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n         40: aload_0\n-        41: new           #21                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+        41: new           #56                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n         44: dup\n         45: aload_1\n-        46: invokespecial #22                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-        49: putfield      #23                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+        46: invokespecial #58                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+        49: putfield      #61                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n         52: aload_1\n-        53: getstatic     #24                 // Field org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n-        56: invokevirtual #25                 // Method java/io/OutputStream.write:([B)V\n+        53: getstatic     #65                 // Field org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n+        56: invokevirtual #68                 // Method java/io/OutputStream.write:([B)V\n         59: return\n       LineNumberTable:\n         line 83: 0\n         line 55: 4\n         line 57: 15\n         line 58: 22\n         line 84: 30\n@@ -301,23 +301,23 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #26                 // Method finish:()V\n+         1: invokevirtual #74                 // Method finish:()V\n          4: aload_0\n-         5: getfield      #19                 // Field out:Ljava/io/OutputStream;\n-         8: invokevirtual #27                 // Method java/io/OutputStream.close:()V\n+         5: getfield      #48                 // Field out:Ljava/io/OutputStream;\n+         8: invokevirtual #77                 // Method java/io/OutputStream.close:()V\n         11: goto          24\n         14: astore_1\n         15: aload_0\n-        16: getfield      #19                 // Field out:Ljava/io/OutputStream;\n-        19: invokevirtual #27                 // Method java/io/OutputStream.close:()V\n+        16: getfield      #48                 // Field out:Ljava/io/OutputStream;\n+        19: invokevirtual #77                 // Method java/io/OutputStream.close:()V\n         22: aload_1\n         23: athrow\n         24: return\n       Exception table:\n          from    to  target type\n              0     4    14   any\n       LineNumberTable:\n@@ -336,18 +336,18 @@\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #28                 // Field currentIndex:I\n+         1: getfield      #80                 // Field currentIndex:I\n          4: ifle          11\n          7: aload_0\n-         8: invokespecial #29                 // Method flushBuffer:()V\n+         8: invokespecial #84                 // Method flushBuffer:()V\n         11: return\n       LineNumberTable:\n         line 105: 0\n         line 106: 7\n         line 108: 11\n       StackMapTable: number_of_entries = 1\n         frame_type = 11 /* same */\n@@ -356,71 +356,71 @@\n \n   private void flushBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field out:Ljava/io/OutputStream;\n+         1: getfield      #48                 // Field out:Ljava/io/OutputStream;\n          4: iconst_0\n-         5: invokevirtual #30                 // Method java/io/OutputStream.write:(I)V\n-         8: new           #31                 // class java/io/ByteArrayOutputStream\n+         5: invokevirtual #87                 // Method java/io/OutputStream.write:(I)V\n+         8: new           #90                 // class java/io/ByteArrayOutputStream\n         11: dup\n-        12: invokespecial #32                 // Method java/io/ByteArrayOutputStream.\"<init>\":()V\n+        12: invokespecial #92                 // Method java/io/ByteArrayOutputStream.\"<init>\":()V\n         15: astore_1\n-        16: new           #33                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+        16: new           #11                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n         19: dup\n         20: aload_1\n         21: aload_0\n-        22: getfield      #28                 // Field currentIndex:I\n+        22: getfield      #80                 // Field currentIndex:I\n         25: i2l\n         26: aload_0\n-        27: getfield      #20                 // Field params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-        30: invokespecial #34                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+        27: getfield      #52                 // Field params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+        30: invokespecial #93                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n         33: astore_2\n         34: aload_2\n         35: aload_0\n-        36: getfield      #18                 // Field buffer:[B\n+        36: getfield      #45                 // Field buffer:[B\n         39: iconst_0\n         40: aload_0\n-        41: getfield      #28                 // Field currentIndex:I\n-        44: invokevirtual #35                 // Method java/io/OutputStream.write:([BII)V\n+        41: getfield      #80                 // Field currentIndex:I\n+        44: invokevirtual #96                 // Method java/io/OutputStream.write:([BII)V\n         47: aload_2\n-        48: invokevirtual #27                 // Method java/io/OutputStream.close:()V\n+        48: invokevirtual #77                 // Method java/io/OutputStream.close:()V\n         51: goto          72\n         54: astore_3\n         55: aload_2\n-        56: invokevirtual #27                 // Method java/io/OutputStream.close:()V\n+        56: invokevirtual #77                 // Method java/io/OutputStream.close:()V\n         59: goto          70\n         62: astore        4\n         64: aload_3\n         65: aload         4\n-        67: invokevirtual #37                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        67: invokevirtual #101                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         70: aload_3\n         71: athrow\n         72: aload_1\n-        73: invokevirtual #38                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B\n+        73: invokevirtual #105                // Method java/io/ByteArrayOutputStream.toByteArray:()[B\n         76: astore_2\n         77: aload_0\n         78: iconst_3\n         79: aload_2\n         80: arraylength\n         81: i2l\n-        82: ldc2_w        #39                 // long 4l\n+        82: ldc2_w        #109                // long 4l\n         85: ladd\n-        86: invokespecial #41                 // Method writeLittleEndian:(IJ)V\n+        86: invokespecial #111                // Method writeLittleEndian:(IJ)V\n         89: aload_0\n-        90: invokespecial #42                 // Method writeCrc:()V\n+        90: invokespecial #115                // Method writeCrc:()V\n         93: aload_0\n-        94: getfield      #19                 // Field out:Ljava/io/OutputStream;\n+        94: getfield      #48                 // Field out:Ljava/io/OutputStream;\n         97: aload_2\n-        98: invokevirtual #25                 // Method java/io/OutputStream.write:([B)V\n+        98: invokevirtual #68                 // Method java/io/OutputStream.write:([B)V\n        101: aload_0\n        102: iconst_0\n-       103: putfield      #28                 // Field currentIndex:I\n+       103: putfield      #80                 // Field currentIndex:I\n        106: return\n       Exception table:\n          from    to  target type\n             34    47    54   Class java/lang/Throwable\n             55    59    62   Class java/lang/Throwable\n       LineNumberTable:\n         line 111: 0\n@@ -452,59 +452,59 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #28                 // Field currentIndex:I\n+         1: getfield      #80                 // Field currentIndex:I\n          4: iload_3\n          5: iadd\n-         6: ldc           #17                 // int 65536\n+         6: ldc           #44                 // int 65536\n          8: if_icmple     56\n         11: aload_0\n-        12: invokespecial #29                 // Method flushBuffer:()V\n+        12: invokespecial #84                 // Method flushBuffer:()V\n         15: iload_3\n-        16: ldc           #17                 // int 65536\n+        16: ldc           #44                 // int 65536\n         18: if_icmple     56\n         21: aload_1\n         22: iload_2\n         23: aload_0\n-        24: getfield      #18                 // Field buffer:[B\n+        24: getfield      #45                 // Field buffer:[B\n         27: iconst_0\n-        28: ldc           #17                 // int 65536\n-        30: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        28: ldc           #44                 // int 65536\n+        30: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         33: iload_2\n-        34: ldc           #17                 // int 65536\n+        34: ldc           #44                 // int 65536\n         36: iadd\n         37: istore_2\n         38: iload_3\n-        39: ldc           #17                 // int 65536\n+        39: ldc           #44                 // int 65536\n         41: isub\n         42: istore_3\n         43: aload_0\n-        44: ldc           #17                 // int 65536\n-        46: putfield      #28                 // Field currentIndex:I\n+        44: ldc           #44                 // int 65536\n+        46: putfield      #80                 // Field currentIndex:I\n         49: aload_0\n-        50: invokespecial #29                 // Method flushBuffer:()V\n+        50: invokespecial #84                 // Method flushBuffer:()V\n         53: goto          15\n         56: aload_1\n         57: iload_2\n         58: aload_0\n-        59: getfield      #18                 // Field buffer:[B\n+        59: getfield      #45                 // Field buffer:[B\n         62: aload_0\n-        63: getfield      #28                 // Field currentIndex:I\n+        63: getfield      #80                 // Field currentIndex:I\n         66: iload_3\n-        67: invokestatic  #43                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        67: invokestatic  #118                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         70: aload_0\n         71: dup\n-        72: getfield      #28                 // Field currentIndex:I\n+        72: getfield      #80                 // Field currentIndex:I\n         75: iload_3\n         76: iadd\n-        77: putfield      #28                 // Field currentIndex:I\n+        77: putfield      #80                 // Field currentIndex:I\n         80: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 11\n         line 127: 15\n         line 128: 21\n         line 129: 33\n@@ -522,56 +522,56 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #15                 // Field oneByte:[B\n+         1: getfield      #40                 // Field oneByte:[B\n          4: iconst_0\n          5: iload_1\n          6: sipush        255\n          9: iand\n         10: i2b\n         11: bastore\n         12: aload_0\n         13: aload_0\n-        14: getfield      #15                 // Field oneByte:[B\n-        17: invokevirtual #44                 // Method write:([B)V\n+        14: getfield      #40                 // Field oneByte:[B\n+        17: invokevirtual #124                // Method write:([B)V\n         20: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 12\n         line 143: 20\n     Exceptions:\n       throws java.io.IOException\n \n   private void writeCrc() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+         1: getfield      #36                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n          4: aload_0\n-         5: getfield      #18                 // Field buffer:[B\n+         5: getfield      #45                 // Field buffer:[B\n          8: iconst_0\n          9: aload_0\n-        10: getfield      #28                 // Field currentIndex:I\n-        13: invokevirtual #45                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+        10: getfield      #80                 // Field currentIndex:I\n+        13: invokevirtual #125                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n         16: aload_0\n         17: iconst_4\n         18: aload_0\n-        19: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        22: invokevirtual #46                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n-        25: invokestatic  #47                 // Method mask:(J)J\n-        28: invokespecial #41                 // Method writeLittleEndian:(IJ)V\n+        19: getfield      #36                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        22: invokevirtual #128                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+        25: invokestatic  #132                // Method mask:(J)J\n+        28: invokespecial #111                // Method writeLittleEndian:(IJ)V\n         31: aload_0\n-        32: getfield      #14                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        35: invokevirtual #48                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+        32: getfield      #36                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        35: invokevirtual #136                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n         38: return\n       LineNumberTable:\n         line 146: 0\n         line 147: 16\n         line 148: 31\n         line 149: 38\n     Exceptions:\n@@ -579,23 +579,23 @@\n \n   private void writeLittleEndian(int, long) throws java.io.IOException;\n     descriptor: (IJ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n-         1: getfield      #23                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+         1: getfield      #61                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n          4: lload_2\n          5: iload_1\n-         6: invokestatic  #49                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+         6: invokestatic  #139                // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n          9: return\n       LineNumberTable:\n         line 152: 0\n         line 153: 9\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"FramedSnappyCompressorOutputStream.java\"\n InnerClasses:\n-  public static #66= #65 of #106;         // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #108= #21 of #106;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #139= #95 of #141;        // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n+  public static #158= #17 of #156;        // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n+  public static #159= #56 of #140;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #162= #160 of #140;       // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n"}]}
