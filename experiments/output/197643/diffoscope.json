{"diffoscope-json-version": 1, "source1": "first/ImportControlLoader.class", "source2": "second/ImportControlLoader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -113,31 +113,31 @@\n     private static PkgImportControl load(final InputSource source, final URI uri) throws CheckstyleException {\n         try {\n             final ImportControlLoader loader = new ImportControlLoader();\n             loader.parseInputSource(source);\n             return loader.getRoot();\n         }\n         catch (final ParserConfigurationException | SAXException ex) {\n-            throw new CheckstyleException(\"unable to parse \" + uri + \" - \" + ex.getMessage(), (Throwable)ex);\n+            throw new CheckstyleException(\"unable to parse \" + String.valueOf((Object)uri) + \" - \" + ex.getMessage(), (Throwable)ex);\n         }\n         catch (final IOException ex2) {\n-            throw new CheckstyleException(\"unable to read \" + uri, (Throwable)ex2);\n+            throw new CheckstyleException(\"unable to read \" + String.valueOf((Object)uri), (Throwable)ex2);\n         }\n     }\n     \n     private static PkgImportControl loadUri(final URI uri) throws CheckstyleException {\n         try (final InputStream inputStream = uri.toURL().openStream()) {\n             final InputSource source = new InputSource(inputStream);\n             return load(source, uri);\n         }\n         catch (final MalformedURLException ex) {\n-            throw new CheckstyleException(\"syntax error in url \" + uri, (Throwable)ex);\n+            throw new CheckstyleException(\"syntax error in url \" + String.valueOf((Object)uri), (Throwable)ex);\n         }\n         catch (final IOException ex2) {\n-            throw new CheckstyleException(\"unable to find \" + uri, (Throwable)ex2);\n+            throw new CheckstyleException(\"unable to find \" + String.valueOf((Object)uri), (Throwable)ex2);\n         }\n     }\n     \n     private PkgImportControl getRoot() {\n         return (PkgImportControl)this.stack.peek();\n     }\n     \n"}]}
