{"diffoscope-json-version": 1, "source1": "first/BaseNCodec.class", "source2": "second/BaseNCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,188 +1,188 @@\n-  SHA-256 checksum 6502b63baa5ab481d06aea0475d6a6cbd01c0271e79df2fc5c2ad8e39ad503ec\n+  SHA-256 checksum 1e9564736df4baea9aa24a2d56861b804cc184f1220efb70621dcbe5a5e7729e\n   Compiled from \"BaseNCodec.java\"\n public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/codec/binary/BaseNCodec\n-  super_class: #41                        // java/lang/Object\n+  super_class: #8                         // java/lang/Object\n   interfaces: 2, fields: 13, methods: 24, attributes: 2\n Constant pool:\n-    #1 = Class              #112          // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #1.#113       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n-    #3 = Methodref          #41.#114      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #1.#115       // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n-    #5 = Fieldref           #1.#116       // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n-    #6 = Fieldref           #1.#117       // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n-    #7 = Fieldref           #1.#118       // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n-    #8 = Fieldref           #1.#119       // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n-    #9 = Fieldref           #1.#120       // org/apache/commons/codec/binary/BaseNCodec.pad:B\n-   #10 = Fieldref           #32.#121      // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #11 = Fieldref           #32.#122      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #12 = Fieldref           #32.#123      // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-   #13 = Methodref          #1.#124       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n-   #14 = Methodref          #125.#126     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #15 = Methodref          #1.#127       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #16 = Methodref          #1.#128       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #17 = Methodref          #129.#130     // java/lang/Math.min:(II)I\n-   #18 = Fieldref           #32.#131      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #19 = Class              #132          // \"[B\"\n-   #20 = Class              #133          // org/apache/commons/codec/EncoderException\n-   #21 = String             #134          // Parameter supplied to Base-N encode is not a byte[]\n-   #22 = Methodref          #20.#135      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #1.#136       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n-   #24 = Methodref          #137.#138     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-   #25 = Methodref          #1.#139       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n-   #26 = Class              #140          // java/lang/String\n-   #27 = Methodref          #1.#141       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n-   #28 = Class              #142          // org/apache/commons/codec/DecoderException\n-   #29 = String             #143          // Parameter supplied to Base-N decode is not a byte[] or a String\n-   #30 = Methodref          #28.#135      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #31 = Methodref          #137.#144     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #32 = Class              #145          // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #33 = Methodref          #32.#114      // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-   #34 = Methodref          #1.#146       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #35 = Methodref          #1.#147       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #36 = Methodref          #1.#148       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n-   #37 = Methodref          #1.#149       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #38 = Methodref          #1.#150       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n-   #39 = Methodref          #1.#151       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n-   #40 = Methodref          #1.#152       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n-   #41 = Class              #153          // java/lang/Object\n-   #42 = Class              #154          // org/apache/commons/codec/BinaryEncoder\n-   #43 = Class              #155          // org/apache/commons/codec/BinaryDecoder\n-   #44 = Utf8               Context\n-   #45 = Utf8               InnerClasses\n-   #46 = Utf8               EOF\n-   #47 = Utf8               I\n-   #48 = Utf8               ConstantValue\n-   #49 = Integer            -1\n-   #50 = Utf8               MIME_CHUNK_SIZE\n-   #51 = Integer            76\n-   #52 = Utf8               PEM_CHUNK_SIZE\n-   #53 = Integer            64\n-   #54 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n-   #55 = Integer            2\n-   #56 = Utf8               DEFAULT_BUFFER_SIZE\n-   #57 = Integer            8192\n-   #58 = Utf8               MASK_8BITS\n-   #59 = Integer            255\n-   #60 = Utf8               PAD_DEFAULT\n-   #61 = Utf8               B\n-   #62 = Integer            61\n-   #63 = Utf8               PAD\n-   #64 = Utf8               Deprecated\n-   #65 = Utf8               RuntimeVisibleAnnotations\n-   #66 = Utf8               Ljava/lang/Deprecated;\n-   #67 = Utf8               pad\n-   #68 = Utf8               unencodedBlockSize\n-   #69 = Utf8               encodedBlockSize\n-   #70 = Utf8               lineLength\n-   #71 = Utf8               chunkSeparatorLength\n-   #72 = Utf8               <init>\n-   #73 = Utf8               (IIII)V\n-   #74 = Utf8               Code\n-   #75 = Utf8               LineNumberTable\n-   #76 = Utf8               (IIIIB)V\n-   #77 = Utf8               StackMapTable\n-   #78 = Utf8               hasData\n-   #79 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #80 = Utf8               available\n-   #81 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #82 = Utf8               getDefaultBufferSize\n-   #83 = Utf8               ()I\n-   #84 = Utf8               resizeBuffer\n-   #85 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #86 = Utf8               ensureBufferSize\n-   #87 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #88 = Utf8               readResults\n-   #89 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #90 = Utf8               isWhiteSpace\n-   #91 = Utf8               (B)Z\n-   #92 = Utf8               encode\n-   #93 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #94 = Utf8               Exceptions\n-   #95 = Utf8               encodeToString\n-   #96 = Utf8               ([B)Ljava/lang/String;\n-   #97 = Utf8               encodeAsString\n-   #98 = Utf8               decode\n-   #99 = Utf8               (Ljava/lang/String;)[B\n-  #100 = Utf8               ([B)[B\n-  #101 = Utf8               ([BII)[B\n-  #102 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #103 = Utf8               isInAlphabet\n-  #104 = Utf8               ([BZ)Z\n-  #105 = Utf8               (Ljava/lang/String;)Z\n-  #106 = Utf8               containsAlphabetOrPad\n-  #107 = Utf8               ([B)Z\n-  #108 = Utf8               getEncodedLength\n-  #109 = Utf8               ([B)J\n-  #110 = Utf8               SourceFile\n-  #111 = Utf8               BaseNCodec.java\n-  #112 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #113 = NameAndType        #72:#76       // \"<init>\":(IIIIB)V\n-  #114 = NameAndType        #72:#156      // \"<init>\":()V\n-  #115 = NameAndType        #63:#61       // PAD:B\n-  #116 = NameAndType        #68:#47       // unencodedBlockSize:I\n-  #117 = NameAndType        #69:#47       // encodedBlockSize:I\n-  #118 = NameAndType        #70:#47       // lineLength:I\n-  #119 = NameAndType        #71:#47       // chunkSeparatorLength:I\n-  #120 = NameAndType        #67:#61       // pad:B\n-  #121 = NameAndType        #157:#132     // buffer:[B\n-  #122 = NameAndType        #158:#47      // pos:I\n-  #123 = NameAndType        #159:#47      // readPos:I\n-  #124 = NameAndType        #82:#83       // getDefaultBufferSize:()I\n-  #125 = Class              #160          // java/lang/System\n-  #126 = NameAndType        #161:#162     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #127 = NameAndType        #84:#85       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #128 = NameAndType        #80:#81       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #129 = Class              #163          // java/lang/Math\n-  #130 = NameAndType        #164:#165     // min:(II)I\n-  #131 = NameAndType        #166:#167     // eof:Z\n-  #132 = Utf8               [B\n-  #133 = Utf8               org/apache/commons/codec/EncoderException\n-  #134 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n-  #135 = NameAndType        #72:#168      // \"<init>\":(Ljava/lang/String;)V\n-  #136 = NameAndType        #92:#100      // encode:([B)[B\n-  #137 = Class              #169          // org/apache/commons/codec/binary/StringUtils\n-  #138 = NameAndType        #170:#96      // newStringUtf8:([B)Ljava/lang/String;\n-  #139 = NameAndType        #98:#100      // decode:([B)[B\n-  #140 = Utf8               java/lang/String\n-  #141 = NameAndType        #98:#99       // decode:(Ljava/lang/String;)[B\n-  #142 = Utf8               org/apache/commons/codec/DecoderException\n-  #143 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n-  #144 = NameAndType        #171:#99      // getBytesUtf8:(Ljava/lang/String;)[B\n-  #145 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #146 = NameAndType        #98:#102      // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #147 = NameAndType        #88:#89       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #148 = NameAndType        #92:#101      // encode:([BII)[B\n-  #149 = NameAndType        #92:#102      // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #150 = NameAndType        #103:#91      // isInAlphabet:(B)Z\n-  #151 = NameAndType        #90:#91       // isWhiteSpace:(B)Z\n-  #152 = NameAndType        #103:#104     // isInAlphabet:([BZ)Z\n-  #153 = Utf8               java/lang/Object\n-  #154 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #155 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #156 = Utf8               ()V\n-  #157 = Utf8               buffer\n-  #158 = Utf8               pos\n-  #159 = Utf8               readPos\n-  #160 = Utf8               java/lang/System\n-  #161 = Utf8               arraycopy\n-  #162 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #163 = Utf8               java/lang/Math\n-  #164 = Utf8               min\n-  #165 = Utf8               (II)I\n-  #166 = Utf8               eof\n-  #167 = Utf8               Z\n-  #168 = Utf8               (Ljava/lang/String;)V\n-  #169 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #170 = Utf8               newStringUtf8\n-  #171 = Utf8               getBytesUtf8\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+    #3 = Methodref          #1.#4         // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n+    #4 = NameAndType        #5:#6         // \"<init>\":(IIIIB)V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (IIIIB)V\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               ()V\n+   #12 = Fieldref           #1.#13        // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n+   #13 = NameAndType        #14:#15       // PAD:B\n+   #14 = Utf8               PAD\n+   #15 = Utf8               B\n+   #16 = Fieldref           #1.#17        // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n+   #17 = NameAndType        #18:#19       // unencodedBlockSize:I\n+   #18 = Utf8               unencodedBlockSize\n+   #19 = Utf8               I\n+   #20 = Fieldref           #1.#21        // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n+   #21 = NameAndType        #22:#19       // encodedBlockSize:I\n+   #22 = Utf8               encodedBlockSize\n+   #23 = Fieldref           #1.#24        // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n+   #24 = NameAndType        #25:#19       // lineLength:I\n+   #25 = Utf8               lineLength\n+   #26 = Fieldref           #1.#27        // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n+   #27 = NameAndType        #28:#19       // chunkSeparatorLength:I\n+   #28 = Utf8               chunkSeparatorLength\n+   #29 = Fieldref           #1.#30        // org/apache/commons/codec/binary/BaseNCodec.pad:B\n+   #30 = NameAndType        #31:#15       // pad:B\n+   #31 = Utf8               pad\n+   #32 = Fieldref           #33.#34       // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #33 = Class              #35           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #34 = NameAndType        #36:#37       // buffer:[B\n+   #35 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #36 = Utf8               buffer\n+   #37 = Utf8               [B\n+   #38 = Fieldref           #33.#39       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #39 = NameAndType        #40:#19       // pos:I\n+   #40 = Utf8               pos\n+   #41 = Fieldref           #33.#42       // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+   #42 = NameAndType        #43:#19       // readPos:I\n+   #43 = Utf8               readPos\n+   #44 = Methodref          #1.#45        // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n+   #45 = NameAndType        #46:#47       // getDefaultBufferSize:()I\n+   #46 = Utf8               getDefaultBufferSize\n+   #47 = Utf8               ()I\n+   #48 = Methodref          #49.#50       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #49 = Class              #51           // java/lang/System\n+   #50 = NameAndType        #52:#53       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #51 = Utf8               java/lang/System\n+   #52 = Utf8               arraycopy\n+   #53 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #54 = Methodref          #1.#55        // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #55 = NameAndType        #56:#57       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #56 = Utf8               resizeBuffer\n+   #57 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #58 = Methodref          #1.#59        // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #59 = NameAndType        #60:#61       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #60 = Utf8               available\n+   #61 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #62 = Methodref          #63.#64       // java/lang/Math.min:(II)I\n+   #63 = Class              #65           // java/lang/Math\n+   #64 = NameAndType        #66:#67       // min:(II)I\n+   #65 = Utf8               java/lang/Math\n+   #66 = Utf8               min\n+   #67 = Utf8               (II)I\n+   #68 = Fieldref           #33.#69       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #69 = NameAndType        #70:#71       // eof:Z\n+   #70 = Utf8               eof\n+   #71 = Utf8               Z\n+   #72 = Class              #37           // \"[B\"\n+   #73 = Class              #74           // org/apache/commons/codec/EncoderException\n+   #74 = Utf8               org/apache/commons/codec/EncoderException\n+   #75 = String             #76           // Parameter supplied to Base-N encode is not a byte[]\n+   #76 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n+   #77 = Methodref          #73.#78       // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #78 = NameAndType        #5:#79        // \"<init>\":(Ljava/lang/String;)V\n+   #79 = Utf8               (Ljava/lang/String;)V\n+   #80 = Methodref          #1.#81        // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n+   #81 = NameAndType        #82:#83       // encode:([B)[B\n+   #82 = Utf8               encode\n+   #83 = Utf8               ([B)[B\n+   #84 = Methodref          #85.#86       // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+   #85 = Class              #87           // org/apache/commons/codec/binary/StringUtils\n+   #86 = NameAndType        #88:#89       // newStringUtf8:([B)Ljava/lang/String;\n+   #87 = Utf8               org/apache/commons/codec/binary/StringUtils\n+   #88 = Utf8               newStringUtf8\n+   #89 = Utf8               ([B)Ljava/lang/String;\n+   #90 = Methodref          #1.#91        // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n+   #91 = NameAndType        #92:#83       // decode:([B)[B\n+   #92 = Utf8               decode\n+   #93 = Class              #94           // java/lang/String\n+   #94 = Utf8               java/lang/String\n+   #95 = Methodref          #1.#96        // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n+   #96 = NameAndType        #92:#97       // decode:(Ljava/lang/String;)[B\n+   #97 = Utf8               (Ljava/lang/String;)[B\n+   #98 = Class              #99           // org/apache/commons/codec/DecoderException\n+   #99 = Utf8               org/apache/commons/codec/DecoderException\n+  #100 = String             #101          // Parameter supplied to Base-N decode is not a byte[] or a String\n+  #101 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n+  #102 = Methodref          #98.#78       // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #103 = Methodref          #85.#104      // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+  #104 = NameAndType        #105:#97      // getBytesUtf8:(Ljava/lang/String;)[B\n+  #105 = Utf8               getBytesUtf8\n+  #106 = Methodref          #33.#9        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+  #107 = Methodref          #1.#108       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #108 = NameAndType        #92:#109      // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #109 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #110 = Methodref          #1.#111       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #111 = NameAndType        #112:#113     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #112 = Utf8               readResults\n+  #113 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #114 = Methodref          #1.#115       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n+  #115 = NameAndType        #82:#116      // encode:([BII)[B\n+  #116 = Utf8               ([BII)[B\n+  #117 = Methodref          #1.#118       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #118 = NameAndType        #82:#109      // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #119 = Methodref          #1.#120       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n+  #120 = NameAndType        #121:#122     // isInAlphabet:(B)Z\n+  #121 = Utf8               isInAlphabet\n+  #122 = Utf8               (B)Z\n+  #123 = Methodref          #1.#124       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n+  #124 = NameAndType        #125:#122     // isWhiteSpace:(B)Z\n+  #125 = Utf8               isWhiteSpace\n+  #126 = Methodref          #1.#127       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n+  #127 = NameAndType        #121:#128     // isInAlphabet:([BZ)Z\n+  #128 = Utf8               ([BZ)Z\n+  #129 = Class              #130          // org/apache/commons/codec/BinaryEncoder\n+  #130 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #131 = Class              #132          // org/apache/commons/codec/BinaryDecoder\n+  #132 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #133 = Utf8               EOF\n+  #134 = Utf8               ConstantValue\n+  #135 = Integer            -1\n+  #136 = Utf8               MIME_CHUNK_SIZE\n+  #137 = Integer            76\n+  #138 = Utf8               PEM_CHUNK_SIZE\n+  #139 = Integer            64\n+  #140 = Utf8               DEFAULT_BUFFER_RESIZE_FACTOR\n+  #141 = Integer            2\n+  #142 = Utf8               DEFAULT_BUFFER_SIZE\n+  #143 = Integer            8192\n+  #144 = Utf8               MASK_8BITS\n+  #145 = Integer            255\n+  #146 = Utf8               PAD_DEFAULT\n+  #147 = Integer            61\n+  #148 = Utf8               Deprecated\n+  #149 = Utf8               RuntimeVisibleAnnotations\n+  #150 = Utf8               Ljava/lang/Deprecated;\n+  #151 = Utf8               (IIII)V\n+  #152 = Utf8               Code\n+  #153 = Utf8               LineNumberTable\n+  #154 = Utf8               StackMapTable\n+  #155 = Utf8               hasData\n+  #156 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+  #157 = Utf8               ensureBufferSize\n+  #158 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #159 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #160 = Utf8               Exceptions\n+  #161 = Utf8               encodeToString\n+  #162 = Utf8               encodeAsString\n+  #163 = Utf8               (Ljava/lang/String;)Z\n+  #164 = Utf8               containsAlphabetOrPad\n+  #165 = Utf8               ([B)Z\n+  #166 = Utf8               getEncodedLength\n+  #167 = Utf8               ([B)J\n+  #168 = Utf8               SourceFile\n+  #169 = Utf8               BaseNCodec.java\n+  #170 = Utf8               InnerClasses\n+  #171 = Utf8               Context\n {\n   static final int EOF = -1;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   public static final int MIME_CHUNK_SIZE = 76;\n@@ -217,15 +217,15 @@\n \n   protected final byte PAD = 61;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     ConstantValue: int 61\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #66()\n+      0: #150()\n         java.lang.Deprecated\n \n   protected final byte pad;\n     descriptor: B\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   private final int unencodedBlockSize;\n@@ -251,36 +251,36 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: bipush        61\n-         8: invokespecial #2                  // Method \"<init>\":(IIIIB)V\n+         8: invokespecial #3                  // Method \"<init>\":(IIIIB)V\n         11: return\n       LineNumberTable:\n         line 192: 0\n         line 193: 11\n \n   protected org.apache.commons.codec.binary.BaseNCodec(int, int, int, int, byte);\n     descriptor: (IIIIB)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=7, args_size=6\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        61\n-         7: putfield      #4                  // Field PAD:B\n+         7: putfield      #12                 // Field PAD:B\n         10: aload_0\n         11: iload_1\n-        12: putfield      #5                  // Field unencodedBlockSize:I\n+        12: putfield      #16                 // Field unencodedBlockSize:I\n         15: aload_0\n         16: iload_2\n-        17: putfield      #6                  // Field encodedBlockSize:I\n+        17: putfield      #20                 // Field encodedBlockSize:I\n         20: iload_3\n         21: ifle          33\n         24: iload         4\n         26: ifle          33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n@@ -291,21 +291,21 @@\n         42: iload_3\n         43: iload_2\n         44: idiv\n         45: iload_2\n         46: imul\n         47: goto          51\n         50: iconst_0\n-        51: putfield      #7                  // Field lineLength:I\n+        51: putfield      #23                 // Field lineLength:I\n         54: aload_0\n         55: iload         4\n-        57: putfield      #8                  // Field chunkSeparatorLength:I\n+        57: putfield      #26                 // Field chunkSeparatorLength:I\n         60: aload_0\n         61: iload         5\n-        63: putfield      #9                  // Field pad:B\n+        63: putfield      #29                 // Field pad:B\n         66: return\n       LineNumberTable:\n         line 205: 0\n         line 159: 4\n         line 206: 10\n         line 207: 15\n         line 208: 20\n@@ -331,15 +331,15 @@\n \n   boolean hasData(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 222: 0\n@@ -350,20 +350,20 @@\n \n   int available(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        19\n          7: aload_1\n-         8: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+         8: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         11: aload_1\n-        12: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        12: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         15: isub\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n         line 232: 0\n       StackMapTable: number_of_entries = 2\n@@ -383,49 +383,49 @@\n \n   private byte[] resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n-         1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnonnull     30\n          7: aload_1\n          8: aload_0\n-         9: invokevirtual #13                 // Method getDefaultBufferSize:()I\n+         9: invokevirtual #44                 // Method getDefaultBufferSize:()I\n         12: newarray       byte\n-        14: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        14: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         17: aload_1\n         18: iconst_0\n-        19: putfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        19: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         22: aload_1\n         23: iconst_0\n-        24: putfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        24: putfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         27: goto          60\n         30: aload_1\n-        31: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        31: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         34: arraylength\n         35: iconst_2\n         36: imul\n         37: newarray       byte\n         39: astore_2\n         40: aload_1\n-        41: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        41: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         44: iconst_0\n         45: aload_2\n         46: iconst_0\n         47: aload_1\n-        48: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        48: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         51: arraylength\n-        52: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: aload_1\n         56: aload_2\n-        57: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        57: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         60: aload_1\n-        61: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        61: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         64: areturn\n       LineNumberTable:\n         line 249: 0\n         line 250: 7\n         line 251: 17\n         line 252: 22\n         line 254: 30\n@@ -438,30 +438,30 @@\n \n   protected byte[] ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n-         1: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         1: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          4: ifnull        21\n          7: aload_2\n-         8: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         8: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         11: arraylength\n         12: aload_2\n-        13: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        13: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         16: iload_1\n         17: iadd\n         18: if_icmpge     27\n         21: aload_0\n         22: aload_2\n-        23: invokespecial #15                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+        23: invokespecial #54                 // Method resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n         26: areturn\n         27: aload_2\n-        28: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        28: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         31: areturn\n       LineNumberTable:\n         line 269: 0\n         line 270: 21\n         line 272: 27\n       StackMapTable: number_of_entries = 2\n         frame_type = 21 /* same */\n@@ -469,48 +469,48 @@\n \n   int readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n     flags: (0x0000)\n     Code:\n       stack=5, locals=6, args_size=5\n          0: aload         4\n-         2: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+         2: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n          5: ifnull        71\n          8: aload_0\n          9: aload         4\n-        11: invokevirtual #16                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        11: invokevirtual #58                 // Method available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         14: iload_3\n-        15: invokestatic  #17                 // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #62                 // Method java/lang/Math.min:(II)I\n         18: istore        5\n         20: aload         4\n-        22: getfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        22: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         25: aload         4\n-        27: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        27: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         30: aload_1\n         31: iload_2\n         32: iload         5\n-        34: invokestatic  #14                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        34: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         37: aload         4\n         39: dup\n-        40: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        40: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         43: iload         5\n         45: iadd\n-        46: putfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        46: putfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         49: aload         4\n-        51: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        51: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         54: aload         4\n-        56: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        56: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         59: if_icmplt     68\n         62: aload         4\n         64: aconst_null\n-        65: putfield      #10                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+        65: putfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n         68: iload         5\n         70: ireturn\n         71: aload         4\n-        73: getfield      #18                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        73: getfield      #68                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         76: ifeq          83\n         79: iconst_m1\n         80: goto          84\n         83: iconst_0\n         84: ireturn\n       LineNumberTable:\n         line 292: 0\n@@ -558,25 +558,25 @@\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #19                 // class \"[B\"\n+         1: instanceof    #72                 // class \"[B\"\n          4: ifne          17\n-         7: new           #20                 // class org/apache/commons/codec/EncoderException\n+         7: new           #73                 // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #21                 // String Parameter supplied to Base-N encode is not a byte[]\n-        13: invokespecial #22                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #75                 // String Parameter supplied to Base-N encode is not a byte[]\n+        13: invokespecial #77                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #19                 // class \"[B\"\n-        22: invokevirtual #23                 // Method encode:([B)[B\n+        19: checkcast     #72                 // class \"[B\"\n+        22: invokevirtual #80                 // Method encode:([B)[B\n         25: areturn\n       LineNumberTable:\n         line 335: 0\n         line 336: 7\n         line 338: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n@@ -586,58 +586,58 @@\n   public java.lang.String encodeToString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #23                 // Method encode:([B)[B\n-         5: invokestatic  #24                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #80                 // Method encode:([B)[B\n+         5: invokestatic  #84                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 350: 0\n \n   public java.lang.String encodeAsString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #23                 // Method encode:([B)[B\n-         5: invokestatic  #24                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+         2: invokevirtual #80                 // Method encode:([B)[B\n+         5: invokestatic  #84                 // Method org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 363: 0\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #19                 // class \"[B\"\n+         1: instanceof    #72                 // class \"[B\"\n          4: ifeq          16\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #19                 // class \"[B\"\n-        12: invokevirtual #25                 // Method decode:([B)[B\n+         9: checkcast     #72                 // class \"[B\"\n+        12: invokevirtual #90                 // Method decode:([B)[B\n         15: areturn\n         16: aload_1\n-        17: instanceof    #26                 // class java/lang/String\n+        17: instanceof    #93                 // class java/lang/String\n         20: ifeq          32\n         23: aload_0\n         24: aload_1\n-        25: checkcast     #26                 // class java/lang/String\n-        28: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B\n+        25: checkcast     #93                 // class java/lang/String\n+        28: invokevirtual #95                 // Method decode:(Ljava/lang/String;)[B\n         31: areturn\n-        32: new           #28                 // class org/apache/commons/codec/DecoderException\n+        32: new           #98                 // class org/apache/commons/codec/DecoderException\n         35: dup\n-        36: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String\n-        38: invokespecial #30                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        36: ldc           #100                // String Parameter supplied to Base-N decode is not a byte[] or a String\n+        38: invokespecial #102                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n         41: athrow\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n         line 381: 16\n         line 382: 23\n         line 384: 32\n@@ -650,16 +650,16 @@\n   public byte[] decode(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #31                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-         5: invokevirtual #25                 // Method decode:([B)[B\n+         2: invokestatic  #103                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         5: invokevirtual #90                 // Method decode:([B)[B\n          8: areturn\n       LineNumberTable:\n         line 396: 0\n \n   public byte[] decode(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0001) ACC_PUBLIC\n@@ -668,42 +668,42 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #32                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #33                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #33                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #106                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore_2\n         19: aload_0\n         20: aload_1\n         21: iconst_0\n         22: aload_1\n         23: arraylength\n         24: aload_2\n-        25: invokevirtual #34                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        25: invokevirtual #107                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         28: aload_0\n         29: aload_1\n         30: iconst_0\n         31: iconst_m1\n         32: aload_2\n-        33: invokevirtual #34                 // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        33: invokevirtual #107                // Method decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         36: aload_2\n-        37: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        37: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         40: newarray       byte\n         42: astore_3\n         43: aload_0\n         44: aload_3\n         45: iconst_0\n         46: aload_3\n         47: arraylength\n         48: aload_2\n-        49: invokevirtual #35                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        49: invokevirtual #110                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         52: pop\n         53: aload_3\n         54: areturn\n       LineNumberTable:\n         line 408: 0\n         line 409: 9\n         line 411: 11\n@@ -729,15 +729,15 @@\n          9: aload_1\n         10: areturn\n         11: aload_0\n         12: aload_1\n         13: iconst_0\n         14: aload_1\n         15: arraylength\n-        16: invokevirtual #36                 // Method encode:([BII)[B\n+        16: invokevirtual #114                // Method encode:([BII)[B\n         19: areturn\n       LineNumberTable:\n         line 428: 0\n         line 429: 9\n         line 431: 11\n       StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n@@ -751,44 +751,44 @@\n          0: aload_1\n          1: ifnull        9\n          4: aload_1\n          5: arraylength\n          6: ifne          11\n          9: aload_1\n         10: areturn\n-        11: new           #32                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        11: new           #33                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         14: dup\n-        15: invokespecial #33                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        15: invokespecial #106                // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n         18: astore        4\n         20: aload_0\n         21: aload_1\n         22: iload_2\n         23: iload_3\n         24: aload         4\n-        26: invokevirtual #37                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        26: invokevirtual #117                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         29: aload_0\n         30: aload_1\n         31: iload_2\n         32: iconst_m1\n         33: aload         4\n-        35: invokevirtual #37                 // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+        35: invokevirtual #117                // Method encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n         38: aload         4\n-        40: getfield      #11                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+        40: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n         43: aload         4\n-        45: getfield      #12                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+        45: getfield      #41                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n         48: isub\n         49: newarray       byte\n         51: astore        5\n         53: aload_0\n         54: aload         5\n         56: iconst_0\n         57: aload         5\n         59: arraylength\n         60: aload         4\n-        62: invokevirtual #35                 // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+        62: invokevirtual #110                // Method readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n         65: pop\n         66: aload         5\n         68: areturn\n       LineNumberTable:\n         line 448: 0\n         line 449: 9\n         line 451: 11\n@@ -830,24 +830,24 @@\n         13: if_icmpge     60\n         16: aload_3\n         17: iload         5\n         19: baload\n         20: istore        6\n         22: aload_0\n         23: iload         6\n-        25: invokevirtual #38                 // Method isInAlphabet:(B)Z\n+        25: invokevirtual #119                // Method isInAlphabet:(B)Z\n         28: ifne          54\n         31: iload_2\n         32: ifeq          52\n         35: iload         6\n         37: aload_0\n-        38: getfield      #9                  // Field pad:B\n+        38: getfield      #29                 // Field pad:B\n         41: if_icmpeq     54\n         44: iload         6\n-        46: invokestatic  #39                 // Method isWhiteSpace:(B)Z\n+        46: invokestatic  #123                // Method isWhiteSpace:(B)Z\n         49: ifne          54\n         52: iconst_0\n         53: ireturn\n         54: iinc          5, 1\n         57: goto          9\n         60: iconst_1\n         61: ireturn\n@@ -873,17 +873,17 @@\n   public boolean isInAlphabet(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #31                 // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+         2: invokestatic  #103                // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n          5: iconst_1\n-         6: invokevirtual #40                 // Method isInAlphabet:([BZ)Z\n+         6: invokevirtual #126                // Method isInAlphabet:([BZ)Z\n          9: ireturn\n       LineNumberTable:\n         line 505: 0\n \n   protected boolean containsAlphabetOrPad(byte[]);\n     descriptor: ([B)Z\n     flags: (0x0004) ACC_PROTECTED\n@@ -904,20 +904,20 @@\n         16: iload_3\n         17: if_icmpge     52\n         20: aload_2\n         21: iload         4\n         23: baload\n         24: istore        5\n         26: aload_0\n-        27: getfield      #9                  // Field pad:B\n+        27: getfield      #29                 // Field pad:B\n         30: iload         5\n         32: if_icmpeq     44\n         35: aload_0\n         36: iload         5\n-        38: invokevirtual #38                 // Method isInAlphabet:(B)Z\n+        38: invokevirtual #119                // Method isInAlphabet:(B)Z\n         41: ifeq          46\n         44: iconst_1\n         45: ireturn\n         46: iinc          4, 1\n         49: goto          14\n         52: iconst_0\n         53: ireturn\n@@ -946,44 +946,44 @@\n     descriptor: ([B)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_1\n          1: arraylength\n          2: aload_0\n-         3: getfield      #5                  // Field unencodedBlockSize:I\n+         3: getfield      #16                 // Field unencodedBlockSize:I\n          6: iadd\n          7: iconst_1\n          8: isub\n          9: aload_0\n-        10: getfield      #5                  // Field unencodedBlockSize:I\n+        10: getfield      #16                 // Field unencodedBlockSize:I\n         13: idiv\n         14: i2l\n         15: aload_0\n-        16: getfield      #6                  // Field encodedBlockSize:I\n+        16: getfield      #20                 // Field encodedBlockSize:I\n         19: i2l\n         20: lmul\n         21: lstore_2\n         22: aload_0\n-        23: getfield      #7                  // Field lineLength:I\n+        23: getfield      #23                 // Field lineLength:I\n         26: ifle          53\n         29: lload_2\n         30: lload_2\n         31: aload_0\n-        32: getfield      #7                  // Field lineLength:I\n+        32: getfield      #23                 // Field lineLength:I\n         35: i2l\n         36: ladd\n         37: lconst_1\n         38: lsub\n         39: aload_0\n-        40: getfield      #7                  // Field lineLength:I\n+        40: getfield      #23                 // Field lineLength:I\n         43: i2l\n         44: ldiv\n         45: aload_0\n-        46: getfield      #8                  // Field chunkSeparatorLength:I\n+        46: getfield      #26                 // Field chunkSeparatorLength:I\n         49: i2l\n         50: lmul\n         51: ladd\n         52: lstore_2\n         53: lload_2\n         54: lreturn\n       LineNumberTable:\n@@ -994,8 +994,8 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 53\n           locals = [ long ]\n }\n SourceFile: \"BaseNCodec.java\"\n InnerClasses:\n-  static #44= #32 of #1;                  // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #171= #33 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
