{"diffoscope-json-version": 1, "source1": "first/FailableIntPredicate.class", "source2": "second/FailableIntPredicate.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,115 +1,115 @@\n-  SHA-256 checksum 381170027bcf68014b2a90e72215e4ab9d6737b43256573267da4f0966ba284b\n+  SHA-256 checksum 73bdb15c2c21e786cbc11bb4976ab4b380f943e98c4ac820150fb87550799226\n   Compiled from \"FailableIntPredicate.java\"\n public interface org.apache.commons.lang3.function.FailableIntPredicate<E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/lang3/function/FailableIntPredicate\n-  super_class: #11                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/function/FailableIntPredicate\n+  super_class: #31                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 12, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #10.#54        // org/apache/commons/lang3/function/FailableIntPredicate.FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #2 = Fieldref           #10.#55        // org/apache/commons/lang3/function/FailableIntPredicate.TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #3 = Methodref          #56.#57        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #4 = InvokeDynamic      #0:#62         // #0:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #5 = InvokeDynamic      #1:#64         // #1:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #6 = InvokeDynamic      #2:#62         // #2:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #7 = InterfaceMethodref #10.#66        // org/apache/commons/lang3/function/FailableIntPredicate.test:(I)Z\n-   #8 = InvokeDynamic      #3:#68         // #3:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-   #9 = InvokeDynamic      #4:#68         // #4:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #10 = Class              #70            // org/apache/commons/lang3/function/FailableIntPredicate\n-  #11 = Class              #71            // java/lang/Object\n-  #12 = Utf8               FALSE\n-  #13 = Utf8               Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #14 = Utf8               TRUE\n-  #15 = Utf8               falsePredicate\n-  #16 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               Signature\n-  #20 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-  #21 = Utf8               truePredicate\n-  #22 = Utf8               and\n-  #23 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               this\n-  #26 = Utf8               other\n-  #27 = Utf8               LocalVariableTypeTable\n-  #28 = Utf8               Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-  #29 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-  #30 = Utf8               negate\n-  #31 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-  #32 = Utf8               or\n-  #33 = Utf8               test\n-  #34 = Utf8               (I)Z\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #72            // java/lang/Throwable\n-  #37 = Utf8               (I)Z^TE;\n-  #38 = Utf8               lambda$or$4\n-  #39 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #40 = Utf8               t\n-  #41 = Utf8               I\n-  #42 = Utf8               StackMapTable\n-  #43 = Utf8               lambda$negate$3\n-  #44 = Utf8               lambda$and$2\n-  #45 = Utf8               lambda$static$1\n-  #46 = Utf8               lambda$static$0\n-  #47 = Utf8               <clinit>\n-  #48 = Utf8               ()V\n-  #49 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #50 = Utf8               SourceFile\n-  #51 = Utf8               FailableIntPredicate.java\n-  #52 = Utf8               RuntimeVisibleAnnotations\n-  #53 = Utf8               Ljava/lang/FunctionalInterface;\n-  #54 = NameAndType        #12:#13        // FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #55 = NameAndType        #14:#13        // TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #56 = Class              #73            // java/util/Objects\n-  #57 = NameAndType        #74:#75        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #58 = Utf8               BootstrapMethods\n-  #59 = MethodHandle       6:#76          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #60 = MethodType         #34            //  (I)Z\n-  #61 = MethodHandle       7:#77          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #62 = NameAndType        #33:#78        // test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #63 = MethodHandle       7:#79          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n-  #64 = NameAndType        #33:#23        // test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #65 = MethodHandle       7:#80          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #66 = NameAndType        #33:#34        // test:(I)Z\n-  #67 = MethodHandle       6:#81          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n-  #68 = NameAndType        #33:#16        // test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #69 = MethodHandle       6:#82          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n-  #70 = Utf8               org/apache/commons/lang3/function/FailableIntPredicate\n-  #71 = Utf8               java/lang/Object\n-  #72 = Utf8               java/lang/Throwable\n-  #73 = Utf8               java/util/Objects\n-  #74 = Utf8               requireNonNull\n-  #75 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #76 = Methodref          #83.#84        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #77 = InterfaceMethodref #10.#85        // org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #78 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-  #79 = InterfaceMethodref #10.#86        // org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n-  #80 = InterfaceMethodref #10.#87        // org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #81 = InterfaceMethodref #10.#88        // org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n-  #82 = InterfaceMethodref #10.#89        // org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n-  #83 = Class              #90            // java/lang/invoke/LambdaMetafactory\n-  #84 = NameAndType        #91:#95        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #85 = NameAndType        #44:#39        // lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #86 = NameAndType        #43:#34        // lambda$negate$3:(I)Z\n-  #87 = NameAndType        #38:#39        // lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-  #88 = NameAndType        #46:#34        // lambda$static$0:(I)Z\n-  #89 = NameAndType        #45:#34        // lambda$static$1:(I)Z\n-  #90 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #91 = Utf8               metafactory\n-  #92 = Class              #97            // java/lang/invoke/MethodHandles$Lookup\n-  #93 = Utf8               Lookup\n-  #94 = Utf8               InnerClasses\n-  #95 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #96 = Class              #98            // java/lang/invoke/MethodHandles\n-  #97 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #98 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableIntPredicate.FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+   #2 = Class              #4             // org/apache/commons/lang3/function/FailableIntPredicate\n+   #3 = NameAndType        #5:#6          // FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+   #4 = Utf8               org/apache/commons/lang3/function/FailableIntPredicate\n+   #5 = Utf8               FALSE\n+   #6 = Utf8               Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+   #7 = Fieldref           #2.#8          // org/apache/commons/lang3/function/FailableIntPredicate.TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+   #8 = NameAndType        #9:#6          // TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+   #9 = Utf8               TRUE\n+  #10 = Methodref          #11.#12        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #11 = Class              #13            // java/util/Objects\n+  #12 = NameAndType        #14:#15        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #13 = Utf8               java/util/Objects\n+  #14 = Utf8               requireNonNull\n+  #15 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #16 = InvokeDynamic      #0:#17         // #0:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #17 = NameAndType        #18:#19        // test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #18 = Utf8               test\n+  #19 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #20 = InvokeDynamic      #1:#21         // #1:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #21 = NameAndType        #18:#22        // test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #22 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #23 = InvokeDynamic      #2:#17         // #2:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #24 = InterfaceMethodref #2.#25         // org/apache/commons/lang3/function/FailableIntPredicate.test:(I)Z\n+  #25 = NameAndType        #18:#26        // test:(I)Z\n+  #26 = Utf8               (I)Z\n+  #27 = InvokeDynamic      #3:#28         // #3:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #28 = NameAndType        #18:#29        // test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #29 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #30 = InvokeDynamic      #4:#28         // #4:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+  #31 = Class              #32            // java/lang/Object\n+  #32 = Utf8               java/lang/Object\n+  #33 = Utf8               falsePredicate\n+  #34 = Utf8               Code\n+  #35 = Utf8               LineNumberTable\n+  #36 = Utf8               Signature\n+  #37 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+  #38 = Utf8               truePredicate\n+  #39 = Utf8               and\n+  #40 = Utf8               LocalVariableTable\n+  #41 = Utf8               this\n+  #42 = Utf8               other\n+  #43 = Utf8               LocalVariableTypeTable\n+  #44 = Utf8               Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+  #45 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+  #46 = Utf8               negate\n+  #47 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+  #48 = Utf8               or\n+  #49 = Utf8               Exceptions\n+  #50 = Class              #51            // java/lang/Throwable\n+  #51 = Utf8               java/lang/Throwable\n+  #52 = Utf8               (I)Z^TE;\n+  #53 = Utf8               lambda$or$4\n+  #54 = Utf8               (Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #55 = Utf8               t\n+  #56 = Utf8               I\n+  #57 = Utf8               StackMapTable\n+  #58 = Utf8               lambda$negate$3\n+  #59 = Utf8               lambda$and$2\n+  #60 = Utf8               lambda$static$1\n+  #61 = Utf8               lambda$static$0\n+  #62 = Utf8               <clinit>\n+  #63 = Utf8               ()V\n+  #64 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #65 = Utf8               SourceFile\n+  #66 = Utf8               FailableIntPredicate.java\n+  #67 = Utf8               RuntimeVisibleAnnotations\n+  #68 = Utf8               Ljava/lang/FunctionalInterface;\n+  #69 = Utf8               BootstrapMethods\n+  #70 = MethodHandle       6:#71          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #71 = Methodref          #72.#73        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #72 = Class              #74            // java/lang/invoke/LambdaMetafactory\n+  #73 = NameAndType        #75:#76        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #74 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #75 = Utf8               metafactory\n+  #76 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #77 = MethodType         #26            //  (I)Z\n+  #78 = MethodHandle       7:#79          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #79 = InterfaceMethodref #2.#80         // org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #80 = NameAndType        #59:#54        // lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #81 = MethodHandle       7:#82          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n+  #82 = InterfaceMethodref #2.#83         // org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n+  #83 = NameAndType        #58:#26        // lambda$negate$3:(I)Z\n+  #84 = MethodHandle       7:#85          // REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #85 = InterfaceMethodref #2.#86         // org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #86 = NameAndType        #53:#54        // lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+  #87 = MethodHandle       6:#88          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n+  #88 = InterfaceMethodref #2.#89         // org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n+  #89 = NameAndType        #61:#26        // lambda$static$0:(I)Z\n+  #90 = MethodHandle       6:#91          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n+  #91 = InterfaceMethodref #2.#92         // org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n+  #92 = NameAndType        #60:#26        // lambda$static$1:(I)Z\n+  #93 = Utf8               InnerClasses\n+  #94 = Class              #95            // java/lang/invoke/MethodHandles$Lookup\n+  #95 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #96 = Class              #97            // java/lang/invoke/MethodHandles\n+  #97 = Utf8               java/lang/invoke/MethodHandles\n+  #98 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableIntPredicate FALSE;\n     descriptor: Lorg/apache/commons/lang3/function/FailableIntPredicate;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.lang3.function.FailableIntPredicate TRUE;\n     descriptor: Lorg/apache/commons/lang3/function/FailableIntPredicate;\n@@ -120,114 +120,114 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n          3: areturn\n       LineNumberTable:\n         line 47: 0\n-    Signature: #20                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+    Signature: #37                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n \n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableIntPredicate<E> truePredicate();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         0: getstatic     #7                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n          3: areturn\n       LineNumberTable:\n         line 57: 0\n-    Signature: #20                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+    Signature: #37                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n \n   public default org.apache.commons.lang3.function.FailableIntPredicate<E> and(org.apache.commons.lang3.function.FailableIntPredicate<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         7: invokedynamic #16,  0             // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n         12: areturn\n       LineNumberTable:\n         line 68: 0\n         line 69: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailableIntPredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-    Signature: #29                          // (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+    Signature: #45                          // (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n \n   public default org.apache.commons.lang3.function.FailableIntPredicate<E> negate();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #5,  0              // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         1: invokedynamic #20,  0             // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n          6: areturn\n       LineNumberTable:\n         line 78: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-    Signature: #31                          // ()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+    Signature: #47                          // ()Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n \n   public default org.apache.commons.lang3.function.FailableIntPredicate<E> or(org.apache.commons.lang3.function.FailableIntPredicate<E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #6,  0              // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         7: invokedynamic #23,  0             // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailableIntPredicate;Lorg/apache/commons/lang3/function/FailableIntPredicate;)Lorg/apache/commons/lang3/function/FailableIntPredicate;\n         12: areturn\n       LineNumberTable:\n         line 89: 0\n         line 90: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailableIntPredicate;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n             0      13     1 other   Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n-    Signature: #29                          // (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n+    Signature: #45                          // (Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;)Lorg/apache/commons/lang3/function/FailableIntPredicate<TE;>;\n \n   public abstract boolean test(int) throws E;\n     descriptor: (I)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #37                          // (I)Z^TE;\n+    Signature: #52                          // (I)Z^TE;\n \n   private boolean lambda$or$4(org.apache.commons.lang3.function.FailableIntPredicate, int) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(I)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(I)Z\n          7: ifne          20\n         10: aload_1\n         11: iload_2\n-        12: invokeinterface #7,  2            // InterfaceMethod test:(I)Z\n+        12: invokeinterface #24,  2           // InterfaceMethod test:(I)Z\n         17: ifeq          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: ireturn\n       LineNumberTable:\n         line 90: 0\n@@ -250,15 +250,15 @@\n   private boolean lambda$negate$3(int) throws java.lang.Throwable;\n     descriptor: (I)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(I)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(I)Z\n          7: ifne          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 78: 0\n@@ -279,19 +279,19 @@\n   private boolean lambda$and$2(org.apache.commons.lang3.function.FailableIntPredicate, int) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokeinterface #7,  2            // InterfaceMethod test:(I)Z\n+         2: invokeinterface #24,  2           // InterfaceMethod test:(I)Z\n          7: ifeq          24\n         10: aload_1\n         11: iload_2\n-        12: invokeinterface #7,  2            // InterfaceMethod test:(I)Z\n+        12: invokeinterface #24,  2           // InterfaceMethod test:(I)Z\n         17: ifeq          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: ireturn\n       LineNumberTable:\n         line 69: 0\n@@ -341,49 +341,49 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #8,  0              // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         0: invokedynamic #27,  0             // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n          5: putstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-         8: invokedynamic #9,  0              // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n-        13: putstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+         8: invokedynamic #30,  0             // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailableIntPredicate;\n+        13: putstatic     #7                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableIntPredicate;\n         16: return\n       LineNumberTable:\n         line 34: 0\n         line 38: 8\n }\n-Signature: #49                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #64                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableIntPredicate.java\"\n RuntimeVisibleAnnotations:\n-  0: #53()\n+  0: #68()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #93= #92 of #96;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #60 (I)Z\n-      #61 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-      #60 (I)Z\n-  1: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #77 (I)Z\n+      #78 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$and$2:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+      #77 (I)Z\n+  1: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #60 (I)Z\n-      #63 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n-      #60 (I)Z\n-  2: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #77 (I)Z\n+      #81 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$negate$3:(I)Z\n+      #77 (I)Z\n+  2: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #60 (I)Z\n-      #65 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n-      #60 (I)Z\n-  3: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #77 (I)Z\n+      #84 REF_invokeSpecial org/apache/commons/lang3/function/FailableIntPredicate.lambda$or$4:(Lorg/apache/commons/lang3/function/FailableIntPredicate;I)Z\n+      #77 (I)Z\n+  3: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #60 (I)Z\n-      #67 REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n-      #60 (I)Z\n-  4: #59 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #77 (I)Z\n+      #87 REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$0:(I)Z\n+      #77 (I)Z\n+  4: #70 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #60 (I)Z\n-      #69 REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n-      #60 (I)Z\n+      #77 (I)Z\n+      #90 REF_invokeStatic org/apache/commons/lang3/function/FailableIntPredicate.lambda$static$1:(I)Z\n+      #77 (I)Z\n+InnerClasses:\n+  public static final #98= #94 of #96;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
