{"diffoscope-json-version": 1, "source1": "first/CpioArchiveEntry.class", "source2": "second/CpioArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,105 +1,105 @@\n-  SHA-256 checksum b1cd4dd35d6aa2a4f871fb6decb144edc92cca00ba6505ef9883918c36db0928\n+  SHA-256 checksum 42410af93f8c1430b2e741c9ef521ee7c86c58bda922c602004067d30a022507\n   Compiled from \"CpioArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.cpio.CpioArchiveEntry implements org.apache.commons.compress.archivers.cpio.CpioConstants,org.apache.commons.compress.archivers.ArchiveEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #99                         // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n   super_class: #96                        // java/lang/Object\n   interfaces: 2, fields: 16, methods: 60, attributes: 1\n Constant pool:\n-    #1 = Methodref          #96.#206      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #99.#207      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.headerSize:I\n-    #3 = Fieldref           #99.#208      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.alignmentBoundary:I\n-    #4 = Class              #209          // java/lang/IllegalArgumentException\n-    #5 = Class              #210          // java/lang/StringBuilder\n-    #6 = Methodref          #5.#206       // java/lang/StringBuilder.\"<init>\":()V\n-    #7 = String             #211          // Unknown header type\n-    #8 = Methodref          #5.#212       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #5.#213       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #5.#214       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #4.#215       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #99.#216      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.fileFormat:S\n-   #13 = Class              #217          // org/apache/commons/compress/archivers/cpio/CpioConstants\n-   #14 = Methodref          #99.#218      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/lang/String;)V\n-   #15 = Methodref          #99.#219      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n-   #16 = Fieldref           #99.#220      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.name:Ljava/lang/String;\n-   #17 = Methodref          #99.#215      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n-   #18 = Methodref          #99.#221      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setSize:(J)V\n-   #19 = Methodref          #99.#222      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/io/File;Ljava/lang/String;)V\n-   #20 = Methodref          #99.#223      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #21 = Methodref          #224.#225     // java/io/File.isFile:()Z\n-   #22 = Methodref          #224.#226     // java/io/File.length:()J\n-   #23 = Methodref          #99.#227      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/lang/String;J)V\n-   #24 = Methodref          #224.#228     // java/io/File.isDirectory:()Z\n+    #1 = Methodref          #96.#205      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #99.#206      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.headerSize:I\n+    #3 = Fieldref           #99.#207      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.alignmentBoundary:I\n+    #4 = Class              #208          // java/lang/IllegalArgumentException\n+    #5 = Class              #209          // java/lang/StringBuilder\n+    #6 = Methodref          #5.#205       // java/lang/StringBuilder.\"<init>\":()V\n+    #7 = String             #210          // Unknown header type\n+    #8 = Methodref          #5.#211       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #9 = Methodref          #5.#212       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #10 = Methodref          #5.#213       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #4.#214       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #99.#215      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.fileFormat:S\n+   #13 = Class              #216          // org/apache/commons/compress/archivers/cpio/CpioConstants\n+   #14 = Methodref          #99.#217      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/lang/String;)V\n+   #15 = Methodref          #99.#218      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(S)V\n+   #16 = Fieldref           #99.#219      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.name:Ljava/lang/String;\n+   #17 = Methodref          #99.#214      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n+   #18 = Methodref          #99.#220      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setSize:(J)V\n+   #19 = Methodref          #99.#221      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/io/File;Ljava/lang/String;)V\n+   #20 = Methodref          #99.#222      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #21 = Methodref          #135.#223     // java/io/File.isFile:()Z\n+   #22 = Methodref          #135.#224     // java/io/File.length:()J\n+   #23 = Methodref          #99.#225      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.\"<init>\":(SLjava/lang/String;J)V\n+   #24 = Methodref          #135.#226     // java/io/File.isDirectory:()Z\n    #25 = Long               16384l\n-   #27 = Methodref          #99.#229      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setMode:(J)V\n+   #27 = Methodref          #99.#227      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setMode:(J)V\n    #28 = Long               32768l\n-   #30 = String             #230          // Cannot determine type of file\n-   #31 = Methodref          #224.#231     // java/io/File.getName:()Ljava/lang/String;\n-   #32 = Methodref          #224.#232     // java/io/File.lastModified:()J\n+   #30 = String             #228          // Cannot determine type of file\n+   #31 = Methodref          #135.#229     // java/io/File.getName:()Ljava/lang/String;\n+   #32 = Methodref          #135.#230     // java/io/File.lastModified:()J\n    #33 = Long               1000l\n-   #35 = Methodref          #99.#233      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n-   #36 = Methodref          #234.#235     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #37 = Methodref          #234.#236     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #38 = Methodref          #234.#237     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #39 = Methodref          #5.#238       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #234.#239     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #41 = Methodref          #99.#240      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n-   #42 = Class              #241          // java/lang/UnsupportedOperationException\n-   #43 = Methodref          #42.#206      // java/lang/UnsupportedOperationException.\"<init>\":()V\n-   #44 = Methodref          #99.#242      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.checkNewFormat:()V\n-   #45 = Fieldref           #99.#243      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.chksum:J\n+   #35 = Methodref          #99.#231      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(J)V\n+   #36 = Methodref          #232.#233     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #37 = Methodref          #232.#234     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #38 = Methodref          #232.#235     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #39 = Methodref          #5.#236       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #40 = Methodref          #232.#237     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #41 = Methodref          #99.#238      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n+   #42 = Class              #239          // java/lang/UnsupportedOperationException\n+   #43 = Methodref          #42.#205      // java/lang/UnsupportedOperationException.\"<init>\":()V\n+   #44 = Methodref          #99.#240      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.checkNewFormat:()V\n+   #45 = Fieldref           #99.#241      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.chksum:J\n    #46 = Long               4294967295l\n-   #48 = Methodref          #99.#244      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.checkOldFormat:()V\n-   #49 = Fieldref           #99.#245      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.min:J\n-   #50 = Fieldref           #99.#246      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.maj:J\n-   #51 = Fieldref           #99.#247      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.filesize:J\n-   #52 = Fieldref           #99.#248      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.gid:J\n-   #53 = Methodref          #99.#249      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:(Ljava/nio/charset/Charset;)I\n-   #54 = Methodref          #250.#251     // java/lang/String.length:()I\n-   #55 = Methodref          #99.#252      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:(J)I\n-   #56 = Methodref          #250.#253     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #57 = Methodref          #254.#255     // org/apache/commons/compress/utils/ExactMath.add:(IJ)I\n-   #58 = Fieldref           #99.#256      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.inode:J\n-   #59 = Fieldref           #99.#257      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.mode:J\n-   #60 = String             #258          // TRAILER!!!\n-   #61 = Methodref          #250.#259     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #62 = Fieldref           #99.#260      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.nlink:J\n-   #63 = Methodref          #99.#228      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.isDirectory:()Z\n+   #48 = Methodref          #99.#242      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.checkOldFormat:()V\n+   #49 = Fieldref           #99.#243      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.min:J\n+   #50 = Fieldref           #99.#244      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.maj:J\n+   #51 = Fieldref           #99.#245      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.filesize:J\n+   #52 = Fieldref           #99.#246      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.gid:J\n+   #53 = Methodref          #99.#247      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:(Ljava/nio/charset/Charset;)I\n+   #54 = Methodref          #136.#248     // java/lang/String.length:()I\n+   #55 = Methodref          #99.#249      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getHeaderPadCount:(J)I\n+   #56 = Methodref          #136.#250     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #57 = Methodref          #251.#252     // org/apache/commons/compress/utils/ExactMath.add:(IJ)I\n+   #58 = Fieldref           #99.#253      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.inode:J\n+   #59 = Fieldref           #99.#254      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.mode:J\n+   #60 = String             #255          // TRAILER!!!\n+   #61 = Methodref          #136.#256     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #62 = Fieldref           #99.#257      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.nlink:J\n+   #63 = Methodref          #99.#226      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.isDirectory:()Z\n    #64 = Long               2l\n-   #66 = Fieldref           #99.#261      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.rmin:J\n-   #67 = Fieldref           #99.#262      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.rmaj:J\n-   #68 = Fieldref           #99.#263      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.mtime:J\n-   #69 = Class              #264          // java/util/Date\n-   #70 = Methodref          #99.#265      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n-   #71 = Methodref          #69.#266      // java/util/Date.\"<init>\":(J)V\n-   #72 = Fieldref           #99.#267      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.uid:J\n-   #73 = Methodref          #268.#269     // org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J\n+   #66 = Fieldref           #99.#258      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.rmin:J\n+   #67 = Fieldref           #99.#259      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.rmaj:J\n+   #68 = Fieldref           #99.#260      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.mtime:J\n+   #69 = Class              #261          // java/util/Date\n+   #70 = Methodref          #99.#262      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.getTime:()J\n+   #71 = Methodref          #69.#263      // java/util/Date.\"<init>\":(J)V\n+   #72 = Fieldref           #99.#264      // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry.uid:J\n+   #73 = Methodref          #265.#266     // org/apache/commons/compress/archivers/cpio/CpioUtil.fileType:(J)J\n    #74 = Long               24576l\n    #76 = Long               8192l\n    #78 = Long               36864l\n    #80 = Long               4096l\n    #82 = Long               49152l\n    #84 = Long               40960l\n-   #86 = String             #270          // Invalid entry size <\n-   #87 = Methodref          #5.#271       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #88 = String             #272          // >\n+   #86 = String             #267          // Invalid entry size <\n+   #87 = Methodref          #5.#268       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #88 = String             #269          // >\n    #89 = Long               61440l\n-   #91 = String             #273          // Unknown mode. Full:\n-   #92 = Methodref          #274.#275     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-   #93 = String             #276          //  Masked:\n-   #94 = Fieldref           #277.#278     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #95 = Methodref          #279.#280     // java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n-   #96 = Class              #281          // java/lang/Object\n-   #97 = Methodref          #282.#283     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #98 = Methodref          #96.#284      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #99 = Class              #285          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #100 = Class              #286          // org/apache/commons/compress/archivers/ArchiveEntry\n+   #91 = String             #270          // Unknown mode. Full:\n+   #92 = Methodref          #271.#272     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+   #93 = String             #273          //  Masked:\n+   #94 = Fieldref           #274.#275     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+   #95 = Methodref          #276.#277     // java/nio/file/attribute/FileTime.to:(Ljava/util/concurrent/TimeUnit;)J\n+   #96 = Class              #278          // java/lang/Object\n+   #97 = Methodref          #279.#280     // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #98 = Methodref          #96.#281      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #99 = Class              #282          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+  #100 = Class              #283          // org/apache/commons/compress/archivers/ArchiveEntry\n   #101 = Utf8               fileFormat\n   #102 = Utf8               S\n   #103 = Utf8               headerSize\n   #104 = Utf8               I\n   #105 = Utf8               alignmentBoundary\n   #106 = Utf8               chksum\n   #107 = Utf8               J\n@@ -117,217 +117,214 @@\n   #119 = Utf8               rmin\n   #120 = Utf8               uid\n   #121 = Utf8               <init>\n   #122 = Utf8               (S)V\n   #123 = Utf8               Code\n   #124 = Utf8               LineNumberTable\n   #125 = Utf8               StackMapTable\n-  #126 = Class              #285          // org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #127 = Utf8               (Ljava/lang/String;)V\n-  #128 = Utf8               (SLjava/lang/String;)V\n-  #129 = Utf8               (Ljava/lang/String;J)V\n-  #130 = Utf8               (SLjava/lang/String;J)V\n-  #131 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #132 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #133 = Utf8               Exceptions\n-  #134 = Class              #287          // java/io/IOException\n-  #135 = Utf8               (SLjava/io/File;Ljava/lang/String;)V\n-  #136 = Class              #288          // java/io/File\n-  #137 = Class              #289          // java/lang/String\n-  #138 = Utf8               (SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #139 = Class              #290          // java/nio/file/Path\n-  #140 = Class              #291          // \"[Ljava/nio/file/LinkOption;\"\n-  #141 = Utf8               checkNewFormat\n-  #142 = Utf8               ()V\n-  #143 = Utf8               checkOldFormat\n-  #144 = Utf8               getChksum\n-  #145 = Utf8               ()J\n-  #146 = Utf8               getDevice\n-  #147 = Utf8               getDeviceMaj\n-  #148 = Utf8               getDeviceMin\n-  #149 = Utf8               getSize\n-  #150 = Utf8               getFormat\n-  #151 = Utf8               ()S\n-  #152 = Utf8               getGID\n-  #153 = Utf8               getHeaderSize\n-  #154 = Utf8               ()I\n-  #155 = Utf8               getAlignmentBoundary\n-  #156 = Utf8               getHeaderPadCount\n-  #157 = Utf8               Deprecated\n-  #158 = Utf8               RuntimeVisibleAnnotations\n-  #159 = Utf8               Ljava/lang/Deprecated;\n-  #160 = Utf8               (Ljava/nio/charset/Charset;)I\n-  #161 = Utf8               (J)I\n-  #162 = Utf8               getDataPadCount\n-  #163 = Utf8               getInode\n-  #164 = Utf8               getMode\n-  #165 = Utf8               getName\n-  #166 = Utf8               ()Ljava/lang/String;\n-  #167 = Utf8               getNumberOfLinks\n-  #168 = Utf8               getRemoteDevice\n-  #169 = Utf8               getRemoteDeviceMaj\n-  #170 = Utf8               getRemoteDeviceMin\n-  #171 = Utf8               getTime\n-  #172 = Utf8               getLastModifiedDate\n-  #173 = Utf8               ()Ljava/util/Date;\n-  #174 = Utf8               getUID\n-  #175 = Utf8               isBlockDevice\n-  #176 = Utf8               ()Z\n-  #177 = Utf8               isCharacterDevice\n-  #178 = Utf8               isDirectory\n-  #179 = Utf8               isNetwork\n-  #180 = Utf8               isPipe\n-  #181 = Utf8               isRegularFile\n-  #182 = Utf8               isSocket\n-  #183 = Utf8               isSymbolicLink\n-  #184 = Utf8               setChksum\n-  #185 = Utf8               (J)V\n-  #186 = Utf8               setDevice\n-  #187 = Utf8               setDeviceMaj\n-  #188 = Utf8               setDeviceMin\n-  #189 = Utf8               setSize\n-  #190 = Utf8               setGID\n-  #191 = Utf8               setInode\n-  #192 = Utf8               setMode\n-  #193 = Utf8               setName\n-  #194 = Utf8               setNumberOfLinks\n-  #195 = Utf8               setRemoteDevice\n-  #196 = Utf8               setRemoteDeviceMaj\n-  #197 = Utf8               setRemoteDeviceMin\n-  #198 = Utf8               setTime\n-  #199 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n-  #200 = Utf8               setUID\n-  #201 = Utf8               hashCode\n-  #202 = Utf8               equals\n-  #203 = Utf8               (Ljava/lang/Object;)Z\n-  #204 = Utf8               SourceFile\n-  #205 = Utf8               CpioArchiveEntry.java\n-  #206 = NameAndType        #121:#142     // \"<init>\":()V\n-  #207 = NameAndType        #103:#104     // headerSize:I\n-  #208 = NameAndType        #105:#104     // alignmentBoundary:I\n-  #209 = Utf8               java/lang/IllegalArgumentException\n-  #210 = Utf8               java/lang/StringBuilder\n-  #211 = Utf8               Unknown header type\n-  #212 = NameAndType        #292:#293     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #213 = NameAndType        #292:#294     // append:(I)Ljava/lang/StringBuilder;\n-  #214 = NameAndType        #295:#166     // toString:()Ljava/lang/String;\n-  #215 = NameAndType        #121:#127     // \"<init>\":(Ljava/lang/String;)V\n-  #216 = NameAndType        #101:#102     // fileFormat:S\n-  #217 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n-  #218 = NameAndType        #121:#128     // \"<init>\":(SLjava/lang/String;)V\n-  #219 = NameAndType        #121:#122     // \"<init>\":(S)V\n-  #220 = NameAndType        #115:#116     // name:Ljava/lang/String;\n-  #221 = NameAndType        #189:#185     // setSize:(J)V\n-  #222 = NameAndType        #121:#135     // \"<init>\":(SLjava/io/File;Ljava/lang/String;)V\n-  #223 = NameAndType        #121:#138     // \"<init>\":(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #224 = Class              #288          // java/io/File\n-  #225 = NameAndType        #296:#176     // isFile:()Z\n-  #226 = NameAndType        #297:#145     // length:()J\n-  #227 = NameAndType        #121:#130     // \"<init>\":(SLjava/lang/String;J)V\n-  #228 = NameAndType        #178:#176     // isDirectory:()Z\n-  #229 = NameAndType        #192:#185     // setMode:(J)V\n-  #230 = Utf8               Cannot determine type of file\n-  #231 = NameAndType        #165:#166     // getName:()Ljava/lang/String;\n-  #232 = NameAndType        #298:#145     // lastModified:()J\n-  #233 = NameAndType        #198:#185     // setTime:(J)V\n-  #234 = Class              #299          // java/nio/file/Files\n-  #235 = NameAndType        #181:#300     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #236 = NameAndType        #301:#302     // size:(Ljava/nio/file/Path;)J\n-  #237 = NameAndType        #178:#300     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #238 = NameAndType        #292:#303     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #239 = NameAndType        #304:#305     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #240 = NameAndType        #198:#199     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n-  #241 = Utf8               java/lang/UnsupportedOperationException\n-  #242 = NameAndType        #141:#142     // checkNewFormat:()V\n-  #243 = NameAndType        #106:#107     // chksum:J\n-  #244 = NameAndType        #143:#142     // checkOldFormat:()V\n-  #245 = NameAndType        #112:#107     // min:J\n-  #246 = NameAndType        #111:#107     // maj:J\n-  #247 = NameAndType        #108:#107     // filesize:J\n-  #248 = NameAndType        #109:#107     // gid:J\n-  #249 = NameAndType        #156:#160     // getHeaderPadCount:(Ljava/nio/charset/Charset;)I\n-  #250 = Class              #289          // java/lang/String\n-  #251 = NameAndType        #297:#154     // length:()I\n-  #252 = NameAndType        #156:#161     // getHeaderPadCount:(J)I\n-  #253 = NameAndType        #306:#307     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #254 = Class              #308          // org/apache/commons/compress/utils/ExactMath\n-  #255 = NameAndType        #309:#310     // add:(IJ)I\n-  #256 = NameAndType        #110:#107     // inode:J\n-  #257 = NameAndType        #113:#107     // mode:J\n-  #258 = Utf8               TRAILER!!!\n-  #259 = NameAndType        #202:#203     // equals:(Ljava/lang/Object;)Z\n-  #260 = NameAndType        #117:#107     // nlink:J\n-  #261 = NameAndType        #119:#107     // rmin:J\n-  #262 = NameAndType        #118:#107     // rmaj:J\n-  #263 = NameAndType        #114:#107     // mtime:J\n-  #264 = Utf8               java/util/Date\n-  #265 = NameAndType        #171:#145     // getTime:()J\n-  #266 = NameAndType        #121:#185     // \"<init>\":(J)V\n-  #267 = NameAndType        #120:#107     // uid:J\n-  #268 = Class              #311          // org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #269 = NameAndType        #312:#313     // fileType:(J)J\n-  #270 = Utf8               Invalid entry size <\n-  #271 = NameAndType        #292:#314     // append:(J)Ljava/lang/StringBuilder;\n-  #272 = Utf8               >\n-  #273 = Utf8               Unknown mode. Full:\n-  #274 = Class              #315          // java/lang/Long\n-  #275 = NameAndType        #316:#317     // toHexString:(J)Ljava/lang/String;\n-  #276 = Utf8                Masked:\n-  #277 = Class              #318          // java/util/concurrent/TimeUnit\n-  #278 = NameAndType        #319:#320     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #279 = Class              #321          // java/nio/file/attribute/FileTime\n-  #280 = NameAndType        #322:#323     // to:(Ljava/util/concurrent/TimeUnit;)J\n-  #281 = Utf8               java/lang/Object\n-  #282 = Class              #324          // java/util/Objects\n-  #283 = NameAndType        #325:#326     // hash:([Ljava/lang/Object;)I\n-  #284 = NameAndType        #327:#328     // getClass:()Ljava/lang/Class;\n-  #285 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n-  #286 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #287 = Utf8               java/io/IOException\n-  #288 = Utf8               java/io/File\n-  #289 = Utf8               java/lang/String\n-  #290 = Utf8               java/nio/file/Path\n-  #291 = Utf8               [Ljava/nio/file/LinkOption;\n-  #292 = Utf8               append\n-  #293 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #294 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #295 = Utf8               toString\n-  #296 = Utf8               isFile\n-  #297 = Utf8               length\n-  #298 = Utf8               lastModified\n-  #299 = Utf8               java/nio/file/Files\n-  #300 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #301 = Utf8               size\n-  #302 = Utf8               (Ljava/nio/file/Path;)J\n-  #303 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #304 = Utf8               getLastModifiedTime\n-  #305 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #306 = Utf8               getBytes\n-  #307 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #308 = Utf8               org/apache/commons/compress/utils/ExactMath\n-  #309 = Utf8               add\n-  #310 = Utf8               (IJ)I\n-  #311 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n-  #312 = Utf8               fileType\n-  #313 = Utf8               (J)J\n-  #314 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #315 = Utf8               java/lang/Long\n-  #316 = Utf8               toHexString\n-  #317 = Utf8               (J)Ljava/lang/String;\n-  #318 = Utf8               java/util/concurrent/TimeUnit\n-  #319 = Utf8               SECONDS\n-  #320 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #321 = Utf8               java/nio/file/attribute/FileTime\n-  #322 = Utf8               to\n-  #323 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n-  #324 = Utf8               java/util/Objects\n-  #325 = Utf8               hash\n-  #326 = Utf8               ([Ljava/lang/Object;)I\n-  #327 = Utf8               getClass\n-  #328 = Utf8               ()Ljava/lang/Class;\n+  #126 = Utf8               (Ljava/lang/String;)V\n+  #127 = Utf8               (SLjava/lang/String;)V\n+  #128 = Utf8               (Ljava/lang/String;J)V\n+  #129 = Utf8               (SLjava/lang/String;J)V\n+  #130 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #131 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #132 = Utf8               Exceptions\n+  #133 = Class              #284          // java/io/IOException\n+  #134 = Utf8               (SLjava/io/File;Ljava/lang/String;)V\n+  #135 = Class              #285          // java/io/File\n+  #136 = Class              #286          // java/lang/String\n+  #137 = Utf8               (SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #138 = Class              #287          // java/nio/file/Path\n+  #139 = Class              #288          // \"[Ljava/nio/file/LinkOption;\"\n+  #140 = Utf8               checkNewFormat\n+  #141 = Utf8               ()V\n+  #142 = Utf8               checkOldFormat\n+  #143 = Utf8               getChksum\n+  #144 = Utf8               ()J\n+  #145 = Utf8               getDevice\n+  #146 = Utf8               getDeviceMaj\n+  #147 = Utf8               getDeviceMin\n+  #148 = Utf8               getSize\n+  #149 = Utf8               getFormat\n+  #150 = Utf8               ()S\n+  #151 = Utf8               getGID\n+  #152 = Utf8               getHeaderSize\n+  #153 = Utf8               ()I\n+  #154 = Utf8               getAlignmentBoundary\n+  #155 = Utf8               getHeaderPadCount\n+  #156 = Utf8               Deprecated\n+  #157 = Utf8               RuntimeVisibleAnnotations\n+  #158 = Utf8               Ljava/lang/Deprecated;\n+  #159 = Utf8               (Ljava/nio/charset/Charset;)I\n+  #160 = Utf8               (J)I\n+  #161 = Utf8               getDataPadCount\n+  #162 = Utf8               getInode\n+  #163 = Utf8               getMode\n+  #164 = Utf8               getName\n+  #165 = Utf8               ()Ljava/lang/String;\n+  #166 = Utf8               getNumberOfLinks\n+  #167 = Utf8               getRemoteDevice\n+  #168 = Utf8               getRemoteDeviceMaj\n+  #169 = Utf8               getRemoteDeviceMin\n+  #170 = Utf8               getTime\n+  #171 = Utf8               getLastModifiedDate\n+  #172 = Utf8               ()Ljava/util/Date;\n+  #173 = Utf8               getUID\n+  #174 = Utf8               isBlockDevice\n+  #175 = Utf8               ()Z\n+  #176 = Utf8               isCharacterDevice\n+  #177 = Utf8               isDirectory\n+  #178 = Utf8               isNetwork\n+  #179 = Utf8               isPipe\n+  #180 = Utf8               isRegularFile\n+  #181 = Utf8               isSocket\n+  #182 = Utf8               isSymbolicLink\n+  #183 = Utf8               setChksum\n+  #184 = Utf8               (J)V\n+  #185 = Utf8               setDevice\n+  #186 = Utf8               setDeviceMaj\n+  #187 = Utf8               setDeviceMin\n+  #188 = Utf8               setSize\n+  #189 = Utf8               setGID\n+  #190 = Utf8               setInode\n+  #191 = Utf8               setMode\n+  #192 = Utf8               setName\n+  #193 = Utf8               setNumberOfLinks\n+  #194 = Utf8               setRemoteDevice\n+  #195 = Utf8               setRemoteDeviceMaj\n+  #196 = Utf8               setRemoteDeviceMin\n+  #197 = Utf8               setTime\n+  #198 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n+  #199 = Utf8               setUID\n+  #200 = Utf8               hashCode\n+  #201 = Utf8               equals\n+  #202 = Utf8               (Ljava/lang/Object;)Z\n+  #203 = Utf8               SourceFile\n+  #204 = Utf8               CpioArchiveEntry.java\n+  #205 = NameAndType        #121:#141     // \"<init>\":()V\n+  #206 = NameAndType        #103:#104     // headerSize:I\n+  #207 = NameAndType        #105:#104     // alignmentBoundary:I\n+  #208 = Utf8               java/lang/IllegalArgumentException\n+  #209 = Utf8               java/lang/StringBuilder\n+  #210 = Utf8               Unknown header type\n+  #211 = NameAndType        #289:#290     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #212 = NameAndType        #289:#291     // append:(I)Ljava/lang/StringBuilder;\n+  #213 = NameAndType        #292:#165     // toString:()Ljava/lang/String;\n+  #214 = NameAndType        #121:#126     // \"<init>\":(Ljava/lang/String;)V\n+  #215 = NameAndType        #101:#102     // fileFormat:S\n+  #216 = Utf8               org/apache/commons/compress/archivers/cpio/CpioConstants\n+  #217 = NameAndType        #121:#127     // \"<init>\":(SLjava/lang/String;)V\n+  #218 = NameAndType        #121:#122     // \"<init>\":(S)V\n+  #219 = NameAndType        #115:#116     // name:Ljava/lang/String;\n+  #220 = NameAndType        #188:#184     // setSize:(J)V\n+  #221 = NameAndType        #121:#134     // \"<init>\":(SLjava/io/File;Ljava/lang/String;)V\n+  #222 = NameAndType        #121:#137     // \"<init>\":(SLjava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #223 = NameAndType        #293:#175     // isFile:()Z\n+  #224 = NameAndType        #294:#144     // length:()J\n+  #225 = NameAndType        #121:#129     // \"<init>\":(SLjava/lang/String;J)V\n+  #226 = NameAndType        #177:#175     // isDirectory:()Z\n+  #227 = NameAndType        #191:#184     // setMode:(J)V\n+  #228 = Utf8               Cannot determine type of file\n+  #229 = NameAndType        #164:#165     // getName:()Ljava/lang/String;\n+  #230 = NameAndType        #295:#144     // lastModified:()J\n+  #231 = NameAndType        #197:#184     // setTime:(J)V\n+  #232 = Class              #296          // java/nio/file/Files\n+  #233 = NameAndType        #180:#297     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #234 = NameAndType        #298:#299     // size:(Ljava/nio/file/Path;)J\n+  #235 = NameAndType        #177:#297     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #236 = NameAndType        #289:#300     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #237 = NameAndType        #301:#302     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #238 = NameAndType        #197:#198     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #239 = Utf8               java/lang/UnsupportedOperationException\n+  #240 = NameAndType        #140:#141     // checkNewFormat:()V\n+  #241 = NameAndType        #106:#107     // chksum:J\n+  #242 = NameAndType        #142:#141     // checkOldFormat:()V\n+  #243 = NameAndType        #112:#107     // min:J\n+  #244 = NameAndType        #111:#107     // maj:J\n+  #245 = NameAndType        #108:#107     // filesize:J\n+  #246 = NameAndType        #109:#107     // gid:J\n+  #247 = NameAndType        #155:#159     // getHeaderPadCount:(Ljava/nio/charset/Charset;)I\n+  #248 = NameAndType        #294:#153     // length:()I\n+  #249 = NameAndType        #155:#160     // getHeaderPadCount:(J)I\n+  #250 = NameAndType        #303:#304     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #251 = Class              #305          // org/apache/commons/compress/utils/ExactMath\n+  #252 = NameAndType        #306:#307     // add:(IJ)I\n+  #253 = NameAndType        #110:#107     // inode:J\n+  #254 = NameAndType        #113:#107     // mode:J\n+  #255 = Utf8               TRAILER!!!\n+  #256 = NameAndType        #201:#202     // equals:(Ljava/lang/Object;)Z\n+  #257 = NameAndType        #117:#107     // nlink:J\n+  #258 = NameAndType        #119:#107     // rmin:J\n+  #259 = NameAndType        #118:#107     // rmaj:J\n+  #260 = NameAndType        #114:#107     // mtime:J\n+  #261 = Utf8               java/util/Date\n+  #262 = NameAndType        #170:#144     // getTime:()J\n+  #263 = NameAndType        #121:#184     // \"<init>\":(J)V\n+  #264 = NameAndType        #120:#107     // uid:J\n+  #265 = Class              #308          // org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #266 = NameAndType        #309:#310     // fileType:(J)J\n+  #267 = Utf8               Invalid entry size <\n+  #268 = NameAndType        #289:#311     // append:(J)Ljava/lang/StringBuilder;\n+  #269 = Utf8               >\n+  #270 = Utf8               Unknown mode. Full:\n+  #271 = Class              #312          // java/lang/Long\n+  #272 = NameAndType        #313:#314     // toHexString:(J)Ljava/lang/String;\n+  #273 = Utf8                Masked:\n+  #274 = Class              #315          // java/util/concurrent/TimeUnit\n+  #275 = NameAndType        #316:#317     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #276 = Class              #318          // java/nio/file/attribute/FileTime\n+  #277 = NameAndType        #319:#320     // to:(Ljava/util/concurrent/TimeUnit;)J\n+  #278 = Utf8               java/lang/Object\n+  #279 = Class              #321          // java/util/Objects\n+  #280 = NameAndType        #322:#323     // hash:([Ljava/lang/Object;)I\n+  #281 = NameAndType        #324:#325     // getClass:()Ljava/lang/Class;\n+  #282 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveEntry\n+  #283 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #284 = Utf8               java/io/IOException\n+  #285 = Utf8               java/io/File\n+  #286 = Utf8               java/lang/String\n+  #287 = Utf8               java/nio/file/Path\n+  #288 = Utf8               [Ljava/nio/file/LinkOption;\n+  #289 = Utf8               append\n+  #290 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #291 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #292 = Utf8               toString\n+  #293 = Utf8               isFile\n+  #294 = Utf8               length\n+  #295 = Utf8               lastModified\n+  #296 = Utf8               java/nio/file/Files\n+  #297 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #298 = Utf8               size\n+  #299 = Utf8               (Ljava/nio/file/Path;)J\n+  #300 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #301 = Utf8               getLastModifiedTime\n+  #302 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #303 = Utf8               getBytes\n+  #304 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #305 = Utf8               org/apache/commons/compress/utils/ExactMath\n+  #306 = Utf8               add\n+  #307 = Utf8               (IJ)I\n+  #308 = Utf8               org/apache/commons/compress/archivers/cpio/CpioUtil\n+  #309 = Utf8               fileType\n+  #310 = Utf8               (J)J\n+  #311 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #312 = Utf8               java/lang/Long\n+  #313 = Utf8               toHexString\n+  #314 = Utf8               (J)Ljava/lang/String;\n+  #315 = Utf8               java/util/concurrent/TimeUnit\n+  #316 = Utf8               SECONDS\n+  #317 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #318 = Utf8               java/nio/file/attribute/FileTime\n+  #319 = Utf8               to\n+  #320 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n+  #321 = Utf8               java/util/Objects\n+  #322 = Utf8               hash\n+  #323 = Utf8               ([Ljava/lang/Object;)I\n+  #324 = Utf8               getClass\n+  #325 = Utf8               ()Ljava/lang/Class;\n {\n   private final short fileFormat;\n     descriptor: S\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int headerSize;\n     descriptor: I\n@@ -900,15 +897,15 @@\n          1: aconst_null\n          2: invokevirtual #53                 // Method getHeaderPadCount:(Ljava/nio/charset/Charset;)I\n          5: ireturn\n       LineNumberTable:\n         line 539: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #159()\n+      0: #158()\n         java.lang.Deprecated\n \n   public int getHeaderPadCount(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n"}]}
