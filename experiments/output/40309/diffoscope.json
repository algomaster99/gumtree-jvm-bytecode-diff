{"diffoscope-json-version": 1, "source1": "first/CountingInputStream.class", "source2": "second/CountingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,104 +1,106 @@\n-  SHA-256 checksum 2909b2d724a6379ce5a806897dfda46b4967ab9e70fe3597361c26ae0c5c19e4\n+  SHA-256 checksum 8fba92205c7229fe545f3faf484eca7a667e0b2b8147b41f41af78ed22d97ae7\n   Compiled from \"CountingInputStream.java\"\n public class org.apache.commons.compress.utils.CountingInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/compress/utils/CountingInputStream\n-  super_class: #11                        // java/io/FilterInputStream\n+  this_class: #1                          // org/apache/commons/compress/utils/CountingInputStream\n+  super_class: #3                         // java/io/FilterInputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#42        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #2 = Fieldref           #10.#43        // org/apache/commons/compress/utils/CountingInputStream.in:Ljava/io/InputStream;\n-   #3 = Methodref          #44.#45        // java/io/InputStream.read:()I\n-   #4 = Methodref          #10.#46        // org/apache/commons/compress/utils/CountingInputStream.count:(J)V\n-   #5 = Methodref          #10.#47        // org/apache/commons/compress/utils/CountingInputStream.read:([BII)I\n-   #6 = Methodref          #44.#47        // java/io/InputStream.read:([BII)I\n-   #7 = Long               -1l\n-   #9 = Fieldref           #10.#48        // org/apache/commons/compress/utils/CountingInputStream.bytesRead:J\n-  #10 = Class              #49            // org/apache/commons/compress/utils/CountingInputStream\n-  #11 = Class              #50            // java/io/FilterInputStream\n-  #12 = Utf8               bytesRead\n-  #13 = Utf8               J\n-  #14 = Utf8               <init>\n-  #15 = Utf8               (Ljava/io/InputStream;)V\n-  #16 = Utf8               Code\n-  #17 = Utf8               LineNumberTable\n-  #18 = Utf8               LocalVariableTable\n-  #19 = Utf8               this\n-  #20 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #21 = Utf8               in\n-  #22 = Utf8               Ljava/io/InputStream;\n-  #23 = Utf8               read\n-  #24 = Utf8               ()I\n-  #25 = Utf8               r\n-  #26 = Utf8               I\n-  #27 = Utf8               StackMapTable\n-  #28 = Utf8               Exceptions\n-  #29 = Class              #51            // java/io/IOException\n-  #30 = Utf8               ([B)I\n-  #31 = Utf8               b\n-  #32 = Utf8               [B\n-  #33 = Utf8               ([BII)I\n-  #34 = Utf8               off\n-  #35 = Utf8               len\n-  #36 = Utf8               count\n-  #37 = Utf8               (J)V\n-  #38 = Utf8               getBytesRead\n-  #39 = Utf8               ()J\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               CountingInputStream.java\n-  #42 = NameAndType        #14:#15        // \"<init>\":(Ljava/io/InputStream;)V\n-  #43 = NameAndType        #21:#22        // in:Ljava/io/InputStream;\n-  #44 = Class              #52            // java/io/InputStream\n-  #45 = NameAndType        #23:#24        // read:()I\n-  #46 = NameAndType        #36:#37        // count:(J)V\n-  #47 = NameAndType        #23:#33        // read:([BII)I\n-  #48 = NameAndType        #12:#13        // bytesRead:J\n-  #49 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #50 = Utf8               java/io/FilterInputStream\n-  #51 = Utf8               java/io/IOException\n-  #52 = Utf8               java/io/InputStream\n+   #1 = Class              #2             // org/apache/commons/compress/utils/CountingInputStream\n+   #2 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #3 = Class              #4             // java/io/FilterInputStream\n+   #4 = Utf8               java/io/FilterInputStream\n+   #5 = Utf8               bytesRead\n+   #6 = Utf8               J\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/InputStream;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #16 = Utf8               in\n+  #17 = Utf8               Ljava/io/InputStream;\n+  #18 = Utf8               read\n+  #19 = Utf8               ()I\n+  #20 = Utf8               Exceptions\n+  #21 = Class              #22            // java/io/IOException\n+  #22 = Utf8               java/io/IOException\n+  #23 = Fieldref           #1.#24         // org/apache/commons/compress/utils/CountingInputStream.in:Ljava/io/InputStream;\n+  #24 = NameAndType        #16:#17        // in:Ljava/io/InputStream;\n+  #25 = Methodref          #26.#28        // java/io/InputStream.read:()I\n+  #26 = Class              #27            // java/io/InputStream\n+  #27 = Utf8               java/io/InputStream\n+  #28 = NameAndType        #18:#19        // read:()I\n+  #29 = Methodref          #1.#30         // org/apache/commons/compress/utils/CountingInputStream.count:(J)V\n+  #30 = NameAndType        #31:#32        // count:(J)V\n+  #31 = Utf8               count\n+  #32 = Utf8               (J)V\n+  #33 = Utf8               r\n+  #34 = Utf8               I\n+  #35 = Utf8               StackMapTable\n+  #36 = Utf8               ([B)I\n+  #37 = Methodref          #1.#38         // org/apache/commons/compress/utils/CountingInputStream.read:([BII)I\n+  #38 = NameAndType        #18:#39        // read:([BII)I\n+  #39 = Utf8               ([BII)I\n+  #40 = Utf8               b\n+  #41 = Utf8               [B\n+  #42 = Methodref          #26.#38        // java/io/InputStream.read:([BII)I\n+  #43 = Utf8               off\n+  #44 = Utf8               len\n+  #45 = Long               -1l\n+  #47 = Fieldref           #1.#48         // org/apache/commons/compress/utils/CountingInputStream.bytesRead:J\n+  #48 = NameAndType        #5:#6          // bytesRead:J\n+  #49 = Utf8               getBytesRead\n+  #50 = Utf8               ()J\n+  #51 = Utf8               SourceFile\n+  #52 = Utf8               CountingInputStream.java\n {\n   private long bytesRead;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.compress.utils.CountingInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #10                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/utils/CountingInputStream;\n             0       6     1    in   Ljava/io/InputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #3                  // Method java/io/InputStream.read:()I\n+         1: getfield      #23                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #25                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iflt          17\n         12: aload_0\n         13: lconst_1\n-        14: invokevirtual #4                  // Method count:(J)V\n+        14: invokevirtual #29                 // Method count:(J)V\n         17: iload_1\n         18: ireturn\n       LineNumberTable:\n         line 39: 0\n         line 40: 8\n         line 41: 12\n         line 43: 17\n@@ -106,60 +108,60 @@\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/utils/CountingInputStream;\n             8      11     1     r   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #5                  // Method read:([BII)I\n+         5: invokevirtual #37                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 48: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/utils/CountingInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #2                  // Field in:Ljava/io/InputStream;\n+         7: getfield      #23                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #6                  // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #42                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iflt          30\n         23: aload_0\n         24: iload         4\n         26: i2l\n-        27: invokevirtual #4                  // Method count:(J)V\n+        27: invokevirtual #29                 // Method count:(J)V\n         30: iload         4\n         32: ireturn\n       LineNumberTable:\n         line 53: 0\n         line 54: 4\n         line 56: 6\n         line 57: 18\n@@ -173,32 +175,30 @@\n             0      33     3   len   I\n            18      15     4     r   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected final void count(long);\n     descriptor: (J)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #7                  // long -1l\n+         1: ldc2_w        #45                 // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n          9: dup\n-        10: getfield      #9                  // Field bytesRead:J\n+        10: getfield      #47                 // Field bytesRead:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #9                  // Field bytesRead:J\n+        15: putfield      #47                 // Field bytesRead:J\n         18: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 8\n         line 73: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -209,15 +209,15 @@\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field bytesRead:J\n+         1: getfield      #47                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/CountingInputStream;\n }\n"}]}
