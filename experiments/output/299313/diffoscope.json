{"diffoscope-json-version": 1, "source1": "first/RegexpOnFilenameCheck.class", "source2": "second/RegexpOnFilenameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,162 +1,162 @@\n-  SHA-256 checksum 05f63f1d5b9c5b2ba15e38b14f601678062380f04ccf1ecdf31edd4d51408ccc\n+  SHA-256 checksum 9ecdcec321612c3e7c9a4590c152d2bed7d3b000695a96534e8040a09c0cf301\n   Compiled from \"RegexpOnFilenameCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.regexp.RegexpOnFilenameCheck extends com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #26                         // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n-  super_class: #32                        // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+  this_class: #8                          // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n   interfaces: 0, fields: 6, methods: 13, attributes: 4\n Constant pool:\n-    #1 = Methodref          #32.#72       // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.\"<init>\":()V\n-    #2 = Fieldref           #26.#73       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.match:Z\n-    #3 = Fieldref           #26.#74       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.folderPattern:Ljava/util/regex/Pattern;\n-    #4 = Fieldref           #26.#75       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.fileNamePattern:Ljava/util/regex/Pattern;\n-    #5 = Fieldref           #26.#76       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.ignoreFileNameExtensions:Z\n-    #6 = String             #77           // \\\\s\n-    #7 = Methodref          #78.#79       // com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #8 = Methodref          #26.#80       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getFileName:(Ljava/io/File;)Ljava/lang/String;\n-    #9 = Methodref          #26.#81       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n-   #10 = Methodref          #26.#82       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.isMatchFolder:(Ljava/lang/String;)Z\n-   #11 = Methodref          #26.#83       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.isMatchFile:(Ljava/lang/String;)Z\n-   #12 = Methodref          #26.#84       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.log:()V\n-   #13 = Methodref          #85.#86       // java/io/File.getName:()Ljava/lang/String;\n-   #14 = Methodref          #78.#87       // com/puppycrawl/tools/checkstyle/utils/CommonUtil.getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #85.#88       // java/io/File.getCanonicalFile:()Ljava/io/File;\n-   #16 = Methodref          #85.#89       // java/io/File.getParent:()Ljava/lang/String;\n-   #17 = Class              #90           // java/io/IOException\n-   #18 = Class              #91           // com/puppycrawl/tools/checkstyle/api/CheckstyleException\n-   #19 = Methodref          #85.#92       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n-   #20 = InvokeDynamic      #0:#96        // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Methodref          #18.#97       // com/puppycrawl/tools/checkstyle/api/CheckstyleException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Methodref          #98.#99       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #23 = Methodref          #100.#101     // java/util/regex/Matcher.find:()Z\n-   #24 = String             #102          //\n-   #25 = Methodref          #26.#103      // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n-   #26 = Class              #104          // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n-   #27 = String             #105          // regexp.filename.match\n-   #28 = Class              #106          // java/lang/Object\n-   #29 = Methodref          #26.#107      // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.log:(ILjava/lang/String;[Ljava/lang/Object;)V\n-   #30 = String             #108          // regexp.filename.mismatch\n-   #31 = Methodref          #98.#109      // java/util/regex/Pattern.toString:()Ljava/lang/String;\n-   #32 = Class              #110          // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n-   #33 = Utf8               MSG_MATCH\n-   #34 = Utf8               Ljava/lang/String;\n-   #35 = Utf8               ConstantValue\n-   #36 = Utf8               MSG_MISMATCH\n-   #37 = Utf8               folderPattern\n-   #38 = Utf8               Ljava/util/regex/Pattern;\n-   #39 = Utf8               fileNamePattern\n-   #40 = Utf8               match\n-   #41 = Utf8               Z\n-   #42 = Utf8               ignoreFileNameExtensions\n-   #43 = Utf8               <init>\n-   #44 = Utf8               ()V\n-   #45 = Utf8               Code\n-   #46 = Utf8               LineNumberTable\n-   #47 = Utf8               setFolderPattern\n-   #48 = Utf8               (Ljava/util/regex/Pattern;)V\n-   #49 = Utf8               setFileNamePattern\n-   #50 = Utf8               setMatch\n-   #51 = Utf8               (Z)V\n-   #52 = Utf8               setIgnoreFileNameExtensions\n-   #53 = Utf8               init\n-   #54 = Utf8               StackMapTable\n-   #55 = Utf8               processFiltered\n-   #56 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n-   #57 = Class              #111          // java/lang/String\n-   #58 = Utf8               Exceptions\n-   #59 = Utf8               getFileName\n-   #60 = Utf8               (Ljava/io/File;)Ljava/lang/String;\n-   #61 = Utf8               getFolderPath\n-   #62 = Utf8               isMatchFolder\n-   #63 = Utf8               (Ljava/lang/String;)Z\n-   #64 = Utf8               isMatchFile\n-   #65 = Utf8               log\n-   #66 = Utf8               getStringOrDefault\n-   #67 = Utf8               (Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               RegexpOnFilenameCheck.java\n-   #70 = Utf8               RuntimeVisibleAnnotations\n-   #71 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-   #72 = NameAndType        #43:#44       // \"<init>\":()V\n-   #73 = NameAndType        #40:#41       // match:Z\n-   #74 = NameAndType        #37:#38       // folderPattern:Ljava/util/regex/Pattern;\n-   #75 = NameAndType        #39:#38       // fileNamePattern:Ljava/util/regex/Pattern;\n-   #76 = NameAndType        #42:#41       // ignoreFileNameExtensions:Z\n-   #77 = Utf8               \\\\s\n-   #78 = Class              #112          // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-   #79 = NameAndType        #113:#114     // createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #80 = NameAndType        #59:#60       // getFileName:(Ljava/io/File;)Ljava/lang/String;\n-   #81 = NameAndType        #61:#60       // getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n-   #82 = NameAndType        #62:#63       // isMatchFolder:(Ljava/lang/String;)Z\n-   #83 = NameAndType        #64:#63       // isMatchFile:(Ljava/lang/String;)Z\n-   #84 = NameAndType        #65:#44       // log:()V\n-   #85 = Class              #115          // java/io/File\n-   #86 = NameAndType        #116:#117     // getName:()Ljava/lang/String;\n-   #87 = NameAndType        #118:#119     // getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #88 = NameAndType        #120:#121     // getCanonicalFile:()Ljava/io/File;\n-   #89 = NameAndType        #122:#117     // getParent:()Ljava/lang/String;\n-   #90 = Utf8               java/io/IOException\n-   #91 = Utf8               com/puppycrawl/tools/checkstyle/api/CheckstyleException\n-   #92 = NameAndType        #123:#117     // getAbsolutePath:()Ljava/lang/String;\n-   #93 = Utf8               BootstrapMethods\n-   #94 = MethodHandle       6:#124        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #95 = String             #125          // unable to create canonical path names for \\u0001\n-   #96 = NameAndType        #126:#119     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #97 = NameAndType        #43:#127      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #98 = Class              #128          // java/util/regex/Pattern\n-   #99 = NameAndType        #129:#130     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #100 = Class              #131          // java/util/regex/Matcher\n-  #101 = NameAndType        #132:#133     // find:()Z\n-  #102 = Utf8\n-  #103 = NameAndType        #66:#67       // getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n-  #104 = Utf8               com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n-  #105 = Utf8               regexp.filename.match\n-  #106 = Utf8               java/lang/Object\n-  #107 = NameAndType        #65:#134      // log:(ILjava/lang/String;[Ljava/lang/Object;)V\n-  #108 = Utf8               regexp.filename.mismatch\n-  #109 = NameAndType        #135:#117     // toString:()Ljava/lang/String;\n-  #110 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n-  #111 = Utf8               java/lang/String\n-  #112 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #113 = Utf8               createPattern\n-  #114 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #115 = Utf8               java/io/File\n-  #116 = Utf8               getName\n-  #117 = Utf8               ()Ljava/lang/String;\n-  #118 = Utf8               getFileNameWithoutExtension\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #120 = Utf8               getCanonicalFile\n-  #121 = Utf8               ()Ljava/io/File;\n-  #122 = Utf8               getParent\n-  #123 = Utf8               getAbsolutePath\n-  #124 = Methodref          #136.#137     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #125 = Utf8               unable to create canonical path names for \\u0001\n-  #126 = Utf8               makeConcatWithConstants\n-  #127 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #128 = Utf8               java/util/regex/Pattern\n-  #129 = Utf8               matcher\n-  #130 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #131 = Utf8               java/util/regex/Matcher\n-  #132 = Utf8               find\n-  #133 = Utf8               ()Z\n-  #134 = Utf8               (ILjava/lang/String;[Ljava/lang/Object;)V\n-  #135 = Utf8               toString\n-  #136 = Class              #138          // java/lang/invoke/StringConcatFactory\n-  #137 = NameAndType        #126:#142     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #138 = Utf8               java/lang/invoke/StringConcatFactory\n-  #139 = Class              #144          // java/lang/invoke/MethodHandles$Lookup\n-  #140 = Utf8               Lookup\n-  #141 = Utf8               InnerClasses\n-  #142 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #143 = Class              #145          // java/lang/invoke/MethodHandles\n-  #144 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #145 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.\"<init>\":()V\n+    #2 = Class              #4            // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.match:Z\n+    #8 = Class              #10           // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n+    #9 = NameAndType        #11:#12       // match:Z\n+   #10 = Utf8               com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck\n+   #11 = Utf8               match\n+   #12 = Utf8               Z\n+   #13 = Fieldref           #8.#14        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.folderPattern:Ljava/util/regex/Pattern;\n+   #14 = NameAndType        #15:#16       // folderPattern:Ljava/util/regex/Pattern;\n+   #15 = Utf8               folderPattern\n+   #16 = Utf8               Ljava/util/regex/Pattern;\n+   #17 = Fieldref           #8.#18        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.fileNamePattern:Ljava/util/regex/Pattern;\n+   #18 = NameAndType        #19:#16       // fileNamePattern:Ljava/util/regex/Pattern;\n+   #19 = Utf8               fileNamePattern\n+   #20 = Fieldref           #8.#21        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.ignoreFileNameExtensions:Z\n+   #21 = NameAndType        #22:#12       // ignoreFileNameExtensions:Z\n+   #22 = Utf8               ignoreFileNameExtensions\n+   #23 = String             #24           // \\\\s\n+   #24 = Utf8               \\\\s\n+   #25 = Methodref          #26.#27       // com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #26 = Class              #28           // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+   #27 = NameAndType        #29:#30       // createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #28 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+   #29 = Utf8               createPattern\n+   #30 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #31 = Methodref          #8.#32        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getFileName:(Ljava/io/File;)Ljava/lang/String;\n+   #32 = NameAndType        #33:#34       // getFileName:(Ljava/io/File;)Ljava/lang/String;\n+   #33 = Utf8               getFileName\n+   #34 = Utf8               (Ljava/io/File;)Ljava/lang/String;\n+   #35 = Methodref          #8.#36        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n+   #36 = NameAndType        #37:#34       // getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n+   #37 = Utf8               getFolderPath\n+   #38 = Methodref          #8.#39        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.isMatchFolder:(Ljava/lang/String;)Z\n+   #39 = NameAndType        #40:#41       // isMatchFolder:(Ljava/lang/String;)Z\n+   #40 = Utf8               isMatchFolder\n+   #41 = Utf8               (Ljava/lang/String;)Z\n+   #42 = Methodref          #8.#43        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.isMatchFile:(Ljava/lang/String;)Z\n+   #43 = NameAndType        #44:#41       // isMatchFile:(Ljava/lang/String;)Z\n+   #44 = Utf8               isMatchFile\n+   #45 = Methodref          #8.#46        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.log:()V\n+   #46 = NameAndType        #47:#6        // log:()V\n+   #47 = Utf8               log\n+   #48 = Methodref          #49.#50       // java/io/File.getName:()Ljava/lang/String;\n+   #49 = Class              #51           // java/io/File\n+   #50 = NameAndType        #52:#53       // getName:()Ljava/lang/String;\n+   #51 = Utf8               java/io/File\n+   #52 = Utf8               getName\n+   #53 = Utf8               ()Ljava/lang/String;\n+   #54 = Methodref          #26.#55       // com/puppycrawl/tools/checkstyle/utils/CommonUtil.getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #55 = NameAndType        #56:#57       // getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #56 = Utf8               getFileNameWithoutExtension\n+   #57 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #58 = Methodref          #49.#59       // java/io/File.getCanonicalFile:()Ljava/io/File;\n+   #59 = NameAndType        #60:#61       // getCanonicalFile:()Ljava/io/File;\n+   #60 = Utf8               getCanonicalFile\n+   #61 = Utf8               ()Ljava/io/File;\n+   #62 = Methodref          #49.#63       // java/io/File.getParent:()Ljava/lang/String;\n+   #63 = NameAndType        #64:#53       // getParent:()Ljava/lang/String;\n+   #64 = Utf8               getParent\n+   #65 = Class              #66           // java/io/IOException\n+   #66 = Utf8               java/io/IOException\n+   #67 = Class              #68           // com/puppycrawl/tools/checkstyle/api/CheckstyleException\n+   #68 = Utf8               com/puppycrawl/tools/checkstyle/api/CheckstyleException\n+   #69 = Methodref          #49.#70       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n+   #70 = NameAndType        #71:#53       // getAbsolutePath:()Ljava/lang/String;\n+   #71 = Utf8               getAbsolutePath\n+   #72 = InvokeDynamic      #0:#73        // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #73 = NameAndType        #74:#57       // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #74 = Utf8               makeConcatWithConstants\n+   #75 = Methodref          #67.#76       // com/puppycrawl/tools/checkstyle/api/CheckstyleException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #76 = NameAndType        #5:#77        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #77 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #78 = Methodref          #79.#80       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #79 = Class              #81           // java/util/regex/Pattern\n+   #80 = NameAndType        #82:#83       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #81 = Utf8               java/util/regex/Pattern\n+   #82 = Utf8               matcher\n+   #83 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #84 = Methodref          #85.#86       // java/util/regex/Matcher.find:()Z\n+   #85 = Class              #87           // java/util/regex/Matcher\n+   #86 = NameAndType        #88:#89       // find:()Z\n+   #87 = Utf8               java/util/regex/Matcher\n+   #88 = Utf8               find\n+   #89 = Utf8               ()Z\n+   #90 = String             #91           //\n+   #91 = Utf8\n+   #92 = Methodref          #8.#93        // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n+   #93 = NameAndType        #94:#95       // getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n+   #94 = Utf8               getStringOrDefault\n+   #95 = Utf8               (Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n+   #96 = String             #97           // regexp.filename.match\n+   #97 = Utf8               regexp.filename.match\n+   #98 = Class              #99           // java/lang/Object\n+   #99 = Utf8               java/lang/Object\n+  #100 = Methodref          #8.#101       // com/puppycrawl/tools/checkstyle/checks/regexp/RegexpOnFilenameCheck.log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+  #101 = NameAndType        #47:#102      // log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+  #102 = Utf8               (ILjava/lang/String;[Ljava/lang/Object;)V\n+  #103 = String             #104          // regexp.filename.mismatch\n+  #104 = Utf8               regexp.filename.mismatch\n+  #105 = Methodref          #79.#106      // java/util/regex/Pattern.toString:()Ljava/lang/String;\n+  #106 = NameAndType        #107:#53      // toString:()Ljava/lang/String;\n+  #107 = Utf8               toString\n+  #108 = Utf8               MSG_MATCH\n+  #109 = Utf8               Ljava/lang/String;\n+  #110 = Utf8               ConstantValue\n+  #111 = Utf8               MSG_MISMATCH\n+  #112 = Utf8               Code\n+  #113 = Utf8               LineNumberTable\n+  #114 = Utf8               setFolderPattern\n+  #115 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #116 = Utf8               setFileNamePattern\n+  #117 = Utf8               setMatch\n+  #118 = Utf8               (Z)V\n+  #119 = Utf8               setIgnoreFileNameExtensions\n+  #120 = Utf8               init\n+  #121 = Utf8               StackMapTable\n+  #122 = Utf8               processFiltered\n+  #123 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n+  #124 = Class              #125          // java/lang/String\n+  #125 = Utf8               java/lang/String\n+  #126 = Utf8               Exceptions\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               RegexpOnFilenameCheck.java\n+  #129 = Utf8               RuntimeVisibleAnnotations\n+  #130 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n+  #131 = Utf8               BootstrapMethods\n+  #132 = MethodHandle       6:#133        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #133 = Methodref          #134.#135     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #134 = Class              #136          // java/lang/invoke/StringConcatFactory\n+  #135 = NameAndType        #74:#137      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #136 = Utf8               java/lang/invoke/StringConcatFactory\n+  #137 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #138 = String             #139          // unable to create canonical path names for \\u0001\n+  #139 = Utf8               unable to create canonical path names for \\u0001\n+  #140 = Utf8               InnerClasses\n+  #141 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n+  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #143 = Class              #144          // java/lang/invoke/MethodHandles\n+  #144 = Utf8               java/lang/invoke/MethodHandles\n+  #145 = Utf8               Lookup\n {\n   public static final java.lang.String MSG_MATCH = \"regexp.filename.match\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String regexp.filename.match\n \n   public static final java.lang.String MSG_MISMATCH = \"regexp.filename.mismatch\";\n@@ -185,87 +185,87 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #2                  // Field match:Z\n+         6: putfield      #7                  // Field match:Z\n          9: return\n       LineNumberTable:\n         line 263: 0\n         line 284: 4\n \n   public void setFolderPattern(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #3                  // Field folderPattern:Ljava/util/regex/Pattern;\n+         2: putfield      #13                 // Field folderPattern:Ljava/util/regex/Pattern;\n          5: return\n       LineNumberTable:\n         line 295: 0\n         line 296: 5\n \n   public void setFileNamePattern(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         2: putfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n          5: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 5\n \n   public void setMatch(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #2                  // Field match:Z\n+         2: putfield      #7                  // Field match:Z\n          5: return\n       LineNumberTable:\n         line 316: 0\n         line 317: 5\n \n   public void setIgnoreFileNameExtensions(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field ignoreFileNameExtensions:Z\n+         2: putfield      #20                 // Field ignoreFileNameExtensions:Z\n          5: return\n       LineNumberTable:\n         line 326: 0\n         line 327: 5\n \n   public void init();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         1: getfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n          4: ifnonnull     23\n          7: aload_0\n-         8: getfield      #3                  // Field folderPattern:Ljava/util/regex/Pattern;\n+         8: getfield      #13                 // Field folderPattern:Ljava/util/regex/Pattern;\n         11: ifnonnull     23\n         14: aload_0\n-        15: ldc           #6                  // String \\\\s\n-        17: invokestatic  #7                  // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        20: putfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+        15: ldc           #23                 // String \\\\s\n+        17: invokestatic  #25                 // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.createPattern:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        20: putfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n         23: return\n       LineNumberTable:\n         line 331: 0\n         line 332: 14\n         line 334: 23\n       StackMapTable: number_of_entries = 1\n         frame_type = 23 /* same */\n@@ -273,29 +273,29 @@\n   protected void processFiltered(java.io.File, com.puppycrawl.tools.checkstyle.api.FileText) throws com.puppycrawl.tools.checkstyle.api.CheckstyleException;\n     descriptor: (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=5, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #8                  // Method getFileName:(Ljava/io/File;)Ljava/lang/String;\n+         2: invokevirtual #31                 // Method getFileName:(Ljava/io/File;)Ljava/lang/String;\n          5: astore_3\n          6: aload_1\n-         7: invokestatic  #9                  // Method getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n+         7: invokestatic  #35                 // Method getFolderPath:(Ljava/io/File;)Ljava/lang/String;\n         10: astore        4\n         12: aload_0\n         13: aload         4\n-        15: invokevirtual #10                 // Method isMatchFolder:(Ljava/lang/String;)Z\n+        15: invokevirtual #38                 // Method isMatchFolder:(Ljava/lang/String;)Z\n         18: ifeq          33\n         21: aload_0\n         22: aload_3\n-        23: invokevirtual #11                 // Method isMatchFile:(Ljava/lang/String;)Z\n+        23: invokevirtual #42                 // Method isMatchFile:(Ljava/lang/String;)Z\n         26: ifeq          33\n         29: aload_0\n-        30: invokevirtual #12                 // Method log:()V\n+        30: invokevirtual #45                 // Method log:()V\n         33: return\n       LineNumberTable:\n         line 338: 0\n         line 339: 6\n         line 341: 12\n         line 342: 29\n         line 344: 33\n@@ -308,21 +308,21 @@\n \n   private java.lang.String getFileName(java.io.File);\n     descriptor: (Ljava/io/File;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #13                 // Method java/io/File.getName:()Ljava/lang/String;\n+         1: invokevirtual #48                 // Method java/io/File.getName:()Ljava/lang/String;\n          4: astore_2\n          5: aload_0\n-         6: getfield      #5                  // Field ignoreFileNameExtensions:Z\n+         6: getfield      #20                 // Field ignoreFileNameExtensions:Z\n          9: ifeq          17\n         12: aload_2\n-        13: invokestatic  #14                 // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        13: invokestatic  #54                 // Method com/puppycrawl/tools/checkstyle/utils/CommonUtil.getFileNameWithoutExtension:(Ljava/lang/String;)Ljava/lang/String;\n         16: astore_2\n         17: aload_2\n         18: areturn\n       LineNumberTable:\n         line 353: 0\n         line 355: 5\n         line 356: 12\n@@ -334,25 +334,25 @@\n \n   private static java.lang.String getFolderPath(java.io.File) throws com.puppycrawl.tools.checkstyle.api.CheckstyleException;\n     descriptor: (Ljava/io/File;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;\n-         4: invokevirtual #16                 // Method java/io/File.getParent:()Ljava/lang/String;\n+         1: invokevirtual #58                 // Method java/io/File.getCanonicalFile:()Ljava/io/File;\n+         4: invokevirtual #62                 // Method java/io/File.getParent:()Ljava/lang/String;\n          7: areturn\n          8: astore_1\n-         9: new           #18                 // class com/puppycrawl/tools/checkstyle/api/CheckstyleException\n+         9: new           #67                 // class com/puppycrawl/tools/checkstyle/api/CheckstyleException\n         12: dup\n         13: aload_0\n-        14: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n-        17: invokedynamic #20,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        14: invokevirtual #69                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n+        17: invokedynamic #72,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n         22: aload_1\n-        23: invokespecial #21                 // Method com/puppycrawl/tools/checkstyle/api/CheckstyleException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        23: invokespecial #75                 // Method com/puppycrawl/tools/checkstyle/api/CheckstyleException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         26: athrow\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 372: 0\n         line 374: 8\n@@ -366,34 +366,34 @@\n \n   private boolean isMatchFolder(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #3                  // Field folderPattern:Ljava/util/regex/Pattern;\n+         1: getfield      #13                 // Field folderPattern:Ljava/util/regex/Pattern;\n          4: ifnonnull     12\n          7: iconst_1\n          8: istore_2\n          9: goto          53\n         12: aload_0\n-        13: getfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+        13: getfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n         16: ifnonnull     26\n         19: aload_0\n-        20: getfield      #2                  // Field match:Z\n+        20: getfield      #7                  // Field match:Z\n         23: ifeq          30\n         26: iconst_1\n         27: goto          31\n         30: iconst_0\n         31: istore_3\n         32: aload_0\n-        33: getfield      #3                  // Field folderPattern:Ljava/util/regex/Pattern;\n+        33: getfield      #13                 // Field folderPattern:Ljava/util/regex/Pattern;\n         36: aload_1\n-        37: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        40: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z\n+        37: invokevirtual #78                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        40: invokevirtual #84                 // Method java/util/regex/Matcher.find:()Z\n         43: iload_3\n         44: if_icmpne     51\n         47: iconst_1\n         48: goto          52\n         51: iconst_0\n         52: istore_2\n         53: iload_2\n@@ -422,23 +422,23 @@\n \n   private boolean isMatchFile(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         1: getfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n          4: ifnull        25\n          7: aload_0\n-         8: getfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         8: getfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n         11: aload_1\n-        12: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        15: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z\n+        12: invokevirtual #78                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        15: invokevirtual #84                 // Method java/util/regex/Matcher.find:()Z\n         18: aload_0\n-        19: getfield      #2                  // Field match:Z\n+        19: getfield      #7                  // Field match:Z\n         22: if_icmpne     29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 412: 0\n@@ -450,55 +450,55 @@\n \n   private void log();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field folderPattern:Ljava/util/regex/Pattern;\n-         4: ldc           #24                 // String\n-         6: invokestatic  #25                 // Method getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n+         1: getfield      #13                 // Field folderPattern:Ljava/util/regex/Pattern;\n+         4: ldc           #90                 // String\n+         6: invokestatic  #92                 // Method getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n          9: astore_1\n         10: aload_0\n-        11: getfield      #4                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n-        14: ldc           #24                 // String\n-        16: invokestatic  #25                 // Method getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n+        11: getfield      #17                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n+        14: ldc           #90                 // String\n+        16: invokestatic  #92                 // Method getStringOrDefault:(Ljava/util/regex/Pattern;Ljava/lang/String;)Ljava/lang/String;\n         19: astore_2\n         20: aload_0\n-        21: getfield      #2                  // Field match:Z\n+        21: getfield      #7                  // Field match:Z\n         24: ifeq          49\n         27: aload_0\n         28: iconst_1\n-        29: ldc           #27                 // String regexp.filename.match\n+        29: ldc           #96                 // String regexp.filename.match\n         31: iconst_2\n-        32: anewarray     #28                 // class java/lang/Object\n+        32: anewarray     #98                 // class java/lang/Object\n         35: dup\n         36: iconst_0\n         37: aload_1\n         38: aastore\n         39: dup\n         40: iconst_1\n         41: aload_2\n         42: aastore\n-        43: invokevirtual #29                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+        43: invokevirtual #100                // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n         46: goto          68\n         49: aload_0\n         50: iconst_1\n-        51: ldc           #30                 // String regexp.filename.mismatch\n+        51: ldc           #103                // String regexp.filename.mismatch\n         53: iconst_2\n-        54: anewarray     #28                 // class java/lang/Object\n+        54: anewarray     #98                 // class java/lang/Object\n         57: dup\n         58: iconst_0\n         59: aload_1\n         60: aastore\n         61: dup\n         62: iconst_1\n         63: aload_2\n         64: aastore\n-        65: invokevirtual #29                 // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n+        65: invokevirtual #100                // Method log:(ILjava/lang/String;[Ljava/lang/Object;)V\n         68: return\n       LineNumberTable:\n         line 417: 0\n         line 418: 10\n         line 420: 20\n         line 421: 27\n         line 424: 49\n@@ -516,15 +516,15 @@\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     9\n          4: aload_1\n          5: astore_2\n          6: goto          14\n          9: aload_0\n-        10: invokevirtual #31                 // Method java/util/regex/Pattern.toString:()Ljava/lang/String;\n+        10: invokevirtual #105                // Method java/util/regex/Pattern.toString:()Ljava/lang/String;\n         13: astore_2\n         14: aload_2\n         15: areturn\n       LineNumberTable:\n         line 439: 0\n         line 440: 4\n         line 443: 9\n@@ -533,15 +533,15 @@\n         frame_type = 9 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 4\n           locals = [ class java/lang/String ]\n }\n SourceFile: \"RegexpOnFilenameCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #71()\n+  0: #130()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n-InnerClasses:\n-  public static final #140= #139 of #143; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #94 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #132 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #95 unable to create canonical path names for \\u0001\n+      #138 unable to create canonical path names for \\u0001\n+InnerClasses:\n+  public static final #145= #141 of #143; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
