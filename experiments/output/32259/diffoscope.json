{"diffoscope-json-version": 1, "source1": "first/IOConsumer.class", "source2": "second/IOConsumer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,122 +1,122 @@\n-  SHA-256 checksum 0b5936bcbd3351c1a9e6eba57c92d7d664bba0d2f1f1531e09f568e563278812\n+  SHA-256 checksum f9cae526409d4e72f7cd6bb7e978312d12cd80fe97f0c028780815ade9580dce\n   Compiled from \"IOConsumer.java\"\n public interface org.apache.commons.io.function.IOConsumer<T extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #4                          // org/apache/commons/io/function/IOConsumer\n-  super_class: #5                         // java/lang/Object\n+  this_class: #12                         // org/apache/commons/io/function/IOConsumer\n+  super_class: #16                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 5\n Constant pool:\n-   #1 = Methodref          #33.#34        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #2 = InvokeDynamic      #0:#39         // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-   #3 = InterfaceMethodref #4.#40         // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #4 = Class              #41            // org/apache/commons/io/function/IOConsumer\n-   #5 = Class              #42            // java/lang/Object\n-   #6 = Utf8               accept\n-   #7 = Utf8               (Ljava/lang/Object;)V\n-   #8 = Utf8               Exceptions\n-   #9 = Class              #43            // java/io/IOException\n-  #10 = Utf8               Signature\n-  #11 = Utf8               (TT;)V\n-  #12 = Utf8               andThen\n-  #13 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               LocalVariableTable\n-  #17 = Utf8               this\n-  #18 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-  #19 = Utf8               after\n-  #20 = Utf8               LocalVariableTypeTable\n-  #21 = Utf8               Lorg/apache/commons/io/function/IOConsumer<TT;>;\n-  #22 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-  #23 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n-  #24 = Utf8               lambda$andThen$0\n-  #25 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #26 = Utf8               t\n-  #27 = Utf8               Ljava/lang/Object;\n-  #28 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               IOConsumer.java\n-  #31 = Utf8               RuntimeVisibleAnnotations\n-  #32 = Utf8               Ljava/lang/FunctionalInterface;\n-  #33 = Class              #44            // java/util/Objects\n-  #34 = NameAndType        #45:#46        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #35 = Utf8               BootstrapMethods\n-  #36 = MethodHandle       6:#47          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #37 = MethodType         #7             //  (Ljava/lang/Object;)V\n-  #38 = MethodHandle       7:#48          // REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #39 = NameAndType        #6:#49         // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #40 = NameAndType        #6:#7          // accept:(Ljava/lang/Object;)V\n-  #41 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #42 = Utf8               java/lang/Object\n-  #43 = Utf8               java/io/IOException\n-  #44 = Utf8               java/util/Objects\n-  #45 = Utf8               requireNonNull\n-  #46 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #47 = Methodref          #50.#51        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #48 = InterfaceMethodref #4.#52         // org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #49 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #50 = Class              #53            // java/lang/invoke/LambdaMetafactory\n-  #51 = NameAndType        #54:#58        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #52 = NameAndType        #24:#25        // lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #53 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #54 = Utf8               metafactory\n-  #55 = Class              #60            // java/lang/invoke/MethodHandles$Lookup\n-  #56 = Utf8               Lookup\n-  #57 = Utf8               InnerClasses\n-  #58 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #59 = Class              #61            // java/lang/invoke/MethodHandles\n-  #60 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #61 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Methodref          #2.#3          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #2 = Class              #4             // java/util/Objects\n+   #3 = NameAndType        #5:#6          // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #4 = Utf8               java/util/Objects\n+   #5 = Utf8               requireNonNull\n+   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #7 = InvokeDynamic      #0:#8          // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+   #8 = NameAndType        #9:#10         // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+   #9 = Utf8               accept\n+  #10 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #11 = InterfaceMethodref #12.#13        // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+  #12 = Class              #14            // org/apache/commons/io/function/IOConsumer\n+  #13 = NameAndType        #9:#15         // accept:(Ljava/lang/Object;)V\n+  #14 = Utf8               org/apache/commons/io/function/IOConsumer\n+  #15 = Utf8               (Ljava/lang/Object;)V\n+  #16 = Class              #17            // java/lang/Object\n+  #17 = Utf8               java/lang/Object\n+  #18 = Utf8               Exceptions\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Utf8               Signature\n+  #22 = Utf8               (TT;)V\n+  #23 = Utf8               andThen\n+  #24 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #25 = Utf8               Code\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+  #30 = Utf8               after\n+  #31 = Utf8               LocalVariableTypeTable\n+  #32 = Utf8               Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+  #33 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n+  #34 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+  #35 = Utf8               lambda$andThen$0\n+  #36 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #37 = Utf8               t\n+  #38 = Utf8               Ljava/lang/Object;\n+  #39 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n+  #40 = Utf8               SourceFile\n+  #41 = Utf8               IOConsumer.java\n+  #42 = Utf8               RuntimeVisibleAnnotations\n+  #43 = Utf8               Ljava/lang/FunctionalInterface;\n+  #44 = Utf8               BootstrapMethods\n+  #45 = MethodHandle       6:#46          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #46 = Methodref          #47.#48        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #47 = Class              #49            // java/lang/invoke/LambdaMetafactory\n+  #48 = NameAndType        #50:#51        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #49 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #50 = Utf8               metafactory\n+  #51 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #52 = MethodType         #15            //  (Ljava/lang/Object;)V\n+  #53 = MethodHandle       7:#54          // REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #54 = InterfaceMethodref #12.#55        // org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #55 = NameAndType        #35:#36        // lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #56 = Utf8               InnerClasses\n+  #57 = Class              #58            // java/lang/invoke/MethodHandles$Lookup\n+  #58 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #59 = Class              #60            // java/lang/invoke/MethodHandles\n+  #60 = Utf8               java/lang/invoke/MethodHandles\n+  #61 = Utf8               Lookup\n {\n   public abstract void accept(T) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #11                          // (TT;)V\n+    Signature: #22                          // (TT;)V\n \n   public default org.apache.commons.io.function.IOConsumer<T> andThen(org.apache.commons.io.function.IOConsumer<? super T>);\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #2,  0              // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+         7: invokedynamic #7,  0              // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n         12: areturn\n       LineNumberTable:\n         line 52: 0\n         line 53: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/function/IOConsumer;\n             0      13     1 after   Lorg/apache/commons/io/function/IOConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/function/IOConsumer<TT;>;\n             0      13     1 after   Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-    Signature: #23                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+    Signature: #34                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n \n   private void lambda$andThen$0(org.apache.commons.io.function.IOConsumer, java.lang.Object) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokeinterface #3,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         2: invokeinterface #11,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n          7: aload_1\n          8: aload_2\n-         9: invokeinterface #3,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         9: invokeinterface #11,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n         14: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 7\n         line 56: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -125,20 +125,20 @@\n             0      15     2     t   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOConsumer<TT;>;\n     Exceptions:\n       throws java.io.IOException\n }\n-Signature: #28                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #39                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"IOConsumer.java\"\n RuntimeVisibleAnnotations:\n-  0: #32()\n+  0: #43()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #56= #55 of #59;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #36 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #45 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #37 (Ljava/lang/Object;)V\n-      #38 REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-      #37 (Ljava/lang/Object;)V\n+      #52 (Ljava/lang/Object;)V\n+      #53 REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$0:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+      #52 (Ljava/lang/Object;)V\n+InnerClasses:\n+  public static final #61= #57 of #59;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
