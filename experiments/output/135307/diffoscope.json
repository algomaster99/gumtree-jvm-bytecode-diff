{"diffoscope-json-version": 1, "source1": "first/StackMapType.class", "source2": "second/StackMapType.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,150 +1,150 @@\n-  SHA-256 checksum adc661b2d8274ffed1fa87ab6566ca584f6223e4e77a33ebefdd72a05b8ce154\n+  SHA-256 checksum e59cb0eb127e17cf4327fd76c52a2afe7e99c27e987d28d78380a8e4c89693ef\n   Compiled from \"StackMapType.java\"\n public final class org.apache.bcel.classfile.StackMapType implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/bcel/classfile/StackMapType\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/bcel/classfile/StackMapType\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/bcel/classfile/StackMapType\n+    #2 = Utf8               org/apache/bcel/classfile/StackMapType\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/bcel/classfile/StackMapType.index:I\n-    #8 = Class              #10           // org/apache/bcel/classfile/StackMapType\n-    #9 = NameAndType        #11:#12       // index:I\n-   #10 = Utf8               org/apache/bcel/classfile/StackMapType\n-   #11 = Utf8               index\n-   #12 = Utf8               I\n-   #13 = Class              #14           // org/apache/bcel/Const\n-   #14 = Utf8               org/apache/bcel/Const\n-   #15 = Class              #16           // java/lang/IllegalArgumentException\n-   #16 = Utf8               java/lang/IllegalArgumentException\n-   #17 = Class              #18           // java/lang/StringBuilder\n-   #18 = Utf8               java/lang/StringBuilder\n-   #19 = Methodref          #17.#3        // java/lang/StringBuilder.\"<init>\":()V\n-   #20 = String             #21           // Illegal type for StackMapType:\n-   #21 = Utf8               Illegal type for StackMapType:\n-   #22 = Methodref          #17.#23       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = NameAndType        #24:#25       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Utf8               append\n-   #25 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #17.#27       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = NameAndType        #24:#28       // append:(I)Ljava/lang/StringBuilder;\n-   #28 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #17.#30       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = NameAndType        #31:#32       // toString:()Ljava/lang/String;\n-   #31 = Utf8               toString\n-   #32 = Utf8               ()Ljava/lang/String;\n-   #33 = Methodref          #15.#34       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = NameAndType        #5:#35        // \"<init>\":(Ljava/lang/String;)V\n-   #35 = Utf8               (Ljava/lang/String;)V\n-   #36 = Fieldref           #8.#37        // org/apache/bcel/classfile/StackMapType.type:B\n-   #37 = NameAndType        #38:#39       // type:B\n-   #38 = Utf8               type\n-   #39 = Utf8               B\n-   #40 = Fieldref           #8.#41        // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #41 = NameAndType        #42:#43       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #42 = Utf8               constantPool\n-   #43 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #44 = InterfaceMethodref #45.#46       // java/io/DataInput.readByte:()B\n-   #45 = Class              #47           // java/io/DataInput\n-   #46 = NameAndType        #48:#49       // readByte:()B\n-   #47 = Utf8               java/io/DataInput\n-   #48 = Utf8               readByte\n-   #49 = Utf8               ()B\n-   #50 = Methodref          #8.#51        // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #51 = NameAndType        #5:#52        // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #52 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #53 = Methodref          #8.#54        // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-   #54 = NameAndType        #55:#56       // hasIndex:()Z\n-   #55 = Utf8               hasIndex\n-   #56 = Utf8               ()Z\n-   #57 = InterfaceMethodref #45.#58       // java/io/DataInput.readShort:()S\n-   #58 = NameAndType        #59:#60       // readShort:()S\n-   #59 = Utf8               readShort\n-   #60 = Utf8               ()S\n-   #61 = Methodref          #2.#62        // java/lang/Object.clone:()Ljava/lang/Object;\n-   #62 = NameAndType        #63:#64       // clone:()Ljava/lang/Object;\n-   #63 = Utf8               clone\n-   #64 = Utf8               ()Ljava/lang/Object;\n-   #65 = Class              #66           // java/lang/CloneNotSupportedException\n-   #66 = Utf8               java/lang/CloneNotSupportedException\n-   #67 = Methodref          #68.#69       // java/io/DataOutputStream.writeByte:(I)V\n-   #68 = Class              #70           // java/io/DataOutputStream\n-   #69 = NameAndType        #71:#72       // writeByte:(I)V\n-   #70 = Utf8               java/io/DataOutputStream\n-   #71 = Utf8               writeByte\n-   #72 = Utf8               (I)V\n-   #73 = Methodref          #8.#74        // org/apache/bcel/classfile/StackMapType.getIndex:()I\n-   #74 = NameAndType        #75:#76       // getIndex:()I\n-   #75 = Utf8               getIndex\n-   #76 = Utf8               ()I\n-   #77 = Methodref          #68.#78       // java/io/DataOutputStream.writeShort:(I)V\n-   #78 = NameAndType        #79:#72       // writeShort:(I)V\n-   #79 = Utf8               writeShort\n-   #80 = String             #81           // , class=<unknown>\n-   #81 = Utf8               , class=<unknown>\n-   #82 = String             #83           // , class=\n-   #83 = Utf8               , class=\n-   #84 = Methodref          #85.#86       // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #85 = Class              #87           // org/apache/bcel/classfile/ConstantPool\n-   #86 = NameAndType        #88:#89       // constantToString:(IB)Ljava/lang/String;\n-   #87 = Utf8               org/apache/bcel/classfile/ConstantPool\n-   #88 = Utf8               constantToString\n-   #89 = Utf8               (IB)Ljava/lang/String;\n-   #90 = String             #91           // , offset=\n-   #91 = Utf8               , offset=\n-   #92 = String             #93           //\n-   #93 = Utf8\n-   #94 = String             #95           // (type=\n-   #95 = Utf8               (type=\n-   #96 = Methodref          #13.#97       // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-   #97 = NameAndType        #98:#99       // getItemName:(I)Ljava/lang/String;\n-   #98 = Utf8               getItemName\n-   #99 = Utf8               (I)Ljava/lang/String;\n-  #100 = Methodref          #8.#101       // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n-  #101 = NameAndType        #102:#32      // printIndex:()Ljava/lang/String;\n-  #102 = Utf8               printIndex\n-  #103 = String             #104          // )\n-  #104 = Utf8               )\n-  #105 = Class              #106          // java/lang/Cloneable\n-  #106 = Utf8               java/lang/Cloneable\n-  #107 = Utf8               Code\n-  #108 = Utf8               LineNumberTable\n-  #109 = Utf8               LocalVariableTable\n-  #110 = Utf8               this\n-  #111 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n-  #112 = Utf8               constant_pool\n-  #113 = Utf8               StackMapTable\n-  #114 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #115 = Utf8               file\n-  #116 = Utf8               Ljava/io/DataInput;\n-  #117 = Utf8               Exceptions\n-  #118 = Class              #119          // java/io/IOException\n-  #119 = Utf8               java/io/IOException\n-  #120 = Utf8               copy\n-  #121 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-  #122 = Utf8               dump\n-  #123 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #124 = Utf8               Ljava/io/DataOutputStream;\n-  #125 = Utf8               getConstantPool\n-  #126 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #127 = Utf8               getType\n-  #128 = Utf8               setConstantPool\n-  #129 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #130 = Utf8               setIndex\n-  #131 = Utf8               t\n-  #132 = Utf8               setType\n-  #133 = Utf8               (B)V\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Utf8               type\n+    #8 = Utf8               B\n+    #9 = Utf8               index\n+   #10 = Utf8               I\n+   #11 = Utf8               constantPool\n+   #12 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #15 = Utf8               Code\n+   #16 = Methodref          #3.#17        // java/lang/Object.\"<init>\":()V\n+   #17 = NameAndType        #13:#18       // \"<init>\":()V\n+   #18 = Utf8               ()V\n+   #19 = Fieldref           #1.#20        // org/apache/bcel/classfile/StackMapType.index:I\n+   #20 = NameAndType        #9:#10        // index:I\n+   #21 = Class              #22           // java/lang/IllegalArgumentException\n+   #22 = Utf8               java/lang/IllegalArgumentException\n+   #23 = Class              #24           // java/lang/StringBuilder\n+   #24 = Utf8               java/lang/StringBuilder\n+   #25 = String             #26           // Illegal type for StackMapType:\n+   #26 = Utf8               Illegal type for StackMapType:\n+   #27 = Methodref          #23.#28       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #28 = NameAndType        #13:#29       // \"<init>\":(Ljava/lang/String;)V\n+   #29 = Utf8               (Ljava/lang/String;)V\n+   #30 = Methodref          #23.#31       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #31 = NameAndType        #32:#33       // append:(I)Ljava/lang/StringBuilder;\n+   #32 = Utf8               append\n+   #33 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #34 = Methodref          #23.#35       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #35 = NameAndType        #36:#37       // toString:()Ljava/lang/String;\n+   #36 = Utf8               toString\n+   #37 = Utf8               ()Ljava/lang/String;\n+   #38 = Methodref          #21.#28       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = Fieldref           #1.#40        // org/apache/bcel/classfile/StackMapType.type:B\n+   #40 = NameAndType        #7:#8         // type:B\n+   #41 = Fieldref           #1.#42        // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #42 = NameAndType        #11:#12       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #43 = Utf8               LineNumberTable\n+   #44 = Utf8               LocalVariableTable\n+   #45 = Utf8               this\n+   #46 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n+   #47 = Utf8               constant_pool\n+   #48 = Utf8               StackMapTable\n+   #49 = Class              #50           // org/apache/bcel/classfile/ConstantPool\n+   #50 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #51 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #52 = Utf8               Exceptions\n+   #53 = Class              #54           // java/io/IOException\n+   #54 = Utf8               java/io/IOException\n+   #55 = InterfaceMethodref #56.#58       // java/io/DataInput.readByte:()B\n+   #56 = Class              #57           // java/io/DataInput\n+   #57 = Utf8               java/io/DataInput\n+   #58 = NameAndType        #59:#60       // readByte:()B\n+   #59 = Utf8               readByte\n+   #60 = Utf8               ()B\n+   #61 = Methodref          #1.#62        // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #62 = NameAndType        #13:#14       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #63 = Methodref          #1.#64        // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+   #64 = NameAndType        #65:#66       // hasIndex:()Z\n+   #65 = Utf8               hasIndex\n+   #66 = Utf8               ()Z\n+   #67 = InterfaceMethodref #56.#68       // java/io/DataInput.readShort:()S\n+   #68 = NameAndType        #69:#70       // readShort:()S\n+   #69 = Utf8               readShort\n+   #70 = Utf8               ()S\n+   #71 = Utf8               file\n+   #72 = Utf8               Ljava/io/DataInput;\n+   #73 = Utf8               copy\n+   #74 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+   #75 = Methodref          #3.#76        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #76 = NameAndType        #77:#78       // clone:()Ljava/lang/Object;\n+   #77 = Utf8               clone\n+   #78 = Utf8               ()Ljava/lang/Object;\n+   #79 = Class              #80           // java/lang/CloneNotSupportedException\n+   #80 = Utf8               java/lang/CloneNotSupportedException\n+   #81 = Utf8               dump\n+   #82 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #83 = Methodref          #84.#86       // java/io/DataOutputStream.writeByte:(I)V\n+   #84 = Class              #85           // java/io/DataOutputStream\n+   #85 = Utf8               java/io/DataOutputStream\n+   #86 = NameAndType        #87:#88       // writeByte:(I)V\n+   #87 = Utf8               writeByte\n+   #88 = Utf8               (I)V\n+   #89 = Methodref          #1.#90        // org/apache/bcel/classfile/StackMapType.getIndex:()I\n+   #90 = NameAndType        #91:#92       // getIndex:()I\n+   #91 = Utf8               getIndex\n+   #92 = Utf8               ()I\n+   #93 = Methodref          #84.#94       // java/io/DataOutputStream.writeShort:(I)V\n+   #94 = NameAndType        #95:#88       // writeShort:(I)V\n+   #95 = Utf8               writeShort\n+   #96 = Utf8               Ljava/io/DataOutputStream;\n+   #97 = Utf8               getConstantPool\n+   #98 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+   #99 = Utf8               getType\n+  #100 = Utf8               printIndex\n+  #101 = String             #102          // , class=<unknown>\n+  #102 = Utf8               , class=<unknown>\n+  #103 = String             #104          // , class=\n+  #104 = Utf8               , class=\n+  #105 = Methodref          #49.#106      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+  #106 = NameAndType        #107:#108     // constantToString:(IB)Ljava/lang/String;\n+  #107 = Utf8               constantToString\n+  #108 = Utf8               (IB)Ljava/lang/String;\n+  #109 = Methodref          #23.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #110 = NameAndType        #32:#111      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #111 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = String             #113          // , offset=\n+  #113 = Utf8               , offset=\n+  #114 = String             #115          //\n+  #115 = Utf8\n+  #116 = Utf8               setConstantPool\n+  #117 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #118 = Utf8               setIndex\n+  #119 = Utf8               t\n+  #120 = Utf8               setType\n+  #121 = Utf8               (B)V\n+  #122 = String             #123          // (type=\n+  #123 = Utf8               (type=\n+  #124 = Methodref          #125.#127     // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+  #125 = Class              #126          // org/apache/bcel/Const\n+  #126 = Utf8               org/apache/bcel/Const\n+  #127 = NameAndType        #128:#129     // getItemName:(I)Ljava/lang/String;\n+  #128 = Utf8               getItemName\n+  #129 = Utf8               (I)Ljava/lang/String;\n+  #130 = Methodref          #1.#131       // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n+  #131 = NameAndType        #100:#37      // printIndex:()Ljava/lang/String;\n+  #132 = String             #133          // )\n+  #133 = Utf8               )\n   #134 = Utf8               SourceFile\n   #135 = Utf8               StackMapType.java\n {\n   private byte type;\n     descriptor: B\n     flags: (0x0002) ACC_PRIVATE\n \n@@ -156,90 +156,91 @@\n     descriptor: Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.bcel.classfile.StackMapType(byte, int, org.apache.bcel.classfile.ConstantPool);\n     descriptor: (BILorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_m1\n-         6: putfield      #7                  // Field index:I\n+         6: putfield      #19                 // Field index:I\n          9: iload_1\n         10: iflt          19\n         13: iload_1\n         14: bipush        8\n-        16: if_icmple     46\n-        19: new           #15                 // class java/lang/IllegalArgumentException\n+        16: if_icmple     43\n+        19: new           #21                 // class java/lang/IllegalArgumentException\n         22: dup\n-        23: new           #17                 // class java/lang/StringBuilder\n+        23: new           #23                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #20                 // String Illegal type for StackMapType:\n-        32: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        35: iload_1\n-        36: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        39: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        42: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        45: athrow\n-        46: aload_0\n-        47: iload_1\n-        48: putfield      #36                 // Field type:B\n-        51: aload_0\n-        52: iload_2\n-        53: putfield      #7                  // Field index:I\n-        56: aload_0\n-        57: aload_3\n-        58: putfield      #40                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-        61: return\n+        27: ldc           #25                 // String Illegal type for StackMapType:\n+        29: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        32: iload_1\n+        33: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        36: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        39: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        42: athrow\n+        43: aload_0\n+        44: iload_1\n+        45: putfield      #39                 // Field type:B\n+        48: aload_0\n+        49: iload_2\n+        50: putfield      #19                 // Field index:I\n+        53: aload_0\n+        54: aload_3\n+        55: putfield      #41                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        58: return\n       LineNumberTable:\n         line 43: 0\n         line 36: 4\n         line 44: 9\n         line 45: 19\n-        line 47: 46\n-        line 48: 51\n-        line 49: 56\n-        line 50: 61\n+        line 47: 43\n+        line 48: 48\n+        line 49: 53\n+        line 50: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      62     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-            0      62     1  type   B\n-            0      62     2 index   I\n-            0      62     3 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n+            0      59     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      59     1  type   B\n+            0      59     2 index   I\n+            0      59     3 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 19\n           locals = [ class org/apache/bcel/classfile/StackMapType, int, int, class org/apache/bcel/classfile/ConstantPool ]\n           stack = []\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n \n   org.apache.bcel.classfile.StackMapType(java.io.DataInput, org.apache.bcel.classfile.ConstantPool) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #44,  1           // InterfaceMethod java/io/DataInput.readByte:()B\n+         2: invokeinterface #55,  1           // InterfaceMethod java/io/DataInput.readByte:()B\n          7: iconst_m1\n          8: aload_2\n-         9: invokespecial #50                 // Method \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+         9: invokespecial #61                 // Method \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n         12: aload_0\n-        13: invokevirtual #53                 // Method hasIndex:()Z\n+        13: invokevirtual #63                 // Method hasIndex:()Z\n         16: ifeq          29\n         19: aload_0\n         20: aload_1\n-        21: invokeinterface #57,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n-        26: putfield      #7                  // Field index:I\n+        21: invokeinterface #67,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+        26: putfield      #19                 // Field index:I\n         29: aload_0\n         30: aload_2\n-        31: putfield      #40                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        31: putfield      #41                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         34: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 12\n         line 61: 19\n         line 63: 29\n         line 64: 34\n@@ -249,25 +250,23 @@\n             0      35     1  file   Ljava/io/DataInput;\n             0      35     2 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 29\n           locals = [ class org/apache/bcel/classfile/StackMapType, class java/io/DataInput, class org/apache/bcel/classfile/ConstantPool ]\n           stack = []\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.bcel.classfile.StackMapType copy();\n     descriptor: ()Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #61                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/bcel/classfile/StackMapType\n+         1: invokevirtual #75                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #1                  // class org/apache/bcel/classfile/StackMapType\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -281,180 +280,175 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #36                 // Field type:B\n-         5: invokevirtual #67                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: getfield      #39                 // Field type:B\n+         5: invokevirtual #83                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_0\n-         9: invokevirtual #53                 // Method hasIndex:()Z\n+         9: invokevirtual #63                 // Method hasIndex:()Z\n         12: ifeq          23\n         15: aload_1\n         16: aload_0\n-        17: invokevirtual #73                 // Method getIndex:()I\n-        20: invokevirtual #77                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        17: invokevirtual #89                 // Method getIndex:()I\n+        20: invokevirtual #93                 // Method java/io/DataOutputStream.writeShort:(I)V\n         23: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 8\n         line 87: 15\n         line 89: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/bcel/classfile/StackMapType;\n             0      24     1  file   Ljava/io/DataOutputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 23 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.bcel.classfile.ConstantPool getConstantPool();\n     descriptor: ()Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #40                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         1: getfield      #41                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          4: areturn\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public int getIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field index:I\n+         1: getfield      #19                 // Field index:I\n          4: ireturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public byte getType();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #36                 // Field type:B\n+         1: getfield      #39                 // Field type:B\n          4: ireturn\n       LineNumberTable:\n         line 107: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public boolean hasIndex();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #36                 // Field type:B\n+         1: getfield      #39                 // Field type:B\n          4: bipush        7\n-         6: if_icmpeq     18\n+         6: if_icmpeq     20\n          9: aload_0\n-        10: getfield      #36                 // Field type:B\n+        10: getfield      #39                 // Field type:B\n         13: bipush        8\n-        15: if_icmpne     22\n-        18: iconst_1\n-        19: goto          23\n-        22: iconst_0\n-        23: ireturn\n+        15: if_icmpeq     20\n+        18: iconst_0\n+        19: ireturn\n+        20: iconst_1\n+        21: ireturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      24     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-      StackMapTable: number_of_entries = 3\n-        frame_type = 18 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      22     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 20 /* same */\n \n   private java.lang.String printIndex();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #36                 // Field type:B\n+         1: getfield      #39                 // Field type:B\n          4: bipush        7\n-         6: if_icmpne     51\n+         6: if_icmpne     48\n          9: aload_0\n-        10: getfield      #7                  // Field index:I\n+        10: getfield      #19                 // Field index:I\n         13: ifge          19\n-        16: ldc           #80                 // String , class=<unknown>\n+        16: ldc           #101                // String , class=<unknown>\n         18: areturn\n-        19: new           #17                 // class java/lang/StringBuilder\n+        19: new           #23                 // class java/lang/StringBuilder\n         22: dup\n-        23: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        26: ldc           #82                 // String , class=\n-        28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: aload_0\n-        32: getfield      #40                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-        35: aload_0\n-        36: getfield      #7                  // Field index:I\n-        39: bipush        7\n-        41: invokevirtual #84                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-        44: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        50: areturn\n-        51: aload_0\n-        52: getfield      #36                 // Field type:B\n-        55: bipush        8\n-        57: if_icmpne     83\n-        60: new           #17                 // class java/lang/StringBuilder\n-        63: dup\n-        64: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        67: ldc           #90                 // String , offset=\n-        69: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: aload_0\n-        73: getfield      #7                  // Field index:I\n-        76: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        79: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        82: areturn\n-        83: ldc           #92                 // String\n-        85: areturn\n+        23: ldc           #103                // String , class=\n+        25: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        28: aload_0\n+        29: getfield      #41                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        32: aload_0\n+        33: getfield      #19                 // Field index:I\n+        36: bipush        7\n+        38: invokevirtual #105                // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+        41: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        47: areturn\n+        48: aload_0\n+        49: getfield      #39                 // Field type:B\n+        52: bipush        8\n+        54: if_icmpne     77\n+        57: new           #23                 // class java/lang/StringBuilder\n+        60: dup\n+        61: ldc           #112                // String , offset=\n+        63: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        66: aload_0\n+        67: getfield      #19                 // Field index:I\n+        70: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        73: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        76: areturn\n+        77: ldc           #114                // String\n+        79: areturn\n       LineNumberTable:\n         line 118: 0\n         line 119: 9\n         line 120: 16\n         line 122: 19\n-        line 124: 51\n-        line 125: 60\n-        line 127: 83\n+        line 124: 48\n+        line 125: 57\n+        line 127: 77\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      86     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      80     0  this   Lorg/apache/bcel/classfile/StackMapType;\n       StackMapTable: number_of_entries = 3\n         frame_type = 19 /* same */\n-        frame_type = 31 /* same */\n-        frame_type = 31 /* same */\n+        frame_type = 28 /* same */\n+        frame_type = 28 /* same */\n \n   public void setConstantPool(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #40                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         2: putfield      #41                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          5: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapType;\n@@ -463,84 +457,82 @@\n   public void setIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field index:I\n+         2: putfield      #19                 // Field index:I\n          5: return\n       LineNumberTable:\n         line 138: 0\n         line 139: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapType;\n             0       6     1     t   I\n \n   public void setType(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: iload_1\n          1: iflt          10\n          4: iload_1\n          5: bipush        8\n-         7: if_icmple     37\n-        10: new           #15                 // class java/lang/IllegalArgumentException\n+         7: if_icmple     34\n+        10: new           #21                 // class java/lang/IllegalArgumentException\n         13: dup\n-        14: new           #17                 // class java/lang/StringBuilder\n+        14: new           #23                 // class java/lang/StringBuilder\n         17: dup\n-        18: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        21: ldc           #20                 // String Illegal type for StackMapType:\n-        23: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        26: iload_1\n-        27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        30: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #33                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        36: athrow\n-        37: aload_0\n-        38: iload_1\n-        39: putfield      #36                 // Field type:B\n-        42: return\n+        18: ldc           #25                 // String Illegal type for StackMapType:\n+        20: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        23: iload_1\n+        24: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        27: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        30: invokespecial #38                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: athrow\n+        34: aload_0\n+        35: iload_1\n+        36: putfield      #39                 // Field type:B\n+        39: return\n       LineNumberTable:\n         line 142: 0\n         line 143: 10\n-        line 145: 37\n-        line 146: 42\n+        line 145: 34\n+        line 146: 39\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      43     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-            0      43     1     t   B\n+            0      40     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      40     1     t   B\n       StackMapTable: number_of_entries = 2\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #17                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #23                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #94                 // String (type=\n-         9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #36                 // Field type:B\n-        16: invokestatic  #96                 // Method org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-        19: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: aload_0\n-        23: invokespecial #100                // Method printIndex:()Ljava/lang/String;\n-        26: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: ldc           #103                // String )\n-        31: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: areturn\n+         4: ldc           #122                // String (type=\n+         6: invokespecial #27                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #39                 // Field type:B\n+        13: invokestatic  #124                // Method org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+        16: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: aload_0\n+        20: invokespecial #130                // Method printIndex:()Ljava/lang/String;\n+        23: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: ldc           #132                // String )\n+        28: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: areturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      38     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      35     0  this   Lorg/apache/bcel/classfile/StackMapType;\n }\n SourceFile: \"StackMapType.java\"\n"}]}
