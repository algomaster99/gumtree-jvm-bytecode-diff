{"diffoscope-json-version": 1, "source1": "first/XmlStreamWriterTest.class", "source2": "second/XmlStreamWriterTest.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,30 +16,19 @@\n     private static final String TEXT_LATIN7 = \"alpha: \\u03b1\";\n     private static final String TEXT_LATIN15 = \"euro: \\u20ac\";\n     private static final String TEXT_EUC_JP = \"hiragana A: \\u3042\";\n     private static final String TEXT_UNICODE = \"eacute: \\u00e9, alpha: \\u03b1, euro: \\u20ac, hiragana A: \\u3042\";\n     \n     private static void checkXmlContent(final String xml, final String encodingName, final String defaultEncodingName) throws IOException {\n         final ByteArrayOutputStream out = new ByteArrayOutputStream();\n-        final XmlStreamWriter writer = ((XmlStreamWriter.Builder)((XmlStreamWriter.Builder)XmlStreamWriter.builder().setOutputStream((OutputStream)out)).setCharset(defaultEncodingName)).get();\n-        Throwable x0 = null;\n         XmlStreamWriter writerCheck;\n-        try {\n+        try (final XmlStreamWriter writer = ((XmlStreamWriter.Builder)((XmlStreamWriter.Builder)XmlStreamWriter.builder().setOutputStream((OutputStream)out)).setCharset(defaultEncodingName)).get()) {\n             writerCheck = writer;\n             writer.write(xml);\n         }\n-        catch (final Throwable t) {\n-            x0 = t;\n-            throw t;\n-        }\n-        finally {\n-            if (writer != null) {\n-                $closeResource(x0, (AutoCloseable)writer);\n-            }\n-        }\n         final byte[] xmlContent = out.toByteArray();\n         final Charset charset = Charset.forName(encodingName);\n         final Charset writerCharset = Charset.forName(writerCheck.getEncoding());\n         Assertions.assertEquals((Object)charset, (Object)writerCharset);\n         Assertions.assertTrue(writerCharset.contains(charset), writerCharset.name());\n         Assertions.assertArrayEquals(xml.getBytes(encodingName), xmlContent);\n     }\n@@ -77,69 +66,29 @@\n     @Test\n     public void testEBCDICEncoding() throws IOException {\n         checkXmlWriter(\"simple text in EBCDIC\", \"CP1047\");\n     }\n     \n     @Test\n     public void testEmpty() throws IOException {\n-        ByteArrayOutputStream out = new ByteArrayOutputStream();\n-        Throwable x0 = null;\n-        try {\n-            final XmlStreamWriter writer = new XmlStreamWriter((OutputStream)out);\n-            Throwable x2 = null;\n-            try {\n-                writer.flush();\n-                writer.write(\"\");\n-                writer.flush();\n-                writer.write(\".\");\n-                writer.flush();\n-            }\n-            catch (final Throwable t) {\n-                x2 = t;\n-                throw t;\n-            }\n-            finally {\n-                $closeResource(x2, (AutoCloseable)writer);\n-            }\n-        }\n-        catch (final Throwable t2) {\n-            x0 = t2;\n-            throw t2;\n-        }\n-        finally {\n-            $closeResource(x0, out);\n-        }\n-        out = new ByteArrayOutputStream();\n-        Throwable x3 = null;\n-        try {\n-            final XmlStreamWriter writer = ((XmlStreamWriter.Builder)XmlStreamWriter.builder().setOutputStream((OutputStream)out)).get();\n-            Throwable x4 = null;\n-            try {\n-                writer.flush();\n-                writer.write(\"\");\n-                writer.flush();\n-                writer.write(\".\");\n-                writer.flush();\n-            }\n-            catch (final Throwable t3) {\n-                x4 = t3;\n-                throw t3;\n-            }\n-            finally {\n-                if (writer != null) {\n-                    $closeResource(x4, (AutoCloseable)writer);\n-                }\n-            }\n-        }\n-        catch (final Throwable t4) {\n-            x3 = t4;\n-            throw t4;\n-        }\n-        finally {\n-            $closeResource(x3, out);\n+        try (final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+             final XmlStreamWriter writer = new XmlStreamWriter((OutputStream)out)) {\n+            writer.flush();\n+            writer.write(\"\");\n+            writer.flush();\n+            writer.write(\".\");\n+            writer.flush();\n+        }\n+        try (final ByteArrayOutputStream out = new ByteArrayOutputStream();\n+             final XmlStreamWriter writer = ((XmlStreamWriter.Builder)XmlStreamWriter.builder().setOutputStream((OutputStream)out)).get()) {\n+            writer.flush();\n+            writer.write(\"\");\n+            writer.flush();\n+            writer.write(\".\");\n+            writer.flush();\n         }\n     }\n     \n     @Test\n     public void testEUC_JPEncoding() throws IOException {\n         checkXmlWriter(\"hiragana A: \\u3042\", \"EUC-JP\");\n     }\n@@ -187,22 +136,8 @@\n         checkXmlWriter(\"eacute: \\u00e9, alpha: \\u03b1, euro: \\u20ac, hiragana A: \\u3042\", StandardCharsets.UTF_16LE.name());\n     }\n     \n     @Test\n     public void testUTF8Encoding() throws IOException {\n         checkXmlWriter(\"eacute: \\u00e9, alpha: \\u03b1, euro: \\u20ac, hiragana A: \\u3042\", StandardCharsets.UTF_8.name());\n     }\n-    \n-    private static /* synthetic */ void $closeResource(final Throwable x0, final AutoCloseable x1) {\n-        if (x0 != null) {\n-            try {\n-                x1.close();\n-            }\n-            catch (final Throwable exception) {\n-                x0.addSuppressed(exception);\n-            }\n-        }\n-        else {\n-            x1.close();\n-        }\n-    }\n }\n"}]}
