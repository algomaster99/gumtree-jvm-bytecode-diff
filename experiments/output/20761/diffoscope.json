{"diffoscope-json-version": 1, "source1": "first/FileTabCharacterCheck.class", "source2": "second/FileTabCharacterCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,82 +1,82 @@\n-  SHA-256 checksum 44e5f4c4f02cb3881e14be637ad25d4fd57a85181be8fcfa2063c31d96d09e53\n+  SHA-256 checksum af8735b5cd2811aa6f24f0a0e2e361cfb6a2adfc92027b499d0c0565e20ad196\n   Compiled from \"FileTabCharacterCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck extends com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n-  super_class: #11                        // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+  this_class: #24                         // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n+  super_class: #2                         // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n   interfaces: 0, fields: 3, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #11.#44        // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.\"<init>\":()V\n-   #2 = Methodref          #45.#46        // com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n-   #3 = Methodref          #45.#47        // com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n-   #4 = Methodref          #37.#48        // java/lang/String.indexOf:(I)I\n-   #5 = Fieldref           #6.#49         // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.eachLine:Z\n-   #6 = Class              #50            // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n-   #7 = String             #51            // containsTab\n-   #8 = Class              #52            // java/lang/Object\n-   #9 = Methodref          #6.#53         // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.log:(IILjava/lang/String;[Ljava/lang/Object;)V\n-  #10 = String             #54            // file.containsTab\n-  #11 = Class              #55            // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n-  #12 = Utf8               MSG_CONTAINS_TAB\n-  #13 = Utf8               Ljava/lang/String;\n-  #14 = Utf8               ConstantValue\n-  #15 = Utf8               MSG_FILE_CONTAINS_TAB\n-  #16 = Utf8               eachLine\n-  #17 = Utf8               Z\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck;\n-  #25 = Utf8               processFiltered\n-  #26 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n-  #27 = Utf8               line\n-  #28 = Utf8               tabPosition\n-  #29 = Utf8               I\n-  #30 = Utf8               index\n-  #31 = Utf8               file\n-  #32 = Utf8               Ljava/io/File;\n-  #33 = Utf8               fileText\n-  #34 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/FileText;\n-  #35 = Utf8               lineNum\n-  #36 = Utf8               StackMapTable\n-  #37 = Class              #56            // java/lang/String\n-  #38 = Utf8               setEachLine\n-  #39 = Utf8               (Z)V\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               FileTabCharacterCheck.java\n-  #42 = Utf8               RuntimeVisibleAnnotations\n-  #43 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-  #44 = NameAndType        #18:#19        // \"<init>\":()V\n-  #45 = Class              #57            // com/puppycrawl/tools/checkstyle/api/FileText\n-  #46 = NameAndType        #58:#59        // size:()I\n-  #47 = NameAndType        #60:#61        // get:(I)Ljava/lang/String;\n-  #48 = NameAndType        #62:#63        // indexOf:(I)I\n-  #49 = NameAndType        #16:#17        // eachLine:Z\n-  #50 = Utf8               com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n-  #51 = Utf8               containsTab\n-  #52 = Utf8               java/lang/Object\n-  #53 = NameAndType        #64:#65        // log:(IILjava/lang/String;[Ljava/lang/Object;)V\n-  #54 = Utf8               file.containsTab\n-  #55 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n-  #56 = Utf8               java/lang/String\n-  #57 = Utf8               com/puppycrawl/tools/checkstyle/api/FileText\n-  #58 = Utf8               size\n-  #59 = Utf8               ()I\n-  #60 = Utf8               get\n-  #61 = Utf8               (I)Ljava/lang/String;\n-  #62 = Utf8               indexOf\n-  #63 = Utf8               (I)I\n-  #64 = Utf8               log\n-  #65 = Utf8               (IILjava/lang/String;[Ljava/lang/Object;)V\n+   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.\"<init>\":()V\n+   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n+   #8 = Class              #10            // com/puppycrawl/tools/checkstyle/api/FileText\n+   #9 = NameAndType        #11:#12        // size:()I\n+  #10 = Utf8               com/puppycrawl/tools/checkstyle/api/FileText\n+  #11 = Utf8               size\n+  #12 = Utf8               ()I\n+  #13 = Methodref          #8.#14         // com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n+  #14 = NameAndType        #15:#16        // get:(I)Ljava/lang/String;\n+  #15 = Utf8               get\n+  #16 = Utf8               (I)Ljava/lang/String;\n+  #17 = Methodref          #18.#19        // java/lang/String.indexOf:(I)I\n+  #18 = Class              #20            // java/lang/String\n+  #19 = NameAndType        #21:#22        // indexOf:(I)I\n+  #20 = Utf8               java/lang/String\n+  #21 = Utf8               indexOf\n+  #22 = Utf8               (I)I\n+  #23 = Fieldref           #24.#25        // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.eachLine:Z\n+  #24 = Class              #26            // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n+  #25 = NameAndType        #27:#28        // eachLine:Z\n+  #26 = Utf8               com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck\n+  #27 = Utf8               eachLine\n+  #28 = Utf8               Z\n+  #29 = String             #30            // containsTab\n+  #30 = Utf8               containsTab\n+  #31 = Class              #32            // java/lang/Object\n+  #32 = Utf8               java/lang/Object\n+  #33 = Methodref          #24.#34        // com/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck.log:(IILjava/lang/String;[Ljava/lang/Object;)V\n+  #34 = NameAndType        #35:#36        // log:(IILjava/lang/String;[Ljava/lang/Object;)V\n+  #35 = Utf8               log\n+  #36 = Utf8               (IILjava/lang/String;[Ljava/lang/Object;)V\n+  #37 = String             #38            // file.containsTab\n+  #38 = Utf8               file.containsTab\n+  #39 = Utf8               MSG_CONTAINS_TAB\n+  #40 = Utf8               Ljava/lang/String;\n+  #41 = Utf8               ConstantValue\n+  #42 = Utf8               MSG_FILE_CONTAINS_TAB\n+  #43 = Utf8               Code\n+  #44 = Utf8               LineNumberTable\n+  #45 = Utf8               LocalVariableTable\n+  #46 = Utf8               this\n+  #47 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck;\n+  #48 = Utf8               processFiltered\n+  #49 = Utf8               (Ljava/io/File;Lcom/puppycrawl/tools/checkstyle/api/FileText;)V\n+  #50 = Utf8               line\n+  #51 = Utf8               tabPosition\n+  #52 = Utf8               I\n+  #53 = Utf8               index\n+  #54 = Utf8               file\n+  #55 = Utf8               Ljava/io/File;\n+  #56 = Utf8               fileText\n+  #57 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/FileText;\n+  #58 = Utf8               lineNum\n+  #59 = Utf8               StackMapTable\n+  #60 = Utf8               setEachLine\n+  #61 = Utf8               (Z)V\n+  #62 = Utf8               SourceFile\n+  #63 = Utf8               FileTabCharacterCheck.java\n+  #64 = Utf8               RuntimeVisibleAnnotations\n+  #65 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public static final java.lang.String MSG_CONTAINS_TAB = \"containsTab\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String containsTab\n \n   public static final java.lang.String MSG_FILE_CONTAINS_TAB = \"file.containsTab\";\n@@ -109,46 +109,46 @@\n       stack=5, locals=7, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: iconst_0\n          3: istore        4\n          5: iload         4\n          7: aload_2\n-         8: invokevirtual #2                  // Method com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n+         8: invokevirtual #7                  // Method com/puppycrawl/tools/checkstyle/api/FileText.size:()I\n         11: if_icmpge     85\n         14: aload_2\n         15: iload         4\n-        17: invokevirtual #3                  // Method com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n+        17: invokevirtual #13                 // Method com/puppycrawl/tools/checkstyle/api/FileText.get:(I)Ljava/lang/String;\n         20: astore        5\n         22: iinc          3, 1\n         25: aload         5\n         27: bipush        9\n-        29: invokevirtual #4                  // Method java/lang/String.indexOf:(I)I\n+        29: invokevirtual #17                 // Method java/lang/String.indexOf:(I)I\n         32: istore        6\n         34: iload         6\n         36: iconst_m1\n         37: if_icmpeq     79\n         40: aload_0\n-        41: getfield      #5                  // Field eachLine:Z\n+        41: getfield      #23                 // Field eachLine:Z\n         44: ifeq          63\n         47: aload_0\n         48: iload_3\n         49: iload         6\n-        51: ldc           #7                  // String containsTab\n+        51: ldc           #29                 // String containsTab\n         53: iconst_0\n-        54: anewarray     #8                  // class java/lang/Object\n-        57: invokevirtual #9                  // Method log:(IILjava/lang/String;[Ljava/lang/Object;)V\n+        54: anewarray     #31                 // class java/lang/Object\n+        57: invokevirtual #33                 // Method log:(IILjava/lang/String;[Ljava/lang/Object;)V\n         60: goto          79\n         63: aload_0\n         64: iload_3\n         65: iload         6\n-        67: ldc           #10                 // String file.containsTab\n+        67: ldc           #37                 // String file.containsTab\n         69: iconst_0\n-        70: anewarray     #8                  // class java/lang/Object\n-        73: invokevirtual #9                  // Method log:(IILjava/lang/String;[Ljava/lang/Object;)V\n+        70: anewarray     #31                 // class java/lang/Object\n+        73: invokevirtual #33                 // Method log:(IILjava/lang/String;[Ljava/lang/Object;)V\n         76: goto          85\n         79: iinc          4, 1\n         82: goto          5\n         85: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 2\n@@ -186,21 +186,21 @@\n   public void setEachLine(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field eachLine:Z\n+         2: putfield      #23                 // Field eachLine:Z\n          5: return\n       LineNumberTable:\n         line 121: 0\n         line 122: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/checks/whitespace/FileTabCharacterCheck;\n             0       6     1 eachLine   Z\n }\n SourceFile: \"FileTabCharacterCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #43()\n+  0: #65()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
