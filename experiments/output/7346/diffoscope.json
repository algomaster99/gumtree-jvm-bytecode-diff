{"diffoscope-json-version": 1, "source1": "first/XMLTokener.class", "source2": "second/XMLTokener.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,78 @@\n-  SHA-256 checksum bef4a8b9870adeb890aaa575e653ddd24e559960665fc04a73009e0a88ec8b12\n+  SHA-256 checksum 67f357b1a637f85a62d7cb6a8e0bf91c5ddee257cb9a69bc7b6a1eebe8ca23a3\n   Compiled from \"XMLTokener.java\"\n public class org.json.XMLTokener extends org.json.JSONTokener\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #60                         // org/json/XMLTokener\n   super_class: #61                        // org/json/JSONTokener\n   interfaces: 0, fields: 1, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #61.#122      // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n-    #2 = Methodref          #61.#123      // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n-    #3 = Class              #124          // java/lang/StringBuilder\n-    #4 = Methodref          #3.#125       // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = Methodref          #60.#126      // org/json/XMLTokener.more:()Z\n-    #6 = Methodref          #60.#127      // org/json/XMLTokener.next:()C\n-    #7 = Methodref          #3.#128       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #3.#129       // java/lang/StringBuilder.length:()I\n-    #9 = Methodref          #3.#130       // java/lang/StringBuilder.charAt:(I)C\n-   #10 = Methodref          #3.#131       // java/lang/StringBuilder.setLength:(I)V\n-   #11 = Methodref          #3.#132       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #12 = String             #133          // Unclosed CDATA\n-   #13 = Methodref          #60.#134      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-   #14 = Methodref          #35.#135      // java/lang/Character.isWhitespace:(C)Z\n-   #15 = Fieldref           #136.#137     // org/json/XML.LT:Ljava/lang/Character;\n-   #16 = Methodref          #31.#138      // java/lang/String.trim:()Ljava/lang/String;\n-   #17 = Methodref          #60.#139      // org/json/XMLTokener.back:()V\n-   #18 = Methodref          #60.#140      // org/json/XMLTokener.nextEntity:(C)Ljava/lang/Object;\n-   #19 = Methodref          #3.#141       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #35.#142      // java/lang/Character.isLetterOrDigit:(C)Z\n-   #21 = Methodref          #35.#143      // java/lang/Character.toLowerCase:(C)C\n-   #22 = String             #144          // Missing \\';\\' in XML entity: &\n-   #23 = Methodref          #3.#145       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #60.#146      // org/json/XMLTokener.unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Methodref          #31.#147      // java/lang/String.isEmpty:()Z\n-   #26 = String             #148          //\n-   #27 = Methodref          #31.#130      // java/lang/String.charAt:(I)C\n-   #28 = Methodref          #31.#149      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #29 = Methodref          #150.#151     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #30 = Methodref          #150.#152     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #31 = Class              #153          // java/lang/String\n-   #32 = Methodref          #31.#154      // java/lang/String.\"<init>\":([III)V\n-   #33 = Fieldref           #60.#155      // org/json/XMLTokener.entity:Ljava/util/HashMap;\n-   #34 = Methodref          #49.#156      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #35 = Class              #157          // java/lang/Character\n-   #36 = Methodref          #35.#132      // java/lang/Character.toString:()Ljava/lang/String;\n-   #37 = String             #158          // Misshaped meta tag\n-   #38 = Fieldref           #136.#159     // org/json/XML.GT:Ljava/lang/Character;\n-   #39 = Fieldref           #136.#160     // org/json/XML.SLASH:Ljava/lang/Character;\n-   #40 = Fieldref           #136.#161     // org/json/XML.EQ:Ljava/lang/Character;\n-   #41 = Fieldref           #136.#162     // org/json/XML.BANG:Ljava/lang/Character;\n-   #42 = Fieldref           #136.#163     // org/json/XML.QUEST:Ljava/lang/Character;\n-   #43 = String             #164          // Unterminated string\n-   #44 = Fieldref           #165.#166     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #45 = String             #167          // Misshaped element\n-   #46 = String             #168          // Misplaced \\'<\\'\n-   #47 = String             #169          // Bad character in a name\n-   #48 = Methodref          #31.#129      // java/lang/String.length:()I\n-   #49 = Class              #170          // java/util/HashMap\n-   #50 = Methodref          #49.#171      // java/util/HashMap.\"<init>\":(I)V\n-   #51 = String             #172          // amp\n-   #52 = Fieldref           #136.#173     // org/json/XML.AMP:Ljava/lang/Character;\n-   #53 = Methodref          #49.#174      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #54 = String             #175          // apos\n-   #55 = Fieldref           #136.#176     // org/json/XML.APOS:Ljava/lang/Character;\n-   #56 = String             #177          // gt\n-   #57 = String             #178          // lt\n-   #58 = String             #179          // quot\n-   #59 = Fieldref           #136.#180     // org/json/XML.QUOT:Ljava/lang/Character;\n-   #60 = Class              #181          // org/json/XMLTokener\n-   #61 = Class              #182          // org/json/JSONTokener\n+    #1 = Methodref          #61.#118      // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n+    #2 = Methodref          #61.#119      // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n+    #3 = Class              #120          // java/lang/StringBuilder\n+    #4 = Methodref          #3.#121       // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = Methodref          #60.#122      // org/json/XMLTokener.more:()Z\n+    #6 = Methodref          #60.#123      // org/json/XMLTokener.next:()C\n+    #7 = Methodref          #3.#124       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #3.#125       // java/lang/StringBuilder.length:()I\n+    #9 = Methodref          #3.#126       // java/lang/StringBuilder.charAt:(I)C\n+   #10 = Methodref          #3.#127       // java/lang/StringBuilder.setLength:(I)V\n+   #11 = Methodref          #3.#128       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #12 = String             #129          // Unclosed CDATA\n+   #13 = Methodref          #60.#130      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+   #14 = Methodref          #35.#131      // java/lang/Character.isWhitespace:(C)Z\n+   #15 = Fieldref           #132.#133     // org/json/XML.LT:Ljava/lang/Character;\n+   #16 = Methodref          #31.#134      // java/lang/String.trim:()Ljava/lang/String;\n+   #17 = Methodref          #60.#135      // org/json/XMLTokener.back:()V\n+   #18 = Methodref          #60.#136      // org/json/XMLTokener.nextEntity:(C)Ljava/lang/Object;\n+   #19 = Methodref          #3.#137       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #35.#138      // java/lang/Character.isLetterOrDigit:(C)Z\n+   #21 = Methodref          #35.#139      // java/lang/Character.toLowerCase:(C)C\n+   #22 = String             #140          // Missing \\';\\' in XML entity: &\n+   #23 = Methodref          #3.#141       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = Methodref          #60.#142      // org/json/XMLTokener.unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Methodref          #31.#143      // java/lang/String.isEmpty:()Z\n+   #26 = String             #144          //\n+   #27 = Methodref          #31.#126      // java/lang/String.charAt:(I)C\n+   #28 = Methodref          #31.#145      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #29 = Methodref          #146.#147     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #30 = Methodref          #146.#148     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #31 = Class              #149          // java/lang/String\n+   #32 = Methodref          #31.#150      // java/lang/String.\"<init>\":([III)V\n+   #33 = Fieldref           #60.#151      // org/json/XMLTokener.entity:Ljava/util/HashMap;\n+   #34 = Methodref          #49.#152      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #35 = Class              #153          // java/lang/Character\n+   #36 = Methodref          #35.#128      // java/lang/Character.toString:()Ljava/lang/String;\n+   #37 = String             #154          // Misshaped meta tag\n+   #38 = Fieldref           #132.#155     // org/json/XML.GT:Ljava/lang/Character;\n+   #39 = Fieldref           #132.#156     // org/json/XML.SLASH:Ljava/lang/Character;\n+   #40 = Fieldref           #132.#157     // org/json/XML.EQ:Ljava/lang/Character;\n+   #41 = Fieldref           #132.#158     // org/json/XML.BANG:Ljava/lang/Character;\n+   #42 = Fieldref           #132.#159     // org/json/XML.QUEST:Ljava/lang/Character;\n+   #43 = String             #160          // Unterminated string\n+   #44 = Fieldref           #161.#162     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #45 = String             #163          // Misshaped element\n+   #46 = String             #164          // Misplaced \\'<\\'\n+   #47 = String             #165          // Bad character in a name\n+   #48 = Methodref          #31.#125      // java/lang/String.length:()I\n+   #49 = Class              #166          // java/util/HashMap\n+   #50 = Methodref          #49.#167      // java/util/HashMap.\"<init>\":(I)V\n+   #51 = String             #168          // amp\n+   #52 = Fieldref           #132.#169     // org/json/XML.AMP:Ljava/lang/Character;\n+   #53 = Methodref          #49.#170      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #54 = String             #171          // apos\n+   #55 = Fieldref           #132.#172     // org/json/XML.APOS:Ljava/lang/Character;\n+   #56 = String             #173          // gt\n+   #57 = String             #174          // lt\n+   #58 = String             #175          // quot\n+   #59 = Fieldref           #132.#176     // org/json/XML.QUOT:Ljava/lang/Character;\n+   #60 = Class              #177          // org/json/XMLTokener\n+   #61 = Class              #178          // org/json/JSONTokener\n    #62 = Utf8               entity\n    #63 = Utf8               Ljava/util/HashMap;\n    #64 = Utf8               Signature\n    #65 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Character;>;\n    #66 = Utf8               <init>\n    #67 = Utf8               (Ljava/io/Reader;)V\n    #68 = Utf8               Code\n@@ -90,159 +90,155 @@\n    #80 = Utf8               c\n    #81 = Utf8               C\n    #82 = Utf8               i\n    #83 = Utf8               I\n    #84 = Utf8               sb\n    #85 = Utf8               Ljava/lang/StringBuilder;\n    #86 = Utf8               StackMapTable\n-   #87 = Class              #124          // java/lang/StringBuilder\n-   #88 = Utf8               Exceptions\n-   #89 = Class              #183          // org/json/JSONException\n-   #90 = Utf8               nextContent\n-   #91 = Utf8               ()Ljava/lang/Object;\n-   #92 = Utf8               nextEntity\n-   #93 = Utf8               (C)Ljava/lang/Object;\n-   #94 = Utf8               ampersand\n-   #95 = Utf8               string\n-   #96 = Utf8               unescapeEntity\n-   #97 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #98 = Utf8               cp\n-   #99 = Utf8               e\n-  #100 = Utf8               knownEntity\n-  #101 = Utf8               Ljava/lang/Character;\n-  #102 = Class              #157          // java/lang/Character\n-  #103 = Utf8               nextMeta\n-  #104 = Utf8               q\n-  #105 = Utf8               nextToken\n-  #106 = Utf8               skipPast\n-  #107 = Utf8               to\n-  #108 = Utf8               b\n-  #109 = Utf8               Z\n-  #110 = Utf8               j\n-  #111 = Utf8               offset\n-  #112 = Utf8               length\n-  #113 = Utf8               circle\n-  #114 = Utf8               [C\n-  #115 = Class              #181          // org/json/XMLTokener\n-  #116 = Class              #153          // java/lang/String\n-  #117 = Class              #114          // \"[C\"\n-  #118 = Utf8               <clinit>\n-  #119 = Utf8               ()V\n-  #120 = Utf8               SourceFile\n-  #121 = Utf8               XMLTokener.java\n-  #122 = NameAndType        #66:#67       // \"<init>\":(Ljava/io/Reader;)V\n-  #123 = NameAndType        #66:#75       // \"<init>\":(Ljava/lang/String;)V\n-  #124 = Utf8               java/lang/StringBuilder\n-  #125 = NameAndType        #66:#119      // \"<init>\":()V\n-  #126 = NameAndType        #184:#185     // more:()Z\n-  #127 = NameAndType        #186:#187     // next:()C\n-  #128 = NameAndType        #188:#189     // append:(C)Ljava/lang/StringBuilder;\n-  #129 = NameAndType        #112:#190     // length:()I\n-  #130 = NameAndType        #191:#192     // charAt:(I)C\n-  #131 = NameAndType        #193:#194     // setLength:(I)V\n-  #132 = NameAndType        #195:#79      // toString:()Ljava/lang/String;\n-  #133 = Utf8               Unclosed CDATA\n-  #134 = NameAndType        #196:#197     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-  #135 = NameAndType        #198:#199     // isWhitespace:(C)Z\n-  #136 = Class              #200          // org/json/XML\n-  #137 = NameAndType        #201:#101     // LT:Ljava/lang/Character;\n-  #138 = NameAndType        #202:#79      // trim:()Ljava/lang/String;\n-  #139 = NameAndType        #203:#119     // back:()V\n-  #140 = NameAndType        #92:#93       // nextEntity:(C)Ljava/lang/Object;\n-  #141 = NameAndType        #188:#204     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #142 = NameAndType        #205:#199     // isLetterOrDigit:(C)Z\n-  #143 = NameAndType        #206:#207     // toLowerCase:(C)C\n-  #144 = Utf8               Missing \\';\\' in XML entity: &\n-  #145 = NameAndType        #188:#208     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #146 = NameAndType        #96:#97       // unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n-  #147 = NameAndType        #209:#185     // isEmpty:()Z\n-  #148 = Utf8\n-  #149 = NameAndType        #210:#211     // substring:(I)Ljava/lang/String;\n-  #150 = Class              #212          // java/lang/Integer\n-  #151 = NameAndType        #213:#214     // parseInt:(Ljava/lang/String;I)I\n-  #152 = NameAndType        #213:#215     // parseInt:(Ljava/lang/String;)I\n-  #153 = Utf8               java/lang/String\n-  #154 = NameAndType        #66:#216      // \"<init>\":([III)V\n-  #155 = NameAndType        #62:#63       // entity:Ljava/util/HashMap;\n-  #156 = NameAndType        #217:#218     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #157 = Utf8               java/lang/Character\n-  #158 = Utf8               Misshaped meta tag\n-  #159 = NameAndType        #219:#101     // GT:Ljava/lang/Character;\n-  #160 = NameAndType        #220:#101     // SLASH:Ljava/lang/Character;\n-  #161 = NameAndType        #221:#101     // EQ:Ljava/lang/Character;\n-  #162 = NameAndType        #222:#101     // BANG:Ljava/lang/Character;\n-  #163 = NameAndType        #223:#101     // QUEST:Ljava/lang/Character;\n-  #164 = Utf8               Unterminated string\n-  #165 = Class              #224          // java/lang/Boolean\n-  #166 = NameAndType        #225:#226     // TRUE:Ljava/lang/Boolean;\n-  #167 = Utf8               Misshaped element\n-  #168 = Utf8               Misplaced \\'<\\'\n-  #169 = Utf8               Bad character in a name\n-  #170 = Utf8               java/util/HashMap\n-  #171 = NameAndType        #66:#194      // \"<init>\":(I)V\n-  #172 = Utf8               amp\n-  #173 = NameAndType        #227:#101     // AMP:Ljava/lang/Character;\n-  #174 = NameAndType        #228:#229     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #175 = Utf8               apos\n-  #176 = NameAndType        #230:#101     // APOS:Ljava/lang/Character;\n-  #177 = Utf8               gt\n-  #178 = Utf8               lt\n-  #179 = Utf8               quot\n-  #180 = NameAndType        #231:#101     // QUOT:Ljava/lang/Character;\n-  #181 = Utf8               org/json/XMLTokener\n-  #182 = Utf8               org/json/JSONTokener\n-  #183 = Utf8               org/json/JSONException\n-  #184 = Utf8               more\n-  #185 = Utf8               ()Z\n-  #186 = Utf8               next\n-  #187 = Utf8               ()C\n-  #188 = Utf8               append\n-  #189 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #190 = Utf8               ()I\n-  #191 = Utf8               charAt\n-  #192 = Utf8               (I)C\n-  #193 = Utf8               setLength\n-  #194 = Utf8               (I)V\n-  #195 = Utf8               toString\n-  #196 = Utf8               syntaxError\n-  #197 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n-  #198 = Utf8               isWhitespace\n-  #199 = Utf8               (C)Z\n-  #200 = Utf8               org/json/XML\n-  #201 = Utf8               LT\n-  #202 = Utf8               trim\n-  #203 = Utf8               back\n-  #204 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #205 = Utf8               isLetterOrDigit\n-  #206 = Utf8               toLowerCase\n-  #207 = Utf8               (C)C\n-  #208 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #209 = Utf8               isEmpty\n-  #210 = Utf8               substring\n-  #211 = Utf8               (I)Ljava/lang/String;\n-  #212 = Utf8               java/lang/Integer\n-  #213 = Utf8               parseInt\n-  #214 = Utf8               (Ljava/lang/String;I)I\n-  #215 = Utf8               (Ljava/lang/String;)I\n-  #216 = Utf8               ([III)V\n-  #217 = Utf8               get\n-  #218 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #219 = Utf8               GT\n-  #220 = Utf8               SLASH\n-  #221 = Utf8               EQ\n-  #222 = Utf8               BANG\n-  #223 = Utf8               QUEST\n-  #224 = Utf8               java/lang/Boolean\n-  #225 = Utf8               TRUE\n-  #226 = Utf8               Ljava/lang/Boolean;\n-  #227 = Utf8               AMP\n-  #228 = Utf8               put\n-  #229 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #230 = Utf8               APOS\n-  #231 = Utf8               QUOT\n+   #87 = Utf8               Exceptions\n+   #88 = Class              #179          // org/json/JSONException\n+   #89 = Utf8               nextContent\n+   #90 = Utf8               ()Ljava/lang/Object;\n+   #91 = Utf8               nextEntity\n+   #92 = Utf8               (C)Ljava/lang/Object;\n+   #93 = Utf8               ampersand\n+   #94 = Utf8               string\n+   #95 = Utf8               unescapeEntity\n+   #96 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #97 = Utf8               cp\n+   #98 = Utf8               e\n+   #99 = Utf8               knownEntity\n+  #100 = Utf8               Ljava/lang/Character;\n+  #101 = Utf8               nextMeta\n+  #102 = Utf8               q\n+  #103 = Utf8               nextToken\n+  #104 = Utf8               skipPast\n+  #105 = Utf8               to\n+  #106 = Utf8               b\n+  #107 = Utf8               Z\n+  #108 = Utf8               j\n+  #109 = Utf8               offset\n+  #110 = Utf8               length\n+  #111 = Utf8               circle\n+  #112 = Utf8               [C\n+  #113 = Class              #112          // \"[C\"\n+  #114 = Utf8               <clinit>\n+  #115 = Utf8               ()V\n+  #116 = Utf8               SourceFile\n+  #117 = Utf8               XMLTokener.java\n+  #118 = NameAndType        #66:#67       // \"<init>\":(Ljava/io/Reader;)V\n+  #119 = NameAndType        #66:#75       // \"<init>\":(Ljava/lang/String;)V\n+  #120 = Utf8               java/lang/StringBuilder\n+  #121 = NameAndType        #66:#115      // \"<init>\":()V\n+  #122 = NameAndType        #180:#181     // more:()Z\n+  #123 = NameAndType        #182:#183     // next:()C\n+  #124 = NameAndType        #184:#185     // append:(C)Ljava/lang/StringBuilder;\n+  #125 = NameAndType        #110:#186     // length:()I\n+  #126 = NameAndType        #187:#188     // charAt:(I)C\n+  #127 = NameAndType        #189:#190     // setLength:(I)V\n+  #128 = NameAndType        #191:#79      // toString:()Ljava/lang/String;\n+  #129 = Utf8               Unclosed CDATA\n+  #130 = NameAndType        #192:#193     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+  #131 = NameAndType        #194:#195     // isWhitespace:(C)Z\n+  #132 = Class              #196          // org/json/XML\n+  #133 = NameAndType        #197:#100     // LT:Ljava/lang/Character;\n+  #134 = NameAndType        #198:#79      // trim:()Ljava/lang/String;\n+  #135 = NameAndType        #199:#115     // back:()V\n+  #136 = NameAndType        #91:#92       // nextEntity:(C)Ljava/lang/Object;\n+  #137 = NameAndType        #184:#200     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #138 = NameAndType        #201:#195     // isLetterOrDigit:(C)Z\n+  #139 = NameAndType        #202:#203     // toLowerCase:(C)C\n+  #140 = Utf8               Missing \\';\\' in XML entity: &\n+  #141 = NameAndType        #184:#204     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #142 = NameAndType        #95:#96       // unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n+  #143 = NameAndType        #205:#181     // isEmpty:()Z\n+  #144 = Utf8\n+  #145 = NameAndType        #206:#207     // substring:(I)Ljava/lang/String;\n+  #146 = Class              #208          // java/lang/Integer\n+  #147 = NameAndType        #209:#210     // parseInt:(Ljava/lang/String;I)I\n+  #148 = NameAndType        #209:#211     // parseInt:(Ljava/lang/String;)I\n+  #149 = Utf8               java/lang/String\n+  #150 = NameAndType        #66:#212      // \"<init>\":([III)V\n+  #151 = NameAndType        #62:#63       // entity:Ljava/util/HashMap;\n+  #152 = NameAndType        #213:#214     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #153 = Utf8               java/lang/Character\n+  #154 = Utf8               Misshaped meta tag\n+  #155 = NameAndType        #215:#100     // GT:Ljava/lang/Character;\n+  #156 = NameAndType        #216:#100     // SLASH:Ljava/lang/Character;\n+  #157 = NameAndType        #217:#100     // EQ:Ljava/lang/Character;\n+  #158 = NameAndType        #218:#100     // BANG:Ljava/lang/Character;\n+  #159 = NameAndType        #219:#100     // QUEST:Ljava/lang/Character;\n+  #160 = Utf8               Unterminated string\n+  #161 = Class              #220          // java/lang/Boolean\n+  #162 = NameAndType        #221:#222     // TRUE:Ljava/lang/Boolean;\n+  #163 = Utf8               Misshaped element\n+  #164 = Utf8               Misplaced \\'<\\'\n+  #165 = Utf8               Bad character in a name\n+  #166 = Utf8               java/util/HashMap\n+  #167 = NameAndType        #66:#190      // \"<init>\":(I)V\n+  #168 = Utf8               amp\n+  #169 = NameAndType        #223:#100     // AMP:Ljava/lang/Character;\n+  #170 = NameAndType        #224:#225     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #171 = Utf8               apos\n+  #172 = NameAndType        #226:#100     // APOS:Ljava/lang/Character;\n+  #173 = Utf8               gt\n+  #174 = Utf8               lt\n+  #175 = Utf8               quot\n+  #176 = NameAndType        #227:#100     // QUOT:Ljava/lang/Character;\n+  #177 = Utf8               org/json/XMLTokener\n+  #178 = Utf8               org/json/JSONTokener\n+  #179 = Utf8               org/json/JSONException\n+  #180 = Utf8               more\n+  #181 = Utf8               ()Z\n+  #182 = Utf8               next\n+  #183 = Utf8               ()C\n+  #184 = Utf8               append\n+  #185 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #186 = Utf8               ()I\n+  #187 = Utf8               charAt\n+  #188 = Utf8               (I)C\n+  #189 = Utf8               setLength\n+  #190 = Utf8               (I)V\n+  #191 = Utf8               toString\n+  #192 = Utf8               syntaxError\n+  #193 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n+  #194 = Utf8               isWhitespace\n+  #195 = Utf8               (C)Z\n+  #196 = Utf8               org/json/XML\n+  #197 = Utf8               LT\n+  #198 = Utf8               trim\n+  #199 = Utf8               back\n+  #200 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #201 = Utf8               isLetterOrDigit\n+  #202 = Utf8               toLowerCase\n+  #203 = Utf8               (C)C\n+  #204 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #205 = Utf8               isEmpty\n+  #206 = Utf8               substring\n+  #207 = Utf8               (I)Ljava/lang/String;\n+  #208 = Utf8               java/lang/Integer\n+  #209 = Utf8               parseInt\n+  #210 = Utf8               (Ljava/lang/String;I)I\n+  #211 = Utf8               (Ljava/lang/String;)I\n+  #212 = Utf8               ([III)V\n+  #213 = Utf8               get\n+  #214 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #215 = Utf8               GT\n+  #216 = Utf8               SLASH\n+  #217 = Utf8               EQ\n+  #218 = Utf8               BANG\n+  #219 = Utf8               QUEST\n+  #220 = Utf8               java/lang/Boolean\n+  #221 = Utf8               TRUE\n+  #222 = Utf8               Ljava/lang/Boolean;\n+  #223 = Utf8               AMP\n+  #224 = Utf8               put\n+  #225 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #226 = Utf8               APOS\n+  #227 = Utf8               QUOT\n {\n   public static final java.util.HashMap<java.lang.String, java.lang.Character> entity;\n     descriptor: Ljava/util/HashMap;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     Signature: #65                          // Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Character;>;\n \n   public org.json.XMLTokener(java.io.Reader);\n"}]}
