{"diffoscope-json-version": 1, "source1": "first/FileUtils.class", "source2": "second/FileUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,145 @@\n-  SHA-256 checksum 2c09c7d1825c5d9b4f0f01889cee96fe0b8e6792d425281bbb362234ad628d24\n+  SHA-256 checksum d9f54a0b3d9ca93253a45475e604f0084d19158045b2de9e20cf6451e59d25a7\n   Compiled from \"FileUtils.java\"\n class org.apache.commons.configuration2.io.FileUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #32                         // org/apache/commons/configuration2/io/FileUtils\n   super_class: #33                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #33.#53       // java/lang/Object.\"<init>\":()V\n-    #2 = String             #54           // file\n-    #3 = Methodref          #55.#56       // java/net/URL.getProtocol:()Ljava/lang/String;\n-    #4 = Methodref          #57.#58       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-    #5 = Methodref          #55.#59       // java/net/URL.getFile:()Ljava/lang/String;\n-    #6 = Fieldref           #9.#60        // java/io/File.separatorChar:C\n-    #7 = Methodref          #57.#61       // java/lang/String.replace:(CC)Ljava/lang/String;\n-    #8 = Methodref          #32.#62       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-    #9 = Class              #63           // java/io/File\n-   #10 = Methodref          #9.#64        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Methodref          #57.#65       // java/lang/String.indexOf:(I)I\n-   #12 = Methodref          #57.#66       // java/lang/String.length:()I\n-   #13 = Class              #67           // java/lang/StringBuffer\n-   #14 = Methodref          #13.#53       // java/lang/StringBuffer.\"<init>\":()V\n-   #15 = Methodref          #68.#69       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #16 = Methodref          #57.#70       // java/lang/String.charAt:(I)C\n-   #17 = Methodref          #57.#71       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #18 = Methodref          #72.#73       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #19 = Methodref          #68.#74       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #68.#75       // java/nio/ByteBuffer.position:()I\n-   #21 = Methodref          #68.#76       // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-   #22 = Fieldref           #32.#77       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n-   #23 = Methodref          #78.#79       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #24 = Methodref          #80.#81       // java/nio/CharBuffer.toString:()Ljava/lang/String;\n-   #25 = Methodref          #13.#82       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-   #26 = Methodref          #68.#83       // java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n-   #27 = Class              #84           // java/lang/RuntimeException\n-   #28 = Methodref          #13.#85       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-   #29 = Methodref          #13.#81       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #30 = String             #86           // UTF-8\n-   #31 = Methodref          #78.#87       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #32 = Class              #88           // org/apache/commons/configuration2/io/FileUtils\n-   #33 = Class              #89           // java/lang/Object\n+    #1 = Methodref          #33.#51       // java/lang/Object.\"<init>\":()V\n+    #2 = String             #52           // file\n+    #3 = Methodref          #53.#54       // java/net/URL.getProtocol:()Ljava/lang/String;\n+    #4 = Methodref          #45.#55       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+    #5 = Methodref          #53.#56       // java/net/URL.getFile:()Ljava/lang/String;\n+    #6 = Fieldref           #9.#57        // java/io/File.separatorChar:C\n+    #7 = Methodref          #45.#58       // java/lang/String.replace:(CC)Ljava/lang/String;\n+    #8 = Methodref          #32.#59       // org/apache/commons/configuration2/io/FileUtils.decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+    #9 = Class              #60           // java/io/File\n+   #10 = Methodref          #9.#61        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #11 = Methodref          #45.#62       // java/lang/String.indexOf:(I)I\n+   #12 = Methodref          #45.#63       // java/lang/String.length:()I\n+   #13 = Class              #64           // java/lang/StringBuffer\n+   #14 = Methodref          #13.#51       // java/lang/StringBuffer.\"<init>\":()V\n+   #15 = Methodref          #46.#65       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #16 = Methodref          #45.#66       // java/lang/String.charAt:(I)C\n+   #17 = Methodref          #45.#67       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #18 = Methodref          #68.#69       // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #19 = Methodref          #46.#70       // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #20 = Methodref          #46.#71       // java/nio/ByteBuffer.position:()I\n+   #21 = Methodref          #46.#72       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #22 = Fieldref           #32.#73       // org/apache/commons/configuration2/io/FileUtils.UTF8:Ljava/nio/charset/Charset;\n+   #23 = Methodref          #74.#75       // java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #24 = Methodref          #76.#77       // java/nio/CharBuffer.toString:()Ljava/lang/String;\n+   #25 = Methodref          #13.#78       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #26 = Methodref          #46.#79       // java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n+   #27 = Class              #80           // java/lang/RuntimeException\n+   #28 = Methodref          #13.#81       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+   #29 = Methodref          #13.#77       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #30 = String             #82           // UTF-8\n+   #31 = Methodref          #74.#83       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #32 = Class              #84           // org/apache/commons/configuration2/io/FileUtils\n+   #33 = Class              #85           // java/lang/Object\n    #34 = Utf8               UTF8\n    #35 = Utf8               Ljava/nio/charset/Charset;\n    #36 = Utf8               <init>\n    #37 = Utf8               ()V\n    #38 = Utf8               Code\n    #39 = Utf8               LineNumberTable\n    #40 = Utf8               toFile\n    #41 = Utf8               (Ljava/net/URL;)Ljava/io/File;\n    #42 = Utf8               StackMapTable\n    #43 = Utf8               decodeUrl\n    #44 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #45 = Class              #90           // java/lang/String\n-   #46 = Class              #67           // java/lang/StringBuffer\n-   #47 = Class              #91           // java/nio/ByteBuffer\n-   #48 = Class              #84           // java/lang/RuntimeException\n-   #49 = Class              #92           // java/lang/Throwable\n-   #50 = Utf8               <clinit>\n-   #51 = Utf8               SourceFile\n-   #52 = Utf8               FileUtils.java\n-   #53 = NameAndType        #36:#37       // \"<init>\":()V\n-   #54 = Utf8               file\n-   #55 = Class              #93           // java/net/URL\n-   #56 = NameAndType        #94:#95       // getProtocol:()Ljava/lang/String;\n-   #57 = Class              #90           // java/lang/String\n-   #58 = NameAndType        #96:#97       // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #59 = NameAndType        #98:#95       // getFile:()Ljava/lang/String;\n-   #60 = NameAndType        #99:#100      // separatorChar:C\n-   #61 = NameAndType        #101:#102     // replace:(CC)Ljava/lang/String;\n-   #62 = NameAndType        #43:#44       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Utf8               java/io/File\n-   #64 = NameAndType        #36:#103      // \"<init>\":(Ljava/lang/String;)V\n-   #65 = NameAndType        #104:#105     // indexOf:(I)I\n-   #66 = NameAndType        #106:#107     // length:()I\n-   #67 = Utf8               java/lang/StringBuffer\n-   #68 = Class              #91           // java/nio/ByteBuffer\n-   #69 = NameAndType        #108:#109     // allocate:(I)Ljava/nio/ByteBuffer;\n-   #70 = NameAndType        #110:#111     // charAt:(I)C\n-   #71 = NameAndType        #112:#113     // substring:(II)Ljava/lang/String;\n-   #72 = Class              #114          // java/lang/Integer\n-   #73 = NameAndType        #115:#116     // parseInt:(Ljava/lang/String;I)I\n-   #74 = NameAndType        #117:#118     // put:(B)Ljava/nio/ByteBuffer;\n-   #75 = NameAndType        #119:#107     // position:()I\n-   #76 = NameAndType        #120:#121     // flip:()Ljava/nio/Buffer;\n-   #77 = NameAndType        #34:#35       // UTF8:Ljava/nio/charset/Charset;\n-   #78 = Class              #122          // java/nio/charset/Charset\n-   #79 = NameAndType        #123:#124     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-   #80 = Class              #125          // java/nio/CharBuffer\n-   #81 = NameAndType        #126:#95      // toString:()Ljava/lang/String;\n-   #82 = NameAndType        #127:#128     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-   #83 = NameAndType        #129:#121     // clear:()Ljava/nio/Buffer;\n-   #84 = Utf8               java/lang/RuntimeException\n-   #85 = NameAndType        #127:#130     // append:(C)Ljava/lang/StringBuffer;\n-   #86 = Utf8               UTF-8\n-   #87 = NameAndType        #131:#132     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #88 = Utf8               org/apache/commons/configuration2/io/FileUtils\n-   #89 = Utf8               java/lang/Object\n-   #90 = Utf8               java/lang/String\n-   #91 = Utf8               java/nio/ByteBuffer\n-   #92 = Utf8               java/lang/Throwable\n-   #93 = Utf8               java/net/URL\n-   #94 = Utf8               getProtocol\n-   #95 = Utf8               ()Ljava/lang/String;\n-   #96 = Utf8               equalsIgnoreCase\n-   #97 = Utf8               (Ljava/lang/String;)Z\n-   #98 = Utf8               getFile\n-   #99 = Utf8               separatorChar\n-  #100 = Utf8               C\n-  #101 = Utf8               replace\n-  #102 = Utf8               (CC)Ljava/lang/String;\n-  #103 = Utf8               (Ljava/lang/String;)V\n-  #104 = Utf8               indexOf\n-  #105 = Utf8               (I)I\n-  #106 = Utf8               length\n-  #107 = Utf8               ()I\n-  #108 = Utf8               allocate\n-  #109 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #110 = Utf8               charAt\n-  #111 = Utf8               (I)C\n-  #112 = Utf8               substring\n-  #113 = Utf8               (II)Ljava/lang/String;\n-  #114 = Utf8               java/lang/Integer\n-  #115 = Utf8               parseInt\n-  #116 = Utf8               (Ljava/lang/String;I)I\n-  #117 = Utf8               put\n-  #118 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #119 = Utf8               position\n-  #120 = Utf8               flip\n-  #121 = Utf8               ()Ljava/nio/Buffer;\n-  #122 = Utf8               java/nio/charset/Charset\n-  #123 = Utf8               decode\n-  #124 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n-  #125 = Utf8               java/nio/CharBuffer\n-  #126 = Utf8               toString\n-  #127 = Utf8               append\n-  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #129 = Utf8               clear\n-  #130 = Utf8               (C)Ljava/lang/StringBuffer;\n-  #131 = Utf8               forName\n-  #132 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #45 = Class              #86           // java/lang/String\n+   #46 = Class              #87           // java/nio/ByteBuffer\n+   #47 = Class              #88           // java/lang/Throwable\n+   #48 = Utf8               <clinit>\n+   #49 = Utf8               SourceFile\n+   #50 = Utf8               FileUtils.java\n+   #51 = NameAndType        #36:#37       // \"<init>\":()V\n+   #52 = Utf8               file\n+   #53 = Class              #89           // java/net/URL\n+   #54 = NameAndType        #90:#91       // getProtocol:()Ljava/lang/String;\n+   #55 = NameAndType        #92:#93       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #56 = NameAndType        #94:#91       // getFile:()Ljava/lang/String;\n+   #57 = NameAndType        #95:#96       // separatorChar:C\n+   #58 = NameAndType        #97:#98       // replace:(CC)Ljava/lang/String;\n+   #59 = NameAndType        #43:#44       // decodeUrl:(Ljava/lang/String;)Ljava/lang/String;\n+   #60 = Utf8               java/io/File\n+   #61 = NameAndType        #36:#99       // \"<init>\":(Ljava/lang/String;)V\n+   #62 = NameAndType        #100:#101     // indexOf:(I)I\n+   #63 = NameAndType        #102:#103     // length:()I\n+   #64 = Utf8               java/lang/StringBuffer\n+   #65 = NameAndType        #104:#105     // allocate:(I)Ljava/nio/ByteBuffer;\n+   #66 = NameAndType        #106:#107     // charAt:(I)C\n+   #67 = NameAndType        #108:#109     // substring:(II)Ljava/lang/String;\n+   #68 = Class              #110          // java/lang/Integer\n+   #69 = NameAndType        #111:#112     // parseInt:(Ljava/lang/String;I)I\n+   #70 = NameAndType        #113:#114     // put:(B)Ljava/nio/ByteBuffer;\n+   #71 = NameAndType        #115:#103     // position:()I\n+   #72 = NameAndType        #116:#117     // flip:()Ljava/nio/ByteBuffer;\n+   #73 = NameAndType        #34:#35       // UTF8:Ljava/nio/charset/Charset;\n+   #74 = Class              #118          // java/nio/charset/Charset\n+   #75 = NameAndType        #119:#120     // decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+   #76 = Class              #121          // java/nio/CharBuffer\n+   #77 = NameAndType        #122:#91      // toString:()Ljava/lang/String;\n+   #78 = NameAndType        #123:#124     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #79 = NameAndType        #125:#117     // clear:()Ljava/nio/ByteBuffer;\n+   #80 = Utf8               java/lang/RuntimeException\n+   #81 = NameAndType        #123:#126     // append:(C)Ljava/lang/StringBuffer;\n+   #82 = Utf8               UTF-8\n+   #83 = NameAndType        #127:#128     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #84 = Utf8               org/apache/commons/configuration2/io/FileUtils\n+   #85 = Utf8               java/lang/Object\n+   #86 = Utf8               java/lang/String\n+   #87 = Utf8               java/nio/ByteBuffer\n+   #88 = Utf8               java/lang/Throwable\n+   #89 = Utf8               java/net/URL\n+   #90 = Utf8               getProtocol\n+   #91 = Utf8               ()Ljava/lang/String;\n+   #92 = Utf8               equalsIgnoreCase\n+   #93 = Utf8               (Ljava/lang/String;)Z\n+   #94 = Utf8               getFile\n+   #95 = Utf8               separatorChar\n+   #96 = Utf8               C\n+   #97 = Utf8               replace\n+   #98 = Utf8               (CC)Ljava/lang/String;\n+   #99 = Utf8               (Ljava/lang/String;)V\n+  #100 = Utf8               indexOf\n+  #101 = Utf8               (I)I\n+  #102 = Utf8               length\n+  #103 = Utf8               ()I\n+  #104 = Utf8               allocate\n+  #105 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #106 = Utf8               charAt\n+  #107 = Utf8               (I)C\n+  #108 = Utf8               substring\n+  #109 = Utf8               (II)Ljava/lang/String;\n+  #110 = Utf8               java/lang/Integer\n+  #111 = Utf8               parseInt\n+  #112 = Utf8               (Ljava/lang/String;I)I\n+  #113 = Utf8               put\n+  #114 = Utf8               (B)Ljava/nio/ByteBuffer;\n+  #115 = Utf8               position\n+  #116 = Utf8               flip\n+  #117 = Utf8               ()Ljava/nio/ByteBuffer;\n+  #118 = Utf8               java/nio/charset/Charset\n+  #119 = Utf8               decode\n+  #120 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n+  #121 = Utf8               java/nio/CharBuffer\n+  #122 = Utf8               toString\n+  #123 = Utf8               append\n+  #124 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #125 = Utf8               clear\n+  #126 = Utf8               (C)Ljava/lang/StringBuffer;\n+  #127 = Utf8               forName\n+  #128 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n {\n   private static final java.nio.charset.Charset UTF8;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   org.apache.commons.configuration2.io.FileUtils();\n     descriptor: ()V\n@@ -252,61 +248,61 @@\n         94: invokevirtual #16                 // Method java/lang/String.charAt:(I)C\n         97: bipush        37\n         99: if_icmpeq     54\n        102: aload         4\n        104: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        107: ifle          37\n        110: aload         4\n-       112: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       112: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        115: pop\n        116: aload_3\n        117: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        120: aload         4\n        122: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        125: invokevirtual #24                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;\n        128: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        131: pop\n        132: aload         4\n-       134: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       134: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        137: pop\n        138: goto          37\n        141: astore        6\n        143: aload         4\n        145: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        148: ifle          223\n        151: aload         4\n-       153: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       153: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        156: pop\n        157: aload_3\n        158: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        161: aload         4\n        163: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        166: invokevirtual #24                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;\n        169: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        172: pop\n        173: aload         4\n-       175: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       175: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        178: pop\n        179: goto          223\n        182: astore        7\n        184: aload         4\n        186: invokevirtual #20                 // Method java/nio/ByteBuffer.position:()I\n        189: ifle          220\n        192: aload         4\n-       194: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+       194: invokevirtual #21                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        197: pop\n        198: aload_3\n        199: getstatic     #22                 // Field UTF8:Ljava/nio/charset/Charset;\n        202: aload         4\n        204: invokevirtual #23                 // Method java/nio/charset/Charset.decode:(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;\n        207: invokevirtual #24                 // Method java/nio/CharBuffer.toString:()Ljava/lang/String;\n        210: invokevirtual #25                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        213: pop\n        214: aload         4\n-       216: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;\n+       216: invokevirtual #26                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/ByteBuffer;\n        219: pop\n        220: aload         7\n        222: athrow\n        223: aload_3\n        224: aload_0\n        225: iload         5\n        227: iinc          5, 1\n"}]}
