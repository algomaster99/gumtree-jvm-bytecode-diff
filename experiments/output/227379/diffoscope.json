{"diffoscope-json-version": 1, "source1": "first/StringLiteralEqualityCheck.class", "source2": "second/StringLiteralEqualityCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,27 +18,26 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 116, 115 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final boolean hasStringLiteralChild = hasStringLiteralChild(ast);\n-        if (hasStringLiteralChild) {\n-            this.log(ast, \"string.literal.equality\", new Object[] { ast.getText() });\n+    public void visitToken(final DetailAST detailAST) {\n+        if (hasStringLiteralChild(detailAST)) {\n+            this.log(detailAST, \"string.literal.equality\", new Object[] { detailAST.getText() });\n         }\n     }\n     \n-    private static boolean hasStringLiteralChild(final DetailAST ast) {\n-        DetailAST currentAst = ast;\n-        boolean result = false;\n-        while (currentAst != null) {\n-            if (currentAst.findFirstToken(139) != null || currentAst.findFirstToken(204) != null) {\n-                result = true;\n+    private static boolean hasStringLiteralChild(final DetailAST detailAST) {\n+        DetailAST firstToken = detailAST;\n+        boolean b = false;\n+        while (firstToken != null) {\n+            if (firstToken.findFirstToken(139) != null || firstToken.findFirstToken(204) != null) {\n+                b = true;\n                 break;\n             }\n-            currentAst = currentAst.findFirstToken(125);\n+            firstToken = firstToken.findFirstToken(125);\n         }\n-        return result;\n+        return b;\n     }\n }\n"}]}
