{"diffoscope-json-version": 1, "source1": "first/Blake3.class", "source2": "second/Blake3.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,294 +1,293 @@\n-  SHA-256 checksum 4a207c042d7d63a79b8774e7c15b57c61ce54721376dc66a52c316de5a48ea4e\n+  SHA-256 checksum 8920da882416d37635dd2fc9d94ddf25fb64cf74783a844a2948021f432f1add\n   Compiled from \"Blake3.java\"\n public final class org.apache.commons.codec.digest.Blake3\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #1                          // org/apache/commons/codec/digest/Blake3\n-  super_class: #64                        // java/lang/Object\n+  super_class: #26                        // java/lang/Object\n   interfaces: 0, fields: 17, methods: 27, attributes: 2\n Constant pool:\n-    #1 = Class              #192          // org/apache/commons/codec/digest/Blake3\n-    #2 = Class              #193          // java/lang/Integer\n-    #3 = Methodref          #1.#194       // org/apache/commons/codec/digest/Blake3.parentChainingValue:([I[I[II)[I\n-    #4 = Methodref          #1.#195       // org/apache/commons/codec/digest/Blake3.parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n-    #5 = Methodref          #1.#196       // org/apache/commons/codec/digest/Blake3.unpackInts:([BI)[I\n-    #6 = Methodref          #1.#197       // org/apache/commons/codec/digest/Blake3.packInt:(I[BII)V\n-    #7 = Methodref          #1.#198       // org/apache/commons/codec/digest/Blake3.compress:([I[IIJI)[I\n-    #8 = Methodref          #64.#199      // java/lang/Object.\"<init>\":()V\n-    #9 = Class              #200          // org/apache/commons/codec/digest/Blake3$EngineState\n-   #10 = Methodref          #9.#201       // org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n-   #11 = Fieldref           #1.#202       // org/apache/commons/codec/digest/Blake3.engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n-   #12 = Methodref          #9.#203       // org/apache/commons/codec/digest/Blake3$EngineState.access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n-   #13 = Methodref          #1.#204       // org/apache/commons/codec/digest/Blake3.update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n-   #14 = Methodref          #1.#205       // org/apache/commons/codec/digest/Blake3.checkBufferArgs:([BII)V\n-   #15 = Methodref          #9.#206       // org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n-   #16 = Methodref          #1.#207       // org/apache/commons/codec/digest/Blake3.doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n-   #17 = Methodref          #9.#208       // org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n-   #18 = Class              #209          // java/lang/IllegalArgumentException\n-   #19 = String             #210          // Requested bytes must be non-negative\n-   #20 = Methodref          #18.#211      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = Methodref          #1.#212       // org/apache/commons/codec/digest/Blake3.doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n-   #22 = Fieldref           #1.#213       // org/apache/commons/codec/digest/Blake3.IV:[I\n-   #23 = Methodref          #1.#214       // org/apache/commons/codec/digest/Blake3.\"<init>\":([II)V\n-   #24 = Methodref          #215.#216     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = String             #217          // Blake3 keys must be 32 bytes\n-   #26 = Methodref          #1.#218       // org/apache/commons/codec/digest/Blake3.initHash:()Lorg/apache/commons/codec/digest/Blake3;\n-   #27 = Methodref          #1.#219       // org/apache/commons/codec/digest/Blake3.update:([B)Lorg/apache/commons/codec/digest/Blake3;\n-   #28 = Methodref          #1.#220       // org/apache/commons/codec/digest/Blake3.doFinalize:(I)[B\n-   #29 = Methodref          #1.#221       // org/apache/commons/codec/digest/Blake3.initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n-   #30 = Class              #222          // java/lang/IndexOutOfBoundsException\n-   #31 = String             #223          // Offset must be non-negative\n-   #32 = Methodref          #30.#211      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = String             #224          // Length must be non-negative\n-   #34 = Class              #225          // java/lang/StringBuilder\n-   #35 = Methodref          #34.#199      // java/lang/StringBuilder.\"<init>\":()V\n-   #36 = String             #226          // Offset\n-   #37 = Methodref          #34.#227      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #38 = Methodref          #34.#228      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #39 = String             #229          //  and length\n-   #40 = String             #230          //  out of bounds with buffer length\n-   #41 = Methodref          #34.#231      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #42 = Class              #232          // java/lang/Byte\n-   #43 = Methodref          #1.#233       // org/apache/commons/codec/digest/Blake3.unpackInt:([BI)I\n-   #44 = Methodref          #2.#234       // java/lang/Integer.rotateRight:(II)I\n-   #45 = Methodref          #1.#235       // org/apache/commons/codec/digest/Blake3.g:([IIIIIII)V\n-   #46 = Methodref          #236.#237     // java/util/Arrays.copyOf:([II)[I\n-   #47 = Methodref          #238.#239     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #48 = Fieldref           #1.#240       // org/apache/commons/codec/digest/Blake3.MSG_SCHEDULE:[[B\n-   #49 = Methodref          #1.#241       // org/apache/commons/codec/digest/Blake3.round:([I[I[B)V\n-   #50 = Class              #242          // org/apache/commons/codec/digest/Blake3$Output\n-   #51 = Methodref          #243.#244     // \"[I\".clone:()Ljava/lang/Object;\n-   #52 = Class              #86           // \"[I\"\n-   #53 = Methodref          #50.#245      // org/apache/commons/codec/digest/Blake3$Output.\"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n-   #54 = Methodref          #50.#246      // org/apache/commons/codec/digest/Blake3$Output.access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n-   #55 = Integer            1779033703\n-   #56 = Integer            -1150833019\n-   #57 = Integer            1013904242\n-   #58 = Integer            -1521486534\n-   #59 = Integer            1359893119\n-   #60 = Integer            -1694144372\n-   #61 = Integer            528734635\n-   #62 = Integer            1541459225\n-   #63 = Class              #115          // \"[B\"\n-   #64 = Class              #247          // java/lang/Object\n-   #65 = Class              #248          // org/apache/commons/codec/digest/Blake3$1\n-   #66 = Utf8               InnerClasses\n-   #67 = Utf8               EngineState\n-   #68 = Class              #249          // org/apache/commons/codec/digest/Blake3$ChunkState\n-   #69 = Utf8               ChunkState\n-   #70 = Utf8               Output\n-   #71 = Utf8               BLOCK_LEN\n-   #72 = Utf8               I\n-   #73 = Utf8               ConstantValue\n-   #74 = Integer            64\n-   #75 = Utf8               BLOCK_INTS\n-   #76 = Integer            16\n-   #77 = Utf8               KEY_LEN\n-   #78 = Integer            32\n-   #79 = Utf8               KEY_INTS\n-   #80 = Integer            8\n-   #81 = Utf8               OUT_LEN\n-   #82 = Utf8               CHUNK_LEN\n-   #83 = Integer            1024\n-   #84 = Utf8               CHAINING_VALUE_INTS\n-   #85 = Utf8               IV\n-   #86 = Utf8               [I\n-   #87 = Utf8               CHUNK_START\n-   #88 = Integer            1\n-   #89 = Utf8               CHUNK_END\n-   #90 = Integer            2\n-   #91 = Utf8               PARENT\n-   #92 = Integer            4\n-   #93 = Utf8               ROOT\n-   #94 = Utf8               KEYED_HASH\n-   #95 = Utf8               DERIVE_KEY_CONTEXT\n-   #96 = Utf8               DERIVE_KEY_MATERIAL\n-   #97 = Utf8               MSG_SCHEDULE\n-   #98 = Utf8               [[B\n-   #99 = Utf8               engineState\n-  #100 = Utf8               Lorg/apache/commons/codec/digest/Blake3$EngineState;\n-  #101 = Utf8               <init>\n-  #102 = Utf8               ([II)V\n-  #103 = Utf8               Code\n-  #104 = Utf8               LineNumberTable\n-  #105 = Utf8               LocalVariableTable\n-  #106 = Utf8               this\n-  #107 = Utf8               Lorg/apache/commons/codec/digest/Blake3;\n-  #108 = Utf8               key\n-  #109 = Utf8               flags\n-  #110 = Utf8               reset\n-  #111 = Utf8               ()Lorg/apache/commons/codec/digest/Blake3;\n-  #112 = Utf8               update\n-  #113 = Utf8               ([B)Lorg/apache/commons/codec/digest/Blake3;\n-  #114 = Utf8               in\n-  #115 = Utf8               [B\n-  #116 = Utf8               ([BII)Lorg/apache/commons/codec/digest/Blake3;\n-  #117 = Utf8               offset\n-  #118 = Utf8               length\n-  #119 = Utf8               doFinalize\n-  #120 = Utf8               out\n-  #121 = Utf8               (I)[B\n-  #122 = Utf8               nrBytes\n-  #123 = Utf8               hash\n-  #124 = Utf8               StackMapTable\n-  #125 = Utf8               initHash\n-  #126 = Utf8               initKeyedHash\n-  #127 = Utf8               initKeyDerivationFunction\n-  #128 = Utf8               kdfContext\n-  #129 = Utf8               kdf\n-  #130 = Utf8               ([B)[B\n-  #131 = Utf8               data\n-  #132 = Utf8               keyedHash\n-  #133 = Utf8               ([B[B)[B\n-  #134 = Utf8               checkBufferArgs\n-  #135 = Utf8               ([BII)V\n-  #136 = Utf8               buffer\n-  #137 = Utf8               bufferLength\n-  #138 = Utf8               packInt\n-  #139 = Utf8               (I[BII)V\n-  #140 = Utf8               i\n-  #141 = Utf8               value\n-  #142 = Utf8               dst\n-  #143 = Utf8               off\n-  #144 = Utf8               len\n-  #145 = Utf8               unpackInt\n-  #146 = Utf8               ([BI)I\n-  #147 = Utf8               buf\n-  #148 = Utf8               unpackInts\n-  #149 = Utf8               ([BI)[I\n-  #150 = Utf8               nrInts\n-  #151 = Utf8               values\n-  #152 = Utf8               g\n-  #153 = Utf8               ([IIIIIII)V\n-  #154 = Utf8               state\n-  #155 = Utf8               a\n-  #156 = Utf8               b\n-  #157 = Utf8               c\n-  #158 = Utf8               d\n-  #159 = Utf8               mx\n-  #160 = Utf8               my\n-  #161 = Utf8               round\n-  #162 = Utf8               ([I[I[B)V\n-  #163 = Utf8               msg\n-  #164 = Utf8               schedule\n-  #165 = Utf8               compress\n-  #166 = Utf8               ([I[IIJI)[I\n-  #167 = Utf8               chainingValue\n-  #168 = Utf8               blockWords\n-  #169 = Utf8               blockLength\n-  #170 = Utf8               counter\n-  #171 = Utf8               J\n-  #172 = Utf8               parentOutput\n-  #173 = Utf8               ([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n-  #174 = Utf8               leftChildCV\n-  #175 = Utf8               rightChildCV\n-  #176 = Utf8               parentChainingValue\n-  #177 = Utf8               ([I[I[II)[I\n-  #178 = Utf8               access$600\n-  #179 = Utf8               x0\n-  #180 = Utf8               x1\n-  #181 = Utf8               x2\n-  #182 = Utf8               x3\n-  #183 = Utf8               x4\n-  #184 = Utf8               access$700\n-  #185 = Utf8               access$800\n-  #186 = Utf8               access$1400\n-  #187 = Utf8               access$1600\n-  #188 = Utf8               <clinit>\n-  #189 = Utf8               ()V\n-  #190 = Utf8               SourceFile\n-  #191 = Utf8               Blake3.java\n-  #192 = Utf8               org/apache/commons/codec/digest/Blake3\n-  #193 = Utf8               java/lang/Integer\n-  #194 = NameAndType        #176:#177     // parentChainingValue:([I[I[II)[I\n-  #195 = NameAndType        #172:#173     // parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n-  #196 = NameAndType        #148:#149     // unpackInts:([BI)[I\n-  #197 = NameAndType        #138:#139     // packInt:(I[BII)V\n-  #198 = NameAndType        #165:#166     // compress:([I[IIJI)[I\n-  #199 = NameAndType        #101:#189     // \"<init>\":()V\n-  #200 = Utf8               org/apache/commons/codec/digest/Blake3$EngineState\n-  #201 = NameAndType        #101:#250     // \"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n-  #202 = NameAndType        #99:#100      // engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n-  #203 = NameAndType        #251:#252     // access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n-  #204 = NameAndType        #112:#116     // update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n-  #205 = NameAndType        #134:#135     // checkBufferArgs:([BII)V\n-  #206 = NameAndType        #253:#254     // access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n-  #207 = NameAndType        #119:#116     // doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n-  #208 = NameAndType        #255:#254     // access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n-  #209 = Utf8               java/lang/IllegalArgumentException\n-  #210 = Utf8               Requested bytes must be non-negative\n-  #211 = NameAndType        #101:#256     // \"<init>\":(Ljava/lang/String;)V\n-  #212 = NameAndType        #119:#113     // doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n-  #213 = NameAndType        #85:#86       // IV:[I\n-  #214 = NameAndType        #101:#102     // \"<init>\":([II)V\n-  #215 = Class              #257          // java/util/Objects\n-  #216 = NameAndType        #258:#259     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #217 = Utf8               Blake3 keys must be 32 bytes\n-  #218 = NameAndType        #125:#111     // initHash:()Lorg/apache/commons/codec/digest/Blake3;\n-  #219 = NameAndType        #112:#113     // update:([B)Lorg/apache/commons/codec/digest/Blake3;\n-  #220 = NameAndType        #119:#121     // doFinalize:(I)[B\n-  #221 = NameAndType        #126:#113     // initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n-  #222 = Utf8               java/lang/IndexOutOfBoundsException\n-  #223 = Utf8               Offset must be non-negative\n-  #224 = Utf8               Length must be non-negative\n-  #225 = Utf8               java/lang/StringBuilder\n-  #226 = Utf8               Offset\n-  #227 = NameAndType        #260:#261     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #228 = NameAndType        #260:#262     // append:(I)Ljava/lang/StringBuilder;\n-  #229 = Utf8                and length\n-  #230 = Utf8                out of bounds with buffer length\n-  #231 = NameAndType        #263:#264     // toString:()Ljava/lang/String;\n-  #232 = Utf8               java/lang/Byte\n-  #233 = NameAndType        #145:#146     // unpackInt:([BI)I\n-  #234 = NameAndType        #265:#266     // rotateRight:(II)I\n-  #235 = NameAndType        #152:#153     // g:([IIIIIII)V\n-  #236 = Class              #267          // java/util/Arrays\n-  #237 = NameAndType        #268:#269     // copyOf:([II)[I\n-  #238 = Class              #270          // java/lang/System\n-  #239 = NameAndType        #271:#272     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #240 = NameAndType        #97:#98       // MSG_SCHEDULE:[[B\n-  #241 = NameAndType        #161:#162     // round:([I[I[B)V\n-  #242 = Utf8               org/apache/commons/codec/digest/Blake3$Output\n-  #243 = Class              #86           // \"[I\"\n-  #244 = NameAndType        #273:#274     // clone:()Ljava/lang/Object;\n-  #245 = NameAndType        #101:#275     // \"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n-  #246 = NameAndType        #276:#277     // access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n-  #247 = Utf8               java/lang/Object\n-  #248 = Utf8               org/apache/commons/codec/digest/Blake3$1\n-  #249 = Utf8               org/apache/commons/codec/digest/Blake3$ChunkState\n-  #250 = Utf8               ([IILorg/apache/commons/codec/digest/Blake3$1;)V\n-  #251 = Utf8               access$100\n-  #252 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n-  #253 = Utf8               access$200\n-  #254 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n-  #255 = Utf8               access$300\n-  #256 = Utf8               (Ljava/lang/String;)V\n-  #257 = Utf8               java/util/Objects\n-  #258 = Utf8               requireNonNull\n-  #259 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #260 = Utf8               append\n-  #261 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #262 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #263 = Utf8               toString\n-  #264 = Utf8               ()Ljava/lang/String;\n-  #265 = Utf8               rotateRight\n-  #266 = Utf8               (II)I\n-  #267 = Utf8               java/util/Arrays\n-  #268 = Utf8               copyOf\n-  #269 = Utf8               ([II)[I\n-  #270 = Utf8               java/lang/System\n-  #271 = Utf8               arraycopy\n-  #272 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #273 = Utf8               clone\n-  #274 = Utf8               ()Ljava/lang/Object;\n-  #275 = Utf8               ([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n-  #276 = Utf8               access$500\n-  #277 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n+    #1 = Class              #2            // org/apache/commons/codec/digest/Blake3\n+    #2 = Utf8               org/apache/commons/codec/digest/Blake3\n+    #3 = Class              #4            // java/lang/Integer\n+    #4 = Utf8               java/lang/Integer\n+    #5 = Methodref          #1.#6         // org/apache/commons/codec/digest/Blake3.parentChainingValue:([I[I[II)[I\n+    #6 = NameAndType        #7:#8         // parentChainingValue:([I[I[II)[I\n+    #7 = Utf8               parentChainingValue\n+    #8 = Utf8               ([I[I[II)[I\n+    #9 = Methodref          #1.#10        // org/apache/commons/codec/digest/Blake3.parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n+   #10 = NameAndType        #11:#12       // parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n+   #11 = Utf8               parentOutput\n+   #12 = Utf8               ([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n+   #13 = Methodref          #1.#14        // org/apache/commons/codec/digest/Blake3.unpackInts:([BI)[I\n+   #14 = NameAndType        #15:#16       // unpackInts:([BI)[I\n+   #15 = Utf8               unpackInts\n+   #16 = Utf8               ([BI)[I\n+   #17 = Methodref          #1.#18        // org/apache/commons/codec/digest/Blake3.packInt:(I[BII)V\n+   #18 = NameAndType        #19:#20       // packInt:(I[BII)V\n+   #19 = Utf8               packInt\n+   #20 = Utf8               (I[BII)V\n+   #21 = Methodref          #1.#22        // org/apache/commons/codec/digest/Blake3.compress:([I[IIJI)[I\n+   #22 = NameAndType        #23:#24       // compress:([I[IIJI)[I\n+   #23 = Utf8               compress\n+   #24 = Utf8               ([I[IIJI)[I\n+   #25 = Methodref          #26.#27       // java/lang/Object.\"<init>\":()V\n+   #26 = Class              #28           // java/lang/Object\n+   #27 = NameAndType        #29:#30       // \"<init>\":()V\n+   #28 = Utf8               java/lang/Object\n+   #29 = Utf8               <init>\n+   #30 = Utf8               ()V\n+   #31 = Class              #32           // org/apache/commons/codec/digest/Blake3$EngineState\n+   #32 = Utf8               org/apache/commons/codec/digest/Blake3$EngineState\n+   #33 = Methodref          #31.#34       // org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n+   #34 = NameAndType        #29:#35       // \"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n+   #35 = Utf8               ([IILorg/apache/commons/codec/digest/Blake3$1;)V\n+   #36 = Fieldref           #1.#37        // org/apache/commons/codec/digest/Blake3.engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+   #37 = NameAndType        #38:#39       // engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+   #38 = Utf8               engineState\n+   #39 = Utf8               Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+   #40 = Methodref          #31.#41       // org/apache/commons/codec/digest/Blake3$EngineState.access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n+   #41 = NameAndType        #42:#43       // access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n+   #42 = Utf8               access$100\n+   #43 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n+   #44 = Methodref          #1.#45        // org/apache/commons/codec/digest/Blake3.update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+   #45 = NameAndType        #46:#47       // update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+   #46 = Utf8               update\n+   #47 = Utf8               ([BII)Lorg/apache/commons/codec/digest/Blake3;\n+   #48 = Methodref          #1.#49        // org/apache/commons/codec/digest/Blake3.checkBufferArgs:([BII)V\n+   #49 = NameAndType        #50:#51       // checkBufferArgs:([BII)V\n+   #50 = Utf8               checkBufferArgs\n+   #51 = Utf8               ([BII)V\n+   #52 = Methodref          #31.#53       // org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+   #53 = NameAndType        #54:#55       // access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+   #54 = Utf8               access$200\n+   #55 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+   #56 = Methodref          #1.#57        // org/apache/commons/codec/digest/Blake3.doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+   #57 = NameAndType        #58:#47       // doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+   #58 = Utf8               doFinalize\n+   #59 = Methodref          #31.#60       // org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+   #60 = NameAndType        #61:#55       // access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+   #61 = Utf8               access$300\n+   #62 = Class              #63           // java/lang/IllegalArgumentException\n+   #63 = Utf8               java/lang/IllegalArgumentException\n+   #64 = String             #65           // Requested bytes must be non-negative\n+   #65 = Utf8               Requested bytes must be non-negative\n+   #66 = Methodref          #62.#67       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #67 = NameAndType        #29:#68       // \"<init>\":(Ljava/lang/String;)V\n+   #68 = Utf8               (Ljava/lang/String;)V\n+   #69 = Methodref          #1.#70        // org/apache/commons/codec/digest/Blake3.doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #70 = NameAndType        #58:#71       // doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #71 = Utf8               ([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #72 = Fieldref           #1.#73        // org/apache/commons/codec/digest/Blake3.IV:[I\n+   #73 = NameAndType        #74:#75       // IV:[I\n+   #74 = Utf8               IV\n+   #75 = Utf8               [I\n+   #76 = Methodref          #1.#77        // org/apache/commons/codec/digest/Blake3.\"<init>\":([II)V\n+   #77 = NameAndType        #29:#78       // \"<init>\":([II)V\n+   #78 = Utf8               ([II)V\n+   #79 = Methodref          #80.#81       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #80 = Class              #82           // java/util/Objects\n+   #81 = NameAndType        #83:#84       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #82 = Utf8               java/util/Objects\n+   #83 = Utf8               requireNonNull\n+   #84 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #85 = String             #86           // Blake3 keys must be 32 bytes\n+   #86 = Utf8               Blake3 keys must be 32 bytes\n+   #87 = Methodref          #1.#88        // org/apache/commons/codec/digest/Blake3.initHash:()Lorg/apache/commons/codec/digest/Blake3;\n+   #88 = NameAndType        #89:#90       // initHash:()Lorg/apache/commons/codec/digest/Blake3;\n+   #89 = Utf8               initHash\n+   #90 = Utf8               ()Lorg/apache/commons/codec/digest/Blake3;\n+   #91 = Methodref          #1.#92        // org/apache/commons/codec/digest/Blake3.update:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #92 = NameAndType        #46:#71       // update:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #93 = Methodref          #1.#94        // org/apache/commons/codec/digest/Blake3.doFinalize:(I)[B\n+   #94 = NameAndType        #58:#95       // doFinalize:(I)[B\n+   #95 = Utf8               (I)[B\n+   #96 = Methodref          #1.#97        // org/apache/commons/codec/digest/Blake3.initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #97 = NameAndType        #98:#71       // initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n+   #98 = Utf8               initKeyedHash\n+   #99 = Class              #100          // java/lang/IndexOutOfBoundsException\n+  #100 = Utf8               java/lang/IndexOutOfBoundsException\n+  #101 = String             #102          // Offset must be non-negative\n+  #102 = Utf8               Offset must be non-negative\n+  #103 = Methodref          #99.#67       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #104 = String             #105          // Length must be non-negative\n+  #105 = Utf8               Length must be non-negative\n+  #106 = Class              #107          // java/lang/StringBuilder\n+  #107 = Utf8               java/lang/StringBuilder\n+  #108 = Methodref          #106.#27      // java/lang/StringBuilder.\"<init>\":()V\n+  #109 = String             #110          // Offset\n+  #110 = Utf8               Offset\n+  #111 = Methodref          #106.#112     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = NameAndType        #113:#114     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #113 = Utf8               append\n+  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = Methodref          #106.#116     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #116 = NameAndType        #113:#117     // append:(I)Ljava/lang/StringBuilder;\n+  #117 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #118 = String             #119          //  and length\n+  #119 = Utf8                and length\n+  #120 = String             #121          //  out of bounds with buffer length\n+  #121 = Utf8                out of bounds with buffer length\n+  #122 = Methodref          #106.#123     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #123 = NameAndType        #124:#125     // toString:()Ljava/lang/String;\n+  #124 = Utf8               toString\n+  #125 = Utf8               ()Ljava/lang/String;\n+  #126 = Class              #127          // java/lang/Byte\n+  #127 = Utf8               java/lang/Byte\n+  #128 = Methodref          #1.#129       // org/apache/commons/codec/digest/Blake3.unpackInt:([BI)I\n+  #129 = NameAndType        #130:#131     // unpackInt:([BI)I\n+  #130 = Utf8               unpackInt\n+  #131 = Utf8               ([BI)I\n+  #132 = Methodref          #3.#133       // java/lang/Integer.rotateRight:(II)I\n+  #133 = NameAndType        #134:#135     // rotateRight:(II)I\n+  #134 = Utf8               rotateRight\n+  #135 = Utf8               (II)I\n+  #136 = Methodref          #1.#137       // org/apache/commons/codec/digest/Blake3.g:([IIIIIII)V\n+  #137 = NameAndType        #138:#139     // g:([IIIIIII)V\n+  #138 = Utf8               g\n+  #139 = Utf8               ([IIIIIII)V\n+  #140 = Methodref          #141.#142     // java/util/Arrays.copyOf:([II)[I\n+  #141 = Class              #143          // java/util/Arrays\n+  #142 = NameAndType        #144:#145     // copyOf:([II)[I\n+  #143 = Utf8               java/util/Arrays\n+  #144 = Utf8               copyOf\n+  #145 = Utf8               ([II)[I\n+  #146 = Methodref          #147.#148     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #147 = Class              #149          // java/lang/System\n+  #148 = NameAndType        #150:#151     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #149 = Utf8               java/lang/System\n+  #150 = Utf8               arraycopy\n+  #151 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #152 = Fieldref           #1.#153       // org/apache/commons/codec/digest/Blake3.MSG_SCHEDULE:[[B\n+  #153 = NameAndType        #154:#155     // MSG_SCHEDULE:[[B\n+  #154 = Utf8               MSG_SCHEDULE\n+  #155 = Utf8               [[B\n+  #156 = Methodref          #1.#157       // org/apache/commons/codec/digest/Blake3.round:([I[I[B)V\n+  #157 = NameAndType        #158:#159     // round:([I[I[B)V\n+  #158 = Utf8               round\n+  #159 = Utf8               ([I[I[B)V\n+  #160 = Class              #161          // org/apache/commons/codec/digest/Blake3$Output\n+  #161 = Utf8               org/apache/commons/codec/digest/Blake3$Output\n+  #162 = Methodref          #163.#164     // \"[I\".clone:()Ljava/lang/Object;\n+  #163 = Class              #75           // \"[I\"\n+  #164 = NameAndType        #165:#166     // clone:()Ljava/lang/Object;\n+  #165 = Utf8               clone\n+  #166 = Utf8               ()Ljava/lang/Object;\n+  #167 = Methodref          #160.#168     // org/apache/commons/codec/digest/Blake3$Output.\"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n+  #168 = NameAndType        #29:#169      // \"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n+  #169 = Utf8               ([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n+  #170 = Methodref          #160.#171     // org/apache/commons/codec/digest/Blake3$Output.access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n+  #171 = NameAndType        #172:#173     // access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n+  #172 = Utf8               access$500\n+  #173 = Utf8               (Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n+  #174 = Integer            1779033703\n+  #175 = Integer            -1150833019\n+  #176 = Integer            1013904242\n+  #177 = Integer            -1521486534\n+  #178 = Integer            1359893119\n+  #179 = Integer            -1694144372\n+  #180 = Integer            528734635\n+  #181 = Integer            1541459225\n+  #182 = Class              #183          // \"[B\"\n+  #183 = Utf8               [B\n+  #184 = Utf8               BLOCK_LEN\n+  #185 = Utf8               I\n+  #186 = Utf8               ConstantValue\n+  #187 = Integer            64\n+  #188 = Utf8               BLOCK_INTS\n+  #189 = Integer            16\n+  #190 = Utf8               KEY_LEN\n+  #191 = Integer            32\n+  #192 = Utf8               KEY_INTS\n+  #193 = Integer            8\n+  #194 = Utf8               OUT_LEN\n+  #195 = Utf8               CHUNK_LEN\n+  #196 = Integer            1024\n+  #197 = Utf8               CHAINING_VALUE_INTS\n+  #198 = Utf8               CHUNK_START\n+  #199 = Integer            1\n+  #200 = Utf8               CHUNK_END\n+  #201 = Integer            2\n+  #202 = Utf8               PARENT\n+  #203 = Integer            4\n+  #204 = Utf8               ROOT\n+  #205 = Utf8               KEYED_HASH\n+  #206 = Utf8               DERIVE_KEY_CONTEXT\n+  #207 = Utf8               DERIVE_KEY_MATERIAL\n+  #208 = Utf8               Code\n+  #209 = Utf8               LineNumberTable\n+  #210 = Utf8               LocalVariableTable\n+  #211 = Utf8               this\n+  #212 = Utf8               Lorg/apache/commons/codec/digest/Blake3;\n+  #213 = Utf8               key\n+  #214 = Utf8               flags\n+  #215 = Utf8               reset\n+  #216 = Utf8               in\n+  #217 = Utf8               offset\n+  #218 = Utf8               length\n+  #219 = Utf8               out\n+  #220 = Utf8               nrBytes\n+  #221 = Utf8               hash\n+  #222 = Utf8               StackMapTable\n+  #223 = Utf8               initKeyDerivationFunction\n+  #224 = Utf8               kdfContext\n+  #225 = Utf8               kdf\n+  #226 = Utf8               ([B)[B\n+  #227 = Utf8               data\n+  #228 = Utf8               keyedHash\n+  #229 = Utf8               ([B[B)[B\n+  #230 = Utf8               buffer\n+  #231 = Utf8               bufferLength\n+  #232 = Utf8               i\n+  #233 = Utf8               value\n+  #234 = Utf8               dst\n+  #235 = Utf8               off\n+  #236 = Utf8               len\n+  #237 = Utf8               buf\n+  #238 = Utf8               nrInts\n+  #239 = Utf8               values\n+  #240 = Utf8               state\n+  #241 = Utf8               a\n+  #242 = Utf8               b\n+  #243 = Utf8               c\n+  #244 = Utf8               d\n+  #245 = Utf8               mx\n+  #246 = Utf8               my\n+  #247 = Utf8               msg\n+  #248 = Utf8               schedule\n+  #249 = Utf8               chainingValue\n+  #250 = Utf8               blockWords\n+  #251 = Utf8               blockLength\n+  #252 = Utf8               counter\n+  #253 = Utf8               J\n+  #254 = Utf8               leftChildCV\n+  #255 = Utf8               rightChildCV\n+  #256 = Utf8               access$600\n+  #257 = Utf8               x0\n+  #258 = Utf8               x1\n+  #259 = Utf8               x2\n+  #260 = Utf8               x3\n+  #261 = Utf8               x4\n+  #262 = Utf8               access$700\n+  #263 = Utf8               access$800\n+  #264 = Utf8               access$1400\n+  #265 = Utf8               access$1600\n+  #266 = Utf8               <clinit>\n+  #267 = Utf8               SourceFile\n+  #268 = Utf8               Blake3.java\n+  #269 = Utf8               InnerClasses\n+  #270 = Utf8               Output\n+  #271 = Utf8               EngineState\n+  #272 = Class              #273          // org/apache/commons/codec/digest/Blake3$1\n+  #273 = Utf8               org/apache/commons/codec/digest/Blake3$1\n+  #274 = Class              #275          // org/apache/commons/codec/digest/Blake3$ChunkState\n+  #275 = Utf8               org/apache/commons/codec/digest/Blake3$ChunkState\n+  #276 = Utf8               ChunkState\n {\n   private static final int BLOCK_LEN = 64;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 64\n \n   private static final int BLOCK_INTS = 16;\n@@ -370,23 +369,23 @@\n \n   private org.apache.commons.codec.digest.Blake3(int[], int);\n     descriptor: ([II)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #25                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #9                  // class org/apache/commons/codec/digest/Blake3$EngineState\n+         5: new           #31                 // class org/apache/commons/codec/digest/Blake3$EngineState\n          8: dup\n          9: aload_1\n         10: iload_2\n         11: aconst_null\n-        12: invokespecial #10                 // Method org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n-        15: putfield      #11                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+        12: invokespecial #33                 // Method org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n+        15: putfield      #36                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n         18: return\n       LineNumberTable:\n         line 116: 0\n         line 117: 4\n         line 118: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -396,16 +395,16 @@\n \n   public org.apache.commons.codec.digest.Blake3 reset();\n     descriptor: ()Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n-         4: invokestatic  #12                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n+         1: getfield      #36                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+         4: invokestatic  #40                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$100:(Lorg/apache/commons/codec/digest/Blake3$EngineState;)V\n          7: aload_0\n          8: areturn\n       LineNumberTable:\n         line 125: 0\n         line 126: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -417,15 +416,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #13                 // Method update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+         5: invokevirtual #44                 // Method update:([BII)Lorg/apache/commons/codec/digest/Blake3;\n          8: areturn\n       LineNumberTable:\n         line 137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/digest/Blake3;\n             0       9     1    in   [B\n@@ -434,21 +433,21 @@\n     descriptor: ([BII)Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: iload_2\n          2: iload_3\n-         3: invokestatic  #14                 // Method checkBufferArgs:([BII)V\n+         3: invokestatic  #48                 // Method checkBufferArgs:([BII)V\n          6: aload_0\n-         7: getfield      #11                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+         7: getfield      #36                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokestatic  #15                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+        13: invokestatic  #52                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n         16: aload_0\n         17: areturn\n       LineNumberTable:\n         line 152: 0\n         line 153: 6\n         line 154: 16\n       LocalVariableTable:\n@@ -464,15 +463,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #16                 // Method doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n+         5: invokevirtual #56                 // Method doFinalize:([BII)Lorg/apache/commons/codec/digest/Blake3;\n          8: areturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/digest/Blake3;\n             0       9     1   out   [B\n@@ -481,21 +480,21 @@\n     descriptor: ([BII)Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: iload_2\n          2: iload_3\n-         3: invokestatic  #14                 // Method checkBufferArgs:([BII)V\n+         3: invokestatic  #48                 // Method checkBufferArgs:([BII)V\n          6: aload_0\n-         7: getfield      #11                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n+         7: getfield      #36                 // Field engineState:Lorg/apache/commons/codec/digest/Blake3$EngineState;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokestatic  #17                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+        13: invokestatic  #59                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n         16: aload_0\n         17: areturn\n       LineNumberTable:\n         line 182: 0\n         line 183: 6\n         line 184: 16\n       LocalVariableTable:\n@@ -508,25 +507,25 @@\n   public byte[] doFinalize(int);\n     descriptor: (I)[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: iload_1\n          1: ifge          14\n-         4: new           #18                 // class java/lang/IllegalArgumentException\n+         4: new           #62                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #19                 // String Requested bytes must be non-negative\n-        10: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #64                 // String Requested bytes must be non-negative\n+        10: invokespecial #66                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_1\n         15: newarray       byte\n         17: astore_2\n         18: aload_0\n         19: aload_2\n-        20: invokevirtual #21                 // Method doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n+        20: invokevirtual #69                 // Method doFinalize:([B)Lorg/apache/commons/codec/digest/Blake3;\n         23: pop\n         24: aload_2\n         25: areturn\n       LineNumberTable:\n         line 195: 0\n         line 196: 4\n         line 198: 14\n@@ -543,45 +542,45 @@\n   public static org.apache.commons.codec.digest.Blake3 initHash();\n     descriptor: ()Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/codec/digest/Blake3\n          3: dup\n-         4: getstatic     #22                 // Field IV:[I\n+         4: getstatic     #72                 // Field IV:[I\n          7: iconst_0\n-         8: invokespecial #23                 // Method \"<init>\":([II)V\n+         8: invokespecial #76                 // Method \"<init>\":([II)V\n         11: areturn\n       LineNumberTable:\n         line 209: 0\n \n   public static org.apache.commons.codec.digest.Blake3 initKeyedHash(byte[]);\n     descriptor: ([B)Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #79                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: arraylength\n          7: bipush        32\n          9: if_icmpeq     22\n-        12: new           #18                 // class java/lang/IllegalArgumentException\n+        12: new           #62                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: ldc           #25                 // String Blake3 keys must be 32 bytes\n-        18: invokespecial #20                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #85                 // String Blake3 keys must be 32 bytes\n+        18: invokespecial #66                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: new           #1                  // class org/apache/commons/codec/digest/Blake3\n         25: dup\n         26: aload_0\n         27: bipush        8\n-        29: invokestatic  #5                  // Method unpackInts:([BI)[I\n+        29: invokestatic  #13                 // Method unpackInts:([BI)[I\n         32: bipush        16\n-        34: invokespecial #23                 // Method \"<init>\":([II)V\n+        34: invokespecial #76                 // Method \"<init>\":([II)V\n         37: areturn\n       LineNumberTable:\n         line 222: 0\n         line 223: 5\n         line 224: 12\n         line 226: 22\n       LocalVariableTable:\n@@ -592,45 +591,45 @@\n \n   public static org.apache.commons.codec.digest.Blake3 initKeyDerivationFunction(byte[]);\n     descriptor: ([B)Lorg/apache/commons/codec/digest/Blake3;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #79                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n-         5: new           #9                  // class org/apache/commons/codec/digest/Blake3$EngineState\n+         5: new           #31                 // class org/apache/commons/codec/digest/Blake3$EngineState\n          8: dup\n-         9: getstatic     #22                 // Field IV:[I\n+         9: getstatic     #72                 // Field IV:[I\n         12: bipush        32\n         14: aconst_null\n-        15: invokespecial #10                 // Method org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n+        15: invokespecial #33                 // Method org/apache/commons/codec/digest/Blake3$EngineState.\"<init>\":([IILorg/apache/commons/codec/digest/Blake3$1;)V\n         18: astore_1\n         19: aload_1\n         20: aload_0\n         21: iconst_0\n         22: aload_0\n         23: arraylength\n-        24: invokestatic  #15                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+        24: invokestatic  #52                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$200:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n         27: bipush        32\n         29: newarray       byte\n         31: astore_2\n         32: aload_1\n         33: aload_2\n         34: iconst_0\n         35: aload_2\n         36: arraylength\n-        37: invokestatic  #17                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n+        37: invokestatic  #59                 // Method org/apache/commons/codec/digest/Blake3$EngineState.access$300:(Lorg/apache/commons/codec/digest/Blake3$EngineState;[BII)V\n         40: new           #1                  // class org/apache/commons/codec/digest/Blake3\n         43: dup\n         44: aload_2\n         45: bipush        8\n-        47: invokestatic  #5                  // Method unpackInts:([BI)[I\n+        47: invokestatic  #13                 // Method unpackInts:([BI)[I\n         50: bipush        64\n-        52: invokespecial #23                 // Method \"<init>\":([II)V\n+        52: invokespecial #76                 // Method \"<init>\":([II)V\n         55: areturn\n       LineNumberTable:\n         line 239: 0\n         line 240: 5\n         line 241: 19\n         line 242: 27\n         line 243: 32\n@@ -642,94 +641,94 @@\n            32      24     2   key   [B\n \n   public static byte[] hash(byte[]);\n     descriptor: ([B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: invokestatic  #26                 // Method initHash:()Lorg/apache/commons/codec/digest/Blake3;\n+         0: invokestatic  #87                 // Method initHash:()Lorg/apache/commons/codec/digest/Blake3;\n          3: aload_0\n-         4: invokevirtual #27                 // Method update:([B)Lorg/apache/commons/codec/digest/Blake3;\n+         4: invokevirtual #91                 // Method update:([B)Lorg/apache/commons/codec/digest/Blake3;\n          7: bipush        32\n-         9: invokevirtual #28                 // Method doFinalize:(I)[B\n+         9: invokevirtual #93                 // Method doFinalize:(I)[B\n         12: areturn\n       LineNumberTable:\n         line 255: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  data   [B\n \n   public static byte[] keyedHash(byte[], byte[]);\n     descriptor: ([B[B)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokestatic  #29                 // Method initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n+         1: invokestatic  #96                 // Method initKeyedHash:([B)Lorg/apache/commons/codec/digest/Blake3;\n          4: aload_1\n-         5: invokevirtual #27                 // Method update:([B)Lorg/apache/commons/codec/digest/Blake3;\n+         5: invokevirtual #91                 // Method update:([B)Lorg/apache/commons/codec/digest/Blake3;\n          8: bipush        32\n-        10: invokevirtual #28                 // Method doFinalize:(I)[B\n+        10: invokevirtual #93                 // Method doFinalize:(I)[B\n         13: areturn\n       LineNumberTable:\n         line 267: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0   key   [B\n             0      14     1  data   [B\n \n   private static void checkBufferArgs(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n-         1: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #79                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: iload_1\n          6: ifge          19\n-         9: new           #30                 // class java/lang/IndexOutOfBoundsException\n+         9: new           #99                 // class java/lang/IndexOutOfBoundsException\n         12: dup\n-        13: ldc           #31                 // String Offset must be non-negative\n-        15: invokespecial #32                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #101                // String Offset must be non-negative\n+        15: invokespecial #103                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: iload_2\n         20: ifge          33\n-        23: new           #30                 // class java/lang/IndexOutOfBoundsException\n+        23: new           #99                 // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: ldc           #33                 // String Length must be non-negative\n-        29: invokespecial #32                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        27: ldc           #104                // String Length must be non-negative\n+        29: invokespecial #103                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: aload_0\n         34: arraylength\n         35: istore_3\n         36: iload_1\n         37: iload_3\n         38: iload_2\n         39: isub\n         40: if_icmple     88\n-        43: new           #30                 // class java/lang/IndexOutOfBoundsException\n+        43: new           #99                 // class java/lang/IndexOutOfBoundsException\n         46: dup\n-        47: new           #34                 // class java/lang/StringBuilder\n+        47: new           #106                // class java/lang/StringBuilder\n         50: dup\n-        51: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        54: ldc           #36                 // String Offset\n-        56: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokespecial #108                // Method java/lang/StringBuilder.\"<init>\":()V\n+        54: ldc           #109                // String Offset\n+        56: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         59: iload_1\n-        60: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        63: ldc           #39                 // String  and length\n-        65: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        63: ldc           #118                // String  and length\n+        65: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         68: iload_2\n-        69: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        72: ldc           #40                 // String  out of bounds with buffer length\n-        74: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        69: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        72: ldc           #120                // String  out of bounds with buffer length\n+        74: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         77: iload_3\n-        78: invokevirtual #38                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        81: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        84: invokespecial #32                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        78: invokevirtual #115                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        81: invokevirtual #122                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        84: invokespecial #103                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         87: athrow\n         88: return\n       LineNumberTable:\n         line 271: 0\n         line 272: 5\n         line 273: 9\n         line 275: 19\n@@ -857,15 +856,15 @@\n          9: iload_3\n         10: iload_1\n         11: if_icmpge     32\n         14: aload_2\n         15: iload_3\n         16: aload_0\n         17: iload         4\n-        19: invokestatic  #43                 // Method unpackInt:([BI)I\n+        19: invokestatic  #128                // Method unpackInt:([BI)I\n         22: iastore\n         23: iinc          3, 1\n         26: iinc          4, 4\n         29: goto          9\n         32: aload_2\n         33: areturn\n       LineNumberTable:\n@@ -910,15 +909,15 @@\n         16: iload         4\n         18: iaload\n         19: aload_0\n         20: iload_1\n         21: iaload\n         22: ixor\n         23: bipush        16\n-        25: invokestatic  #44                 // Method java/lang/Integer.rotateRight:(II)I\n+        25: invokestatic  #132                // Method java/lang/Integer.rotateRight:(II)I\n         28: iastore\n         29: aload_0\n         30: iload_3\n         31: dup2\n         32: iaload\n         33: aload_0\n         34: iload         4\n@@ -931,15 +930,15 @@\n         42: iload_2\n         43: iaload\n         44: aload_0\n         45: iload_3\n         46: iaload\n         47: ixor\n         48: bipush        12\n-        50: invokestatic  #44                 // Method java/lang/Integer.rotateRight:(II)I\n+        50: invokestatic  #132                // Method java/lang/Integer.rotateRight:(II)I\n         53: iastore\n         54: aload_0\n         55: iload_1\n         56: dup2\n         57: iaload\n         58: aload_0\n         59: iload_2\n@@ -954,15 +953,15 @@\n         70: iload         4\n         72: iaload\n         73: aload_0\n         74: iload_1\n         75: iaload\n         76: ixor\n         77: bipush        8\n-        79: invokestatic  #44                 // Method java/lang/Integer.rotateRight:(II)I\n+        79: invokestatic  #132                // Method java/lang/Integer.rotateRight:(II)I\n         82: iastore\n         83: aload_0\n         84: iload_3\n         85: dup2\n         86: iaload\n         87: aload_0\n         88: iload         4\n@@ -975,15 +974,15 @@\n         96: iload_2\n         97: iaload\n         98: aload_0\n         99: iload_3\n        100: iaload\n        101: ixor\n        102: bipush        7\n-       104: invokestatic  #44                 // Method java/lang/Integer.rotateRight:(II)I\n+       104: invokestatic  #132                // Method java/lang/Integer.rotateRight:(II)I\n        107: iastore\n        108: return\n       LineNumberTable:\n         line 308: 0\n         line 309: 12\n         line 310: 29\n         line 311: 39\n@@ -1018,15 +1017,15 @@\n         10: baload\n         11: iaload\n         12: aload_1\n         13: aload_2\n         14: iconst_1\n         15: baload\n         16: iaload\n-        17: invokestatic  #45                 // Method g:([IIIIIII)V\n+        17: invokestatic  #136                // Method g:([IIIIIII)V\n         20: aload_0\n         21: iconst_1\n         22: iconst_5\n         23: bipush        9\n         25: bipush        13\n         27: aload_1\n         28: aload_2\n@@ -1034,15 +1033,15 @@\n         30: baload\n         31: iaload\n         32: aload_1\n         33: aload_2\n         34: iconst_3\n         35: baload\n         36: iaload\n-        37: invokestatic  #45                 // Method g:([IIIIIII)V\n+        37: invokestatic  #136                // Method g:([IIIIIII)V\n         40: aload_0\n         41: iconst_2\n         42: bipush        6\n         44: bipush        10\n         46: bipush        14\n         48: aload_1\n         49: aload_2\n@@ -1050,15 +1049,15 @@\n         51: baload\n         52: iaload\n         53: aload_1\n         54: aload_2\n         55: iconst_5\n         56: baload\n         57: iaload\n-        58: invokestatic  #45                 // Method g:([IIIIIII)V\n+        58: invokestatic  #136                // Method g:([IIIIIII)V\n         61: aload_0\n         62: iconst_3\n         63: bipush        7\n         65: bipush        11\n         67: bipush        15\n         69: aload_1\n         70: aload_2\n@@ -1066,15 +1065,15 @@\n         73: baload\n         74: iaload\n         75: aload_1\n         76: aload_2\n         77: bipush        7\n         79: baload\n         80: iaload\n-        81: invokestatic  #45                 // Method g:([IIIIIII)V\n+        81: invokestatic  #136                // Method g:([IIIIIII)V\n         84: aload_0\n         85: iconst_0\n         86: iconst_5\n         87: bipush        10\n         89: bipush        15\n         91: aload_1\n         92: aload_2\n@@ -1082,15 +1081,15 @@\n         95: baload\n         96: iaload\n         97: aload_1\n         98: aload_2\n         99: bipush        9\n        101: baload\n        102: iaload\n-       103: invokestatic  #45                 // Method g:([IIIIIII)V\n+       103: invokestatic  #136                // Method g:([IIIIIII)V\n        106: aload_0\n        107: iconst_1\n        108: bipush        6\n        110: bipush        11\n        112: bipush        12\n        114: aload_1\n        115: aload_2\n@@ -1098,15 +1097,15 @@\n        118: baload\n        119: iaload\n        120: aload_1\n        121: aload_2\n        122: bipush        11\n        124: baload\n        125: iaload\n-       126: invokestatic  #45                 // Method g:([IIIIIII)V\n+       126: invokestatic  #136                // Method g:([IIIIIII)V\n        129: aload_0\n        130: iconst_2\n        131: bipush        7\n        133: bipush        8\n        135: bipush        13\n        137: aload_1\n        138: aload_2\n@@ -1114,15 +1113,15 @@\n        141: baload\n        142: iaload\n        143: aload_1\n        144: aload_2\n        145: bipush        13\n        147: baload\n        148: iaload\n-       149: invokestatic  #45                 // Method g:([IIIIIII)V\n+       149: invokestatic  #136                // Method g:([IIIIIII)V\n        152: aload_0\n        153: iconst_3\n        154: iconst_4\n        155: bipush        9\n        157: bipush        14\n        159: aload_1\n        160: aload_2\n@@ -1130,15 +1129,15 @@\n        163: baload\n        164: iaload\n        165: aload_1\n        166: aload_2\n        167: bipush        15\n        169: baload\n        170: iaload\n-       171: invokestatic  #45                 // Method g:([IIIIIII)V\n+       171: invokestatic  #136                // Method g:([IIIIIII)V\n        174: return\n       LineNumberTable:\n         line 320: 0\n         line 321: 20\n         line 322: 40\n         line 323: 61\n         line 326: 84\n@@ -1155,22 +1154,22 @@\n   private static int[] compress(int[], int[], int, long, int);\n     descriptor: ([I[IIJI)[I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=9, args_size=5\n          0: aload_0\n          1: bipush        16\n-         3: invokestatic  #46                 // Method java/util/Arrays.copyOf:([II)[I\n+         3: invokestatic  #140                // Method java/util/Arrays.copyOf:([II)[I\n          6: astore        6\n-         8: getstatic     #22                 // Field IV:[I\n+         8: getstatic     #72                 // Field IV:[I\n         11: iconst_0\n         12: aload         6\n         14: bipush        8\n         16: iconst_4\n-        17: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        17: invokestatic  #146                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         20: aload         6\n         22: bipush        12\n         24: lload_3\n         25: l2i\n         26: iastore\n         27: aload         6\n         29: bipush        13\n@@ -1188,22 +1187,22 @@\n         47: iload         5\n         49: iastore\n         50: iconst_0\n         51: istore        7\n         53: iload         7\n         55: bipush        7\n         57: if_icmpge     82\n-        60: getstatic     #48                 // Field MSG_SCHEDULE:[[B\n+        60: getstatic     #152                // Field MSG_SCHEDULE:[[B\n         63: iload         7\n         65: aaload\n         66: astore        8\n         68: aload         6\n         70: aload_1\n         71: aload         8\n-        73: invokestatic  #49                 // Method round:([I[I[B)V\n+        73: invokestatic  #156                // Method round:([I[I[B)V\n         76: iinc          7, 1\n         79: goto          53\n         82: iconst_0\n         83: istore        7\n         85: iload         7\n         87: aload         6\n         89: arraylength\n@@ -1278,35 +1277,35 @@\n   private static org.apache.commons.codec.digest.Blake3$Output parentOutput(int[], int[], int[], int);\n     descriptor: ([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=9, locals=5, args_size=4\n          0: aload_0\n          1: bipush        16\n-         3: invokestatic  #46                 // Method java/util/Arrays.copyOf:([II)[I\n+         3: invokestatic  #140                // Method java/util/Arrays.copyOf:([II)[I\n          6: astore        4\n          8: aload_1\n          9: iconst_0\n         10: aload         4\n         12: bipush        8\n         14: bipush        8\n-        16: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        19: new           #50                 // class org/apache/commons/codec/digest/Blake3$Output\n+        16: invokestatic  #146                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        19: new           #160                // class org/apache/commons/codec/digest/Blake3$Output\n         22: dup\n         23: aload_2\n-        24: invokevirtual #51                 // Method \"[I\".clone:()Ljava/lang/Object;\n-        27: checkcast     #52                 // class \"[I\"\n+        24: invokevirtual #162                // Method \"[I\".clone:()Ljava/lang/Object;\n+        27: checkcast     #163                // class \"[I\"\n         30: aload         4\n         32: lconst_0\n         33: bipush        64\n         35: iload_3\n         36: iconst_4\n         37: ior\n         38: aconst_null\n-        39: invokespecial #53                 // Method org/apache/commons/codec/digest/Blake3$Output.\"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n+        39: invokespecial #167                // Method org/apache/commons/codec/digest/Blake3$Output.\"<init>\":([I[IJIILorg/apache/commons/codec/digest/Blake3$1;)V\n         42: areturn\n       LineNumberTable:\n         line 354: 0\n         line 355: 8\n         line 356: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1321,16 +1320,16 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n-         4: invokestatic  #4                  // Method parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n-         7: invokestatic  #54                 // Method org/apache/commons/codec/digest/Blake3$Output.access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n+         4: invokestatic  #9                  // Method parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n+         7: invokestatic  #170                // Method org/apache/commons/codec/digest/Blake3$Output.access$500:(Lorg/apache/commons/codec/digest/Blake3$Output;)[I\n         10: areturn\n       LineNumberTable:\n         line 361: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 leftChildCV   [I\n             0      11     1 rightChildCV   [I\n@@ -1343,15 +1342,15 @@\n     Code:\n       stack=6, locals=6, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: lload_3\n          4: iload         5\n-         6: invokestatic  #7                  // Method compress:([I[IIJI)[I\n+         6: invokestatic  #21                 // Method compress:([I[IIJI)[I\n          9: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0    x0   [I\n             0      10     1    x1   [I\n@@ -1364,15 +1363,15 @@\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: iload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokestatic  #6                  // Method packInt:(I[BII)V\n+         4: invokestatic  #17                 // Method packInt:(I[BII)V\n          7: return\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0    x0   I\n             0       8     1    x1   [B\n@@ -1382,15 +1381,15 @@\n   static int[] access$800(byte[], int);\n     descriptor: ([BI)[I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #5                  // Method unpackInts:([BI)[I\n+         2: invokestatic  #13                 // Method unpackInts:([BI)[I\n          5: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0    x0   [B\n             0       6     1    x1   I\n@@ -1400,15 +1399,15 @@\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n-         4: invokestatic  #4                  // Method parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n+         4: invokestatic  #9                  // Method parentOutput:([I[I[II)Lorg/apache/commons/codec/digest/Blake3$Output;\n          7: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0    x0   [I\n             0       8     1    x1   [I\n@@ -1420,15 +1419,15 @@\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iload_3\n-         4: invokestatic  #3                  // Method parentChainingValue:([I[I[II)[I\n+         4: invokestatic  #5                  // Method parentChainingValue:([I[I[II)[I\n          7: areturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0    x0   [I\n             0       8     1    x1   [I\n@@ -1440,47 +1439,47 @@\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=7, locals=0, args_size=0\n          0: bipush        8\n          2: newarray       int\n          4: dup\n          5: iconst_0\n-         6: ldc           #55                 // int 1779033703\n+         6: ldc           #174                // int 1779033703\n          8: iastore\n          9: dup\n         10: iconst_1\n-        11: ldc           #56                 // int -1150833019\n+        11: ldc           #175                // int -1150833019\n         13: iastore\n         14: dup\n         15: iconst_2\n-        16: ldc           #57                 // int 1013904242\n+        16: ldc           #176                // int 1013904242\n         18: iastore\n         19: dup\n         20: iconst_3\n-        21: ldc           #58                 // int -1521486534\n+        21: ldc           #177                // int -1521486534\n         23: iastore\n         24: dup\n         25: iconst_4\n-        26: ldc           #59                 // int 1359893119\n+        26: ldc           #178                // int 1359893119\n         28: iastore\n         29: dup\n         30: iconst_5\n-        31: ldc           #60                 // int -1694144372\n+        31: ldc           #179                // int -1694144372\n         33: iastore\n         34: dup\n         35: bipush        6\n-        37: ldc           #61                 // int 528734635\n+        37: ldc           #180                // int 528734635\n         39: iastore\n         40: dup\n         41: bipush        7\n-        43: ldc           #62                 // int 1541459225\n+        43: ldc           #181                // int 1541459225\n         45: iastore\n-        46: putstatic     #22                 // Field IV:[I\n+        46: putstatic     #72                 // Field IV:[I\n         49: bipush        7\n-        51: anewarray     #63                 // class \"[B\"\n+        51: anewarray     #182                // class \"[B\"\n         54: dup\n         55: iconst_0\n         56: bipush        16\n         58: newarray       byte\n         60: dup\n         61: iconst_0\n         62: iconst_0\n@@ -1956,19 +1955,19 @@\n        682: bipush        7\n        684: bastore\n        685: dup\n        686: bipush        15\n        688: bipush        13\n        690: bastore\n        691: aastore\n-       692: putstatic     #48                 // Field MSG_SCHEDULE:[[B\n+       692: putstatic     #152                // Field MSG_SCHEDULE:[[B\n        695: return\n       LineNumberTable:\n         line 89: 0\n         line 104: 49\n }\n SourceFile: \"Blake3.java\"\n InnerClasses:\n-  static #65;                             // class org/apache/commons/codec/digest/Blake3$1\n-  private static #67= #9 of #1;           // EngineState=class org/apache/commons/codec/digest/Blake3$EngineState of class org/apache/commons/codec/digest/Blake3\n-  private static #69= #68 of #1;          // ChunkState=class org/apache/commons/codec/digest/Blake3$ChunkState of class org/apache/commons/codec/digest/Blake3\n-  private static #70= #50 of #1;          // Output=class org/apache/commons/codec/digest/Blake3$Output of class org/apache/commons/codec/digest/Blake3\n+  private static #270= #160 of #1;        // Output=class org/apache/commons/codec/digest/Blake3$Output of class org/apache/commons/codec/digest/Blake3\n+  private static #271= #31 of #1;         // EngineState=class org/apache/commons/codec/digest/Blake3$EngineState of class org/apache/commons/codec/digest/Blake3\n+  static #272;                            // class org/apache/commons/codec/digest/Blake3$1\n+  private static #276= #274 of #1;        // ChunkState=class org/apache/commons/codec/digest/Blake3$ChunkState of class org/apache/commons/codec/digest/Blake3\n"}]}
