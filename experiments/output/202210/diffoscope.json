{"diffoscope-json-version": 1, "source1": "first/FileBasedScatterGatherBackingStore.class", "source2": "second/FileBasedScatterGatherBackingStore.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,32 +19,32 @@\n         this.target = target;\n         try {\n             this.os = Files.newOutputStream(target.toPath(), new OpenOption[0]);\n         }\n         catch (final FileNotFoundException ex) {\n             throw ex;\n         }\n-        catch (final IOException ex2) {\n-            throw new RuntimeException(ex2);\n+        catch (final IOException cause) {\n+            throw new RuntimeException(cause);\n         }\n     }\n     \n     public InputStream getInputStream() throws IOException {\n         return Files.newInputStream(this.target.toPath(), new OpenOption[0]);\n     }\n     \n     public void closeForWriting() throws IOException {\n         if (!this.closed) {\n             this.os.close();\n             this.closed = true;\n         }\n     }\n     \n-    public void writeOut(final byte[] data, final int offset, final int length) throws IOException {\n-        this.os.write(data, offset, length);\n+    public void writeOut(final byte[] b, final int off, final int len) throws IOException {\n+        this.os.write(b, off, len);\n     }\n     \n     public void close() throws IOException {\n         this.closeForWriting();\n         this.target.delete();\n     }\n }\n"}]}
