{"diffoscope-json-version": 1, "source1": "first/MultiFileConfigurationBuilder.class", "source2": "second/MultiFileConfigurationBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -90,23 +90,23 @@\n         }\n         return builder;\n     }\n     \n     public synchronized <E extends Event> void addEventListener(final EventType<E> eventType, final EventListener<? super E> l) {\n         super.addEventListener((EventType)eventType, (EventListener)l);\n         if (isEventTypeForManagedBuilders(eventType)) {\n-            this.getManagedBuilders().values().forEach(b -> b.addEventListener(eventType, l));\n+            this.getManagedBuilders().values().forEach(b -> b.addEventListener(eventType2, eventListener));\n             this.configurationListeners.addEventListener((EventType)eventType, (EventListener)l);\n         }\n     }\n     \n     public synchronized <E extends Event> boolean removeEventListener(final EventType<E> eventType, final EventListener<? super E> l) {\n         final boolean result = super.removeEventListener((EventType)eventType, (EventListener)l);\n         if (isEventTypeForManagedBuilders(eventType)) {\n-            this.getManagedBuilders().values().forEach(b -> b.removeEventListener(eventType, l));\n+            this.getManagedBuilders().values().forEach(b -> b.removeEventListener(eventType2, eventListener));\n             this.configurationListeners.removeEventListener((EventType)eventType, (EventListener)l);\n         }\n         return result;\n     }\n     \n     public synchronized void resetParameters() {\n         this.getManagedBuilders().values().forEach(b -> b.removeEventListener(ConfigurationBuilderEvent.ANY, (EventListener)this.managedBuilderDelegationListener));\n@@ -170,14 +170,15 @@\n             this.inInterpolation.set(Boolean.TRUE);\n             try {\n                 fileName = this.constructFileName(multiParams);\n             }\n             finally {\n                 this.inInterpolation.set(Boolean.FALSE);\n             }\n+            this.inInterpolation.set(Boolean.FALSE);\n         }\n         return fileName;\n     }\n     \n     private void handleManagedBuilderEvent(final ConfigurationBuilderEvent event) {\n         if (ConfigurationBuilderEvent.RESET.equals(event.getEventType())) {\n             this.resetResult();\n"}]}
