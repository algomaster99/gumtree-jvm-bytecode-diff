{"diffoscope-json-version": 1, "source1": "first/DeflateCompressorInputStream.class", "source2": "second/DeflateCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum dbe6ab8abd766282ec15334cb958f31eedea6dc30c19232990ca609451862752\n+  SHA-256 checksum 0a41df2980d829732108050d796f99872147987e12d3c04764461f880e4c8640\n   Compiled from \"DeflateCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #23                         // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n   super_class: #24                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 8, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #70           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-    #2 = Methodref          #1.#71        // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-    #3 = Methodref          #23.#72       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-    #4 = Methodref          #24.#71       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #5 = Class              #73           // java/util/zip/Inflater\n-    #6 = Methodref          #1.#74        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n-    #7 = Methodref          #5.#75        // java/util/zip/Inflater.\"<init>\":(Z)V\n-    #8 = Fieldref           #23.#76       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n-    #9 = Class              #77           // java/util/zip/InflaterInputStream\n-   #10 = Class              #78           // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#79       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #23.#80       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Methodref          #9.#81        // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #14 = Fieldref           #23.#82       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n-   #15 = Methodref          #83.#84       // java/io/InputStream.read:()I\n-   #16 = Methodref          #23.#85       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n-   #17 = Methodref          #83.#86       // java/io/InputStream.read:([BII)I\n-   #18 = Methodref          #87.#88       // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #19 = Methodref          #83.#89       // java/io/InputStream.available:()I\n-   #20 = Methodref          #83.#90       // java/io/InputStream.close:()V\n-   #21 = Methodref          #5.#91        // java/util/zip/Inflater.end:()V\n-   #22 = Methodref          #10.#92       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #23 = Class              #93           // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #24 = Class              #94           // org/apache/commons/compress/compressors/CompressorInputStream\n-   #25 = Class              #95           // org/apache/commons/compress/utils/InputStreamStatistics\n+    #1 = Class              #68           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+    #2 = Methodref          #1.#69        // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+    #3 = Methodref          #23.#70       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+    #4 = Methodref          #24.#69       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #5 = Class              #71           // java/util/zip/Inflater\n+    #6 = Methodref          #1.#72        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+    #7 = Methodref          #5.#73        // java/util/zip/Inflater.\"<init>\":(Z)V\n+    #8 = Fieldref           #23.#74       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n+    #9 = Class              #75           // java/util/zip/InflaterInputStream\n+   #10 = Class              #76           // org/apache/commons/compress/utils/CountingInputStream\n+   #11 = Methodref          #10.#77       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #12 = Fieldref           #23.#78       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #13 = Methodref          #9.#79        // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #14 = Fieldref           #23.#80       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n+   #15 = Methodref          #50.#81       // java/io/InputStream.read:()I\n+   #16 = Methodref          #23.#82       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n+   #17 = Methodref          #50.#83       // java/io/InputStream.read:([BII)I\n+   #18 = Methodref          #84.#85       // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #19 = Methodref          #50.#86       // java/io/InputStream.available:()I\n+   #20 = Methodref          #50.#87       // java/io/InputStream.close:()V\n+   #21 = Methodref          #5.#88        // java/util/zip/Inflater.end:()V\n+   #22 = Methodref          #10.#89       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #23 = Class              #90           // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+   #24 = Class              #91           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #25 = Class              #92           // org/apache/commons/compress/utils/InputStreamStatistics\n    #26 = Utf8               MAGIC_1\n    #27 = Utf8               I\n    #28 = Utf8               ConstantValue\n    #29 = Integer            120\n    #30 = Utf8               MAGIC_2a\n    #31 = Integer            1\n    #32 = Utf8               MAGIC_2b\n@@ -53,73 +53,70 @@\n    #43 = Utf8               Ljava/util/zip/Inflater;\n    #44 = Utf8               <init>\n    #45 = Utf8               (Ljava/io/InputStream;)V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n    #49 = Utf8               StackMapTable\n-   #50 = Class              #93           // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #51 = Class              #96           // java/io/InputStream\n-   #52 = Class              #70           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #53 = Utf8               read\n-   #54 = Utf8               ()I\n-   #55 = Utf8               Exceptions\n-   #56 = Class              #97           // java/io/IOException\n-   #57 = Utf8               ([BII)I\n-   #58 = Utf8               skip\n-   #59 = Utf8               (J)J\n-   #60 = Utf8               available\n-   #61 = Utf8               close\n-   #62 = Utf8               ()V\n-   #63 = Class              #98           // java/lang/Throwable\n-   #64 = Utf8               getCompressedCount\n-   #65 = Utf8               ()J\n-   #66 = Utf8               matches\n-   #67 = Utf8               ([BI)Z\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               DeflateCompressorInputStream.java\n-   #70 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #71 = NameAndType        #44:#62       // \"<init>\":()V\n-   #72 = NameAndType        #44:#48       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-   #73 = Utf8               java/util/zip/Inflater\n-   #74 = NameAndType        #99:#100      // withZlibHeader:()Z\n-   #75 = NameAndType        #44:#101      // \"<init>\":(Z)V\n-   #76 = NameAndType        #42:#43       // inflater:Ljava/util/zip/Inflater;\n-   #77 = Utf8               java/util/zip/InflaterInputStream\n-   #78 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #79 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n-   #80 = NameAndType        #38:#39       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #81 = NameAndType        #44:#102      // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #82 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n-   #83 = Class              #96           // java/io/InputStream\n-   #84 = NameAndType        #53:#54       // read:()I\n-   #85 = NameAndType        #103:#104     // count:(I)V\n-   #86 = NameAndType        #53:#57       // read:([BII)I\n-   #87 = Class              #105          // org/apache/commons/compress/utils/IOUtils\n-   #88 = NameAndType        #58:#106      // skip:(Ljava/io/InputStream;J)J\n-   #89 = NameAndType        #60:#54       // available:()I\n-   #90 = NameAndType        #61:#62       // close:()V\n-   #91 = NameAndType        #107:#62      // end:()V\n-   #92 = NameAndType        #108:#65      // getBytesRead:()J\n-   #93 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #94 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-   #95 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-   #96 = Utf8               java/io/InputStream\n-   #97 = Utf8               java/io/IOException\n-   #98 = Utf8               java/lang/Throwable\n-   #99 = Utf8               withZlibHeader\n-  #100 = Utf8               ()Z\n-  #101 = Utf8               (Z)V\n-  #102 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-  #103 = Utf8               count\n-  #104 = Utf8               (I)V\n-  #105 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #106 = Utf8               (Ljava/io/InputStream;J)J\n-  #107 = Utf8               end\n-  #108 = Utf8               getBytesRead\n+   #50 = Class              #93           // java/io/InputStream\n+   #51 = Utf8               read\n+   #52 = Utf8               ()I\n+   #53 = Utf8               Exceptions\n+   #54 = Class              #94           // java/io/IOException\n+   #55 = Utf8               ([BII)I\n+   #56 = Utf8               skip\n+   #57 = Utf8               (J)J\n+   #58 = Utf8               available\n+   #59 = Utf8               close\n+   #60 = Utf8               ()V\n+   #61 = Class              #95           // java/lang/Throwable\n+   #62 = Utf8               getCompressedCount\n+   #63 = Utf8               ()J\n+   #64 = Utf8               matches\n+   #65 = Utf8               ([BI)Z\n+   #66 = Utf8               SourceFile\n+   #67 = Utf8               DeflateCompressorInputStream.java\n+   #68 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #69 = NameAndType        #44:#60       // \"<init>\":()V\n+   #70 = NameAndType        #44:#48       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+   #71 = Utf8               java/util/zip/Inflater\n+   #72 = NameAndType        #96:#97       // withZlibHeader:()Z\n+   #73 = NameAndType        #44:#98       // \"<init>\":(Z)V\n+   #74 = NameAndType        #42:#43       // inflater:Ljava/util/zip/Inflater;\n+   #75 = Utf8               java/util/zip/InflaterInputStream\n+   #76 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #77 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n+   #78 = NameAndType        #38:#39       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #79 = NameAndType        #44:#99       // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #80 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n+   #81 = NameAndType        #51:#52       // read:()I\n+   #82 = NameAndType        #100:#101     // count:(I)V\n+   #83 = NameAndType        #51:#55       // read:([BII)I\n+   #84 = Class              #102          // org/apache/commons/compress/utils/IOUtils\n+   #85 = NameAndType        #56:#103      // skip:(Ljava/io/InputStream;J)J\n+   #86 = NameAndType        #58:#52       // available:()I\n+   #87 = NameAndType        #59:#60       // close:()V\n+   #88 = NameAndType        #104:#60      // end:()V\n+   #89 = NameAndType        #105:#63      // getBytesRead:()J\n+   #90 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+   #91 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #92 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+   #93 = Utf8               java/io/InputStream\n+   #94 = Utf8               java/io/IOException\n+   #95 = Utf8               java/lang/Throwable\n+   #96 = Utf8               withZlibHeader\n+   #97 = Utf8               ()Z\n+   #98 = Utf8               (Z)V\n+   #99 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+  #100 = Utf8               count\n+  #101 = Utf8               (I)V\n+  #102 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #103 = Utf8               (Ljava/io/InputStream;J)J\n+  #104 = Utf8               end\n+  #105 = Utf8               getBytesRead\n {\n   private static final int MAGIC_1 = 120;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 120\n \n   private static final int MAGIC_2a = 1;\n"}]}
