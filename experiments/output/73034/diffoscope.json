{"diffoscope-json-version": 1, "source1": "first/ScatterZipOutputStream$CompressedEntry.class", "source2": "second/ScatterZipOutputStream$CompressedEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,72 +1,72 @@\n-  SHA-256 checksum fb64a7e81fb8013c3dd1431677f51251fd907aec5b717d8fe7943c6ecf076446\n+  SHA-256 checksum 7d34ac12bd234d50efc5bf3a826d79b7f262d64c1f6290c8d19141f102b20bbc\n   Compiled from \"ScatterZipOutputStream.java\"\n class org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 2, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-   #8 = Class              #10            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #9 = NameAndType        #11:#12        // zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #10 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-  #11 = Utf8               zipArchiveEntryRequest\n-  #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #13 = Fieldref           #8.#14         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.crc:J\n-  #14 = NameAndType        #15:#16        // crc:J\n-  #15 = Utf8               crc\n-  #16 = Utf8               J\n-  #17 = Fieldref           #8.#18         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-  #18 = NameAndType        #19:#16        // compressedSize:J\n-  #19 = Utf8               compressedSize\n-  #20 = Fieldref           #8.#21         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.size:J\n-  #21 = NameAndType        #22:#16        // size:J\n-  #22 = Utf8               size\n-  #23 = Methodref          #24.#25        // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #24 = Class              #26            // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #25 = NameAndType        #27:#28        // getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #26 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #27 = Utf8               getZipArchiveEntry\n-  #28 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #29 = Methodref          #30.#31        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V\n-  #30 = Class              #32            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #31 = NameAndType        #33:#34        // setCompressedSize:(J)V\n-  #32 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #33 = Utf8               setCompressedSize\n-  #34 = Utf8               (J)V\n-  #35 = Methodref          #30.#36        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n-  #36 = NameAndType        #37:#34        // setSize:(J)V\n-  #37 = Utf8               setSize\n-  #38 = Methodref          #30.#39        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V\n-  #39 = NameAndType        #40:#34        // setCrc:(J)V\n-  #40 = Utf8               setCrc\n-  #41 = Methodref          #24.#42        // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n-  #42 = NameAndType        #43:#44        // getMethod:()I\n-  #43 = Utf8               getMethod\n-  #44 = Utf8               ()I\n-  #45 = Methodref          #30.#46        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n-  #46 = NameAndType        #47:#48        // setMethod:(I)V\n-  #47 = Utf8               setMethod\n-  #48 = Utf8               (I)V\n-  #49 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n-  #50 = Utf8               Code\n-  #51 = Utf8               LineNumberTable\n-  #52 = Utf8               LocalVariableTable\n-  #53 = Utf8               this\n-  #54 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n-  #55 = Utf8               transferToArchiveEntry\n+   #5 = Utf8               zipArchiveEntryRequest\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+   #7 = Utf8               crc\n+   #8 = Utf8               J\n+   #9 = Utf8               compressedSize\n+  #10 = Utf8               size\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n+  #13 = Utf8               Code\n+  #14 = Methodref          #3.#15         // java/lang/Object.\"<init>\":()V\n+  #15 = NameAndType        #11:#16        // \"<init>\":()V\n+  #16 = Utf8               ()V\n+  #17 = Fieldref           #1.#18         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #18 = NameAndType        #5:#6          // zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.crc:J\n+  #20 = NameAndType        #7:#8          // crc:J\n+  #21 = Fieldref           #1.#22         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+  #22 = NameAndType        #9:#8          // compressedSize:J\n+  #23 = Fieldref           #1.#24         // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.size:J\n+  #24 = NameAndType        #10:#8         // size:J\n+  #25 = Utf8               LineNumberTable\n+  #26 = Utf8               LocalVariableTable\n+  #27 = Utf8               this\n+  #28 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n+  #29 = Utf8               transferToArchiveEntry\n+  #30 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #31 = Methodref          #32.#34        // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #32 = Class              #33            // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #33 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #34 = NameAndType        #35:#30        // getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #35 = Utf8               getZipArchiveEntry\n+  #36 = Methodref          #37.#39        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V\n+  #37 = Class              #38            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #38 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #39 = NameAndType        #40:#41        // setCompressedSize:(J)V\n+  #40 = Utf8               setCompressedSize\n+  #41 = Utf8               (J)V\n+  #42 = Methodref          #37.#43        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+  #43 = NameAndType        #44:#41        // setSize:(J)V\n+  #44 = Utf8               setSize\n+  #45 = Methodref          #37.#46        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V\n+  #46 = NameAndType        #47:#41        // setCrc:(J)V\n+  #47 = Utf8               setCrc\n+  #48 = Methodref          #32.#49        // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n+  #49 = NameAndType        #50:#51        // getMethod:()I\n+  #50 = Utf8               getMethod\n+  #51 = Utf8               ()I\n+  #52 = Methodref          #37.#53        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+  #53 = NameAndType        #54:#55        // setMethod:(I)V\n+  #54 = Utf8               setMethod\n+  #55 = Utf8               (I)V\n   #56 = Utf8               entry\n   #57 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #58 = Utf8               SourceFile\n   #59 = Utf8               ScatterZipOutputStream.java\n   #60 = Utf8               InnerClasses\n   #61 = Class              #62            // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n   #62 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n@@ -90,27 +90,27 @@\n \n   public org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest, long, long, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=8, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #7                  // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+         6: putfield      #17                 // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n          9: aload_0\n         10: lload_2\n-        11: putfield      #13                 // Field crc:J\n+        11: putfield      #19                 // Field crc:J\n         14: aload_0\n         15: lload         4\n-        17: putfield      #17                 // Field compressedSize:J\n+        17: putfield      #21                 // Field compressedSize:J\n         20: aload_0\n         21: lload         6\n-        23: putfield      #20                 // Field size:J\n+        23: putfield      #23                 // Field size:J\n         26: return\n       LineNumberTable:\n         line 60: 0\n         line 61: 4\n         line 62: 9\n         line 63: 14\n         line 64: 20\n@@ -125,34 +125,34 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry transferToArchiveEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-         4: invokevirtual #23                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #17                 // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+         4: invokevirtual #31                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getZipArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: getfield      #17                 // Field compressedSize:J\n-        13: invokevirtual #29                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V\n+        10: getfield      #21                 // Field compressedSize:J\n+        13: invokevirtual #36                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCompressedSize:(J)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #20                 // Field size:J\n-        21: invokevirtual #35                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+        18: getfield      #23                 // Field size:J\n+        21: invokevirtual #42                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n         24: aload_1\n         25: aload_0\n-        26: getfield      #13                 // Field crc:J\n-        29: invokevirtual #38                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V\n+        26: getfield      #19                 // Field crc:J\n+        29: invokevirtual #45                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setCrc:(J)V\n         32: aload_1\n         33: aload_0\n-        34: getfield      #7                  // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-        37: invokevirtual #41                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n-        40: invokevirtual #45                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+        34: getfield      #17                 // Field zipArchiveEntryRequest:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+        37: invokevirtual #48                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n+        40: invokevirtual #52                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n         43: aload_1\n         44: areturn\n       LineNumberTable:\n         line 74: 0\n         line 75: 8\n         line 76: 16\n         line 77: 24\n@@ -161,8 +161,8 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      45     0  this   Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;\n             8      37     1 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n }\n SourceFile: \"ScatterZipOutputStream.java\"\n InnerClasses:\n-  private static #63= #8 of #61;          // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  private static #63= #1 of #61;          // CompressedEntry=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n"}]}
