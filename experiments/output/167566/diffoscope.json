{"diffoscope-json-version": 1, "source1": "first/NotFileFilter.class", "source2": "second/NotFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum b753f2beaf73fb91f2cb790bc0bf9301411485a6bec7c1a7b712af0d193c324c\n+  SHA-256 checksum ede5f9288ef87d0cc1d6e081c58ac07ae6804aabc0209cef9b72af0da4d1413e\n   Compiled from \"NotFileFilter.java\"\n public class org.apache.commons.io.filefilter.NotFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #18                         // org/apache/commons/io/filefilter/NotFileFilter\n   super_class: #19                        // org/apache/commons/io/filefilter/AbstractFileFilter\n@@ -12,26 +12,26 @@\n    #2 = String             #26            // filter\n    #3 = Methodref          #56.#57        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n    #4 = Fieldref           #18.#58        // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n    #5 = InterfaceMethodref #59.#60        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n    #6 = InterfaceMethodref #59.#61        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n    #7 = InterfaceMethodref #59.#62        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #8 = Methodref          #18.#63        // org/apache/commons/io/filefilter/NotFileFilter.not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n-   #9 = Fieldref           #64.#65        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #10 = Fieldref           #64.#66        // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #11 = Class              #67            // java/lang/StringBuilder\n+   #9 = Fieldref           #50.#64        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #10 = Fieldref           #50.#65        // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #11 = Class              #66            // java/lang/StringBuilder\n   #12 = Methodref          #11.#55        // java/lang/StringBuilder.\"<init>\":()V\n-  #13 = String             #68            // NOT (\n-  #14 = Methodref          #11.#69        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #15 = Methodref          #70.#71        // java/lang/Object.toString:()Ljava/lang/String;\n-  #16 = String             #72            // )\n-  #17 = Methodref          #11.#71        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #18 = Class              #73            // org/apache/commons/io/filefilter/NotFileFilter\n-  #19 = Class              #74            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #20 = Class              #75            // java/io/Serializable\n+  #13 = String             #67            // NOT (\n+  #14 = Methodref          #11.#68        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #15 = Methodref          #69.#70        // java/lang/Object.toString:()Ljava/lang/String;\n+  #16 = String             #71            // )\n+  #17 = Methodref          #11.#70        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #18 = Class              #72            // org/apache/commons/io/filefilter/NotFileFilter\n+  #19 = Class              #73            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #20 = Class              #74            // java/io/Serializable\n   #21 = Utf8               serialVersionUID\n   #22 = Utf8               J\n   #23 = Utf8               ConstantValue\n   #24 = Long               6131563330944994230l\n   #26 = Utf8               filter\n   #27 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n   #28 = Utf8               <init>\n@@ -52,51 +52,50 @@\n   #43 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #44 = Utf8               Ljava/nio/file/Path;\n   #45 = Utf8               attributes\n   #46 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n   #47 = Utf8               not\n   #48 = Utf8               (Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n   #49 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #50 = Class              #76            // java/nio/file/FileVisitResult\n+  #50 = Class              #75            // java/nio/file/FileVisitResult\n   #51 = Utf8               toString\n   #52 = Utf8               ()Ljava/lang/String;\n   #53 = Utf8               SourceFile\n   #54 = Utf8               NotFileFilter.java\n-  #55 = NameAndType        #28:#77        // \"<init>\":()V\n-  #56 = Class              #78            // java/util/Objects\n-  #57 = NameAndType        #79:#80        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #55 = NameAndType        #28:#76        // \"<init>\":()V\n+  #56 = Class              #77            // java/util/Objects\n+  #57 = NameAndType        #78:#79        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n   #58 = NameAndType        #26:#27        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #59 = Class              #81            // org/apache/commons/io/filefilter/IOFileFilter\n+  #59 = Class              #80            // org/apache/commons/io/filefilter/IOFileFilter\n   #60 = NameAndType        #35:#36        // accept:(Ljava/io/File;)Z\n   #61 = NameAndType        #35:#40        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n   #62 = NameAndType        #35:#43        // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #63 = NameAndType        #47:#48        // not:(Ljava/nio/file/FileVisitResult;)Ljava/nio/file/FileVisitResult;\n-  #64 = Class              #76            // java/nio/file/FileVisitResult\n-  #65 = NameAndType        #82:#49        // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #66 = NameAndType        #83:#49        // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #67 = Utf8               java/lang/StringBuilder\n-  #68 = Utf8               NOT (\n-  #69 = NameAndType        #84:#85        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #70 = Class              #86            // java/lang/Object\n-  #71 = NameAndType        #51:#52        // toString:()Ljava/lang/String;\n-  #72 = Utf8               )\n-  #73 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #74 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #75 = Utf8               java/io/Serializable\n-  #76 = Utf8               java/nio/file/FileVisitResult\n-  #77 = Utf8               ()V\n-  #78 = Utf8               java/util/Objects\n-  #79 = Utf8               requireNonNull\n-  #80 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #81 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #82 = Utf8               CONTINUE\n-  #83 = Utf8               TERMINATE\n-  #84 = Utf8               append\n-  #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #86 = Utf8               java/lang/Object\n+  #64 = NameAndType        #81:#49        // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #65 = NameAndType        #82:#49        // TERMINATE:Ljava/nio/file/FileVisitResult;\n+  #66 = Utf8               java/lang/StringBuilder\n+  #67 = Utf8               NOT (\n+  #68 = NameAndType        #83:#84        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #69 = Class              #85            // java/lang/Object\n+  #70 = NameAndType        #51:#52        // toString:()Ljava/lang/String;\n+  #71 = Utf8               )\n+  #72 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #73 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #74 = Utf8               java/io/Serializable\n+  #75 = Utf8               java/nio/file/FileVisitResult\n+  #76 = Utf8               ()V\n+  #77 = Utf8               java/util/Objects\n+  #78 = Utf8               requireNonNull\n+  #79 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #80 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #81 = Utf8               CONTINUE\n+  #82 = Utf8               TERMINATE\n+  #83 = Utf8               append\n+  #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #85 = Utf8               java/lang/Object\n {\n   private static final long serialVersionUID = 6131563330944994230l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 6131563330944994230l\n \n   private final org.apache.commons.io.filefilter.IOFileFilter filter;\n"}]}
