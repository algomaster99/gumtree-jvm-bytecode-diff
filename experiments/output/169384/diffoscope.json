{"diffoscope-json-version": 1, "source1": "first/Range.class", "source2": "second/Range.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum 9bf6fe756bec92982118723caece6a778b1322403d6adab74c2aea6da33b8b8f\n+  SHA-256 checksum 12fd1ef82142ac31c8f9e658cdcfeffef4f8e615d9579133ac68c06c164ba25f\n   Compiled from \"Range.java\"\n public final class org.apache.commons.lang3.Range<T extends java.lang.Object> extends java.lang.Object implements java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #2                          // org/apache/commons/lang3/Range\n   super_class: #20                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 24, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#133       // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-    #2 = Class              #134          // org/apache/commons/lang3/Range\n-    #3 = Methodref          #2.#135       // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-    #4 = Methodref          #20.#136      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #137          // java/lang/IllegalArgumentException\n-    #6 = Class              #138          // java/lang/StringBuilder\n-    #7 = Methodref          #6.#136       // java/lang/StringBuilder.\"<init>\":()V\n-    #8 = String             #139          // Elements in a range must not be null: element1=\n-    #9 = Methodref          #6.#140       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #6.#141       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #11 = String             #142          // , element2=\n-   #12 = Methodref          #6.#143       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #13 = Methodref          #5.#144       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Fieldref           #39.#145      // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-   #15 = Fieldref           #2.#146       // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n-   #16 = InterfaceMethodref #147.#148     // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-   #17 = Fieldref           #2.#149       // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n-   #18 = Fieldref           #2.#150       // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n-   #19 = String             #151          // Element is null\n-   #20 = Class              #152          // java/lang/Object\n-   #21 = Methodref          #153.#154     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Methodref          #2.#155       // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n-   #23 = Methodref          #2.#156       // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n-   #24 = Methodref          #2.#157       // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n-   #25 = Methodref          #2.#158       // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-   #26 = String             #159          // Cannot calculate intersection with non-overlapping range %s\n-   #27 = Methodref          #160.#161     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #28 = Methodref          #2.#162       // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n-   #29 = Methodref          #2.#163       // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n-   #30 = Methodref          #20.#164      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #31 = Methodref          #20.#162      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #32 = Fieldref           #2.#165       // org/apache/commons/lang3/Range.hashCode:I\n-   #33 = Methodref          #20.#166      // java/lang/Object.hashCode:()I\n-   #34 = Fieldref           #2.#167       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n-   #35 = String             #168          // [\n-   #36 = String             #169          // ..\n-   #37 = String             #170          // ]\n-   #38 = Class              #171          // java/io/Serializable\n-   #39 = Class              #172          // org/apache/commons/lang3/Range$ComparableComparator\n+    #1 = Methodref          #2.#131       // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+    #2 = Class              #132          // org/apache/commons/lang3/Range\n+    #3 = Methodref          #2.#133       // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+    #4 = Methodref          #20.#134      // java/lang/Object.\"<init>\":()V\n+    #5 = Class              #135          // java/lang/IllegalArgumentException\n+    #6 = Class              #136          // java/lang/StringBuilder\n+    #7 = Methodref          #6.#134       // java/lang/StringBuilder.\"<init>\":()V\n+    #8 = String             #137          // Elements in a range must not be null: element1=\n+    #9 = Methodref          #6.#138       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #10 = Methodref          #6.#139       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #11 = String             #140          // , element2=\n+   #12 = Methodref          #6.#141       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #13 = Methodref          #5.#142       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Fieldref           #39.#143      // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+   #15 = Fieldref           #2.#144       // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n+   #16 = InterfaceMethodref #86.#145      // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+   #17 = Fieldref           #2.#146       // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n+   #18 = Fieldref           #2.#147       // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n+   #19 = String             #148          // Element is null\n+   #20 = Class              #149          // java/lang/Object\n+   #21 = Methodref          #150.#151     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #22 = Methodref          #2.#152       // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n+   #23 = Methodref          #2.#153       // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n+   #24 = Methodref          #2.#154       // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n+   #25 = Methodref          #2.#155       // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+   #26 = String             #156          // Cannot calculate intersection with non-overlapping range %s\n+   #27 = Methodref          #157.#158     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #28 = Methodref          #2.#159       // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n+   #29 = Methodref          #2.#160       // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n+   #30 = Methodref          #20.#161      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #31 = Methodref          #20.#159      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #32 = Fieldref           #2.#162       // org/apache/commons/lang3/Range.hashCode:I\n+   #33 = Methodref          #20.#163      // java/lang/Object.hashCode:()I\n+   #34 = Fieldref           #2.#164       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n+   #35 = String             #165          // [\n+   #36 = String             #166          // ..\n+   #37 = String             #167          // ]\n+   #38 = Class              #168          // java/io/Serializable\n+   #39 = Class              #169          // org/apache/commons/lang3/Range$ComparableComparator\n    #40 = Utf8               ComparableComparator\n    #41 = Utf8               InnerClasses\n    #42 = Utf8               serialVersionUID\n    #43 = Utf8               J\n    #44 = Utf8               ConstantValue\n    #45 = Long               1l\n    #47 = Utf8               comparator\n@@ -88,118 +88,115 @@\n    #79 = Utf8               this\n    #80 = Utf8               Lorg/apache/commons/lang3/Range;\n    #81 = Utf8               element1\n    #82 = Utf8               element2\n    #83 = Utf8               comp\n    #84 = Utf8               Lorg/apache/commons/lang3/Range<TT;>;\n    #85 = Utf8               StackMapTable\n-   #86 = Class              #134          // org/apache/commons/lang3/Range\n-   #87 = Class              #152          // java/lang/Object\n-   #88 = Class              #173          // java/util/Comparator\n-   #89 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n-   #90 = Utf8               getMinimum\n-   #91 = Utf8               ()Ljava/lang/Object;\n-   #92 = Utf8               ()TT;\n-   #93 = Utf8               getMaximum\n-   #94 = Utf8               getComparator\n-   #95 = Utf8               ()Ljava/util/Comparator;\n-   #96 = Utf8               ()Ljava/util/Comparator<TT;>;\n-   #97 = Utf8               isNaturalOrdering\n-   #98 = Utf8               ()Z\n-   #99 = Utf8               contains\n-  #100 = Utf8               (Ljava/lang/Object;)Z\n-  #101 = Utf8               (TT;)Z\n-  #102 = Utf8               isAfter\n-  #103 = Utf8               isStartedBy\n-  #104 = Utf8               isEndedBy\n-  #105 = Utf8               isBefore\n-  #106 = Utf8               elementCompareTo\n-  #107 = Utf8               (Ljava/lang/Object;)I\n-  #108 = Utf8               (TT;)I\n-  #109 = Utf8               containsRange\n-  #110 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n-  #111 = Utf8               otherRange\n-  #112 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n-  #113 = Utf8               isAfterRange\n-  #114 = Utf8               isOverlappedBy\n-  #115 = Utf8               isBeforeRange\n-  #116 = Utf8               intersectionWith\n-  #117 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n-  #118 = Utf8               other\n-  #119 = Utf8               min\n-  #120 = Utf8               max\n-  #121 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n-  #122 = Utf8               equals\n-  #123 = Utf8               range\n-  #124 = Utf8               obj\n-  #125 = Utf8               ()I\n-  #126 = Utf8               result\n-  #127 = Utf8               ()Ljava/lang/String;\n-  #128 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #129 = Utf8               format\n-  #130 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n-  #131 = Utf8               SourceFile\n-  #132 = Utf8               Range.java\n-  #133 = NameAndType        #70:#75       // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-  #134 = Utf8               org/apache/commons/lang3/Range\n-  #135 = NameAndType        #77:#78       // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-  #136 = NameAndType        #77:#174      // \"<init>\":()V\n-  #137 = Utf8               java/lang/IllegalArgumentException\n-  #138 = Utf8               java/lang/StringBuilder\n-  #139 = Utf8               Elements in a range must not be null: element1=\n-  #140 = NameAndType        #175:#176     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #141 = NameAndType        #175:#177     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #142 = Utf8               , element2=\n-  #143 = NameAndType        #57:#127      // toString:()Ljava/lang/String;\n-  #144 = NameAndType        #77:#178      // \"<init>\":(Ljava/lang/String;)V\n-  #145 = NameAndType        #179:#180     // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #146 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n-  #147 = Class              #173          // java/util/Comparator\n-  #148 = NameAndType        #181:#182     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-  #149 = NameAndType        #51:#52       // minimum:Ljava/lang/Object;\n-  #150 = NameAndType        #54:#52       // maximum:Ljava/lang/Object;\n-  #151 = Utf8               Element is null\n-  #152 = Utf8               java/lang/Object\n-  #153 = Class              #183          // org/apache/commons/lang3/Validate\n-  #154 = NameAndType        #184:#185     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #155 = NameAndType        #102:#100     // isAfter:(Ljava/lang/Object;)Z\n-  #156 = NameAndType        #105:#100     // isBefore:(Ljava/lang/Object;)Z\n-  #157 = NameAndType        #99:#100      // contains:(Ljava/lang/Object;)Z\n-  #158 = NameAndType        #114:#110     // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-  #159 = Utf8               Cannot calculate intersection with non-overlapping range %s\n-  #160 = Class              #186          // java/lang/String\n-  #161 = NameAndType        #129:#187     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #162 = NameAndType        #122:#100     // equals:(Ljava/lang/Object;)Z\n-  #163 = NameAndType        #94:#95       // getComparator:()Ljava/util/Comparator;\n-  #164 = NameAndType        #188:#189     // getClass:()Ljava/lang/Class;\n-  #165 = NameAndType        #55:#56       // hashCode:I\n-  #166 = NameAndType        #55:#125      // hashCode:()I\n-  #167 = NameAndType        #57:#58       // toString:Ljava/lang/String;\n-  #168 = Utf8               [\n-  #169 = Utf8               ..\n-  #170 = Utf8               ]\n-  #171 = Utf8               java/io/Serializable\n-  #172 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n-  #173 = Utf8               java/util/Comparator\n-  #174 = Utf8               ()V\n-  #175 = Utf8               append\n-  #176 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #177 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #178 = Utf8               (Ljava/lang/String;)V\n-  #179 = Utf8               INSTANCE\n-  #180 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #181 = Utf8               compare\n-  #182 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #183 = Utf8               org/apache/commons/lang3/Validate\n-  #184 = Utf8               notNull\n-  #185 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #186 = Utf8               java/lang/String\n-  #187 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #188 = Utf8               getClass\n-  #189 = Utf8               ()Ljava/lang/Class;\n+   #86 = Class              #170          // java/util/Comparator\n+   #87 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n+   #88 = Utf8               getMinimum\n+   #89 = Utf8               ()Ljava/lang/Object;\n+   #90 = Utf8               ()TT;\n+   #91 = Utf8               getMaximum\n+   #92 = Utf8               getComparator\n+   #93 = Utf8               ()Ljava/util/Comparator;\n+   #94 = Utf8               ()Ljava/util/Comparator<TT;>;\n+   #95 = Utf8               isNaturalOrdering\n+   #96 = Utf8               ()Z\n+   #97 = Utf8               contains\n+   #98 = Utf8               (Ljava/lang/Object;)Z\n+   #99 = Utf8               (TT;)Z\n+  #100 = Utf8               isAfter\n+  #101 = Utf8               isStartedBy\n+  #102 = Utf8               isEndedBy\n+  #103 = Utf8               isBefore\n+  #104 = Utf8               elementCompareTo\n+  #105 = Utf8               (Ljava/lang/Object;)I\n+  #106 = Utf8               (TT;)I\n+  #107 = Utf8               containsRange\n+  #108 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n+  #109 = Utf8               otherRange\n+  #110 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+  #111 = Utf8               isAfterRange\n+  #112 = Utf8               isOverlappedBy\n+  #113 = Utf8               isBeforeRange\n+  #114 = Utf8               intersectionWith\n+  #115 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n+  #116 = Utf8               other\n+  #117 = Utf8               min\n+  #118 = Utf8               max\n+  #119 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #120 = Utf8               equals\n+  #121 = Utf8               range\n+  #122 = Utf8               obj\n+  #123 = Utf8               ()I\n+  #124 = Utf8               result\n+  #125 = Utf8               ()Ljava/lang/String;\n+  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #127 = Utf8               format\n+  #128 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+  #129 = Utf8               SourceFile\n+  #130 = Utf8               Range.java\n+  #131 = NameAndType        #70:#75       // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+  #132 = Utf8               org/apache/commons/lang3/Range\n+  #133 = NameAndType        #77:#78       // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+  #134 = NameAndType        #77:#171      // \"<init>\":()V\n+  #135 = Utf8               java/lang/IllegalArgumentException\n+  #136 = Utf8               java/lang/StringBuilder\n+  #137 = Utf8               Elements in a range must not be null: element1=\n+  #138 = NameAndType        #172:#173     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #139 = NameAndType        #172:#174     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #140 = Utf8               , element2=\n+  #141 = NameAndType        #57:#125      // toString:()Ljava/lang/String;\n+  #142 = NameAndType        #77:#175      // \"<init>\":(Ljava/lang/String;)V\n+  #143 = NameAndType        #176:#177     // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+  #144 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n+  #145 = NameAndType        #178:#179     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+  #146 = NameAndType        #51:#52       // minimum:Ljava/lang/Object;\n+  #147 = NameAndType        #54:#52       // maximum:Ljava/lang/Object;\n+  #148 = Utf8               Element is null\n+  #149 = Utf8               java/lang/Object\n+  #150 = Class              #180          // org/apache/commons/lang3/Validate\n+  #151 = NameAndType        #181:#182     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #152 = NameAndType        #100:#98      // isAfter:(Ljava/lang/Object;)Z\n+  #153 = NameAndType        #103:#98      // isBefore:(Ljava/lang/Object;)Z\n+  #154 = NameAndType        #97:#98       // contains:(Ljava/lang/Object;)Z\n+  #155 = NameAndType        #112:#108     // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+  #156 = Utf8               Cannot calculate intersection with non-overlapping range %s\n+  #157 = Class              #183          // java/lang/String\n+  #158 = NameAndType        #127:#184     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #159 = NameAndType        #120:#98      // equals:(Ljava/lang/Object;)Z\n+  #160 = NameAndType        #92:#93       // getComparator:()Ljava/util/Comparator;\n+  #161 = NameAndType        #185:#186     // getClass:()Ljava/lang/Class;\n+  #162 = NameAndType        #55:#56       // hashCode:I\n+  #163 = NameAndType        #55:#123      // hashCode:()I\n+  #164 = NameAndType        #57:#58       // toString:Ljava/lang/String;\n+  #165 = Utf8               [\n+  #166 = Utf8               ..\n+  #167 = Utf8               ]\n+  #168 = Utf8               java/io/Serializable\n+  #169 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n+  #170 = Utf8               java/util/Comparator\n+  #171 = Utf8               ()V\n+  #172 = Utf8               append\n+  #173 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #174 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #175 = Utf8               (Ljava/lang/String;)V\n+  #176 = Utf8               INSTANCE\n+  #177 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n+  #178 = Utf8               compare\n+  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n+  #180 = Utf8               org/apache/commons/lang3/Validate\n+  #181 = Utf8               notNull\n+  #182 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #183 = Utf8               java/lang/String\n+  #184 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #185 = Utf8               getClass\n+  #186 = Utf8               ()Ljava/lang/Class;\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.Comparator<T> comparator;\n@@ -403,15 +400,15 @@\n           locals = [ class org/apache/commons/lang3/Range, class java/lang/Object, class java/lang/Object, class java/util/Comparator ]\n           stack = []\n         frame_type = 35 /* same */\n         frame_type = 13 /* same */\n         frame_type = 4 /* same */\n         frame_type = 27 /* same */\n         frame_type = 9 /* same */\n-    Signature: #89                          // (TT;TT;Ljava/util/Comparator<TT;>;)V\n+    Signature: #87                          // (TT;TT;Ljava/util/Comparator<TT;>;)V\n \n   public T getMinimum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -421,15 +418,15 @@\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #92                          // ()TT;\n+    Signature: #90                          // ()TT;\n \n   public T getMaximum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -439,15 +436,15 @@\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #92                          // ()TT;\n+    Signature: #90                          // ()TT;\n \n   public java.util.Comparator<T> getComparator();\n     descriptor: ()Ljava/util/Comparator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -457,15 +454,15 @@\n         line 194: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n-    Signature: #96                          // ()Ljava/util/Comparator<TT;>;\n+    Signature: #94                          // ()Ljava/util/Comparator<TT;>;\n \n   public boolean isNaturalOrdering();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -531,15 +528,15 @@\n             0      48     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      48     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 39 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #101                         // (TT;)Z\n+    Signature: #99                          // (TT;)Z\n \n   public boolean isAfter(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -570,15 +567,15 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #101                         // (TT;)Z\n+    Signature: #99                          // (TT;)Z\n \n   public boolean isStartedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -609,15 +606,15 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #101                         // (TT;)Z\n+    Signature: #99                          // (TT;)Z\n \n   public boolean isEndedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -648,15 +645,15 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #101                         // (TT;)Z\n+    Signature: #99                          // (TT;)Z\n \n   public boolean isBefore(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -687,15 +684,15 @@\n             0      29     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      29     1 element   TT;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #101                         // (TT;)Z\n+    Signature: #99                          // (TT;)Z\n \n   public int elementCompareTo(T);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -732,15 +729,15 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      33     1 element   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 21 /* same */\n         frame_type = 9 /* same */\n-    Signature: #108                         // (TT;)I\n+    Signature: #106                         // (TT;)I\n \n   public boolean containsRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -776,15 +773,15 @@\n             0      34     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      34     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 25 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #112                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isAfterRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -806,15 +803,15 @@\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #112                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isOverlappedBy(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -857,15 +854,15 @@\n             0      45     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 4\n         frame_type = 6 /* same */\n         frame_type = 32 /* same */\n         frame_type = 3 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #112                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isBeforeRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -887,15 +884,15 @@\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n             0      15     1 otherRange   Lorg/apache/commons/lang3/Range<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #112                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #110                         // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public org.apache.commons.lang3.Range<T> intersectionWith(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=2\n          0: aload_0\n@@ -981,15 +978,15 @@\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Object ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #121                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #119                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n@@ -1189,11 +1186,11 @@\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/lang3/Range;\n             0      30     1 format   Ljava/lang/String;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/lang3/Range<TT;>;\n }\n-Signature: #130                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+Signature: #128                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n SourceFile: \"Range.java\"\n InnerClasses:\n   private static final #40= #39 of #2;    // ComparableComparator=class org/apache/commons/lang3/Range$ComparableComparator of class org/apache/commons/lang3/Range\n"}]}
