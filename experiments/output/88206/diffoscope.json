{"diffoscope-json-version": 1, "source1": "first/ConcurrentUtils.class", "source2": "second/ConcurrentUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,170 +1,169 @@\n-  SHA-256 checksum 9f5a0d4ed77d6268161a97a92d4fccafd0601b8a346800d7d0befd5e5dbfb763\n+  SHA-256 checksum aab7519b77f81d3ff2782bbaee94bb118b50bafa414ae4b7fd64b815afb3b4d6\n   Compiled from \"ConcurrentUtils.java\"\n public class org.apache.commons.lang3.concurrent.ConcurrentUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+    #2 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n     #5 = Utf8               <init>\n     #6 = Utf8               ()V\n-    #7 = Methodref          #8.#9         // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-    #8 = Class              #10           // java/util/concurrent/ExecutionException\n-    #9 = NameAndType        #11:#12       // getCause:()Ljava/lang/Throwable;\n-   #10 = Utf8               java/util/concurrent/ExecutionException\n-   #11 = Utf8               getCause\n-   #12 = Utf8               ()Ljava/lang/Throwable;\n-   #13 = Methodref          #14.#15       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #14 = Class              #16           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #15 = NameAndType        #17:#18       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #16 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #17 = Utf8               throwCause\n-   #18 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n-   #19 = Class              #20           // org/apache/commons/lang3/concurrent/ConcurrentException\n-   #20 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-   #21 = Methodref          #8.#22        // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n-   #22 = NameAndType        #23:#24       // getMessage:()Ljava/lang/String;\n-   #23 = Utf8               getMessage\n-   #24 = Utf8               ()Ljava/lang/String;\n-   #25 = Methodref          #19.#26       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #26 = NameAndType        #5:#27        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #27 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #28 = Class              #29           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #29 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #30 = Methodref          #28.#26       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #31 = Methodref          #14.#32       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #32 = NameAndType        #33:#34       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #33 = Utf8               extractCause\n-   #34 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #35 = Methodref          #14.#36       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #36 = NameAndType        #37:#38       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #37 = Utf8               extractCauseUnchecked\n-   #38 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #39 = Class              #40           // java/lang/RuntimeException\n-   #40 = Utf8               java/lang/RuntimeException\n-   #41 = Class              #42           // java/lang/Error\n-   #42 = Utf8               java/lang/Error\n-   #43 = Class              #44           // java/lang/StringBuilder\n-   #44 = Utf8               java/lang/StringBuilder\n-   #45 = Methodref          #43.#3        // java/lang/StringBuilder.\"<init>\":()V\n-   #46 = String             #47           // Not a checked exception:\n-   #47 = Utf8               Not a checked exception:\n-   #48 = Methodref          #43.#49       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #49 = NameAndType        #50:#51       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = Utf8               append\n-   #51 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #52 = Methodref          #43.#53       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #53 = NameAndType        #50:#54       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #54 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #55 = Methodref          #43.#56       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #56 = NameAndType        #57:#24       // toString:()Ljava/lang/String;\n-   #57 = Utf8               toString\n-   #58 = Methodref          #59.#60       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #59 = Class              #61           // org/apache/commons/lang3/Validate\n-   #60 = NameAndType        #62:#63       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #61 = Utf8               org/apache/commons/lang3/Validate\n-   #62 = Utf8               isTrue\n-   #63 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #64 = InterfaceMethodref #65.#66       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-   #65 = Class              #67           // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #66 = NameAndType        #68:#69       // get:()Ljava/lang/Object;\n-   #67 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #68 = Utf8               get\n-   #69 = Utf8               ()Ljava/lang/Object;\n-   #70 = Methodref          #14.#71       // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #71 = NameAndType        #72:#73       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #72 = Utf8               initialize\n-   #73 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #74 = Methodref          #19.#9        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-   #75 = Methodref          #28.#76       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #76 = NameAndType        #5:#77        // \"<init>\":(Ljava/lang/Throwable;)V\n-   #77 = Utf8               (Ljava/lang/Throwable;)V\n-   #78 = InterfaceMethodref #79.#80       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #79 = Class              #81           // java/util/concurrent/ConcurrentMap\n-   #80 = NameAndType        #82:#83       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #81 = Utf8               java/util/concurrent/ConcurrentMap\n-   #82 = Utf8               putIfAbsent\n-   #83 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #84 = InterfaceMethodref #79.#85       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #85 = NameAndType        #68:#86       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #87 = Methodref          #14.#88       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #88 = NameAndType        #82:#89       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #90 = Methodref          #14.#91       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #91 = NameAndType        #92:#93       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #92 = Utf8               createIfAbsent\n-   #93 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #94 = Class              #95           // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #95 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #96 = Methodref          #94.#97       // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n-   #97 = NameAndType        #5:#98        // \"<init>\":(Ljava/lang/Object;)V\n-   #98 = Utf8               (Ljava/lang/Object;)V\n-   #99 = Utf8               Code\n-  #100 = Utf8               LineNumberTable\n-  #101 = Utf8               LocalVariableTable\n-  #102 = Utf8               this\n-  #103 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentUtils;\n-  #104 = Utf8               ex\n-  #105 = Utf8               Ljava/util/concurrent/ExecutionException;\n-  #106 = Utf8               StackMapTable\n-  #107 = Utf8               handleCause\n-  #108 = Utf8               cex\n-  #109 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-  #110 = Utf8               Exceptions\n-  #111 = Utf8               handleCauseUnchecked\n-  #112 = Utf8               crex\n-  #113 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-  #114 = Utf8               checkedException\n-  #115 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #116 = Utf8               Ljava/lang/Throwable;\n-  #117 = Utf8               initializer\n-  #118 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n-  #119 = Utf8               LocalVariableTypeTable\n-  #120 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-  #121 = Utf8               Signature\n-  #122 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n-  #123 = Utf8               initializeUnchecked\n-  #124 = Utf8               map\n-  #125 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n-  #126 = Utf8               key\n-  #127 = Utf8               Ljava/lang/Object;\n-  #128 = Utf8               value\n-  #129 = Utf8               result\n-  #130 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n-  #131 = Utf8               TK;\n-  #132 = Utf8               TV;\n-  #133 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n-  #134 = Utf8               init\n-  #135 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n-  #136 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n-  #137 = Utf8               createIfAbsentUnchecked\n-  #138 = Utf8               constantFuture\n-  #139 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n+    #7 = Utf8               Code\n+    #8 = Methodref          #3.#9         // java/lang/Object.\"<init>\":()V\n+    #9 = NameAndType        #5:#6         // \"<init>\":()V\n+   #10 = Utf8               LineNumberTable\n+   #11 = Utf8               LocalVariableTable\n+   #12 = Utf8               this\n+   #13 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentUtils;\n+   #14 = Utf8               extractCause\n+   #15 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #16 = Methodref          #17.#19       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+   #17 = Class              #18           // java/util/concurrent/ExecutionException\n+   #18 = Utf8               java/util/concurrent/ExecutionException\n+   #19 = NameAndType        #20:#21       // getCause:()Ljava/lang/Throwable;\n+   #20 = Utf8               getCause\n+   #21 = Utf8               ()Ljava/lang/Throwable;\n+   #22 = Methodref          #1.#23        // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #23 = NameAndType        #24:#25       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #24 = Utf8               throwCause\n+   #25 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n+   #26 = Class              #27           // org/apache/commons/lang3/concurrent/ConcurrentException\n+   #27 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #28 = Methodref          #17.#29       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+   #29 = NameAndType        #30:#31       // getMessage:()Ljava/lang/String;\n+   #30 = Utf8               getMessage\n+   #31 = Utf8               ()Ljava/lang/String;\n+   #32 = Methodref          #26.#33       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #33 = NameAndType        #5:#34        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #34 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #35 = Utf8               ex\n+   #36 = Utf8               Ljava/util/concurrent/ExecutionException;\n+   #37 = Utf8               StackMapTable\n+   #38 = Utf8               extractCauseUnchecked\n+   #39 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #40 = Class              #41           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+   #41 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+   #42 = Methodref          #40.#33       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #43 = Utf8               handleCause\n+   #44 = Utf8               Exceptions\n+   #45 = Methodref          #1.#46        // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #46 = NameAndType        #14:#15       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #47 = Utf8               cex\n+   #48 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #49 = Utf8               handleCauseUnchecked\n+   #50 = Methodref          #1.#51        // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #51 = NameAndType        #38:#39       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #52 = Utf8               crex\n+   #53 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #54 = Utf8               checkedException\n+   #55 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #56 = Class              #57           // java/lang/RuntimeException\n+   #57 = Utf8               java/lang/RuntimeException\n+   #58 = Class              #59           // java/lang/Error\n+   #59 = Utf8               java/lang/Error\n+   #60 = Class              #61           // java/lang/StringBuilder\n+   #61 = Utf8               java/lang/StringBuilder\n+   #62 = String             #63           // Not a checked exception:\n+   #63 = Utf8               Not a checked exception:\n+   #64 = Methodref          #60.#65       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #65 = NameAndType        #5:#66        // \"<init>\":(Ljava/lang/String;)V\n+   #66 = Utf8               (Ljava/lang/String;)V\n+   #67 = Methodref          #60.#68       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #68 = NameAndType        #69:#70       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #69 = Utf8               append\n+   #70 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #71 = Methodref          #60.#72       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #72 = NameAndType        #73:#31       // toString:()Ljava/lang/String;\n+   #73 = Utf8               toString\n+   #74 = Methodref          #75.#77       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #75 = Class              #76           // org/apache/commons/lang3/Validate\n+   #76 = Utf8               org/apache/commons/lang3/Validate\n+   #77 = NameAndType        #78:#79       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #78 = Utf8               isTrue\n+   #79 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #80 = Utf8               Ljava/lang/Throwable;\n+   #81 = Utf8               initialize\n+   #82 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #83 = Utf8               Signature\n+   #84 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+   #85 = InterfaceMethodref #86.#88       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+   #86 = Class              #87           // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #87 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #88 = NameAndType        #89:#90       // get:()Ljava/lang/Object;\n+   #89 = Utf8               get\n+   #90 = Utf8               ()Ljava/lang/Object;\n+   #91 = Utf8               initializer\n+   #92 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n+   #93 = Utf8               LocalVariableTypeTable\n+   #94 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+   #95 = Utf8               initializeUnchecked\n+   #96 = Methodref          #1.#97        // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #97 = NameAndType        #81:#82       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #98 = Methodref          #26.#19       // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+   #99 = Methodref          #40.#100      // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #100 = NameAndType        #5:#101       // \"<init>\":(Ljava/lang/Throwable;)V\n+  #101 = Utf8               (Ljava/lang/Throwable;)V\n+  #102 = Utf8               putIfAbsent\n+  #103 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #104 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+  #105 = InterfaceMethodref #106.#108     // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #106 = Class              #107          // java/util/concurrent/ConcurrentMap\n+  #107 = Utf8               java/util/concurrent/ConcurrentMap\n+  #108 = NameAndType        #102:#109     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #110 = Utf8               map\n+  #111 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n+  #112 = Utf8               key\n+  #113 = Utf8               Ljava/lang/Object;\n+  #114 = Utf8               value\n+  #115 = Utf8               result\n+  #116 = Utf8               Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n+  #117 = Utf8               TK;\n+  #118 = Utf8               TV;\n+  #119 = Utf8               createIfAbsent\n+  #120 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+  #121 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+  #122 = InterfaceMethodref #106.#123     // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #123 = NameAndType        #89:#124      // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #124 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #125 = Methodref          #1.#126       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #126 = NameAndType        #102:#103     // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #127 = Utf8               init\n+  #128 = Utf8               Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n+  #129 = Utf8               createIfAbsentUnchecked\n+  #130 = Methodref          #1.#131       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+  #131 = NameAndType        #119:#120     // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+  #132 = Utf8               constantFuture\n+  #133 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n+  #134 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+  #135 = Class              #136          // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+  #136 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+  #137 = Methodref          #135.#138     // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+  #138 = NameAndType        #5:#139       // \"<init>\":(Ljava/lang/Object;)V\n+  #139 = Utf8               (Ljava/lang/Object;)V\n   #140 = Utf8               TT;\n-  #141 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n-  #142 = Utf8               SourceFile\n-  #143 = Utf8               ConcurrentUtils.java\n-  #144 = Utf8               InnerClasses\n-  #145 = Utf8               ConstantFuture\n+  #141 = Utf8               SourceFile\n+  #142 = Utf8               ConcurrentUtils.java\n+  #143 = Utf8               InnerClasses\n+  #144 = Utf8               ConstantFuture\n {\n   private org.apache.commons.lang3.concurrent.ConcurrentUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 40: 0\n         line 41: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/concurrent/ConcurrentUtils;\n@@ -173,27 +172,27 @@\n     descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        11\n          4: aload_0\n-         5: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         5: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n          8: ifnonnull     13\n         11: aconst_null\n         12: areturn\n         13: aload_0\n-        14: invokestatic  #13                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-        17: new           #19                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n+        14: invokestatic  #22                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+        17: new           #26                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n         20: dup\n         21: aload_0\n-        22: invokevirtual #21                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+        22: invokevirtual #28                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n         25: aload_0\n-        26: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        29: invokespecial #25                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        29: invokespecial #32                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         32: areturn\n       LineNumberTable:\n         line 62: 0\n         line 63: 11\n         line 66: 13\n         line 67: 17\n       LocalVariableTable:\n@@ -207,27 +206,27 @@\n     descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        11\n          4: aload_0\n-         5: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         5: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n          8: ifnonnull     13\n         11: aconst_null\n         12: areturn\n         13: aload_0\n-        14: invokestatic  #13                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-        17: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+        14: invokestatic  #22                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+        17: new           #40                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n         20: dup\n         21: aload_0\n-        22: invokevirtual #21                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+        22: invokevirtual #28                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n         25: aload_0\n-        26: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        29: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        29: invokespecial #42                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         32: areturn\n       LineNumberTable:\n         line 84: 0\n         line 85: 11\n         line 88: 13\n         line 89: 17\n       LocalVariableTable:\n@@ -236,18 +235,20 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 1 /* same */\n \n   public static void handleCause(java.util.concurrent.ExecutionException) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws org.apache.commons.lang3.concurrent.ConcurrentException\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #31                 // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+         1: invokestatic  #45                 // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n          4: astore_1\n          5: aload_1\n          6: ifnull        11\n          9: aload_1\n         10: athrow\n         11: return\n       LineNumberTable:\n@@ -259,24 +260,22 @@\n         Start  Length  Slot  Name   Signature\n             0      12     0    ex   Ljava/util/concurrent/ExecutionException;\n             5       7     1   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 11\n           locals = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Exceptions:\n-      throws org.apache.commons.lang3.concurrent.ConcurrentException\n \n   public static void handleCauseUnchecked(java.util.concurrent.ExecutionException);\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #35                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+         1: invokestatic  #50                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n          4: astore_1\n          5: aload_1\n          6: ifnull        11\n          9: aload_1\n         10: athrow\n         11: return\n       LineNumberTable:\n@@ -293,70 +292,71 @@\n           offset_delta = 11\n           locals = [ class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException ]\n \n   static java.lang.Throwable checkedException(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n     flags: (0x0008) ACC_STATIC\n     Code:\n-      stack=3, locals=1, args_size=1\n+      stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        22\n          4: aload_0\n-         5: instanceof    #39                 // class java/lang/RuntimeException\n+         5: instanceof    #56                 // class java/lang/RuntimeException\n          8: ifne          22\n         11: aload_0\n-        12: instanceof    #41                 // class java/lang/Error\n+        12: instanceof    #58                 // class java/lang/Error\n         15: ifne          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n-        23: new           #43                 // class java/lang/StringBuilder\n+        23: new           #60                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #46                 // String Not a checked exception:\n-        32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        35: aload_0\n-        36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        39: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        42: iconst_0\n-        43: anewarray     #2                  // class java/lang/Object\n-        46: invokestatic  #58                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-        49: aload_0\n-        50: areturn\n+        27: ldc           #62                 // String Not a checked exception:\n+        29: invokespecial #64                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        32: aload_0\n+        33: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        36: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        39: iconst_0\n+        40: anewarray     #3                  // class java/lang/Object\n+        43: invokestatic  #74                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        46: aload_0\n+        47: areturn\n       LineNumberTable:\n         line 145: 0\n-        line 148: 49\n+        line 146: 11\n+        line 145: 43\n+        line 148: 46\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      51     0    ex   Ljava/lang/Throwable;\n+            0      48     0    ex   Ljava/lang/Throwable;\n       StackMapTable: number_of_entries = 2\n         frame_type = 22 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   private static void throwCause(java.util.concurrent.ExecutionException);\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-         4: instanceof    #39                 // class java/lang/RuntimeException\n+         1: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         4: instanceof    #56                 // class java/lang/RuntimeException\n          7: ifeq          18\n         10: aload_0\n-        11: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        14: checkcast     #39                 // class java/lang/RuntimeException\n+        11: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        14: checkcast     #56                 // class java/lang/RuntimeException\n         17: athrow\n         18: aload_0\n-        19: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        22: instanceof    #41                 // class java/lang/Error\n+        19: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        22: instanceof    #58                 // class java/lang/Error\n         25: ifeq          36\n         28: aload_0\n-        29: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        32: checkcast     #41                 // class java/lang/Error\n+        29: invokevirtual #16                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        32: checkcast     #58                 // class java/lang/Error\n         35: athrow\n         36: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 10\n         line 162: 18\n         line 163: 28\n@@ -367,20 +367,23 @@\n       StackMapTable: number_of_entries = 2\n         frame_type = 18 /* same */\n         frame_type = 17 /* same */\n \n   public static <T extends java.lang.Object> T initialize(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws org.apache.commons.lang3.concurrent.ConcurrentException\n+    Signature: #84                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        13\n          4: aload_0\n-         5: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+         5: invokeinterface #85,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n         10: goto          14\n         13: aconst_null\n         14: areturn\n       LineNumberTable:\n         line 183: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -388,65 +391,63 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Exceptions:\n-      throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #122                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <T extends java.lang.Object> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #84                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #70                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+         1: invokestatic  #96                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+         6: new           #40                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n          9: dup\n         10: aload_1\n-        11: invokevirtual #74                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-        14: invokespecial #75                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        11: invokevirtual #98                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+        14: invokespecial #99                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         17: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class org/apache/commons/lang3/concurrent/ConcurrentException\n       LineNumberTable:\n         line 201: 0\n         line 202: 5\n         line 203: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6      12     1   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n             0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n+            6      12     1   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 initializer   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #122                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #104                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: aload_2\n-         9: invokeinterface #78,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokeinterface #105,  3          // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         14: astore_3\n         15: aload_3\n         16: ifnull        23\n         19: aload_3\n         20: goto          24\n         23: aload_2\n         24: areturn\n@@ -470,38 +471,40 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 16\n           locals = [ class java/lang/Object ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #133                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws org.apache.commons.lang3.concurrent.ConcurrentException\n+    Signature: #121                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     10\n          8: aconst_null\n          9: areturn\n         10: aload_0\n         11: aload_1\n-        12: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        12: invokeinterface #122,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n         17: astore_3\n         18: aload_3\n         19: ifnonnull     34\n         22: aload_0\n         23: aload_1\n         24: aload_2\n-        25: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-        30: invokestatic  #87                 // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        25: invokeinterface #85,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+        30: invokestatic  #125                // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         33: areturn\n         34: aload_3\n         35: areturn\n       LineNumberTable:\n         line 273: 0\n         line 274: 8\n         line 277: 10\n@@ -522,74 +525,71 @@\n            18      18     3 value   TV;\n       StackMapTable: number_of_entries = 3\n         frame_type = 8 /* same */\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/lang/Object ]\n-    Exceptions:\n-      throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #136                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #121                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #90                 // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+         3: invokestatic  #130                // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n          6: areturn\n          7: astore_3\n-         8: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+         8: new           #40                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n         11: dup\n         12: aload_3\n-        13: invokevirtual #74                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-        16: invokespecial #75                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        13: invokevirtual #98                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+        16: invokespecial #99                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         19: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class org/apache/commons/lang3/concurrent/ConcurrentException\n       LineNumberTable:\n         line 302: 0\n         line 303: 7\n         line 304: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            8      12     3   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n             0      20     0   map   Ljava/util/concurrent/ConcurrentMap;\n             0      20     1   key   Ljava/lang/Object;\n             0      20     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;\n+            8      12     3   cex   Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0   map   Ljava/util/concurrent/ConcurrentMap<TK;TV;>;\n             0      20     1   key   TK;\n             0      20     2  init   Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #136                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <T extends java.lang.Object> java.util.concurrent.Future<T> constantFuture(T);\n     descriptor: (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #134                         // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #94                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+         0: new           #135                // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n          3: dup\n          4: aload_0\n-         5: invokespecial #96                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+         5: invokespecial #137                // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n          8: areturn\n       LineNumberTable:\n         line 325: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 value   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 value   TT;\n-    Signature: #141                         // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n }\n SourceFile: \"ConcurrentUtils.java\"\n InnerClasses:\n-  static final #145= #94 of #14;          // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n+  static final #144= #135 of #1;          // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n"}]}
