{"diffoscope-json-version": 1, "source1": "first/OrFileFilter.class", "source2": "second/OrFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,205 +1,205 @@\n-  SHA-256 checksum cdfc3ec737d5d567bbee343a9d044883f547f016bebb20aa8a0dcdd2f4e1df5d\n+  SHA-256 checksum 244a9480260eb69698037168cf72a255289ece38217886742812baa88851b02e\n   Compiled from \"OrFileFilter.java\"\n public class org.apache.commons.io.filefilter.OrFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #42                         // org/apache/commons/io/filefilter/OrFileFilter\n-  super_class: #43                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #2                          // org/apache/commons/io/filefilter/OrFileFilter\n+  super_class: #8                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #42.#108      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(I)V\n-    #2 = Methodref          #43.#109      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #3 = String             #63           // initialList\n-    #4 = Methodref          #110.#111     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #112          // java/util/List\n-    #6 = Fieldref           #42.#113      // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n-    #7 = Class              #114          // java/util/ArrayList\n-    #8 = Methodref          #7.#108       // java/util/ArrayList.\"<init>\":(I)V\n-    #9 = Methodref          #42.#115      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n-   #10 = String             #51           // fileFilters\n-   #11 = Class              #72           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n-   #12 = Methodref          #42.#116      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #13 = Methodref          #42.#117      // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #14 = Class              #118          // java/util/Collection\n-   #15 = Methodref          #7.#119       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #16 = InterfaceMethodref #5.#120       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #17 = InterfaceMethodref #85.#121      // java/util/Iterator.hasNext:()Z\n-   #18 = InterfaceMethodref #85.#122      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #19 = Class              #123          // org/apache/commons/io/filefilter/IOFileFilter\n-   #20 = InterfaceMethodref #19.#124      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #21 = InterfaceMethodref #19.#125      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #22 = InterfaceMethodref #19.#126      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #23 = Fieldref           #127.#128     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #24 = Fieldref           #127.#129     // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #25 = String             #81           // fileFilter\n-   #26 = InterfaceMethodref #5.#130       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #27 = Methodref          #131.#132     // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #28 = InterfaceMethodref #5.#133       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #29 = InterfaceMethodref #5.#134       // java/util/List.clear:()V\n-   #30 = InterfaceMethodref #5.#135       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #31 = Class              #136          // java/lang/StringBuilder\n-   #32 = Methodref          #31.#109      // java/lang/StringBuilder.\"<init>\":()V\n-   #33 = Methodref          #43.#137      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #34 = Methodref          #31.#138      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #35 = String             #139          // (\n-   #36 = InterfaceMethodref #5.#140       // java/util/List.size:()I\n-   #37 = String             #141          // ,\n-   #38 = InterfaceMethodref #5.#142       // java/util/List.get:(I)Ljava/lang/Object;\n-   #39 = Methodref          #31.#143      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #40 = String             #144          // )\n-   #41 = Methodref          #31.#137      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #42 = Class              #145          // org/apache/commons/io/filefilter/OrFileFilter\n-   #43 = Class              #146          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #44 = Class              #147          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #45 = Class              #148          // java/io/Serializable\n-   #46 = Utf8               serialVersionUID\n-   #47 = Utf8               J\n-   #48 = Utf8               ConstantValue\n-   #49 = Long               5767770777065432721l\n-   #51 = Utf8               fileFilters\n-   #52 = Utf8               Ljava/util/List;\n-   #53 = Utf8               Signature\n-   #54 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #55 = Utf8               <init>\n-   #56 = Utf8               ()V\n-   #57 = Utf8               Code\n-   #58 = Utf8               LineNumberTable\n-   #59 = Utf8               LocalVariableTable\n-   #60 = Utf8               this\n-   #61 = Utf8               Lorg/apache/commons/io/filefilter/OrFileFilter;\n-   #62 = Utf8               (Ljava/util/ArrayList;)V\n-   #63 = Utf8               initialList\n-   #64 = Utf8               Ljava/util/ArrayList;\n-   #65 = Utf8               LocalVariableTypeTable\n-   #66 = Utf8               Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #67 = Utf8               (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n-   #68 = Utf8               (I)V\n-   #69 = Utf8               initialCapacity\n-   #70 = Utf8               I\n-   #71 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #72 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #73 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #74 = Utf8               filter1\n-   #75 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #76 = Utf8               filter2\n-   #77 = Utf8               (Ljava/util/List;)V\n-   #78 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n-   #79 = Utf8               accept\n-   #80 = Utf8               (Ljava/io/File;)Z\n-   #81 = Utf8               fileFilter\n-   #82 = Utf8               file\n-   #83 = Utf8               Ljava/io/File;\n-   #84 = Utf8               StackMapTable\n-   #85 = Class              #149          // java/util/Iterator\n-   #86 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #87 = Utf8               name\n-   #88 = Utf8               Ljava/lang/String;\n-   #89 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #90 = Utf8               Ljava/nio/file/Path;\n-   #91 = Utf8               attributes\n-   #92 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #93 = Utf8               addFileFilter\n-   #94 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #95 = Utf8               getFileFilters\n-   #96 = Utf8               ()Ljava/util/List;\n-   #97 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #98 = Utf8               removeFileFilter\n-   #99 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n-  #100 = Utf8               setFileFilters\n-  #101 = Utf8               toString\n-  #102 = Utf8               ()Ljava/lang/String;\n-  #103 = Utf8               i\n-  #104 = Utf8               buffer\n-  #105 = Utf8               Ljava/lang/StringBuilder;\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               OrFileFilter.java\n-  #108 = NameAndType        #55:#68       // \"<init>\":(I)V\n-  #109 = NameAndType        #55:#56       // \"<init>\":()V\n-  #110 = Class              #150          // java/util/Objects\n-  #111 = NameAndType        #151:#152     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #112 = Utf8               java/util/List\n-  #113 = NameAndType        #51:#52       // fileFilters:Ljava/util/List;\n-  #114 = Utf8               java/util/ArrayList\n-  #115 = NameAndType        #55:#62       // \"<init>\":(Ljava/util/ArrayList;)V\n-  #116 = NameAndType        #93:#71       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #117 = NameAndType        #93:#94       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #118 = Utf8               java/util/Collection\n-  #119 = NameAndType        #55:#153      // \"<init>\":(Ljava/util/Collection;)V\n-  #120 = NameAndType        #154:#155     // iterator:()Ljava/util/Iterator;\n-  #121 = NameAndType        #156:#157     // hasNext:()Z\n-  #122 = NameAndType        #158:#159     // next:()Ljava/lang/Object;\n-  #123 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #124 = NameAndType        #79:#80       // accept:(Ljava/io/File;)Z\n-  #125 = NameAndType        #79:#86       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #126 = NameAndType        #79:#89       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #127 = Class              #160          // java/nio/file/FileVisitResult\n-  #128 = NameAndType        #161:#162     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #129 = NameAndType        #163:#162     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-  #130 = NameAndType        #164:#165     // add:(Ljava/lang/Object;)Z\n-  #131 = Class              #166          // java/util/Collections\n-  #132 = NameAndType        #167:#168     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-  #133 = NameAndType        #169:#165     // remove:(Ljava/lang/Object;)Z\n-  #134 = NameAndType        #170:#56      // clear:()V\n-  #135 = NameAndType        #171:#172     // addAll:(Ljava/util/Collection;)Z\n-  #136 = Utf8               java/lang/StringBuilder\n-  #137 = NameAndType        #101:#102     // toString:()Ljava/lang/String;\n-  #138 = NameAndType        #173:#174     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #139 = Utf8               (\n-  #140 = NameAndType        #175:#176     // size:()I\n-  #141 = Utf8               ,\n-  #142 = NameAndType        #177:#178     // get:(I)Ljava/lang/Object;\n-  #143 = NameAndType        #173:#179     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #144 = Utf8               )\n-  #145 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #146 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #147 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #148 = Utf8               java/io/Serializable\n-  #149 = Utf8               java/util/Iterator\n-  #150 = Utf8               java/util/Objects\n-  #151 = Utf8               requireNonNull\n-  #152 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #153 = Utf8               (Ljava/util/Collection;)V\n-  #154 = Utf8               iterator\n-  #155 = Utf8               ()Ljava/util/Iterator;\n-  #156 = Utf8               hasNext\n-  #157 = Utf8               ()Z\n-  #158 = Utf8               next\n-  #159 = Utf8               ()Ljava/lang/Object;\n-  #160 = Utf8               java/nio/file/FileVisitResult\n-  #161 = Utf8               CONTINUE\n-  #162 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #163 = Utf8               TERMINATE\n-  #164 = Utf8               add\n-  #165 = Utf8               (Ljava/lang/Object;)Z\n-  #166 = Utf8               java/util/Collections\n-  #167 = Utf8               unmodifiableList\n-  #168 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #169 = Utf8               remove\n-  #170 = Utf8               clear\n-  #171 = Utf8               addAll\n-  #172 = Utf8               (Ljava/util/Collection;)Z\n-  #173 = Utf8               append\n-  #174 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #175 = Utf8               size\n-  #176 = Utf8               ()I\n-  #177 = Utf8               get\n-  #178 = Utf8               (I)Ljava/lang/Object;\n-  #179 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(I)V\n+    #2 = Class              #4            // org/apache/commons/io/filefilter/OrFileFilter\n+    #3 = NameAndType        #5:#6         // \"<init>\":(I)V\n+    #4 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (I)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #11 = Utf8               ()V\n+   #12 = String             #13           // initialList\n+   #13 = Utf8               initialList\n+   #14 = Methodref          #15.#16       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #15 = Class              #17           // java/util/Objects\n+   #16 = NameAndType        #18:#19       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #17 = Utf8               java/util/Objects\n+   #18 = Utf8               requireNonNull\n+   #19 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #20 = Class              #21           // java/util/List\n+   #21 = Utf8               java/util/List\n+   #22 = Fieldref           #2.#23        // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n+   #23 = NameAndType        #24:#25       // fileFilters:Ljava/util/List;\n+   #24 = Utf8               fileFilters\n+   #25 = Utf8               Ljava/util/List;\n+   #26 = Class              #27           // java/util/ArrayList\n+   #27 = Utf8               java/util/ArrayList\n+   #28 = Methodref          #26.#3        // java/util/ArrayList.\"<init>\":(I)V\n+   #29 = Methodref          #2.#30        // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/ArrayList;)V\n+   #30 = NameAndType        #5:#31        // \"<init>\":(Ljava/util/ArrayList;)V\n+   #31 = Utf8               (Ljava/util/ArrayList;)V\n+   #32 = String             #24           // fileFilters\n+   #33 = Class              #34           // \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+   #34 = Utf8               [Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #35 = Methodref          #2.#36        // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #36 = NameAndType        #37:#38       // addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #37 = Utf8               addFileFilter\n+   #38 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #39 = Methodref          #2.#40        // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #40 = NameAndType        #37:#41       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #41 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #42 = Class              #43           // java/util/Collection\n+   #43 = Utf8               java/util/Collection\n+   #44 = Methodref          #26.#45       // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #45 = NameAndType        #5:#46        // \"<init>\":(Ljava/util/Collection;)V\n+   #46 = Utf8               (Ljava/util/Collection;)V\n+   #47 = InterfaceMethodref #20.#48       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #48 = NameAndType        #49:#50       // iterator:()Ljava/util/Iterator;\n+   #49 = Utf8               iterator\n+   #50 = Utf8               ()Ljava/util/Iterator;\n+   #51 = InterfaceMethodref #52.#53       // java/util/Iterator.hasNext:()Z\n+   #52 = Class              #54           // java/util/Iterator\n+   #53 = NameAndType        #55:#56       // hasNext:()Z\n+   #54 = Utf8               java/util/Iterator\n+   #55 = Utf8               hasNext\n+   #56 = Utf8               ()Z\n+   #57 = InterfaceMethodref #52.#58       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #58 = NameAndType        #59:#60       // next:()Ljava/lang/Object;\n+   #59 = Utf8               next\n+   #60 = Utf8               ()Ljava/lang/Object;\n+   #61 = Class              #62           // org/apache/commons/io/filefilter/IOFileFilter\n+   #62 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #63 = InterfaceMethodref #61.#64       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #64 = NameAndType        #65:#66       // accept:(Ljava/io/File;)Z\n+   #65 = Utf8               accept\n+   #66 = Utf8               (Ljava/io/File;)Z\n+   #67 = InterfaceMethodref #61.#68       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #68 = NameAndType        #65:#69       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #69 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #70 = InterfaceMethodref #61.#71       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #71 = NameAndType        #65:#72       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #72 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #73 = Fieldref           #74.#75       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #74 = Class              #76           // java/nio/file/FileVisitResult\n+   #75 = NameAndType        #77:#78       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #76 = Utf8               java/nio/file/FileVisitResult\n+   #77 = Utf8               CONTINUE\n+   #78 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #79 = Fieldref           #74.#80       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #80 = NameAndType        #81:#78       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #81 = Utf8               TERMINATE\n+   #82 = String             #83           // fileFilter\n+   #83 = Utf8               fileFilter\n+   #84 = InterfaceMethodref #20.#85       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #85 = NameAndType        #86:#87       // add:(Ljava/lang/Object;)Z\n+   #86 = Utf8               add\n+   #87 = Utf8               (Ljava/lang/Object;)Z\n+   #88 = Methodref          #89.#90       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #89 = Class              #91           // java/util/Collections\n+   #90 = NameAndType        #92:#93       // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #91 = Utf8               java/util/Collections\n+   #92 = Utf8               unmodifiableList\n+   #93 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+   #94 = InterfaceMethodref #20.#95       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #95 = NameAndType        #96:#87       // remove:(Ljava/lang/Object;)Z\n+   #96 = Utf8               remove\n+   #97 = InterfaceMethodref #20.#98       // java/util/List.clear:()V\n+   #98 = NameAndType        #99:#11       // clear:()V\n+   #99 = Utf8               clear\n+  #100 = InterfaceMethodref #20.#101      // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #101 = NameAndType        #102:#103     // addAll:(Ljava/util/Collection;)Z\n+  #102 = Utf8               addAll\n+  #103 = Utf8               (Ljava/util/Collection;)Z\n+  #104 = Class              #105          // java/lang/StringBuilder\n+  #105 = Utf8               java/lang/StringBuilder\n+  #106 = Methodref          #104.#9       // java/lang/StringBuilder.\"<init>\":()V\n+  #107 = Methodref          #8.#108       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #108 = NameAndType        #109:#110     // toString:()Ljava/lang/String;\n+  #109 = Utf8               toString\n+  #110 = Utf8               ()Ljava/lang/String;\n+  #111 = Methodref          #104.#112     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = NameAndType        #113:#114     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #113 = Utf8               append\n+  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = String             #116          // (\n+  #116 = Utf8               (\n+  #117 = InterfaceMethodref #20.#118      // java/util/List.size:()I\n+  #118 = NameAndType        #119:#120     // size:()I\n+  #119 = Utf8               size\n+  #120 = Utf8               ()I\n+  #121 = String             #122          // ,\n+  #122 = Utf8               ,\n+  #123 = InterfaceMethodref #20.#124      // java/util/List.get:(I)Ljava/lang/Object;\n+  #124 = NameAndType        #125:#126     // get:(I)Ljava/lang/Object;\n+  #125 = Utf8               get\n+  #126 = Utf8               (I)Ljava/lang/Object;\n+  #127 = Methodref          #104.#128     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #128 = NameAndType        #113:#129     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #129 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #130 = String             #131          // )\n+  #131 = Utf8               )\n+  #132 = Methodref          #104.#108     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #133 = Class              #134          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #134 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #135 = Class              #136          // java/io/Serializable\n+  #136 = Utf8               java/io/Serializable\n+  #137 = Utf8               serialVersionUID\n+  #138 = Utf8               J\n+  #139 = Utf8               ConstantValue\n+  #140 = Long               5767770777065432721l\n+  #142 = Utf8               Signature\n+  #143 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #144 = Utf8               Code\n+  #145 = Utf8               LineNumberTable\n+  #146 = Utf8               LocalVariableTable\n+  #147 = Utf8               this\n+  #148 = Utf8               Lorg/apache/commons/io/filefilter/OrFileFilter;\n+  #149 = Utf8               Ljava/util/ArrayList;\n+  #150 = Utf8               LocalVariableTypeTable\n+  #151 = Utf8               Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #152 = Utf8               (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+  #153 = Utf8               initialCapacity\n+  #154 = Utf8               I\n+  #155 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #156 = Utf8               filter1\n+  #157 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #158 = Utf8               filter2\n+  #159 = Utf8               (Ljava/util/List;)V\n+  #160 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+  #161 = Utf8               file\n+  #162 = Utf8               Ljava/io/File;\n+  #163 = Utf8               StackMapTable\n+  #164 = Utf8               name\n+  #165 = Utf8               Ljava/lang/String;\n+  #166 = Utf8               Ljava/nio/file/Path;\n+  #167 = Utf8               attributes\n+  #168 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #169 = Utf8               getFileFilters\n+  #170 = Utf8               ()Ljava/util/List;\n+  #171 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #172 = Utf8               removeFileFilter\n+  #173 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n+  #174 = Utf8               setFileFilters\n+  #175 = Utf8               i\n+  #176 = Utf8               buffer\n+  #177 = Utf8               Ljava/lang/StringBuilder;\n+  #178 = Utf8               SourceFile\n+  #179 = Utf8               OrFileFilter.java\n {\n   private static final long serialVersionUID = 5767770777065432721l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 5767770777065432721l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #54                          // Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #143                         // Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public org.apache.commons.io.filefilter.OrFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -215,46 +215,46 @@\n \n   private org.apache.commons.io.filefilter.OrFileFilter(java.util.ArrayList<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/ArrayList;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #3                  // String initialList\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #5                  // class java/util/List\n-        14: putfield      #6                  // Field fileFilters:Ljava/util/List;\n+         6: ldc           #12                 // String initialList\n+         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #20                 // class java/util/List\n+        14: putfield      #22                 // Field fileFilters:Ljava/util/List;\n         17: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 4\n         line 60: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n             0      18     1 initialList   Ljava/util/ArrayList;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     1 initialList   Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-    Signature: #67                          // (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #152                         // (Ljava/util/ArrayList<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   private org.apache.commons.io.filefilter.OrFileFilter(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #7                  // class java/util/ArrayList\n+         1: new           #26                 // class java/util/ArrayList\n          4: dup\n          5: iload_1\n-         6: invokespecial #8                  // Method java/util/ArrayList.\"<init>\":(I)V\n-         9: invokespecial #9                  // Method \"<init>\":(Ljava/util/ArrayList;)V\n+         6: invokespecial #28                 // Method java/util/ArrayList.\"<init>\":(I)V\n+         9: invokespecial #29                 // Method \"<init>\":(Ljava/util/ArrayList;)V\n         12: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n@@ -263,22 +263,22 @@\n   public org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #10                 // String fileFilters\n-         4: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         7: checkcast     #11                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+         2: ldc           #32                 // String fileFilters\n+         4: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #33                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n         10: arraylength\n         11: invokespecial #1                  // Method \"<init>\":(I)V\n         14: aload_0\n         15: aload_1\n-        16: invokevirtual #12                 // Method addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        16: invokevirtual #35                 // Method addFileFilter:([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         19: return\n       LineNumberTable:\n         line 78: 0\n         line 79: 14\n         line 80: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -291,18 +291,18 @@\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iconst_2\n          2: invokespecial #1                  // Method \"<init>\":(I)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #13                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+         7: invokevirtual #39                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         10: aload_0\n         11: aload_2\n-        12: invokevirtual #13                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        12: invokevirtual #39                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         15: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 5\n         line 92: 10\n         line 93: 15\n       LocalVariableTable:\n@@ -313,54 +313,54 @@\n \n   public org.apache.commons.io.filefilter.OrFileFilter(java.util.List<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n-         1: new           #7                  // class java/util/ArrayList\n+         1: new           #26                 // class java/util/ArrayList\n          4: dup\n          5: aload_1\n-         6: ldc           #10                 // String fileFilters\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #14                 // class java/util/Collection\n-        14: invokespecial #15                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-        17: invokespecial #9                  // Method \"<init>\":(Ljava/util/ArrayList;)V\n+         6: ldc           #32                 // String fileFilters\n+         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #42                 // class java/util/Collection\n+        14: invokespecial #44                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        17: invokespecial #29                 // Method \"<init>\":(Ljava/util/ArrayList;)V\n         20: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n             0      21     1 fileFilters   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      21     1 fileFilters   Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-    Signature: #78                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #160                         // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          9: astore_2\n         10: aload_2\n-        11: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifeq          44\n         19: aload_2\n-        20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        25: checkcast     #19                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        20: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        25: checkcast     #61                 // class org/apache/commons/io/filefilter/IOFileFilter\n         28: astore_3\n         29: aload_3\n         30: aload_1\n-        31: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+        31: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n         36: ifeq          41\n         39: iconst_1\n         40: ireturn\n         41: goto          10\n         44: iconst_0\n         45: ireturn\n       LineNumberTable:\n@@ -384,28 +384,28 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          9: astore_3\n         10: aload_3\n-        11: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifeq          47\n         19: aload_3\n-        20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        25: checkcast     #19                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        20: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        25: checkcast     #61                 // class org/apache/commons/io/filefilter/IOFileFilter\n         28: astore        4\n         30: aload         4\n         32: aload_1\n         33: aload_2\n-        34: invokeinterface #21,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        34: invokeinterface #67,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n         39: ifeq          44\n         42: iconst_1\n         43: ireturn\n         44: goto          10\n         47: iconst_0\n         48: ireturn\n       LineNumberTable:\n@@ -430,34 +430,34 @@\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #16,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #47,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          9: astore_3\n         10: aload_3\n-        11: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        11: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifeq          52\n         19: aload_3\n-        20: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        25: checkcast     #19                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        20: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        25: checkcast     #61                 // class org/apache/commons/io/filefilter/IOFileFilter\n         28: astore        4\n         30: aload         4\n         32: aload_1\n         33: aload_2\n-        34: invokeinterface #22,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        39: getstatic     #23                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        34: invokeinterface #70,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        39: getstatic     #73                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         42: if_acmpne     49\n-        45: getstatic     #23                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        45: getstatic     #73                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         48: areturn\n         49: goto          10\n-        52: getstatic     #24                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        52: getstatic     #79                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         55: areturn\n       LineNumberTable:\n         line 136: 0\n         line 137: 30\n         line 138: 45\n         line 140: 49\n         line 141: 52\n@@ -477,20 +477,20 @@\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n          4: aload_1\n-         5: ldc           #25                 // String fileFilter\n-         7: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        10: checkcast     #19                 // class org/apache/commons/io/filefilter/IOFileFilter\n-        13: invokeinterface #26,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         5: ldc           #82                 // String fileFilter\n+         7: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        10: checkcast     #61                 // class org/apache/commons/io/filefilter/IOFileFilter\n+        13: invokeinterface #84,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         18: pop\n         19: return\n       LineNumberTable:\n         line 149: 0\n         line 150: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -499,17 +499,17 @@\n \n   public void addFileFilter(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n-         1: ldc           #10                 // String fileFilters\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #11                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n+         1: ldc           #32                 // String fileFilters\n+         3: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         6: checkcast     #33                 // class \"[Lorg/apache/commons/io/filefilter/IOFileFilter;\"\n          9: astore_2\n         10: aload_2\n         11: arraylength\n         12: istore_3\n         13: iconst_0\n         14: istore        4\n         16: iload         4\n@@ -517,15 +517,15 @@\n         19: if_icmpge     40\n         22: aload_2\n         23: iload         4\n         25: aaload\n         26: astore        5\n         28: aload_0\n         29: aload         5\n-        31: invokevirtual #13                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        31: invokevirtual #39                 // Method addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n         34: iinc          4, 1\n         37: goto          16\n         40: return\n       LineNumberTable:\n         line 159: 0\n         line 160: 28\n         line 159: 34\n@@ -544,120 +544,120 @@\n \n   public java.util.List<org.apache.commons.io.filefilter.IOFileFilter> getFileFilters();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokestatic  #27                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokestatic  #88                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 169: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n-    Signature: #97                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #171                         // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n          4: aload_1\n-         5: invokeinterface #28,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+         5: invokeinterface #94,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n         10: ireturn\n       LineNumberTable:\n         line 177: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n             0      11     1 fileFilter   Lorg/apache/commons/io/filefilter/IOFileFilter;\n \n   public void setFileFilters(java.util.List<org.apache.commons.io.filefilter.IOFileFilter>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-         4: invokeinterface #29,  1           // InterfaceMethod java/util/List.clear:()V\n+         1: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+         4: invokeinterface #97,  1           // InterfaceMethod java/util/List.clear:()V\n          9: aload_0\n-        10: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+        10: getfield      #22                 // Field fileFilters:Ljava/util/List;\n         13: aload_1\n-        14: ldc           #10                 // String fileFilters\n-        16: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        19: checkcast     #14                 // class java/util/Collection\n-        22: invokeinterface #30,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+        14: ldc           #32                 // String fileFilters\n+        16: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        19: checkcast     #42                 // class java/util/Collection\n+        22: invokeinterface #100,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n         27: pop\n         28: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 9\n         line 187: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/io/filefilter/OrFileFilter;\n             0      29     1 fileFilters   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      29     1 fileFilters   Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-    Signature: #78                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #160                         // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #31                 // class java/lang/StringBuilder\n+         0: new           #104                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #32                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #106                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokespecial #33                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-        13: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: invokespecial #107                // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+        13: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_1\n-        18: ldc           #35                 // String (\n-        20: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: ldc           #115                // String (\n+        20: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload_0\n-        25: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+        25: getfield      #22                 // Field fileFilters:Ljava/util/List;\n         28: ifnull        78\n         31: iconst_0\n         32: istore_2\n         33: iload_2\n         34: aload_0\n-        35: getfield      #6                  // Field fileFilters:Ljava/util/List;\n-        38: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I\n+        35: getfield      #22                 // Field fileFilters:Ljava/util/List;\n+        38: invokeinterface #117,  1          // InterfaceMethod java/util/List.size:()I\n         43: if_icmpge     78\n         46: iload_2\n         47: ifle          57\n         50: aload_1\n-        51: ldc           #37                 // String ,\n-        53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: ldc           #121                // String ,\n+        53: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         56: pop\n         57: aload_1\n         58: aload_0\n-        59: getfield      #6                  // Field fileFilters:Ljava/util/List;\n+        59: getfield      #22                 // Field fileFilters:Ljava/util/List;\n         62: iload_2\n-        63: invokeinterface #38,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        68: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        63: invokeinterface #123,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        68: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         71: pop\n         72: iinc          2, 1\n         75: goto          33\n         78: aload_1\n-        79: ldc           #40                 // String )\n-        81: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        79: ldc           #130                // String )\n+        81: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         84: pop\n         85: aload_1\n-        86: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        86: invokevirtual #132                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         89: areturn\n       LineNumberTable:\n         line 196: 0\n         line 197: 8\n         line 198: 17\n         line 199: 24\n         line 200: 31\n"}]}
