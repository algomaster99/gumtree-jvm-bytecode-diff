{"diffoscope-json-version": 1, "source1": "first/BigDecimalParser.class", "source2": "second/BigDecimalParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -28,15 +28,15 @@\n                 desc = \"Not a valid number representation\";\n             }\n             String stringToReport;\n             if (len <= 1000) {\n                 stringToReport = new String(chars, off, len);\n             }\n             else {\n-                stringToReport = new String(Arrays.copyOfRange(chars, off, 1000)) + \"(truncated, full length is \" + chars.length + \" chars)\";\n+                stringToReport = String.valueOf(new String(Arrays.copyOfRange(chars, off, 1000))) + \"(truncated, full length is \" + chars.length + \" chars)\";\n             }\n             throw new NumberFormatException(\"Value \\\"\" + stringToReport + \"\\\" can not be represented as `java.math.BigDecimal`, reason: \" + desc);\n         }\n     }\n     \n     public static BigDecimal parse(final char[] chars) {\n         return parse(chars, 0, chars.length);\n"}]}
