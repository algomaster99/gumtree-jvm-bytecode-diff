{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry.class", "source2": "second/ZipArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,720 +1,720 @@\n-  SHA-256 checksum 3741c1a682c47ba1d9600219e394f08753c3fff7714fb5e65a81b63df785d2cc\n+  SHA-256 checksum 215bf16a64066207490ce47176523b8e4af166d4b532f1541699f9677b20f6ca\n   Compiled from \"ZipArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntry extends java.util.zip.ZipEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.EntryStreamOffsets\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  super_class: #172                       // java/util/zip/ZipEntry\n+  this_class: #10                         // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  super_class: #2                         // java/util/zip/ZipEntry\n   interfaces: 2, fields: 26, methods: 78, attributes: 3\n Constant pool:\n-    #1 = Methodref          #172.#416     // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n-    #2 = Class              #417          // org/apache/commons/compress/archivers/zip/ZipMethod\n-    #3 = Fieldref           #8.#418       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n-    #4 = Class              #419          // org/apache/commons/compress/archivers/ArchiveEntry\n-    #5 = Long               -1l\n-    #7 = Fieldref           #8.#420       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n-    #8 = Class              #421          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-    #9 = Fieldref           #8.#422       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n-   #10 = Class              #423          // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-   #11 = Methodref          #10.#424      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-   #12 = Fieldref           #8.#425       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #13 = Class              #426          // org/apache/commons/compress/archivers/EntryStreamOffsets\n-   #14 = Fieldref           #8.#427       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n-   #15 = Fieldref           #8.#428       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n-   #16 = Fieldref           #179.#429     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #17 = Fieldref           #8.#430       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-   #18 = Fieldref           #177.#431     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #19 = Fieldref           #8.#432       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-   #20 = Methodref          #8.#433       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n-   #21 = Methodref          #172.#434     // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #22 = Methodref          #172.#435     // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-   #23 = Methodref          #172.#436     // java/util/zip/ZipEntry.getExtra:()[B\n-   #24 = Fieldref           #175.#437     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-   #25 = Methodref          #438.#439     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #26 = Methodref          #8.#440       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-   #27 = Methodref          #8.#441       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n-   #28 = Methodref          #172.#442     // java/util/zip/ZipEntry.getMethod:()I\n-   #29 = Methodref          #8.#443       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n-   #30 = Methodref          #172.#444     // java/util/zip/ZipEntry.getSize:()J\n-   #31 = Methodref          #8.#434       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n-   #32 = Methodref          #8.#445       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n-   #33 = Methodref          #8.#446       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n-   #34 = Methodref          #8.#447       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n-   #35 = Methodref          #8.#448       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n-   #36 = Methodref          #8.#449       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #37 = Methodref          #8.#450       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n-   #38 = Methodref          #8.#451       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n-   #39 = Methodref          #8.#452       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-   #40 = Methodref          #10.#453      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-   #41 = Methodref          #8.#454       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-   #42 = String             #455          //\n-   #43 = Methodref          #8.#416       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n-   #44 = Methodref          #244.#456     // java/io/File.isDirectory:()Z\n-   #45 = String             #457          // /\n-   #46 = Methodref          #245.#458     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #47 = Class              #459          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#424      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = Methodref          #47.#460      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = Methodref          #47.#461      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #51 = Methodref          #244.#462     // java/io/File.isFile:()Z\n-   #52 = Methodref          #244.#463     // java/io/File.length:()J\n-   #53 = Methodref          #8.#464       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n-   #54 = Methodref          #244.#465     // java/io/File.lastModified:()J\n-   #55 = Methodref          #8.#466       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n-   #56 = Methodref          #467.#468     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #57 = Methodref          #467.#469     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #58 = Methodref          #467.#470     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #59 = Methodref          #467.#471     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #60 = Methodref          #8.#472       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n-   #61 = Methodref          #473.#474     // java/nio/file/attribute/FileTime.toMillis:()J\n-   #62 = Methodref          #172.#453     // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-   #63 = Class              #475          // java/lang/IllegalArgumentException\n-   #64 = String             #476          // ZIP compression method can not be negative:\n-   #65 = Methodref          #47.#477      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #66 = Methodref          #63.#416      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #67 = Fieldref           #8.#478       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n-   #68 = Fieldref           #8.#479       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n-   #69 = Methodref          #8.#456       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n-   #70 = Long               65535l\n-   #72 = Methodref          #8.#480       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n-   #73 = Class              #481          // org/apache/commons/compress/archivers/zip/UnixStat\n-   #74 = Integer            61440\n-   #75 = Integer            40960\n-   #76 = Fieldref           #8.#482       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n-   #77 = Integer            65535\n-   #78 = String             #483          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-   #79 = Fieldref           #8.#484       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-   #80 = Class              #485          // java/util/ArrayList\n-   #81 = Methodref          #80.#424      // java/util/ArrayList.\"<init>\":()V\n-   #82 = Class              #486          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-   #83 = InterfaceMethodref #290.#487     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #84 = Fieldref           #438.#488     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #85 = InterfaceMethodref #290.#489     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #86 = Class              #203          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-   #87 = Fieldref           #8.#490       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #88 = Methodref          #8.#491       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #89 = Methodref          #8.#492       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #90 = Methodref          #8.#493       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #91 = Fieldref           #175.#494     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-   #92 = Methodref          #8.#436       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n-   #93 = Methodref          #495.#496     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #94 = Methodref          #80.#497      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #95 = Methodref          #8.#498       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n-   #96 = InterfaceMethodref #290.#499     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #97 = InterfaceMethodref #307.#500     // java/util/Iterator.hasNext:()Z\n-   #98 = InterfaceMethodref #307.#501     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #99 = Class              #502          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #100 = Methodref          #8.#503       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #101 = InterfaceMethodref #99.#504      // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #102 = Methodref          #8.#505       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #103 = InterfaceMethodref #99.#506      // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-  #104 = InterfaceMethodref #99.#507      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n-  #105 = InterfaceMethodref #290.#508     // java/util/List.remove:(Ljava/lang/Object;)Z\n-  #106 = InterfaceMethodref #290.#509     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-  #107 = Methodref          #8.#510       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #108 = Methodref          #8.#511       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #109 = Methodref          #8.#512       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #110 = Methodref          #8.#513       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #111 = InterfaceMethodref #290.#514     // java/util/List.stream:()Ljava/util/stream/Stream;\n-  #112 = Methodref          #515.#516     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #113 = InvokeDynamic      #0:#522       // #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n-  #114 = InterfaceMethodref #523.#524     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #115 = InterfaceMethodref #523.#525     // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n-  #116 = Methodref          #526.#527     // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #117 = InvokeDynamic      #1:#529       // #1:test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n-  #118 = Methodref          #8.#530       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #119 = Methodref          #8.#531       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #120 = Methodref          #532.#533     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #121 = Class              #534          // java/util/NoSuchElementException\n-  #122 = Methodref          #121.#424     // java/util/NoSuchElementException.\"<init>\":()V\n-  #123 = Methodref          #338.#535     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n-  #124 = InterfaceMethodref #290.#536     // java/util/List.size:()I\n-  #125 = Methodref          #8.#537       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #126 = Class              #538          // java/util/zip/ZipException\n-  #127 = String             #539          // Error parsing extra fields for entry:\n-  #128 = Methodref          #8.#435       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-  #129 = String             #540          //  -\n-  #130 = Methodref          #126.#541     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-  #131 = Methodref          #63.#542      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #132 = Methodref          #438.#543     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #133 = Methodref          #172.#544     // java/util/zip/ZipEntry.setExtra:([B)V\n-  #134 = Fieldref           #545.#546     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-  #135 = Methodref          #438.#547     // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #136 = Fieldref           #8.#548       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n-  #137 = Methodref          #245.#549     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #138 = Methodref          #245.#550     // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #139 = String             #551          // Invalid entry size\n-  #140 = Fieldref           #8.#552       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n-  #141 = Methodref          #495.#553     // java/util/Arrays.copyOf:([BI)[B\n-  #142 = Fieldref           #8.#554       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n-  #143 = Methodref          #245.#555     // java/lang/String.hashCode:()I\n-  #144 = Methodref          #8.#556       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #145 = InterfaceMethodref #99.#557      // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-  #146 = InterfaceMethodref #99.#558      // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n-  #147 = Class              #559          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #148 = Methodref          #147.#424     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n-  #149 = Methodref          #147.#560     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #150 = Methodref          #147.#561     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n-  #151 = Methodref          #147.#562     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n-  #152 = Class              #563          // java/util/Date\n-  #153 = Methodref          #8.#564       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n-  #154 = Methodref          #152.#565     // java/util/Date.\"<init>\":(J)V\n-  #155 = Methodref          #566.#567     // java/lang/Object.getClass:()Ljava/lang/Class;\n-  #156 = Methodref          #515.#568     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #157 = Methodref          #8.#569       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n-  #158 = Methodref          #245.#535     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #159 = Methodref          #8.#442       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #160 = Methodref          #8.#444       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n-  #161 = Methodref          #8.#570       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n-  #162 = Methodref          #8.#571       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n-  #163 = Methodref          #495.#572     // java/util/Arrays.equals:([B[B)Z\n-  #164 = Methodref          #8.#573       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n-  #165 = Methodref          #10.#535      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n-  #166 = Fieldref           #8.#574       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n-  #167 = Fieldref           #8.#575       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n-  #168 = Fieldref           #8.#576       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n-  #169 = Fieldref           #8.#577       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.diskNumberStart:J\n-  #170 = Methodref          #578.#579     // java/lang/Math.min:(II)I\n-  #171 = Fieldref           #8.#580       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #172 = Class              #581          // java/util/zip/ZipEntry\n-  #173 = Class              #582          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  #174 = Utf8               InnerClasses\n-  #175 = Class              #583          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n-  #176 = Utf8               ExtraFieldParsingMode\n-  #177 = Class              #584          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #178 = Utf8               CommentSource\n-  #179 = Class              #585          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #180 = Utf8               NameSource\n-  #181 = Utf8               PLATFORM_UNIX\n-  #182 = Utf8               I\n-  #183 = Utf8               ConstantValue\n-  #184 = Integer            3\n-  #185 = Utf8               PLATFORM_FAT\n-  #186 = Integer            0\n-  #187 = Utf8               CRC_UNKNOWN\n-  #188 = Integer            -1\n-  #189 = Utf8               SHORT_MASK\n-  #190 = Utf8               SHORT_SHIFT\n-  #191 = Integer            16\n-  #192 = Utf8               method\n-  #193 = Utf8               size\n-  #194 = Utf8               J\n-  #195 = Utf8               internalAttributes\n-  #196 = Utf8               versionRequired\n-  #197 = Utf8               versionMadeBy\n-  #198 = Utf8               platform\n-  #199 = Utf8               rawFlag\n-  #200 = Utf8               externalAttributes\n-  #201 = Utf8               alignment\n-  #202 = Utf8               extraFields\n-  #203 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #204 = Utf8               unparseableExtra\n-  #205 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #206 = Utf8               name\n-  #207 = Utf8               Ljava/lang/String;\n-  #208 = Utf8               rawName\n-  #209 = Utf8               [B\n-  #210 = Utf8               gpb\n-  #211 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #212 = Utf8               localHeaderOffset\n-  #213 = Utf8               dataOffset\n-  #214 = Utf8               isStreamContiguous\n-  #215 = Utf8               Z\n-  #216 = Utf8               nameSource\n-  #217 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #218 = Utf8               commentSource\n-  #219 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #220 = Utf8               diskNumberStart\n-  #221 = Utf8               EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY\n-  #222 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #223 = Utf8               <init>\n-  #224 = Utf8               (Ljava/lang/String;)V\n-  #225 = Utf8               Code\n-  #226 = Utf8               LineNumberTable\n-  #227 = Utf8               LocalVariableTable\n-  #228 = Utf8               this\n-  #229 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #230 = Utf8               (Ljava/util/zip/ZipEntry;)V\n-  #231 = Utf8               entry\n-  #232 = Utf8               Ljava/util/zip/ZipEntry;\n-  #233 = Utf8               extra\n-  #234 = Utf8               StackMapTable\n-  #235 = Class              #209          // \"[B\"\n-  #236 = Utf8               Exceptions\n-  #237 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #238 = Utf8               other\n-  #239 = Utf8               ()V\n-  #240 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #241 = Utf8               inputFile\n-  #242 = Utf8               Ljava/io/File;\n-  #243 = Utf8               entryName\n-  #244 = Class              #586          // java/io/File\n-  #245 = Class              #587          // java/lang/String\n-  #246 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-  #247 = Utf8               inputPath\n-  #248 = Utf8               Ljava/nio/file/Path;\n-  #249 = Utf8               options\n-  #250 = Utf8               [Ljava/nio/file/LinkOption;\n-  #251 = Class              #588          // java/nio/file/Path\n-  #252 = Class              #250          // \"[Ljava/nio/file/LinkOption;\"\n-  #253 = Class              #589          // java/io/IOException\n-  #254 = Utf8               setTime\n-  #255 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n-  #256 = Utf8               fileTime\n-  #257 = Utf8               Ljava/nio/file/attribute/FileTime;\n-  #258 = Utf8               clone\n-  #259 = Utf8               ()Ljava/lang/Object;\n-  #260 = Utf8               e\n-  #261 = Utf8               getMethod\n-  #262 = Utf8               ()I\n-  #263 = Utf8               setMethod\n-  #264 = Utf8               (I)V\n-  #265 = Utf8               getInternalAttributes\n-  #266 = Utf8               setInternalAttributes\n-  #267 = Utf8               value\n-  #268 = Utf8               getExternalAttributes\n-  #269 = Utf8               ()J\n-  #270 = Utf8               setExternalAttributes\n-  #271 = Utf8               (J)V\n-  #272 = Utf8               setUnixMode\n-  #273 = Utf8               mode\n-  #274 = Utf8               getUnixMode\n-  #275 = Utf8               isUnixSymlink\n-  #276 = Utf8               ()Z\n-  #277 = Utf8               getPlatform\n-  #278 = Utf8               setPlatform\n-  #279 = Utf8               getAlignment\n-  #280 = Utf8               setAlignment\n-  #281 = Utf8               setExtraFields\n-  #282 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #283 = Utf8               field\n-  #284 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #285 = Utf8               fields\n-  #286 = Utf8               newFields\n-  #287 = Utf8               Ljava/util/List;\n-  #288 = Utf8               LocalVariableTypeTable\n-  #289 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-  #290 = Class              #590          // java/util/List\n-  #291 = Utf8               getExtraFields\n-  #292 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #293 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #294 = Utf8               includeUnparseable\n-  #295 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #296 = Utf8               cd\n-  #297 = Utf8               c\n-  #298 = Utf8               l\n-  #299 = Utf8               parsingBehavior\n-  #300 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n-  #301 = Utf8               local\n-  #302 = Utf8               localFields\n-  #303 = Utf8               central\n-  #304 = Utf8               centralFields\n-  #305 = Utf8               merged\n-  #306 = Class              #591          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #307 = Class              #592          // java/util/Iterator\n-  #308 = Utf8               getParseableExtraFieldsNoCopy\n-  #309 = Utf8               getParseableExtraFields\n-  #310 = Utf8               parseableExtraFields\n-  #311 = Utf8               getAllExtraFieldsNoCopy\n-  #312 = Utf8               getMergedFields\n-  #313 = Utf8               zipExtraFields\n-  #314 = Utf8               getUnparseableOnly\n-  #315 = Utf8               getAllExtraFields\n-  #316 = Utf8               allExtraFieldsNoCopy\n-  #317 = Utf8               findUnparseable\n-  #318 = Utf8               (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #319 = Utf8               fs\n-  #320 = Utf8               Signature\n-  #321 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #322 = Utf8               findMatching\n-  #323 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #324 = Utf8               headerId\n-  #325 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #326 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #327 = Utf8               addExtraField\n-  #328 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #329 = Utf8               ze\n-  #330 = Utf8               addAsFirstExtraField\n-  #331 = Utf8               copy\n-  #332 = Utf8               newLen\n-  #333 = Utf8               removeExtraField\n-  #334 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #335 = Utf8               extraField\n-  #336 = Utf8               type\n-  #337 = Utf8               newResult\n-  #338 = Class              #593          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #339 = Utf8               removeUnparseableExtraFieldData\n-  #340 = Utf8               getExtraField\n-  #341 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #342 = Utf8               getUnparseableExtraFieldData\n-  #343 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #344 = Utf8               setExtra\n-  #345 = Utf8               ([B)V\n-  #346 = Utf8               Ljava/util/zip/ZipException;\n-  #347 = Class              #594          // java/lang/RuntimeException\n-  #348 = Utf8               setCentralDirectoryExtra\n-  #349 = Utf8               b\n-  #350 = Utf8               getLocalFileDataExtra\n-  #351 = Utf8               ()[B\n-  #352 = Utf8               getCentralDirectoryExtra\n-  #353 = Utf8               getName\n-  #354 = Utf8               ()Ljava/lang/String;\n-  #355 = Utf8               isDirectory\n-  #356 = Utf8               setName\n-  #357 = Utf8               getSize\n-  #358 = Utf8               setSize\n-  #359 = Utf8               (Ljava/lang/String;[B)V\n-  #360 = Utf8               getRawName\n-  #361 = Utf8               getLocalHeaderOffset\n-  #362 = Utf8               setLocalHeaderOffset\n-  #363 = Utf8               getDataOffset\n-  #364 = Utf8               setDataOffset\n-  #365 = Utf8               setStreamContiguous\n-  #366 = Utf8               (Z)V\n-  #367 = Utf8               hashCode\n-  #368 = Utf8               getGeneralPurposeBit\n-  #369 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #370 = Utf8               setGeneralPurposeBit\n-  #371 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #372 = Utf8               mergeExtraFields\n-  #373 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #374 = Utf8               existing\n-  #375 = Utf8               u\n-  #376 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n-  #377 = Utf8               ex\n-  #378 = Utf8               element\n-  #379 = Utf8               f\n-  #380 = Utf8               getLastModifiedDate\n-  #381 = Utf8               ()Ljava/util/Date;\n-  #382 = Utf8               equals\n-  #383 = Utf8               (Ljava/lang/Object;)Z\n-  #384 = Utf8               obj\n-  #385 = Utf8               Ljava/lang/Object;\n-  #386 = Utf8               myName\n-  #387 = Utf8               otherName\n-  #388 = Utf8               myComment\n-  #389 = Utf8               otherComment\n-  #390 = Utf8               setVersionMadeBy\n-  #391 = Utf8               setVersionRequired\n-  #392 = Utf8               getVersionRequired\n-  #393 = Utf8               getVersionMadeBy\n-  #394 = Utf8               getRawFlag\n-  #395 = Utf8               setRawFlag\n-  #396 = Utf8               getNameSource\n-  #397 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #398 = Utf8               setNameSource\n-  #399 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n-  #400 = Utf8               getCommentSource\n-  #401 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #402 = Utf8               setCommentSource\n-  #403 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n-  #404 = Utf8               getDiskNumberStart\n-  #405 = Utf8               setDiskNumberStart\n-  #406 = Utf8               copyOf\n-  #407 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #408 = Utf8               src\n-  #409 = Utf8               length\n-  #410 = Utf8               cpy\n-  #411 = Utf8               lambda$findMatching$0\n-  #412 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #413 = Utf8               <clinit>\n-  #414 = Utf8               SourceFile\n-  #415 = Utf8               ZipArchiveEntry.java\n-  #416 = NameAndType        #223:#224     // \"<init>\":(Ljava/lang/String;)V\n-  #417 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #418 = NameAndType        #192:#182     // method:I\n-  #419 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #420 = NameAndType        #193:#194     // size:J\n-  #421 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #422 = NameAndType        #198:#182     // platform:I\n-  #423 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-  #424 = NameAndType        #223:#239     // \"<init>\":()V\n-  #425 = NameAndType        #210:#211     // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #426 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n-  #427 = NameAndType        #212:#194     // localHeaderOffset:J\n-  #428 = NameAndType        #213:#194     // dataOffset:J\n-  #429 = NameAndType        #595:#217     // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #430 = NameAndType        #216:#217     // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-  #431 = NameAndType        #596:#219     // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #432 = NameAndType        #218:#219     // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-  #433 = NameAndType        #356:#224     // setName:(Ljava/lang/String;)V\n-  #434 = NameAndType        #223:#230     // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n-  #435 = NameAndType        #353:#354     // getName:()Ljava/lang/String;\n-  #436 = NameAndType        #597:#351     // getExtra:()[B\n-  #437 = NameAndType        #598:#599     // BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #438 = Class              #600          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #439 = NameAndType        #601:#602     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #440 = NameAndType        #281:#282     // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #441 = NameAndType        #344:#239     // setExtra:()V\n-  #442 = NameAndType        #261:#262     // getMethod:()I\n-  #443 = NameAndType        #263:#264     // setMethod:(I)V\n-  #444 = NameAndType        #357:#269     // getSize:()J\n-  #445 = NameAndType        #265:#262     // getInternalAttributes:()I\n-  #446 = NameAndType        #266:#264     // setInternalAttributes:(I)V\n-  #447 = NameAndType        #268:#269     // getExternalAttributes:()J\n-  #448 = NameAndType        #270:#271     // setExternalAttributes:(J)V\n-  #449 = NameAndType        #311:#292     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #450 = NameAndType        #277:#262     // getPlatform:()I\n-  #451 = NameAndType        #278:#264     // setPlatform:(I)V\n-  #452 = NameAndType        #368:#369     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-  #453 = NameAndType        #258:#259     // clone:()Ljava/lang/Object;\n-  #454 = NameAndType        #370:#371     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n-  #455 = Utf8\n-  #456 = NameAndType        #355:#276     // isDirectory:()Z\n-  #457 = Utf8               /\n-  #458 = NameAndType        #603:#604     // endsWith:(Ljava/lang/String;)Z\n-  #459 = Utf8               java/lang/StringBuilder\n-  #460 = NameAndType        #605:#606     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #461 = NameAndType        #607:#354     // toString:()Ljava/lang/String;\n-  #462 = NameAndType        #608:#276     // isFile:()Z\n-  #463 = NameAndType        #409:#269     // length:()J\n-  #464 = NameAndType        #358:#271     // setSize:(J)V\n-  #465 = NameAndType        #609:#269     // lastModified:()J\n-  #466 = NameAndType        #254:#271     // setTime:(J)V\n-  #467 = Class              #610          // java/nio/file/Files\n-  #468 = NameAndType        #355:#611     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #469 = NameAndType        #612:#611     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #470 = NameAndType        #193:#613     // size:(Ljava/nio/file/Path;)J\n-  #471 = NameAndType        #614:#615     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #472 = NameAndType        #254:#255     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n-  #473 = Class              #616          // java/nio/file/attribute/FileTime\n-  #474 = NameAndType        #617:#269     // toMillis:()J\n-  #475 = Utf8               java/lang/IllegalArgumentException\n-  #476 = Utf8               ZIP compression method can not be negative:\n-  #477 = NameAndType        #605:#618     // append:(I)Ljava/lang/StringBuilder;\n-  #478 = NameAndType        #195:#182     // internalAttributes:I\n-  #479 = NameAndType        #200:#194     // externalAttributes:J\n-  #480 = NameAndType        #274:#262     // getUnixMode:()I\n-  #481 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #482 = NameAndType        #201:#182     // alignment:I\n-  #483 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-  #484 = NameAndType        #204:#205     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-  #485 = Utf8               java/util/ArrayList\n-  #486 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-  #487 = NameAndType        #619:#383     // add:(Ljava/lang/Object;)Z\n-  #488 = NameAndType        #620:#203     // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #489 = NameAndType        #621:#622     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #490 = NameAndType        #202:#203     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #491 = NameAndType        #309:#292     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #492 = NameAndType        #315:#292     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #493 = NameAndType        #291:#293     // getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #494 = NameAndType        #623:#599     // ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #495 = Class              #624          // java/util/Arrays\n-  #496 = NameAndType        #625:#626     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #497 = NameAndType        #223:#627     // \"<init>\":(Ljava/util/Collection;)V\n-  #498 = NameAndType        #352:#351     // getCentralDirectoryExtra:()[B\n-  #499 = NameAndType        #628:#629     // iterator:()Ljava/util/Iterator;\n-  #500 = NameAndType        #630:#276     // hasNext:()Z\n-  #501 = NameAndType        #631:#259     // next:()Ljava/lang/Object;\n-  #502 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #503 = NameAndType        #317:#318     // findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #504 = NameAndType        #632:#633     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #505 = NameAndType        #322:#323     // findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #506 = NameAndType        #634:#351     // getCentralDirectoryData:()[B\n-  #507 = NameAndType        #635:#636     // parseFromCentralDirectoryData:([BII)V\n-  #508 = NameAndType        #637:#383     // remove:(Ljava/lang/Object;)Z\n-  #509 = NameAndType        #638:#639     // addAll:(Ljava/util/Collection;)Z\n-  #510 = NameAndType        #308:#292     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #511 = NameAndType        #406:#407     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #512 = NameAndType        #314:#292     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #513 = NameAndType        #312:#292     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #514 = NameAndType        #640:#641     // stream:()Ljava/util/stream/Stream;\n-  #515 = Class              #642          // java/util/Objects\n-  #516 = NameAndType        #643:#644     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #517 = Utf8               BootstrapMethods\n-  #518 = MethodHandle       6:#645        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #519 = MethodType         #383          //  (Ljava/lang/Object;)Z\n-  #520 = MethodHandle       5:#646        // REF_invokeVirtual java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-  #521 = MethodType         #647          //  (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #522 = NameAndType        #648:#649     // test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n-  #523 = Class              #650          // java/util/stream/Stream\n-  #524 = NameAndType        #651:#652     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #525 = NameAndType        #653:#654     // findFirst:()Ljava/util/Optional;\n-  #526 = Class              #655          // java/util/Optional\n-  #527 = NameAndType        #656:#644     // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #528 = MethodHandle       6:#657        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #529 = NameAndType        #648:#658     // test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n-  #530 = NameAndType        #340:#341     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #531 = NameAndType        #333:#334     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #532 = Class              #659          // java/lang/System\n-  #533 = NameAndType        #660:#661     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #534 = Utf8               java/util/NoSuchElementException\n-  #535 = NameAndType        #382:#383     // equals:(Ljava/lang/Object;)Z\n-  #536 = NameAndType        #193:#262     // size:()I\n-  #537 = NameAndType        #372:#373     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-  #538 = Utf8               java/util/zip/ZipException\n-  #539 = Utf8               Error parsing extra fields for entry:\n-  #540 = Utf8                -\n-  #541 = NameAndType        #662:#354     // getMessage:()Ljava/lang/String;\n-  #542 = NameAndType        #223:#663     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #543 = NameAndType        #664:#665     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #544 = NameAndType        #344:#345     // setExtra:([B)V\n-  #545 = Class              #666          // org/apache/commons/compress/utils/ByteUtils\n-  #546 = NameAndType        #667:#209     // EMPTY_BYTE_ARRAY:[B\n-  #547 = NameAndType        #668:#665     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #548 = NameAndType        #206:#207     // name:Ljava/lang/String;\n-  #549 = NameAndType        #669:#670     // contains:(Ljava/lang/CharSequence;)Z\n-  #550 = NameAndType        #671:#672     // replace:(CC)Ljava/lang/String;\n-  #551 = Utf8               Invalid entry size\n-  #552 = NameAndType        #208:#209     // rawName:[B\n-  #553 = NameAndType        #406:#673     // copyOf:([BI)[B\n-  #554 = NameAndType        #214:#215     // isStreamContiguous:Z\n-  #555 = NameAndType        #367:#262     // hashCode:()I\n-  #556 = NameAndType        #327:#328     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n-  #557 = NameAndType        #674:#351     // getLocalFileDataData:()[B\n-  #558 = NameAndType        #675:#636     // parseFromLocalFileData:([BII)V\n-  #559 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #560 = NameAndType        #676:#334     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #561 = NameAndType        #677:#345     // setLocalFileDataData:([B)V\n-  #562 = NameAndType        #678:#345     // setCentralDirectoryData:([B)V\n-  #563 = Utf8               java/util/Date\n-  #564 = NameAndType        #679:#269     // getTime:()J\n-  #565 = NameAndType        #223:#271     // \"<init>\":(J)V\n-  #566 = Class              #680          // java/lang/Object\n-  #567 = NameAndType        #681:#682     // getClass:()Ljava/lang/Class;\n-  #568 = NameAndType        #382:#683     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #569 = NameAndType        #684:#354     // getComment:()Ljava/lang/String;\n-  #570 = NameAndType        #685:#269     // getCrc:()J\n-  #571 = NameAndType        #686:#269     // getCompressedSize:()J\n-  #572 = NameAndType        #382:#687     // equals:([B[B)Z\n-  #573 = NameAndType        #350:#351     // getLocalFileDataExtra:()[B\n-  #574 = NameAndType        #197:#182     // versionMadeBy:I\n-  #575 = NameAndType        #196:#182     // versionRequired:I\n-  #576 = NameAndType        #199:#182     // rawFlag:I\n-  #577 = NameAndType        #220:#194     // diskNumberStart:J\n-  #578 = Class              #688          // java/lang/Math\n-  #579 = NameAndType        #689:#690     // min:(II)I\n-  #580 = NameAndType        #221:#222     // EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #581 = Utf8               java/util/zip/ZipEntry\n-  #582 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  #583 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n-  #584 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n-  #585 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n-  #586 = Utf8               java/io/File\n-  #587 = Utf8               java/lang/String\n-  #588 = Utf8               java/nio/file/Path\n-  #589 = Utf8               java/io/IOException\n-  #590 = Utf8               java/util/List\n-  #591 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #592 = Utf8               java/util/Iterator\n-  #593 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #594 = Utf8               java/lang/RuntimeException\n-  #595 = Utf8               NAME\n-  #596 = Utf8               COMMENT\n-  #597 = Utf8               getExtra\n-  #598 = Utf8               BEST_EFFORT\n-  #599 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-  #600 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #601 = Utf8               parse\n-  #602 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #603 = Utf8               endsWith\n-  #604 = Utf8               (Ljava/lang/String;)Z\n-  #605 = Utf8               append\n-  #606 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #607 = Utf8               toString\n-  #608 = Utf8               isFile\n-  #609 = Utf8               lastModified\n-  #610 = Utf8               java/nio/file/Files\n-  #611 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #612 = Utf8               isRegularFile\n-  #613 = Utf8               (Ljava/nio/file/Path;)J\n-  #614 = Utf8               getLastModifiedTime\n-  #615 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #616 = Utf8               java/nio/file/attribute/FileTime\n-  #617 = Utf8               toMillis\n-  #618 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #619 = Utf8               add\n-  #620 = Utf8               EMPTY_ZIP_EXTRA_FIELD_ARRAY\n-  #621 = Utf8               toArray\n-  #622 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #623 = Utf8               ONLY_PARSEABLE_LENIENT\n-  #624 = Utf8               java/util/Arrays\n-  #625 = Utf8               asList\n-  #626 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #627 = Utf8               (Ljava/util/Collection;)V\n-  #628 = Utf8               iterator\n-  #629 = Utf8               ()Ljava/util/Iterator;\n-  #630 = Utf8               hasNext\n-  #631 = Utf8               next\n-  #632 = Utf8               getHeaderId\n-  #633 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #634 = Utf8               getCentralDirectoryData\n-  #635 = Utf8               parseFromCentralDirectoryData\n-  #636 = Utf8               ([BII)V\n-  #637 = Utf8               remove\n-  #638 = Utf8               addAll\n-  #639 = Utf8               (Ljava/util/Collection;)Z\n-  #640 = Utf8               stream\n-  #641 = Utf8               ()Ljava/util/stream/Stream;\n-  #642 = Utf8               java/util/Objects\n-  #643 = Utf8               requireNonNull\n-  #644 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #645 = Methodref          #691.#692     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #646 = Methodref          #693.#694     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-  #647 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #648 = Utf8               test\n-  #649 = Utf8               (Ljava/lang/Class;)Ljava/util/function/Predicate;\n-  #650 = Utf8               java/util/stream/Stream\n-  #651 = Utf8               filter\n-  #652 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #653 = Utf8               findFirst\n-  #654 = Utf8               ()Ljava/util/Optional;\n-  #655 = Utf8               java/util/Optional\n-  #656 = Utf8               orElse\n-  #657 = Methodref          #8.#695       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #658 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n-  #659 = Utf8               java/lang/System\n-  #660 = Utf8               arraycopy\n-  #661 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #662 = Utf8               getMessage\n-  #663 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #664 = Utf8               mergeLocalFileDataData\n-  #665 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #666 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #667 = Utf8               EMPTY_BYTE_ARRAY\n-  #668 = Utf8               mergeCentralDirectoryData\n-  #669 = Utf8               contains\n-  #670 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #671 = Utf8               replace\n-  #672 = Utf8               (CC)Ljava/lang/String;\n-  #673 = Utf8               ([BI)[B\n-  #674 = Utf8               getLocalFileDataData\n-  #675 = Utf8               parseFromLocalFileData\n-  #676 = Utf8               setHeaderId\n-  #677 = Utf8               setLocalFileDataData\n-  #678 = Utf8               setCentralDirectoryData\n-  #679 = Utf8               getTime\n-  #680 = Utf8               java/lang/Object\n-  #681 = Utf8               getClass\n-  #682 = Utf8               ()Ljava/lang/Class;\n-  #683 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #684 = Utf8               getComment\n-  #685 = Utf8               getCrc\n-  #686 = Utf8               getCompressedSize\n-  #687 = Utf8               ([B[B)Z\n-  #688 = Utf8               java/lang/Math\n-  #689 = Utf8               min\n-  #690 = Utf8               (II)I\n-  #691 = Class              #696          // java/lang/invoke/LambdaMetafactory\n-  #692 = NameAndType        #697:#700     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #693 = Class              #701          // java/lang/Class\n-  #694 = NameAndType        #702:#383     // isInstance:(Ljava/lang/Object;)Z\n-  #695 = NameAndType        #411:#412     // lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  #696 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #697 = Utf8               metafactory\n-  #698 = Class              #704          // java/lang/invoke/MethodHandles$Lookup\n-  #699 = Utf8               Lookup\n-  #700 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #701 = Utf8               java/lang/Class\n-  #702 = Utf8               isInstance\n-  #703 = Class              #705          // java/lang/invoke/MethodHandles\n-  #704 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #705 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n+    #2 = Class              #4            // java/util/zip/ZipEntry\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;)V\n+    #4 = Utf8               java/util/zip/ZipEntry\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/lang/String;)V\n+    #7 = Class              #8            // org/apache/commons/compress/archivers/zip/ZipMethod\n+    #8 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+    #9 = Fieldref           #10.#11       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.method:I\n+   #10 = Class              #12           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #11 = NameAndType        #13:#14       // method:I\n+   #12 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+   #13 = Utf8               method\n+   #14 = Utf8               I\n+   #15 = Class              #16           // org/apache/commons/compress/archivers/ArchiveEntry\n+   #16 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+   #17 = Long               -1l\n+   #19 = Fieldref           #10.#20       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.size:J\n+   #20 = NameAndType        #21:#22       // size:J\n+   #21 = Utf8               size\n+   #22 = Utf8               J\n+   #23 = Fieldref           #10.#24       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.platform:I\n+   #24 = NameAndType        #25:#14       // platform:I\n+   #25 = Utf8               platform\n+   #26 = Class              #27           // org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #27 = Utf8               org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+   #28 = Methodref          #26.#29       // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+   #29 = NameAndType        #5:#30        // \"<init>\":()V\n+   #30 = Utf8               ()V\n+   #31 = Fieldref           #10.#32       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #32 = NameAndType        #33:#34       // gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #33 = Utf8               gpb\n+   #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+   #35 = Class              #36           // org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #36 = Utf8               org/apache/commons/compress/archivers/EntryStreamOffsets\n+   #37 = Fieldref           #10.#38       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.localHeaderOffset:J\n+   #38 = NameAndType        #39:#22       // localHeaderOffset:J\n+   #39 = Utf8               localHeaderOffset\n+   #40 = Fieldref           #10.#41       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.dataOffset:J\n+   #41 = NameAndType        #42:#22       // dataOffset:J\n+   #42 = Utf8               dataOffset\n+   #43 = Fieldref           #44.#45       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #44 = Class              #46           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+   #45 = NameAndType        #47:#48       // NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #46 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource\n+   #47 = Utf8               NAME\n+   #48 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #49 = Fieldref           #10.#50       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #50 = NameAndType        #51:#48       // nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+   #51 = Utf8               nameSource\n+   #52 = Fieldref           #53.#54       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #53 = Class              #55           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #54 = NameAndType        #56:#57       // COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #55 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource\n+   #56 = Utf8               COMMENT\n+   #57 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #58 = Fieldref           #10.#59       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #59 = NameAndType        #60:#57       // commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+   #60 = Utf8               commentSource\n+   #61 = Methodref          #10.#62       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setName:(Ljava/lang/String;)V\n+   #62 = NameAndType        #63:#6        // setName:(Ljava/lang/String;)V\n+   #63 = Utf8               setName\n+   #64 = Methodref          #2.#65        // java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #65 = NameAndType        #5:#66        // \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+   #66 = Utf8               (Ljava/util/zip/ZipEntry;)V\n+   #67 = Methodref          #2.#68        // java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+   #68 = NameAndType        #69:#70       // getName:()Ljava/lang/String;\n+   #69 = Utf8               getName\n+   #70 = Utf8               ()Ljava/lang/String;\n+   #71 = Methodref          #2.#72        // java/util/zip/ZipEntry.getExtra:()[B\n+   #72 = NameAndType        #73:#74       // getExtra:()[B\n+   #73 = Utf8               getExtra\n+   #74 = Utf8               ()[B\n+   #75 = Fieldref           #76.#77       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #76 = Class              #78           // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n+   #77 = NameAndType        #79:#80       // BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode\n+   #79 = Utf8               BEST_EFFORT\n+   #80 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+   #81 = Methodref          #82.#83       // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #82 = Class              #84           // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+   #83 = NameAndType        #85:#86       // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #84 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+   #85 = Utf8               parse\n+   #86 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #87 = Methodref          #10.#88       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #88 = NameAndType        #89:#90       // setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #89 = Utf8               setExtraFields\n+   #90 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+   #91 = Methodref          #10.#92       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExtra:()V\n+   #92 = NameAndType        #93:#30       // setExtra:()V\n+   #93 = Utf8               setExtra\n+   #94 = Methodref          #2.#95        // java/util/zip/ZipEntry.getMethod:()I\n+   #95 = NameAndType        #96:#97       // getMethod:()I\n+   #96 = Utf8               getMethod\n+   #97 = Utf8               ()I\n+   #98 = Methodref          #10.#99       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setMethod:(I)V\n+   #99 = NameAndType        #100:#101     // setMethod:(I)V\n+  #100 = Utf8               setMethod\n+  #101 = Utf8               (I)V\n+  #102 = Methodref          #2.#103       // java/util/zip/ZipEntry.getSize:()J\n+  #103 = NameAndType        #104:#105     // getSize:()J\n+  #104 = Utf8               getSize\n+  #105 = Utf8               ()J\n+  #106 = Methodref          #10.#65       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+  #107 = Methodref          #10.#108      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getInternalAttributes:()I\n+  #108 = NameAndType        #109:#97      // getInternalAttributes:()I\n+  #109 = Utf8               getInternalAttributes\n+  #110 = Methodref          #10.#111      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setInternalAttributes:(I)V\n+  #111 = NameAndType        #112:#101     // setInternalAttributes:(I)V\n+  #112 = Utf8               setInternalAttributes\n+  #113 = Methodref          #10.#114      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExternalAttributes:()J\n+  #114 = NameAndType        #115:#105     // getExternalAttributes:()J\n+  #115 = Utf8               getExternalAttributes\n+  #116 = Methodref          #10.#117      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setExternalAttributes:(J)V\n+  #117 = NameAndType        #118:#119     // setExternalAttributes:(J)V\n+  #118 = Utf8               setExternalAttributes\n+  #119 = Utf8               (J)V\n+  #120 = Methodref          #10.#121      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #121 = NameAndType        #122:#123     // getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #122 = Utf8               getAllExtraFieldsNoCopy\n+  #123 = Utf8               ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #124 = Methodref          #10.#125      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getPlatform:()I\n+  #125 = NameAndType        #126:#97      // getPlatform:()I\n+  #126 = Utf8               getPlatform\n+  #127 = Methodref          #10.#128      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setPlatform:(I)V\n+  #128 = NameAndType        #129:#101     // setPlatform:(I)V\n+  #129 = Utf8               setPlatform\n+  #130 = Methodref          #10.#131      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #131 = NameAndType        #132:#133     // getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #132 = Utf8               getGeneralPurposeBit\n+  #133 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+  #134 = Methodref          #26.#135      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+  #135 = NameAndType        #136:#137     // clone:()Ljava/lang/Object;\n+  #136 = Utf8               clone\n+  #137 = Utf8               ()Ljava/lang/Object;\n+  #138 = Methodref          #10.#139      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #139 = NameAndType        #140:#141     // setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #140 = Utf8               setGeneralPurposeBit\n+  #141 = Utf8               (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+  #142 = String             #143          //\n+  #143 = Utf8\n+  #144 = Methodref          #10.#3        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":(Ljava/lang/String;)V\n+  #145 = Methodref          #146.#147     // java/io/File.isDirectory:()Z\n+  #146 = Class              #148          // java/io/File\n+  #147 = NameAndType        #149:#150     // isDirectory:()Z\n+  #148 = Utf8               java/io/File\n+  #149 = Utf8               isDirectory\n+  #150 = Utf8               ()Z\n+  #151 = String             #152          // /\n+  #152 = Utf8               /\n+  #153 = Methodref          #154.#155     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #154 = Class              #156          // java/lang/String\n+  #155 = NameAndType        #157:#158     // endsWith:(Ljava/lang/String;)Z\n+  #156 = Utf8               java/lang/String\n+  #157 = Utf8               endsWith\n+  #158 = Utf8               (Ljava/lang/String;)Z\n+  #159 = Class              #160          // java/lang/StringBuilder\n+  #160 = Utf8               java/lang/StringBuilder\n+  #161 = Methodref          #159.#29      // java/lang/StringBuilder.\"<init>\":()V\n+  #162 = Methodref          #159.#163     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #163 = NameAndType        #164:#165     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #164 = Utf8               append\n+  #165 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #166 = Methodref          #159.#167     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #167 = NameAndType        #168:#70      // toString:()Ljava/lang/String;\n+  #168 = Utf8               toString\n+  #169 = Methodref          #146.#170     // java/io/File.isFile:()Z\n+  #170 = NameAndType        #171:#150     // isFile:()Z\n+  #171 = Utf8               isFile\n+  #172 = Methodref          #146.#173     // java/io/File.length:()J\n+  #173 = NameAndType        #174:#105     // length:()J\n+  #174 = Utf8               length\n+  #175 = Methodref          #10.#176      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setSize:(J)V\n+  #176 = NameAndType        #177:#119     // setSize:(J)V\n+  #177 = Utf8               setSize\n+  #178 = Methodref          #146.#179     // java/io/File.lastModified:()J\n+  #179 = NameAndType        #180:#105     // lastModified:()J\n+  #180 = Utf8               lastModified\n+  #181 = Methodref          #10.#182      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(J)V\n+  #182 = NameAndType        #183:#119     // setTime:(J)V\n+  #183 = Utf8               setTime\n+  #184 = Methodref          #185.#186     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #185 = Class              #187          // java/nio/file/Files\n+  #186 = NameAndType        #149:#188     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #187 = Utf8               java/nio/file/Files\n+  #188 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #189 = Methodref          #185.#190     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #190 = NameAndType        #191:#188     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #191 = Utf8               isRegularFile\n+  #192 = Methodref          #185.#193     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+  #193 = NameAndType        #21:#194      // size:(Ljava/nio/file/Path;)J\n+  #194 = Utf8               (Ljava/nio/file/Path;)J\n+  #195 = Methodref          #185.#196     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #196 = NameAndType        #197:#198     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #197 = Utf8               getLastModifiedTime\n+  #198 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #199 = Methodref          #10.#200      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.setTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #200 = NameAndType        #183:#201     // setTime:(Ljava/nio/file/attribute/FileTime;)V\n+  #201 = Utf8               (Ljava/nio/file/attribute/FileTime;)V\n+  #202 = Methodref          #203.#204     // java/nio/file/attribute/FileTime.toMillis:()J\n+  #203 = Class              #205          // java/nio/file/attribute/FileTime\n+  #204 = NameAndType        #206:#105     // toMillis:()J\n+  #205 = Utf8               java/nio/file/attribute/FileTime\n+  #206 = Utf8               toMillis\n+  #207 = Methodref          #2.#135       // java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+  #208 = Class              #209          // java/lang/IllegalArgumentException\n+  #209 = Utf8               java/lang/IllegalArgumentException\n+  #210 = String             #211          // ZIP compression method can not be negative:\n+  #211 = Utf8               ZIP compression method can not be negative:\n+  #212 = Methodref          #159.#213     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #213 = NameAndType        #164:#214     // append:(I)Ljava/lang/StringBuilder;\n+  #214 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #215 = Methodref          #208.#3       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #216 = Fieldref           #10.#217      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.internalAttributes:I\n+  #217 = NameAndType        #218:#14      // internalAttributes:I\n+  #218 = Utf8               internalAttributes\n+  #219 = Fieldref           #10.#220      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.externalAttributes:J\n+  #220 = NameAndType        #221:#22      // externalAttributes:J\n+  #221 = Utf8               externalAttributes\n+  #222 = Methodref          #10.#147      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isDirectory:()Z\n+  #223 = Long               65535l\n+  #225 = Methodref          #10.#226      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnixMode:()I\n+  #226 = NameAndType        #227:#97      // getUnixMode:()I\n+  #227 = Utf8               getUnixMode\n+  #228 = Class              #229          // org/apache/commons/compress/archivers/zip/UnixStat\n+  #229 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #230 = Integer            61440\n+  #231 = Integer            40960\n+  #232 = Fieldref           #10.#233      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.alignment:I\n+  #233 = NameAndType        #234:#14      // alignment:I\n+  #234 = Utf8               alignment\n+  #235 = Integer            65535\n+  #236 = String             #237          // Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+  #237 = Utf8               Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+  #238 = Fieldref           #10.#239      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #239 = NameAndType        #240:#241     // unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #240 = Utf8               unparseableExtra\n+  #241 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #242 = Class              #243          // java/util/ArrayList\n+  #243 = Utf8               java/util/ArrayList\n+  #244 = Methodref          #242.#29      // java/util/ArrayList.\"<init>\":()V\n+  #245 = Class              #246          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #246 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #247 = InterfaceMethodref #248.#249     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #248 = Class              #250          // java/util/List\n+  #249 = NameAndType        #251:#252     // add:(Ljava/lang/Object;)Z\n+  #250 = Utf8               java/util/List\n+  #251 = Utf8               add\n+  #252 = Utf8               (Ljava/lang/Object;)Z\n+  #253 = Fieldref           #82.#254      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #254 = NameAndType        #255:#256     // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #255 = Utf8               EMPTY_ZIP_EXTRA_FIELD_ARRAY\n+  #256 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #257 = InterfaceMethodref #248.#258     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #258 = NameAndType        #259:#260     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #259 = Utf8               toArray\n+  #260 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #261 = Class              #256          // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+  #262 = Fieldref           #10.#263      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #263 = NameAndType        #264:#256     // extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #264 = Utf8               extraFields\n+  #265 = Methodref          #10.#266      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #266 = NameAndType        #267:#123     // getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #267 = Utf8               getParseableExtraFields\n+  #268 = Methodref          #10.#269      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #269 = NameAndType        #270:#123     // getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #270 = Utf8               getAllExtraFields\n+  #271 = Methodref          #10.#272      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #272 = NameAndType        #273:#274     // getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #273 = Utf8               getExtraFields\n+  #274 = Utf8               (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #275 = Fieldref           #76.#276      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #276 = NameAndType        #277:#80      // ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+  #277 = Utf8               ONLY_PARSEABLE_LENIENT\n+  #278 = Methodref          #10.#72       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtra:()[B\n+  #279 = Methodref          #280.#281     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #280 = Class              #282          // java/util/Arrays\n+  #281 = NameAndType        #283:#284     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #282 = Utf8               java/util/Arrays\n+  #283 = Utf8               asList\n+  #284 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #285 = Methodref          #242.#286     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #286 = NameAndType        #5:#287       // \"<init>\":(Ljava/util/Collection;)V\n+  #287 = Utf8               (Ljava/util/Collection;)V\n+  #288 = Methodref          #10.#289      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCentralDirectoryExtra:()[B\n+  #289 = NameAndType        #290:#74      // getCentralDirectoryExtra:()[B\n+  #290 = Utf8               getCentralDirectoryExtra\n+  #291 = InterfaceMethodref #248.#292     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #292 = NameAndType        #293:#294     // iterator:()Ljava/util/Iterator;\n+  #293 = Utf8               iterator\n+  #294 = Utf8               ()Ljava/util/Iterator;\n+  #295 = InterfaceMethodref #296.#297     // java/util/Iterator.hasNext:()Z\n+  #296 = Class              #298          // java/util/Iterator\n+  #297 = NameAndType        #299:#150     // hasNext:()Z\n+  #298 = Utf8               java/util/Iterator\n+  #299 = Utf8               hasNext\n+  #300 = InterfaceMethodref #296.#301     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #301 = NameAndType        #302:#137     // next:()Ljava/lang/Object;\n+  #302 = Utf8               next\n+  #303 = Class              #304          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #304 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #305 = Methodref          #10.#306      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #306 = NameAndType        #307:#308     // findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #307 = Utf8               findUnparseable\n+  #308 = Utf8               (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #309 = InterfaceMethodref #303.#310     // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #310 = NameAndType        #311:#312     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #311 = Utf8               getHeaderId\n+  #312 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #313 = Methodref          #10.#314      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #314 = NameAndType        #315:#316     // findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #315 = Utf8               findMatching\n+  #316 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #317 = InterfaceMethodref #303.#318     // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+  #318 = NameAndType        #319:#74      // getCentralDirectoryData:()[B\n+  #319 = Utf8               getCentralDirectoryData\n+  #320 = InterfaceMethodref #303.#321     // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+  #321 = NameAndType        #322:#323     // parseFromCentralDirectoryData:([BII)V\n+  #322 = Utf8               parseFromCentralDirectoryData\n+  #323 = Utf8               ([BII)V\n+  #324 = InterfaceMethodref #248.#325     // java/util/List.remove:(Ljava/lang/Object;)Z\n+  #325 = NameAndType        #326:#252     // remove:(Ljava/lang/Object;)Z\n+  #326 = Utf8               remove\n+  #327 = InterfaceMethodref #248.#328     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #328 = NameAndType        #329:#330     // addAll:(Ljava/util/Collection;)Z\n+  #329 = Utf8               addAll\n+  #330 = Utf8               (Ljava/util/Collection;)Z\n+  #331 = Methodref          #10.#332      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #332 = NameAndType        #333:#123     // getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #333 = Utf8               getParseableExtraFieldsNoCopy\n+  #334 = Methodref          #10.#335      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #335 = NameAndType        #336:#337     // copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #336 = Utf8               copyOf\n+  #337 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #338 = Methodref          #10.#339      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #339 = NameAndType        #340:#123     // getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #340 = Utf8               getUnparseableOnly\n+  #341 = Methodref          #10.#342      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #342 = NameAndType        #343:#123     // getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #343 = Utf8               getMergedFields\n+  #344 = InterfaceMethodref #248.#345     // java/util/List.stream:()Ljava/util/stream/Stream;\n+  #345 = NameAndType        #346:#347     // stream:()Ljava/util/stream/Stream;\n+  #346 = Utf8               stream\n+  #347 = Utf8               ()Ljava/util/stream/Stream;\n+  #348 = Methodref          #349.#350     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #349 = Class              #351          // java/util/Objects\n+  #350 = NameAndType        #352:#353     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #351 = Utf8               java/util/Objects\n+  #352 = Utf8               requireNonNull\n+  #353 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #354 = InvokeDynamic      #0:#355       // #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n+  #355 = NameAndType        #356:#357     // test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n+  #356 = Utf8               test\n+  #357 = Utf8               (Ljava/lang/Class;)Ljava/util/function/Predicate;\n+  #358 = InterfaceMethodref #359.#360     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #359 = Class              #361          // java/util/stream/Stream\n+  #360 = NameAndType        #362:#363     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #361 = Utf8               java/util/stream/Stream\n+  #362 = Utf8               filter\n+  #363 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #364 = InterfaceMethodref #359.#365     // java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+  #365 = NameAndType        #366:#367     // findFirst:()Ljava/util/Optional;\n+  #366 = Utf8               findFirst\n+  #367 = Utf8               ()Ljava/util/Optional;\n+  #368 = Methodref          #369.#370     // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #369 = Class              #371          // java/util/Optional\n+  #370 = NameAndType        #372:#353     // orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #371 = Utf8               java/util/Optional\n+  #372 = Utf8               orElse\n+  #373 = InvokeDynamic      #1:#374       // #1:test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n+  #374 = NameAndType        #356:#375     // test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n+  #375 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n+  #376 = Methodref          #10.#377      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #377 = NameAndType        #378:#379     // getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #378 = Utf8               getExtraField\n+  #379 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #380 = Methodref          #10.#381      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #381 = NameAndType        #382:#383     // removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #382 = Utf8               removeExtraField\n+  #383 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #384 = Methodref          #385.#386     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #385 = Class              #387          // java/lang/System\n+  #386 = NameAndType        #388:#389     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #387 = Utf8               java/lang/System\n+  #388 = Utf8               arraycopy\n+  #389 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #390 = Class              #391          // java/util/NoSuchElementException\n+  #391 = Utf8               java/util/NoSuchElementException\n+  #392 = Methodref          #390.#29      // java/util/NoSuchElementException.\"<init>\":()V\n+  #393 = Methodref          #394.#395     // org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+  #394 = Class              #396          // org/apache/commons/compress/archivers/zip/ZipShort\n+  #395 = NameAndType        #397:#252     // equals:(Ljava/lang/Object;)Z\n+  #396 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #397 = Utf8               equals\n+  #398 = InterfaceMethodref #248.#399     // java/util/List.size:()I\n+  #399 = NameAndType        #21:#97       // size:()I\n+  #400 = Methodref          #10.#401      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #401 = NameAndType        #402:#403     // mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #402 = Utf8               mergeExtraFields\n+  #403 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+  #404 = Class              #405          // java/util/zip/ZipException\n+  #405 = Utf8               java/util/zip/ZipException\n+  #406 = String             #407          // Error parsing extra fields for entry:\n+  #407 = Utf8               Error parsing extra fields for entry:\n+  #408 = Methodref          #10.#68       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+  #409 = String             #410          //  -\n+  #410 = Utf8                -\n+  #411 = Methodref          #404.#412     // java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+  #412 = NameAndType        #413:#70      // getMessage:()Ljava/lang/String;\n+  #413 = Utf8               getMessage\n+  #414 = Methodref          #208.#415     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #415 = NameAndType        #5:#416       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #416 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #417 = Methodref          #82.#418      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #418 = NameAndType        #419:#420     // mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #419 = Utf8               mergeLocalFileDataData\n+  #420 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #421 = Methodref          #2.#422       // java/util/zip/ZipEntry.setExtra:([B)V\n+  #422 = NameAndType        #93:#423      // setExtra:([B)V\n+  #423 = Utf8               ([B)V\n+  #424 = Fieldref           #425.#426     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+  #425 = Class              #427          // org/apache/commons/compress/utils/ByteUtils\n+  #426 = NameAndType        #428:#429     // EMPTY_BYTE_ARRAY:[B\n+  #427 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #428 = Utf8               EMPTY_BYTE_ARRAY\n+  #429 = Utf8               [B\n+  #430 = Methodref          #82.#431      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #431 = NameAndType        #432:#420     // mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #432 = Utf8               mergeCentralDirectoryData\n+  #433 = Fieldref           #10.#434      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.name:Ljava/lang/String;\n+  #434 = NameAndType        #435:#436     // name:Ljava/lang/String;\n+  #435 = Utf8               name\n+  #436 = Utf8               Ljava/lang/String;\n+  #437 = Methodref          #154.#438     // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #438 = NameAndType        #439:#440     // contains:(Ljava/lang/CharSequence;)Z\n+  #439 = Utf8               contains\n+  #440 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #441 = Methodref          #154.#442     // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #442 = NameAndType        #443:#444     // replace:(CC)Ljava/lang/String;\n+  #443 = Utf8               replace\n+  #444 = Utf8               (CC)Ljava/lang/String;\n+  #445 = String             #446          // Invalid entry size\n+  #446 = Utf8               Invalid entry size\n+  #447 = Fieldref           #10.#448      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawName:[B\n+  #448 = NameAndType        #449:#429     // rawName:[B\n+  #449 = Utf8               rawName\n+  #450 = Methodref          #280.#451     // java/util/Arrays.copyOf:([BI)[B\n+  #451 = NameAndType        #336:#452     // copyOf:([BI)[B\n+  #452 = Utf8               ([BI)[B\n+  #453 = Fieldref           #10.#454      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.isStreamContiguous:Z\n+  #454 = NameAndType        #455:#456     // isStreamContiguous:Z\n+  #455 = Utf8               isStreamContiguous\n+  #456 = Utf8               Z\n+  #457 = Methodref          #154.#458     // java/lang/String.hashCode:()I\n+  #458 = NameAndType        #459:#97      // hashCode:()I\n+  #459 = Utf8               hashCode\n+  #460 = Methodref          #10.#461      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #461 = NameAndType        #462:#463     // addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #462 = Utf8               addExtraField\n+  #463 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+  #464 = InterfaceMethodref #303.#465     // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+  #465 = NameAndType        #466:#74      // getLocalFileDataData:()[B\n+  #466 = Utf8               getLocalFileDataData\n+  #467 = InterfaceMethodref #303.#468     // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+  #468 = NameAndType        #469:#323     // parseFromLocalFileData:([BII)V\n+  #469 = Utf8               parseFromLocalFileData\n+  #470 = Class              #471          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #471 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #472 = Methodref          #470.#29      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+  #473 = Methodref          #470.#474     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #474 = NameAndType        #475:#383     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #475 = Utf8               setHeaderId\n+  #476 = Methodref          #470.#477     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+  #477 = NameAndType        #478:#423     // setLocalFileDataData:([B)V\n+  #478 = Utf8               setLocalFileDataData\n+  #479 = Methodref          #470.#480     // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+  #480 = NameAndType        #481:#423     // setCentralDirectoryData:([B)V\n+  #481 = Utf8               setCentralDirectoryData\n+  #482 = Class              #483          // java/util/Date\n+  #483 = Utf8               java/util/Date\n+  #484 = Methodref          #10.#485      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getTime:()J\n+  #485 = NameAndType        #486:#105     // getTime:()J\n+  #486 = Utf8               getTime\n+  #487 = Methodref          #482.#488     // java/util/Date.\"<init>\":(J)V\n+  #488 = NameAndType        #5:#119       // \"<init>\":(J)V\n+  #489 = Methodref          #490.#491     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #490 = Class              #492          // java/lang/Object\n+  #491 = NameAndType        #493:#494     // getClass:()Ljava/lang/Class;\n+  #492 = Utf8               java/lang/Object\n+  #493 = Utf8               getClass\n+  #494 = Utf8               ()Ljava/lang/Class;\n+  #495 = Methodref          #349.#496     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #496 = NameAndType        #397:#497     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #497 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #498 = Methodref          #10.#499      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getComment:()Ljava/lang/String;\n+  #499 = NameAndType        #500:#70      // getComment:()Ljava/lang/String;\n+  #500 = Utf8               getComment\n+  #501 = Methodref          #154.#395     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #502 = Methodref          #10.#95       // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #503 = Methodref          #10.#103      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getSize:()J\n+  #504 = Methodref          #10.#505      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCrc:()J\n+  #505 = NameAndType        #506:#105     // getCrc:()J\n+  #506 = Utf8               getCrc\n+  #507 = Methodref          #10.#508      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getCompressedSize:()J\n+  #508 = NameAndType        #509:#105     // getCompressedSize:()J\n+  #509 = Utf8               getCompressedSize\n+  #510 = Methodref          #280.#511     // java/util/Arrays.equals:([B[B)Z\n+  #511 = NameAndType        #397:#512     // equals:([B[B)Z\n+  #512 = Utf8               ([B[B)Z\n+  #513 = Methodref          #10.#514      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getLocalFileDataExtra:()[B\n+  #514 = NameAndType        #515:#74      // getLocalFileDataExtra:()[B\n+  #515 = Utf8               getLocalFileDataExtra\n+  #516 = Methodref          #26.#395      // org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+  #517 = Fieldref           #10.#518      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionMadeBy:I\n+  #518 = NameAndType        #519:#14      // versionMadeBy:I\n+  #519 = Utf8               versionMadeBy\n+  #520 = Fieldref           #10.#521      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.versionRequired:I\n+  #521 = NameAndType        #522:#14      // versionRequired:I\n+  #522 = Utf8               versionRequired\n+  #523 = Fieldref           #10.#524      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.rawFlag:I\n+  #524 = NameAndType        #525:#14      // rawFlag:I\n+  #525 = Utf8               rawFlag\n+  #526 = Fieldref           #10.#527      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.diskNumberStart:J\n+  #527 = NameAndType        #528:#22      // diskNumberStart:J\n+  #528 = Utf8               diskNumberStart\n+  #529 = Methodref          #530.#531     // java/lang/Math.min:(II)I\n+  #530 = Class              #532          // java/lang/Math\n+  #531 = NameAndType        #533:#534     // min:(II)I\n+  #532 = Utf8               java/lang/Math\n+  #533 = Utf8               min\n+  #534 = Utf8               (II)I\n+  #535 = Fieldref           #10.#536      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #536 = NameAndType        #537:#538     // EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #537 = Utf8               EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY\n+  #538 = Utf8               [Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #539 = Utf8               PLATFORM_UNIX\n+  #540 = Utf8               ConstantValue\n+  #541 = Integer            3\n+  #542 = Utf8               PLATFORM_FAT\n+  #543 = Integer            0\n+  #544 = Utf8               CRC_UNKNOWN\n+  #545 = Integer            -1\n+  #546 = Utf8               SHORT_MASK\n+  #547 = Utf8               SHORT_SHIFT\n+  #548 = Integer            16\n+  #549 = Utf8               Code\n+  #550 = Utf8               LineNumberTable\n+  #551 = Utf8               LocalVariableTable\n+  #552 = Utf8               this\n+  #553 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #554 = Utf8               entry\n+  #555 = Utf8               Ljava/util/zip/ZipEntry;\n+  #556 = Utf8               extra\n+  #557 = Utf8               StackMapTable\n+  #558 = Class              #429          // \"[B\"\n+  #559 = Utf8               Exceptions\n+  #560 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #561 = Utf8               other\n+  #562 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #563 = Utf8               inputFile\n+  #564 = Utf8               Ljava/io/File;\n+  #565 = Utf8               entryName\n+  #566 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+  #567 = Utf8               inputPath\n+  #568 = Utf8               Ljava/nio/file/Path;\n+  #569 = Utf8               options\n+  #570 = Utf8               [Ljava/nio/file/LinkOption;\n+  #571 = Class              #572          // java/nio/file/Path\n+  #572 = Utf8               java/nio/file/Path\n+  #573 = Class              #570          // \"[Ljava/nio/file/LinkOption;\"\n+  #574 = Class              #575          // java/io/IOException\n+  #575 = Utf8               java/io/IOException\n+  #576 = Utf8               fileTime\n+  #577 = Utf8               Ljava/nio/file/attribute/FileTime;\n+  #578 = Utf8               e\n+  #579 = Utf8               value\n+  #580 = Utf8               setUnixMode\n+  #581 = Utf8               mode\n+  #582 = Utf8               isUnixSymlink\n+  #583 = Utf8               getAlignment\n+  #584 = Utf8               setAlignment\n+  #585 = Utf8               field\n+  #586 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #587 = Utf8               fields\n+  #588 = Utf8               newFields\n+  #589 = Utf8               Ljava/util/List;\n+  #590 = Utf8               LocalVariableTypeTable\n+  #591 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n+  #592 = Utf8               includeUnparseable\n+  #593 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #594 = Utf8               cd\n+  #595 = Utf8               c\n+  #596 = Utf8               l\n+  #597 = Utf8               parsingBehavior\n+  #598 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+  #599 = Utf8               local\n+  #600 = Utf8               localFields\n+  #601 = Utf8               central\n+  #602 = Utf8               centralFields\n+  #603 = Utf8               merged\n+  #604 = Class              #605          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #605 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #606 = Utf8               parseableExtraFields\n+  #607 = Utf8               zipExtraFields\n+  #608 = Utf8               allExtraFieldsNoCopy\n+  #609 = Utf8               fs\n+  #610 = Utf8               Signature\n+  #611 = Utf8               (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #612 = Utf8               headerId\n+  #613 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #614 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #615 = Utf8               ze\n+  #616 = Utf8               addAsFirstExtraField\n+  #617 = Utf8               copy\n+  #618 = Utf8               newLen\n+  #619 = Utf8               extraField\n+  #620 = Utf8               type\n+  #621 = Utf8               newResult\n+  #622 = Utf8               removeUnparseableExtraFieldData\n+  #623 = Utf8               getUnparseableExtraFieldData\n+  #624 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+  #625 = Utf8               Ljava/util/zip/ZipException;\n+  #626 = Class              #627          // java/lang/RuntimeException\n+  #627 = Utf8               java/lang/RuntimeException\n+  #628 = Utf8               setCentralDirectoryExtra\n+  #629 = Utf8               b\n+  #630 = Utf8               (Ljava/lang/String;[B)V\n+  #631 = Utf8               getRawName\n+  #632 = Utf8               getLocalHeaderOffset\n+  #633 = Utf8               setLocalHeaderOffset\n+  #634 = Utf8               getDataOffset\n+  #635 = Utf8               setDataOffset\n+  #636 = Utf8               setStreamContiguous\n+  #637 = Utf8               (Z)V\n+  #638 = Utf8               existing\n+  #639 = Utf8               u\n+  #640 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n+  #641 = Utf8               ex\n+  #642 = Utf8               element\n+  #643 = Utf8               f\n+  #644 = Utf8               getLastModifiedDate\n+  #645 = Utf8               ()Ljava/util/Date;\n+  #646 = Utf8               obj\n+  #647 = Utf8               Ljava/lang/Object;\n+  #648 = Utf8               myName\n+  #649 = Utf8               otherName\n+  #650 = Utf8               myComment\n+  #651 = Utf8               otherComment\n+  #652 = Utf8               setVersionMadeBy\n+  #653 = Utf8               setVersionRequired\n+  #654 = Utf8               getVersionRequired\n+  #655 = Utf8               getVersionMadeBy\n+  #656 = Utf8               getRawFlag\n+  #657 = Utf8               setRawFlag\n+  #658 = Utf8               getNameSource\n+  #659 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+  #660 = Utf8               setNameSource\n+  #661 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n+  #662 = Utf8               getCommentSource\n+  #663 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+  #664 = Utf8               setCommentSource\n+  #665 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n+  #666 = Utf8               getDiskNumberStart\n+  #667 = Utf8               setDiskNumberStart\n+  #668 = Utf8               src\n+  #669 = Utf8               cpy\n+  #670 = Utf8               lambda$findMatching$0\n+  #671 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #672 = Utf8               <clinit>\n+  #673 = Utf8               SourceFile\n+  #674 = Utf8               ZipArchiveEntry.java\n+  #675 = Utf8               BootstrapMethods\n+  #676 = MethodHandle       6:#677        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #677 = Methodref          #678.#679     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #678 = Class              #680          // java/lang/invoke/LambdaMetafactory\n+  #679 = NameAndType        #681:#682     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #680 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #681 = Utf8               metafactory\n+  #682 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #683 = MethodType         #252          //  (Ljava/lang/Object;)Z\n+  #684 = MethodHandle       5:#685        // REF_invokeVirtual java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+  #685 = Methodref          #686.#687     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+  #686 = Class              #688          // java/lang/Class\n+  #687 = NameAndType        #689:#252     // isInstance:(Ljava/lang/Object;)Z\n+  #688 = Utf8               java/lang/Class\n+  #689 = Utf8               isInstance\n+  #690 = MethodType         #691          //  (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #691 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #692 = MethodHandle       6:#693        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #693 = Methodref          #10.#694      // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #694 = NameAndType        #670:#671     // lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  #695 = Utf8               InnerClasses\n+  #696 = Utf8               NameSource\n+  #697 = Utf8               CommentSource\n+  #698 = Utf8               ExtraFieldParsingMode\n+  #699 = Class              #700          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  #700 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  #701 = Class              #702          // java/lang/invoke/MethodHandles$Lookup\n+  #702 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #703 = Class              #704          // java/lang/invoke/MethodHandles\n+  #704 = Utf8               java/lang/invoke/MethodHandles\n+  #705 = Utf8               Lookup\n {\n   public static final int PLATFORM_UNIX = 3;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 3\n \n   public static final int PLATFORM_FAT = 0;\n@@ -827,41 +827,41 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokespecial #1                  // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/lang/String;)V\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #3                  // Field method:I\n+         7: putfield      #9                  // Field method:I\n         10: aload_0\n-        11: ldc2_w        #5                  // long -1l\n-        14: putfield      #7                  // Field size:J\n+        11: ldc2_w        #17                 // long -1l\n+        14: putfield      #19                 // Field size:J\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #9                  // Field platform:I\n+        19: putfield      #23                 // Field platform:I\n         22: aload_0\n-        23: new           #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        23: new           #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         26: dup\n-        27: invokespecial #11                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-        30: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        27: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+        30: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         33: aload_0\n-        34: ldc2_w        #5                  // long -1l\n-        37: putfield      #14                 // Field localHeaderOffset:J\n+        34: ldc2_w        #17                 // long -1l\n+        37: putfield      #37                 // Field localHeaderOffset:J\n         40: aload_0\n-        41: ldc2_w        #5                  // long -1l\n-        44: putfield      #15                 // Field dataOffset:J\n+        41: ldc2_w        #17                 // long -1l\n+        44: putfield      #40                 // Field dataOffset:J\n         47: aload_0\n-        48: getstatic     #16                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-        51: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        48: getstatic     #43                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        51: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-        58: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        55: getstatic     #52                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        58: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n         61: aload_0\n         62: aload_1\n-        63: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+        63: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n         66: return\n       LineNumberTable:\n         line 163: 0\n         line 121: 5\n         line 132: 10\n         line 137: 17\n         line 145: 22\n@@ -879,67 +879,67 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(java.util.zip.ZipEntry) throws java.util.zip.ZipException;\n     descriptor: (Ljava/util/zip/ZipEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #21                 // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n+         2: invokespecial #64                 // Method java/util/zip/ZipEntry.\"<init>\":(Ljava/util/zip/ZipEntry;)V\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #3                  // Field method:I\n+         7: putfield      #9                  // Field method:I\n         10: aload_0\n-        11: ldc2_w        #5                  // long -1l\n-        14: putfield      #7                  // Field size:J\n+        11: ldc2_w        #17                 // long -1l\n+        14: putfield      #19                 // Field size:J\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #9                  // Field platform:I\n+        19: putfield      #23                 // Field platform:I\n         22: aload_0\n-        23: new           #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        23: new           #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n         26: dup\n-        27: invokespecial #11                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n-        30: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        27: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.\"<init>\":()V\n+        30: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         33: aload_0\n-        34: ldc2_w        #5                  // long -1l\n-        37: putfield      #14                 // Field localHeaderOffset:J\n+        34: ldc2_w        #17                 // long -1l\n+        37: putfield      #37                 // Field localHeaderOffset:J\n         40: aload_0\n-        41: ldc2_w        #5                  // long -1l\n-        44: putfield      #15                 // Field dataOffset:J\n+        41: ldc2_w        #17                 // long -1l\n+        44: putfield      #40                 // Field dataOffset:J\n         47: aload_0\n-        48: getstatic     #16                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n-        51: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        48: getstatic     #43                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource.NAME:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+        51: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n-        58: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        55: getstatic     #52                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource.COMMENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+        58: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n         61: aload_0\n         62: aload_1\n-        63: invokevirtual #22                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n-        66: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+        63: invokevirtual #67                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+        66: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n         69: aload_1\n-        70: invokevirtual #23                 // Method java/util/zip/ZipEntry.getExtra:()[B\n+        70: invokevirtual #71                 // Method java/util/zip/ZipEntry.getExtra:()[B\n         73: astore_2\n         74: aload_2\n         75: ifnull        93\n         78: aload_0\n         79: aload_2\n         80: iconst_1\n-        81: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-        84: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        87: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        81: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+        84: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        87: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         90: goto          97\n         93: aload_0\n-        94: invokevirtual #27                 // Method setExtra:()V\n+        94: invokevirtual #91                 // Method setExtra:()V\n         97: aload_0\n         98: aload_1\n-        99: invokevirtual #28                 // Method java/util/zip/ZipEntry.getMethod:()I\n-       102: invokevirtual #29                 // Method setMethod:(I)V\n+        99: invokevirtual #94                 // Method java/util/zip/ZipEntry.getMethod:()I\n+       102: invokevirtual #98                 // Method setMethod:(I)V\n        105: aload_0\n        106: aload_1\n-       107: invokevirtual #30                 // Method java/util/zip/ZipEntry.getSize:()J\n-       110: putfield      #7                  // Field size:J\n+       107: invokevirtual #102                // Method java/util/zip/ZipEntry.getSize:()J\n+       110: putfield      #19                 // Field size:J\n        113: return\n       LineNumberTable:\n         line 177: 0\n         line 121: 5\n         line 132: 10\n         line 137: 17\n         line 145: 22\n@@ -972,43 +972,43 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntry) throws java.util.zip.ZipException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #31                 // Method \"<init>\":(Ljava/util/zip/ZipEntry;)V\n+         2: invokespecial #106                // Method \"<init>\":(Ljava/util/zip/ZipEntry;)V\n          5: aload_0\n          6: aload_1\n-         7: invokevirtual #32                 // Method getInternalAttributes:()I\n-        10: invokevirtual #33                 // Method setInternalAttributes:(I)V\n+         7: invokevirtual #107                // Method getInternalAttributes:()I\n+        10: invokevirtual #110                // Method setInternalAttributes:(I)V\n         13: aload_0\n         14: aload_1\n-        15: invokevirtual #34                 // Method getExternalAttributes:()J\n-        18: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        15: invokevirtual #113                // Method getExternalAttributes:()J\n+        18: invokevirtual #116                // Method setExternalAttributes:(J)V\n         21: aload_0\n         22: aload_0\n-        23: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        26: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        23: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        26: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         29: aload_0\n         30: aload_1\n-        31: invokevirtual #37                 // Method getPlatform:()I\n-        34: invokevirtual #38                 // Method setPlatform:(I)V\n+        31: invokevirtual #124                // Method getPlatform:()I\n+        34: invokevirtual #127                // Method setPlatform:(I)V\n         37: aload_1\n-        38: invokevirtual #39                 // Method getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+        38: invokevirtual #130                // Method getGeneralPurposeBit:()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n         41: astore_2\n         42: aload_0\n         43: aload_2\n         44: ifnonnull     51\n         47: aconst_null\n         48: goto          58\n         51: aload_2\n-        52: invokevirtual #40                 // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n-        55: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n-        58: invokevirtual #41                 // Method setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n+        52: invokevirtual #134                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.clone:()Ljava/lang/Object;\n+        55: checkcast     #26                 // class org/apache/commons/compress/archivers/zip/GeneralPurposeBit\n+        58: invokevirtual #138                // Method setGeneralPurposeBit:(Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n         61: return\n       LineNumberTable:\n         line 199: 0\n         line 200: 5\n         line 201: 13\n         line 202: 21\n         line 203: 29\n@@ -1036,16 +1036,16 @@\n \n   protected org.apache.commons.compress.archivers.zip.ZipArchiveEntry();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #42                 // String\n-         3: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+         1: ldc           #142                // String\n+         3: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 212: 0\n         line 213: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1053,42 +1053,42 @@\n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #44                 // Method java/io/File.isDirectory:()Z\n+         2: invokevirtual #145                // Method java/io/File.isDirectory:()Z\n          5: ifeq          39\n          8: aload_2\n-         9: ldc           #45                 // String /\n-        11: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+         9: ldc           #151                // String /\n+        11: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         14: ifne          39\n-        17: new           #47                 // class java/lang/StringBuilder\n+        17: new           #159                // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        21: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n         24: aload_2\n-        25: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        28: ldc           #45                 // String /\n-        30: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        25: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        28: ldc           #151                // String /\n+        30: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         36: goto          40\n         39: aload_2\n-        40: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+        40: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n         43: aload_1\n-        44: invokevirtual #51                 // Method java/io/File.isFile:()Z\n+        44: invokevirtual #169                // Method java/io/File.isFile:()Z\n         47: ifeq          58\n         50: aload_0\n         51: aload_1\n-        52: invokevirtual #52                 // Method java/io/File.length:()J\n-        55: invokevirtual #53                 // Method setSize:(J)V\n+        52: invokevirtual #172                // Method java/io/File.length:()J\n+        55: invokevirtual #175                // Method setSize:(J)V\n         58: aload_0\n         59: aload_1\n-        60: invokevirtual #54                 // Method java/io/File.lastModified:()J\n-        63: invokevirtual #55                 // Method setTime:(J)V\n+        60: invokevirtual #178                // Method java/io/File.lastModified:()J\n+        63: invokevirtual #181                // Method setTime:(J)V\n         66: return\n       LineNumberTable:\n         line 227: 0\n         line 228: 17\n         line 227: 40\n         line 229: 43\n         line 230: 50\n@@ -1115,44 +1115,44 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_3\n-         3: invokestatic  #56                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         3: invokestatic  #184                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          6: ifeq          40\n          9: aload_2\n-        10: ldc           #45                 // String /\n-        12: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        10: ldc           #151                // String /\n+        12: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         15: ifne          40\n-        18: new           #47                 // class java/lang/StringBuilder\n+        18: new           #159                // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        22: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n         25: aload_2\n-        26: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: ldc           #45                 // String /\n-        31: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        26: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: ldc           #151                // String /\n+        31: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         37: goto          41\n         40: aload_2\n-        41: invokespecial #43                 // Method \"<init>\":(Ljava/lang/String;)V\n+        41: invokespecial #144                // Method \"<init>\":(Ljava/lang/String;)V\n         44: aload_1\n         45: aload_3\n-        46: invokestatic  #57                 // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        46: invokestatic  #189                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         49: ifeq          60\n         52: aload_0\n         53: aload_1\n-        54: invokestatic  #58                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-        57: invokevirtual #53                 // Method setSize:(J)V\n+        54: invokestatic  #192                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        57: invokevirtual #175                // Method setSize:(J)V\n         60: aload_0\n         61: aload_1\n         62: aload_3\n-        63: invokestatic  #59                 // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        66: invokevirtual #60                 // Method setTime:(Ljava/nio/file/attribute/FileTime;)V\n+        63: invokestatic  #195                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        66: invokevirtual #199                // Method setTime:(Ljava/nio/file/attribute/FileTime;)V\n         69: return\n       LineNumberTable:\n         line 251: 0\n         line 252: 18\n         line 251: 41\n         line 253: 44\n         line 254: 52\n@@ -1181,16 +1181,16 @@\n   public void setTime(java.nio.file.attribute.FileTime);\n     descriptor: (Ljava/nio/file/attribute/FileTime;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #61                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n-         5: invokevirtual #55                 // Method setTime:(J)V\n+         2: invokevirtual #202                // Method java/nio/file/attribute/FileTime.toMillis:()J\n+         5: invokevirtual #181                // Method setTime:(J)V\n          8: return\n       LineNumberTable:\n         line 266: 0\n         line 267: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1198,29 +1198,29 @@\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #62                 // Method java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         1: invokespecial #207                // Method java/util/zip/ZipEntry.clone:()Ljava/lang/Object;\n+         4: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n          7: astore_1\n          8: aload_1\n          9: aload_0\n-        10: invokevirtual #32                 // Method getInternalAttributes:()I\n-        13: invokevirtual #33                 // Method setInternalAttributes:(I)V\n+        10: invokevirtual #107                // Method getInternalAttributes:()I\n+        13: invokevirtual #110                // Method setInternalAttributes:(I)V\n         16: aload_1\n         17: aload_0\n-        18: invokevirtual #34                 // Method getExternalAttributes:()J\n-        21: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        18: invokevirtual #113                // Method getExternalAttributes:()J\n+        21: invokevirtual #116                // Method setExternalAttributes:(J)V\n         24: aload_1\n         25: aload_0\n-        26: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        29: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        26: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        29: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         32: aload_1\n         33: areturn\n       LineNumberTable:\n         line 275: 0\n         line 277: 8\n         line 278: 16\n         line 279: 24\n@@ -1232,44 +1232,44 @@\n \n   public int getMethod();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field method:I\n+         1: getfield      #9                  // Field method:I\n          4: ireturn\n       LineNumberTable:\n         line 293: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setMethod(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: ifge          31\n-         4: new           #63                 // class java/lang/IllegalArgumentException\n+         4: new           #208                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: new           #47                 // class java/lang/StringBuilder\n+         8: new           #159                // class java/lang/StringBuilder\n         11: dup\n-        12: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        15: ldc           #64                 // String ZIP compression method can not be negative:\n-        17: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n+        15: ldc           #210                // String ZIP compression method can not be negative:\n+        17: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         20: iload_1\n-        21: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        24: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        27: invokespecial #66                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        21: invokevirtual #212                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        24: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        27: invokespecial #215                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: aload_0\n         32: iload_1\n-        33: putfield      #3                  // Field method:I\n+        33: putfield      #9                  // Field method:I\n         36: return\n       LineNumberTable:\n         line 305: 0\n         line 306: 4\n         line 309: 31\n         line 310: 36\n       LocalVariableTable:\n@@ -1281,30 +1281,30 @@\n \n   public int getInternalAttributes();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #67                 // Field internalAttributes:I\n+         1: getfield      #216                // Field internalAttributes:I\n          4: ireturn\n       LineNumberTable:\n         line 322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setInternalAttributes(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #67                 // Field internalAttributes:I\n+         2: putfield      #216                // Field internalAttributes:I\n          5: return\n       LineNumberTable:\n         line 330: 0\n         line 331: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1312,30 +1312,30 @@\n \n   public long getExternalAttributes();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #68                 // Field externalAttributes:J\n+         1: getfield      #219                // Field externalAttributes:J\n          4: lreturn\n       LineNumberTable:\n         line 343: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setExternalAttributes(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #68                 // Field externalAttributes:J\n+         2: putfield      #219                // Field externalAttributes:J\n          5: return\n       LineNumberTable:\n         line 351: 0\n         line 352: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1355,25 +1355,25 @@\n          9: iand\n         10: ifne          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ior\n         19: aload_0\n-        20: invokevirtual #69                 // Method isDirectory:()Z\n+        20: invokevirtual #222                // Method isDirectory:()Z\n         23: ifeq          31\n         26: bipush        16\n         28: goto          32\n         31: iconst_0\n         32: ior\n         33: i2l\n-        34: invokevirtual #35                 // Method setExternalAttributes:(J)V\n+        34: invokevirtual #116                // Method setExternalAttributes:(J)V\n         37: aload_0\n         38: iconst_3\n-        39: putfield      #9                  // Field platform:I\n+        39: putfield      #23                 // Field platform:I\n         42: return\n       LineNumberTable:\n         line 361: 0\n         line 363: 5\n         line 365: 19\n         line 361: 34\n         line 367: 37\n@@ -1402,24 +1402,24 @@\n \n   public int getUnixMode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field platform:I\n+         1: getfield      #23                 // Field platform:I\n          4: iconst_3\n          5: if_icmpeq     12\n          8: iconst_0\n          9: goto          24\n         12: aload_0\n-        13: invokevirtual #34                 // Method getExternalAttributes:()J\n+        13: invokevirtual #113                // Method getExternalAttributes:()J\n         16: bipush        16\n         18: lshr\n-        19: ldc2_w        #70                 // long 65535l\n+        19: ldc2_w        #223                // long 65535l\n         22: land\n         23: l2i\n         24: ireturn\n       LineNumberTable:\n         line 375: 0\n         line 376: 12\n         line 375: 24\n@@ -1433,18 +1433,18 @@\n \n   public boolean isUnixSymlink();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #72                 // Method getUnixMode:()I\n-         4: ldc           #74                 // int 61440\n+         1: invokevirtual #225                // Method getUnixMode:()I\n+         4: ldc           #230                // int 61440\n          6: iand\n-         7: ldc           #75                 // int 40960\n+         7: ldc           #231                // int 40960\n          9: if_icmpne     16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 388: 0\n@@ -1458,30 +1458,30 @@\n \n   public int getPlatform();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field platform:I\n+         1: getfield      #23                 // Field platform:I\n          4: ireturn\n       LineNumberTable:\n         line 399: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setPlatform(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #9                  // Field platform:I\n+         2: putfield      #23                 // Field platform:I\n          5: return\n       LineNumberTable:\n         line 407: 0\n         line 408: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1489,15 +1489,15 @@\n \n   protected int getAlignment();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #76                 // Field alignment:I\n+         1: getfield      #232                // Field alignment:I\n          4: ireturn\n       LineNumberTable:\n         line 418: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -1509,31 +1509,31 @@\n          0: iload_1\n          1: iload_1\n          2: iconst_1\n          3: isub\n          4: iand\n          5: ifne          14\n          8: iload_1\n-         9: ldc           #77                 // int 65535\n+         9: ldc           #235                // int 65535\n         11: if_icmple     41\n-        14: new           #63                 // class java/lang/IllegalArgumentException\n+        14: new           #208                // class java/lang/IllegalArgumentException\n         17: dup\n-        18: new           #47                 // class java/lang/StringBuilder\n+        18: new           #159                // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        25: ldc           #78                 // String Invalid value for alignment, must be power of two and no bigger than 65535 but is\n-        27: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n+        25: ldc           #236                // String Invalid value for alignment, must be power of two and no bigger than 65535 but is\n+        27: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: iload_1\n-        31: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        34: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: invokespecial #66                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        31: invokevirtual #212                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokespecial #215                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n         41: aload_0\n         42: iload_1\n-        43: putfield      #76                 // Field alignment:I\n+        43: putfield      #232                // Field alignment:I\n         46: return\n       LineNumberTable:\n         line 429: 0\n         line 430: 14\n         line 433: 41\n         line 434: 46\n       LocalVariableTable:\n@@ -1547,18 +1547,18 @@\n   public void setExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[]);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n-         5: new           #80                 // class java/util/ArrayList\n+         2: putfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         5: new           #242                // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #81                 // Method java/util/ArrayList.\"<init>\":()V\n+         9: invokespecial #244                // Method java/util/ArrayList.\"<init>\":()V\n         12: astore_2\n         13: aload_1\n         14: ifnull        74\n         17: aload_1\n         18: astore_3\n         19: aload_3\n         20: arraylength\n@@ -1569,35 +1569,35 @@\n         28: iload         4\n         30: if_icmpge     74\n         33: aload_3\n         34: iload         5\n         36: aaload\n         37: astore        6\n         39: aload         6\n-        41: instanceof    #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        41: instanceof    #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n         44: ifeq          59\n         47: aload_0\n         48: aload         6\n-        50: checkcast     #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        53: putfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        50: checkcast     #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        53: putfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         56: goto          68\n         59: aload_2\n         60: aload         6\n-        62: invokeinterface #83,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        62: invokeinterface #247,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         67: pop\n         68: iinc          5, 1\n         71: goto          26\n         74: aload_0\n         75: aload_2\n-        76: getstatic     #84                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        79: invokeinterface #85,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        84: checkcast     #86                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-        87: putfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        76: getstatic     #253                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        79: invokeinterface #257,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        84: checkcast     #261                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+        87: putfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         90: aload_0\n-        91: invokevirtual #27                 // Method setExtra:()V\n+        91: invokevirtual #91                 // Method setExtra:()V\n         94: return\n       LineNumberTable:\n         line 441: 0\n         line 442: 5\n         line 443: 13\n         line 444: 17\n         line 445: 39\n@@ -1631,15 +1631,15 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #88                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #265                // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: areturn\n       LineNumberTable:\n         line 467: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -1647,18 +1647,18 @@\n     descriptor: (Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: invokespecial #89                 // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         5: invokespecial #268                // Method getAllExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          8: goto          15\n         11: aload_0\n-        12: invokespecial #88                 // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: invokespecial #265                // Method getParseableExtraFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 480: 0\n         line 481: 4\n         line 482: 11\n         line 480: 15\n       LocalVariableTable:\n@@ -1672,114 +1672,114 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField[] getExtraFields(org.apache.commons.compress.archivers.zip.ExtraFieldParsingBehavior) throws java.util.zip.ZipException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=11, args_size=2\n          0: aload_1\n-         1: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         1: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n          4: if_acmpne     13\n          7: aload_0\n          8: iconst_1\n-         9: invokevirtual #90                 // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         9: invokevirtual #271                // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         12: areturn\n         13: aload_1\n-        14: getstatic     #91                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+        14: getstatic     #275                // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n         17: if_acmpne     26\n         20: aload_0\n         21: iconst_0\n-        22: invokevirtual #90                 // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        22: invokevirtual #271                // Method getExtraFields:(Z)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         25: areturn\n         26: aload_0\n-        27: invokevirtual #92                 // Method getExtra:()[B\n+        27: invokevirtual #278                // Method getExtra:()[B\n         30: astore_2\n-        31: new           #80                 // class java/util/ArrayList\n+        31: new           #242                // class java/util/ArrayList\n         34: dup\n         35: aload_2\n         36: iconst_1\n         37: aload_1\n-        38: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        41: invokestatic  #93                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        44: invokespecial #94                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        38: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        41: invokestatic  #279                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        44: invokespecial #285                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         47: astore_3\n         48: aload_0\n-        49: invokevirtual #95                 // Method getCentralDirectoryExtra:()[B\n+        49: invokevirtual #288                // Method getCentralDirectoryExtra:()[B\n         52: astore        4\n-        54: new           #80                 // class java/util/ArrayList\n+        54: new           #242                // class java/util/ArrayList\n         57: dup\n         58: aload         4\n         60: iconst_0\n         61: aload_1\n-        62: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-        65: invokestatic  #93                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        68: invokespecial #94                 // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        62: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        65: invokestatic  #279                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        68: invokespecial #285                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         71: astore        5\n-        73: new           #80                 // class java/util/ArrayList\n+        73: new           #242                // class java/util/ArrayList\n         76: dup\n-        77: invokespecial #81                 // Method java/util/ArrayList.\"<init>\":()V\n+        77: invokespecial #244                // Method java/util/ArrayList.\"<init>\":()V\n         80: astore        6\n         82: aload_3\n-        83: invokeinterface #96,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        83: invokeinterface #291,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         88: astore        7\n         90: aload         7\n-        92: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        92: invokeinterface #295,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         97: ifeq          210\n        100: aload         7\n-       102: invokeinterface #98,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       107: checkcast     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+       102: invokeinterface #300,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       107: checkcast     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n        110: astore        8\n        112: aconst_null\n        113: astore        9\n        115: aload         8\n-       117: instanceof    #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+       117: instanceof    #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n        120: ifeq          134\n        123: aload_0\n        124: aload         5\n-       126: invokespecial #100                // Method findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       126: invokespecial #305                // Method findUnparseable:(Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        129: astore        9\n        131: goto          149\n        134: aload_0\n        135: aload         8\n-       137: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       137: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n        142: aload         5\n-       144: invokespecial #102                // Method findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       144: invokespecial #313                // Method findMatching:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        147: astore        9\n        149: aload         9\n        151: ifnull        197\n        154: aload         9\n-       156: invokeinterface #103,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+       156: invokeinterface #317,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n        161: astore        10\n        163: aload         10\n        165: ifnull        187\n        168: aload         10\n        170: arraylength\n        171: ifle          187\n        174: aload         8\n        176: aload         10\n        178: iconst_0\n        179: aload         10\n        181: arraylength\n-       182: invokeinterface #104,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+       182: invokeinterface #320,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n        187: aload         5\n        189: aload         9\n-       191: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n+       191: invokeinterface #324,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z\n        196: pop\n        197: aload         6\n        199: aload         8\n-       201: invokeinterface #83,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       201: invokeinterface #247,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        206: pop\n        207: goto          90\n        210: aload         6\n        212: aload         5\n-       214: invokeinterface #106,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+       214: invokeinterface #327,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n        219: pop\n        220: aload         6\n-       222: getstatic     #84                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-       225: invokeinterface #85,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       230: checkcast     #86                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+       222: getstatic     #253                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       225: invokeinterface #257,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       230: checkcast     #261                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n        233: areturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 7\n         line 500: 13\n         line 501: 20\n         line 503: 26\n@@ -1841,20 +1841,20 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getParseableExtraFieldsNoCopy();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     11\n-         7: getstatic     #84                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getstatic     #253                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: areturn\n         11: aload_0\n-        12: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: areturn\n       LineNumberTable:\n         line 531: 0\n         line 532: 7\n         line 534: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1864,25 +1864,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getParseableExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #107                // Method getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #331                // Method getParseableExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: astore_1\n          5: aload_1\n          6: aload_0\n-         7: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: if_acmpne     23\n         13: aload_0\n         14: aload_1\n         15: aload_1\n         16: arraylength\n-        17: invokespecial #108                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        17: invokespecial #334                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         20: goto          24\n         23: aload_1\n         24: areturn\n       LineNumberTable:\n         line 538: 0\n         line 539: 5\n         line 540: 23\n@@ -1900,27 +1900,27 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getAllExtraFieldsNoCopy();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     12\n          7: aload_0\n-         8: invokespecial #109                // Method getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         8: invokespecial #338                // Method getUnparseableOnly:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         11: areturn\n         12: aload_0\n-        13: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        13: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         16: ifnull        26\n         19: aload_0\n-        20: invokespecial #110                // Method getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        20: invokespecial #341                // Method getMergedFields:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         23: goto          30\n         26: aload_0\n-        27: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        27: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         30: areturn\n       LineNumberTable:\n         line 548: 0\n         line 549: 7\n         line 551: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1934,28 +1934,28 @@\n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getMergedFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         2: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          5: aload_0\n-         6: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         6: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: arraylength\n         10: iconst_1\n         11: iadd\n-        12: invokespecial #108                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        12: invokespecial #334                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         15: astore_1\n         16: aload_1\n         17: aload_0\n-        18: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        18: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         21: arraylength\n         22: aload_0\n-        23: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        23: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         26: aastore\n         27: aload_1\n         28: areturn\n       LineNumberTable:\n         line 555: 0\n         line 556: 16\n         line 557: 27\n@@ -1966,24 +1966,24 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getUnparseableOnly();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: ifnonnull     13\n-         7: getstatic     #84                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getstatic     #253                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: goto          24\n         13: iconst_1\n-        14: anewarray     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        14: anewarray     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         17: dup\n         18: iconst_0\n         19: aload_0\n-        20: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        20: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         23: aastore\n         24: areturn\n       LineNumberTable:\n         line 561: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -1994,25 +1994,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] getAllExtraFields();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: astore_1\n          5: aload_1\n          6: aload_0\n-         7: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         7: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         10: if_acmpne     23\n         13: aload_0\n         14: aload_1\n         15: aload_1\n         16: arraylength\n-        17: invokespecial #108                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        17: invokespecial #334                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         20: goto          24\n         23: aload_1\n         24: areturn\n       LineNumberTable:\n         line 565: 0\n         line 566: 5\n         line 567: 23\n@@ -2030,120 +2030,120 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField findUnparseable(java.util.List<org.apache.commons.compress.archivers.zip.ZipExtraField>);\n     descriptor: (Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #111,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n-         6: ldc           #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+         1: invokeinterface #344,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n+         6: ldc           #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n          8: dup\n-         9: invokestatic  #112                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokestatic  #348                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         12: pop\n-        13: invokedynamic #113,  0            // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n-        18: invokeinterface #114,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        23: invokeinterface #115,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+        13: invokedynamic #354,  0            // InvokeDynamic #0:test:(Ljava/lang/Class;)Ljava/util/function/Predicate;\n+        18: invokeinterface #358,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        23: invokeinterface #364,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n         28: aconst_null\n-        29: invokevirtual #116                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-        32: checkcast     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        29: invokevirtual #368                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+        32: checkcast     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         35: areturn\n       LineNumberTable:\n         line 571: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      36     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      36     1    fs   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      36     1    fs   Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-    Signature: #321                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+    Signature: #611                         // (Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField findMatching(org.apache.commons.compress.archivers.zip.ZipShort, java.util.List<org.apache.commons.compress.archivers.zip.ZipExtraField>);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_2\n-         1: invokeinterface #111,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n+         1: invokeinterface #344,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n          6: aload_1\n-         7: invokedynamic #117,  0            // InvokeDynamic #1:test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n-        12: invokeinterface #114,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        17: invokeinterface #115,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n+         7: invokedynamic #373,  0            // InvokeDynamic #1:test:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Ljava/util/function/Predicate;\n+        12: invokeinterface #358,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        17: invokeinterface #364,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;\n         22: aconst_null\n-        23: invokevirtual #116                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n-        26: checkcast     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        23: invokevirtual #368                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;\n+        26: checkcast     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         29: areturn\n       LineNumberTable:\n         line 575: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      30     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      30     1 headerId   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n             0      30     2    fs   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     2    fs   Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-    Signature: #326                         // (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+    Signature: #614                         // (Lorg/apache/commons/compress/archivers/zip/ZipShort;Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n \n   public void addExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+         1: instanceof    #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n          4: ifeq          18\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        12: putfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         9: checkcast     #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        12: putfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         15: goto          91\n         18: aload_0\n-        19: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        19: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         22: ifnonnull     40\n         25: aload_0\n         26: iconst_1\n-        27: anewarray     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        27: anewarray     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n         30: dup\n         31: iconst_0\n         32: aload_1\n         33: aastore\n-        34: putfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        34: putfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         37: goto          91\n         40: aload_0\n         41: aload_1\n-        42: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        47: invokevirtual #118                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        42: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        47: invokevirtual #376                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         50: ifnull        63\n         53: aload_0\n         54: aload_1\n-        55: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        60: invokevirtual #119                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+        55: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        60: invokevirtual #380                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n         63: aload_0\n         64: aload_0\n-        65: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        65: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         68: aload_0\n-        69: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        69: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         72: arraylength\n         73: iconst_1\n         74: iadd\n-        75: invokespecial #108                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        75: invokespecial #334                // Method copyOf:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         78: astore_2\n         79: aload_2\n         80: aload_2\n         81: arraylength\n         82: iconst_1\n         83: isub\n         84: aload_1\n         85: aastore\n         86: aload_0\n         87: aload_2\n-        88: putfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        88: putfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         91: aload_0\n-        92: invokevirtual #27                 // Method setExtra:()V\n+        92: invokevirtual #91                 // Method setExtra:()V\n         95: return\n       LineNumberTable:\n         line 587: 0\n         line 588: 7\n         line 589: 18\n         line 590: 25\n         line 592: 40\n@@ -2166,68 +2166,68 @@\n \n   public void addAsFirstExtraField(org.apache.commons.compress.archivers.zip.ZipExtraField);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_1\n-         1: instanceof    #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+         1: instanceof    #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n          4: ifeq          18\n          7: aload_0\n          8: aload_1\n-         9: checkcast     #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-        12: putfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         9: checkcast     #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        12: putfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         15: goto          101\n         18: aload_0\n         19: aload_1\n-        20: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        25: invokevirtual #118                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        20: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        25: invokevirtual #376                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         28: ifnull        41\n         31: aload_0\n         32: aload_1\n-        33: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        38: invokevirtual #119                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+        33: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        38: invokevirtual #380                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n         41: aload_0\n-        42: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        42: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         45: astore_2\n         46: aload_0\n-        47: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        47: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         50: ifnull        63\n         53: aload_0\n-        54: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        54: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         57: arraylength\n         58: iconst_1\n         59: iadd\n         60: goto          64\n         63: iconst_1\n         64: istore_3\n         65: aload_0\n         66: iload_3\n-        67: anewarray     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n-        70: putfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        67: anewarray     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+        70: putfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         73: aload_0\n-        74: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        74: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         77: iconst_0\n         78: aload_1\n         79: aastore\n         80: aload_2\n         81: ifnull        101\n         84: aload_2\n         85: iconst_0\n         86: aload_0\n-        87: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        87: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         90: iconst_1\n         91: aload_0\n-        92: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        92: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         95: arraylength\n         96: iconst_1\n         97: isub\n-        98: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        98: invokestatic  #384                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        101: aload_0\n-       102: invokevirtual #27                 // Method setExtra:()V\n+       102: invokevirtual #91                 // Method setExtra:()V\n        105: return\n       LineNumberTable:\n         line 610: 0\n         line 611: 7\n         line 613: 18\n         line 614: 31\n         line 616: 41\n@@ -2257,26 +2257,26 @@\n \n   public void removeExtraField(org.apache.commons.compress.archivers.zip.ZipShort);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     15\n-         7: new           #121                // class java/util/NoSuchElementException\n+         7: new           #390                // class java/util/NoSuchElementException\n         10: dup\n-        11: invokespecial #122                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        11: invokespecial #392                // Method java/util/NoSuchElementException.\"<init>\":()V\n         14: athrow\n-        15: new           #80                 // class java/util/ArrayList\n+        15: new           #242                // class java/util/ArrayList\n         18: dup\n-        19: invokespecial #81                 // Method java/util/ArrayList.\"<init>\":()V\n+        19: invokespecial #244                // Method java/util/ArrayList.\"<init>\":()V\n         22: astore_2\n         23: aload_0\n-        24: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        24: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         27: astore_3\n         28: aload_3\n         29: arraylength\n         30: istore        4\n         32: iconst_0\n         33: istore        5\n         35: iload         5\n@@ -2284,41 +2284,41 @@\n         39: if_icmpge     77\n         42: aload_3\n         43: iload         5\n         45: aaload\n         46: astore        6\n         48: aload_1\n         49: aload         6\n-        51: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        56: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        51: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        56: invokevirtual #393                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         59: ifne          71\n         62: aload_2\n         63: aload         6\n-        65: invokeinterface #83,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        65: invokeinterface #247,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         70: pop\n         71: iinc          5, 1\n         74: goto          35\n         77: aload_0\n-        78: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        78: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         81: arraylength\n         82: aload_2\n-        83: invokeinterface #124,  1          // InterfaceMethod java/util/List.size:()I\n+        83: invokeinterface #398,  1          // InterfaceMethod java/util/List.size:()I\n         88: if_icmpne     99\n-        91: new           #121                // class java/util/NoSuchElementException\n+        91: new           #390                // class java/util/NoSuchElementException\n         94: dup\n-        95: invokespecial #122                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        95: invokespecial #392                // Method java/util/NoSuchElementException.\"<init>\":()V\n         98: athrow\n         99: aload_0\n        100: aload_2\n-       101: getstatic     #84                 // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-       104: invokeinterface #85,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       109: checkcast     #86                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-       112: putfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       101: getstatic     #253                // Field org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       104: invokeinterface #257,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       109: checkcast     #261                // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+       112: putfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        115: aload_0\n-       116: invokevirtual #27                 // Method setExtra:()V\n+       116: invokevirtual #91                 // Method setExtra:()V\n        119: return\n       LineNumberTable:\n         line 632: 0\n         line 633: 7\n         line 636: 15\n         line 637: 23\n         line 638: 48\n@@ -2351,25 +2351,25 @@\n \n   public void removeUnparseableExtraFieldData();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: ifnonnull     15\n-         7: new           #121                // class java/util/NoSuchElementException\n+         7: new           #390                // class java/util/NoSuchElementException\n         10: dup\n-        11: invokespecial #122                // Method java/util/NoSuchElementException.\"<init>\":()V\n+        11: invokespecial #392                // Method java/util/NoSuchElementException.\"<init>\":()V\n         14: athrow\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        17: putfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         20: aload_0\n-        21: invokevirtual #27                 // Method setExtra:()V\n+        21: invokevirtual #91                 // Method setExtra:()V\n         24: return\n       LineNumberTable:\n         line 655: 0\n         line 656: 7\n         line 658: 15\n         line 659: 20\n         line 660: 24\n@@ -2381,18 +2381,18 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipExtraField getExtraField(org.apache.commons.compress.archivers.zip.ZipShort);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnull        53\n          7: aload_0\n-         8: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         8: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         11: astore_2\n         12: aload_2\n         13: arraylength\n         14: istore_3\n         15: iconst_0\n         16: istore        4\n         18: iload         4\n@@ -2400,16 +2400,16 @@\n         21: if_icmpge     53\n         24: aload_2\n         25: iload         4\n         27: aaload\n         28: astore        5\n         30: aload_1\n         31: aload         5\n-        33: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        38: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+        33: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        38: invokevirtual #393                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         41: ifeq          47\n         44: aload         5\n         46: areturn\n         47: iinc          4, 1\n         50: goto          18\n         53: aconst_null\n         54: areturn\n@@ -2435,15 +2435,15 @@\n \n   public org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData getUnparseableExtraFieldData();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+         1: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n          4: areturn\n       LineNumberTable:\n         line 687: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -2451,72 +2451,72 @@\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-         6: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         3: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         6: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: iconst_1\n-        10: invokespecial #125                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n-        13: goto          60\n+        10: invokespecial #400                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+        13: goto          62\n         16: astore_2\n-        17: new           #63                 // class java/lang/IllegalArgumentException\n+        17: new           #208                // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #47                 // class java/lang/StringBuilder\n+        21: new           #159                // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #127                // String Error parsing extra fields for entry:\n-        30: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: aload_0\n-        34: invokevirtual #128                // Method getName:()Ljava/lang/String;\n-        37: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        40: ldc           #129                // String  -\n-        42: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        45: aload_2\n-        46: invokevirtual #130                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n-        49: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: aload_2\n-        56: invokespecial #131                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-        59: athrow\n-        60: return\n+        25: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n+        28: ldc_w         #406                // String Error parsing extra fields for entry:\n+        31: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: aload_0\n+        35: invokevirtual #408                // Method getName:()Ljava/lang/String;\n+        38: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: ldc_w         #409                // String  -\n+        44: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: aload_2\n+        48: invokevirtual #411                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+        51: invokevirtual #162                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #166                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: aload_2\n+        58: invokespecial #414                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        61: athrow\n+        62: return\n       Exception table:\n          from    to  target type\n              0    13    16   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 701: 0\n         line 706: 13\n         line 702: 16\n         line 704: 17\n-        line 705: 34\n-        line 707: 60\n+        line 705: 35\n+        line 707: 62\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17      43     2     e   Ljava/util/zip/ZipException;\n-            0      61     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-            0      61     1 extra   [B\n+           17      45     2     e   Ljava/util/zip/ZipException;\n+            0      63     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      63     1 extra   [B\n       StackMapTable: number_of_entries = 2\n         frame_type = 80 /* same_locals_1_stack_item */\n           stack = [ class java/util/zip/ZipException ]\n-        frame_type = 43 /* same */\n+        frame_type = 45 /* same */\n     Exceptions:\n       throws java.lang.RuntimeException\n \n   protected void setExtra();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-         5: invokestatic  #132                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-         8: invokespecial #133                // Method java/util/zip/ZipEntry.setExtra:([B)V\n+         2: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         5: invokestatic  #417                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeLocalFileDataData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+         8: invokespecial #421                // Method java/util/zip/ZipEntry.setExtra:([B)V\n         11: return\n       LineNumberTable:\n         line 716: 0\n         line 717: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2525,26 +2525,26 @@\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: getstatic     #24                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n-         6: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         3: getstatic     #75                 // Field org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode.BEST_EFFORT:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode;\n+         6: invokestatic  #81                 // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          9: iconst_0\n-        10: invokespecial #125                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n+        10: invokespecial #400                // Method mergeExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n         13: goto          30\n         16: astore_2\n-        17: new           #63                 // class java/lang/IllegalArgumentException\n+        17: new           #208                // class java/lang/IllegalArgumentException\n         20: dup\n         21: aload_2\n-        22: invokevirtual #130                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n+        22: invokevirtual #411                // Method java/util/zip/ZipException.getMessage:()Ljava/lang/String;\n         25: aload_2\n-        26: invokespecial #131                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokespecial #414                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         29: athrow\n         30: return\n       Exception table:\n          from    to  target type\n              0    13    16   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 725: 0\n@@ -2564,21 +2564,21 @@\n \n   public byte[] getLocalFileDataExtra();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #92                 // Method getExtra:()[B\n+         1: invokevirtual #278                // Method getExtra:()[B\n          4: astore_1\n          5: aload_1\n          6: ifnull        13\n          9: aload_1\n         10: goto          16\n-        13: getstatic     #134                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+        13: getstatic     #424                // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n         16: areturn\n       LineNumberTable:\n         line 737: 0\n         line 738: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2592,36 +2592,36 @@\n \n   public byte[] getCentralDirectoryExtra();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-         4: invokestatic  #135                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+         1: invokespecial #120                // Method getAllExtraFieldsNoCopy:()[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         4: invokestatic  #430                // Method org/apache/commons/compress/archivers/zip/ExtraFieldUtils.mergeCentralDirectoryData:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n          7: areturn\n       LineNumberTable:\n         line 746: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #136                // Field name:Ljava/lang/String;\n+         1: getfield      #433                // Field name:Ljava/lang/String;\n          4: ifnonnull     14\n          7: aload_0\n-         8: invokespecial #22                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n+         8: invokespecial #67                 // Method java/util/zip/ZipEntry.getName:()Ljava/lang/String;\n         11: goto          18\n         14: aload_0\n-        15: getfield      #136                // Field name:Ljava/lang/String;\n+        15: getfield      #433                // Field name:Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 758: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n       StackMapTable: number_of_entries = 2\n@@ -2631,17 +2631,17 @@\n \n   public boolean isDirectory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #128                // Method getName:()Ljava/lang/String;\n-         4: ldc           #45                 // String /\n-         6: invokevirtual #46                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+         1: invokevirtual #408                // Method getName:()Ljava/lang/String;\n+         4: ldc           #151                // String /\n+         6: invokevirtual #153                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n          9: ireturn\n       LineNumberTable:\n         line 767: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -2649,28 +2649,28 @@\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        29\n          4: aload_0\n-         5: invokevirtual #37                 // Method getPlatform:()I\n+         5: invokevirtual #124                // Method getPlatform:()I\n          8: ifne          29\n         11: aload_1\n-        12: ldc           #45                 // String /\n-        14: invokevirtual #137                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        12: ldc           #151                // String /\n+        14: invokevirtual #437                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n         17: ifne          29\n         20: aload_1\n         21: bipush        92\n         23: bipush        47\n-        25: invokevirtual #138                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        25: invokevirtual #441                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         28: astore_1\n         29: aload_0\n         30: aload_1\n-        31: putfield      #136                // Field name:Ljava/lang/String;\n+        31: putfield      #433                // Field name:Ljava/lang/String;\n         34: return\n       LineNumberTable:\n         line 775: 0\n         line 776: 14\n         line 777: 20\n         line 779: 29\n         line 780: 34\n@@ -2683,15 +2683,15 @@\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #19                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 793: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -2699,47 +2699,47 @@\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          16\n-         6: new           #63                 // class java/lang/IllegalArgumentException\n+         3: ifge          17\n+         6: new           #208                // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #139                // String Invalid entry size\n-        12: invokespecial #66                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        15: athrow\n-        16: aload_0\n-        17: lload_1\n-        18: putfield      #7                  // Field size:J\n-        21: return\n+        10: ldc_w         #445                // String Invalid entry size\n+        13: invokespecial #215                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        16: athrow\n+        17: aload_0\n+        18: lload_1\n+        19: putfield      #19                 // Field size:J\n+        22: return\n       LineNumberTable:\n         line 804: 0\n         line 805: 6\n-        line 807: 16\n-        line 808: 21\n+        line 807: 17\n+        line 808: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      22     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-            0      22     1  size   J\n+            0      23     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      23     1  size   J\n       StackMapTable: number_of_entries = 1\n-        frame_type = 16 /* same */\n+        frame_type = 17 /* same */\n \n   protected void setName(java.lang.String, byte[]);\n     descriptor: (Ljava/lang/String;[B)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #20                 // Method setName:(Ljava/lang/String;)V\n+         2: invokevirtual #61                 // Method setName:(Ljava/lang/String;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #140                // Field rawName:[B\n+         7: putfield      #447                // Field rawName:[B\n         10: return\n       LineNumberTable:\n         line 820: 0\n         line 821: 5\n         line 822: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2749,22 +2749,22 @@\n \n   public byte[] getRawName();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #140                // Field rawName:[B\n+         1: getfield      #447                // Field rawName:[B\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #140                // Field rawName:[B\n+         8: getfield      #447                // Field rawName:[B\n         11: aload_0\n-        12: getfield      #140                // Field rawName:[B\n+        12: getfield      #447                // Field rawName:[B\n         15: arraylength\n-        16: invokestatic  #141                // Method java/util/Arrays.copyOf:([BI)[B\n+        16: invokestatic  #450                // Method java/util/Arrays.copyOf:([BI)[B\n         19: areturn\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 835: 0\n         line 836: 7\n         line 838: 20\n@@ -2776,30 +2776,30 @@\n \n   protected long getLocalHeaderOffset();\n     descriptor: ()J\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field localHeaderOffset:J\n+         1: getfield      #37                 // Field localHeaderOffset:J\n          4: lreturn\n       LineNumberTable:\n         line 842: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setLocalHeaderOffset(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #14                 // Field localHeaderOffset:J\n+         2: putfield      #37                 // Field localHeaderOffset:J\n          5: return\n       LineNumberTable:\n         line 846: 0\n         line 847: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2807,30 +2807,30 @@\n \n   public long getDataOffset();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field dataOffset:J\n+         1: getfield      #40                 // Field dataOffset:J\n          4: lreturn\n       LineNumberTable:\n         line 851: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setDataOffset(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #15                 // Field dataOffset:J\n+         2: putfield      #40                 // Field dataOffset:J\n          5: return\n       LineNumberTable:\n         line 861: 0\n         line 862: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2838,30 +2838,30 @@\n \n   public boolean isStreamContiguous();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #142                // Field isStreamContiguous:Z\n+         1: getfield      #453                // Field isStreamContiguous:Z\n          4: ireturn\n       LineNumberTable:\n         line 866: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   protected void setStreamContiguous(boolean);\n     descriptor: (Z)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #142                // Field isStreamContiguous:Z\n+         2: putfield      #453                // Field isStreamContiguous:Z\n          5: return\n       LineNumberTable:\n         line 870: 0\n         line 871: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2869,45 +2869,45 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #128                // Method getName:()Ljava/lang/String;\n-         4: invokevirtual #143                // Method java/lang/String.hashCode:()I\n+         1: invokevirtual #408                // Method getName:()Ljava/lang/String;\n+         4: invokevirtual #457                // Method java/lang/String.hashCode:()I\n          7: ireturn\n       LineNumberTable:\n         line 884: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public org.apache.commons.compress.archivers.zip.GeneralPurposeBit getGeneralPurposeBit();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+         1: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n          4: areturn\n       LineNumberTable:\n         line 893: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setGeneralPurposeBit(org.apache.commons.compress.archivers.zip.GeneralPurposeBit);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+         2: putfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n          5: return\n       LineNumberTable:\n         line 902: 0\n         line 903: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -2915,19 +2915,19 @@\n \n   private void mergeExtraFields(org.apache.commons.compress.archivers.zip.ZipExtraField[], boolean);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=11, args_size=3\n          0: aload_0\n-         1: getfield      #87                 // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+         1: getfield      #262                // Field extraFields:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n          4: ifnonnull     15\n          7: aload_0\n          8: aload_1\n-         9: invokevirtual #26                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+         9: invokevirtual #87                 // Method setExtraFields:([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         12: goto          235\n         15: aload_1\n         16: astore_3\n         17: aload_3\n         18: arraylength\n         19: istore        4\n         21: iconst_0\n@@ -2936,92 +2936,92 @@\n         26: iload         4\n         28: if_icmpge     231\n         31: aload_3\n         32: iload         5\n         34: aaload\n         35: astore        6\n         37: aload         6\n-        39: instanceof    #82                 // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+        39: instanceof    #245                // class org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n         42: ifeq          54\n         45: aload_0\n-        46: getfield      #79                 // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n+        46: getfield      #238                // Field unparseableExtra:Lorg/apache/commons/compress/archivers/zip/UnparseableExtraFieldData;\n         49: astore        7\n         51: goto          67\n         54: aload_0\n         55: aload         6\n-        57: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-        62: invokevirtual #118                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+        57: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+        62: invokevirtual #376                // Method getExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         65: astore        7\n         67: aload         7\n         69: ifnonnull     81\n         72: aload_0\n         73: aload         6\n-        75: invokevirtual #144                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+        75: invokevirtual #460                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n         78: goto          225\n         81: iload_2\n         82: ifeq          95\n         85: aload         6\n-        87: invokeinterface #145,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+        87: invokeinterface #464,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n         92: goto          102\n         95: aload         6\n-        97: invokeinterface #103,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+        97: invokeinterface #317,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n        102: astore        8\n        104: iload_2\n        105: ifeq          124\n        108: aload         7\n        110: aload         8\n        112: iconst_0\n        113: aload         8\n        115: arraylength\n-       116: invokeinterface #146,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+       116: invokeinterface #467,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n        121: goto          137\n        124: aload         7\n        126: aload         8\n        128: iconst_0\n        129: aload         8\n        131: arraylength\n-       132: invokeinterface #104,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+       132: invokeinterface #320,  4          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n        137: goto          225\n        140: astore        9\n-       142: new           #147                // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+       142: new           #470                // class org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n        145: dup\n-       146: invokespecial #148                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+       146: invokespecial #472                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n        149: astore        10\n        151: aload         10\n        153: aload         7\n-       155: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-       160: invokevirtual #149                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+       155: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       160: invokevirtual #473                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n        163: iload_2\n        164: ifeq          189\n        167: aload         10\n        169: aload         8\n-       171: invokevirtual #150                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+       171: invokevirtual #476                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n        174: aload         10\n        176: aload         7\n-       178: invokeinterface #103,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-       183: invokevirtual #151                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+       178: invokeinterface #317,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+       183: invokevirtual #479                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n        186: goto          208\n        189: aload         10\n        191: aload         7\n-       193: invokeinterface #145,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-       198: invokevirtual #150                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n+       193: invokeinterface #464,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+       198: invokevirtual #476                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setLocalFileDataData:([B)V\n        201: aload         10\n        203: aload         8\n-       205: invokevirtual #151                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n+       205: invokevirtual #479                // Method org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setCentralDirectoryData:([B)V\n        208: aload_0\n        209: aload         7\n-       211: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-       216: invokevirtual #119                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+       211: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+       216: invokevirtual #380                // Method removeExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n        219: aload_0\n        220: aload         10\n-       222: invokevirtual #144                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n+       222: invokevirtual #460                // Method addExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)V\n        225: iinc          5, 1\n        228: goto          24\n        231: aload_0\n-       232: invokevirtual #27                 // Method setExtra:()V\n+       232: invokevirtual #91                 // Method setExtra:()V\n        235: return\n       Exception table:\n          from    to  target type\n            104   137   140   Class java/util/zip/ZipException\n       LineNumberTable:\n         line 914: 0\n         line 915: 7\n@@ -3095,19 +3095,19 @@\n         frame_type = 3 /* same */\n \n   public java.util.Date getLastModifiedDate();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #152                // class java/util/Date\n+         0: new           #482                // class java/util/Date\n          3: dup\n          4: aload_0\n-         5: invokevirtual #153                // Method getTime:()J\n-         8: invokespecial #154                // Method java/util/Date.\"<init>\":(J)V\n+         5: invokevirtual #484                // Method getTime:()J\n+         8: invokespecial #487                // Method java/util/Date.\"<init>\":(J)V\n         11: areturn\n       LineNumberTable:\n         line 965: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n@@ -3120,127 +3120,127 @@\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_0\n-        12: invokevirtual #155                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #489                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_1\n-        16: invokevirtual #155                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #489                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+        25: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n         28: astore_2\n         29: aload_0\n-        30: invokevirtual #128                // Method getName:()Ljava/lang/String;\n+        30: invokevirtual #408                // Method getName:()Ljava/lang/String;\n         33: astore_3\n         34: aload_2\n-        35: invokevirtual #128                // Method getName:()Ljava/lang/String;\n+        35: invokevirtual #408                // Method getName:()Ljava/lang/String;\n         38: astore        4\n         40: aload_3\n         41: aload         4\n-        43: invokestatic  #156                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        43: invokestatic  #495                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: aload_0\n-        52: invokevirtual #157                // Method getComment:()Ljava/lang/String;\n+        52: invokevirtual #498                // Method getComment:()Ljava/lang/String;\n         55: astore        5\n         57: aload_2\n-        58: invokevirtual #157                // Method getComment:()Ljava/lang/String;\n+        58: invokevirtual #498                // Method getComment:()Ljava/lang/String;\n         61: astore        6\n         63: aload         5\n         65: ifnonnull     72\n-        68: ldc           #42                 // String\n+        68: ldc           #142                // String\n         70: astore        5\n         72: aload         6\n         74: ifnonnull     81\n-        77: ldc           #42                 // String\n+        77: ldc           #142                // String\n         79: astore        6\n         81: aload_0\n-        82: invokevirtual #153                // Method getTime:()J\n+        82: invokevirtual #484                // Method getTime:()J\n         85: aload_2\n-        86: invokevirtual #153                // Method getTime:()J\n+        86: invokevirtual #484                // Method getTime:()J\n         89: lcmp\n         90: ifne          254\n         93: aload         5\n         95: aload         6\n-        97: invokevirtual #158                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        97: invokevirtual #501                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        100: ifeq          254\n        103: aload_0\n-       104: invokevirtual #32                 // Method getInternalAttributes:()I\n+       104: invokevirtual #107                // Method getInternalAttributes:()I\n        107: aload_2\n-       108: invokevirtual #32                 // Method getInternalAttributes:()I\n+       108: invokevirtual #107                // Method getInternalAttributes:()I\n        111: if_icmpne     254\n        114: aload_0\n-       115: invokevirtual #37                 // Method getPlatform:()I\n+       115: invokevirtual #124                // Method getPlatform:()I\n        118: aload_2\n-       119: invokevirtual #37                 // Method getPlatform:()I\n+       119: invokevirtual #124                // Method getPlatform:()I\n        122: if_icmpne     254\n        125: aload_0\n-       126: invokevirtual #34                 // Method getExternalAttributes:()J\n+       126: invokevirtual #113                // Method getExternalAttributes:()J\n        129: aload_2\n-       130: invokevirtual #34                 // Method getExternalAttributes:()J\n+       130: invokevirtual #113                // Method getExternalAttributes:()J\n        133: lcmp\n        134: ifne          254\n        137: aload_0\n-       138: invokevirtual #159                // Method getMethod:()I\n+       138: invokevirtual #502                // Method getMethod:()I\n        141: aload_2\n-       142: invokevirtual #159                // Method getMethod:()I\n+       142: invokevirtual #502                // Method getMethod:()I\n        145: if_icmpne     254\n        148: aload_0\n-       149: invokevirtual #160                // Method getSize:()J\n+       149: invokevirtual #503                // Method getSize:()J\n        152: aload_2\n-       153: invokevirtual #160                // Method getSize:()J\n+       153: invokevirtual #503                // Method getSize:()J\n        156: lcmp\n        157: ifne          254\n        160: aload_0\n-       161: invokevirtual #161                // Method getCrc:()J\n+       161: invokevirtual #504                // Method getCrc:()J\n        164: aload_2\n-       165: invokevirtual #161                // Method getCrc:()J\n+       165: invokevirtual #504                // Method getCrc:()J\n        168: lcmp\n        169: ifne          254\n        172: aload_0\n-       173: invokevirtual #162                // Method getCompressedSize:()J\n+       173: invokevirtual #507                // Method getCompressedSize:()J\n        176: aload_2\n-       177: invokevirtual #162                // Method getCompressedSize:()J\n+       177: invokevirtual #507                // Method getCompressedSize:()J\n        180: lcmp\n        181: ifne          254\n        184: aload_0\n-       185: invokevirtual #95                 // Method getCentralDirectoryExtra:()[B\n+       185: invokevirtual #288                // Method getCentralDirectoryExtra:()[B\n        188: aload_2\n-       189: invokevirtual #95                 // Method getCentralDirectoryExtra:()[B\n-       192: invokestatic  #163                // Method java/util/Arrays.equals:([B[B)Z\n+       189: invokevirtual #288                // Method getCentralDirectoryExtra:()[B\n+       192: invokestatic  #510                // Method java/util/Arrays.equals:([B[B)Z\n        195: ifeq          254\n        198: aload_0\n-       199: invokevirtual #164                // Method getLocalFileDataExtra:()[B\n+       199: invokevirtual #513                // Method getLocalFileDataExtra:()[B\n        202: aload_2\n-       203: invokevirtual #164                // Method getLocalFileDataExtra:()[B\n-       206: invokestatic  #163                // Method java/util/Arrays.equals:([B[B)Z\n+       203: invokevirtual #513                // Method getLocalFileDataExtra:()[B\n+       206: invokestatic  #510                // Method java/util/Arrays.equals:([B[B)Z\n        209: ifeq          254\n        212: aload_0\n-       213: getfield      #14                 // Field localHeaderOffset:J\n+       213: getfield      #37                 // Field localHeaderOffset:J\n        216: aload_2\n-       217: getfield      #14                 // Field localHeaderOffset:J\n+       217: getfield      #37                 // Field localHeaderOffset:J\n        220: lcmp\n        221: ifne          254\n        224: aload_0\n-       225: getfield      #15                 // Field dataOffset:J\n+       225: getfield      #40                 // Field dataOffset:J\n        228: aload_2\n-       229: getfield      #15                 // Field dataOffset:J\n+       229: getfield      #40                 // Field dataOffset:J\n        232: lcmp\n        233: ifne          254\n        236: aload_0\n-       237: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+       237: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n        240: aload_2\n-       241: getfield      #12                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n-       244: invokevirtual #165                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n+       241: getfield      #31                 // Field gpb:Lorg/apache/commons/compress/archivers/zip/GeneralPurposeBit;\n+       244: invokevirtual #516                // Method org/apache/commons/compress/archivers/zip/GeneralPurposeBit.equals:(Ljava/lang/Object;)Z\n        247: ifeq          254\n        250: iconst_1\n        251: goto          255\n        254: iconst_0\n        255: ireturn\n       LineNumberTable:\n         line 973: 0\n@@ -3303,15 +3303,15 @@\n   public void setVersionMadeBy(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #166                // Field versionMadeBy:I\n+         2: putfield      #517                // Field versionMadeBy:I\n          5: return\n       LineNumberTable:\n         line 1017: 0\n         line 1018: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3320,15 +3320,15 @@\n   public void setVersionRequired(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #167                // Field versionRequired:I\n+         2: putfield      #520                // Field versionRequired:I\n          5: return\n       LineNumberTable:\n         line 1026: 0\n         line 1027: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3336,58 +3336,58 @@\n \n   public int getVersionRequired();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #167                // Field versionRequired:I\n+         1: getfield      #520                // Field versionRequired:I\n          4: ireturn\n       LineNumberTable:\n         line 1035: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public int getVersionMadeBy();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #166                // Field versionMadeBy:I\n+         1: getfield      #517                // Field versionMadeBy:I\n          4: ireturn\n       LineNumberTable:\n         line 1044: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public int getRawFlag();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #168                // Field rawFlag:I\n+         1: getfield      #523                // Field rawFlag:I\n          4: ireturn\n       LineNumberTable:\n         line 1053: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setRawFlag(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #168                // Field rawFlag:I\n+         2: putfield      #523                // Field rawFlag:I\n          5: return\n       LineNumberTable:\n         line 1062: 0\n         line 1063: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3395,30 +3395,30 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource getNameSource();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+         1: getfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n          4: areturn\n       LineNumberTable:\n         line 1071: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setNameSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$NameSource);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #17                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n+         2: putfield      #49                 // Field nameSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource;\n          5: return\n       LineNumberTable:\n         line 1080: 0\n         line 1081: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3426,30 +3426,30 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource getCommentSource();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+         1: getfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n          4: areturn\n       LineNumberTable:\n         line 1089: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setCommentSource(org.apache.commons.compress.archivers.zip.ZipArchiveEntry$CommentSource);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #19                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n+         2: putfield      #58                 // Field commentSource:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource;\n          5: return\n       LineNumberTable:\n         line 1098: 0\n         line 1099: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3457,30 +3457,30 @@\n \n   public long getDiskNumberStart();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #169                // Field diskNumberStart:J\n+         1: getfield      #526                // Field diskNumberStart:J\n          4: lreturn\n       LineNumberTable:\n         line 1108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public void setDiskNumberStart(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #169                // Field diskNumberStart:J\n+         2: putfield      #526                // Field diskNumberStart:J\n          5: return\n       LineNumberTable:\n         line 1118: 0\n         line 1119: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -3488,25 +3488,25 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipExtraField[] copyOf(org.apache.commons.compress.archivers.zip.ZipExtraField[], int);\n     descriptor: ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;I)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=4, args_size=3\n          0: iload_2\n-         1: anewarray     #99                 // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+         1: anewarray     #303                // class org/apache/commons/compress/archivers/zip/ZipExtraField\n          4: astore_3\n          5: aload_1\n          6: iconst_0\n          7: aload_3\n          8: iconst_0\n          9: aload_1\n         10: arraylength\n         11: iload_2\n-        12: invokestatic  #170                // Method java/lang/Math.min:(II)I\n-        15: invokestatic  #120                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        12: invokestatic  #529                // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #384                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         18: aload_3\n         19: areturn\n       LineNumberTable:\n         line 1122: 0\n         line 1123: 5\n         line 1124: 18\n       LocalVariableTable:\n@@ -3519,47 +3519,47 @@\n   private static boolean lambda$findMatching$0(org.apache.commons.compress.archivers.zip.ZipShort, org.apache.commons.compress.archivers.zip.ZipExtraField);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #101,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-         7: invokevirtual #123                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n+         2: invokeinterface #309,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         7: invokevirtual #393                // Method org/apache/commons/compress/archivers/zip/ZipShort.equals:(Ljava/lang/Object;)Z\n         10: ireturn\n       LineNumberTable:\n         line 575: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 headerId   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n             0      11     1     f   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #8                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-         4: putstatic     #171                // Field EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: anewarray     #10                 // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+         4: putstatic     #535                // Field EMPTY_ZIP_ARCHIVE_ENTRY_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          7: return\n       LineNumberTable:\n         line 152: 0\n }\n SourceFile: \"ZipArchiveEntry.java\"\n-InnerClasses:\n-  static #173;                            // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n-  public static #176= #175 of #8;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #178= #177 of #8;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #180= #179 of #8;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  public static final #699= #698 of #703; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #518 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #676 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #519 (Ljava/lang/Object;)Z\n-      #520 REF_invokeVirtual java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-      #521 (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-  1: #518 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #683 (Ljava/lang/Object;)Z\n+      #684 REF_invokeVirtual java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+      #690 (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+  1: #676 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #519 (Ljava/lang/Object;)Z\n-      #528 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n-      #521 (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+      #683 (Ljava/lang/Object;)Z\n+      #692 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipArchiveEntry.lambda$findMatching$0:(Lorg/apache/commons/compress/archivers/zip/ZipShort;Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+      #690 (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)Z\n+InnerClasses:\n+  public static final #696= #44 of #10;   // NameSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$NameSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  public static final #697= #53 of #10;   // CommentSource=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$CommentSource of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  public static #698= #76 of #10;         // ExtraFieldParsingMode=class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$ExtraFieldParsingMode of class org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  static #699;                            // class org/apache/commons/compress/archivers/zip/ZipArchiveEntry$1\n+  public static final #705= #701 of #703; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
