{"diffoscope-json-version": 1, "source1": "first/TestUtils.class", "source2": "second/TestUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,99 +1,99 @@\n-  SHA-256 checksum 592c56ebc4c53cc1212d483666f2b4893737d01e4073385cc135e769381325c0\n+  SHA-256 checksum c36009568bc51019589b92becb8dc506ea83441b271842cf11e92c92e23d1bf7\n   Compiled from \"TestUtils.java\"\n public abstract class org.apache.commons.io.test.TestUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #81                         // org/apache/commons/io/test/TestUtils\n   super_class: #82                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Class              #179          // java/io/FileInputStream\n-    #2 = Methodref          #1.#180       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-    #3 = Methodref          #181.#182     // java/io/InputStream.read:([BII)I\n-    #4 = String             #183          // Different number of bytes:\n-    #5 = Methodref          #184.#185     // org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n-    #6 = Class              #186          // java/lang/StringBuilder\n-    #7 = Methodref          #6.#187       // java/lang/StringBuilder.\"<init>\":()V\n-    #8 = String             #188          // byte\n-    #9 = Methodref          #6.#189       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #6.#190       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #11 = String             #191          //  differs\n-   #12 = Methodref          #6.#192       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #13 = Methodref          #184.#193     // org/junit/jupiter/api/Assertions.assertEquals:(BBLjava/lang/String;)V\n-   #14 = Methodref          #181.#194     // java/io/InputStream.close:()V\n-   #15 = Class              #195          // java/lang/Throwable\n-   #16 = Methodref          #15.#196      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #17 = Class              #197          // java/io/FileReader\n-   #18 = Methodref          #17.#180      // java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n-   #19 = Methodref          #198.#199     // java/io/Reader.read:([CII)I\n-   #20 = String             #200          // Different number of chars:\n-   #21 = String             #201          // char\n-   #22 = Methodref          #184.#202     // org/junit/jupiter/api/Assertions.assertEquals:(CCLjava/lang/String;)V\n-   #23 = Methodref          #198.#194     // java/io/Reader.close:()V\n-   #24 = Methodref          #181.#203     // java/io/InputStream.read:([B)I\n-   #25 = String             #204          // The files\n-   #26 = Methodref          #6.#205       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #27 = String             #206          //  and\n-   #28 = String             #207          //  have differing number of bytes available (\n-   #29 = String             #208          //  vs\n-   #30 = String             #209          // )\n-   #31 = Methodref          #184.#210     // org/junit/jupiter/api/Assertions.assertTrue:(ZLjava/lang/String;)V\n-   #32 = String             #211          //  have different content\n-   #33 = Methodref          #184.#212     // org/junit/jupiter/api/Assertions.assertArrayEquals:([B[BLjava/lang/String;)V\n-   #34 = Methodref          #73.#213      // java/io/File.exists:()Z\n-   #35 = String             #214          // Check existence of output file\n-   #36 = Methodref          #81.#215      // org/apache/commons/io/test/TestUtils.assertEqualContent:(Ljava/io/File;Ljava/io/File;)V\n-   #37 = Class              #216          // java/io/PrintStream\n-   #38 = Methodref          #37.#217      // java/io/PrintStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #39 = Methodref          #37.#218      // java/io/PrintStream.write:(I)V\n-   #40 = String             #219          // The copy() method closed the stream when it shouldn\\'t have.\n-   #41 = Methodref          #15.#220      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #42 = Methodref          #184.#221     // org/junit/jupiter/api/Assertions.fail:(Ljava/lang/String;)Ljava/lang/Object;\n-   #43 = Class              #222          // java/io/PrintWriter\n-   #44 = Methodref          #43.#223      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #45 = Methodref          #43.#218      // java/io/PrintWriter.write:(I)V\n-   #46 = Methodref          #73.#224      // java/io/File.getParentFile:()Ljava/io/File;\n-   #47 = Class              #225          // java/io/IOException\n-   #48 = String             #226          // Cannot create file\n-   #49 = String             #227          //  as the parent directory does not exist\n-   #50 = Methodref          #47.#228      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Class              #229          // java/io/BufferedOutputStream\n-   #52 = Class              #230          // java/io/FileOutputStream\n-   #53 = Methodref          #52.#180      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #54 = Methodref          #51.#217      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #55 = Methodref          #81.#231      // org/apache/commons/io/test/TestUtils.generateTestData:(Ljava/io/OutputStream;J)V\n-   #56 = Methodref          #51.#194      // java/io/BufferedOutputStream.close:()V\n-   #57 = Class              #232          // java/io/OutputStreamWriter\n-   #58 = Fieldref           #233.#234     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #59 = Methodref          #57.#235      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #60 = Methodref          #43.#236      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #61 = Methodref          #43.#194      // java/io/PrintWriter.close:()V\n-   #62 = Methodref          #73.#237      // java/io/File.delete:()Z\n-   #63 = String             #238          // Couldn\\'t delete file:\n-   #64 = Class              #239          // org/apache/commons/io/output/ByteArrayOutputStream\n-   #65 = Methodref          #64.#187      // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":()V\n-   #66 = Methodref          #64.#240      // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n-   #67 = Methodref          #64.#194      // org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-   #68 = Class              #241          // java/lang/IllegalStateException\n-   #69 = String             #242          // This should never happen:\n-   #70 = Methodref          #47.#220      // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #71 = Methodref          #68.#243      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #72 = Methodref          #244.#218     // java/io/OutputStream.write:(I)V\n-   #73 = Class              #245          // java/io/File\n-   #74 = Methodref          #73.#246      // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #75 = Methodref          #247.#248     // org/apache/commons/io/FileUtils.forceDelete:(Ljava/io/File;)V\n-   #76 = Methodref          #249.#250     // java/lang/System.currentTimeMillis:()J\n-   #77 = Methodref          #251.#252     // java/lang/Thread.sleep:(J)V\n-   #78 = Methodref          #81.#252      // org/apache/commons/io/test/TestUtils.sleep:(J)V\n-   #79 = Class              #253          // java/lang/InterruptedException\n-   #80 = Methodref          #82.#187      // java/lang/Object.\"<init>\":()V\n-   #81 = Class              #254          // org/apache/commons/io/test/TestUtils\n-   #82 = Class              #255          // java/lang/Object\n+    #1 = Class              #172          // java/io/FileInputStream\n+    #2 = Methodref          #1.#173       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+    #3 = Methodref          #101.#174     // java/io/InputStream.read:([BII)I\n+    #4 = String             #175          // Different number of bytes:\n+    #5 = Methodref          #176.#177     // org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n+    #6 = Class              #178          // java/lang/StringBuilder\n+    #7 = Methodref          #6.#179       // java/lang/StringBuilder.\"<init>\":()V\n+    #8 = String             #180          // byte\n+    #9 = Methodref          #6.#181       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #10 = Methodref          #6.#182       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #11 = String             #183          //  differs\n+   #12 = Methodref          #6.#184       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #13 = Methodref          #176.#185     // org/junit/jupiter/api/Assertions.assertEquals:(BBLjava/lang/String;)V\n+   #14 = Methodref          #101.#186     // java/io/InputStream.close:()V\n+   #15 = Class              #187          // java/lang/Throwable\n+   #16 = Methodref          #15.#188      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #17 = Class              #189          // java/io/FileReader\n+   #18 = Methodref          #17.#173      // java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n+   #19 = Methodref          #110.#190     // java/io/Reader.read:([CII)I\n+   #20 = String             #191          // Different number of chars:\n+   #21 = String             #192          // char\n+   #22 = Methodref          #176.#193     // org/junit/jupiter/api/Assertions.assertEquals:(CCLjava/lang/String;)V\n+   #23 = Methodref          #110.#186     // java/io/Reader.close:()V\n+   #24 = Methodref          #101.#194     // java/io/InputStream.read:([B)I\n+   #25 = String             #195          // The files\n+   #26 = Methodref          #6.#196       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #27 = String             #197          //  and\n+   #28 = String             #198          //  have differing number of bytes available (\n+   #29 = String             #199          //  vs\n+   #30 = String             #200          // )\n+   #31 = Methodref          #176.#201     // org/junit/jupiter/api/Assertions.assertTrue:(ZLjava/lang/String;)V\n+   #32 = String             #202          //  have different content\n+   #33 = Methodref          #176.#203     // org/junit/jupiter/api/Assertions.assertArrayEquals:([B[BLjava/lang/String;)V\n+   #34 = Methodref          #73.#204      // java/io/File.exists:()Z\n+   #35 = String             #205          // Check existence of output file\n+   #36 = Methodref          #81.#206      // org/apache/commons/io/test/TestUtils.assertEqualContent:(Ljava/io/File;Ljava/io/File;)V\n+   #37 = Class              #207          // java/io/PrintStream\n+   #38 = Methodref          #37.#208      // java/io/PrintStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #39 = Methodref          #37.#209      // java/io/PrintStream.write:(I)V\n+   #40 = String             #210          // The copy() method closed the stream when it shouldn\\'t have.\n+   #41 = Methodref          #15.#211      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+   #42 = Methodref          #176.#212     // org/junit/jupiter/api/Assertions.fail:(Ljava/lang/String;)Ljava/lang/Object;\n+   #43 = Class              #213          // java/io/PrintWriter\n+   #44 = Methodref          #43.#214      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;)V\n+   #45 = Methodref          #43.#209      // java/io/PrintWriter.write:(I)V\n+   #46 = Methodref          #73.#215      // java/io/File.getParentFile:()Ljava/io/File;\n+   #47 = Class              #216          // java/io/IOException\n+   #48 = String             #217          // Cannot create file\n+   #49 = String             #218          //  as the parent directory does not exist\n+   #50 = Methodref          #47.#219      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #51 = Class              #220          // java/io/BufferedOutputStream\n+   #52 = Class              #221          // java/io/FileOutputStream\n+   #53 = Methodref          #52.#173      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #54 = Methodref          #51.#208      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #55 = Methodref          #81.#222      // org/apache/commons/io/test/TestUtils.generateTestData:(Ljava/io/OutputStream;J)V\n+   #56 = Methodref          #51.#186      // java/io/BufferedOutputStream.close:()V\n+   #57 = Class              #223          // java/io/OutputStreamWriter\n+   #58 = Fieldref           #224.#225     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #59 = Methodref          #57.#226      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #60 = Methodref          #43.#227      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #61 = Methodref          #43.#186      // java/io/PrintWriter.close:()V\n+   #62 = Methodref          #73.#228      // java/io/File.delete:()Z\n+   #63 = String             #229          // Couldn\\'t delete file:\n+   #64 = Class              #230          // org/apache/commons/io/output/ByteArrayOutputStream\n+   #65 = Methodref          #64.#179      // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":()V\n+   #66 = Methodref          #64.#231      // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n+   #67 = Methodref          #64.#186      // org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n+   #68 = Class              #232          // java/lang/IllegalStateException\n+   #69 = String             #233          // This should never happen:\n+   #70 = Methodref          #47.#211      // java/io/IOException.getMessage:()Ljava/lang/String;\n+   #71 = Methodref          #68.#234      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #72 = Methodref          #235.#209     // java/io/OutputStream.write:(I)V\n+   #73 = Class              #236          // java/io/File\n+   #74 = Methodref          #73.#237      // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #75 = Methodref          #238.#239     // org/apache/commons/io/FileUtils.forceDelete:(Ljava/io/File;)V\n+   #76 = Methodref          #240.#241     // java/lang/System.currentTimeMillis:()J\n+   #77 = Methodref          #242.#243     // java/lang/Thread.sleep:(J)V\n+   #78 = Methodref          #81.#243      // org/apache/commons/io/test/TestUtils.sleep:(J)V\n+   #79 = Class              #244          // java/lang/InterruptedException\n+   #80 = Methodref          #82.#179      // java/lang/Object.\"<init>\":()V\n+   #81 = Class              #245          // org/apache/commons/io/test/TestUtils\n+   #82 = Class              #246          // java/lang/Object\n    #83 = Utf8               assertEqualContent\n    #84 = Utf8               ([BLjava/io/File;)V\n    #85 = Utf8               Code\n    #86 = Utf8               LineNumberTable\n    #87 = Utf8               LocalVariableTable\n    #88 = Utf8               i\n    #89 = Utf8               I\n@@ -104,805 +104,644 @@\n    #94 = Utf8               file\n    #95 = Utf8               Ljava/io/File;\n    #96 = Utf8               count\n    #97 = Utf8               numRead\n    #98 = Utf8               b1\n    #99 = Utf8               StackMapTable\n   #100 = Class              #93           // \"[B\"\n-  #101 = Class              #245          // java/io/File\n-  #102 = Class              #256          // java/io/InputStream\n-  #103 = Class              #195          // java/lang/Throwable\n-  #104 = Utf8               Exceptions\n-  #105 = Utf8               ([CLjava/io/File;)V\n-  #106 = Utf8               ir\n-  #107 = Utf8               Ljava/io/Reader;\n-  #108 = Utf8               c0\n-  #109 = Utf8               [C\n-  #110 = Utf8               c1\n-  #111 = Class              #109          // \"[C\"\n-  #112 = Class              #257          // java/io/Reader\n-  #113 = Utf8               (Ljava/io/File;Ljava/io/File;)V\n-  #114 = Utf8               buf0\n-  #115 = Utf8               buf1\n-  #116 = Utf8               n0\n-  #117 = Utf8               n1\n-  #118 = Utf8               is1\n-  #119 = Utf8               is0\n-  #120 = Utf8               f0\n-  #121 = Utf8               f1\n-  #122 = Utf8               checkFile\n-  #123 = Utf8               referenceFile\n-  #124 = Class              #258          // java/lang/Exception\n-  #125 = Utf8               checkWrite\n-  #126 = Utf8               (Ljava/io/OutputStream;)V\n-  #127 = Utf8               t\n-  #128 = Utf8               Ljava/lang/Throwable;\n-  #129 = Utf8               output\n-  #130 = Utf8               Ljava/io/OutputStream;\n-  #131 = Utf8               (Ljava/io/Writer;)V\n-  #132 = Utf8               Ljava/io/Writer;\n-  #133 = Utf8               createFile\n-  #134 = Utf8               (Ljava/io/File;J)V\n-  #135 = Utf8               Ljava/io/BufferedOutputStream;\n-  #136 = Utf8               size\n-  #137 = Utf8               J\n-  #138 = Class              #229          // java/io/BufferedOutputStream\n-  #139 = Utf8               createLineBasedFile\n-  #140 = Utf8               (Ljava/io/File;[Ljava/lang/String;)V\n-  #141 = Utf8               element\n-  #142 = Utf8               Ljava/lang/String;\n-  #143 = Utf8               Ljava/io/PrintWriter;\n-  #144 = Utf8               data\n-  #145 = Utf8               [Ljava/lang/String;\n-  #146 = Class              #145          // \"[Ljava/lang/String;\"\n-  #147 = Class              #222          // java/io/PrintWriter\n-  #148 = Utf8               deleteFile\n-  #149 = Utf8               (Ljava/io/File;)V\n-  #150 = Utf8               generateTestData\n-  #151 = Class              #259          // java/io/FileNotFoundException\n-  #152 = Utf8               (J)[B\n-  #153 = Utf8               baout\n-  #154 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-  #155 = Utf8               ioe\n-  #156 = Utf8               Ljava/io/IOException;\n-  #157 = Class              #239          // org/apache/commons/io/output/ByteArrayOutputStream\n-  #158 = Class              #225          // java/io/IOException\n-  #159 = Utf8               (Ljava/io/OutputStream;J)V\n-  #160 = Utf8               out\n-  #161 = Utf8               newFile\n-  #162 = Utf8               (Ljava/io/File;Ljava/lang/String;)Ljava/io/File;\n-  #163 = Utf8               testDirectory\n-  #164 = Utf8               filename\n-  #165 = Utf8               destination\n-  #166 = Utf8               sleep\n-  #167 = Utf8               (J)V\n-  #168 = Utf8               millis\n-  #169 = Utf8               finishAtMillis\n-  #170 = Utf8               remainingMillis\n-  #171 = Utf8               sleepQuietly\n-  #172 = Class              #253          // java/lang/InterruptedException\n-  #173 = Utf8               <init>\n-  #174 = Utf8               ()V\n-  #175 = Utf8               this\n-  #176 = Utf8               Lorg/apache/commons/io/test/TestUtils;\n-  #177 = Utf8               SourceFile\n-  #178 = Utf8               TestUtils.java\n-  #179 = Utf8               java/io/FileInputStream\n-  #180 = NameAndType        #173:#149     // \"<init>\":(Ljava/io/File;)V\n-  #181 = Class              #256          // java/io/InputStream\n-  #182 = NameAndType        #260:#261     // read:([BII)I\n-  #183 = Utf8               Different number of bytes:\n-  #184 = Class              #262          // org/junit/jupiter/api/Assertions\n-  #185 = NameAndType        #263:#264     // assertEquals:(IILjava/lang/String;)V\n-  #186 = Utf8               java/lang/StringBuilder\n-  #187 = NameAndType        #173:#174     // \"<init>\":()V\n-  #188 = Utf8               byte\n-  #189 = NameAndType        #265:#266     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #190 = NameAndType        #265:#267     // append:(I)Ljava/lang/StringBuilder;\n-  #191 = Utf8                differs\n-  #192 = NameAndType        #268:#269     // toString:()Ljava/lang/String;\n-  #193 = NameAndType        #263:#270     // assertEquals:(BBLjava/lang/String;)V\n-  #194 = NameAndType        #271:#174     // close:()V\n-  #195 = Utf8               java/lang/Throwable\n-  #196 = NameAndType        #272:#273     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #197 = Utf8               java/io/FileReader\n-  #198 = Class              #257          // java/io/Reader\n-  #199 = NameAndType        #260:#274     // read:([CII)I\n-  #200 = Utf8               Different number of chars:\n-  #201 = Utf8               char\n-  #202 = NameAndType        #263:#275     // assertEquals:(CCLjava/lang/String;)V\n-  #203 = NameAndType        #260:#276     // read:([B)I\n-  #204 = Utf8               The files\n-  #205 = NameAndType        #265:#277     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #206 = Utf8                and\n-  #207 = Utf8                have differing number of bytes available (\n-  #208 = Utf8                vs\n-  #209 = Utf8               )\n-  #210 = NameAndType        #278:#279     // assertTrue:(ZLjava/lang/String;)V\n-  #211 = Utf8                have different content\n-  #212 = NameAndType        #280:#281     // assertArrayEquals:([B[BLjava/lang/String;)V\n-  #213 = NameAndType        #282:#283     // exists:()Z\n-  #214 = Utf8               Check existence of output file\n-  #215 = NameAndType        #83:#113      // assertEqualContent:(Ljava/io/File;Ljava/io/File;)V\n-  #216 = Utf8               java/io/PrintStream\n-  #217 = NameAndType        #173:#126     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #218 = NameAndType        #284:#285     // write:(I)V\n-  #219 = Utf8               The copy() method closed the stream when it shouldn\\'t have.\n-  #220 = NameAndType        #286:#269     // getMessage:()Ljava/lang/String;\n-  #221 = NameAndType        #287:#288     // fail:(Ljava/lang/String;)Ljava/lang/Object;\n-  #222 = Utf8               java/io/PrintWriter\n-  #223 = NameAndType        #173:#131     // \"<init>\":(Ljava/io/Writer;)V\n-  #224 = NameAndType        #289:#290     // getParentFile:()Ljava/io/File;\n-  #225 = Utf8               java/io/IOException\n-  #226 = Utf8               Cannot create file\n-  #227 = Utf8                as the parent directory does not exist\n-  #228 = NameAndType        #173:#291     // \"<init>\":(Ljava/lang/String;)V\n-  #229 = Utf8               java/io/BufferedOutputStream\n-  #230 = Utf8               java/io/FileOutputStream\n-  #231 = NameAndType        #150:#159     // generateTestData:(Ljava/io/OutputStream;J)V\n-  #232 = Utf8               java/io/OutputStreamWriter\n-  #233 = Class              #292          // java/nio/charset/StandardCharsets\n-  #234 = NameAndType        #293:#294     // UTF_8:Ljava/nio/charset/Charset;\n-  #235 = NameAndType        #173:#295     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #236 = NameAndType        #296:#291     // println:(Ljava/lang/String;)V\n-  #237 = NameAndType        #297:#283     // delete:()Z\n-  #238 = Utf8               Couldn\\'t delete file:\n-  #239 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n-  #240 = NameAndType        #298:#299     // toByteArray:()[B\n-  #241 = Utf8               java/lang/IllegalStateException\n-  #242 = Utf8               This should never happen:\n-  #243 = NameAndType        #173:#300     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #244 = Class              #301          // java/io/OutputStream\n-  #245 = Utf8               java/io/File\n-  #246 = NameAndType        #173:#302     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #247 = Class              #303          // org/apache/commons/io/FileUtils\n-  #248 = NameAndType        #304:#149     // forceDelete:(Ljava/io/File;)V\n-  #249 = Class              #305          // java/lang/System\n-  #250 = NameAndType        #306:#307     // currentTimeMillis:()J\n-  #251 = Class              #308          // java/lang/Thread\n-  #252 = NameAndType        #166:#167     // sleep:(J)V\n-  #253 = Utf8               java/lang/InterruptedException\n-  #254 = Utf8               org/apache/commons/io/test/TestUtils\n-  #255 = Utf8               java/lang/Object\n-  #256 = Utf8               java/io/InputStream\n-  #257 = Utf8               java/io/Reader\n-  #258 = Utf8               java/lang/Exception\n-  #259 = Utf8               java/io/FileNotFoundException\n-  #260 = Utf8               read\n-  #261 = Utf8               ([BII)I\n-  #262 = Utf8               org/junit/jupiter/api/Assertions\n-  #263 = Utf8               assertEquals\n-  #264 = Utf8               (IILjava/lang/String;)V\n-  #265 = Utf8               append\n-  #266 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #267 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #268 = Utf8               toString\n-  #269 = Utf8               ()Ljava/lang/String;\n-  #270 = Utf8               (BBLjava/lang/String;)V\n-  #271 = Utf8               close\n-  #272 = Utf8               addSuppressed\n-  #273 = Utf8               (Ljava/lang/Throwable;)V\n-  #274 = Utf8               ([CII)I\n-  #275 = Utf8               (CCLjava/lang/String;)V\n-  #276 = Utf8               ([B)I\n-  #277 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #278 = Utf8               assertTrue\n-  #279 = Utf8               (ZLjava/lang/String;)V\n-  #280 = Utf8               assertArrayEquals\n-  #281 = Utf8               ([B[BLjava/lang/String;)V\n-  #282 = Utf8               exists\n-  #283 = Utf8               ()Z\n-  #284 = Utf8               write\n-  #285 = Utf8               (I)V\n-  #286 = Utf8               getMessage\n-  #287 = Utf8               fail\n-  #288 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #289 = Utf8               getParentFile\n-  #290 = Utf8               ()Ljava/io/File;\n-  #291 = Utf8               (Ljava/lang/String;)V\n-  #292 = Utf8               java/nio/charset/StandardCharsets\n-  #293 = Utf8               UTF_8\n-  #294 = Utf8               Ljava/nio/charset/Charset;\n-  #295 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #296 = Utf8               println\n-  #297 = Utf8               delete\n-  #298 = Utf8               toByteArray\n-  #299 = Utf8               ()[B\n-  #300 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #301 = Utf8               java/io/OutputStream\n-  #302 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #303 = Utf8               org/apache/commons/io/FileUtils\n-  #304 = Utf8               forceDelete\n-  #305 = Utf8               java/lang/System\n-  #306 = Utf8               currentTimeMillis\n-  #307 = Utf8               ()J\n-  #308 = Utf8               java/lang/Thread\n+  #101 = Class              #247          // java/io/InputStream\n+  #102 = Utf8               Exceptions\n+  #103 = Utf8               ([CLjava/io/File;)V\n+  #104 = Utf8               ir\n+  #105 = Utf8               Ljava/io/Reader;\n+  #106 = Utf8               c0\n+  #107 = Utf8               [C\n+  #108 = Utf8               c1\n+  #109 = Class              #107          // \"[C\"\n+  #110 = Class              #248          // java/io/Reader\n+  #111 = Utf8               (Ljava/io/File;Ljava/io/File;)V\n+  #112 = Utf8               buf0\n+  #113 = Utf8               buf1\n+  #114 = Utf8               n0\n+  #115 = Utf8               n1\n+  #116 = Utf8               is1\n+  #117 = Utf8               is0\n+  #118 = Utf8               f0\n+  #119 = Utf8               f1\n+  #120 = Utf8               checkFile\n+  #121 = Utf8               referenceFile\n+  #122 = Class              #249          // java/lang/Exception\n+  #123 = Utf8               checkWrite\n+  #124 = Utf8               (Ljava/io/OutputStream;)V\n+  #125 = Utf8               t\n+  #126 = Utf8               Ljava/lang/Throwable;\n+  #127 = Utf8               output\n+  #128 = Utf8               Ljava/io/OutputStream;\n+  #129 = Utf8               (Ljava/io/Writer;)V\n+  #130 = Utf8               Ljava/io/Writer;\n+  #131 = Utf8               createFile\n+  #132 = Utf8               (Ljava/io/File;J)V\n+  #133 = Utf8               Ljava/io/BufferedOutputStream;\n+  #134 = Utf8               size\n+  #135 = Utf8               J\n+  #136 = Utf8               createLineBasedFile\n+  #137 = Utf8               (Ljava/io/File;[Ljava/lang/String;)V\n+  #138 = Utf8               element\n+  #139 = Utf8               Ljava/lang/String;\n+  #140 = Utf8               Ljava/io/PrintWriter;\n+  #141 = Utf8               data\n+  #142 = Utf8               [Ljava/lang/String;\n+  #143 = Class              #142          // \"[Ljava/lang/String;\"\n+  #144 = Utf8               deleteFile\n+  #145 = Utf8               (Ljava/io/File;)V\n+  #146 = Utf8               generateTestData\n+  #147 = Class              #250          // java/io/FileNotFoundException\n+  #148 = Utf8               (J)[B\n+  #149 = Utf8               baout\n+  #150 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+  #151 = Utf8               ioe\n+  #152 = Utf8               Ljava/io/IOException;\n+  #153 = Utf8               (Ljava/io/OutputStream;J)V\n+  #154 = Utf8               out\n+  #155 = Utf8               newFile\n+  #156 = Utf8               (Ljava/io/File;Ljava/lang/String;)Ljava/io/File;\n+  #157 = Utf8               testDirectory\n+  #158 = Utf8               filename\n+  #159 = Utf8               destination\n+  #160 = Utf8               sleep\n+  #161 = Utf8               (J)V\n+  #162 = Utf8               millis\n+  #163 = Utf8               finishAtMillis\n+  #164 = Utf8               remainingMillis\n+  #165 = Utf8               sleepQuietly\n+  #166 = Utf8               <init>\n+  #167 = Utf8               ()V\n+  #168 = Utf8               this\n+  #169 = Utf8               Lorg/apache/commons/io/test/TestUtils;\n+  #170 = Utf8               SourceFile\n+  #171 = Utf8               TestUtils.java\n+  #172 = Utf8               java/io/FileInputStream\n+  #173 = NameAndType        #166:#145     // \"<init>\":(Ljava/io/File;)V\n+  #174 = NameAndType        #251:#252     // read:([BII)I\n+  #175 = Utf8               Different number of bytes:\n+  #176 = Class              #253          // org/junit/jupiter/api/Assertions\n+  #177 = NameAndType        #254:#255     // assertEquals:(IILjava/lang/String;)V\n+  #178 = Utf8               java/lang/StringBuilder\n+  #179 = NameAndType        #166:#167     // \"<init>\":()V\n+  #180 = Utf8               byte\n+  #181 = NameAndType        #256:#257     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #182 = NameAndType        #256:#258     // append:(I)Ljava/lang/StringBuilder;\n+  #183 = Utf8                differs\n+  #184 = NameAndType        #259:#260     // toString:()Ljava/lang/String;\n+  #185 = NameAndType        #254:#261     // assertEquals:(BBLjava/lang/String;)V\n+  #186 = NameAndType        #262:#167     // close:()V\n+  #187 = Utf8               java/lang/Throwable\n+  #188 = NameAndType        #263:#264     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #189 = Utf8               java/io/FileReader\n+  #190 = NameAndType        #251:#265     // read:([CII)I\n+  #191 = Utf8               Different number of chars:\n+  #192 = Utf8               char\n+  #193 = NameAndType        #254:#266     // assertEquals:(CCLjava/lang/String;)V\n+  #194 = NameAndType        #251:#267     // read:([B)I\n+  #195 = Utf8               The files\n+  #196 = NameAndType        #256:#268     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #197 = Utf8                and\n+  #198 = Utf8                have differing number of bytes available (\n+  #199 = Utf8                vs\n+  #200 = Utf8               )\n+  #201 = NameAndType        #269:#270     // assertTrue:(ZLjava/lang/String;)V\n+  #202 = Utf8                have different content\n+  #203 = NameAndType        #271:#272     // assertArrayEquals:([B[BLjava/lang/String;)V\n+  #204 = NameAndType        #273:#274     // exists:()Z\n+  #205 = Utf8               Check existence of output file\n+  #206 = NameAndType        #83:#111      // assertEqualContent:(Ljava/io/File;Ljava/io/File;)V\n+  #207 = Utf8               java/io/PrintStream\n+  #208 = NameAndType        #166:#124     // \"<init>\":(Ljava/io/OutputStream;)V\n+  #209 = NameAndType        #275:#276     // write:(I)V\n+  #210 = Utf8               The copy() method closed the stream when it shouldn\\'t have.\n+  #211 = NameAndType        #277:#260     // getMessage:()Ljava/lang/String;\n+  #212 = NameAndType        #278:#279     // fail:(Ljava/lang/String;)Ljava/lang/Object;\n+  #213 = Utf8               java/io/PrintWriter\n+  #214 = NameAndType        #166:#129     // \"<init>\":(Ljava/io/Writer;)V\n+  #215 = NameAndType        #280:#281     // getParentFile:()Ljava/io/File;\n+  #216 = Utf8               java/io/IOException\n+  #217 = Utf8               Cannot create file\n+  #218 = Utf8                as the parent directory does not exist\n+  #219 = NameAndType        #166:#282     // \"<init>\":(Ljava/lang/String;)V\n+  #220 = Utf8               java/io/BufferedOutputStream\n+  #221 = Utf8               java/io/FileOutputStream\n+  #222 = NameAndType        #146:#153     // generateTestData:(Ljava/io/OutputStream;J)V\n+  #223 = Utf8               java/io/OutputStreamWriter\n+  #224 = Class              #283          // java/nio/charset/StandardCharsets\n+  #225 = NameAndType        #284:#285     // UTF_8:Ljava/nio/charset/Charset;\n+  #226 = NameAndType        #166:#286     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #227 = NameAndType        #287:#282     // println:(Ljava/lang/String;)V\n+  #228 = NameAndType        #288:#274     // delete:()Z\n+  #229 = Utf8               Couldn\\'t delete file:\n+  #230 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n+  #231 = NameAndType        #289:#290     // toByteArray:()[B\n+  #232 = Utf8               java/lang/IllegalStateException\n+  #233 = Utf8               This should never happen:\n+  #234 = NameAndType        #166:#291     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #235 = Class              #292          // java/io/OutputStream\n+  #236 = Utf8               java/io/File\n+  #237 = NameAndType        #166:#293     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #238 = Class              #294          // org/apache/commons/io/FileUtils\n+  #239 = NameAndType        #295:#145     // forceDelete:(Ljava/io/File;)V\n+  #240 = Class              #296          // java/lang/System\n+  #241 = NameAndType        #297:#298     // currentTimeMillis:()J\n+  #242 = Class              #299          // java/lang/Thread\n+  #243 = NameAndType        #160:#161     // sleep:(J)V\n+  #244 = Utf8               java/lang/InterruptedException\n+  #245 = Utf8               org/apache/commons/io/test/TestUtils\n+  #246 = Utf8               java/lang/Object\n+  #247 = Utf8               java/io/InputStream\n+  #248 = Utf8               java/io/Reader\n+  #249 = Utf8               java/lang/Exception\n+  #250 = Utf8               java/io/FileNotFoundException\n+  #251 = Utf8               read\n+  #252 = Utf8               ([BII)I\n+  #253 = Utf8               org/junit/jupiter/api/Assertions\n+  #254 = Utf8               assertEquals\n+  #255 = Utf8               (IILjava/lang/String;)V\n+  #256 = Utf8               append\n+  #257 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #258 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #259 = Utf8               toString\n+  #260 = Utf8               ()Ljava/lang/String;\n+  #261 = Utf8               (BBLjava/lang/String;)V\n+  #262 = Utf8               close\n+  #263 = Utf8               addSuppressed\n+  #264 = Utf8               (Ljava/lang/Throwable;)V\n+  #265 = Utf8               ([CII)I\n+  #266 = Utf8               (CCLjava/lang/String;)V\n+  #267 = Utf8               ([B)I\n+  #268 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #269 = Utf8               assertTrue\n+  #270 = Utf8               (ZLjava/lang/String;)V\n+  #271 = Utf8               assertArrayEquals\n+  #272 = Utf8               ([B[BLjava/lang/String;)V\n+  #273 = Utf8               exists\n+  #274 = Utf8               ()Z\n+  #275 = Utf8               write\n+  #276 = Utf8               (I)V\n+  #277 = Utf8               getMessage\n+  #278 = Utf8               fail\n+  #279 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #280 = Utf8               getParentFile\n+  #281 = Utf8               ()Ljava/io/File;\n+  #282 = Utf8               (Ljava/lang/String;)V\n+  #283 = Utf8               java/nio/charset/StandardCharsets\n+  #284 = Utf8               UTF_8\n+  #285 = Utf8               Ljava/nio/charset/Charset;\n+  #286 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #287 = Utf8               println\n+  #288 = Utf8               delete\n+  #289 = Utf8               toByteArray\n+  #290 = Utf8               ()[B\n+  #291 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #292 = Utf8               java/io/OutputStream\n+  #293 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #294 = Utf8               org/apache/commons/io/FileUtils\n+  #295 = Utf8               forceDelete\n+  #296 = Utf8               java/lang/System\n+  #297 = Utf8               currentTimeMillis\n+  #298 = Utf8               ()J\n+  #299 = Utf8               java/lang/Thread\n {\n   public static void assertEqualContent(byte[], java.io.File) throws java.io.IOException;\n     descriptor: ([BLjava/io/File;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=10, args_size=2\n+      stack=4, locals=8, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n          5: arraylength\n          6: newarray       byte\n          8: astore        4\n         10: new           #1                  // class java/io/FileInputStream\n         13: dup\n         14: aload_1\n         15: invokespecial #2                  // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n         18: astore        5\n-        20: aconst_null\n-        21: astore        6\n-        23: iload_2\n-        24: aload_0\n-        25: arraylength\n-        26: if_icmpge     51\n-        29: iload_3\n-        30: iflt          51\n-        33: aload         5\n-        35: aload         4\n-        37: iload_2\n-        38: aload_0\n-        39: arraylength\n-        40: invokevirtual #3                  // Method java/io/InputStream.read:([BII)I\n-        43: istore_3\n-        44: iload_2\n-        45: iload_3\n-        46: iadd\n-        47: istore_2\n-        48: goto          23\n-        51: aload_0\n-        52: arraylength\n-        53: iload_2\n-        54: ldc           #4                  // String Different number of bytes:\n-        56: invokestatic  #5                  // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n-        59: iconst_0\n-        60: istore        7\n-        62: iload         7\n-        64: iload_2\n-        65: if_icmpge     111\n-        68: aload_0\n-        69: iload         7\n-        71: baload\n-        72: aload         4\n-        74: iload         7\n-        76: baload\n-        77: new           #6                  // class java/lang/StringBuilder\n-        80: dup\n-        81: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        84: ldc           #8                  // String byte\n-        86: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: iload         7\n-        91: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        94: ldc           #11                 // String  differs\n-        96: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        99: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       102: invokestatic  #13                 // Method org/junit/jupiter/api/Assertions.assertEquals:(BBLjava/lang/String;)V\n-       105: iinc          7, 1\n-       108: goto          62\n-       111: aload         5\n-       113: ifnull        198\n-       116: aload         6\n-       118: ifnull        141\n-       121: aload         5\n-       123: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       126: goto          198\n-       129: astore        7\n-       131: aload         6\n-       133: aload         7\n-       135: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       138: goto          198\n-       141: aload         5\n-       143: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       146: goto          198\n-       149: astore        7\n-       151: aload         7\n-       153: astore        6\n-       155: aload         7\n-       157: athrow\n-       158: astore        8\n-       160: aload         5\n-       162: ifnull        195\n-       165: aload         6\n-       167: ifnull        190\n-       170: aload         5\n-       172: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       175: goto          195\n-       178: astore        9\n-       180: aload         6\n-       182: aload         9\n-       184: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       187: goto          195\n-       190: aload         5\n-       192: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       195: aload         8\n-       197: athrow\n-       198: return\n+        20: iload_2\n+        21: aload_0\n+        22: arraylength\n+        23: if_icmpge     48\n+        26: iload_3\n+        27: iflt          48\n+        30: aload         5\n+        32: aload         4\n+        34: iload_2\n+        35: aload_0\n+        36: arraylength\n+        37: invokevirtual #3                  // Method java/io/InputStream.read:([BII)I\n+        40: istore_3\n+        41: iload_2\n+        42: iload_3\n+        43: iadd\n+        44: istore_2\n+        45: goto          20\n+        48: aload_0\n+        49: arraylength\n+        50: iload_2\n+        51: ldc           #4                  // String Different number of bytes:\n+        53: invokestatic  #5                  // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n+        56: iconst_0\n+        57: istore        6\n+        59: iload         6\n+        61: iload_2\n+        62: if_icmpge     108\n+        65: aload_0\n+        66: iload         6\n+        68: baload\n+        69: aload         4\n+        71: iload         6\n+        73: baload\n+        74: new           #6                  // class java/lang/StringBuilder\n+        77: dup\n+        78: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        81: ldc           #8                  // String byte\n+        83: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        86: iload         6\n+        88: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        91: ldc           #11                 // String  differs\n+        93: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        96: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        99: invokestatic  #13                 // Method org/junit/jupiter/api/Assertions.assertEquals:(BBLjava/lang/String;)V\n+       102: iinc          6, 1\n+       105: goto          59\n+       108: aload         5\n+       110: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       113: goto          138\n+       116: astore        6\n+       118: aload         5\n+       120: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       123: goto          135\n+       126: astore        7\n+       128: aload         6\n+       130: aload         7\n+       132: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       135: aload         6\n+       137: athrow\n+       138: return\n       Exception table:\n          from    to  target type\n-           121   126   129   Class java/lang/Throwable\n-            23   111   149   Class java/lang/Throwable\n-            23   111   158   any\n-           170   175   178   Class java/lang/Throwable\n-           149   160   158   any\n+            20   108   116   Class java/lang/Throwable\n+           118   123   126   Class java/lang/Throwable\n       LineNumberTable:\n         line 55: 0\n         line 56: 4\n         line 57: 10\n-        line 58: 23\n-        line 59: 33\n-        line 60: 44\n-        line 62: 51\n-        line 63: 59\n-        line 64: 68\n-        line 63: 105\n-        line 66: 111\n-        line 57: 149\n-        line 66: 158\n-        line 67: 198\n+        line 58: 20\n+        line 59: 30\n+        line 60: 41\n+        line 62: 48\n+        line 63: 56\n+        line 64: 65\n+        line 63: 102\n+        line 66: 108\n+        line 57: 116\n+        line 67: 138\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           62      49     7     i   I\n-           20     178     5    is   Ljava/io/InputStream;\n-            0     199     0    b0   [B\n-            0     199     1  file   Ljava/io/File;\n-            2     197     2 count   I\n-            4     195     3 numRead   I\n-           10     189     4    b1   [B\n-      StackMapTable: number_of_entries = 12\n+           59      49     6     i   I\n+           20     118     5    is   Ljava/io/InputStream;\n+            0     139     0    b0   [B\n+            0     139     1  file   Ljava/io/File;\n+            2     137     2 count   I\n+            4     135     3 numRead   I\n+           10     129     4    b1   [B\n+      StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n-          offset_delta = 23\n-          locals = [ class \"[B\", class java/io/File, int, int, class \"[B\", class java/io/InputStream, class java/lang/Throwable ]\n+          offset_delta = 20\n+          locals = [ class \"[B\", class java/io/File, int, int, class \"[B\", class java/io/InputStream ]\n           stack = []\n         frame_type = 27 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 10\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 48\n-        frame_type = 81 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class \"[B\", class java/io/File, int, int, class \"[B\", class java/io/InputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 9\n+          locals = [ class \"[B\", class java/io/File, int, int, class \"[B\", class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class \"[B\", class java/io/File, int, int, class \"[B\" ]\n-          stack = []\n     Exceptions:\n       throws java.io.IOException\n \n   public static void assertEqualContent(char[], java.io.File) throws java.io.IOException;\n     descriptor: ([CLjava/io/File;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=10, args_size=2\n+      stack=4, locals=8, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n          5: arraylength\n          6: newarray       char\n          8: astore        4\n         10: new           #17                 // class java/io/FileReader\n         13: dup\n         14: aload_1\n         15: invokespecial #18                 // Method java/io/FileReader.\"<init>\":(Ljava/io/File;)V\n         18: astore        5\n-        20: aconst_null\n-        21: astore        6\n-        23: iload_2\n-        24: aload_0\n-        25: arraylength\n-        26: if_icmpge     51\n-        29: iload_3\n-        30: iflt          51\n-        33: aload         5\n-        35: aload         4\n-        37: iload_2\n-        38: aload_0\n-        39: arraylength\n-        40: invokevirtual #19                 // Method java/io/Reader.read:([CII)I\n-        43: istore_3\n-        44: iload_2\n-        45: iload_3\n-        46: iadd\n-        47: istore_2\n-        48: goto          23\n-        51: aload_0\n-        52: arraylength\n-        53: iload_2\n-        54: ldc           #20                 // String Different number of chars:\n-        56: invokestatic  #5                  // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n-        59: iconst_0\n-        60: istore        7\n-        62: iload         7\n-        64: iload_2\n-        65: if_icmpge     111\n-        68: aload_0\n-        69: iload         7\n-        71: caload\n-        72: aload         4\n-        74: iload         7\n-        76: caload\n-        77: new           #6                  // class java/lang/StringBuilder\n-        80: dup\n-        81: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        84: ldc           #21                 // String char\n-        86: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: iload         7\n-        91: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        94: ldc           #11                 // String  differs\n-        96: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        99: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       102: invokestatic  #22                 // Method org/junit/jupiter/api/Assertions.assertEquals:(CCLjava/lang/String;)V\n-       105: iinc          7, 1\n-       108: goto          62\n-       111: aload         5\n-       113: ifnull        198\n-       116: aload         6\n-       118: ifnull        141\n-       121: aload         5\n-       123: invokevirtual #23                 // Method java/io/Reader.close:()V\n-       126: goto          198\n-       129: astore        7\n-       131: aload         6\n-       133: aload         7\n-       135: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       138: goto          198\n-       141: aload         5\n-       143: invokevirtual #23                 // Method java/io/Reader.close:()V\n-       146: goto          198\n-       149: astore        7\n-       151: aload         7\n-       153: astore        6\n-       155: aload         7\n-       157: athrow\n-       158: astore        8\n-       160: aload         5\n-       162: ifnull        195\n-       165: aload         6\n-       167: ifnull        190\n-       170: aload         5\n-       172: invokevirtual #23                 // Method java/io/Reader.close:()V\n-       175: goto          195\n-       178: astore        9\n-       180: aload         6\n-       182: aload         9\n-       184: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       187: goto          195\n-       190: aload         5\n-       192: invokevirtual #23                 // Method java/io/Reader.close:()V\n-       195: aload         8\n-       197: athrow\n-       198: return\n+        20: iload_2\n+        21: aload_0\n+        22: arraylength\n+        23: if_icmpge     48\n+        26: iload_3\n+        27: iflt          48\n+        30: aload         5\n+        32: aload         4\n+        34: iload_2\n+        35: aload_0\n+        36: arraylength\n+        37: invokevirtual #19                 // Method java/io/Reader.read:([CII)I\n+        40: istore_3\n+        41: iload_2\n+        42: iload_3\n+        43: iadd\n+        44: istore_2\n+        45: goto          20\n+        48: aload_0\n+        49: arraylength\n+        50: iload_2\n+        51: ldc           #20                 // String Different number of chars:\n+        53: invokestatic  #5                  // Method org/junit/jupiter/api/Assertions.assertEquals:(IILjava/lang/String;)V\n+        56: iconst_0\n+        57: istore        6\n+        59: iload         6\n+        61: iload_2\n+        62: if_icmpge     108\n+        65: aload_0\n+        66: iload         6\n+        68: caload\n+        69: aload         4\n+        71: iload         6\n+        73: caload\n+        74: new           #6                  // class java/lang/StringBuilder\n+        77: dup\n+        78: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        81: ldc           #21                 // String char\n+        83: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        86: iload         6\n+        88: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        91: ldc           #11                 // String  differs\n+        93: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        96: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        99: invokestatic  #22                 // Method org/junit/jupiter/api/Assertions.assertEquals:(CCLjava/lang/String;)V\n+       102: iinc          6, 1\n+       105: goto          59\n+       108: aload         5\n+       110: invokevirtual #23                 // Method java/io/Reader.close:()V\n+       113: goto          138\n+       116: astore        6\n+       118: aload         5\n+       120: invokevirtual #23                 // Method java/io/Reader.close:()V\n+       123: goto          135\n+       126: astore        7\n+       128: aload         6\n+       130: aload         7\n+       132: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       135: aload         6\n+       137: athrow\n+       138: return\n       Exception table:\n          from    to  target type\n-           121   126   129   Class java/lang/Throwable\n-            23   111   149   Class java/lang/Throwable\n-            23   111   158   any\n-           170   175   178   Class java/lang/Throwable\n-           149   160   158   any\n+            20   108   116   Class java/lang/Throwable\n+           118   123   126   Class java/lang/Throwable\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 79: 10\n-        line 80: 23\n-        line 81: 33\n-        line 82: 44\n-        line 84: 51\n-        line 85: 59\n-        line 86: 68\n-        line 85: 105\n-        line 88: 111\n-        line 79: 149\n-        line 88: 158\n-        line 89: 198\n+        line 80: 20\n+        line 81: 30\n+        line 82: 41\n+        line 84: 48\n+        line 85: 56\n+        line 86: 65\n+        line 85: 102\n+        line 88: 108\n+        line 79: 116\n+        line 89: 138\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           62      49     7     i   I\n-           20     178     5    ir   Ljava/io/Reader;\n-            0     199     0    c0   [C\n-            0     199     1  file   Ljava/io/File;\n-            2     197     2 count   I\n-            4     195     3 numRead   I\n-           10     189     4    c1   [C\n-      StackMapTable: number_of_entries = 12\n+           59      49     6     i   I\n+           20     118     5    ir   Ljava/io/Reader;\n+            0     139     0    c0   [C\n+            0     139     1  file   Ljava/io/File;\n+            2     137     2 count   I\n+            4     135     3 numRead   I\n+           10     129     4    c1   [C\n+      StackMapTable: number_of_entries = 8\n         frame_type = 255 /* full_frame */\n-          offset_delta = 23\n-          locals = [ class \"[C\", class java/io/File, int, int, class \"[C\", class java/io/Reader, class java/lang/Throwable ]\n+          offset_delta = 20\n+          locals = [ class \"[C\", class java/io/File, int, int, class \"[C\", class java/io/Reader ]\n           stack = []\n         frame_type = 27 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 10\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 48\n-        frame_type = 81 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class \"[C\", class java/io/File, int, int, class \"[C\", class java/io/Reader, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 9\n+          locals = [ class \"[C\", class java/io/File, int, int, class \"[C\", class java/io/Reader, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class \"[C\", class java/io/File, int, int, class \"[C\" ]\n-          stack = []\n     Exceptions:\n       throws java.io.IOException\n \n   private static void assertEqualContent(java.io.File, java.io.File) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/io/File;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n-      stack=4, locals=14, args_size=2\n+      stack=4, locals=8, args_size=2\n          0: new           #1                  // class java/io/FileInputStream\n          3: dup\n          4: aload_0\n          5: invokespecial #2                  // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n          8: astore_2\n-         9: aconst_null\n-        10: astore_3\n-        11: new           #1                  // class java/io/FileInputStream\n-        14: dup\n-        15: aload_1\n-        16: invokespecial #2                  // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-        19: astore        4\n-        21: aconst_null\n-        22: astore        5\n-        24: sipush        1024\n-        27: newarray       byte\n-        29: astore        6\n-        31: sipush        1024\n-        34: newarray       byte\n-        36: astore        7\n-        38: iconst_0\n-        39: istore        8\n-        41: iconst_m1\n-        42: iload         8\n-        44: if_icmpeq     175\n-        47: aload_2\n-        48: aload         6\n-        50: invokevirtual #24                 // Method java/io/InputStream.read:([B)I\n-        53: istore        8\n-        55: aload         4\n-        57: aload         7\n-        59: invokevirtual #24                 // Method java/io/InputStream.read:([B)I\n-        62: istore        9\n-        64: iload         8\n-        66: iload         9\n-        68: if_icmpne     75\n-        71: iconst_1\n-        72: goto          76\n-        75: iconst_0\n-        76: new           #6                  // class java/lang/StringBuilder\n-        79: dup\n-        80: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        83: ldc           #25                 // String The files\n-        85: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        88: aload_0\n-        89: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        92: ldc           #27                 // String  and\n-        94: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        97: aload_1\n-        98: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       101: ldc           #28                 // String  have differing number of bytes available (\n-       103: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       106: iload         8\n-       108: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       111: ldc           #29                 // String  vs\n-       113: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       116: iload         9\n-       118: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       121: ldc           #30                 // String )\n-       123: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       126: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       129: invokestatic  #31                 // Method org/junit/jupiter/api/Assertions.assertTrue:(ZLjava/lang/String;)V\n-       132: aload         6\n-       134: aload         7\n-       136: new           #6                  // class java/lang/StringBuilder\n-       139: dup\n-       140: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       143: ldc           #25                 // String The files\n-       145: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       148: aload_0\n-       149: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       152: ldc           #27                 // String  and\n-       154: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       157: aload_1\n-       158: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       161: ldc           #32                 // String  have different content\n-       163: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       166: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       169: invokestatic  #33                 // Method org/junit/jupiter/api/Assertions.assertArrayEquals:([B[BLjava/lang/String;)V\n-       172: goto          41\n-       175: aload         4\n-       177: ifnull        262\n-       180: aload         5\n-       182: ifnull        205\n-       185: aload         4\n-       187: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       190: goto          262\n-       193: astore        6\n-       195: aload         5\n-       197: aload         6\n-       199: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       202: goto          262\n-       205: aload         4\n-       207: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       210: goto          262\n-       213: astore        6\n-       215: aload         6\n-       217: astore        5\n-       219: aload         6\n-       221: athrow\n-       222: astore        10\n-       224: aload         4\n-       226: ifnull        259\n-       229: aload         5\n-       231: ifnull        254\n-       234: aload         4\n-       236: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       239: goto          259\n-       242: astore        11\n-       244: aload         5\n-       246: aload         11\n-       248: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       251: goto          259\n-       254: aload         4\n-       256: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       259: aload         10\n-       261: athrow\n-       262: aload_2\n-       263: ifnull        338\n-       266: aload_3\n-       267: ifnull        288\n-       270: aload_2\n-       271: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       274: goto          338\n-       277: astore        4\n-       279: aload_3\n-       280: aload         4\n-       282: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       285: goto          338\n-       288: aload_2\n-       289: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       292: goto          338\n-       295: astore        4\n-       297: aload         4\n-       299: astore_3\n-       300: aload         4\n-       302: athrow\n-       303: astore        12\n-       305: aload_2\n-       306: ifnull        335\n-       309: aload_3\n-       310: ifnull        331\n-       313: aload_2\n-       314: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       317: goto          335\n-       320: astore        13\n-       322: aload_3\n-       323: aload         13\n-       325: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       328: goto          335\n-       331: aload_2\n-       332: invokevirtual #14                 // Method java/io/InputStream.close:()V\n-       335: aload         12\n-       337: athrow\n-       338: return\n+         9: new           #1                  // class java/io/FileInputStream\n+        12: dup\n+        13: aload_1\n+        14: invokespecial #2                  // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+        17: astore_3\n+        18: sipush        1024\n+        21: newarray       byte\n+        23: astore        4\n+        25: sipush        1024\n+        28: newarray       byte\n+        30: astore        5\n+        32: iconst_0\n+        33: istore        6\n+        35: iconst_m1\n+        36: iload         6\n+        38: if_icmpeq     168\n+        41: aload_2\n+        42: aload         4\n+        44: invokevirtual #24                 // Method java/io/InputStream.read:([B)I\n+        47: istore        6\n+        49: aload_3\n+        50: aload         5\n+        52: invokevirtual #24                 // Method java/io/InputStream.read:([B)I\n+        55: istore        7\n+        57: iload         6\n+        59: iload         7\n+        61: if_icmpne     68\n+        64: iconst_1\n+        65: goto          69\n+        68: iconst_0\n+        69: new           #6                  // class java/lang/StringBuilder\n+        72: dup\n+        73: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        76: ldc           #25                 // String The files\n+        78: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        81: aload_0\n+        82: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        85: ldc           #27                 // String  and\n+        87: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: aload_1\n+        91: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        94: ldc           #28                 // String  have differing number of bytes available (\n+        96: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        99: iload         6\n+       101: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       104: ldc           #29                 // String  vs\n+       106: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       109: iload         7\n+       111: invokevirtual #10                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       114: ldc           #30                 // String )\n+       116: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       119: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       122: invokestatic  #31                 // Method org/junit/jupiter/api/Assertions.assertTrue:(ZLjava/lang/String;)V\n+       125: aload         4\n+       127: aload         5\n+       129: new           #6                  // class java/lang/StringBuilder\n+       132: dup\n+       133: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+       136: ldc           #25                 // String The files\n+       138: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       141: aload_0\n+       142: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       145: ldc           #27                 // String  and\n+       147: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       150: aload_1\n+       151: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       154: ldc           #32                 // String  have different content\n+       156: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       159: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       162: invokestatic  #33                 // Method org/junit/jupiter/api/Assertions.assertArrayEquals:([B[BLjava/lang/String;)V\n+       165: goto          35\n+       168: aload_3\n+       169: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       172: goto          196\n+       175: astore        4\n+       177: aload_3\n+       178: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       181: goto          193\n+       184: astore        5\n+       186: aload         4\n+       188: aload         5\n+       190: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       193: aload         4\n+       195: athrow\n+       196: aload_2\n+       197: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       200: goto          221\n+       203: astore_3\n+       204: aload_2\n+       205: invokevirtual #14                 // Method java/io/InputStream.close:()V\n+       208: goto          219\n+       211: astore        4\n+       213: aload_3\n+       214: aload         4\n+       216: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       219: aload_3\n+       220: athrow\n+       221: return\n       Exception table:\n          from    to  target type\n-           185   190   193   Class java/lang/Throwable\n-            24   175   213   Class java/lang/Throwable\n-            24   175   222   any\n-           234   239   242   Class java/lang/Throwable\n-           213   224   222   any\n-           270   274   277   Class java/lang/Throwable\n-            11   262   295   Class java/lang/Throwable\n-            11   262   303   any\n-           313   317   320   Class java/lang/Throwable\n-           295   305   303   any\n+            18   168   175   Class java/lang/Throwable\n+           177   181   184   Class java/lang/Throwable\n+             9   196   203   Class java/lang/Throwable\n+           204   208   211   Class java/lang/Throwable\n       LineNumberTable:\n         line 102: 0\n-        line 103: 11\n-        line 104: 24\n-        line 105: 31\n-        line 106: 38\n-        line 109: 41\n-        line 110: 47\n-        line 111: 55\n-        line 112: 64\n-        line 116: 132\n-        line 118: 175\n-        line 103: 213\n-        line 118: 222\n-        line 119: 262\n-        line 102: 295\n-        line 119: 303\n-        line 120: 338\n+        line 103: 9\n+        line 104: 18\n+        line 105: 25\n+        line 106: 32\n+        line 109: 35\n+        line 110: 41\n+        line 111: 49\n+        line 112: 57\n+        line 116: 125\n+        line 118: 168\n+        line 103: 175\n+        line 119: 196\n+        line 102: 203\n+        line 120: 221\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           31     144     6  buf0   [B\n-           38     137     7  buf1   [B\n-           41     134     8    n0   I\n-           64     111     9    n1   I\n-           21     241     4   is1   Ljava/io/InputStream;\n-            9     329     2   is0   Ljava/io/InputStream;\n-            0     339     0    f0   Ljava/io/File;\n-            0     339     1    f1   Ljava/io/File;\n-      StackMapTable: number_of_entries = 20\n+           25     143     4  buf0   [B\n+           32     136     5  buf1   [B\n+           35     133     6    n0   I\n+           57     111     7    n1   I\n+           18     178     3   is1   Ljava/io/InputStream;\n+            9     212     2   is0   Ljava/io/InputStream;\n+            0     222     0    f0   Ljava/io/File;\n+            0     222     1    f1   Ljava/io/File;\n+      StackMapTable: number_of_entries = 12\n         frame_type = 255 /* full_frame */\n-          offset_delta = 41\n-          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable, class \"[B\", class \"[B\", int ]\n+          offset_delta = 35\n+          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/io/InputStream, class \"[B\", class \"[B\", int ]\n           stack = []\n         frame_type = 252 /* append */\n-          offset_delta = 33\n+          offset_delta = 32\n           locals = [ int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 98\n-          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable ]\n+          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/io/InputStream ]\n           stack = []\n-        frame_type = 81 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+        frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 8\n+          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable ]\n-          stack = []\n-        frame_type = 78 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class java/io/File, class java/io/File, class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class java/io/File, class java/io/File ]\n-          stack = []\n+        frame_type = 7 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n \n   public static void checkFile(java.io.File, java.io.File) throws java.lang.Exception;\n     descriptor: (Ljava/io/File;Ljava/io/File;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n@@ -1012,15 +851,15 @@\n           stack = [ class java/lang/Throwable ]\n         frame_type = 26 /* same */\n \n   public static void createFile(java.io.File, long) throws java.io.IOException;\n     descriptor: (Ljava/io/File;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=5, locals=8, args_size=2\n+      stack=5, locals=6, args_size=2\n          0: aload_0\n          1: invokevirtual #46                 // Method java/io/File.getParentFile:()Ljava/io/File;\n          4: invokevirtual #34                 // Method java/io/File.exists:()Z\n          7: ifne          42\n         10: new           #47                 // class java/io/IOException\n         13: dup\n         14: new           #6                  // class java/lang/StringBuilder\n@@ -1039,107 +878,69 @@\n         45: dup\n         46: new           #52                 // class java/io/FileOutputStream\n         49: dup\n         50: aload_0\n         51: invokespecial #53                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         54: invokespecial #54                 // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         57: astore_3\n-        58: aconst_null\n-        59: astore        4\n-        61: aload_3\n-        62: lload_1\n-        63: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n-        66: aload_3\n-        67: ifnull        147\n-        70: aload         4\n-        72: ifnull        94\n-        75: aload_3\n-        76: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-        79: goto          147\n-        82: astore        5\n-        84: aload         4\n-        86: aload         5\n-        88: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        91: goto          147\n-        94: aload_3\n-        95: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-        98: goto          147\n-       101: astore        5\n-       103: aload         5\n-       105: astore        4\n-       107: aload         5\n-       109: athrow\n-       110: astore        6\n-       112: aload_3\n-       113: ifnull        144\n-       116: aload         4\n-       118: ifnull        140\n-       121: aload_3\n-       122: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-       125: goto          144\n-       128: astore        7\n-       130: aload         4\n-       132: aload         7\n-       134: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       137: goto          144\n-       140: aload_3\n-       141: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-       144: aload         6\n-       146: athrow\n-       147: return\n+        58: aload_3\n+        59: lload_1\n+        60: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n+        63: aload_3\n+        64: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n+        67: goto          91\n+        70: astore        4\n+        72: aload_3\n+        73: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n+        76: goto          88\n+        79: astore        5\n+        81: aload         4\n+        83: aload         5\n+        85: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        88: aload         4\n+        90: athrow\n+        91: return\n       Exception table:\n          from    to  target type\n-            75    79    82   Class java/lang/Throwable\n-            61    66   101   Class java/lang/Throwable\n-            61    66   110   any\n-           121   125   128   Class java/lang/Throwable\n-           101   112   110   any\n+            58    63    70   Class java/lang/Throwable\n+            72    76    79   Class java/lang/Throwable\n       LineNumberTable:\n         line 146: 0\n         line 147: 10\n         line 150: 42\n-        line 152: 61\n-        line 153: 66\n-        line 150: 101\n-        line 153: 110\n-        line 154: 147\n+        line 152: 58\n+        line 153: 63\n+        line 150: 70\n+        line 154: 91\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           58      89     3 output   Ljava/io/BufferedOutputStream;\n-            0     148     0  file   Ljava/io/File;\n-            0     148     1  size   J\n-      StackMapTable: number_of_entries = 9\n+           58      33     3 output   Ljava/io/BufferedOutputStream;\n+            0      92     0  file   Ljava/io/File;\n+            0      92     1  size   J\n+      StackMapTable: number_of_entries = 5\n         frame_type = 42 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 39\n-          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          offset_delta = 27\n+          locals = [ class java/io/File, long, class java/io/BufferedOutputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 17\n-          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 8\n+          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class java/io/File, long ]\n-          stack = []\n     Exceptions:\n       throws java.io.IOException\n \n   public static void createLineBasedFile(java.io.File, java.lang.String[]) throws java.io.IOException;\n     descriptor: (Ljava/io/File;[Ljava/lang/String;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=7, locals=10, args_size=2\n+      stack=7, locals=7, args_size=2\n          0: aload_0\n          1: invokevirtual #46                 // Method java/io/File.getParentFile:()Ljava/io/File;\n          4: ifnull        49\n          7: aload_0\n          8: invokevirtual #46                 // Method java/io/File.getParentFile:()Ljava/io/File;\n         11: invokevirtual #34                 // Method java/io/File.exists:()Z\n         14: ifne          49\n@@ -1165,122 +966,84 @@\n         60: dup\n         61: aload_0\n         62: invokespecial #53                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         65: getstatic     #58                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n         68: invokespecial #59                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         71: invokespecial #44                 // Method java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;)V\n         74: astore_2\n-        75: aconst_null\n+        75: aload_1\n         76: astore_3\n-        77: aload_1\n-        78: astore        4\n-        80: aload         4\n-        82: arraylength\n-        83: istore        5\n-        85: iconst_0\n-        86: istore        6\n-        88: iload         6\n-        90: iload         5\n-        92: if_icmpge     114\n-        95: aload         4\n-        97: iload         6\n-        99: aaload\n-       100: astore        7\n-       102: aload_2\n-       103: aload         7\n-       105: invokevirtual #60                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V\n-       108: iinc          6, 1\n-       111: goto          88\n-       114: aload_2\n-       115: ifnull        190\n-       118: aload_3\n-       119: ifnull        140\n-       122: aload_2\n-       123: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n-       126: goto          190\n-       129: astore        4\n-       131: aload_3\n-       132: aload         4\n-       134: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       137: goto          190\n-       140: aload_2\n-       141: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n-       144: goto          190\n-       147: astore        4\n-       149: aload         4\n-       151: astore_3\n-       152: aload         4\n-       154: athrow\n-       155: astore        8\n-       157: aload_2\n-       158: ifnull        187\n-       161: aload_3\n-       162: ifnull        183\n-       165: aload_2\n-       166: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n-       169: goto          187\n-       172: astore        9\n-       174: aload_3\n-       175: aload         9\n-       177: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       180: goto          187\n-       183: aload_2\n-       184: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n-       187: aload         8\n-       189: athrow\n-       190: return\n+        77: aload_3\n+        78: arraylength\n+        79: istore        4\n+        81: iconst_0\n+        82: istore        5\n+        84: iload         5\n+        86: iload         4\n+        88: if_icmpge     109\n+        91: aload_3\n+        92: iload         5\n+        94: aaload\n+        95: astore        6\n+        97: aload_2\n+        98: aload         6\n+       100: invokevirtual #60                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V\n+       103: iinc          5, 1\n+       106: goto          84\n+       109: aload_2\n+       110: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n+       113: goto          134\n+       116: astore_3\n+       117: aload_2\n+       118: invokevirtual #61                 // Method java/io/PrintWriter.close:()V\n+       121: goto          132\n+       124: astore        4\n+       126: aload_3\n+       127: aload         4\n+       129: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       132: aload_3\n+       133: athrow\n+       134: return\n       Exception table:\n          from    to  target type\n-           122   126   129   Class java/lang/Throwable\n-            77   114   147   Class java/lang/Throwable\n-            77   114   155   any\n-           165   169   172   Class java/lang/Throwable\n-           147   157   155   any\n+            75   109   116   Class java/lang/Throwable\n+           117   121   124   Class java/lang/Throwable\n       LineNumberTable:\n         line 157: 0\n         line 158: 17\n         line 160: 49\n-        line 161: 77\n-        line 162: 102\n-        line 161: 108\n-        line 164: 114\n-        line 160: 147\n-        line 164: 155\n-        line 165: 190\n+        line 161: 75\n+        line 162: 97\n+        line 161: 103\n+        line 164: 109\n+        line 160: 116\n+        line 165: 134\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          102       6     7 element   Ljava/lang/String;\n-           75     115     2 output   Ljava/io/PrintWriter;\n-            0     191     0  file   Ljava/io/File;\n-            0     191     1  data   [Ljava/lang/String;\n-      StackMapTable: number_of_entries = 11\n+           97       6     6 element   Ljava/lang/String;\n+           75      59     2 output   Ljava/io/PrintWriter;\n+            0     135     0  file   Ljava/io/File;\n+            0     135     1  data   [Ljava/lang/String;\n+      StackMapTable: number_of_entries = 7\n         frame_type = 49 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 38\n-          locals = [ class java/io/File, class \"[Ljava/lang/String;\", class java/io/PrintWriter, class java/lang/Throwable, class \"[Ljava/lang/String;\", int, int ]\n+          offset_delta = 34\n+          locals = [ class java/io/File, class \"[Ljava/lang/String;\", class java/io/PrintWriter, class \"[Ljava/lang/String;\", int, int ]\n           stack = []\n         frame_type = 248 /* chop */\n-          offset_delta = 25\n-        frame_type = 78 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n+          offset_delta = 24\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class java/io/File, class \"[Ljava/lang/String;\", class java/io/PrintWriter, class java/lang/Throwable, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class java/io/File, class \"[Ljava/lang/String;\", class java/io/PrintWriter, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class java/io/File, class \"[Ljava/lang/String;\" ]\n-          stack = []\n+        frame_type = 7 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n \n   public static void deleteFile(java.io.File);\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n@@ -1310,223 +1073,146 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 33 /* same */\n \n   public static void generateTestData(java.io.File, long) throws java.io.IOException, java.io.FileNotFoundException;\n     descriptor: (Ljava/io/File;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=5, locals=8, args_size=2\n+      stack=5, locals=6, args_size=2\n          0: new           #51                 // class java/io/BufferedOutputStream\n          3: dup\n          4: new           #52                 // class java/io/FileOutputStream\n          7: dup\n          8: aload_0\n          9: invokespecial #53                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         12: invokespecial #54                 // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         15: astore_3\n-        16: aconst_null\n-        17: astore        4\n-        19: aload_3\n-        20: lload_1\n-        21: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n-        24: aload_3\n-        25: ifnull        105\n-        28: aload         4\n-        30: ifnull        52\n-        33: aload_3\n-        34: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-        37: goto          105\n-        40: astore        5\n-        42: aload         4\n-        44: aload         5\n-        46: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        49: goto          105\n-        52: aload_3\n-        53: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-        56: goto          105\n-        59: astore        5\n-        61: aload         5\n-        63: astore        4\n-        65: aload         5\n-        67: athrow\n-        68: astore        6\n-        70: aload_3\n-        71: ifnull        102\n-        74: aload         4\n-        76: ifnull        98\n-        79: aload_3\n-        80: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-        83: goto          102\n-        86: astore        7\n-        88: aload         4\n-        90: aload         7\n-        92: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        95: goto          102\n-        98: aload_3\n-        99: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n-       102: aload         6\n-       104: athrow\n-       105: return\n+        16: aload_3\n+        17: lload_1\n+        18: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n+        21: aload_3\n+        22: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n+        25: goto          49\n+        28: astore        4\n+        30: aload_3\n+        31: invokevirtual #56                 // Method java/io/BufferedOutputStream.close:()V\n+        34: goto          46\n+        37: astore        5\n+        39: aload         4\n+        41: aload         5\n+        43: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        46: aload         4\n+        48: athrow\n+        49: return\n       Exception table:\n          from    to  target type\n-            33    37    40   Class java/lang/Throwable\n-            19    24    59   Class java/lang/Throwable\n-            19    24    68   any\n-            79    83    86   Class java/lang/Throwable\n-            59    70    68   any\n+            16    21    28   Class java/lang/Throwable\n+            30    34    37   Class java/lang/Throwable\n       LineNumberTable:\n         line 174: 0\n-        line 175: 19\n-        line 176: 24\n-        line 174: 59\n-        line 176: 68\n-        line 177: 105\n+        line 175: 16\n+        line 176: 21\n+        line 174: 28\n+        line 177: 49\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           16      89     3 output   Ljava/io/BufferedOutputStream;\n-            0     106     0  file   Ljava/io/File;\n-            0     106     1  size   J\n-      StackMapTable: number_of_entries = 8\n+           16      33     3 output   Ljava/io/BufferedOutputStream;\n+            0      50     0  file   Ljava/io/File;\n+            0      50     1  size   J\n+      StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 40\n-          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          offset_delta = 28\n+          locals = [ class java/io/File, long, class java/io/BufferedOutputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 17\n-          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 8\n+          locals = [ class java/io/File, long, class java/io/BufferedOutputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 2\n-          locals = [ class java/io/File, long ]\n-          stack = []\n     Exceptions:\n       throws java.io.IOException, java.io.FileNotFoundException\n \n   public static byte[] generateTestData(long);\n     descriptor: (J)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=8, args_size=1\n+      stack=4, locals=5, args_size=1\n          0: new           #64                 // class org/apache/commons/io/output/ByteArrayOutputStream\n          3: dup\n          4: invokespecial #65                 // Method org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":()V\n          7: astore_2\n-         8: aconst_null\n-         9: astore_3\n-        10: aload_2\n-        11: lload_0\n-        12: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n-        15: aload_2\n-        16: invokevirtual #66                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n-        19: astore        4\n-        21: aload_2\n-        22: ifnull        51\n-        25: aload_3\n-        26: ifnull        47\n-        29: aload_2\n-        30: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-        33: goto          51\n-        36: astore        5\n-        38: aload_3\n-        39: aload         5\n-        41: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        44: goto          51\n-        47: aload_2\n-        48: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-        51: aload         4\n-        53: areturn\n-        54: astore        4\n-        56: aload         4\n-        58: astore_3\n-        59: aload         4\n-        61: athrow\n-        62: astore        6\n-        64: aload_2\n-        65: ifnull        94\n-        68: aload_3\n-        69: ifnull        90\n-        72: aload_2\n-        73: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-        76: goto          94\n-        79: astore        7\n-        81: aload_3\n-        82: aload         7\n-        84: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        87: goto          94\n-        90: aload_2\n-        91: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-        94: aload         6\n-        96: athrow\n-        97: astore_2\n-        98: new           #68                 // class java/lang/IllegalStateException\n-       101: dup\n-       102: new           #6                  // class java/lang/StringBuilder\n-       105: dup\n-       106: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-       109: ldc           #69                 // String This should never happen:\n-       111: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       114: aload_2\n-       115: invokevirtual #70                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n-       118: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       121: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       124: aload_2\n-       125: invokespecial #71                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-       128: athrow\n+         8: aload_2\n+         9: lload_0\n+        10: invokestatic  #55                 // Method generateTestData:(Ljava/io/OutputStream;J)V\n+        13: aload_2\n+        14: invokevirtual #66                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n+        17: astore_3\n+        18: aload_2\n+        19: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n+        22: aload_3\n+        23: areturn\n+        24: astore_3\n+        25: aload_2\n+        26: invokevirtual #67                 // Method org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n+        29: goto          40\n+        32: astore        4\n+        34: aload_3\n+        35: aload         4\n+        37: invokevirtual #16                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        40: aload_3\n+        41: athrow\n+        42: astore_2\n+        43: new           #68                 // class java/lang/IllegalStateException\n+        46: dup\n+        47: new           #6                  // class java/lang/StringBuilder\n+        50: dup\n+        51: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        54: ldc           #69                 // String This should never happen:\n+        56: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: aload_2\n+        60: invokevirtual #70                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+        63: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        66: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        69: aload_2\n+        70: invokespecial #71                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        73: athrow\n       Exception table:\n          from    to  target type\n-            29    33    36   Class java/lang/Throwable\n-            10    21    54   Class java/lang/Throwable\n-            10    21    62   any\n-            72    76    79   Class java/lang/Throwable\n-            54    64    62   any\n-             0    51    97   Class java/io/IOException\n-            54    97    97   Class java/io/IOException\n+             8    18    24   Class java/lang/Throwable\n+            25    29    32   Class java/lang/Throwable\n+             0    22    42   Class java/io/IOException\n+            24    42    42   Class java/io/IOException\n       LineNumberTable:\n         line 181: 0\n-        line 182: 10\n-        line 183: 15\n-        line 184: 21\n-        line 183: 51\n-        line 181: 54\n-        line 184: 62\n-        line 185: 97\n-        line 186: 98\n+        line 182: 8\n+        line 183: 13\n+        line 184: 18\n+        line 183: 22\n+        line 181: 24\n+        line 185: 42\n+        line 186: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            8      89     2 baout   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-           98      31     2   ioe   Ljava/io/IOException;\n-            0     129     0  size   J\n-      StackMapTable: number_of_entries = 9\n+            8      34     2 baout   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+           43      31     2   ioe   Ljava/io/IOException;\n+            0      74     0  size   J\n+      StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 36\n-          locals = [ long, class org/apache/commons/io/output/ByteArrayOutputStream, class java/lang/Throwable, class \"[B\" ]\n+          offset_delta = 24\n+          locals = [ long, class org/apache/commons/io/output/ByteArrayOutputStream ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 2\n+          offset_delta = 7\n           locals = [ long, class org/apache/commons/io/output/ByteArrayOutputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ long, class org/apache/commons/io/output/ByteArrayOutputStream, class java/lang/Throwable, top, top, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n+        frame_type = 7 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 2\n+          offset_delta = 1\n           locals = [ long ]\n           stack = [ class java/io/IOException ]\n \n   public static void generateTestData(java.io.OutputStream, long) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;J)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n"}]}
