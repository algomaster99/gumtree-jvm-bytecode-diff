{"diffoscope-json-version": 1, "source1": "first/Pass2Verifier$FAMRAV_Visitor.class", "source2": "second/Pass2Verifier$FAMRAV_Visitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,209 +1,203 @@\n-  SHA-256 checksum 7c9633550a509c40ce1f21b6b745d3f335672535df973223d4a4013c290041c7\n+  SHA-256 checksum 3e92158b83608dcb2aa9f0fcf795e03e2b0d81241296d5fe354a02d0fee88dc4\n   Compiled from \"Pass2Verifier.java\"\n final class org.apache.bcel.verifier.statics.Pass2Verifier$FAMRAV_Visitor extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #60                         // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n   super_class: #61                        // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 2, methods: 5, attributes: 2\n Constant pool:\n-    #1 = Methodref          #60.#88       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-    #2 = Fieldref           #60.#89       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-    #3 = Methodref          #61.#90       // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-    #4 = Methodref          #91.#92       // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-    #5 = Fieldref           #60.#93       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n-    #6 = Methodref          #94.#95       // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n-    #7 = Class              #96           // org/apache/bcel/Const\n-    #8 = Class              #97           // org/apache/bcel/verifier/exc/ClassConstraintException\n-    #9 = Class              #98           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#90        // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = String             #99           // ConstantFieldref \\'\n-   #12 = Methodref          #9.#100       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #101.#102     // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-   #14 = String             #103          // \\' has wrong tag!\n-   #15 = Methodref          #9.#104       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #8.#105       // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #94.#106      // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n-   #18 = Methodref          #107.#108     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #19 = Class              #109          // org/apache/bcel/classfile/ConstantNameAndType\n-   #20 = Methodref          #19.#110      // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n-   #21 = Class              #111          // org/apache/bcel/classfile/ConstantUtf8\n-   #22 = Methodref          #21.#112      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #23 = Methodref          #101.#113     // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n-   #24 = String             #114          // Invalid field name \\'\n-   #25 = String             #115          // \\' referenced by \\'\n-   #26 = String             #116          // \\'.\n-   #27 = Methodref          #94.#117      // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n-   #28 = Class              #118          // org/apache/bcel/classfile/ConstantClass\n-   #29 = Methodref          #28.#110      // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n-   #30 = Methodref          #101.#119     // org/apache/bcel/verifier/statics/Pass2Verifier.access$600:(Ljava/lang/String;)Z\n-   #31 = String             #120          // Illegal class name \\'\n-   #32 = String             #121          // \\' used by \\'\n-   #33 = Methodref          #19.#122      // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n-   #34 = Methodref          #123.#124     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #35 = Class              #125          // org/apache/bcel/classfile/ClassFormatException\n-   #36 = String             #126          // Illegal descriptor (==signature) \\'\n-   #37 = Methodref          #8.#127       // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #38 = Methodref          #128.#95      // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n-   #39 = String             #129          // ConstantInterfaceMethodref \\'\n-   #40 = Methodref          #128.#106     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n-   #41 = Methodref          #101.#130     // org/apache/bcel/verifier/statics/Pass2Verifier.access$700:(Ljava/lang/String;)Z\n-   #42 = String             #131          // Invalid (interface) method name \\'\n-   #43 = Methodref          #128.#117     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n-   #44 = Methodref          #123.#132     // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #45 = String             #133          // <clinit>\n-   #46 = Methodref          #134.#135     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #47 = Fieldref           #123.#136     // org/apache/bcel/generic/Type.VOID:Lorg/apache/bcel/generic/BasicType;\n-   #48 = String             #137          // Class or interface initialization method \\'<clinit>\\' usually has VOID return type instead of \\'\n-   #49 = Methodref          #9.#138       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #50 = String             #139          // \\'. Note this is really not a requirement of The Java Virtual Machine Specification, Second Edition.\n-   #51 = Methodref          #101.#140     // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n-   #52 = Methodref          #141.#95      // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n-   #53 = String             #142          // ConstantMethodref \\'\n-   #54 = Methodref          #141.#106     // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n-   #55 = Methodref          #101.#143     // org/apache/bcel/verifier/statics/Pass2Verifier.access$800:(Ljava/lang/String;)Z\n-   #56 = String             #144          // Invalid (non-interface) method name \\'\n-   #57 = Methodref          #141.#117     // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n+    #1 = Methodref          #60.#84       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+    #2 = Fieldref           #60.#85       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+    #3 = Methodref          #61.#86       // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+    #4 = Methodref          #87.#88       // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+    #5 = Fieldref           #60.#89       // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n+    #6 = Methodref          #74.#90       // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n+    #7 = Class              #91           // org/apache/bcel/Const\n+    #8 = Class              #92           // org/apache/bcel/verifier/exc/ClassConstraintException\n+    #9 = Class              #93           // java/lang/StringBuilder\n+   #10 = Methodref          #9.#86        // java/lang/StringBuilder.\"<init>\":()V\n+   #11 = String             #94           // ConstantFieldref \\'\n+   #12 = Methodref          #9.#95        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #13 = Methodref          #96.#97       // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+   #14 = String             #98           // \\' has wrong tag!\n+   #15 = Methodref          #9.#99        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #8.#100       // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #74.#101      // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n+   #18 = Methodref          #102.#103     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #19 = Class              #104          // org/apache/bcel/classfile/ConstantNameAndType\n+   #20 = Methodref          #19.#105      // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n+   #21 = Class              #106          // org/apache/bcel/classfile/ConstantUtf8\n+   #22 = Methodref          #21.#107      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #23 = Methodref          #96.#108      // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n+   #24 = String             #109          // Invalid field name \\'\n+   #25 = String             #110          // \\' referenced by \\'\n+   #26 = String             #111          // \\'.\n+   #27 = Methodref          #74.#112      // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n+   #28 = Class              #113          // org/apache/bcel/classfile/ConstantClass\n+   #29 = Methodref          #28.#105      // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n+   #30 = Methodref          #96.#114      // org/apache/bcel/verifier/statics/Pass2Verifier.access$600:(Ljava/lang/String;)Z\n+   #31 = String             #115          // Illegal class name \\'\n+   #32 = String             #116          // \\' used by \\'\n+   #33 = Methodref          #19.#117      // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n+   #34 = Methodref          #118.#119     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #35 = Class              #120          // org/apache/bcel/classfile/ClassFormatException\n+   #36 = String             #121          // Illegal descriptor (==signature) \\'\n+   #37 = Methodref          #8.#122       // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #38 = Methodref          #123.#90      // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n+   #39 = String             #124          // ConstantInterfaceMethodref \\'\n+   #40 = Methodref          #123.#101     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n+   #41 = Methodref          #96.#125      // org/apache/bcel/verifier/statics/Pass2Verifier.access$700:(Ljava/lang/String;)Z\n+   #42 = String             #126          // Invalid (interface) method name \\'\n+   #43 = Methodref          #123.#112     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n+   #44 = Methodref          #118.#127     // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #45 = String             #128          // <clinit>\n+   #46 = Methodref          #73.#129      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #47 = Fieldref           #118.#130     // org/apache/bcel/generic/Type.VOID:Lorg/apache/bcel/generic/BasicType;\n+   #48 = String             #131          // Class or interface initialization method \\'<clinit>\\' usually has VOID return type instead of \\'\n+   #49 = Methodref          #9.#132       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #50 = String             #133          // \\'. Note this is really not a requirement of The Java Virtual Machine Specification, Second Edition.\n+   #51 = Methodref          #96.#134      // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n+   #52 = Methodref          #135.#90      // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n+   #53 = String             #136          // ConstantMethodref \\'\n+   #54 = Methodref          #135.#101     // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n+   #55 = Methodref          #96.#137      // org/apache/bcel/verifier/statics/Pass2Verifier.access$800:(Ljava/lang/String;)Z\n+   #56 = String             #138          // Invalid (non-interface) method name \\'\n+   #57 = Methodref          #135.#112     // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n    #58 = String             #66           // <init>\n-   #59 = String             #145          // Instance initialization method must have VOID return type.\n-   #60 = Class              #146          // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n-   #61 = Class              #148          // org/apache/bcel/classfile/EmptyVisitor\n+   #59 = String             #139          // Instance initialization method must have VOID return type.\n+   #60 = Class              #140          // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n+   #61 = Class              #142          // org/apache/bcel/classfile/EmptyVisitor\n    #62 = Utf8               cp\n    #63 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n    #64 = Utf8               this$0\n    #65 = Utf8               Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n    #66 = Utf8               <init>\n    #67 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n    #68 = Utf8               Code\n    #69 = Utf8               LineNumberTable\n    #70 = Utf8               visitConstantFieldref\n    #71 = Utf8               (Lorg/apache/bcel/classfile/ConstantFieldref;)V\n    #72 = Utf8               StackMapTable\n-   #73 = Class              #109          // org/apache/bcel/classfile/ConstantNameAndType\n-   #74 = Class              #149          // java/lang/String\n-   #75 = Class              #118          // org/apache/bcel/classfile/ConstantClass\n-   #76 = Class              #146          // org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n-   #77 = Class              #150          // org/apache/bcel/classfile/ConstantFieldref\n-   #78 = Class              #125          // org/apache/bcel/classfile/ClassFormatException\n-   #79 = Utf8               visitConstantInterfaceMethodref\n-   #80 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n-   #81 = Utf8               visitConstantMethodref\n-   #82 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n-   #83 = Class              #151          // org/apache/bcel/verifier/statics/Pass2Verifier$1\n-   #84 = Utf8               InnerClasses\n-   #85 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               Pass2Verifier.java\n-   #88 = NameAndType        #66:#67       // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-   #89 = NameAndType        #64:#65       // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-   #90 = NameAndType        #66:#152      // \"<init>\":()V\n-   #91 = Class              #153          // org/apache/bcel/classfile/JavaClass\n-   #92 = NameAndType        #154:#155     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #93 = NameAndType        #62:#63       // cp:Lorg/apache/bcel/classfile/ConstantPool;\n-   #94 = Class              #150          // org/apache/bcel/classfile/ConstantFieldref\n-   #95 = NameAndType        #156:#157     // getTag:()B\n-   #96 = Utf8               org/apache/bcel/Const\n-   #97 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n-   #98 = Utf8               java/lang/StringBuilder\n-   #99 = Utf8               ConstantFieldref \\'\n-  #100 = NameAndType        #158:#159     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #101 = Class              #160          // org/apache/bcel/verifier/statics/Pass2Verifier\n-  #102 = NameAndType        #161:#162     // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-  #103 = Utf8               \\' has wrong tag!\n-  #104 = NameAndType        #163:#164     // toString:()Ljava/lang/String;\n-  #105 = NameAndType        #66:#165      // \"<init>\":(Ljava/lang/String;)V\n-  #106 = NameAndType        #166:#167     // getNameAndTypeIndex:()I\n-  #107 = Class              #168          // org/apache/bcel/classfile/ConstantPool\n-  #108 = NameAndType        #169:#170     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #109 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n-  #110 = NameAndType        #171:#167     // getNameIndex:()I\n-  #111 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #112 = NameAndType        #172:#164     // getBytes:()Ljava/lang/String;\n-  #113 = NameAndType        #173:#174     // access$400:(Ljava/lang/String;)Z\n-  #114 = Utf8               Invalid field name \\'\n-  #115 = Utf8               \\' referenced by \\'\n-  #116 = Utf8               \\'.\n-  #117 = NameAndType        #175:#167     // getClassIndex:()I\n-  #118 = Utf8               org/apache/bcel/classfile/ConstantClass\n-  #119 = NameAndType        #176:#174     // access$600:(Ljava/lang/String;)Z\n-  #120 = Utf8               Illegal class name \\'\n-  #121 = Utf8               \\' used by \\'\n-  #122 = NameAndType        #177:#167     // getSignatureIndex:()I\n-  #123 = Class              #178          // org/apache/bcel/generic/Type\n-  #124 = NameAndType        #179:#180     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #125 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #126 = Utf8               Illegal descriptor (==signature) \\'\n-  #127 = NameAndType        #66:#181      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #128 = Class              #182          // org/apache/bcel/classfile/ConstantInterfaceMethodref\n-  #129 = Utf8               ConstantInterfaceMethodref \\'\n-  #130 = NameAndType        #183:#174     // access$700:(Ljava/lang/String;)Z\n-  #131 = Utf8               Invalid (interface) method name \\'\n-  #132 = NameAndType        #184:#180     // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #133 = Utf8               <clinit>\n-  #134 = Class              #149          // java/lang/String\n-  #135 = NameAndType        #185:#186     // equals:(Ljava/lang/Object;)Z\n-  #136 = NameAndType        #187:#188     // VOID:Lorg/apache/bcel/generic/BasicType;\n-  #137 = Utf8               Class or interface initialization method \\'<clinit>\\' usually has VOID return type instead of \\'\n-  #138 = NameAndType        #158:#189     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #139 = Utf8               \\'. Note this is really not a requirement of The Java Virtual Machine Specification, Second Edition.\n-  #140 = NameAndType        #190:#165     // addMessage:(Ljava/lang/String;)V\n-  #141 = Class              #191          // org/apache/bcel/classfile/ConstantMethodref\n-  #142 = Utf8               ConstantMethodref \\'\n-  #143 = NameAndType        #192:#174     // access$800:(Ljava/lang/String;)Z\n-  #144 = Utf8               Invalid (non-interface) method name \\'\n-  #145 = Utf8               Instance initialization method must have VOID return type.\n-  #146 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n-  #147 = Utf8               FAMRAV_Visitor\n-  #148 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-  #149 = Utf8               java/lang/String\n-  #150 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n-  #151 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  #152 = Utf8               ()V\n-  #153 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #154 = Utf8               getConstantPool\n-  #155 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #156 = Utf8               getTag\n-  #157 = Utf8               ()B\n-  #158 = Utf8               append\n-  #159 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #160 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n-  #161 = Utf8               access$000\n-  #162 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-  #163 = Utf8               toString\n-  #164 = Utf8               ()Ljava/lang/String;\n-  #165 = Utf8               (Ljava/lang/String;)V\n-  #166 = Utf8               getNameAndTypeIndex\n-  #167 = Utf8               ()I\n-  #168 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #169 = Utf8               getConstant\n-  #170 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #171 = Utf8               getNameIndex\n-  #172 = Utf8               getBytes\n-  #173 = Utf8               access$400\n-  #174 = Utf8               (Ljava/lang/String;)Z\n-  #175 = Utf8               getClassIndex\n-  #176 = Utf8               access$600\n-  #177 = Utf8               getSignatureIndex\n-  #178 = Utf8               org/apache/bcel/generic/Type\n-  #179 = Utf8               getType\n-  #180 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #181 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #182 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n-  #183 = Utf8               access$700\n-  #184 = Utf8               getReturnType\n-  #185 = Utf8               equals\n-  #186 = Utf8               (Ljava/lang/Object;)Z\n-  #187 = Utf8               VOID\n-  #188 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #189 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #190 = Utf8               addMessage\n-  #191 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n-  #192 = Utf8               access$800\n+   #73 = Class              #143          // java/lang/String\n+   #74 = Class              #144          // org/apache/bcel/classfile/ConstantFieldref\n+   #75 = Utf8               visitConstantInterfaceMethodref\n+   #76 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n+   #77 = Utf8               visitConstantMethodref\n+   #78 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n+   #79 = Class              #145          // org/apache/bcel/verifier/statics/Pass2Verifier$1\n+   #80 = Utf8               InnerClasses\n+   #81 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               Pass2Verifier.java\n+   #84 = NameAndType        #66:#67       // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+   #85 = NameAndType        #64:#65       // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+   #86 = NameAndType        #66:#146      // \"<init>\":()V\n+   #87 = Class              #147          // org/apache/bcel/classfile/JavaClass\n+   #88 = NameAndType        #148:#149     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #89 = NameAndType        #62:#63       // cp:Lorg/apache/bcel/classfile/ConstantPool;\n+   #90 = NameAndType        #150:#151     // getTag:()B\n+   #91 = Utf8               org/apache/bcel/Const\n+   #92 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n+   #93 = Utf8               java/lang/StringBuilder\n+   #94 = Utf8               ConstantFieldref \\'\n+   #95 = NameAndType        #152:#153     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = Class              #154          // org/apache/bcel/verifier/statics/Pass2Verifier\n+   #97 = NameAndType        #155:#156     // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+   #98 = Utf8               \\' has wrong tag!\n+   #99 = NameAndType        #157:#158     // toString:()Ljava/lang/String;\n+  #100 = NameAndType        #66:#159      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = NameAndType        #160:#161     // getNameAndTypeIndex:()I\n+  #102 = Class              #162          // org/apache/bcel/classfile/ConstantPool\n+  #103 = NameAndType        #163:#164     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #104 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n+  #105 = NameAndType        #165:#161     // getNameIndex:()I\n+  #106 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #107 = NameAndType        #166:#158     // getBytes:()Ljava/lang/String;\n+  #108 = NameAndType        #167:#168     // access$400:(Ljava/lang/String;)Z\n+  #109 = Utf8               Invalid field name \\'\n+  #110 = Utf8               \\' referenced by \\'\n+  #111 = Utf8               \\'.\n+  #112 = NameAndType        #169:#161     // getClassIndex:()I\n+  #113 = Utf8               org/apache/bcel/classfile/ConstantClass\n+  #114 = NameAndType        #170:#168     // access$600:(Ljava/lang/String;)Z\n+  #115 = Utf8               Illegal class name \\'\n+  #116 = Utf8               \\' used by \\'\n+  #117 = NameAndType        #171:#161     // getSignatureIndex:()I\n+  #118 = Class              #172          // org/apache/bcel/generic/Type\n+  #119 = NameAndType        #173:#174     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #120 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+  #121 = Utf8               Illegal descriptor (==signature) \\'\n+  #122 = NameAndType        #66:#175      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #123 = Class              #176          // org/apache/bcel/classfile/ConstantInterfaceMethodref\n+  #124 = Utf8               ConstantInterfaceMethodref \\'\n+  #125 = NameAndType        #177:#168     // access$700:(Ljava/lang/String;)Z\n+  #126 = Utf8               Invalid (interface) method name \\'\n+  #127 = NameAndType        #178:#174     // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #128 = Utf8               <clinit>\n+  #129 = NameAndType        #179:#180     // equals:(Ljava/lang/Object;)Z\n+  #130 = NameAndType        #181:#182     // VOID:Lorg/apache/bcel/generic/BasicType;\n+  #131 = Utf8               Class or interface initialization method \\'<clinit>\\' usually has VOID return type instead of \\'\n+  #132 = NameAndType        #152:#183     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #133 = Utf8               \\'. Note this is really not a requirement of The Java Virtual Machine Specification, Second Edition.\n+  #134 = NameAndType        #184:#159     // addMessage:(Ljava/lang/String;)V\n+  #135 = Class              #185          // org/apache/bcel/classfile/ConstantMethodref\n+  #136 = Utf8               ConstantMethodref \\'\n+  #137 = NameAndType        #186:#168     // access$800:(Ljava/lang/String;)Z\n+  #138 = Utf8               Invalid (non-interface) method name \\'\n+  #139 = Utf8               Instance initialization method must have VOID return type.\n+  #140 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor\n+  #141 = Utf8               FAMRAV_Visitor\n+  #142 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+  #143 = Utf8               java/lang/String\n+  #144 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n+  #145 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  #146 = Utf8               ()V\n+  #147 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #148 = Utf8               getConstantPool\n+  #149 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #150 = Utf8               getTag\n+  #151 = Utf8               ()B\n+  #152 = Utf8               append\n+  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #154 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n+  #155 = Utf8               access$000\n+  #156 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+  #157 = Utf8               toString\n+  #158 = Utf8               ()Ljava/lang/String;\n+  #159 = Utf8               (Ljava/lang/String;)V\n+  #160 = Utf8               getNameAndTypeIndex\n+  #161 = Utf8               ()I\n+  #162 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #163 = Utf8               getConstant\n+  #164 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #165 = Utf8               getNameIndex\n+  #166 = Utf8               getBytes\n+  #167 = Utf8               access$400\n+  #168 = Utf8               (Ljava/lang/String;)Z\n+  #169 = Utf8               getClassIndex\n+  #170 = Utf8               access$600\n+  #171 = Utf8               getSignatureIndex\n+  #172 = Utf8               org/apache/bcel/generic/Type\n+  #173 = Utf8               getType\n+  #174 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #175 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #176 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n+  #177 = Utf8               access$700\n+  #178 = Utf8               getReturnType\n+  #179 = Utf8               equals\n+  #180 = Utf8               (Ljava/lang/Object;)Z\n+  #181 = Utf8               VOID\n+  #182 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+  #183 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #184 = Utf8               addMessage\n+  #185 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n+  #186 = Utf8               access$800\n {\n   private final org.apache.bcel.classfile.ConstantPool cp;\n     descriptor: Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   final org.apache.bcel.verifier.statics.Pass2Verifier this$0;\n     descriptor: Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n@@ -794,9 +788,9 @@\n          3: invokespecial #1                  // Method \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n          6: return\n       LineNumberTable:\n         line 1006: 0\n }\n SourceFile: \"Pass2Verifier.java\"\n InnerClasses:\n-  static #83;                             // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  private final #147= #60 of #101;        // FAMRAV_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n+  static #79;                             // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  private final #141= #60 of #96;         // FAMRAV_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$FAMRAV_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n"}]}
