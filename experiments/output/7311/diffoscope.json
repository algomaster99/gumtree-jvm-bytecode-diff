{"diffoscope-json-version": 1, "source1": "first/JSONML.class", "source2": "second/JSONML.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,97 +1,97 @@\n-  SHA-256 checksum 5574fd0a866e87353234f2bc0ac87cdd275c4d6b987357b70fecc2e349645b62\n+  SHA-256 checksum 63c7d18d3db3f9bae358c2343b1675c49b878fd9cf4f1fb41d0f57bf60c69b47\n   Compiled from \"JSONML.java\"\n public class org.json.JSONML\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #79                         // org/json/JSONML\n   super_class: #80                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #80.#142      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #60.#143      // org/json/XMLTokener.more:()Z\n-    #3 = String             #144          // Bad XML\n-    #4 = Methodref          #60.#145      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-    #5 = Methodref          #60.#146      // org/json/XMLTokener.nextContent:()Ljava/lang/Object;\n-    #6 = Fieldref           #147.#148     // org/json/XML.LT:Ljava/lang/Character;\n-    #7 = Methodref          #60.#149      // org/json/XMLTokener.nextToken:()Ljava/lang/Object;\n-    #8 = Class              #150          // java/lang/Character\n-    #9 = Fieldref           #147.#151     // org/json/XML.SLASH:Ljava/lang/Character;\n-   #10 = Class              #152          // java/lang/String\n-   #11 = Class              #153          // org/json/JSONException\n-   #12 = Class              #154          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#142      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #155          // Expected a closing name instead of \\'\n-   #15 = Methodref          #12.#156      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#157      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #17 = String             #158          // \\'.\n-   #18 = Methodref          #12.#159      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Methodref          #11.#160      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n-   #20 = Fieldref           #147.#161     // org/json/XML.GT:Ljava/lang/Character;\n-   #21 = String             #162          // Misshaped close tag\n-   #22 = Fieldref           #147.#163     // org/json/XML.BANG:Ljava/lang/Character;\n-   #23 = Methodref          #60.#164      // org/json/XMLTokener.next:()C\n-   #24 = String             #165          // -->\n-   #25 = Methodref          #60.#166      // org/json/XMLTokener.skipPast:(Ljava/lang/String;)V\n-   #26 = Methodref          #60.#167      // org/json/XMLTokener.back:()V\n-   #27 = String             #168          // CDATA\n-   #28 = Methodref          #80.#169      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #29 = Methodref          #60.#170      // org/json/XMLTokener.nextCDATA:()Ljava/lang/String;\n-   #30 = Methodref          #38.#171      // org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n-   #31 = String             #172          // Expected \\'CDATA[\\'\n-   #32 = Methodref          #60.#173      // org/json/XMLTokener.nextMeta:()Ljava/lang/Object;\n-   #33 = String             #174          // Missing \\'>\\' after \\'<!\\'.\n-   #34 = Fieldref           #147.#175     // org/json/XML.QUEST:Ljava/lang/Character;\n-   #35 = String             #176          // ?>\n-   #36 = String             #177          // Misshaped tag\n-   #37 = String             #178          // Bad tagName \\'\n-   #38 = Class              #179          // org/json/JSONArray\n-   #39 = Methodref          #38.#142      // org/json/JSONArray.\"<init>\":()V\n-   #40 = Class              #180          // org/json/JSONObject\n-   #41 = Methodref          #40.#142      // org/json/JSONObject.\"<init>\":()V\n+    #1 = Methodref          #80.#136      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #60.#137      // org/json/XMLTokener.more:()Z\n+    #3 = String             #138          // Bad XML\n+    #4 = Methodref          #60.#139      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+    #5 = Methodref          #60.#140      // org/json/XMLTokener.nextContent:()Ljava/lang/Object;\n+    #6 = Fieldref           #141.#142     // org/json/XML.LT:Ljava/lang/Character;\n+    #7 = Methodref          #60.#143      // org/json/XMLTokener.nextToken:()Ljava/lang/Object;\n+    #8 = Class              #144          // java/lang/Character\n+    #9 = Fieldref           #141.#145     // org/json/XML.SLASH:Ljava/lang/Character;\n+   #10 = Class              #146          // java/lang/String\n+   #11 = Class              #147          // org/json/JSONException\n+   #12 = Class              #148          // java/lang/StringBuilder\n+   #13 = Methodref          #12.#136      // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #149          // Expected a closing name instead of \\'\n+   #15 = Methodref          #12.#150      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #12.#151      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #17 = String             #152          // \\'.\n+   #18 = Methodref          #12.#153      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #19 = Methodref          #11.#154      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n+   #20 = Fieldref           #141.#155     // org/json/XML.GT:Ljava/lang/Character;\n+   #21 = String             #156          // Misshaped close tag\n+   #22 = Fieldref           #141.#157     // org/json/XML.BANG:Ljava/lang/Character;\n+   #23 = Methodref          #60.#158      // org/json/XMLTokener.next:()C\n+   #24 = String             #159          // -->\n+   #25 = Methodref          #60.#160      // org/json/XMLTokener.skipPast:(Ljava/lang/String;)V\n+   #26 = Methodref          #60.#161      // org/json/XMLTokener.back:()V\n+   #27 = String             #162          // CDATA\n+   #28 = Methodref          #80.#163      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #29 = Methodref          #60.#164      // org/json/XMLTokener.nextCDATA:()Ljava/lang/String;\n+   #30 = Methodref          #38.#165      // org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n+   #31 = String             #166          // Expected \\'CDATA[\\'\n+   #32 = Methodref          #60.#167      // org/json/XMLTokener.nextMeta:()Ljava/lang/Object;\n+   #33 = String             #168          // Missing \\'>\\' after \\'<!\\'.\n+   #34 = Fieldref           #141.#169     // org/json/XML.QUEST:Ljava/lang/Character;\n+   #35 = String             #170          // ?>\n+   #36 = String             #171          // Misshaped tag\n+   #37 = String             #172          // Bad tagName \\'\n+   #38 = Class              #173          // org/json/JSONArray\n+   #39 = Methodref          #38.#136      // org/json/JSONArray.\"<init>\":()V\n+   #40 = Class              #174          // org/json/JSONObject\n+   #41 = Methodref          #40.#136      // org/json/JSONObject.\"<init>\":()V\n    #42 = String             #109          // tagName\n-   #43 = Methodref          #40.#181      // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #44 = Methodref          #10.#169      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #45 = String             #182          // childNode\n-   #46 = String             #183          // Reserved attribute.\n-   #47 = Fieldref           #147.#184     // org/json/XML.EQ:Ljava/lang/Character;\n-   #48 = String             #185          // Missing value\n-   #49 = Methodref          #147.#186     // org/json/XML.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n-   #50 = Methodref          #40.#187      // org/json/JSONObject.accumulate:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #51 = String             #188          //\n-   #52 = Methodref          #40.#189      // org/json/JSONObject.length:()I\n-   #53 = Methodref          #79.#190      // org/json/JSONML.parse:(Lorg/json/XMLTokener;ZLorg/json/JSONArray;Z)Ljava/lang/Object;\n-   #54 = String             #191          // Mismatched \\'\n-   #55 = String             #192          // \\' and \\'\n-   #56 = String             #193          // \\'\n-   #57 = Methodref          #38.#189      // org/json/JSONArray.length:()I\n-   #58 = String             #194          // childNodes\n-   #59 = Methodref          #147.#195     // org/json/XML.unescape:(Ljava/lang/String;)Ljava/lang/String;\n-   #60 = Class              #196          // org/json/XMLTokener\n-   #61 = Methodref          #60.#160      // org/json/XMLTokener.\"<init>\":(Ljava/lang/String;)V\n-   #62 = Methodref          #38.#197      // org/json/JSONArray.getString:(I)Ljava/lang/String;\n-   #63 = Methodref          #147.#198     // org/json/XML.noSpace:(Ljava/lang/String;)V\n-   #64 = Methodref          #147.#199     // org/json/XML.escape:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Methodref          #12.#200      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #66 = Methodref          #38.#201      // org/json/JSONArray.opt:(I)Ljava/lang/Object;\n-   #67 = Methodref          #40.#202      // org/json/JSONObject.keySet:()Ljava/util/Set;\n-   #68 = InterfaceMethodref #203.#204     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #69 = InterfaceMethodref #205.#206     // java/util/Iterator.hasNext:()Z\n-   #70 = InterfaceMethodref #205.#207     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #71 = Methodref          #40.#208      // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n-   #72 = Methodref          #80.#159      // java/lang/Object.toString:()Ljava/lang/String;\n-   #73 = Methodref          #38.#209      // org/json/JSONArray.get:(I)Ljava/lang/Object;\n-   #74 = Methodref          #79.#210      // org/json/JSONML.toString:(Lorg/json/JSONObject;)Ljava/lang/String;\n-   #75 = Methodref          #79.#211      // org/json/JSONML.toString:(Lorg/json/JSONArray;)Ljava/lang/String;\n-   #76 = Methodref          #40.#212      // org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;\n-   #77 = Methodref          #40.#159      // org/json/JSONObject.toString:()Ljava/lang/String;\n-   #78 = Methodref          #40.#213      // org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;\n-   #79 = Class              #214          // org/json/JSONML\n-   #80 = Class              #215          // java/lang/Object\n+   #43 = Methodref          #40.#175      // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #44 = Methodref          #10.#163      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #45 = String             #176          // childNode\n+   #46 = String             #177          // Reserved attribute.\n+   #47 = Fieldref           #141.#178     // org/json/XML.EQ:Ljava/lang/Character;\n+   #48 = String             #179          // Missing value\n+   #49 = Methodref          #141.#180     // org/json/XML.stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n+   #50 = Methodref          #40.#181      // org/json/JSONObject.accumulate:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #51 = String             #182          //\n+   #52 = Methodref          #40.#183      // org/json/JSONObject.length:()I\n+   #53 = Methodref          #79.#184      // org/json/JSONML.parse:(Lorg/json/XMLTokener;ZLorg/json/JSONArray;Z)Ljava/lang/Object;\n+   #54 = String             #185          // Mismatched \\'\n+   #55 = String             #186          // \\' and \\'\n+   #56 = String             #187          // \\'\n+   #57 = Methodref          #38.#183      // org/json/JSONArray.length:()I\n+   #58 = String             #188          // childNodes\n+   #59 = Methodref          #141.#189     // org/json/XML.unescape:(Ljava/lang/String;)Ljava/lang/String;\n+   #60 = Class              #190          // org/json/XMLTokener\n+   #61 = Methodref          #60.#154      // org/json/XMLTokener.\"<init>\":(Ljava/lang/String;)V\n+   #62 = Methodref          #38.#191      // org/json/JSONArray.getString:(I)Ljava/lang/String;\n+   #63 = Methodref          #141.#192     // org/json/XML.noSpace:(Ljava/lang/String;)V\n+   #64 = Methodref          #141.#193     // org/json/XML.escape:(Ljava/lang/String;)Ljava/lang/String;\n+   #65 = Methodref          #12.#194      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #66 = Methodref          #38.#195      // org/json/JSONArray.opt:(I)Ljava/lang/Object;\n+   #67 = Methodref          #40.#196      // org/json/JSONObject.keySet:()Ljava/util/Set;\n+   #68 = InterfaceMethodref #197.#198     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #69 = InterfaceMethodref #132.#199     // java/util/Iterator.hasNext:()Z\n+   #70 = InterfaceMethodref #132.#200     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #71 = Methodref          #40.#201      // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n+   #72 = Methodref          #80.#153      // java/lang/Object.toString:()Ljava/lang/String;\n+   #73 = Methodref          #38.#202      // org/json/JSONArray.get:(I)Ljava/lang/Object;\n+   #74 = Methodref          #79.#203      // org/json/JSONML.toString:(Lorg/json/JSONObject;)Ljava/lang/String;\n+   #75 = Methodref          #79.#204      // org/json/JSONML.toString:(Lorg/json/JSONArray;)Ljava/lang/String;\n+   #76 = Methodref          #40.#205      // org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;\n+   #77 = Methodref          #40.#153      // org/json/JSONObject.toString:()Ljava/lang/String;\n+   #78 = Methodref          #40.#206      // org/json/JSONObject.optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;\n+   #79 = Class              #207          // org/json/JSONML\n+   #80 = Class              #208          // java/lang/Object\n    #81 = Utf8               <init>\n    #82 = Utf8               ()V\n    #83 = Utf8               Code\n    #84 = Utf8               LineNumberTable\n    #85 = Utf8               LocalVariableTable\n    #86 = Utf8               this\n    #87 = Utf8               Lorg/json/JSONML;\n@@ -114,173 +114,166 @@\n   #104 = Utf8               newja\n   #105 = Utf8               newjo\n   #106 = Utf8               Lorg/json/JSONObject;\n   #107 = Utf8               token\n   #108 = Utf8               Ljava/lang/Object;\n   #109 = Utf8               tagName\n   #110 = Utf8               StackMapTable\n-  #111 = Class              #196          // org/json/XMLTokener\n-  #112 = Class              #179          // org/json/JSONArray\n-  #113 = Class              #152          // java/lang/String\n-  #114 = Class              #180          // org/json/JSONObject\n-  #115 = Class              #215          // java/lang/Object\n-  #116 = Utf8               Exceptions\n-  #117 = Utf8               toJSONArray\n-  #118 = Utf8               (Ljava/lang/String;)Lorg/json/JSONArray;\n-  #119 = Utf8               string\n-  #120 = Utf8               (Ljava/lang/String;Z)Lorg/json/JSONArray;\n-  #121 = Utf8               (Lorg/json/XMLTokener;Z)Lorg/json/JSONArray;\n-  #122 = Utf8               (Lorg/json/XMLTokener;)Lorg/json/JSONArray;\n-  #123 = Utf8               toJSONObject\n-  #124 = Utf8               (Ljava/lang/String;)Lorg/json/JSONObject;\n-  #125 = Utf8               (Ljava/lang/String;Z)Lorg/json/JSONObject;\n-  #126 = Utf8               (Lorg/json/XMLTokener;)Lorg/json/JSONObject;\n-  #127 = Utf8               (Lorg/json/XMLTokener;Z)Lorg/json/JSONObject;\n-  #128 = Utf8               toString\n-  #129 = Utf8               (Lorg/json/JSONArray;)Ljava/lang/String;\n-  #130 = Utf8               value\n-  #131 = Utf8               key\n-  #132 = Utf8               jo\n-  #133 = Utf8               length\n-  #134 = Utf8               object\n-  #135 = Utf8               sb\n-  #136 = Utf8               Ljava/lang/StringBuilder;\n-  #137 = Class              #154          // java/lang/StringBuilder\n-  #138 = Class              #216          // java/util/Iterator\n-  #139 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n-  #140 = Utf8               SourceFile\n-  #141 = Utf8               JSONML.java\n-  #142 = NameAndType        #81:#82       // \"<init>\":()V\n-  #143 = NameAndType        #217:#218     // more:()Z\n-  #144 = Utf8               Bad XML\n-  #145 = NameAndType        #219:#220     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-  #146 = NameAndType        #221:#222     // nextContent:()Ljava/lang/Object;\n-  #147 = Class              #223          // org/json/XML\n-  #148 = NameAndType        #224:#225     // LT:Ljava/lang/Character;\n-  #149 = NameAndType        #226:#222     // nextToken:()Ljava/lang/Object;\n-  #150 = Utf8               java/lang/Character\n-  #151 = NameAndType        #227:#225     // SLASH:Ljava/lang/Character;\n-  #152 = Utf8               java/lang/String\n-  #153 = Utf8               org/json/JSONException\n-  #154 = Utf8               java/lang/StringBuilder\n-  #155 = Utf8               Expected a closing name instead of \\'\n-  #156 = NameAndType        #228:#229     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #157 = NameAndType        #228:#230     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #158 = Utf8               \\'.\n-  #159 = NameAndType        #128:#231     // toString:()Ljava/lang/String;\n-  #160 = NameAndType        #81:#232      // \"<init>\":(Ljava/lang/String;)V\n-  #161 = NameAndType        #233:#225     // GT:Ljava/lang/Character;\n-  #162 = Utf8               Misshaped close tag\n-  #163 = NameAndType        #234:#225     // BANG:Ljava/lang/Character;\n-  #164 = NameAndType        #235:#236     // next:()C\n-  #165 = Utf8               -->\n-  #166 = NameAndType        #237:#232     // skipPast:(Ljava/lang/String;)V\n-  #167 = NameAndType        #238:#82      // back:()V\n-  #168 = Utf8               CDATA\n-  #169 = NameAndType        #239:#240     // equals:(Ljava/lang/Object;)Z\n-  #170 = NameAndType        #241:#231     // nextCDATA:()Ljava/lang/String;\n-  #171 = NameAndType        #242:#243     // put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n-  #172 = Utf8               Expected \\'CDATA[\\'\n-  #173 = NameAndType        #244:#222     // nextMeta:()Ljava/lang/Object;\n-  #174 = Utf8               Missing \\'>\\' after \\'<!\\'.\n-  #175 = NameAndType        #245:#225     // QUEST:Ljava/lang/Character;\n-  #176 = Utf8               ?>\n-  #177 = Utf8               Misshaped tag\n-  #178 = Utf8               Bad tagName \\'\n-  #179 = Utf8               org/json/JSONArray\n-  #180 = Utf8               org/json/JSONObject\n-  #181 = NameAndType        #242:#246     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #182 = Utf8               childNode\n-  #183 = Utf8               Reserved attribute.\n-  #184 = NameAndType        #247:#225     // EQ:Ljava/lang/Character;\n-  #185 = Utf8               Missing value\n-  #186 = NameAndType        #248:#249     // stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n-  #187 = NameAndType        #250:#246     // accumulate:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #188 = Utf8\n-  #189 = NameAndType        #133:#251     // length:()I\n-  #190 = NameAndType        #88:#89       // parse:(Lorg/json/XMLTokener;ZLorg/json/JSONArray;Z)Ljava/lang/Object;\n-  #191 = Utf8               Mismatched \\'\n-  #192 = Utf8               \\' and \\'\n-  #193 = Utf8               \\'\n-  #194 = Utf8               childNodes\n-  #195 = NameAndType        #252:#253     // unescape:(Ljava/lang/String;)Ljava/lang/String;\n-  #196 = Utf8               org/json/XMLTokener\n-  #197 = NameAndType        #254:#255     // getString:(I)Ljava/lang/String;\n-  #198 = NameAndType        #256:#232     // noSpace:(Ljava/lang/String;)V\n-  #199 = NameAndType        #257:#253     // escape:(Ljava/lang/String;)Ljava/lang/String;\n-  #200 = NameAndType        #228:#258     // append:(C)Ljava/lang/StringBuilder;\n-  #201 = NameAndType        #259:#260     // opt:(I)Ljava/lang/Object;\n-  #202 = NameAndType        #261:#262     // keySet:()Ljava/util/Set;\n-  #203 = Class              #263          // java/util/Set\n-  #204 = NameAndType        #264:#265     // iterator:()Ljava/util/Iterator;\n-  #205 = Class              #216          // java/util/Iterator\n-  #206 = NameAndType        #266:#218     // hasNext:()Z\n-  #207 = NameAndType        #235:#222     // next:()Ljava/lang/Object;\n-  #208 = NameAndType        #259:#249     // opt:(Ljava/lang/String;)Ljava/lang/Object;\n-  #209 = NameAndType        #267:#260     // get:(I)Ljava/lang/Object;\n-  #210 = NameAndType        #128:#139     // toString:(Lorg/json/JSONObject;)Ljava/lang/String;\n-  #211 = NameAndType        #128:#129     // toString:(Lorg/json/JSONArray;)Ljava/lang/String;\n-  #212 = NameAndType        #268:#253     // optString:(Ljava/lang/String;)Ljava/lang/String;\n-  #213 = NameAndType        #269:#118     // optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;\n-  #214 = Utf8               org/json/JSONML\n-  #215 = Utf8               java/lang/Object\n-  #216 = Utf8               java/util/Iterator\n-  #217 = Utf8               more\n-  #218 = Utf8               ()Z\n-  #219 = Utf8               syntaxError\n-  #220 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n-  #221 = Utf8               nextContent\n-  #222 = Utf8               ()Ljava/lang/Object;\n-  #223 = Utf8               org/json/XML\n-  #224 = Utf8               LT\n-  #225 = Utf8               Ljava/lang/Character;\n-  #226 = Utf8               nextToken\n-  #227 = Utf8               SLASH\n-  #228 = Utf8               append\n-  #229 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #230 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #231 = Utf8               ()Ljava/lang/String;\n-  #232 = Utf8               (Ljava/lang/String;)V\n-  #233 = Utf8               GT\n-  #234 = Utf8               BANG\n-  #235 = Utf8               next\n-  #236 = Utf8               ()C\n-  #237 = Utf8               skipPast\n-  #238 = Utf8               back\n-  #239 = Utf8               equals\n-  #240 = Utf8               (Ljava/lang/Object;)Z\n-  #241 = Utf8               nextCDATA\n-  #242 = Utf8               put\n-  #243 = Utf8               (Ljava/lang/Object;)Lorg/json/JSONArray;\n-  #244 = Utf8               nextMeta\n-  #245 = Utf8               QUEST\n-  #246 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #247 = Utf8               EQ\n-  #248 = Utf8               stringToValue\n-  #249 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #250 = Utf8               accumulate\n-  #251 = Utf8               ()I\n-  #252 = Utf8               unescape\n-  #253 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #254 = Utf8               getString\n-  #255 = Utf8               (I)Ljava/lang/String;\n-  #256 = Utf8               noSpace\n-  #257 = Utf8               escape\n-  #258 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #259 = Utf8               opt\n-  #260 = Utf8               (I)Ljava/lang/Object;\n-  #261 = Utf8               keySet\n-  #262 = Utf8               ()Ljava/util/Set;\n-  #263 = Utf8               java/util/Set\n-  #264 = Utf8               iterator\n-  #265 = Utf8               ()Ljava/util/Iterator;\n-  #266 = Utf8               hasNext\n-  #267 = Utf8               get\n-  #268 = Utf8               optString\n-  #269 = Utf8               optJSONArray\n+  #111 = Utf8               Exceptions\n+  #112 = Utf8               toJSONArray\n+  #113 = Utf8               (Ljava/lang/String;)Lorg/json/JSONArray;\n+  #114 = Utf8               string\n+  #115 = Utf8               (Ljava/lang/String;Z)Lorg/json/JSONArray;\n+  #116 = Utf8               (Lorg/json/XMLTokener;Z)Lorg/json/JSONArray;\n+  #117 = Utf8               (Lorg/json/XMLTokener;)Lorg/json/JSONArray;\n+  #118 = Utf8               toJSONObject\n+  #119 = Utf8               (Ljava/lang/String;)Lorg/json/JSONObject;\n+  #120 = Utf8               (Ljava/lang/String;Z)Lorg/json/JSONObject;\n+  #121 = Utf8               (Lorg/json/XMLTokener;)Lorg/json/JSONObject;\n+  #122 = Utf8               (Lorg/json/XMLTokener;Z)Lorg/json/JSONObject;\n+  #123 = Utf8               toString\n+  #124 = Utf8               (Lorg/json/JSONArray;)Ljava/lang/String;\n+  #125 = Utf8               value\n+  #126 = Utf8               key\n+  #127 = Utf8               jo\n+  #128 = Utf8               length\n+  #129 = Utf8               object\n+  #130 = Utf8               sb\n+  #131 = Utf8               Ljava/lang/StringBuilder;\n+  #132 = Class              #209          // java/util/Iterator\n+  #133 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n+  #134 = Utf8               SourceFile\n+  #135 = Utf8               JSONML.java\n+  #136 = NameAndType        #81:#82       // \"<init>\":()V\n+  #137 = NameAndType        #210:#211     // more:()Z\n+  #138 = Utf8               Bad XML\n+  #139 = NameAndType        #212:#213     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+  #140 = NameAndType        #214:#215     // nextContent:()Ljava/lang/Object;\n+  #141 = Class              #216          // org/json/XML\n+  #142 = NameAndType        #217:#218     // LT:Ljava/lang/Character;\n+  #143 = NameAndType        #219:#215     // nextToken:()Ljava/lang/Object;\n+  #144 = Utf8               java/lang/Character\n+  #145 = NameAndType        #220:#218     // SLASH:Ljava/lang/Character;\n+  #146 = Utf8               java/lang/String\n+  #147 = Utf8               org/json/JSONException\n+  #148 = Utf8               java/lang/StringBuilder\n+  #149 = Utf8               Expected a closing name instead of \\'\n+  #150 = NameAndType        #221:#222     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #151 = NameAndType        #221:#223     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #152 = Utf8               \\'.\n+  #153 = NameAndType        #123:#224     // toString:()Ljava/lang/String;\n+  #154 = NameAndType        #81:#225      // \"<init>\":(Ljava/lang/String;)V\n+  #155 = NameAndType        #226:#218     // GT:Ljava/lang/Character;\n+  #156 = Utf8               Misshaped close tag\n+  #157 = NameAndType        #227:#218     // BANG:Ljava/lang/Character;\n+  #158 = NameAndType        #228:#229     // next:()C\n+  #159 = Utf8               -->\n+  #160 = NameAndType        #230:#225     // skipPast:(Ljava/lang/String;)V\n+  #161 = NameAndType        #231:#82      // back:()V\n+  #162 = Utf8               CDATA\n+  #163 = NameAndType        #232:#233     // equals:(Ljava/lang/Object;)Z\n+  #164 = NameAndType        #234:#224     // nextCDATA:()Ljava/lang/String;\n+  #165 = NameAndType        #235:#236     // put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n+  #166 = Utf8               Expected \\'CDATA[\\'\n+  #167 = NameAndType        #237:#215     // nextMeta:()Ljava/lang/Object;\n+  #168 = Utf8               Missing \\'>\\' after \\'<!\\'.\n+  #169 = NameAndType        #238:#218     // QUEST:Ljava/lang/Character;\n+  #170 = Utf8               ?>\n+  #171 = Utf8               Misshaped tag\n+  #172 = Utf8               Bad tagName \\'\n+  #173 = Utf8               org/json/JSONArray\n+  #174 = Utf8               org/json/JSONObject\n+  #175 = NameAndType        #235:#239     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #176 = Utf8               childNode\n+  #177 = Utf8               Reserved attribute.\n+  #178 = NameAndType        #240:#218     // EQ:Ljava/lang/Character;\n+  #179 = Utf8               Missing value\n+  #180 = NameAndType        #241:#242     // stringToValue:(Ljava/lang/String;)Ljava/lang/Object;\n+  #181 = NameAndType        #243:#239     // accumulate:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #182 = Utf8\n+  #183 = NameAndType        #128:#244     // length:()I\n+  #184 = NameAndType        #88:#89       // parse:(Lorg/json/XMLTokener;ZLorg/json/JSONArray;Z)Ljava/lang/Object;\n+  #185 = Utf8               Mismatched \\'\n+  #186 = Utf8               \\' and \\'\n+  #187 = Utf8               \\'\n+  #188 = Utf8               childNodes\n+  #189 = NameAndType        #245:#246     // unescape:(Ljava/lang/String;)Ljava/lang/String;\n+  #190 = Utf8               org/json/XMLTokener\n+  #191 = NameAndType        #247:#248     // getString:(I)Ljava/lang/String;\n+  #192 = NameAndType        #249:#225     // noSpace:(Ljava/lang/String;)V\n+  #193 = NameAndType        #250:#246     // escape:(Ljava/lang/String;)Ljava/lang/String;\n+  #194 = NameAndType        #221:#251     // append:(C)Ljava/lang/StringBuilder;\n+  #195 = NameAndType        #252:#253     // opt:(I)Ljava/lang/Object;\n+  #196 = NameAndType        #254:#255     // keySet:()Ljava/util/Set;\n+  #197 = Class              #256          // java/util/Set\n+  #198 = NameAndType        #257:#258     // iterator:()Ljava/util/Iterator;\n+  #199 = NameAndType        #259:#211     // hasNext:()Z\n+  #200 = NameAndType        #228:#215     // next:()Ljava/lang/Object;\n+  #201 = NameAndType        #252:#242     // opt:(Ljava/lang/String;)Ljava/lang/Object;\n+  #202 = NameAndType        #260:#253     // get:(I)Ljava/lang/Object;\n+  #203 = NameAndType        #123:#133     // toString:(Lorg/json/JSONObject;)Ljava/lang/String;\n+  #204 = NameAndType        #123:#124     // toString:(Lorg/json/JSONArray;)Ljava/lang/String;\n+  #205 = NameAndType        #261:#246     // optString:(Ljava/lang/String;)Ljava/lang/String;\n+  #206 = NameAndType        #262:#113     // optJSONArray:(Ljava/lang/String;)Lorg/json/JSONArray;\n+  #207 = Utf8               org/json/JSONML\n+  #208 = Utf8               java/lang/Object\n+  #209 = Utf8               java/util/Iterator\n+  #210 = Utf8               more\n+  #211 = Utf8               ()Z\n+  #212 = Utf8               syntaxError\n+  #213 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n+  #214 = Utf8               nextContent\n+  #215 = Utf8               ()Ljava/lang/Object;\n+  #216 = Utf8               org/json/XML\n+  #217 = Utf8               LT\n+  #218 = Utf8               Ljava/lang/Character;\n+  #219 = Utf8               nextToken\n+  #220 = Utf8               SLASH\n+  #221 = Utf8               append\n+  #222 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #223 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #224 = Utf8               ()Ljava/lang/String;\n+  #225 = Utf8               (Ljava/lang/String;)V\n+  #226 = Utf8               GT\n+  #227 = Utf8               BANG\n+  #228 = Utf8               next\n+  #229 = Utf8               ()C\n+  #230 = Utf8               skipPast\n+  #231 = Utf8               back\n+  #232 = Utf8               equals\n+  #233 = Utf8               (Ljava/lang/Object;)Z\n+  #234 = Utf8               nextCDATA\n+  #235 = Utf8               put\n+  #236 = Utf8               (Ljava/lang/Object;)Lorg/json/JSONArray;\n+  #237 = Utf8               nextMeta\n+  #238 = Utf8               QUEST\n+  #239 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #240 = Utf8               EQ\n+  #241 = Utf8               stringToValue\n+  #242 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #243 = Utf8               accumulate\n+  #244 = Utf8               ()I\n+  #245 = Utf8               unescape\n+  #246 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #247 = Utf8               getString\n+  #248 = Utf8               (I)Ljava/lang/String;\n+  #249 = Utf8               noSpace\n+  #250 = Utf8               escape\n+  #251 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #252 = Utf8               opt\n+  #253 = Utf8               (I)Ljava/lang/Object;\n+  #254 = Utf8               keySet\n+  #255 = Utf8               ()Ljava/util/Set;\n+  #256 = Utf8               java/util/Set\n+  #257 = Utf8               iterator\n+  #258 = Utf8               ()Ljava/util/Iterator;\n+  #259 = Utf8               hasNext\n+  #260 = Utf8               get\n+  #261 = Utf8               optString\n+  #262 = Utf8               optJSONArray\n {\n   public org.json.JSONML();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -756,15 +749,16 @@\n         line 212: 732\n         line 214: 742\n         line 215: 746\n         line 216: 750\n         line 218: 753\n         line 224: 756\n         line 225: 760\n-        line 226: 778\n+        line 226: 769\n+        line 227: 795\n         line 225: 797\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           143     141     5     c   C\n           233      51     7     i   I\n           462     113     4 attribute   Ljava/lang/String;\n             0     804     0     x   Lorg/json/XMLTokener;\n"}]}
