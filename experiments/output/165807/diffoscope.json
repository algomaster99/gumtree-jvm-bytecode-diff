{"diffoscope-json-version": 1, "source1": "first/EventListenerRegistrationData.class", "source2": "second/EventListenerRegistrationData.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,30 +1,30 @@\n-  SHA-256 checksum 5a90a1d70b2be37235c5b89c4dd7b10f04ca6c6ca18f949c6331c25b5ca04f80\n+  SHA-256 checksum 901ebef389b5ea7e62750b002300bd28ec11db18bed0be21299fb552e57925d5\n   Compiled from \"EventListenerRegistrationData.java\"\n public final class org.apache.commons.configuration2.event.EventListenerRegistrationData<T extends org.apache.commons.configuration2.event.Event> extends java.lang.Object\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #9                          // org/apache/commons/configuration2/event/EventListenerRegistrationData\n   super_class: #13                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 5, attributes: 2\n Constant pool:\n-   #1 = Methodref          #13.#59        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #60            // java/lang/IllegalArgumentException\n-   #3 = String             #61            // Event type must not be null!\n-   #4 = Methodref          #2.#62         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = String             #63            // Listener to be registered must not be null!\n-   #6 = Fieldref           #9.#64         // org/apache/commons/configuration2/event/EventListenerRegistrationData.eventType:Lorg/apache/commons/configuration2/event/EventType;\n-   #7 = Fieldref           #9.#65         // org/apache/commons/configuration2/event/EventListenerRegistrationData.listener:Lorg/apache/commons/configuration2/event/EventListener;\n-   #8 = Methodref          #13.#66        // java/lang/Object.hashCode:()I\n-   #9 = Class              #67            // org/apache/commons/configuration2/event/EventListenerRegistrationData\n-  #10 = Methodref          #9.#68         // org/apache/commons/configuration2/event/EventListenerRegistrationData.getListener:()Lorg/apache/commons/configuration2/event/EventListener;\n-  #11 = Methodref          #9.#69         // org/apache/commons/configuration2/event/EventListenerRegistrationData.getEventType:()Lorg/apache/commons/configuration2/event/EventType;\n-  #12 = Methodref          #13.#70        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-  #13 = Class              #71            // java/lang/Object\n+   #1 = Methodref          #13.#58        // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #59            // java/lang/IllegalArgumentException\n+   #3 = String             #60            // Event type must not be null!\n+   #4 = Methodref          #2.#61         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #5 = String             #62            // Listener to be registered must not be null!\n+   #6 = Fieldref           #9.#63         // org/apache/commons/configuration2/event/EventListenerRegistrationData.eventType:Lorg/apache/commons/configuration2/event/EventType;\n+   #7 = Fieldref           #9.#64         // org/apache/commons/configuration2/event/EventListenerRegistrationData.listener:Lorg/apache/commons/configuration2/event/EventListener;\n+   #8 = Methodref          #13.#65        // java/lang/Object.hashCode:()I\n+   #9 = Class              #66            // org/apache/commons/configuration2/event/EventListenerRegistrationData\n+  #10 = Methodref          #9.#67         // org/apache/commons/configuration2/event/EventListenerRegistrationData.getListener:()Lorg/apache/commons/configuration2/event/EventListener;\n+  #11 = Methodref          #9.#68         // org/apache/commons/configuration2/event/EventListenerRegistrationData.getEventType:()Lorg/apache/commons/configuration2/event/EventType;\n+  #12 = Methodref          #13.#69        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #13 = Class              #70            // java/lang/Object\n   #14 = Utf8               HASH_FACTOR\n   #15 = Utf8               I\n   #16 = Utf8               ConstantValue\n   #17 = Integer            31\n   #18 = Utf8               eventType\n   #19 = Utf8               Lorg/apache/commons/configuration2/event/EventType;\n   #20 = Utf8               Signature\n@@ -40,53 +40,52 @@\n   #30 = Utf8               this\n   #31 = Utf8               Lorg/apache/commons/configuration2/event/EventListenerRegistrationData;\n   #32 = Utf8               type\n   #33 = Utf8               lstnr\n   #34 = Utf8               LocalVariableTypeTable\n   #35 = Utf8               Lorg/apache/commons/configuration2/event/EventListenerRegistrationData<TT;>;\n   #36 = Utf8               StackMapTable\n-  #37 = Class              #67            // org/apache/commons/configuration2/event/EventListenerRegistrationData\n-  #38 = Class              #72            // org/apache/commons/configuration2/event/EventType\n-  #39 = Class              #73            // org/apache/commons/configuration2/event/EventListener\n-  #40 = Utf8               (Lorg/apache/commons/configuration2/event/EventType<TT;>;Lorg/apache/commons/configuration2/event/EventListener<-TT;>;)V\n-  #41 = Utf8               getEventType\n-  #42 = Utf8               ()Lorg/apache/commons/configuration2/event/EventType;\n-  #43 = Utf8               ()Lorg/apache/commons/configuration2/event/EventType<TT;>;\n-  #44 = Utf8               getListener\n-  #45 = Utf8               ()Lorg/apache/commons/configuration2/event/EventListener;\n-  #46 = Utf8               ()Lorg/apache/commons/configuration2/event/EventListener<-TT;>;\n-  #47 = Utf8               hashCode\n-  #48 = Utf8               ()I\n-  #49 = Utf8               result\n-  #50 = Utf8               equals\n-  #51 = Utf8               (Ljava/lang/Object;)Z\n-  #52 = Utf8               obj\n-  #53 = Utf8               Ljava/lang/Object;\n-  #54 = Utf8               c\n-  #55 = Utf8               Lorg/apache/commons/configuration2/event/EventListenerRegistrationData<*>;\n-  #56 = Utf8               <T:Lorg/apache/commons/configuration2/event/Event;>Ljava/lang/Object;\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               EventListenerRegistrationData.java\n-  #59 = NameAndType        #25:#74        // \"<init>\":()V\n-  #60 = Utf8               java/lang/IllegalArgumentException\n-  #61 = Utf8               Event type must not be null!\n-  #62 = NameAndType        #25:#75        // \"<init>\":(Ljava/lang/String;)V\n-  #63 = Utf8               Listener to be registered must not be null!\n-  #64 = NameAndType        #18:#19        // eventType:Lorg/apache/commons/configuration2/event/EventType;\n-  #65 = NameAndType        #22:#23        // listener:Lorg/apache/commons/configuration2/event/EventListener;\n-  #66 = NameAndType        #47:#48        // hashCode:()I\n-  #67 = Utf8               org/apache/commons/configuration2/event/EventListenerRegistrationData\n-  #68 = NameAndType        #44:#45        // getListener:()Lorg/apache/commons/configuration2/event/EventListener;\n-  #69 = NameAndType        #41:#42        // getEventType:()Lorg/apache/commons/configuration2/event/EventType;\n-  #70 = NameAndType        #50:#51        // equals:(Ljava/lang/Object;)Z\n-  #71 = Utf8               java/lang/Object\n-  #72 = Utf8               org/apache/commons/configuration2/event/EventType\n-  #73 = Utf8               org/apache/commons/configuration2/event/EventListener\n-  #74 = Utf8               ()V\n-  #75 = Utf8               (Ljava/lang/String;)V\n+  #37 = Class              #71            // org/apache/commons/configuration2/event/EventType\n+  #38 = Class              #72            // org/apache/commons/configuration2/event/EventListener\n+  #39 = Utf8               (Lorg/apache/commons/configuration2/event/EventType<TT;>;Lorg/apache/commons/configuration2/event/EventListener<-TT;>;)V\n+  #40 = Utf8               getEventType\n+  #41 = Utf8               ()Lorg/apache/commons/configuration2/event/EventType;\n+  #42 = Utf8               ()Lorg/apache/commons/configuration2/event/EventType<TT;>;\n+  #43 = Utf8               getListener\n+  #44 = Utf8               ()Lorg/apache/commons/configuration2/event/EventListener;\n+  #45 = Utf8               ()Lorg/apache/commons/configuration2/event/EventListener<-TT;>;\n+  #46 = Utf8               hashCode\n+  #47 = Utf8               ()I\n+  #48 = Utf8               result\n+  #49 = Utf8               equals\n+  #50 = Utf8               (Ljava/lang/Object;)Z\n+  #51 = Utf8               obj\n+  #52 = Utf8               Ljava/lang/Object;\n+  #53 = Utf8               c\n+  #54 = Utf8               Lorg/apache/commons/configuration2/event/EventListenerRegistrationData<*>;\n+  #55 = Utf8               <T:Lorg/apache/commons/configuration2/event/Event;>Ljava/lang/Object;\n+  #56 = Utf8               SourceFile\n+  #57 = Utf8               EventListenerRegistrationData.java\n+  #58 = NameAndType        #25:#73        // \"<init>\":()V\n+  #59 = Utf8               java/lang/IllegalArgumentException\n+  #60 = Utf8               Event type must not be null!\n+  #61 = NameAndType        #25:#74        // \"<init>\":(Ljava/lang/String;)V\n+  #62 = Utf8               Listener to be registered must not be null!\n+  #63 = NameAndType        #18:#19        // eventType:Lorg/apache/commons/configuration2/event/EventType;\n+  #64 = NameAndType        #22:#23        // listener:Lorg/apache/commons/configuration2/event/EventListener;\n+  #65 = NameAndType        #46:#47        // hashCode:()I\n+  #66 = Utf8               org/apache/commons/configuration2/event/EventListenerRegistrationData\n+  #67 = NameAndType        #43:#44        // getListener:()Lorg/apache/commons/configuration2/event/EventListener;\n+  #68 = NameAndType        #40:#41        // getEventType:()Lorg/apache/commons/configuration2/event/EventType;\n+  #69 = NameAndType        #49:#50        // equals:(Ljava/lang/Object;)Z\n+  #70 = Utf8               java/lang/Object\n+  #71 = Utf8               org/apache/commons/configuration2/event/EventType\n+  #72 = Utf8               org/apache/commons/configuration2/event/EventListener\n+  #73 = Utf8               ()V\n+  #74 = Utf8               (Ljava/lang/String;)V\n {\n   private static final int HASH_FACTOR = 31;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 31\n \n   private final org.apache.commons.configuration2.event.EventType<T> eventType;\n@@ -148,15 +147,15 @@\n             0      43     2 lstnr   Lorg/apache/commons/configuration2/event/EventListener<-TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/configuration2/event/EventListenerRegistrationData, class org/apache/commons/configuration2/event/EventType, class org/apache/commons/configuration2/event/EventListener ]\n           stack = []\n         frame_type = 13 /* same */\n-    Signature: #40                          // (Lorg/apache/commons/configuration2/event/EventType<TT;>;Lorg/apache/commons/configuration2/event/EventListener<-TT;>;)V\n+    Signature: #39                          // (Lorg/apache/commons/configuration2/event/EventType<TT;>;Lorg/apache/commons/configuration2/event/EventListener<-TT;>;)V\n \n   public org.apache.commons.configuration2.event.EventType<T> getEventType();\n     descriptor: ()Lorg/apache/commons/configuration2/event/EventType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -166,15 +165,15 @@\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/event/EventListenerRegistrationData;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/event/EventListenerRegistrationData<TT;>;\n-    Signature: #43                          // ()Lorg/apache/commons/configuration2/event/EventType<TT;>;\n+    Signature: #42                          // ()Lorg/apache/commons/configuration2/event/EventType<TT;>;\n \n   public org.apache.commons.configuration2.event.EventListener<? super T> getListener();\n     descriptor: ()Lorg/apache/commons/configuration2/event/EventListener;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -184,15 +183,15 @@\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/event/EventListenerRegistrationData;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/event/EventListenerRegistrationData<TT;>;\n-    Signature: #46                          // ()Lorg/apache/commons/configuration2/event/EventListener<-TT;>;\n+    Signature: #45                          // ()Lorg/apache/commons/configuration2/event/EventListener<-TT;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n@@ -277,9 +276,9 @@\n         frame_type = 8 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 33\n           locals = [ class org/apache/commons/configuration2/event/EventListenerRegistrationData ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n }\n-Signature: #56                          // <T:Lorg/apache/commons/configuration2/event/Event;>Ljava/lang/Object;\n+Signature: #55                          // <T:Lorg/apache/commons/configuration2/event/Event;>Ljava/lang/Object;\n SourceFile: \"EventListenerRegistrationData.java\"\n"}]}
