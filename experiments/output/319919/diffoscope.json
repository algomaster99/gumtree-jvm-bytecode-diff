{"diffoscope-json-version": 1, "source1": "first/TextBuffer.class", "source2": "second/TextBuffer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,355 +1,355 @@\n-  SHA-256 checksum f1b1f1640f3007343ab7c5afde2fb812434253968f02e77fce8406a54e2846c4\n+  SHA-256 checksum 6fa56cbf7e3caf9f58b52c3dbb29f352c2f1e7d6b50e73a60c7e34c469c3336e\n   Compiled from \"TextBuffer.java\"\n public class com.fasterxml.jackson.core.util.TextBuffer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // com/fasterxml/jackson/core/util/TextBuffer\n-  super_class: #77                        // java/lang/Object\n+  this_class: #8                          // com/fasterxml/jackson/core/util/TextBuffer\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 14, methods: 49, attributes: 1\n Constant pool:\n-    #1 = Methodref          #77.#221      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #7.#222       // com/fasterxml/jackson/core/util/TextBuffer._allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n-    #3 = Methodref          #7.#223       // com/fasterxml/jackson/core/util/TextBuffer.\"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n-    #4 = Fieldref           #7.#224       // com/fasterxml/jackson/core/util/TextBuffer._currentSegment:[C\n-    #5 = Fieldref           #7.#225       // com/fasterxml/jackson/core/util/TextBuffer._currentSize:I\n-    #6 = Fieldref           #7.#226       // com/fasterxml/jackson/core/util/TextBuffer._inputStart:I\n-    #7 = Class              #227          // com/fasterxml/jackson/core/util/TextBuffer\n-    #8 = Methodref          #7.#228       // com/fasterxml/jackson/core/util/TextBuffer.\"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n-    #9 = Fieldref           #7.#229       // com/fasterxml/jackson/core/util/TextBuffer._inputLen:I\n-   #10 = Fieldref           #7.#230       // com/fasterxml/jackson/core/util/TextBuffer._inputBuffer:[C\n-   #11 = Fieldref           #7.#231       // com/fasterxml/jackson/core/util/TextBuffer._resultArray:[C\n-   #12 = Fieldref           #7.#232       // com/fasterxml/jackson/core/util/TextBuffer._hasSegments:Z\n-   #13 = Methodref          #7.#233       // com/fasterxml/jackson/core/util/TextBuffer.clearSegments:()V\n-   #14 = Class              #234          // com/fasterxml/jackson/core/util/BufferRecycler\n-   #15 = Methodref          #14.#235      // com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer:(I[C)V\n-   #16 = Fieldref           #7.#236       // com/fasterxml/jackson/core/util/TextBuffer._resultString:Ljava/lang/String;\n-   #17 = Methodref          #7.#237       // com/fasterxml/jackson/core/util/TextBuffer.buf:(I)[C\n-   #18 = Fieldref           #7.#238       // com/fasterxml/jackson/core/util/TextBuffer._segmentSize:I\n-   #19 = Methodref          #7.#239       // com/fasterxml/jackson/core/util/TextBuffer.append:([CII)V\n-   #20 = Methodref          #7.#240       // com/fasterxml/jackson/core/util/TextBuffer.append:(Ljava/lang/String;II)V\n-   #21 = Methodref          #30.#241      // java/lang/String.length:()I\n-   #22 = Methodref          #7.#242       // com/fasterxml/jackson/core/util/TextBuffer.validateStringLength:(I)V\n-   #23 = Methodref          #14.#243      // com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer:(II)[C\n-   #24 = Methodref          #244.#245     // java/lang/Math.max:(II)I\n-   #25 = Fieldref           #7.#246       // com/fasterxml/jackson/core/util/TextBuffer._segments:Ljava/util/ArrayList;\n-   #26 = Methodref          #65.#247      // java/util/ArrayList.clear:()V\n-   #27 = Methodref          #30.#248      // java/lang/String.toCharArray:()[C\n-   #28 = Fieldref           #7.#249       // com/fasterxml/jackson/core/util/TextBuffer.NO_CHARS:[C\n-   #29 = Methodref          #7.#250       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsArray:()[C\n-   #30 = Class              #251          // java/lang/String\n-   #31 = Methodref          #30.#252      // java/lang/String.\"<init>\":([C)V\n-   #32 = String             #253          //\n-   #33 = Methodref          #30.#254      // java/lang/String.\"<init>\":([CII)V\n-   #34 = Class              #255          // java/lang/StringBuilder\n-   #35 = Methodref          #34.#256      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #36 = Methodref          #65.#257      // java/util/ArrayList.size:()I\n-   #37 = Methodref          #65.#258      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #38 = Class              #79           // \"[C\"\n-   #39 = Methodref          #34.#259      // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #34.#260      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #41 = Methodref          #7.#261       // com/fasterxml/jackson/core/util/TextBuffer.resultArray:()[C\n-   #42 = Methodref          #7.#262       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n-   #43 = Methodref          #263.#264     // com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n-   #44 = Class              #265          // java/io/IOException\n-   #45 = Class              #266          // java/lang/NumberFormatException\n-   #46 = Methodref          #44.#267      // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #47 = Methodref          #45.#268      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #48 = Methodref          #7.#269       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsDouble:(Z)D\n-   #49 = Methodref          #7.#270       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsFloat:(Z)F\n-   #50 = Methodref          #263.#271     // com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n-   #51 = Methodref          #263.#272     // com/fasterxml/jackson/core/io/NumberInput.parseBigDecimal:([C)Ljava/math/BigDecimal;\n-   #52 = Methodref          #263.#273     // com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n-   #53 = Methodref          #263.#274     // com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n-   #54 = Methodref          #275.#276     // java/io/Writer.write:([C)V\n-   #55 = Methodref          #275.#277     // java/io/Writer.write:(Ljava/lang/String;)V\n-   #56 = Methodref          #275.#278     // java/io/Writer.write:([CII)V\n-   #57 = Methodref          #7.#279       // com/fasterxml/jackson/core/util/TextBuffer.unshare:(I)V\n-   #58 = Methodref          #7.#280       // com/fasterxml/jackson/core/util/TextBuffer.validateAppend:(I)V\n-   #59 = Methodref          #7.#281       // com/fasterxml/jackson/core/util/TextBuffer.expand:()V\n-   #60 = Methodref          #282.#283     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #61 = Methodref          #244.#284     // java/lang/Math.min:(II)I\n-   #62 = Methodref          #30.#285      // java/lang/String.getChars:(II[CI)V\n-   #63 = Class              #286          // java/lang/Integer\n-   #64 = Integer            2147483647\n-   #65 = Class              #287          // java/util/ArrayList\n-   #66 = Methodref          #65.#221      // java/util/ArrayList.\"<init>\":()V\n-   #67 = Methodref          #65.#288      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #68 = Integer            65536\n-   #69 = Methodref          #7.#289       // com/fasterxml/jackson/core/util/TextBuffer.carr:(I)[C\n-   #70 = Methodref          #7.#290       // com/fasterxml/jackson/core/util/TextBuffer._doTrim:(I)Ljava/lang/String;\n-   #71 = Methodref          #65.#291      // java/util/ArrayList.isEmpty:()Z\n-   #72 = Methodref          #65.#292      // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-   #73 = Methodref          #293.#294     // java/util/Arrays.copyOf:([CI)[C\n-   #74 = String             #295          // TextBuffer: Exception when reading contents\n-   #75 = Methodref          #293.#296     // java/util/Arrays.copyOfRange:([CII)[C\n-   #76 = Methodref          #7.#257       // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n-   #77 = Class              #297          // java/lang/Object\n-   #78 = Utf8               NO_CHARS\n-   #79 = Utf8               [C\n-   #80 = Utf8               MIN_SEGMENT_LEN\n-   #81 = Utf8               I\n-   #82 = Utf8               ConstantValue\n-   #83 = Integer            500\n-   #84 = Utf8               MAX_SEGMENT_LEN\n-   #85 = Utf8               _allocator\n-   #86 = Utf8               Lcom/fasterxml/jackson/core/util/BufferRecycler;\n-   #87 = Utf8               _inputBuffer\n-   #88 = Utf8               _inputStart\n-   #89 = Utf8               _inputLen\n-   #90 = Utf8               _segments\n-   #91 = Utf8               Ljava/util/ArrayList;\n-   #92 = Utf8               Signature\n-   #93 = Utf8               Ljava/util/ArrayList<[C>;\n-   #94 = Utf8               _hasSegments\n-   #95 = Utf8               Z\n-   #96 = Utf8               _segmentSize\n-   #97 = Utf8               _currentSegment\n-   #98 = Utf8               _currentSize\n-   #99 = Utf8               _resultString\n-  #100 = Utf8               Ljava/lang/String;\n-  #101 = Utf8               _resultArray\n-  #102 = Utf8               <init>\n-  #103 = Utf8               (Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n-  #104 = Utf8               Code\n-  #105 = Utf8               LineNumberTable\n-  #106 = Utf8               LocalVariableTable\n-  #107 = Utf8               this\n-  #108 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n-  #109 = Utf8               allocator\n-  #110 = Utf8               (Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n-  #111 = Utf8               initialSegment\n-  #112 = Utf8               fromInitial\n-  #113 = Utf8               ([C)Lcom/fasterxml/jackson/core/util/TextBuffer;\n-  #114 = Utf8               releaseBuffers\n-  #115 = Utf8               ()V\n-  #116 = Utf8               buf\n-  #117 = Utf8               StackMapTable\n-  #118 = Utf8               resetWithEmpty\n-  #119 = Utf8               resetWith\n-  #120 = Utf8               (C)V\n-  #121 = Utf8               ch\n-  #122 = Utf8               C\n-  #123 = Utf8               resetWithShared\n-  #124 = Utf8               ([CII)V\n-  #125 = Utf8               offset\n-  #126 = Utf8               len\n-  #127 = Utf8               resetWithCopy\n-  #128 = Utf8               Exceptions\n-  #129 = Utf8               (Ljava/lang/String;II)V\n-  #130 = Utf8               text\n-  #131 = Utf8               start\n-  #132 = Utf8               resetWithString\n-  #133 = Utf8               (Ljava/lang/String;)V\n-  #134 = Utf8               value\n-  #135 = Utf8               getBufferWithoutReset\n-  #136 = Utf8               ()[C\n-  #137 = Utf8               (I)[C\n-  #138 = Utf8               needed\n-  #139 = Utf8               clearSegments\n-  #140 = Utf8               size\n-  #141 = Utf8               ()I\n-  #142 = Utf8               getTextOffset\n-  #143 = Utf8               hasTextAsCharacters\n-  #144 = Utf8               ()Z\n-  #145 = Utf8               getTextBuffer\n-  #146 = Utf8               contentsAsString\n-  #147 = Utf8               ()Ljava/lang/String;\n-  #148 = Utf8               curr\n-  #149 = Utf8               i\n-  #150 = Utf8               sb\n-  #151 = Utf8               Ljava/lang/StringBuilder;\n-  #152 = Utf8               segLen\n-  #153 = Utf8               currLen\n-  #154 = Utf8               contentsAsArray\n-  #155 = Utf8               result\n-  #156 = Utf8               contentsAsDouble\n-  #157 = Utf8               (Z)D\n-  #158 = Utf8               e\n-  #159 = Utf8               Ljava/io/IOException;\n-  #160 = Utf8               useFastParser\n-  #161 = Utf8               ()D\n-  #162 = Utf8               Deprecated\n-  #163 = Utf8               RuntimeVisibleAnnotations\n-  #164 = Utf8               Ljava/lang/Deprecated;\n-  #165 = Utf8               contentsAsFloat\n-  #166 = Utf8               ()F\n-  #167 = Utf8               (Z)F\n-  #168 = Utf8               contentsAsDecimal\n-  #169 = Utf8               ()Ljava/math/BigDecimal;\n-  #170 = Utf8               contentsAsInt\n-  #171 = Utf8               (Z)I\n-  #172 = Utf8               neg\n-  #173 = Utf8               contentsAsLong\n-  #174 = Utf8               (Z)J\n-  #175 = Utf8               contentsToWriter\n-  #176 = Utf8               (Ljava/io/Writer;)I\n-  #177 = Utf8               end\n-  #178 = Utf8               w\n-  #179 = Utf8               Ljava/io/Writer;\n-  #180 = Utf8               total\n-  #181 = Utf8               ensureNotShared\n-  #182 = Utf8               append\n-  #183 = Utf8               c\n-  #184 = Utf8               amount\n-  #185 = Utf8               max\n-  #186 = Utf8               str\n-  #187 = Utf8               validateAppend\n-  #188 = Utf8               (I)V\n-  #189 = Utf8               toAppend\n-  #190 = Utf8               newTotalLength\n-  #191 = Utf8               getCurrentSegment\n-  #192 = Utf8               emptyAndGetCurrentSegment\n-  #193 = Utf8               getCurrentSegmentSize\n-  #194 = Utf8               setCurrentLength\n-  #195 = Utf8               setCurrentAndReturn\n-  #196 = Utf8               (I)Ljava/lang/String;\n-  #197 = Utf8               finishCurrentSegment\n-  #198 = Utf8               oldLen\n-  #199 = Utf8               newLen\n-  #200 = Utf8               finishAndReturn\n-  #201 = Utf8               (IZ)Ljava/lang/String;\n-  #202 = Utf8               ptr\n-  #203 = Utf8               lastSegmentEnd\n-  #204 = Utf8               trimTrailingSpaces\n-  #205 = Utf8               _doTrim\n-  #206 = Utf8               expandCurrentSegment\n-  #207 = Utf8               minSize\n-  #208 = Utf8               toString\n-  #209 = Utf8               unshare\n-  #210 = Utf8               needExtra\n-  #211 = Utf8               sharedLen\n-  #212 = Utf8               inputBuf\n-  #213 = Utf8               expand\n-  #214 = Utf8               resultArray\n-  #215 = Utf8               carr\n-  #216 = Utf8               validateStringLength\n-  #217 = Utf8               length\n-  #218 = Utf8               <clinit>\n-  #219 = Utf8               SourceFile\n-  #220 = Utf8               TextBuffer.java\n-  #221 = NameAndType        #102:#115     // \"<init>\":()V\n-  #222 = NameAndType        #85:#86       // _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n-  #223 = NameAndType        #102:#103     // \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n-  #224 = NameAndType        #97:#79       // _currentSegment:[C\n-  #225 = NameAndType        #98:#81       // _currentSize:I\n-  #226 = NameAndType        #88:#81       // _inputStart:I\n-  #227 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n-  #228 = NameAndType        #102:#110     // \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n-  #229 = NameAndType        #89:#81       // _inputLen:I\n-  #230 = NameAndType        #87:#79       // _inputBuffer:[C\n-  #231 = NameAndType        #101:#79      // _resultArray:[C\n-  #232 = NameAndType        #94:#95       // _hasSegments:Z\n-  #233 = NameAndType        #139:#115     // clearSegments:()V\n-  #234 = Utf8               com/fasterxml/jackson/core/util/BufferRecycler\n-  #235 = NameAndType        #298:#299     // releaseCharBuffer:(I[C)V\n-  #236 = NameAndType        #99:#100      // _resultString:Ljava/lang/String;\n-  #237 = NameAndType        #116:#137     // buf:(I)[C\n-  #238 = NameAndType        #96:#81       // _segmentSize:I\n-  #239 = NameAndType        #182:#124     // append:([CII)V\n-  #240 = NameAndType        #182:#129     // append:(Ljava/lang/String;II)V\n-  #241 = NameAndType        #217:#141     // length:()I\n-  #242 = NameAndType        #216:#188     // validateStringLength:(I)V\n-  #243 = NameAndType        #300:#301     // allocCharBuffer:(II)[C\n-  #244 = Class              #302          // java/lang/Math\n-  #245 = NameAndType        #185:#303     // max:(II)I\n-  #246 = NameAndType        #90:#91       // _segments:Ljava/util/ArrayList;\n-  #247 = NameAndType        #304:#115     // clear:()V\n-  #248 = NameAndType        #305:#136     // toCharArray:()[C\n-  #249 = NameAndType        #78:#79       // NO_CHARS:[C\n-  #250 = NameAndType        #154:#136     // contentsAsArray:()[C\n-  #251 = Utf8               java/lang/String\n-  #252 = NameAndType        #102:#306     // \"<init>\":([C)V\n-  #253 = Utf8\n-  #254 = NameAndType        #102:#124     // \"<init>\":([CII)V\n-  #255 = Utf8               java/lang/StringBuilder\n-  #256 = NameAndType        #102:#188     // \"<init>\":(I)V\n-  #257 = NameAndType        #140:#141     // size:()I\n-  #258 = NameAndType        #307:#308     // get:(I)Ljava/lang/Object;\n-  #259 = NameAndType        #182:#309     // append:([CII)Ljava/lang/StringBuilder;\n-  #260 = NameAndType        #208:#147     // toString:()Ljava/lang/String;\n-  #261 = NameAndType        #214:#136     // resultArray:()[C\n-  #262 = NameAndType        #146:#147     // contentsAsString:()Ljava/lang/String;\n-  #263 = Class              #310          // com/fasterxml/jackson/core/io/NumberInput\n-  #264 = NameAndType        #311:#312     // parseDouble:(Ljava/lang/String;Z)D\n-  #265 = Utf8               java/io/IOException\n-  #266 = Utf8               java/lang/NumberFormatException\n-  #267 = NameAndType        #313:#147     // getMessage:()Ljava/lang/String;\n-  #268 = NameAndType        #102:#133     // \"<init>\":(Ljava/lang/String;)V\n-  #269 = NameAndType        #156:#157     // contentsAsDouble:(Z)D\n-  #270 = NameAndType        #165:#167     // contentsAsFloat:(Z)F\n-  #271 = NameAndType        #314:#315     // parseFloat:(Ljava/lang/String;Z)F\n-  #272 = NameAndType        #316:#317     // parseBigDecimal:([C)Ljava/math/BigDecimal;\n-  #273 = NameAndType        #318:#319     // parseInt:([CII)I\n-  #274 = NameAndType        #320:#321     // parseLong:([CII)J\n-  #275 = Class              #322          // java/io/Writer\n-  #276 = NameAndType        #323:#306     // write:([C)V\n-  #277 = NameAndType        #323:#133     // write:(Ljava/lang/String;)V\n-  #278 = NameAndType        #323:#124     // write:([CII)V\n-  #279 = NameAndType        #209:#188     // unshare:(I)V\n-  #280 = NameAndType        #187:#188     // validateAppend:(I)V\n-  #281 = NameAndType        #213:#115     // expand:()V\n-  #282 = Class              #324          // java/lang/System\n-  #283 = NameAndType        #325:#326     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #284 = NameAndType        #327:#303     // min:(II)I\n-  #285 = NameAndType        #328:#329     // getChars:(II[CI)V\n-  #286 = Utf8               java/lang/Integer\n-  #287 = Utf8               java/util/ArrayList\n-  #288 = NameAndType        #330:#331     // add:(Ljava/lang/Object;)Z\n-  #289 = NameAndType        #215:#137     // carr:(I)[C\n-  #290 = NameAndType        #205:#196     // _doTrim:(I)Ljava/lang/String;\n-  #291 = NameAndType        #332:#144     // isEmpty:()Z\n-  #292 = NameAndType        #333:#308     // remove:(I)Ljava/lang/Object;\n-  #293 = Class              #334          // java/util/Arrays\n-  #294 = NameAndType        #335:#336     // copyOf:([CI)[C\n-  #295 = Utf8               TextBuffer: Exception when reading contents\n-  #296 = NameAndType        #337:#338     // copyOfRange:([CII)[C\n-  #297 = Utf8               java/lang/Object\n-  #298 = Utf8               releaseCharBuffer\n-  #299 = Utf8               (I[C)V\n-  #300 = Utf8               allocCharBuffer\n-  #301 = Utf8               (II)[C\n-  #302 = Utf8               java/lang/Math\n-  #303 = Utf8               (II)I\n-  #304 = Utf8               clear\n-  #305 = Utf8               toCharArray\n-  #306 = Utf8               ([C)V\n-  #307 = Utf8               get\n-  #308 = Utf8               (I)Ljava/lang/Object;\n-  #309 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #310 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n-  #311 = Utf8               parseDouble\n-  #312 = Utf8               (Ljava/lang/String;Z)D\n-  #313 = Utf8               getMessage\n-  #314 = Utf8               parseFloat\n-  #315 = Utf8               (Ljava/lang/String;Z)F\n-  #316 = Utf8               parseBigDecimal\n-  #317 = Utf8               ([C)Ljava/math/BigDecimal;\n-  #318 = Utf8               parseInt\n-  #319 = Utf8               ([CII)I\n-  #320 = Utf8               parseLong\n-  #321 = Utf8               ([CII)J\n-  #322 = Utf8               java/io/Writer\n-  #323 = Utf8               write\n-  #324 = Utf8               java/lang/System\n-  #325 = Utf8               arraycopy\n-  #326 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #327 = Utf8               min\n-  #328 = Utf8               getChars\n-  #329 = Utf8               (II[CI)V\n-  #330 = Utf8               add\n-  #331 = Utf8               (Ljava/lang/Object;)Z\n-  #332 = Utf8               isEmpty\n-  #333 = Utf8               remove\n-  #334 = Utf8               java/util/Arrays\n-  #335 = Utf8               copyOf\n-  #336 = Utf8               ([CI)[C\n-  #337 = Utf8               copyOfRange\n-  #338 = Utf8               ([CII)[C\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // com/fasterxml/jackson/core/util/TextBuffer._allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+    #8 = Class              #10           // com/fasterxml/jackson/core/util/TextBuffer\n+    #9 = NameAndType        #11:#12       // _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+   #10 = Utf8               com/fasterxml/jackson/core/util/TextBuffer\n+   #11 = Utf8               _allocator\n+   #12 = Utf8               Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+   #13 = Methodref          #8.#14        // com/fasterxml/jackson/core/util/TextBuffer.\"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n+   #14 = NameAndType        #5:#15        // \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n+   #15 = Utf8               (Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n+   #16 = Fieldref           #8.#17        // com/fasterxml/jackson/core/util/TextBuffer._currentSegment:[C\n+   #17 = NameAndType        #18:#19       // _currentSegment:[C\n+   #18 = Utf8               _currentSegment\n+   #19 = Utf8               [C\n+   #20 = Fieldref           #8.#21        // com/fasterxml/jackson/core/util/TextBuffer._currentSize:I\n+   #21 = NameAndType        #22:#23       // _currentSize:I\n+   #22 = Utf8               _currentSize\n+   #23 = Utf8               I\n+   #24 = Fieldref           #8.#25        // com/fasterxml/jackson/core/util/TextBuffer._inputStart:I\n+   #25 = NameAndType        #26:#23       // _inputStart:I\n+   #26 = Utf8               _inputStart\n+   #27 = Methodref          #8.#28        // com/fasterxml/jackson/core/util/TextBuffer.\"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n+   #28 = NameAndType        #5:#29        // \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n+   #29 = Utf8               (Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n+   #30 = Fieldref           #8.#31        // com/fasterxml/jackson/core/util/TextBuffer._inputLen:I\n+   #31 = NameAndType        #32:#23       // _inputLen:I\n+   #32 = Utf8               _inputLen\n+   #33 = Fieldref           #8.#34        // com/fasterxml/jackson/core/util/TextBuffer._inputBuffer:[C\n+   #34 = NameAndType        #35:#19       // _inputBuffer:[C\n+   #35 = Utf8               _inputBuffer\n+   #36 = Fieldref           #8.#37        // com/fasterxml/jackson/core/util/TextBuffer._resultArray:[C\n+   #37 = NameAndType        #38:#19       // _resultArray:[C\n+   #38 = Utf8               _resultArray\n+   #39 = Fieldref           #8.#40        // com/fasterxml/jackson/core/util/TextBuffer._hasSegments:Z\n+   #40 = NameAndType        #41:#42       // _hasSegments:Z\n+   #41 = Utf8               _hasSegments\n+   #42 = Utf8               Z\n+   #43 = Methodref          #8.#44        // com/fasterxml/jackson/core/util/TextBuffer.clearSegments:()V\n+   #44 = NameAndType        #45:#6        // clearSegments:()V\n+   #45 = Utf8               clearSegments\n+   #46 = Class              #47           // com/fasterxml/jackson/core/util/BufferRecycler\n+   #47 = Utf8               com/fasterxml/jackson/core/util/BufferRecycler\n+   #48 = Methodref          #46.#49       // com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer:(I[C)V\n+   #49 = NameAndType        #50:#51       // releaseCharBuffer:(I[C)V\n+   #50 = Utf8               releaseCharBuffer\n+   #51 = Utf8               (I[C)V\n+   #52 = Fieldref           #8.#53        // com/fasterxml/jackson/core/util/TextBuffer._resultString:Ljava/lang/String;\n+   #53 = NameAndType        #54:#55       // _resultString:Ljava/lang/String;\n+   #54 = Utf8               _resultString\n+   #55 = Utf8               Ljava/lang/String;\n+   #56 = Methodref          #8.#57        // com/fasterxml/jackson/core/util/TextBuffer.buf:(I)[C\n+   #57 = NameAndType        #58:#59       // buf:(I)[C\n+   #58 = Utf8               buf\n+   #59 = Utf8               (I)[C\n+   #60 = Fieldref           #8.#61        // com/fasterxml/jackson/core/util/TextBuffer._segmentSize:I\n+   #61 = NameAndType        #62:#23       // _segmentSize:I\n+   #62 = Utf8               _segmentSize\n+   #63 = Methodref          #8.#64        // com/fasterxml/jackson/core/util/TextBuffer.append:([CII)V\n+   #64 = NameAndType        #65:#66       // append:([CII)V\n+   #65 = Utf8               append\n+   #66 = Utf8               ([CII)V\n+   #67 = Methodref          #8.#68        // com/fasterxml/jackson/core/util/TextBuffer.append:(Ljava/lang/String;II)V\n+   #68 = NameAndType        #65:#69       // append:(Ljava/lang/String;II)V\n+   #69 = Utf8               (Ljava/lang/String;II)V\n+   #70 = Methodref          #71.#72       // java/lang/String.length:()I\n+   #71 = Class              #73           // java/lang/String\n+   #72 = NameAndType        #74:#75       // length:()I\n+   #73 = Utf8               java/lang/String\n+   #74 = Utf8               length\n+   #75 = Utf8               ()I\n+   #76 = Methodref          #8.#77        // com/fasterxml/jackson/core/util/TextBuffer.validateStringLength:(I)V\n+   #77 = NameAndType        #78:#79       // validateStringLength:(I)V\n+   #78 = Utf8               validateStringLength\n+   #79 = Utf8               (I)V\n+   #80 = Methodref          #46.#81       // com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer:(II)[C\n+   #81 = NameAndType        #82:#83       // allocCharBuffer:(II)[C\n+   #82 = Utf8               allocCharBuffer\n+   #83 = Utf8               (II)[C\n+   #84 = Methodref          #85.#86       // java/lang/Math.max:(II)I\n+   #85 = Class              #87           // java/lang/Math\n+   #86 = NameAndType        #88:#89       // max:(II)I\n+   #87 = Utf8               java/lang/Math\n+   #88 = Utf8               max\n+   #89 = Utf8               (II)I\n+   #90 = Fieldref           #8.#91        // com/fasterxml/jackson/core/util/TextBuffer._segments:Ljava/util/ArrayList;\n+   #91 = NameAndType        #92:#93       // _segments:Ljava/util/ArrayList;\n+   #92 = Utf8               _segments\n+   #93 = Utf8               Ljava/util/ArrayList;\n+   #94 = Methodref          #95.#96       // java/util/ArrayList.clear:()V\n+   #95 = Class              #97           // java/util/ArrayList\n+   #96 = NameAndType        #98:#6        // clear:()V\n+   #97 = Utf8               java/util/ArrayList\n+   #98 = Utf8               clear\n+   #99 = Methodref          #71.#100      // java/lang/String.toCharArray:()[C\n+  #100 = NameAndType        #101:#102     // toCharArray:()[C\n+  #101 = Utf8               toCharArray\n+  #102 = Utf8               ()[C\n+  #103 = Fieldref           #8.#104       // com/fasterxml/jackson/core/util/TextBuffer.NO_CHARS:[C\n+  #104 = NameAndType        #105:#19      // NO_CHARS:[C\n+  #105 = Utf8               NO_CHARS\n+  #106 = Methodref          #8.#107       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsArray:()[C\n+  #107 = NameAndType        #108:#102     // contentsAsArray:()[C\n+  #108 = Utf8               contentsAsArray\n+  #109 = Methodref          #71.#110      // java/lang/String.\"<init>\":([C)V\n+  #110 = NameAndType        #5:#111       // \"<init>\":([C)V\n+  #111 = Utf8               ([C)V\n+  #112 = String             #113          //\n+  #113 = Utf8\n+  #114 = Methodref          #71.#115      // java/lang/String.\"<init>\":([CII)V\n+  #115 = NameAndType        #5:#66        // \"<init>\":([CII)V\n+  #116 = Class              #117          // java/lang/StringBuilder\n+  #117 = Utf8               java/lang/StringBuilder\n+  #118 = Methodref          #116.#119     // java/lang/StringBuilder.\"<init>\":(I)V\n+  #119 = NameAndType        #5:#79        // \"<init>\":(I)V\n+  #120 = Methodref          #95.#121      // java/util/ArrayList.size:()I\n+  #121 = NameAndType        #122:#75      // size:()I\n+  #122 = Utf8               size\n+  #123 = Methodref          #95.#124      // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+  #124 = NameAndType        #125:#126     // get:(I)Ljava/lang/Object;\n+  #125 = Utf8               get\n+  #126 = Utf8               (I)Ljava/lang/Object;\n+  #127 = Class              #19           // \"[C\"\n+  #128 = Methodref          #116.#129     // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+  #129 = NameAndType        #65:#130      // append:([CII)Ljava/lang/StringBuilder;\n+  #130 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+  #131 = Methodref          #116.#132     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #132 = NameAndType        #133:#134     // toString:()Ljava/lang/String;\n+  #133 = Utf8               toString\n+  #134 = Utf8               ()Ljava/lang/String;\n+  #135 = Methodref          #8.#136       // com/fasterxml/jackson/core/util/TextBuffer.resultArray:()[C\n+  #136 = NameAndType        #137:#102     // resultArray:()[C\n+  #137 = Utf8               resultArray\n+  #138 = Methodref          #8.#139       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsString:()Ljava/lang/String;\n+  #139 = NameAndType        #140:#134     // contentsAsString:()Ljava/lang/String;\n+  #140 = Utf8               contentsAsString\n+  #141 = Methodref          #142.#143     // com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n+  #142 = Class              #144          // com/fasterxml/jackson/core/io/NumberInput\n+  #143 = NameAndType        #145:#146     // parseDouble:(Ljava/lang/String;Z)D\n+  #144 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n+  #145 = Utf8               parseDouble\n+  #146 = Utf8               (Ljava/lang/String;Z)D\n+  #147 = Class              #148          // java/io/IOException\n+  #148 = Utf8               java/io/IOException\n+  #149 = Class              #150          // java/lang/NumberFormatException\n+  #150 = Utf8               java/lang/NumberFormatException\n+  #151 = Methodref          #147.#152     // java/io/IOException.getMessage:()Ljava/lang/String;\n+  #152 = NameAndType        #153:#134     // getMessage:()Ljava/lang/String;\n+  #153 = Utf8               getMessage\n+  #154 = Methodref          #149.#155     // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #155 = NameAndType        #5:#156       // \"<init>\":(Ljava/lang/String;)V\n+  #156 = Utf8               (Ljava/lang/String;)V\n+  #157 = Methodref          #8.#158       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsDouble:(Z)D\n+  #158 = NameAndType        #159:#160     // contentsAsDouble:(Z)D\n+  #159 = Utf8               contentsAsDouble\n+  #160 = Utf8               (Z)D\n+  #161 = Methodref          #8.#162       // com/fasterxml/jackson/core/util/TextBuffer.contentsAsFloat:(Z)F\n+  #162 = NameAndType        #163:#164     // contentsAsFloat:(Z)F\n+  #163 = Utf8               contentsAsFloat\n+  #164 = Utf8               (Z)F\n+  #165 = Methodref          #142.#166     // com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n+  #166 = NameAndType        #167:#168     // parseFloat:(Ljava/lang/String;Z)F\n+  #167 = Utf8               parseFloat\n+  #168 = Utf8               (Ljava/lang/String;Z)F\n+  #169 = Methodref          #142.#170     // com/fasterxml/jackson/core/io/NumberInput.parseBigDecimal:([C)Ljava/math/BigDecimal;\n+  #170 = NameAndType        #171:#172     // parseBigDecimal:([C)Ljava/math/BigDecimal;\n+  #171 = Utf8               parseBigDecimal\n+  #172 = Utf8               ([C)Ljava/math/BigDecimal;\n+  #173 = Methodref          #142.#174     // com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+  #174 = NameAndType        #175:#176     // parseInt:([CII)I\n+  #175 = Utf8               parseInt\n+  #176 = Utf8               ([CII)I\n+  #177 = Methodref          #142.#178     // com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n+  #178 = NameAndType        #179:#180     // parseLong:([CII)J\n+  #179 = Utf8               parseLong\n+  #180 = Utf8               ([CII)J\n+  #181 = Methodref          #182.#183     // java/io/Writer.write:([C)V\n+  #182 = Class              #184          // java/io/Writer\n+  #183 = NameAndType        #185:#111     // write:([C)V\n+  #184 = Utf8               java/io/Writer\n+  #185 = Utf8               write\n+  #186 = Methodref          #182.#187     // java/io/Writer.write:(Ljava/lang/String;)V\n+  #187 = NameAndType        #185:#156     // write:(Ljava/lang/String;)V\n+  #188 = Methodref          #182.#189     // java/io/Writer.write:([CII)V\n+  #189 = NameAndType        #185:#66      // write:([CII)V\n+  #190 = Methodref          #8.#191       // com/fasterxml/jackson/core/util/TextBuffer.unshare:(I)V\n+  #191 = NameAndType        #192:#79      // unshare:(I)V\n+  #192 = Utf8               unshare\n+  #193 = Methodref          #8.#194       // com/fasterxml/jackson/core/util/TextBuffer.validateAppend:(I)V\n+  #194 = NameAndType        #195:#79      // validateAppend:(I)V\n+  #195 = Utf8               validateAppend\n+  #196 = Methodref          #8.#197       // com/fasterxml/jackson/core/util/TextBuffer.expand:()V\n+  #197 = NameAndType        #198:#6       // expand:()V\n+  #198 = Utf8               expand\n+  #199 = Methodref          #200.#201     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #200 = Class              #202          // java/lang/System\n+  #201 = NameAndType        #203:#204     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #202 = Utf8               java/lang/System\n+  #203 = Utf8               arraycopy\n+  #204 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #205 = Methodref          #85.#206      // java/lang/Math.min:(II)I\n+  #206 = NameAndType        #207:#89      // min:(II)I\n+  #207 = Utf8               min\n+  #208 = Methodref          #71.#209      // java/lang/String.getChars:(II[CI)V\n+  #209 = NameAndType        #210:#211     // getChars:(II[CI)V\n+  #210 = Utf8               getChars\n+  #211 = Utf8               (II[CI)V\n+  #212 = Class              #213          // java/lang/Integer\n+  #213 = Utf8               java/lang/Integer\n+  #214 = Integer            2147483647\n+  #215 = Methodref          #95.#3        // java/util/ArrayList.\"<init>\":()V\n+  #216 = Methodref          #95.#217      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #217 = NameAndType        #218:#219     // add:(Ljava/lang/Object;)Z\n+  #218 = Utf8               add\n+  #219 = Utf8               (Ljava/lang/Object;)Z\n+  #220 = Integer            65536\n+  #221 = Methodref          #8.#222       // com/fasterxml/jackson/core/util/TextBuffer.carr:(I)[C\n+  #222 = NameAndType        #223:#59      // carr:(I)[C\n+  #223 = Utf8               carr\n+  #224 = Methodref          #8.#225       // com/fasterxml/jackson/core/util/TextBuffer._doTrim:(I)Ljava/lang/String;\n+  #225 = NameAndType        #226:#227     // _doTrim:(I)Ljava/lang/String;\n+  #226 = Utf8               _doTrim\n+  #227 = Utf8               (I)Ljava/lang/String;\n+  #228 = Methodref          #95.#229      // java/util/ArrayList.isEmpty:()Z\n+  #229 = NameAndType        #230:#231     // isEmpty:()Z\n+  #230 = Utf8               isEmpty\n+  #231 = Utf8               ()Z\n+  #232 = Methodref          #95.#233      // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+  #233 = NameAndType        #234:#126     // remove:(I)Ljava/lang/Object;\n+  #234 = Utf8               remove\n+  #235 = Methodref          #236.#237     // java/util/Arrays.copyOf:([CI)[C\n+  #236 = Class              #238          // java/util/Arrays\n+  #237 = NameAndType        #239:#240     // copyOf:([CI)[C\n+  #238 = Utf8               java/util/Arrays\n+  #239 = Utf8               copyOf\n+  #240 = Utf8               ([CI)[C\n+  #241 = String             #242          // TextBuffer: Exception when reading contents\n+  #242 = Utf8               TextBuffer: Exception when reading contents\n+  #243 = Methodref          #236.#244     // java/util/Arrays.copyOfRange:([CII)[C\n+  #244 = NameAndType        #245:#246     // copyOfRange:([CII)[C\n+  #245 = Utf8               copyOfRange\n+  #246 = Utf8               ([CII)[C\n+  #247 = Methodref          #8.#121       // com/fasterxml/jackson/core/util/TextBuffer.size:()I\n+  #248 = Utf8               MIN_SEGMENT_LEN\n+  #249 = Utf8               ConstantValue\n+  #250 = Integer            500\n+  #251 = Utf8               MAX_SEGMENT_LEN\n+  #252 = Utf8               Signature\n+  #253 = Utf8               Ljava/util/ArrayList<[C>;\n+  #254 = Utf8               Code\n+  #255 = Utf8               LineNumberTable\n+  #256 = Utf8               LocalVariableTable\n+  #257 = Utf8               this\n+  #258 = Utf8               Lcom/fasterxml/jackson/core/util/TextBuffer;\n+  #259 = Utf8               allocator\n+  #260 = Utf8               initialSegment\n+  #261 = Utf8               fromInitial\n+  #262 = Utf8               ([C)Lcom/fasterxml/jackson/core/util/TextBuffer;\n+  #263 = Utf8               releaseBuffers\n+  #264 = Utf8               StackMapTable\n+  #265 = Utf8               resetWithEmpty\n+  #266 = Utf8               resetWith\n+  #267 = Utf8               (C)V\n+  #268 = Utf8               ch\n+  #269 = Utf8               C\n+  #270 = Utf8               resetWithShared\n+  #271 = Utf8               offset\n+  #272 = Utf8               len\n+  #273 = Utf8               resetWithCopy\n+  #274 = Utf8               Exceptions\n+  #275 = Utf8               text\n+  #276 = Utf8               start\n+  #277 = Utf8               resetWithString\n+  #278 = Utf8               value\n+  #279 = Utf8               getBufferWithoutReset\n+  #280 = Utf8               needed\n+  #281 = Utf8               getTextOffset\n+  #282 = Utf8               hasTextAsCharacters\n+  #283 = Utf8               getTextBuffer\n+  #284 = Utf8               curr\n+  #285 = Utf8               i\n+  #286 = Utf8               sb\n+  #287 = Utf8               Ljava/lang/StringBuilder;\n+  #288 = Utf8               segLen\n+  #289 = Utf8               currLen\n+  #290 = Utf8               result\n+  #291 = Utf8               e\n+  #292 = Utf8               Ljava/io/IOException;\n+  #293 = Utf8               useFastParser\n+  #294 = Utf8               ()D\n+  #295 = Utf8               Deprecated\n+  #296 = Utf8               RuntimeVisibleAnnotations\n+  #297 = Utf8               Ljava/lang/Deprecated;\n+  #298 = Utf8               ()F\n+  #299 = Utf8               contentsAsDecimal\n+  #300 = Utf8               ()Ljava/math/BigDecimal;\n+  #301 = Utf8               contentsAsInt\n+  #302 = Utf8               (Z)I\n+  #303 = Utf8               neg\n+  #304 = Utf8               contentsAsLong\n+  #305 = Utf8               (Z)J\n+  #306 = Utf8               contentsToWriter\n+  #307 = Utf8               (Ljava/io/Writer;)I\n+  #308 = Utf8               end\n+  #309 = Utf8               w\n+  #310 = Utf8               Ljava/io/Writer;\n+  #311 = Utf8               total\n+  #312 = Utf8               ensureNotShared\n+  #313 = Utf8               c\n+  #314 = Utf8               amount\n+  #315 = Utf8               str\n+  #316 = Utf8               toAppend\n+  #317 = Utf8               newTotalLength\n+  #318 = Utf8               getCurrentSegment\n+  #319 = Utf8               emptyAndGetCurrentSegment\n+  #320 = Utf8               getCurrentSegmentSize\n+  #321 = Utf8               setCurrentLength\n+  #322 = Utf8               setCurrentAndReturn\n+  #323 = Utf8               finishCurrentSegment\n+  #324 = Utf8               oldLen\n+  #325 = Utf8               newLen\n+  #326 = Utf8               finishAndReturn\n+  #327 = Utf8               (IZ)Ljava/lang/String;\n+  #328 = Utf8               ptr\n+  #329 = Utf8               lastSegmentEnd\n+  #330 = Utf8               trimTrailingSpaces\n+  #331 = Utf8               expandCurrentSegment\n+  #332 = Utf8               minSize\n+  #333 = Utf8               needExtra\n+  #334 = Utf8               sharedLen\n+  #335 = Utf8               inputBuf\n+  #336 = Utf8               <clinit>\n+  #337 = Utf8               SourceFile\n+  #338 = Utf8               TextBuffer.java\n {\n   static final char[] NO_CHARS;\n     descriptor: [C\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   static final int MIN_SEGMENT_LEN = 500;\n     descriptor: I\n@@ -376,15 +376,15 @@\n   private int _inputLen;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.ArrayList<char[]> _segments;\n     descriptor: Ljava/util/ArrayList;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #93                          // Ljava/util/ArrayList<[C>;\n+    Signature: #253                         // Ljava/util/ArrayList<[C>;\n \n   private boolean _hasSegments;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private int _segmentSize;\n     descriptor: I\n@@ -411,15 +411,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+         6: putfield      #7                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n          9: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 4\n         line 126: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -429,25 +429,25 @@\n   protected com.fasterxml.jackson.core.util.TextBuffer(com.fasterxml.jackson.core.util.BufferRecycler, char[]);\n     descriptor: (Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n+         2: invokespecial #13                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V\n          5: aload_0\n          6: aload_2\n-         7: putfield      #4                  // Field _currentSegment:[C\n+         7: putfield      #16                 // Field _currentSegment:[C\n         10: aload_0\n         11: aload_2\n         12: arraylength\n-        13: putfield      #5                  // Field _currentSize:I\n+        13: putfield      #20                 // Field _currentSize:I\n         16: aload_0\n         17: iconst_m1\n-        18: putfield      #6                  // Field _inputStart:I\n+        18: putfield      #24                 // Field _inputStart:I\n         21: return\n       LineNumberTable:\n         line 130: 0\n         line 131: 5\n         line 132: 10\n         line 133: 16\n         line 134: 21\n@@ -458,68 +458,68 @@\n             0      22     2 initialSegment   [C\n \n   public static com.fasterxml.jackson.core.util.TextBuffer fromInitial(char[]);\n     descriptor: ([C)Lcom/fasterxml/jackson/core/util/TextBuffer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #7                  // class com/fasterxml/jackson/core/util/TextBuffer\n+         0: new           #8                  // class com/fasterxml/jackson/core/util/TextBuffer\n          3: dup\n          4: aconst_null\n          5: aload_0\n-         6: invokespecial #8                  // Method \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n+         6: invokespecial #27                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/util/BufferRecycler;[C)V\n          9: areturn\n       LineNumberTable:\n         line 148: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 initialSegment   [C\n \n   public void releaseBuffers();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_m1\n-         2: putfield      #6                  // Field _inputStart:I\n+         2: putfield      #24                 // Field _inputStart:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #5                  // Field _currentSize:I\n+         7: putfield      #20                 // Field _currentSize:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #10                 // Field _inputBuffer:[C\n+        17: putfield      #33                 // Field _inputBuffer:[C\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #11                 // Field _resultArray:[C\n+        22: putfield      #36                 // Field _resultArray:[C\n         25: aload_0\n-        26: getfield      #12                 // Field _hasSegments:Z\n+        26: getfield      #39                 // Field _hasSegments:Z\n         29: ifeq          36\n         32: aload_0\n-        33: invokespecial #13                 // Method clearSegments:()V\n+        33: invokespecial #43                 // Method clearSegments:()V\n         36: aload_0\n-        37: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+        37: getfield      #7                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n         40: ifnull        69\n         43: aload_0\n-        44: getfield      #4                  // Field _currentSegment:[C\n+        44: getfield      #16                 // Field _currentSegment:[C\n         47: ifnull        69\n         50: aload_0\n-        51: getfield      #4                  // Field _currentSegment:[C\n+        51: getfield      #16                 // Field _currentSegment:[C\n         54: astore_1\n         55: aload_0\n         56: aconst_null\n-        57: putfield      #4                  // Field _currentSegment:[C\n+        57: putfield      #16                 // Field _currentSegment:[C\n         60: aload_0\n-        61: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+        61: getfield      #7                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n         64: iconst_2\n         65: aload_1\n-        66: invokevirtual #15                 // Method com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer:(I[C)V\n+        66: invokevirtual #48                 // Method com/fasterxml/jackson/core/util/BufferRecycler.releaseCharBuffer:(I[C)V\n         69: return\n       LineNumberTable:\n         line 166: 0\n         line 167: 5\n         line 168: 10\n         line 170: 15\n         line 173: 20\n@@ -542,35 +542,35 @@\n   public void resetWithEmpty();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_m1\n-         2: putfield      #6                  // Field _inputStart:I\n+         2: putfield      #24                 // Field _inputStart:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #5                  // Field _currentSize:I\n+         7: putfield      #20                 // Field _currentSize:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #10                 // Field _inputBuffer:[C\n+        17: putfield      #33                 // Field _inputBuffer:[C\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        22: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         25: aload_0\n         26: aconst_null\n-        27: putfield      #11                 // Field _resultArray:[C\n+        27: putfield      #36                 // Field _resultArray:[C\n         30: aload_0\n-        31: getfield      #12                 // Field _hasSegments:Z\n+        31: getfield      #39                 // Field _hasSegments:Z\n         34: ifeq          41\n         37: aload_0\n-        38: invokespecial #13                 // Method clearSegments:()V\n+        38: invokespecial #43                 // Method clearSegments:()V\n         41: return\n       LineNumberTable:\n         line 196: 0\n         line 197: 5\n         line 198: 10\n         line 200: 15\n         line 201: 20\n@@ -587,49 +587,49 @@\n   public void resetWith(char);\n     descriptor: (C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iconst_m1\n-         2: putfield      #6                  // Field _inputStart:I\n+         2: putfield      #24                 // Field _inputStart:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #9                  // Field _inputLen:I\n+         7: putfield      #30                 // Field _inputLen:I\n         10: aload_0\n         11: aconst_null\n-        12: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        12: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #11                 // Field _resultArray:[C\n+        17: putfield      #36                 // Field _resultArray:[C\n         20: aload_0\n-        21: getfield      #12                 // Field _hasSegments:Z\n+        21: getfield      #39                 // Field _hasSegments:Z\n         24: ifeq          34\n         27: aload_0\n-        28: invokespecial #13                 // Method clearSegments:()V\n+        28: invokespecial #43                 // Method clearSegments:()V\n         31: goto          50\n         34: aload_0\n-        35: getfield      #4                  // Field _currentSegment:[C\n+        35: getfield      #16                 // Field _currentSegment:[C\n         38: ifnonnull     50\n         41: aload_0\n         42: aload_0\n         43: iconst_1\n-        44: invokespecial #17                 // Method buf:(I)[C\n-        47: putfield      #4                  // Field _currentSegment:[C\n+        44: invokespecial #56                 // Method buf:(I)[C\n+        47: putfield      #16                 // Field _currentSegment:[C\n         50: aload_0\n-        51: getfield      #4                  // Field _currentSegment:[C\n+        51: getfield      #16                 // Field _currentSegment:[C\n         54: iconst_0\n         55: iload_1\n         56: castore\n         57: aload_0\n         58: aload_0\n         59: iconst_1\n         60: dup_x1\n-        61: putfield      #18                 // Field _segmentSize:I\n-        64: putfield      #5                  // Field _currentSize:I\n+        61: putfield      #60                 // Field _segmentSize:I\n+        64: putfield      #20                 // Field _currentSize:I\n         67: return\n       LineNumberTable:\n         line 220: 0\n         line 221: 5\n         line 223: 10\n         line 224: 15\n         line 226: 20\n@@ -650,32 +650,32 @@\n   public void resetWithShared(char[], int, int);\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+         2: putfield      #52                 // Field _resultString:Ljava/lang/String;\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #11                 // Field _resultArray:[C\n+         7: putfield      #36                 // Field _resultArray:[C\n         10: aload_0\n         11: aload_1\n-        12: putfield      #10                 // Field _inputBuffer:[C\n+        12: putfield      #33                 // Field _inputBuffer:[C\n         15: aload_0\n         16: iload_2\n-        17: putfield      #6                  // Field _inputStart:I\n+        17: putfield      #24                 // Field _inputStart:I\n         20: aload_0\n         21: iload_3\n-        22: putfield      #9                  // Field _inputLen:I\n+        22: putfield      #30                 // Field _inputLen:I\n         25: aload_0\n-        26: getfield      #12                 // Field _hasSegments:Z\n+        26: getfield      #39                 // Field _hasSegments:Z\n         29: ifeq          36\n         32: aload_0\n-        33: invokespecial #13                 // Method clearSegments:()V\n+        33: invokespecial #43                 // Method clearSegments:()V\n         36: return\n       LineNumberTable:\n         line 248: 0\n         line 249: 5\n         line 252: 10\n         line 253: 15\n         line 254: 20\n@@ -694,52 +694,52 @@\n   public void resetWithCopy(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #10                 // Field _inputBuffer:[C\n+         2: putfield      #33                 // Field _inputBuffer:[C\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #6                  // Field _inputStart:I\n+         7: putfield      #24                 // Field _inputStart:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        17: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #11                 // Field _resultArray:[C\n+        22: putfield      #36                 // Field _resultArray:[C\n         25: aload_0\n-        26: getfield      #12                 // Field _hasSegments:Z\n+        26: getfield      #39                 // Field _hasSegments:Z\n         29: ifeq          39\n         32: aload_0\n-        33: invokespecial #13                 // Method clearSegments:()V\n+        33: invokespecial #43                 // Method clearSegments:()V\n         36: goto          55\n         39: aload_0\n-        40: getfield      #4                  // Field _currentSegment:[C\n+        40: getfield      #16                 // Field _currentSegment:[C\n         43: ifnonnull     55\n         46: aload_0\n         47: aload_0\n         48: iload_3\n-        49: invokespecial #17                 // Method buf:(I)[C\n-        52: putfield      #4                  // Field _currentSegment:[C\n+        49: invokespecial #56                 // Method buf:(I)[C\n+        52: putfield      #16                 // Field _currentSegment:[C\n         55: aload_0\n         56: aload_0\n         57: iconst_0\n         58: dup_x1\n-        59: putfield      #18                 // Field _segmentSize:I\n-        62: putfield      #5                  // Field _currentSize:I\n+        59: putfield      #60                 // Field _segmentSize:I\n+        62: putfield      #20                 // Field _currentSize:I\n         65: aload_0\n         66: aload_1\n         67: iload_2\n         68: iload_3\n-        69: invokevirtual #19                 // Method append:([CII)V\n+        69: invokevirtual #63                 // Method append:([CII)V\n         72: return\n       LineNumberTable:\n         line 270: 0\n         line 271: 5\n         line 272: 10\n         line 274: 15\n         line 275: 20\n@@ -765,52 +765,52 @@\n   public void resetWithCopy(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #10                 // Field _inputBuffer:[C\n+         2: putfield      #33                 // Field _inputBuffer:[C\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #6                  // Field _inputStart:I\n+         7: putfield      #24                 // Field _inputStart:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        17: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #11                 // Field _resultArray:[C\n+        22: putfield      #36                 // Field _resultArray:[C\n         25: aload_0\n-        26: getfield      #12                 // Field _hasSegments:Z\n+        26: getfield      #39                 // Field _hasSegments:Z\n         29: ifeq          39\n         32: aload_0\n-        33: invokespecial #13                 // Method clearSegments:()V\n+        33: invokespecial #43                 // Method clearSegments:()V\n         36: goto          55\n         39: aload_0\n-        40: getfield      #4                  // Field _currentSegment:[C\n+        40: getfield      #16                 // Field _currentSegment:[C\n         43: ifnonnull     55\n         46: aload_0\n         47: aload_0\n         48: iload_3\n-        49: invokespecial #17                 // Method buf:(I)[C\n-        52: putfield      #4                  // Field _currentSegment:[C\n+        49: invokespecial #56                 // Method buf:(I)[C\n+        52: putfield      #16                 // Field _currentSegment:[C\n         55: aload_0\n         56: aload_0\n         57: iconst_0\n         58: dup_x1\n-        59: putfield      #18                 // Field _segmentSize:I\n-        62: putfield      #5                  // Field _currentSize:I\n+        59: putfield      #60                 // Field _segmentSize:I\n+        62: putfield      #20                 // Field _currentSize:I\n         65: aload_0\n         66: aload_1\n         67: iload_2\n         68: iload_3\n-        69: invokevirtual #20                 // Method append:(Ljava/lang/String;II)V\n+        69: invokevirtual #67                 // Method append:(Ljava/lang/String;II)V\n         72: return\n       LineNumberTable:\n         line 296: 0\n         line 297: 5\n         line 298: 10\n         line 300: 15\n         line 301: 20\n@@ -836,39 +836,39 @@\n   public void resetWithString(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #10                 // Field _inputBuffer:[C\n+         2: putfield      #33                 // Field _inputBuffer:[C\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #6                  // Field _inputStart:I\n+         7: putfield      #24                 // Field _inputStart:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aload_1\n-        17: invokevirtual #21                 // Method java/lang/String.length:()I\n-        20: invokevirtual #22                 // Method validateStringLength:(I)V\n+        17: invokevirtual #70                 // Method java/lang/String.length:()I\n+        20: invokevirtual #76                 // Method validateStringLength:(I)V\n         23: aload_0\n         24: aload_1\n-        25: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        25: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         28: aload_0\n         29: aconst_null\n-        30: putfield      #11                 // Field _resultArray:[C\n+        30: putfield      #36                 // Field _resultArray:[C\n         33: aload_0\n-        34: getfield      #12                 // Field _hasSegments:Z\n+        34: getfield      #39                 // Field _hasSegments:Z\n         37: ifeq          44\n         40: aload_0\n-        41: invokespecial #13                 // Method clearSegments:()V\n+        41: invokespecial #43                 // Method clearSegments:()V\n         44: aload_0\n         45: iconst_0\n-        46: putfield      #5                  // Field _currentSize:I\n+        46: putfield      #20                 // Field _currentSize:I\n         49: return\n       LineNumberTable:\n         line 318: 0\n         line 319: 5\n         line 320: 10\n         line 322: 15\n         line 323: 23\n@@ -888,39 +888,39 @@\n \n   public char[] getBufferWithoutReset();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _currentSegment:[C\n+         1: getfield      #16                 // Field _currentSegment:[C\n          4: areturn\n       LineNumberTable:\n         line 342: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/util/TextBuffer;\n \n   private char[] buf(int);\n     descriptor: (I)[C\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+         1: getfield      #7                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n          4: ifnull        17\n          7: aload_0\n-         8: getfield      #2                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n+         8: getfield      #7                  // Field _allocator:Lcom/fasterxml/jackson/core/util/BufferRecycler;\n         11: iconst_2\n         12: iload_1\n-        13: invokevirtual #23                 // Method com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer:(II)[C\n+        13: invokevirtual #80                 // Method com/fasterxml/jackson/core/util/BufferRecycler.allocCharBuffer:(II)[C\n         16: areturn\n         17: iload_1\n         18: sipush        500\n-        21: invokestatic  #24                 // Method java/lang/Math.max:(II)I\n+        21: invokestatic  #84                 // Method java/lang/Math.max:(II)I\n         24: newarray       char\n         26: areturn\n       LineNumberTable:\n         line 349: 0\n         line 350: 7\n         line 352: 17\n       LocalVariableTable:\n@@ -933,24 +933,24 @@\n   private void clearSegments();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #12                 // Field _hasSegments:Z\n+         2: putfield      #39                 // Field _hasSegments:Z\n          5: aload_0\n-         6: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-         9: invokevirtual #26                 // Method java/util/ArrayList.clear:()V\n+         6: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+         9: invokevirtual #94                 // Method java/util/ArrayList.clear:()V\n         12: aload_0\n         13: aload_0\n         14: iconst_0\n         15: dup_x1\n-        16: putfield      #18                 // Field _segmentSize:I\n-        19: putfield      #5                  // Field _currentSize:I\n+        16: putfield      #60                 // Field _segmentSize:I\n+        19: putfield      #20                 // Field _currentSize:I\n         22: return\n       LineNumberTable:\n         line 357: 0\n         line 365: 5\n         line 366: 12\n         line 367: 22\n       LocalVariableTable:\n@@ -959,37 +959,37 @@\n \n   public int size();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          12\n          7: aload_0\n-         8: getfield      #9                  // Field _inputLen:I\n+         8: getfield      #30                 // Field _inputLen:I\n         11: ireturn\n         12: aload_0\n-        13: getfield      #11                 // Field _resultArray:[C\n+        13: getfield      #36                 // Field _resultArray:[C\n         16: ifnull        25\n         19: aload_0\n-        20: getfield      #11                 // Field _resultArray:[C\n+        20: getfield      #36                 // Field _resultArray:[C\n         23: arraylength\n         24: ireturn\n         25: aload_0\n-        26: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+        26: getfield      #52                 // Field _resultString:Ljava/lang/String;\n         29: ifnull        40\n         32: aload_0\n-        33: getfield      #16                 // Field _resultString:Ljava/lang/String;\n-        36: invokevirtual #21                 // Method java/lang/String.length:()I\n+        33: getfield      #52                 // Field _resultString:Ljava/lang/String;\n+        36: invokevirtual #70                 // Method java/lang/String.length:()I\n         39: ireturn\n         40: aload_0\n-        41: getfield      #18                 // Field _segmentSize:I\n+        41: getfield      #60                 // Field _segmentSize:I\n         44: aload_0\n-        45: getfield      #5                  // Field _currentSize:I\n+        45: getfield      #20                 // Field _currentSize:I\n         48: iadd\n         49: ireturn\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n         line 382: 12\n         line 383: 19\n@@ -1006,18 +1006,18 @@\n \n   public int getTextOffset();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          14\n          7: aload_0\n-         8: getfield      #6                  // Field _inputStart:I\n+         8: getfield      #24                 // Field _inputStart:I\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n       LineNumberTable:\n         line 397: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1029,23 +1029,23 @@\n \n   public boolean hasTextAsCharacters();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: ifge          14\n          7: aload_0\n-         8: getfield      #11                 // Field _resultArray:[C\n+         8: getfield      #36                 // Field _resultArray:[C\n         11: ifnull        16\n         14: iconst_1\n         15: ireturn\n         16: aload_0\n-        17: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+        17: getfield      #52                 // Field _resultString:Ljava/lang/String;\n         20: ifnull        25\n         23: iconst_0\n         24: ireturn\n         25: iconst_1\n         26: ireturn\n       LineNumberTable:\n         line 410: 0\n@@ -1061,48 +1061,48 @@\n \n   public char[] getTextBuffer() throws java.io.IOException;\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          12\n          7: aload_0\n-         8: getfield      #10                 // Field _inputBuffer:[C\n+         8: getfield      #33                 // Field _inputBuffer:[C\n         11: areturn\n         12: aload_0\n-        13: getfield      #11                 // Field _resultArray:[C\n+        13: getfield      #36                 // Field _resultArray:[C\n         16: ifnull        24\n         19: aload_0\n-        20: getfield      #11                 // Field _resultArray:[C\n+        20: getfield      #36                 // Field _resultArray:[C\n         23: areturn\n         24: aload_0\n-        25: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+        25: getfield      #52                 // Field _resultString:Ljava/lang/String;\n         28: ifnull        44\n         31: aload_0\n         32: aload_0\n-        33: getfield      #16                 // Field _resultString:Ljava/lang/String;\n-        36: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C\n+        33: getfield      #52                 // Field _resultString:Ljava/lang/String;\n+        36: invokevirtual #99                 // Method java/lang/String.toCharArray:()[C\n         39: dup_x1\n-        40: putfield      #11                 // Field _resultArray:[C\n+        40: putfield      #36                 // Field _resultArray:[C\n         43: areturn\n         44: aload_0\n-        45: getfield      #12                 // Field _hasSegments:Z\n+        45: getfield      #39                 // Field _hasSegments:Z\n         48: ifne          69\n         51: aload_0\n-        52: getfield      #4                  // Field _currentSegment:[C\n+        52: getfield      #16                 // Field _currentSegment:[C\n         55: ifnonnull     64\n-        58: getstatic     #28                 // Field NO_CHARS:[C\n+        58: getstatic     #103                // Field NO_CHARS:[C\n         61: goto          68\n         64: aload_0\n-        65: getfield      #4                  // Field _currentSegment:[C\n+        65: getfield      #16                 // Field _currentSegment:[C\n         68: areturn\n         69: aload_0\n-        70: invokevirtual #29                 // Method contentsAsArray:()[C\n+        70: invokevirtual #106                // Method contentsAsArray:()[C\n         73: areturn\n       LineNumberTable:\n         line 427: 0\n         line 428: 12\n         line 429: 24\n         line 430: 31\n         line 433: 44\n@@ -1124,135 +1124,135 @@\n \n   public java.lang.String contentsAsString() throws java.io.IOException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+         1: getfield      #52                 // Field _resultString:Ljava/lang/String;\n          4: ifnonnull     238\n          7: aload_0\n-         8: getfield      #11                 // Field _resultArray:[C\n+         8: getfield      #36                 // Field _resultArray:[C\n         11: ifnull        32\n         14: aload_0\n-        15: new           #30                 // class java/lang/String\n+        15: new           #71                 // class java/lang/String\n         18: dup\n         19: aload_0\n-        20: getfield      #11                 // Field _resultArray:[C\n-        23: invokespecial #31                 // Method java/lang/String.\"<init>\":([C)V\n-        26: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        20: getfield      #36                 // Field _resultArray:[C\n+        23: invokespecial #109                // Method java/lang/String.\"<init>\":([C)V\n+        26: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         29: goto          238\n         32: aload_0\n-        33: getfield      #6                  // Field _inputStart:I\n+        33: getfield      #24                 // Field _inputStart:I\n         36: iflt          89\n         39: aload_0\n-        40: getfield      #9                  // Field _inputLen:I\n+        40: getfield      #30                 // Field _inputLen:I\n         43: iconst_1\n         44: if_icmpge     55\n         47: aload_0\n-        48: ldc           #32                 // String\n+        48: ldc           #112                // String\n         50: dup_x1\n-        51: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        51: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         54: areturn\n         55: aload_0\n         56: aload_0\n-        57: getfield      #9                  // Field _inputLen:I\n-        60: invokevirtual #22                 // Method validateStringLength:(I)V\n+        57: getfield      #30                 // Field _inputLen:I\n+        60: invokevirtual #76                 // Method validateStringLength:(I)V\n         63: aload_0\n-        64: new           #30                 // class java/lang/String\n+        64: new           #71                 // class java/lang/String\n         67: dup\n         68: aload_0\n-        69: getfield      #10                 // Field _inputBuffer:[C\n+        69: getfield      #33                 // Field _inputBuffer:[C\n         72: aload_0\n-        73: getfield      #6                  // Field _inputStart:I\n+        73: getfield      #24                 // Field _inputStart:I\n         76: aload_0\n-        77: getfield      #9                  // Field _inputLen:I\n-        80: invokespecial #33                 // Method java/lang/String.\"<init>\":([CII)V\n-        83: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        77: getfield      #30                 // Field _inputLen:I\n+        80: invokespecial #114                // Method java/lang/String.\"<init>\":([CII)V\n+        83: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         86: goto          238\n         89: aload_0\n-        90: getfield      #18                 // Field _segmentSize:I\n+        90: getfield      #60                 // Field _segmentSize:I\n         93: istore_1\n         94: aload_0\n-        95: getfield      #5                  // Field _currentSize:I\n+        95: getfield      #20                 // Field _currentSize:I\n         98: istore_2\n         99: iload_1\n        100: ifne          141\n        103: iload_2\n        104: ifne          116\n        107: aload_0\n-       108: ldc           #32                 // String\n-       110: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+       108: ldc           #112                // String\n+       110: putfield      #52                 // Field _resultString:Ljava/lang/String;\n        113: goto          238\n        116: aload_0\n        117: iload_2\n-       118: invokevirtual #22                 // Method validateStringLength:(I)V\n+       118: invokevirtual #76                 // Method validateStringLength:(I)V\n        121: aload_0\n-       122: new           #30                 // class java/lang/String\n+       122: new           #71                 // class java/lang/String\n        125: dup\n        126: aload_0\n-       127: getfield      #4                  // Field _currentSegment:[C\n+       127: getfield      #16                 // Field _currentSegment:[C\n        130: iconst_0\n        131: iload_2\n-       132: invokespecial #33                 // Method java/lang/String.\"<init>\":([CII)V\n-       135: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+       132: invokespecial #114                // Method java/lang/String.\"<init>\":([CII)V\n+       135: putfield      #52                 // Field _resultString:Ljava/lang/String;\n        138: goto          238\n        141: aload_0\n        142: iload_1\n        143: iload_2\n        144: iadd\n-       145: invokevirtual #22                 // Method validateStringLength:(I)V\n-       148: new           #34                 // class java/lang/StringBuilder\n+       145: invokevirtual #76                 // Method validateStringLength:(I)V\n+       148: new           #116                // class java/lang/StringBuilder\n        151: dup\n        152: iload_1\n        153: iload_2\n        154: iadd\n-       155: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+       155: invokespecial #118                // Method java/lang/StringBuilder.\"<init>\":(I)V\n        158: astore_3\n        159: aload_0\n-       160: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+       160: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n        163: ifnull        216\n        166: iconst_0\n        167: istore        4\n        169: aload_0\n-       170: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-       173: invokevirtual #36                 // Method java/util/ArrayList.size:()I\n+       170: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+       173: invokevirtual #120                // Method java/util/ArrayList.size:()I\n        176: istore        5\n        178: iload         4\n        180: iload         5\n        182: if_icmpge     216\n        185: aload_0\n-       186: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+       186: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n        189: iload         4\n-       191: invokevirtual #37                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       194: checkcast     #38                 // class \"[C\"\n+       191: invokevirtual #123                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       194: checkcast     #127                // class \"[C\"\n        197: astore        6\n        199: aload_3\n        200: aload         6\n        202: iconst_0\n        203: aload         6\n        205: arraylength\n-       206: invokevirtual #39                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+       206: invokevirtual #128                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n        209: pop\n        210: iinc          4, 1\n        213: goto          178\n        216: aload_3\n        217: aload_0\n-       218: getfield      #4                  // Field _currentSegment:[C\n+       218: getfield      #16                 // Field _currentSegment:[C\n        221: iconst_0\n        222: aload_0\n-       223: getfield      #5                  // Field _currentSize:I\n-       226: invokevirtual #39                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+       223: getfield      #20                 // Field _currentSize:I\n+       226: invokevirtual #128                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n        229: pop\n        230: aload_0\n        231: aload_3\n-       232: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       235: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+       232: invokevirtual #131                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       235: putfield      #52                 // Field _resultString:Ljava/lang/String;\n        238: aload_0\n-       239: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+       239: getfield      #52                 // Field _resultString:Ljava/lang/String;\n        242: areturn\n       LineNumberTable:\n         line 456: 0\n         line 458: 7\n         line 460: 14\n         line 463: 32\n         line 464: 39\n@@ -1305,24 +1305,24 @@\n \n   public char[] contentsAsArray() throws java.io.IOException;\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field _resultArray:[C\n+         1: getfield      #36                 // Field _resultArray:[C\n          4: astore_1\n          5: aload_1\n          6: ifnonnull     19\n          9: aload_0\n         10: aload_0\n-        11: invokespecial #41                 // Method resultArray:()[C\n+        11: invokespecial #135                // Method resultArray:()[C\n         14: dup\n         15: astore_1\n-        16: putfield      #11                 // Field _resultArray:[C\n+        16: putfield      #36                 // Field _resultArray:[C\n         19: aload_1\n         20: areturn\n       LineNumberTable:\n         line 507: 0\n         line 508: 5\n         line 509: 9\n         line 511: 19\n@@ -1339,24 +1339,24 @@\n \n   public double contentsAsDouble(boolean) throws java.lang.NumberFormatException;\n     descriptor: (Z)D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+         1: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n          4: iload_1\n-         5: invokestatic  #43                 // Method com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n+         5: invokestatic  #141                // Method com/fasterxml/jackson/core/io/NumberInput.parseDouble:(Ljava/lang/String;Z)D\n          8: dreturn\n          9: astore_2\n-        10: new           #45                 // class java/lang/NumberFormatException\n+        10: new           #149                // class java/lang/NumberFormatException\n         13: dup\n         14: aload_2\n-        15: invokevirtual #46                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n-        18: invokespecial #47                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        15: invokevirtual #151                // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+        18: invokespecial #154                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 527: 0\n         line 528: 9\n@@ -1375,65 +1375,65 @@\n   public double contentsAsDouble() throws java.lang.NumberFormatException;\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #48                 // Method contentsAsDouble:(Z)D\n+         2: invokevirtual #157                // Method contentsAsDouble:(Z)D\n          5: dreturn\n       LineNumberTable:\n         line 546: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/util/TextBuffer;\n     Exceptions:\n       throws java.lang.NumberFormatException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #164()\n+      0: #297()\n         java.lang.Deprecated\n \n   public float contentsAsFloat() throws java.lang.NumberFormatException;\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #49                 // Method contentsAsFloat:(Z)F\n+         2: invokevirtual #161                // Method contentsAsFloat:(Z)F\n          5: freturn\n       LineNumberTable:\n         line 560: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/util/TextBuffer;\n     Exceptions:\n       throws java.lang.NumberFormatException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #164()\n+      0: #297()\n         java.lang.Deprecated\n \n   public float contentsAsFloat(boolean) throws java.lang.NumberFormatException;\n     descriptor: (Z)F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+         1: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n          4: iload_1\n-         5: invokestatic  #50                 // Method com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n+         5: invokestatic  #165                // Method com/fasterxml/jackson/core/io/NumberInput.parseFloat:(Ljava/lang/String;Z)F\n          8: freturn\n          9: astore_2\n-        10: new           #45                 // class java/lang/NumberFormatException\n+        10: new           #149                // class java/lang/NumberFormatException\n         13: dup\n         14: aload_2\n-        15: invokevirtual #46                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n-        18: invokespecial #47                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        15: invokevirtual #151                // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+        18: invokespecial #154                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 575: 0\n         line 576: 9\n@@ -1451,23 +1451,23 @@\n \n   public java.math.BigDecimal contentsAsDecimal() throws java.lang.NumberFormatException;\n     descriptor: ()Ljava/math/BigDecimal;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method contentsAsArray:()[C\n-         4: invokestatic  #51                 // Method com/fasterxml/jackson/core/io/NumberInput.parseBigDecimal:([C)Ljava/math/BigDecimal;\n+         1: invokevirtual #106                // Method contentsAsArray:()[C\n+         4: invokestatic  #169                // Method com/fasterxml/jackson/core/io/NumberInput.parseBigDecimal:([C)Ljava/math/BigDecimal;\n          7: areturn\n          8: astore_1\n-         9: new           #45                 // class java/lang/NumberFormatException\n+         9: new           #149                // class java/lang/NumberFormatException\n         12: dup\n         13: aload_1\n-        14: invokevirtual #46                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n-        17: invokespecial #47                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        14: invokevirtual #151                // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+        17: invokespecial #154                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 594: 0\n         line 595: 8\n@@ -1479,69 +1479,69 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n     Exceptions:\n       throws java.lang.NumberFormatException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #164()\n+      0: #297()\n         java.lang.Deprecated\n \n   public int contentsAsInt(boolean);\n     descriptor: (Z)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          55\n          7: aload_0\n-         8: getfield      #10                 // Field _inputBuffer:[C\n+         8: getfield      #33                 // Field _inputBuffer:[C\n         11: ifnull        55\n         14: iload_1\n         15: ifeq          39\n         18: aload_0\n-        19: getfield      #10                 // Field _inputBuffer:[C\n+        19: getfield      #33                 // Field _inputBuffer:[C\n         22: aload_0\n-        23: getfield      #6                  // Field _inputStart:I\n+        23: getfield      #24                 // Field _inputStart:I\n         26: iconst_1\n         27: iadd\n         28: aload_0\n-        29: getfield      #9                  // Field _inputLen:I\n+        29: getfield      #30                 // Field _inputLen:I\n         32: iconst_1\n         33: isub\n-        34: invokestatic  #52                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+        34: invokestatic  #173                // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n         37: ineg\n         38: ireturn\n         39: aload_0\n-        40: getfield      #10                 // Field _inputBuffer:[C\n+        40: getfield      #33                 // Field _inputBuffer:[C\n         43: aload_0\n-        44: getfield      #6                  // Field _inputStart:I\n+        44: getfield      #24                 // Field _inputStart:I\n         47: aload_0\n-        48: getfield      #9                  // Field _inputLen:I\n-        51: invokestatic  #52                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+        48: getfield      #30                 // Field _inputLen:I\n+        51: invokestatic  #173                // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n         54: ireturn\n         55: iload_1\n         56: ifeq          75\n         59: aload_0\n-        60: getfield      #4                  // Field _currentSegment:[C\n+        60: getfield      #16                 // Field _currentSegment:[C\n         63: iconst_1\n         64: aload_0\n-        65: getfield      #5                  // Field _currentSize:I\n+        65: getfield      #20                 // Field _currentSize:I\n         68: iconst_1\n         69: isub\n-        70: invokestatic  #52                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+        70: invokestatic  #173                // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n         73: ineg\n         74: ireturn\n         75: aload_0\n-        76: getfield      #4                  // Field _currentSegment:[C\n+        76: getfield      #16                 // Field _currentSegment:[C\n         79: iconst_0\n         80: aload_0\n-        81: getfield      #5                  // Field _currentSize:I\n-        84: invokestatic  #52                 // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n+        81: getfield      #20                 // Field _currentSize:I\n+        84: invokestatic  #173                // Method com/fasterxml/jackson/core/io/NumberInput.parseInt:([CII)I\n         87: ireturn\n       LineNumberTable:\n         line 617: 0\n         line 618: 14\n         line 619: 18\n         line 621: 39\n         line 623: 55\n@@ -1558,60 +1558,60 @@\n \n   public long contentsAsLong(boolean);\n     descriptor: (Z)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          55\n          7: aload_0\n-         8: getfield      #10                 // Field _inputBuffer:[C\n+         8: getfield      #33                 // Field _inputBuffer:[C\n         11: ifnull        55\n         14: iload_1\n         15: ifeq          39\n         18: aload_0\n-        19: getfield      #10                 // Field _inputBuffer:[C\n+        19: getfield      #33                 // Field _inputBuffer:[C\n         22: aload_0\n-        23: getfield      #6                  // Field _inputStart:I\n+        23: getfield      #24                 // Field _inputStart:I\n         26: iconst_1\n         27: iadd\n         28: aload_0\n-        29: getfield      #9                  // Field _inputLen:I\n+        29: getfield      #30                 // Field _inputLen:I\n         32: iconst_1\n         33: isub\n-        34: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n+        34: invokestatic  #177                // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n         37: lneg\n         38: lreturn\n         39: aload_0\n-        40: getfield      #10                 // Field _inputBuffer:[C\n+        40: getfield      #33                 // Field _inputBuffer:[C\n         43: aload_0\n-        44: getfield      #6                  // Field _inputStart:I\n+        44: getfield      #24                 // Field _inputStart:I\n         47: aload_0\n-        48: getfield      #9                  // Field _inputLen:I\n-        51: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n+        48: getfield      #30                 // Field _inputLen:I\n+        51: invokestatic  #177                // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n         54: lreturn\n         55: iload_1\n         56: ifeq          75\n         59: aload_0\n-        60: getfield      #4                  // Field _currentSegment:[C\n+        60: getfield      #16                 // Field _currentSegment:[C\n         63: iconst_1\n         64: aload_0\n-        65: getfield      #5                  // Field _currentSize:I\n+        65: getfield      #20                 // Field _currentSize:I\n         68: iconst_1\n         69: isub\n-        70: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n+        70: invokestatic  #177                // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n         73: lneg\n         74: lreturn\n         75: aload_0\n-        76: getfield      #4                  // Field _currentSegment:[C\n+        76: getfield      #16                 // Field _currentSegment:[C\n         79: iconst_0\n         80: aload_0\n-        81: getfield      #5                  // Field _currentSize:I\n-        84: invokestatic  #53                 // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n+        81: getfield      #20                 // Field _currentSize:I\n+        84: invokestatic  #177                // Method com/fasterxml/jackson/core/io/NumberInput.parseLong:([CII)J\n         87: lreturn\n       LineNumberTable:\n         line 645: 0\n         line 646: 14\n         line 647: 18\n         line 649: 39\n         line 651: 55\n@@ -1628,101 +1628,101 @@\n \n   public int contentsToWriter(java.io.Writer) throws java.io.IOException;\n     descriptor: (Ljava/io/Writer;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #11                 // Field _resultArray:[C\n+         1: getfield      #36                 // Field _resultArray:[C\n          4: ifnull        21\n          7: aload_1\n          8: aload_0\n-         9: getfield      #11                 // Field _resultArray:[C\n-        12: invokevirtual #54                 // Method java/io/Writer.write:([C)V\n+         9: getfield      #36                 // Field _resultArray:[C\n+        12: invokevirtual #181                // Method java/io/Writer.write:([C)V\n         15: aload_0\n-        16: getfield      #11                 // Field _resultArray:[C\n+        16: getfield      #36                 // Field _resultArray:[C\n         19: arraylength\n         20: ireturn\n         21: aload_0\n-        22: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+        22: getfield      #52                 // Field _resultString:Ljava/lang/String;\n         25: ifnull        44\n         28: aload_1\n         29: aload_0\n-        30: getfield      #16                 // Field _resultString:Ljava/lang/String;\n-        33: invokevirtual #55                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        30: getfield      #52                 // Field _resultString:Ljava/lang/String;\n+        33: invokevirtual #186                // Method java/io/Writer.write:(Ljava/lang/String;)V\n         36: aload_0\n-        37: getfield      #16                 // Field _resultString:Ljava/lang/String;\n-        40: invokevirtual #21                 // Method java/lang/String.length:()I\n+        37: getfield      #52                 // Field _resultString:Ljava/lang/String;\n+        40: invokevirtual #70                 // Method java/lang/String.length:()I\n         43: ireturn\n         44: aload_0\n-        45: getfield      #6                  // Field _inputStart:I\n+        45: getfield      #24                 // Field _inputStart:I\n         48: iflt          75\n         51: aload_0\n-        52: getfield      #9                  // Field _inputLen:I\n+        52: getfield      #30                 // Field _inputLen:I\n         55: istore_2\n         56: iload_2\n         57: ifle          73\n         60: aload_1\n         61: aload_0\n-        62: getfield      #10                 // Field _inputBuffer:[C\n+        62: getfield      #33                 // Field _inputBuffer:[C\n         65: aload_0\n-        66: getfield      #6                  // Field _inputStart:I\n+        66: getfield      #24                 // Field _inputStart:I\n         69: iload_2\n-        70: invokevirtual #56                 // Method java/io/Writer.write:([CII)V\n+        70: invokevirtual #188                // Method java/io/Writer.write:([CII)V\n         73: iload_2\n         74: ireturn\n         75: iconst_0\n         76: istore_2\n         77: aload_0\n-        78: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        78: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         81: ifnull        139\n         84: iconst_0\n         85: istore_3\n         86: aload_0\n-        87: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-        90: invokevirtual #36                 // Method java/util/ArrayList.size:()I\n+        87: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+        90: invokevirtual #120                // Method java/util/ArrayList.size:()I\n         93: istore        4\n         95: iload_3\n         96: iload         4\n         98: if_icmpge     139\n        101: aload_0\n-       102: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+       102: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n        105: iload_3\n-       106: invokevirtual #37                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       109: checkcast     #38                 // class \"[C\"\n+       106: invokevirtual #123                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       109: checkcast     #127                // class \"[C\"\n        112: astore        5\n        114: aload         5\n        116: arraylength\n        117: istore        6\n        119: iload_2\n        120: iload         6\n        122: iadd\n        123: istore_2\n        124: aload_1\n        125: aload         5\n        127: iconst_0\n        128: iload         6\n-       130: invokevirtual #56                 // Method java/io/Writer.write:([CII)V\n+       130: invokevirtual #188                // Method java/io/Writer.write:([CII)V\n        133: iinc          3, 1\n        136: goto          95\n        139: aload_0\n-       140: getfield      #5                  // Field _currentSize:I\n+       140: getfield      #20                 // Field _currentSize:I\n        143: istore_3\n        144: iload_3\n        145: ifle          162\n        148: iload_2\n        149: iload_3\n        150: iadd\n        151: istore_2\n        152: aload_1\n        153: aload_0\n-       154: getfield      #4                  // Field _currentSegment:[C\n+       154: getfield      #16                 // Field _currentSegment:[C\n        157: iconst_0\n        158: iload_3\n-       159: invokevirtual #56                 // Method java/io/Writer.write:([CII)V\n+       159: invokevirtual #188                // Method java/io/Writer.write:([CII)V\n        162: iload_2\n        163: ireturn\n       LineNumberTable:\n         line 670: 0\n         line 671: 7\n         line 672: 15\n         line 674: 21\n@@ -1778,19 +1778,19 @@\n \n   public void ensureNotShared();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          13\n          7: aload_0\n          8: bipush        16\n-        10: invokespecial #57                 // Method unshare:(I)V\n+        10: invokespecial #190                // Method unshare:(I)V\n         13: return\n       LineNumberTable:\n         line 715: 0\n         line 716: 7\n         line 718: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1800,49 +1800,49 @@\n \n   public void append(char) throws java.io.IOException;\n     descriptor: (C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          13\n          7: aload_0\n          8: bipush        16\n-        10: invokespecial #57                 // Method unshare:(I)V\n+        10: invokespecial #190                // Method unshare:(I)V\n         13: aload_0\n         14: aconst_null\n-        15: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        15: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         18: aload_0\n         19: aconst_null\n-        20: putfield      #11                 // Field _resultArray:[C\n+        20: putfield      #36                 // Field _resultArray:[C\n         23: aload_0\n-        24: getfield      #4                  // Field _currentSegment:[C\n+        24: getfield      #16                 // Field _currentSegment:[C\n         27: astore_2\n         28: aload_0\n-        29: getfield      #5                  // Field _currentSize:I\n+        29: getfield      #20                 // Field _currentSize:I\n         32: aload_2\n         33: arraylength\n         34: if_icmplt     51\n         37: aload_0\n         38: iconst_1\n-        39: invokespecial #58                 // Method validateAppend:(I)V\n+        39: invokespecial #193                // Method validateAppend:(I)V\n         42: aload_0\n-        43: invokespecial #59                 // Method expand:()V\n+        43: invokespecial #196                // Method expand:()V\n         46: aload_0\n-        47: getfield      #4                  // Field _currentSegment:[C\n+        47: getfield      #16                 // Field _currentSegment:[C\n         50: astore_2\n         51: aload_2\n         52: aload_0\n         53: dup\n-        54: getfield      #5                  // Field _currentSize:I\n+        54: getfield      #20                 // Field _currentSize:I\n         57: dup_x1\n         58: iconst_1\n         59: iadd\n-        60: putfield      #5                  // Field _currentSize:I\n+        60: putfield      #20                 // Field _currentSize:I\n         63: iload_1\n         64: castore\n         65: return\n       LineNumberTable:\n         line 726: 0\n         line 727: 7\n         line 729: 13\n@@ -1869,92 +1869,92 @@\n \n   public void append(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          12\n          7: aload_0\n          8: iload_3\n-         9: invokespecial #57                 // Method unshare:(I)V\n+         9: invokespecial #190                // Method unshare:(I)V\n         12: aload_0\n         13: aconst_null\n-        14: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        14: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         17: aload_0\n         18: aconst_null\n-        19: putfield      #11                 // Field _resultArray:[C\n+        19: putfield      #36                 // Field _resultArray:[C\n         22: aload_0\n-        23: getfield      #4                  // Field _currentSegment:[C\n+        23: getfield      #16                 // Field _currentSegment:[C\n         26: astore        4\n         28: aload         4\n         30: arraylength\n         31: aload_0\n-        32: getfield      #5                  // Field _currentSize:I\n+        32: getfield      #20                 // Field _currentSize:I\n         35: isub\n         36: istore        5\n         38: iload         5\n         40: iload_3\n         41: if_icmplt     67\n         44: aload_1\n         45: iload_2\n         46: aload         4\n         48: aload_0\n-        49: getfield      #5                  // Field _currentSize:I\n+        49: getfield      #20                 // Field _currentSize:I\n         52: iload_3\n-        53: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        53: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         56: aload_0\n         57: dup\n-        58: getfield      #5                  // Field _currentSize:I\n+        58: getfield      #20                 // Field _currentSize:I\n         61: iload_3\n         62: iadd\n-        63: putfield      #5                  // Field _currentSize:I\n+        63: putfield      #20                 // Field _currentSize:I\n         66: return\n         67: aload_0\n         68: iload_3\n-        69: invokespecial #58                 // Method validateAppend:(I)V\n+        69: invokespecial #193                // Method validateAppend:(I)V\n         72: iload         5\n         74: ifle          100\n         77: aload_1\n         78: iload_2\n         79: aload         4\n         81: aload_0\n-        82: getfield      #5                  // Field _currentSize:I\n+        82: getfield      #20                 // Field _currentSize:I\n         85: iload         5\n-        87: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        87: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         90: iload_2\n         91: iload         5\n         93: iadd\n         94: istore_2\n         95: iload_3\n         96: iload         5\n         98: isub\n         99: istore_3\n        100: aload_0\n-       101: invokespecial #59                 // Method expand:()V\n+       101: invokespecial #196                // Method expand:()V\n        104: aload_0\n-       105: getfield      #4                  // Field _currentSegment:[C\n+       105: getfield      #16                 // Field _currentSegment:[C\n        108: arraylength\n        109: iload_3\n-       110: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n+       110: invokestatic  #205                // Method java/lang/Math.min:(II)I\n        113: istore        6\n        115: aload_1\n        116: iload_2\n        117: aload_0\n-       118: getfield      #4                  // Field _currentSegment:[C\n+       118: getfield      #16                 // Field _currentSegment:[C\n        121: iconst_0\n        122: iload         6\n-       124: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       124: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        127: aload_0\n        128: dup\n-       129: getfield      #5                  // Field _currentSize:I\n+       129: getfield      #20                 // Field _currentSize:I\n        132: iload         6\n        134: iadd\n-       135: putfield      #5                  // Field _currentSize:I\n+       135: putfield      #20                 // Field _currentSize:I\n        138: iload_2\n        139: iload         6\n        141: iadd\n        142: istore_2\n        143: iload_3\n        144: iload         6\n        146: isub\n@@ -2006,98 +2006,98 @@\n \n   public void append(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          12\n          7: aload_0\n          8: iload_3\n-         9: invokespecial #57                 // Method unshare:(I)V\n+         9: invokespecial #190                // Method unshare:(I)V\n         12: aload_0\n         13: aconst_null\n-        14: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        14: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         17: aload_0\n         18: aconst_null\n-        19: putfield      #11                 // Field _resultArray:[C\n+        19: putfield      #36                 // Field _resultArray:[C\n         22: aload_0\n-        23: getfield      #4                  // Field _currentSegment:[C\n+        23: getfield      #16                 // Field _currentSegment:[C\n         26: astore        4\n         28: aload         4\n         30: arraylength\n         31: aload_0\n-        32: getfield      #5                  // Field _currentSize:I\n+        32: getfield      #20                 // Field _currentSize:I\n         35: isub\n         36: istore        5\n         38: iload         5\n         40: iload_3\n         41: if_icmplt     69\n         44: aload_1\n         45: iload_2\n         46: iload_2\n         47: iload_3\n         48: iadd\n         49: aload         4\n         51: aload_0\n-        52: getfield      #5                  // Field _currentSize:I\n-        55: invokevirtual #62                 // Method java/lang/String.getChars:(II[CI)V\n+        52: getfield      #20                 // Field _currentSize:I\n+        55: invokevirtual #208                // Method java/lang/String.getChars:(II[CI)V\n         58: aload_0\n         59: dup\n-        60: getfield      #5                  // Field _currentSize:I\n+        60: getfield      #20                 // Field _currentSize:I\n         63: iload_3\n         64: iadd\n-        65: putfield      #5                  // Field _currentSize:I\n+        65: putfield      #20                 // Field _currentSize:I\n         68: return\n         69: aload_0\n         70: iload_3\n-        71: invokespecial #58                 // Method validateAppend:(I)V\n+        71: invokespecial #193                // Method validateAppend:(I)V\n         74: iload         5\n         76: ifle          104\n         79: aload_1\n         80: iload_2\n         81: iload_2\n         82: iload         5\n         84: iadd\n         85: aload         4\n         87: aload_0\n-        88: getfield      #5                  // Field _currentSize:I\n-        91: invokevirtual #62                 // Method java/lang/String.getChars:(II[CI)V\n+        88: getfield      #20                 // Field _currentSize:I\n+        91: invokevirtual #208                // Method java/lang/String.getChars:(II[CI)V\n         94: iload_3\n         95: iload         5\n         97: isub\n         98: istore_3\n         99: iload_2\n        100: iload         5\n        102: iadd\n        103: istore_2\n        104: aload_0\n-       105: invokespecial #59                 // Method expand:()V\n+       105: invokespecial #196                // Method expand:()V\n        108: aload_0\n-       109: getfield      #4                  // Field _currentSegment:[C\n+       109: getfield      #16                 // Field _currentSegment:[C\n        112: arraylength\n        113: iload_3\n-       114: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n+       114: invokestatic  #205                // Method java/lang/Math.min:(II)I\n        117: istore        6\n        119: aload_1\n        120: iload_2\n        121: iload_2\n        122: iload         6\n        124: iadd\n        125: aload_0\n-       126: getfield      #4                  // Field _currentSegment:[C\n+       126: getfield      #16                 // Field _currentSegment:[C\n        129: iconst_0\n-       130: invokevirtual #62                 // Method java/lang/String.getChars:(II[CI)V\n+       130: invokevirtual #208                // Method java/lang/String.getChars:(II[CI)V\n        133: aload_0\n        134: dup\n-       135: getfield      #5                  // Field _currentSize:I\n+       135: getfield      #20                 // Field _currentSize:I\n        138: iload         6\n        140: iadd\n-       141: putfield      #5                  // Field _currentSize:I\n+       141: putfield      #20                 // Field _currentSize:I\n        144: iload_2\n        145: iload         6\n        147: iadd\n        148: istore_2\n        149: iload_3\n        150: iload         6\n        152: isub\n@@ -2149,28 +2149,28 @@\n \n   private void validateAppend(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #18                 // Field _segmentSize:I\n+         1: getfield      #60                 // Field _segmentSize:I\n          4: aload_0\n-         5: getfield      #5                  // Field _currentSize:I\n+         5: getfield      #20                 // Field _currentSize:I\n          8: iadd\n          9: iload_1\n         10: iadd\n         11: istore_2\n         12: iload_2\n         13: ifge          19\n-        16: ldc           #64                 // int 2147483647\n+        16: ldc           #214                // int 2147483647\n         18: istore_2\n         19: aload_0\n         20: iload_2\n-        21: invokevirtual #22                 // Method validateStringLength:(I)V\n+        21: invokevirtual #76                 // Method validateStringLength:(I)V\n         24: return\n       LineNumberTable:\n         line 832: 0\n         line 834: 12\n         line 835: 16\n         line 837: 19\n         line 838: 24\n@@ -2188,40 +2188,40 @@\n \n   public char[] getCurrentSegment();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _inputStart:I\n+         1: getfield      #24                 // Field _inputStart:I\n          4: iflt          15\n          7: aload_0\n          8: iconst_1\n-         9: invokespecial #57                 // Method unshare:(I)V\n+         9: invokespecial #190                // Method unshare:(I)V\n         12: goto          49\n         15: aload_0\n-        16: getfield      #4                  // Field _currentSegment:[C\n+        16: getfield      #16                 // Field _currentSegment:[C\n         19: astore_1\n         20: aload_1\n         21: ifnonnull     36\n         24: aload_0\n         25: aload_0\n         26: iconst_0\n-        27: invokespecial #17                 // Method buf:(I)[C\n-        30: putfield      #4                  // Field _currentSegment:[C\n+        27: invokespecial #56                 // Method buf:(I)[C\n+        30: putfield      #16                 // Field _currentSegment:[C\n         33: goto          49\n         36: aload_0\n-        37: getfield      #5                  // Field _currentSize:I\n+        37: getfield      #20                 // Field _currentSize:I\n         40: aload_1\n         41: arraylength\n         42: if_icmplt     49\n         45: aload_0\n-        46: invokespecial #59                 // Method expand:()V\n+        46: invokespecial #196                // Method expand:()V\n         49: aload_0\n-        50: getfield      #4                  // Field _currentSegment:[C\n+        50: getfield      #16                 // Field _currentSegment:[C\n         53: areturn\n       LineNumberTable:\n         line 852: 0\n         line 853: 7\n         line 855: 15\n         line 856: 20\n         line 857: 24\n@@ -2243,47 +2243,47 @@\n   public char[] emptyAndGetCurrentSegment();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_m1\n-         2: putfield      #6                  // Field _inputStart:I\n+         2: putfield      #24                 // Field _inputStart:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #5                  // Field _currentSize:I\n+         7: putfield      #20                 // Field _currentSize:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #9                  // Field _inputLen:I\n+        12: putfield      #30                 // Field _inputLen:I\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #10                 // Field _inputBuffer:[C\n+        17: putfield      #33                 // Field _inputBuffer:[C\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        22: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         25: aload_0\n         26: aconst_null\n-        27: putfield      #11                 // Field _resultArray:[C\n+        27: putfield      #36                 // Field _resultArray:[C\n         30: aload_0\n-        31: getfield      #12                 // Field _hasSegments:Z\n+        31: getfield      #39                 // Field _hasSegments:Z\n         34: ifeq          41\n         37: aload_0\n-        38: invokespecial #13                 // Method clearSegments:()V\n+        38: invokespecial #43                 // Method clearSegments:()V\n         41: aload_0\n-        42: getfield      #4                  // Field _currentSegment:[C\n+        42: getfield      #16                 // Field _currentSegment:[C\n         45: astore_1\n         46: aload_1\n         47: ifnonnull     61\n         50: aload_0\n         51: aload_0\n         52: iconst_0\n-        53: invokespecial #17                 // Method buf:(I)[C\n+        53: invokespecial #56                 // Method buf:(I)[C\n         56: dup\n         57: astore_1\n-        58: putfield      #4                  // Field _currentSegment:[C\n+        58: putfield      #16                 // Field _currentSegment:[C\n         61: aload_1\n         62: areturn\n       LineNumberTable:\n         line 869: 0\n         line 870: 5\n         line 871: 10\n         line 873: 15\n@@ -2307,30 +2307,30 @@\n \n   public int getCurrentSegmentSize();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _currentSize:I\n+         1: getfield      #20                 // Field _currentSize:I\n          4: ireturn\n       LineNumberTable:\n         line 888: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/util/TextBuffer;\n \n   public void setCurrentLength(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field _currentSize:I\n+         2: putfield      #20                 // Field _currentSize:I\n          5: return\n       LineNumberTable:\n         line 889: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/fasterxml/jackson/core/util/TextBuffer;\n             0       6     1   len   I\n@@ -2338,42 +2338,42 @@\n   public java.lang.String setCurrentAndReturn(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field _currentSize:I\n+         2: putfield      #20                 // Field _currentSize:I\n          5: aload_0\n-         6: getfield      #18                 // Field _segmentSize:I\n+         6: getfield      #60                 // Field _segmentSize:I\n          9: ifle          17\n         12: aload_0\n-        13: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+        13: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n         16: areturn\n         17: aload_0\n-        18: getfield      #5                  // Field _currentSize:I\n+        18: getfield      #20                 // Field _currentSize:I\n         21: istore_2\n         22: aload_0\n         23: iload_2\n-        24: invokevirtual #22                 // Method validateStringLength:(I)V\n+        24: invokevirtual #76                 // Method validateStringLength:(I)V\n         27: iload_2\n         28: ifne          36\n-        31: ldc           #32                 // String\n+        31: ldc           #112                // String\n         33: goto          49\n-        36: new           #30                 // class java/lang/String\n+        36: new           #71                 // class java/lang/String\n         39: dup\n         40: aload_0\n-        41: getfield      #4                  // Field _currentSegment:[C\n+        41: getfield      #16                 // Field _currentSegment:[C\n         44: iconst_0\n         45: iload_2\n-        46: invokespecial #33                 // Method java/lang/String.\"<init>\":([CII)V\n+        46: invokespecial #114                // Method java/lang/String.\"<init>\":([CII)V\n         49: astore_3\n         50: aload_0\n         51: aload_3\n-        52: putfield      #16                 // Field _resultString:Ljava/lang/String;\n+        52: putfield      #52                 // Field _resultString:Ljava/lang/String;\n         55: aload_3\n         56: areturn\n       LineNumberTable:\n         line 905: 0\n         line 907: 5\n         line 908: 12\n         line 911: 17\n@@ -2399,71 +2399,71 @@\n \n   public char[] finishCurrentSegment() throws java.io.IOException;\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+         1: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n          4: ifnonnull     18\n          7: aload_0\n-         8: new           #65                 // class java/util/ArrayList\n+         8: new           #95                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #66                 // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        12: invokespecial #215                // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         18: aload_0\n         19: iconst_1\n-        20: putfield      #12                 // Field _hasSegments:Z\n+        20: putfield      #39                 // Field _hasSegments:Z\n         23: aload_0\n-        24: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        24: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         27: aload_0\n-        28: getfield      #4                  // Field _currentSegment:[C\n-        31: invokevirtual #67                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        28: getfield      #16                 // Field _currentSegment:[C\n+        31: invokevirtual #216                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         34: pop\n         35: aload_0\n-        36: getfield      #4                  // Field _currentSegment:[C\n+        36: getfield      #16                 // Field _currentSegment:[C\n         39: arraylength\n         40: istore_1\n         41: aload_0\n         42: dup\n-        43: getfield      #18                 // Field _segmentSize:I\n+        43: getfield      #60                 // Field _segmentSize:I\n         46: iload_1\n         47: iadd\n-        48: putfield      #18                 // Field _segmentSize:I\n+        48: putfield      #60                 // Field _segmentSize:I\n         51: aload_0\n         52: iconst_0\n-        53: putfield      #5                  // Field _currentSize:I\n+        53: putfield      #20                 // Field _currentSize:I\n         56: aload_0\n         57: aload_0\n-        58: getfield      #18                 // Field _segmentSize:I\n-        61: invokevirtual #22                 // Method validateStringLength:(I)V\n+        58: getfield      #60                 // Field _segmentSize:I\n+        61: invokevirtual #76                 // Method validateStringLength:(I)V\n         64: iload_1\n         65: iload_1\n         66: iconst_1\n         67: ishr\n         68: iadd\n         69: istore_2\n         70: iload_2\n         71: sipush        500\n         74: if_icmpge     84\n         77: sipush        500\n         80: istore_2\n         81: goto          93\n         84: iload_2\n-        85: ldc           #68                 // int 65536\n+        85: ldc           #220                // int 65536\n         87: if_icmple     93\n-        90: ldc           #68                 // int 65536\n+        90: ldc           #220                // int 65536\n         92: istore_2\n         93: aload_0\n         94: iload_2\n-        95: invokespecial #69                 // Method carr:(I)[C\n+        95: invokespecial #221                // Method carr:(I)[C\n         98: astore_3\n         99: aload_0\n        100: aload_3\n-       101: putfield      #4                  // Field _currentSegment:[C\n+       101: putfield      #16                 // Field _currentSegment:[C\n        104: aload_3\n        105: areturn\n       LineNumberTable:\n         line 923: 0\n         line 924: 7\n         line 926: 18\n         line 927: 23\n@@ -2504,28 +2504,28 @@\n          4: iload_1\n          5: iconst_1\n          6: isub\n          7: istore_3\n          8: iload_3\n          9: iflt          23\n         12: aload_0\n-        13: getfield      #4                  // Field _currentSegment:[C\n+        13: getfield      #16                 // Field _currentSegment:[C\n         16: iload_3\n         17: caload\n         18: bipush        32\n         20: if_icmpgt     29\n         23: aload_0\n         24: iload_3\n-        25: invokespecial #70                 // Method _doTrim:(I)Ljava/lang/String;\n+        25: invokespecial #224                // Method _doTrim:(I)Ljava/lang/String;\n         28: areturn\n         29: aload_0\n         30: iload_1\n-        31: putfield      #5                  // Field _currentSize:I\n+        31: putfield      #20                 // Field _currentSize:I\n         34: aload_0\n-        35: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+        35: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n         38: areturn\n       LineNumberTable:\n         line 955: 0\n         line 957: 4\n         line 958: 8\n         line 959: 23\n         line 962: 29\n@@ -2547,64 +2547,64 @@\n \n   private java.lang.String _doTrim(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field _currentSegment:[C\n+         1: getfield      #16                 // Field _currentSegment:[C\n          4: astore_2\n          5: iinc          1, -1\n          8: iload_1\n          9: iflt          32\n         12: aload_2\n         13: iload_1\n         14: caload\n         15: bipush        32\n         17: if_icmple     5\n         20: aload_0\n         21: iload_1\n         22: iconst_1\n         23: iadd\n-        24: putfield      #5                  // Field _currentSize:I\n+        24: putfield      #20                 // Field _currentSize:I\n         27: aload_0\n-        28: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+        28: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n         31: areturn\n         32: aload_0\n-        33: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        33: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         36: ifnull        84\n         39: aload_0\n-        40: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-        43: invokevirtual #71                 // Method java/util/ArrayList.isEmpty:()Z\n+        40: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+        43: invokevirtual #228                // Method java/util/ArrayList.isEmpty:()Z\n         46: ifeq          52\n         49: goto          84\n         52: aload_0\n         53: aload_0\n-        54: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        54: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         57: aload_0\n-        58: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-        61: invokevirtual #36                 // Method java/util/ArrayList.size:()I\n+        58: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+        61: invokevirtual #120                // Method java/util/ArrayList.size:()I\n         64: iconst_1\n         65: isub\n-        66: invokevirtual #72                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-        69: checkcast     #38                 // class \"[C\"\n-        72: putfield      #4                  // Field _currentSegment:[C\n+        66: invokevirtual #232                // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+        69: checkcast     #127                // class \"[C\"\n+        72: putfield      #16                 // Field _currentSegment:[C\n         75: aload_0\n-        76: getfield      #4                  // Field _currentSegment:[C\n+        76: getfield      #16                 // Field _currentSegment:[C\n         79: arraylength\n         80: istore_1\n         81: goto          0\n         84: aload_0\n         85: iconst_0\n-        86: putfield      #5                  // Field _currentSize:I\n+        86: putfield      #20                 // Field _currentSize:I\n         89: aload_0\n         90: iconst_0\n-        91: putfield      #12                 // Field _hasSegments:Z\n+        91: putfield      #39                 // Field _hasSegments:Z\n         94: aload_0\n-        95: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+        95: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n         98: areturn\n       LineNumberTable:\n         line 970: 0\n         line 971: 5\n         line 972: 12\n         line 973: 20\n         line 974: 27\n@@ -2635,40 +2635,40 @@\n \n   public char[] expandCurrentSegment();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _currentSegment:[C\n+         1: getfield      #16                 // Field _currentSegment:[C\n          4: astore_1\n          5: aload_1\n          6: arraylength\n          7: istore_2\n          8: iload_2\n          9: iload_2\n         10: iconst_1\n         11: ishr\n         12: iadd\n         13: istore_3\n         14: iload_3\n-        15: ldc           #68                 // int 65536\n+        15: ldc           #220                // int 65536\n         17: if_icmple     26\n         20: iload_2\n         21: iload_2\n         22: iconst_2\n         23: ishr\n         24: iadd\n         25: istore_3\n         26: aload_0\n         27: aload_1\n         28: iload_3\n-        29: invokestatic  #73                 // Method java/util/Arrays.copyOf:([CI)[C\n+        29: invokestatic  #235                // Method java/util/Arrays.copyOf:([CI)[C\n         32: dup_x1\n-        33: putfield      #4                  // Field _currentSegment:[C\n+        33: putfield      #16                 // Field _currentSegment:[C\n         36: areturn\n       LineNumberTable:\n         line 1000: 0\n         line 1002: 5\n         line 1003: 8\n         line 1005: 14\n         line 1006: 20\n@@ -2686,29 +2686,29 @@\n \n   public char[] expandCurrentSegment(int);\n     descriptor: (I)[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field _currentSegment:[C\n+         1: getfield      #16                 // Field _currentSegment:[C\n          4: astore_2\n          5: aload_2\n          6: arraylength\n          7: iload_1\n          8: if_icmplt     13\n         11: aload_2\n         12: areturn\n         13: aload_0\n         14: aload_2\n         15: iload_1\n-        16: invokestatic  #73                 // Method java/util/Arrays.copyOf:([CI)[C\n+        16: invokestatic  #235                // Method java/util/Arrays.copyOf:([CI)[C\n         19: dup\n         20: astore_2\n-        21: putfield      #4                  // Field _currentSegment:[C\n+        21: putfield      #16                 // Field _currentSegment:[C\n         24: aload_2\n         25: areturn\n       LineNumberTable:\n         line 1023: 0\n         line 1024: 5\n         line 1025: 13\n         line 1026: 24\n@@ -2724,18 +2724,18 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #42                 // Method contentsAsString:()Ljava/lang/String;\n+         1: invokevirtual #138                // Method contentsAsString:()Ljava/lang/String;\n          4: areturn\n          5: astore_1\n-         6: ldc           #74                 // String TextBuffer: Exception when reading contents\n+         6: ldc           #241                // String TextBuffer: Exception when reading contents\n          8: areturn\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/io/IOException\n       LineNumberTable:\n         line 1042: 0\n         line 1043: 5\n@@ -2750,63 +2750,63 @@\n \n   private void unshare(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field _inputLen:I\n+         1: getfield      #30                 // Field _inputLen:I\n          4: istore_2\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #9                  // Field _inputLen:I\n+         7: putfield      #30                 // Field _inputLen:I\n         10: aload_0\n-        11: getfield      #10                 // Field _inputBuffer:[C\n+        11: getfield      #33                 // Field _inputBuffer:[C\n         14: astore_3\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #10                 // Field _inputBuffer:[C\n+        17: putfield      #33                 // Field _inputBuffer:[C\n         20: aload_0\n-        21: getfield      #6                  // Field _inputStart:I\n+        21: getfield      #24                 // Field _inputStart:I\n         24: istore        4\n         26: aload_0\n         27: iconst_m1\n-        28: putfield      #6                  // Field _inputStart:I\n+        28: putfield      #24                 // Field _inputStart:I\n         31: iload_2\n         32: iload_1\n         33: iadd\n         34: istore        5\n         36: aload_0\n-        37: getfield      #4                  // Field _currentSegment:[C\n+        37: getfield      #16                 // Field _currentSegment:[C\n         40: ifnull        53\n         43: iload         5\n         45: aload_0\n-        46: getfield      #4                  // Field _currentSegment:[C\n+        46: getfield      #16                 // Field _currentSegment:[C\n         49: arraylength\n         50: if_icmple     63\n         53: aload_0\n         54: aload_0\n         55: iload         5\n-        57: invokespecial #17                 // Method buf:(I)[C\n-        60: putfield      #4                  // Field _currentSegment:[C\n+        57: invokespecial #56                 // Method buf:(I)[C\n+        60: putfield      #16                 // Field _currentSegment:[C\n         63: iload_2\n         64: ifle          79\n         67: aload_3\n         68: iload         4\n         70: aload_0\n-        71: getfield      #4                  // Field _currentSegment:[C\n+        71: getfield      #16                 // Field _currentSegment:[C\n         74: iconst_0\n         75: iload_2\n-        76: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        76: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         79: aload_0\n         80: iconst_0\n-        81: putfield      #18                 // Field _segmentSize:I\n+        81: putfield      #60                 // Field _segmentSize:I\n         84: aload_0\n         85: iload_2\n-        86: putfield      #5                  // Field _currentSize:I\n+        86: putfield      #20                 // Field _currentSize:I\n         89: return\n       LineNumberTable:\n         line 1060: 0\n         line 1061: 5\n         line 1062: 10\n         line 1063: 15\n         line 1064: 20\n@@ -2837,42 +2837,42 @@\n \n   private void expand();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+         1: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n          4: ifnonnull     18\n          7: aload_0\n-         8: new           #65                 // class java/util/ArrayList\n+         8: new           #95                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #66                 // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        12: invokespecial #215                // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         18: aload_0\n-        19: getfield      #4                  // Field _currentSegment:[C\n+        19: getfield      #16                 // Field _currentSegment:[C\n         22: astore_1\n         23: aload_0\n         24: iconst_1\n-        25: putfield      #12                 // Field _hasSegments:Z\n+        25: putfield      #39                 // Field _hasSegments:Z\n         28: aload_0\n-        29: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        29: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n         32: aload_1\n-        33: invokevirtual #67                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        33: invokevirtual #216                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         36: pop\n         37: aload_0\n         38: dup\n-        39: getfield      #18                 // Field _segmentSize:I\n+        39: getfield      #60                 // Field _segmentSize:I\n         42: aload_1\n         43: arraylength\n         44: iadd\n-        45: putfield      #18                 // Field _segmentSize:I\n+        45: putfield      #60                 // Field _segmentSize:I\n         48: aload_0\n         49: iconst_0\n-        50: putfield      #5                  // Field _currentSize:I\n+        50: putfield      #20                 // Field _currentSize:I\n         53: aload_1\n         54: arraylength\n         55: istore_2\n         56: iload_2\n         57: iload_2\n         58: iconst_1\n         59: ishr\n@@ -2881,23 +2881,23 @@\n         62: iload_3\n         63: sipush        500\n         66: if_icmpge     76\n         69: sipush        500\n         72: istore_3\n         73: goto          85\n         76: iload_3\n-        77: ldc           #68                 // int 65536\n+        77: ldc           #220                // int 65536\n         79: if_icmple     85\n-        82: ldc           #68                 // int 65536\n+        82: ldc           #220                // int 65536\n         84: istore_3\n         85: aload_0\n         86: aload_0\n         87: iload_3\n-        88: invokespecial #69                 // Method carr:(I)[C\n-        91: putfield      #4                  // Field _currentSegment:[C\n+        88: invokespecial #221                // Method carr:(I)[C\n+        91: putfield      #16                 // Field _currentSegment:[C\n         94: return\n       LineNumberTable:\n         line 1083: 0\n         line 1084: 7\n         line 1086: 18\n         line 1087: 23\n         line 1088: 28\n@@ -2926,110 +2926,110 @@\n \n   private char[] resultArray() throws java.io.IOException;\n     descriptor: ()[C\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field _resultString:Ljava/lang/String;\n+         1: getfield      #52                 // Field _resultString:Ljava/lang/String;\n          4: ifnull        15\n          7: aload_0\n-         8: getfield      #16                 // Field _resultString:Ljava/lang/String;\n-        11: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C\n+         8: getfield      #52                 // Field _resultString:Ljava/lang/String;\n+        11: invokevirtual #99                 // Method java/lang/String.toCharArray:()[C\n         14: areturn\n         15: aload_0\n-        16: getfield      #6                  // Field _inputStart:I\n+        16: getfield      #24                 // Field _inputStart:I\n         19: iflt          71\n         22: aload_0\n-        23: getfield      #9                  // Field _inputLen:I\n+        23: getfield      #30                 // Field _inputLen:I\n         26: istore_1\n         27: iload_1\n         28: iconst_1\n         29: if_icmpge     36\n-        32: getstatic     #28                 // Field NO_CHARS:[C\n+        32: getstatic     #103                // Field NO_CHARS:[C\n         35: areturn\n         36: aload_0\n         37: iload_1\n-        38: invokevirtual #22                 // Method validateStringLength:(I)V\n+        38: invokevirtual #76                 // Method validateStringLength:(I)V\n         41: aload_0\n-        42: getfield      #6                  // Field _inputStart:I\n+        42: getfield      #24                 // Field _inputStart:I\n         45: istore_2\n         46: iload_2\n         47: ifne          59\n         50: aload_0\n-        51: getfield      #10                 // Field _inputBuffer:[C\n+        51: getfield      #33                 // Field _inputBuffer:[C\n         54: iload_1\n-        55: invokestatic  #73                 // Method java/util/Arrays.copyOf:([CI)[C\n+        55: invokestatic  #235                // Method java/util/Arrays.copyOf:([CI)[C\n         58: areturn\n         59: aload_0\n-        60: getfield      #10                 // Field _inputBuffer:[C\n+        60: getfield      #33                 // Field _inputBuffer:[C\n         63: iload_2\n         64: iload_2\n         65: iload_1\n         66: iadd\n-        67: invokestatic  #75                 // Method java/util/Arrays.copyOfRange:([CII)[C\n+        67: invokestatic  #243                // Method java/util/Arrays.copyOfRange:([CII)[C\n         70: areturn\n         71: aload_0\n-        72: invokevirtual #76                 // Method size:()I\n+        72: invokevirtual #247                // Method size:()I\n         75: istore_1\n         76: iload_1\n         77: iconst_1\n         78: if_icmpge     85\n-        81: getstatic     #28                 // Field NO_CHARS:[C\n+        81: getstatic     #103                // Field NO_CHARS:[C\n         84: areturn\n         85: aload_0\n         86: iload_1\n-        87: invokevirtual #22                 // Method validateStringLength:(I)V\n+        87: invokevirtual #76                 // Method validateStringLength:(I)V\n         90: iconst_0\n         91: istore_2\n         92: aload_0\n         93: iload_1\n-        94: invokespecial #69                 // Method carr:(I)[C\n+        94: invokespecial #221                // Method carr:(I)[C\n         97: astore_3\n         98: aload_0\n-        99: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+        99: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n        102: ifnull        164\n        105: iconst_0\n        106: istore        4\n        108: aload_0\n-       109: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n-       112: invokevirtual #36                 // Method java/util/ArrayList.size:()I\n+       109: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n+       112: invokevirtual #120                // Method java/util/ArrayList.size:()I\n        115: istore        5\n        117: iload         4\n        119: iload         5\n        121: if_icmpge     164\n        124: aload_0\n-       125: getfield      #25                 // Field _segments:Ljava/util/ArrayList;\n+       125: getfield      #90                 // Field _segments:Ljava/util/ArrayList;\n        128: iload         4\n-       130: invokevirtual #37                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       133: checkcast     #38                 // class \"[C\"\n+       130: invokevirtual #123                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       133: checkcast     #127                // class \"[C\"\n        136: astore        6\n        138: aload         6\n        140: arraylength\n        141: istore        7\n        143: aload         6\n        145: iconst_0\n        146: aload_3\n        147: iload_2\n        148: iload         7\n-       150: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       150: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        153: iload_2\n        154: iload         7\n        156: iadd\n        157: istore_2\n        158: iinc          4, 1\n        161: goto          117\n        164: aload_0\n-       165: getfield      #4                  // Field _currentSegment:[C\n+       165: getfield      #16                 // Field _currentSegment:[C\n        168: iconst_0\n        169: aload_3\n        170: iload_2\n        171: aload_0\n-       172: getfield      #5                  // Field _currentSize:I\n-       175: invokestatic  #60                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       172: getfield      #20                 // Field _currentSize:I\n+       175: invokestatic  #199                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        178: aload_3\n        179: areturn\n       LineNumberTable:\n         line 1105: 0\n         line 1106: 7\n         line 1109: 15\n         line 1110: 22\n@@ -3122,13 +3122,13 @@\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n          1: newarray       char\n-         3: putstatic     #28                 // Field NO_CHARS:[C\n+         3: putstatic     #103                // Field NO_CHARS:[C\n          6: return\n       LineNumberTable:\n         line 30: 0\n }\n SourceFile: \"TextBuffer.java\"\n"}]}
