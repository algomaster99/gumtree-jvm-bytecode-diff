{"diffoscope-json-version": 1, "source1": "first/CountingOutputStream.class", "source2": "second/CountingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,83 +1,83 @@\n-  SHA-256 checksum 4d9820bdc9838a2ad3cf003bb8ff623b7f296e955d71a7b013638efba8e82407\n+  SHA-256 checksum f8e6226abac2188896ec12f5835a4c6a441549efddd77648d802ef23a43c3f40\n   Compiled from \"CountingOutputStream.java\"\n public class org.apache.commons.io.output.CountingOutputStream extends org.apache.commons.io.output.ProxyOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/io/output/CountingOutputStream\n-  super_class: #18                        // org/apache/commons/io/output/ProxyOutputStream\n+  this_class: #8                          // org/apache/commons/io/output/CountingOutputStream\n+  super_class: #2                         // org/apache/commons/io/output/ProxyOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #18.#45        // org/apache/commons/io/output/ProxyOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #17.#46        // org/apache/commons/io/output/CountingOutputStream.count:J\n-   #3 = Methodref          #17.#47        // org/apache/commons/io/output/CountingOutputStream.getByteCount:()J\n-   #4 = Class              #48            // java/lang/Integer\n-   #5 = Long               2147483647l\n-   #7 = Class              #49            // java/lang/ArithmeticException\n-   #8 = Class              #50            // java/lang/StringBuilder\n-   #9 = Methodref          #8.#51         // java/lang/StringBuilder.\"<init>\":()V\n-  #10 = String             #52            // The byte count\n-  #11 = Methodref          #8.#53         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #12 = Methodref          #8.#54         // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-  #13 = String             #55            //  is too large to be converted to an int\n-  #14 = Methodref          #8.#56         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #15 = Methodref          #7.#57         // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Methodref          #17.#58        // org/apache/commons/io/output/CountingOutputStream.resetByteCount:()J\n-  #17 = Class              #59            // org/apache/commons/io/output/CountingOutputStream\n-  #18 = Class              #60            // org/apache/commons/io/output/ProxyOutputStream\n-  #19 = Utf8               count\n-  #20 = Utf8               J\n-  #21 = Utf8               <init>\n-  #22 = Utf8               (Ljava/io/OutputStream;)V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               LocalVariableTable\n-  #26 = Utf8               this\n-  #27 = Utf8               Lorg/apache/commons/io/output/CountingOutputStream;\n-  #28 = Utf8               out\n-  #29 = Utf8               Ljava/io/OutputStream;\n-  #30 = Utf8               beforeWrite\n-  #31 = Utf8               (I)V\n-  #32 = Utf8               n\n-  #33 = Utf8               I\n-  #34 = Utf8               getCount\n-  #35 = Utf8               ()I\n-  #36 = Utf8               result\n-  #37 = Utf8               StackMapTable\n-  #38 = Utf8               resetCount\n-  #39 = Utf8               getByteCount\n-  #40 = Utf8               ()J\n-  #41 = Utf8               resetByteCount\n-  #42 = Utf8               tmp\n-  #43 = Utf8               SourceFile\n-  #44 = Utf8               CountingOutputStream.java\n-  #45 = NameAndType        #21:#22        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #46 = NameAndType        #19:#20        // count:J\n-  #47 = NameAndType        #39:#40        // getByteCount:()J\n-  #48 = Utf8               java/lang/Integer\n-  #49 = Utf8               java/lang/ArithmeticException\n-  #50 = Utf8               java/lang/StringBuilder\n-  #51 = NameAndType        #21:#61        // \"<init>\":()V\n-  #52 = Utf8               The byte count\n-  #53 = NameAndType        #62:#63        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #54 = NameAndType        #62:#64        // append:(J)Ljava/lang/StringBuilder;\n-  #55 = Utf8                is too large to be converted to an int\n-  #56 = NameAndType        #65:#66        // toString:()Ljava/lang/String;\n-  #57 = NameAndType        #21:#67        // \"<init>\":(Ljava/lang/String;)V\n-  #58 = NameAndType        #41:#40        // resetByteCount:()J\n-  #59 = Utf8               org/apache/commons/io/output/CountingOutputStream\n-  #60 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n-  #61 = Utf8               ()V\n-  #62 = Utf8               append\n-  #63 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #64 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #65 = Utf8               toString\n-  #66 = Utf8               ()Ljava/lang/String;\n-  #67 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/output/ProxyOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Class              #4             // org/apache/commons/io/output/ProxyOutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #4 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/io/output/CountingOutputStream.count:J\n+   #8 = Class              #10            // org/apache/commons/io/output/CountingOutputStream\n+   #9 = NameAndType        #11:#12        // count:J\n+  #10 = Utf8               org/apache/commons/io/output/CountingOutputStream\n+  #11 = Utf8               count\n+  #12 = Utf8               J\n+  #13 = Methodref          #8.#14         // org/apache/commons/io/output/CountingOutputStream.getByteCount:()J\n+  #14 = NameAndType        #15:#16        // getByteCount:()J\n+  #15 = Utf8               getByteCount\n+  #16 = Utf8               ()J\n+  #17 = Class              #18            // java/lang/Integer\n+  #18 = Utf8               java/lang/Integer\n+  #19 = Long               2147483647l\n+  #21 = Class              #22            // java/lang/ArithmeticException\n+  #22 = Utf8               java/lang/ArithmeticException\n+  #23 = Class              #24            // java/lang/StringBuilder\n+  #24 = Utf8               java/lang/StringBuilder\n+  #25 = Methodref          #23.#26        // java/lang/StringBuilder.\"<init>\":()V\n+  #26 = NameAndType        #5:#27         // \"<init>\":()V\n+  #27 = Utf8               ()V\n+  #28 = String             #29            // The byte count\n+  #29 = Utf8               The byte count\n+  #30 = Methodref          #23.#31        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #31 = NameAndType        #32:#33        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #32 = Utf8               append\n+  #33 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #34 = Methodref          #23.#35        // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #35 = NameAndType        #32:#36        // append:(J)Ljava/lang/StringBuilder;\n+  #36 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #37 = String             #38            //  is too large to be converted to an int\n+  #38 = Utf8                is too large to be converted to an int\n+  #39 = Methodref          #23.#40        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #40 = NameAndType        #41:#42        // toString:()Ljava/lang/String;\n+  #41 = Utf8               toString\n+  #42 = Utf8               ()Ljava/lang/String;\n+  #43 = Methodref          #21.#44        // java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+  #44 = NameAndType        #5:#45         // \"<init>\":(Ljava/lang/String;)V\n+  #45 = Utf8               (Ljava/lang/String;)V\n+  #46 = Methodref          #8.#47         // org/apache/commons/io/output/CountingOutputStream.resetByteCount:()J\n+  #47 = NameAndType        #48:#16        // resetByteCount:()J\n+  #48 = Utf8               resetByteCount\n+  #49 = Utf8               Code\n+  #50 = Utf8               LineNumberTable\n+  #51 = Utf8               LocalVariableTable\n+  #52 = Utf8               this\n+  #53 = Utf8               Lorg/apache/commons/io/output/CountingOutputStream;\n+  #54 = Utf8               out\n+  #55 = Utf8               Ljava/io/OutputStream;\n+  #56 = Utf8               beforeWrite\n+  #57 = Utf8               (I)V\n+  #58 = Utf8               n\n+  #59 = Utf8               I\n+  #60 = Utf8               getCount\n+  #61 = Utf8               ()I\n+  #62 = Utf8               result\n+  #63 = Utf8               StackMapTable\n+  #64 = Utf8               resetCount\n+  #65 = Utf8               tmp\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               CountingOutputStream.java\n {\n   private long count;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.io.output.CountingOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n@@ -99,19 +99,19 @@\n   protected synchronized void beforeWrite(int);\n     descriptor: (I)V\n     flags: (0x0024) ACC_PROTECTED, ACC_SYNCHRONIZED\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field count:J\n+         2: getfield      #7                  // Field count:J\n          5: iload_1\n          6: i2l\n          7: ladd\n-         8: putfield      #2                  // Field count:J\n+         8: putfield      #7                  // Field count:J\n         11: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/output/CountingOutputStream;\n@@ -119,33 +119,33 @@\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getByteCount:()J\n+         1: invokevirtual #13                 // Method getByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #5                  // long 2147483647l\n+         6: ldc2_w        #19                 // long 2147483647l\n          9: lcmp\n         10: ifle          45\n-        13: new           #7                  // class java/lang/ArithmeticException\n+        13: new           #21                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #8                  // class java/lang/StringBuilder\n+        17: new           #23                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #10                 // String The byte count\n-        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        24: ldc           #28                 // String The byte count\n+        26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         29: lload_1\n-        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #13                 // String  is too large to be converted to an int\n-        35: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #15                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        30: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        33: ldc           #37                 // String  is too large to be converted to an int\n+        35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        41: invokespecial #43                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         44: athrow\n         45: lload_1\n         46: l2i\n         47: ireturn\n       LineNumberTable:\n         line 69: 0\n         line 70: 5\n@@ -162,33 +162,33 @@\n \n   public int resetCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #16                 // Method resetByteCount:()J\n+         1: invokevirtual #46                 // Method resetByteCount:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #5                  // long 2147483647l\n+         6: ldc2_w        #19                 // long 2147483647l\n          9: lcmp\n         10: ifle          45\n-        13: new           #7                  // class java/lang/ArithmeticException\n+        13: new           #21                 // class java/lang/ArithmeticException\n         16: dup\n-        17: new           #8                  // class java/lang/StringBuilder\n+        17: new           #23                 // class java/lang/StringBuilder\n         20: dup\n-        21: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        24: ldc           #10                 // String The byte count\n-        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        24: ldc           #28                 // String The byte count\n+        26: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         29: lload_1\n-        30: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        33: ldc           #13                 // String  is too large to be converted to an int\n-        35: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        41: invokespecial #15                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n+        30: invokevirtual #34                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        33: ldc           #37                 // String  is too large to be converted to an int\n+        35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        41: invokespecial #43                 // Method java/lang/ArithmeticException.\"<init>\":(Ljava/lang/String;)V\n         44: athrow\n         45: lload_1\n         46: l2i\n         47: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 5\n@@ -205,33 +205,33 @@\n \n   public synchronized long getByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field count:J\n+         1: getfield      #7                  // Field count:J\n          4: lreturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/CountingOutputStream;\n \n   public synchronized long resetByteCount();\n     descriptor: ()J\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field count:J\n+         1: getfield      #7                  // Field count:J\n          4: lstore_1\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #2                  // Field count:J\n+         7: putfield      #7                  // Field count:J\n         10: lload_1\n         11: lreturn\n       LineNumberTable:\n         line 119: 0\n         line 120: 5\n         line 121: 10\n       LocalVariableTable:\n"}]}
