{"diffoscope-json-version": 1, "source1": "first/MutableFloat.class", "source2": "second/MutableFloat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,131 +1,131 @@\n-  SHA-256 checksum c2b928c39a420f2a73d788386cb333df34ed49a02c2cb8310d5808a2e44db324\n+  SHA-256 checksum 9b2f76a80a3090dbcbc9684c5943a4e5b93738355490eb4b84ab96d24c561c92\n   Compiled from \"MutableFloat.java\"\n public class org.apache.commons.lang3.mutable.MutableFloat extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableFloat>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/lang3/mutable/MutableFloat\n-  super_class: #2                         // java/lang/Number\n+  this_class: #1                          // org/apache/commons/lang3/mutable/MutableFloat\n+  super_class: #3                         // java/lang/Number\n   interfaces: 2, fields: 2, methods: 35, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Number.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Number\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/lang3/mutable/MutableFloat\n+    #2 = Utf8               org/apache/commons/lang3/mutable/MutableFloat\n+    #3 = Class              #4            // java/lang/Number\n     #4 = Utf8               java/lang/Number\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/mutable/MutableFloat.value:F\n-    #8 = Class              #10           // org/apache/commons/lang3/mutable/MutableFloat\n-    #9 = NameAndType        #11:#12       // value:F\n-   #10 = Utf8               org/apache/commons/lang3/mutable/MutableFloat\n-   #11 = Utf8               value\n-   #12 = Utf8               F\n-   #13 = Methodref          #2.#14        // java/lang/Number.floatValue:()F\n-   #14 = NameAndType        #15:#16       // floatValue:()F\n-   #15 = Utf8               floatValue\n-   #16 = Utf8               ()F\n-   #17 = Methodref          #18.#19       // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-   #18 = Class              #20           // java/lang/Float\n-   #19 = NameAndType        #21:#22       // parseFloat:(Ljava/lang/String;)F\n-   #20 = Utf8               java/lang/Float\n-   #21 = Utf8               parseFloat\n-   #22 = Utf8               (Ljava/lang/String;)F\n-   #23 = Methodref          #18.#24       // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-   #24 = NameAndType        #25:#26       // valueOf:(F)Ljava/lang/Float;\n-   #25 = Utf8               valueOf\n-   #26 = Utf8               (F)Ljava/lang/Float;\n-   #27 = Methodref          #18.#28       // java/lang/Float.isNaN:(F)Z\n-   #28 = NameAndType        #29:#30       // isNaN:(F)Z\n-   #29 = Utf8               isNaN\n-   #30 = Utf8               (F)Z\n-   #31 = Methodref          #18.#32       // java/lang/Float.isInfinite:(F)Z\n-   #32 = NameAndType        #33:#30       // isInfinite:(F)Z\n-   #33 = Utf8               isInfinite\n-   #34 = Methodref          #8.#14        // org/apache/commons/lang3/mutable/MutableFloat.floatValue:()F\n-   #35 = Methodref          #18.#36       // java/lang/Float.floatToIntBits:(F)I\n-   #36 = NameAndType        #37:#38       // floatToIntBits:(F)I\n-   #37 = Utf8               floatToIntBits\n-   #38 = Utf8               (F)I\n-   #39 = Methodref          #18.#40       // java/lang/Float.compare:(FF)I\n-   #40 = NameAndType        #41:#42       // compare:(FF)I\n-   #41 = Utf8               compare\n-   #42 = Utf8               (FF)I\n-   #43 = Methodref          #44.#45       // java/lang/String.valueOf:(F)Ljava/lang/String;\n-   #44 = Class              #46           // java/lang/String\n-   #45 = NameAndType        #25:#47       // valueOf:(F)Ljava/lang/String;\n-   #46 = Utf8               java/lang/String\n-   #47 = Utf8               (F)Ljava/lang/String;\n-   #48 = Methodref          #8.#49        // org/apache/commons/lang3/mutable/MutableFloat.compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n-   #49 = NameAndType        #50:#51       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n-   #50 = Utf8               compareTo\n-   #51 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n-   #52 = Methodref          #8.#53        // org/apache/commons/lang3/mutable/MutableFloat.setValue:(Ljava/lang/Number;)V\n-   #53 = NameAndType        #54:#55       // setValue:(Ljava/lang/Number;)V\n-   #54 = Utf8               setValue\n-   #55 = Utf8               (Ljava/lang/Number;)V\n-   #56 = Methodref          #8.#57        // org/apache/commons/lang3/mutable/MutableFloat.getValue:()Ljava/lang/Float;\n-   #57 = NameAndType        #58:#59       // getValue:()Ljava/lang/Float;\n-   #58 = Utf8               getValue\n-   #59 = Utf8               ()Ljava/lang/Float;\n-   #60 = Class              #61           // java/lang/Comparable\n-   #61 = Utf8               java/lang/Comparable\n-   #62 = Class              #63           // org/apache/commons/lang3/mutable/Mutable\n-   #63 = Utf8               org/apache/commons/lang3/mutable/Mutable\n-   #64 = Utf8               serialVersionUID\n-   #65 = Utf8               J\n-   #66 = Utf8               ConstantValue\n-   #67 = Long               5787169186l\n-   #69 = Utf8               Code\n-   #70 = Utf8               LineNumberTable\n-   #71 = Utf8               LocalVariableTable\n-   #72 = Utf8               this\n-   #73 = Utf8               Lorg/apache/commons/lang3/mutable/MutableFloat;\n-   #74 = Utf8               (F)V\n-   #75 = Utf8               Ljava/lang/Number;\n-   #76 = Utf8               (Ljava/lang/String;)V\n-   #77 = Utf8               Ljava/lang/String;\n-   #78 = Utf8               ()Z\n-   #79 = Utf8               increment\n-   #80 = Utf8               getAndIncrement\n-   #81 = Utf8               last\n-   #82 = Utf8               incrementAndGet\n-   #83 = Utf8               decrement\n-   #84 = Utf8               getAndDecrement\n-   #85 = Utf8               decrementAndGet\n-   #86 = Utf8               add\n-   #87 = Utf8               operand\n-   #88 = Utf8               subtract\n-   #89 = Utf8               addAndGet\n-   #90 = Utf8               (F)F\n-   #91 = Utf8               (Ljava/lang/Number;)F\n-   #92 = Utf8               getAndAdd\n-   #93 = Utf8               intValue\n-   #94 = Utf8               ()I\n-   #95 = Utf8               longValue\n-   #96 = Utf8               ()J\n-   #97 = Utf8               doubleValue\n-   #98 = Utf8               ()D\n-   #99 = Utf8               toFloat\n-  #100 = Utf8               equals\n-  #101 = Utf8               (Ljava/lang/Object;)Z\n-  #102 = Utf8               obj\n-  #103 = Utf8               Ljava/lang/Object;\n-  #104 = Utf8               StackMapTable\n-  #105 = Utf8               hashCode\n-  #106 = Utf8               other\n-  #107 = Utf8               toString\n-  #108 = Utf8               ()Ljava/lang/String;\n-  #109 = Utf8               (Ljava/lang/Object;)I\n-  #110 = Utf8               (Ljava/lang/Object;)V\n-  #111 = Utf8               ()Ljava/lang/Object;\n-  #112 = Utf8               Signature\n-  #113 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableFloat;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               MutableFloat.java\n+    #5 = Class              #6            // java/lang/Comparable\n+    #6 = Utf8               java/lang/Comparable\n+    #7 = Class              #8            // org/apache/commons/lang3/mutable/Mutable\n+    #8 = Utf8               org/apache/commons/lang3/mutable/Mutable\n+    #9 = Utf8               serialVersionUID\n+   #10 = Utf8               J\n+   #11 = Utf8               ConstantValue\n+   #12 = Long               5787169186l\n+   #14 = Utf8               value\n+   #15 = Utf8               F\n+   #16 = Utf8               <init>\n+   #17 = Utf8               ()V\n+   #18 = Utf8               Code\n+   #19 = Methodref          #3.#20        // java/lang/Number.\"<init>\":()V\n+   #20 = NameAndType        #16:#17       // \"<init>\":()V\n+   #21 = Utf8               LineNumberTable\n+   #22 = Utf8               LocalVariableTable\n+   #23 = Utf8               this\n+   #24 = Utf8               Lorg/apache/commons/lang3/mutable/MutableFloat;\n+   #25 = Utf8               (F)V\n+   #26 = Fieldref           #1.#27        // org/apache/commons/lang3/mutable/MutableFloat.value:F\n+   #27 = NameAndType        #14:#15       // value:F\n+   #28 = Utf8               (Ljava/lang/Number;)V\n+   #29 = Methodref          #3.#30        // java/lang/Number.floatValue:()F\n+   #30 = NameAndType        #31:#32       // floatValue:()F\n+   #31 = Utf8               floatValue\n+   #32 = Utf8               ()F\n+   #33 = Utf8               Ljava/lang/Number;\n+   #34 = Utf8               (Ljava/lang/String;)V\n+   #35 = Methodref          #36.#38       // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+   #36 = Class              #37           // java/lang/Float\n+   #37 = Utf8               java/lang/Float\n+   #38 = NameAndType        #39:#40       // parseFloat:(Ljava/lang/String;)F\n+   #39 = Utf8               parseFloat\n+   #40 = Utf8               (Ljava/lang/String;)F\n+   #41 = Utf8               Ljava/lang/String;\n+   #42 = Utf8               getValue\n+   #43 = Utf8               ()Ljava/lang/Float;\n+   #44 = Methodref          #36.#45       // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+   #45 = NameAndType        #46:#47       // valueOf:(F)Ljava/lang/Float;\n+   #46 = Utf8               valueOf\n+   #47 = Utf8               (F)Ljava/lang/Float;\n+   #48 = Utf8               setValue\n+   #49 = Utf8               isNaN\n+   #50 = Utf8               ()Z\n+   #51 = Methodref          #36.#52       // java/lang/Float.isNaN:(F)Z\n+   #52 = NameAndType        #49:#53       // isNaN:(F)Z\n+   #53 = Utf8               (F)Z\n+   #54 = Utf8               isInfinite\n+   #55 = Methodref          #36.#56       // java/lang/Float.isInfinite:(F)Z\n+   #56 = NameAndType        #54:#53       // isInfinite:(F)Z\n+   #57 = Utf8               increment\n+   #58 = Utf8               getAndIncrement\n+   #59 = Utf8               last\n+   #60 = Utf8               incrementAndGet\n+   #61 = Utf8               decrement\n+   #62 = Utf8               getAndDecrement\n+   #63 = Utf8               decrementAndGet\n+   #64 = Utf8               add\n+   #65 = Utf8               operand\n+   #66 = Utf8               subtract\n+   #67 = Utf8               addAndGet\n+   #68 = Utf8               (F)F\n+   #69 = Utf8               (Ljava/lang/Number;)F\n+   #70 = Utf8               getAndAdd\n+   #71 = Utf8               intValue\n+   #72 = Utf8               ()I\n+   #73 = Utf8               longValue\n+   #74 = Utf8               ()J\n+   #75 = Utf8               doubleValue\n+   #76 = Utf8               ()D\n+   #77 = Utf8               toFloat\n+   #78 = Methodref          #1.#30        // org/apache/commons/lang3/mutable/MutableFloat.floatValue:()F\n+   #79 = Utf8               equals\n+   #80 = Utf8               (Ljava/lang/Object;)Z\n+   #81 = Methodref          #36.#82       // java/lang/Float.floatToIntBits:(F)I\n+   #82 = NameAndType        #83:#84       // floatToIntBits:(F)I\n+   #83 = Utf8               floatToIntBits\n+   #84 = Utf8               (F)I\n+   #85 = Utf8               obj\n+   #86 = Utf8               Ljava/lang/Object;\n+   #87 = Utf8               StackMapTable\n+   #88 = Utf8               hashCode\n+   #89 = Utf8               compareTo\n+   #90 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n+   #91 = Methodref          #36.#92       // java/lang/Float.compare:(FF)I\n+   #92 = NameAndType        #93:#94       // compare:(FF)I\n+   #93 = Utf8               compare\n+   #94 = Utf8               (FF)I\n+   #95 = Utf8               other\n+   #96 = Utf8               toString\n+   #97 = Utf8               ()Ljava/lang/String;\n+   #98 = Methodref          #99.#101      // java/lang/String.valueOf:(F)Ljava/lang/String;\n+   #99 = Class              #100          // java/lang/String\n+  #100 = Utf8               java/lang/String\n+  #101 = NameAndType        #46:#102      // valueOf:(F)Ljava/lang/String;\n+  #102 = Utf8               (F)Ljava/lang/String;\n+  #103 = Utf8               (Ljava/lang/Object;)I\n+  #104 = Methodref          #1.#105       // org/apache/commons/lang3/mutable/MutableFloat.compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n+  #105 = NameAndType        #89:#90       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n+  #106 = Utf8               (Ljava/lang/Object;)V\n+  #107 = Methodref          #1.#108       // org/apache/commons/lang3/mutable/MutableFloat.setValue:(Ljava/lang/Number;)V\n+  #108 = NameAndType        #48:#28       // setValue:(Ljava/lang/Number;)V\n+  #109 = Utf8               ()Ljava/lang/Object;\n+  #110 = Methodref          #1.#111       // org/apache/commons/lang3/mutable/MutableFloat.getValue:()Ljava/lang/Float;\n+  #111 = NameAndType        #42:#43       // getValue:()Ljava/lang/Float;\n+  #112 = Utf8               SourceFile\n+  #113 = Utf8               MutableFloat.java\n+  #114 = Utf8               Signature\n+  #115 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableFloat;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n {\n   private static final long serialVersionUID = 5787169186l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 5787169186l\n \n   private float value;\n@@ -134,33 +134,33 @@\n \n   public org.apache.commons.lang3.mutable.MutableFloat();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public org.apache.commons.lang3.mutable.MutableFloat(float);\n     descriptor: (F)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: fload_1\n-         6: putfield      #7                  // Field value:F\n+         6: putfield      #26                 // Field value:F\n          9: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 4\n         line 54: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -169,19 +169,19 @@\n \n   public org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n-         9: putfield      #7                  // Field value:F\n+         6: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n+         9: putfield      #26                 // Field value:F\n         12: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 4\n         line 65: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -190,19 +190,19 @@\n \n   public org.apache.commons.lang3.mutable.MutableFloat(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #17                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-         9: putfield      #7                  // Field value:F\n+         6: invokestatic  #35                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+         9: putfield      #26                 // Field value:F\n         12: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 4\n         line 77: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -211,31 +211,31 @@\n \n   public java.lang.Float getValue();\n     descriptor: ()Ljava/lang/Float;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n-         4: invokestatic  #23                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+         1: getfield      #26                 // Field value:F\n+         4: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n          7: areturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public void setValue(float);\n     descriptor: (F)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: fload_1\n-         2: putfield      #7                  // Field value:F\n+         2: putfield      #26                 // Field value:F\n          5: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -244,16 +244,16 @@\n   public void setValue(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n-         5: putfield      #7                  // Field value:F\n+         2: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n+         5: putfield      #26                 // Field value:F\n          8: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -261,71 +261,71 @@\n \n   public boolean isNaN();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n-         4: invokestatic  #27                 // Method java/lang/Float.isNaN:(F)Z\n+         1: getfield      #26                 // Field value:F\n+         4: invokestatic  #51                 // Method java/lang/Float.isNaN:(F)Z\n          7: ireturn\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public boolean isInfinite();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n-         4: invokestatic  #31                 // Method java/lang/Float.isInfinite:(F)Z\n+         1: getfield      #26                 // Field value:F\n+         4: invokestatic  #55                 // Method java/lang/Float.isInfinite:(F)Z\n          7: ireturn\n       LineNumberTable:\n         line 126: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fconst_1\n          6: fadd\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: return\n       LineNumberTable:\n         line 136: 0\n         line 137: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public float getAndIncrement();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: fstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:F\n+         7: getfield      #26                 // Field value:F\n         10: fconst_1\n         11: fadd\n-        12: putfield      #7                  // Field value:F\n+        12: putfield      #26                 // Field value:F\n         15: fload_1\n         16: freturn\n       LineNumberTable:\n         line 147: 0\n         line 148: 5\n         line 149: 15\n       LocalVariableTable:\n@@ -336,20 +336,20 @@\n   public float incrementAndGet();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fconst_1\n          6: fadd\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: aload_0\n-        11: getfield      #7                  // Field value:F\n+        11: getfield      #26                 // Field value:F\n         14: freturn\n       LineNumberTable:\n         line 160: 0\n         line 161: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -357,40 +357,40 @@\n   public void decrement();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fconst_1\n          6: fsub\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: return\n       LineNumberTable:\n         line 170: 0\n         line 171: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public float getAndDecrement();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: fstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:F\n+         7: getfield      #26                 // Field value:F\n         10: fconst_1\n         11: fsub\n-        12: putfield      #7                  // Field value:F\n+        12: putfield      #26                 // Field value:F\n         15: fload_1\n         16: freturn\n       LineNumberTable:\n         line 181: 0\n         line 182: 5\n         line 183: 15\n       LocalVariableTable:\n@@ -401,20 +401,20 @@\n   public float decrementAndGet();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fconst_1\n          6: fsub\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: aload_0\n-        11: getfield      #7                  // Field value:F\n+        11: getfield      #26                 // Field value:F\n         14: freturn\n       LineNumberTable:\n         line 194: 0\n         line 195: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -422,18 +422,18 @@\n   public void add(float);\n     descriptor: (F)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fload_1\n          6: fadd\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -442,19 +442,19 @@\n   public void add(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n+         6: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n          9: fadd\n-        10: putfield      #7                  // Field value:F\n+        10: putfield      #26                 // Field value:F\n         13: return\n       LineNumberTable:\n         line 217: 0\n         line 218: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -463,18 +463,18 @@\n   public void subtract(float);\n     descriptor: (F)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fload_1\n          6: fsub\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: return\n       LineNumberTable:\n         line 227: 0\n         line 228: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -483,19 +483,19 @@\n   public void subtract(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n+         6: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n          9: fsub\n-        10: putfield      #7                  // Field value:F\n+        10: putfield      #26                 // Field value:F\n         13: return\n       LineNumberTable:\n         line 238: 0\n         line 239: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -504,20 +504,20 @@\n   public float addAndGet(float);\n     descriptor: (F)F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: fload_1\n          6: fadd\n-         7: putfield      #7                  // Field value:F\n+         7: putfield      #26                 // Field value:F\n         10: aload_0\n-        11: getfield      #7                  // Field value:F\n+        11: getfield      #26                 // Field value:F\n         14: freturn\n       LineNumberTable:\n         line 250: 0\n         line 251: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -526,21 +526,21 @@\n   public float addAndGet(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:F\n+         2: getfield      #26                 // Field value:F\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n+         6: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n          9: fadd\n-        10: putfield      #7                  // Field value:F\n+        10: putfield      #26                 // Field value:F\n         13: aload_0\n-        14: getfield      #7                  // Field value:F\n+        14: getfield      #26                 // Field value:F\n         17: freturn\n       LineNumberTable:\n         line 264: 0\n         line 265: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n@@ -548,22 +548,22 @@\n \n   public float getAndAdd(float);\n     descriptor: (F)F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: fstore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:F\n+         7: getfield      #26                 // Field value:F\n         10: fload_1\n         11: fadd\n-        12: putfield      #7                  // Field value:F\n+        12: putfield      #26                 // Field value:F\n         15: fload_2\n         16: freturn\n       LineNumberTable:\n         line 277: 0\n         line 278: 5\n         line 279: 15\n       LocalVariableTable:\n@@ -574,23 +574,23 @@\n \n   public float getAndAdd(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: fstore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:F\n+         7: getfield      #26                 // Field value:F\n         10: aload_1\n-        11: invokevirtual #13                 // Method java/lang/Number.floatValue:()F\n+        11: invokevirtual #29                 // Method java/lang/Number.floatValue:()F\n         14: fadd\n-        15: putfield      #7                  // Field value:F\n+        15: putfield      #26                 // Field value:F\n         18: fload_2\n         19: freturn\n       LineNumberTable:\n         line 292: 0\n         line 293: 5\n         line 294: 18\n       LocalVariableTable:\n@@ -601,204 +601,199 @@\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: f2i\n          5: ireturn\n       LineNumberTable:\n         line 306: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: f2l\n          5: lreturn\n       LineNumberTable:\n         line 316: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: freturn\n       LineNumberTable:\n         line 326: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: f2d\n          5: dreturn\n       LineNumberTable:\n         line 336: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public java.lang.Float toFloat();\n     descriptor: ()Ljava/lang/Float;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #34                 // Method floatValue:()F\n-         4: invokestatic  #23                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+         1: invokevirtual #78                 // Method floatValue:()F\n+         4: invokestatic  #44                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n          7: areturn\n       LineNumberTable:\n         line 346: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #8                  // class org/apache/commons/lang3/mutable/MutableFloat\n-         4: ifeq          31\n+         1: instanceof    #1                  // class org/apache/commons/lang3/mutable/MutableFloat\n+         4: ifeq          29\n          7: aload_1\n-         8: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableFloat\n-        11: getfield      #7                  // Field value:F\n-        14: invokestatic  #35                 // Method java/lang/Float.floatToIntBits:(F)I\n+         8: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableFloat\n+        11: getfield      #26                 // Field value:F\n+        14: invokestatic  #81                 // Method java/lang/Float.floatToIntBits:(F)I\n         17: aload_0\n-        18: getfield      #7                  // Field value:F\n-        21: invokestatic  #35                 // Method java/lang/Float.floatToIntBits:(F)I\n-        24: if_icmpne     31\n+        18: getfield      #26                 // Field value:F\n+        21: invokestatic  #81                 // Method java/lang/Float.floatToIntBits:(F)I\n+        24: if_icmpne     29\n         27: iconst_1\n-        28: goto          32\n-        31: iconst_0\n-        32: ireturn\n+        28: ireturn\n+        29: iconst_0\n+        30: ireturn\n       LineNumberTable:\n         line 383: 0\n-        line 384: 14\n-        line 383: 32\n+        line 384: 7\n+        line 383: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      33     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n-            0      33     1   obj   Ljava/lang/Object;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 31 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      31     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n+            0      31     1   obj   Ljava/lang/Object;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 29 /* same */\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n-         4: invokestatic  #35                 // Method java/lang/Float.floatToIntBits:(F)I\n+         1: getfield      #26                 // Field value:F\n+         4: invokestatic  #81                 // Method java/lang/Float.floatToIntBits:(F)I\n          7: ireturn\n       LineNumberTable:\n         line 394: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public int compareTo(org.apache.commons.lang3.mutable.MutableFloat);\n     descriptor: (Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n+         1: getfield      #26                 // Field value:F\n          4: aload_1\n-         5: getfield      #7                  // Field value:F\n-         8: invokestatic  #39                 // Method java/lang/Float.compare:(FF)I\n+         5: getfield      #26                 // Field value:F\n+         8: invokestatic  #91                 // Method java/lang/Float.compare:(FF)I\n         11: ireturn\n       LineNumberTable:\n         line 406: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n             0      12     1 other   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:F\n-         4: invokestatic  #43                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;\n+         1: getfield      #26                 // Field value:F\n+         4: invokestatic  #98                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 417: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableFloat\n-         5: invokevirtual #48                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n+         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableFloat\n+         5: invokevirtual #104                // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I\n          8: ireturn\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #2                  // class java/lang/Number\n-         5: invokevirtual #52                 // Method setValue:(Ljava/lang/Number;)V\n+         2: checkcast     #3                  // class java/lang/Number\n+         5: invokevirtual #107                // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n \n   public java.lang.Object getValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #56                 // Method getValue:()Ljava/lang/Float;\n+         1: invokevirtual #110                // Method getValue:()Ljava/lang/Float;\n          4: areturn\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableFloat;\n }\n-Signature: #113                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableFloat;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n SourceFile: \"MutableFloat.java\"\n+Signature: #115                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableFloat;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n"}]}
