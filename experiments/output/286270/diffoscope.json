{"diffoscope-json-version": 1, "source1": "first/AsiExtraField.class", "source2": "second/AsiExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,75 +1,75 @@\n-  SHA-256 checksum c155ccdf834599acf96333ae6cd8a7ffba7c440ef1c1ea6fd2cb0b1b1310b0d2\n+  SHA-256 checksum 5527f0ddd3138dbfe0dfa21b5ffdd25b96de8ba086eb45874c14d0aae13ff779\n   Compiled from \"AsiExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.AsiExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField,org.apache.commons.compress.archivers.zip.UnixStat,java.lang.Cloneable\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #13                         // org/apache/commons/compress/archivers/zip/AsiExtraField\n   super_class: #56                        // java/lang/Object\n   interfaces: 3, fields: 8, methods: 22, attributes: 1\n Constant pool:\n-    #1 = Methodref          #56.#116      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #13.#117      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n-    #3 = Fieldref           #13.#118      // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n-    #4 = Fieldref           #13.#119      // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n-    #5 = String             #120          //\n-    #6 = Fieldref           #13.#121      // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n-    #7 = Fieldref           #13.#122      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n-    #8 = Class              #123          // java/util/zip/CRC32\n-    #9 = Methodref          #8.#116       // java/util/zip/CRC32.\"<init>\":()V\n-   #10 = Fieldref           #13.#124      // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n-   #11 = Fieldref           #13.#125      // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #12 = Class              #126          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #13 = Class              #127          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-   #14 = Methodref          #13.#128      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n-   #15 = Methodref          #43.#129      // java/lang/String.getBytes:()[B\n-   #16 = Methodref          #12.#130      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #17 = Methodref          #13.#131      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #18 = Methodref          #12.#132      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #19 = Methodref          #13.#133      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n-   #20 = Methodref          #12.#134      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n-   #21 = Methodref          #135.#136     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #22 = Methodref          #137.#138     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #23 = Methodref          #13.#139      // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n-   #24 = Methodref          #13.#140      // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n-   #25 = Methodref          #8.#141       // java/util/zip/CRC32.reset:()V\n-   #26 = Methodref          #8.#142       // java/util/zip/CRC32.update:([B)V\n-   #27 = Methodref          #8.#143       // java/util/zip/CRC32.getValue:()J\n-   #28 = Methodref          #13.#144      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n-   #29 = Methodref          #13.#145      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n-   #30 = Methodref          #43.#146      // java/lang/String.length:()I\n-   #31 = Methodref          #13.#147      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n-   #32 = Methodref          #137.#148     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #33 = Class              #149          // java/util/zip/ZipException\n-   #34 = Class              #150          // java/lang/StringBuilder\n-   #35 = Methodref          #34.#116      // java/lang/StringBuilder.\"<init>\":()V\n-   #36 = String             #151          // bad CRC checksum\n-   #37 = Methodref          #34.#152      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #38 = Methodref          #153.#154     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-   #39 = String             #155          //  instead of\n-   #40 = Methodref          #34.#156      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #41 = Methodref          #33.#157      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #42 = Methodref          #12.#158      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #43 = Class              #159          // java/lang/String\n-   #44 = Methodref          #43.#160      // java/lang/String.\"<init>\":([B)V\n-   #45 = Class              #161          // org/apache/commons/compress/archivers/zip/UnixStat\n-   #46 = Methodref          #13.#162      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n-   #47 = Methodref          #13.#163      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n-   #48 = Methodref          #13.#164      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n+    #1 = Methodref          #56.#114      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #13.#115      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n+    #3 = Fieldref           #13.#116      // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n+    #4 = Fieldref           #13.#117      // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n+    #5 = String             #118          //\n+    #6 = Fieldref           #13.#119      // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n+    #7 = Fieldref           #13.#120      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n+    #8 = Class              #121          // java/util/zip/CRC32\n+    #9 = Methodref          #8.#114       // java/util/zip/CRC32.\"<init>\":()V\n+   #10 = Fieldref           #13.#122      // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n+   #11 = Fieldref           #13.#123      // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #12 = Class              #124          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #13 = Class              #125          // org/apache/commons/compress/archivers/zip/AsiExtraField\n+   #14 = Methodref          #13.#126      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n+   #15 = Methodref          #43.#127      // java/lang/String.getBytes:()[B\n+   #16 = Methodref          #12.#128      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #17 = Methodref          #13.#129      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #18 = Methodref          #12.#130      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #19 = Methodref          #13.#131      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n+   #20 = Methodref          #12.#132      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+   #21 = Methodref          #133.#134     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #22 = Methodref          #135.#136     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #23 = Methodref          #13.#137      // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n+   #24 = Methodref          #13.#138      // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n+   #25 = Methodref          #8.#139       // java/util/zip/CRC32.reset:()V\n+   #26 = Methodref          #8.#140       // java/util/zip/CRC32.update:([B)V\n+   #27 = Methodref          #8.#141       // java/util/zip/CRC32.getValue:()J\n+   #28 = Methodref          #13.#142      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n+   #29 = Methodref          #13.#143      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n+   #30 = Methodref          #43.#144      // java/lang/String.length:()I\n+   #31 = Methodref          #13.#145      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n+   #32 = Methodref          #135.#146     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #33 = Class              #147          // java/util/zip/ZipException\n+   #34 = Class              #148          // java/lang/StringBuilder\n+   #35 = Methodref          #34.#114      // java/lang/StringBuilder.\"<init>\":()V\n+   #36 = String             #149          // bad CRC checksum\n+   #37 = Methodref          #34.#150      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #38 = Methodref          #151.#152     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+   #39 = String             #153          //  instead of\n+   #40 = Methodref          #34.#154      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #41 = Methodref          #33.#155      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #42 = Methodref          #12.#156      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #43 = Class              #157          // java/lang/String\n+   #44 = Methodref          #43.#158      // java/lang/String.\"<init>\":([B)V\n+   #45 = Class              #159          // org/apache/commons/compress/archivers/zip/UnixStat\n+   #46 = Methodref          #13.#160      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n+   #47 = Methodref          #13.#161      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n+   #48 = Methodref          #13.#162      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n    #49 = Integer            32768\n    #50 = Integer            40960\n-   #51 = Methodref          #13.#165      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n-   #52 = Methodref          #56.#166      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #53 = Class              #167          // java/lang/CloneNotSupportedException\n-   #54 = Class              #168          // java/lang/RuntimeException\n-   #55 = Methodref          #54.#169      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #56 = Class              #170          // java/lang/Object\n-   #57 = Class              #171          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #58 = Class              #172          // java/lang/Cloneable\n+   #51 = Methodref          #13.#163      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n+   #52 = Methodref          #56.#164      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #53 = Class              #165          // java/lang/CloneNotSupportedException\n+   #54 = Class              #166          // java/lang/RuntimeException\n+   #55 = Methodref          #54.#167      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #56 = Class              #168          // java/lang/Object\n+   #57 = Class              #169          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #58 = Class              #170          // java/lang/Cloneable\n    #59 = Utf8               HEADER_ID\n    #60 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n    #61 = Utf8               WORD\n    #62 = Utf8               I\n    #63 = Utf8               ConstantValue\n    #64 = Integer            4\n    #65 = Utf8               mode\n@@ -108,105 +108,103 @@\n    #98 = Utf8               setMode\n    #99 = Utf8               getMode\n   #100 = Utf8               setDirectory\n   #101 = Utf8               (Z)V\n   #102 = Utf8               isDirectory\n   #103 = Utf8               parseFromLocalFileData\n   #104 = Utf8               ([BII)V\n-  #105 = Class              #173          // \"[B\"\n-  #106 = Class              #127          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #107 = Utf8               Exceptions\n-  #108 = Utf8               parseFromCentralDirectoryData\n-  #109 = Utf8               (I)I\n-  #110 = Utf8               clone\n-  #111 = Utf8               ()Ljava/lang/Object;\n-  #112 = Class              #167          // java/lang/CloneNotSupportedException\n-  #113 = Utf8               <clinit>\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               AsiExtraField.java\n-  #116 = NameAndType        #74:#75       // \"<init>\":()V\n-  #117 = NameAndType        #65:#62       // mode:I\n-  #118 = NameAndType        #66:#62       // uid:I\n-  #119 = NameAndType        #67:#62       // gid:I\n-  #120 = Utf8\n-  #121 = NameAndType        #68:#69       // link:Ljava/lang/String;\n-  #122 = NameAndType        #70:#71       // dirFlag:Z\n-  #123 = Utf8               java/util/zip/CRC32\n-  #124 = NameAndType        #72:#73       // crc:Ljava/util/zip/CRC32;\n-  #125 = NameAndType        #59:#60       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #126 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #127 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #128 = NameAndType        #93:#94       // getLinkedFile:()Ljava/lang/String;\n-  #129 = NameAndType        #174:#83      // getBytes:()[B\n-  #130 = NameAndType        #74:#86       // \"<init>\":(I)V\n-  #131 = NameAndType        #80:#79       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #132 = NameAndType        #175:#88      // getValue:()I\n-  #133 = NameAndType        #99:#88       // getMode:()I\n-  #134 = NameAndType        #174:#176     // getBytes:(I)[B\n-  #135 = Class              #177          // java/lang/System\n-  #136 = NameAndType        #178:#179     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #137 = Class              #180          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #138 = NameAndType        #174:#181     // getBytes:(J)[B\n-  #139 = NameAndType        #87:#88       // getUserId:()I\n-  #140 = NameAndType        #90:#88       // getGroupId:()I\n-  #141 = NameAndType        #182:#75      // reset:()V\n-  #142 = NameAndType        #183:#184     // update:([B)V\n-  #143 = NameAndType        #175:#185     // getValue:()J\n-  #144 = NameAndType        #82:#83       // getLocalFileDataData:()[B\n-  #145 = NameAndType        #99:#109      // getMode:(I)I\n-  #146 = NameAndType        #186:#88      // length:()I\n-  #147 = NameAndType        #95:#96       // isLink:()Z\n-  #148 = NameAndType        #175:#187     // getValue:([BI)J\n-  #149 = Utf8               java/util/zip/ZipException\n-  #150 = Utf8               java/lang/StringBuilder\n-  #151 = Utf8               bad CRC checksum\n-  #152 = NameAndType        #188:#189     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #153 = Class              #190          // java/lang/Long\n-  #154 = NameAndType        #191:#192     // toHexString:(J)Ljava/lang/String;\n-  #155 = Utf8                instead of\n-  #156 = NameAndType        #193:#94      // toString:()Ljava/lang/String;\n-  #157 = NameAndType        #74:#92       // \"<init>\":(Ljava/lang/String;)V\n-  #158 = NameAndType        #175:#194     // getValue:([BI)I\n-  #159 = Utf8               java/lang/String\n-  #160 = NameAndType        #74:#184      // \"<init>\":([B)V\n-  #161 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #162 = NameAndType        #100:#101     // setDirectory:(Z)V\n-  #163 = NameAndType        #98:#86       // setMode:(I)V\n-  #164 = NameAndType        #103:#104     // parseFromLocalFileData:([BII)V\n-  #165 = NameAndType        #102:#96      // isDirectory:()Z\n-  #166 = NameAndType        #110:#111     // clone:()Ljava/lang/Object;\n-  #167 = Utf8               java/lang/CloneNotSupportedException\n-  #168 = Utf8               java/lang/RuntimeException\n-  #169 = NameAndType        #74:#195      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #170 = Utf8               java/lang/Object\n-  #171 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #172 = Utf8               java/lang/Cloneable\n-  #173 = Utf8               [B\n-  #174 = Utf8               getBytes\n-  #175 = Utf8               getValue\n-  #176 = Utf8               (I)[B\n-  #177 = Utf8               java/lang/System\n-  #178 = Utf8               arraycopy\n-  #179 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #180 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #181 = Utf8               (J)[B\n-  #182 = Utf8               reset\n-  #183 = Utf8               update\n-  #184 = Utf8               ([B)V\n-  #185 = Utf8               ()J\n-  #186 = Utf8               length\n-  #187 = Utf8               ([BI)J\n-  #188 = Utf8               append\n-  #189 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #190 = Utf8               java/lang/Long\n-  #191 = Utf8               toHexString\n-  #192 = Utf8               (J)Ljava/lang/String;\n-  #193 = Utf8               toString\n-  #194 = Utf8               ([BI)I\n-  #195 = Utf8               (Ljava/lang/Throwable;)V\n+  #105 = Class              #171          // \"[B\"\n+  #106 = Utf8               Exceptions\n+  #107 = Utf8               parseFromCentralDirectoryData\n+  #108 = Utf8               (I)I\n+  #109 = Utf8               clone\n+  #110 = Utf8               ()Ljava/lang/Object;\n+  #111 = Utf8               <clinit>\n+  #112 = Utf8               SourceFile\n+  #113 = Utf8               AsiExtraField.java\n+  #114 = NameAndType        #74:#75       // \"<init>\":()V\n+  #115 = NameAndType        #65:#62       // mode:I\n+  #116 = NameAndType        #66:#62       // uid:I\n+  #117 = NameAndType        #67:#62       // gid:I\n+  #118 = Utf8\n+  #119 = NameAndType        #68:#69       // link:Ljava/lang/String;\n+  #120 = NameAndType        #70:#71       // dirFlag:Z\n+  #121 = Utf8               java/util/zip/CRC32\n+  #122 = NameAndType        #72:#73       // crc:Ljava/util/zip/CRC32;\n+  #123 = NameAndType        #59:#60       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #124 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #125 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n+  #126 = NameAndType        #93:#94       // getLinkedFile:()Ljava/lang/String;\n+  #127 = NameAndType        #172:#83      // getBytes:()[B\n+  #128 = NameAndType        #74:#86       // \"<init>\":(I)V\n+  #129 = NameAndType        #80:#79       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #130 = NameAndType        #173:#88      // getValue:()I\n+  #131 = NameAndType        #99:#88       // getMode:()I\n+  #132 = NameAndType        #172:#174     // getBytes:(I)[B\n+  #133 = Class              #175          // java/lang/System\n+  #134 = NameAndType        #176:#177     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #135 = Class              #178          // org/apache/commons/compress/archivers/zip/ZipLong\n+  #136 = NameAndType        #172:#179     // getBytes:(J)[B\n+  #137 = NameAndType        #87:#88       // getUserId:()I\n+  #138 = NameAndType        #90:#88       // getGroupId:()I\n+  #139 = NameAndType        #180:#75      // reset:()V\n+  #140 = NameAndType        #181:#182     // update:([B)V\n+  #141 = NameAndType        #173:#183     // getValue:()J\n+  #142 = NameAndType        #82:#83       // getLocalFileDataData:()[B\n+  #143 = NameAndType        #99:#108      // getMode:(I)I\n+  #144 = NameAndType        #184:#88      // length:()I\n+  #145 = NameAndType        #95:#96       // isLink:()Z\n+  #146 = NameAndType        #173:#185     // getValue:([BI)J\n+  #147 = Utf8               java/util/zip/ZipException\n+  #148 = Utf8               java/lang/StringBuilder\n+  #149 = Utf8               bad CRC checksum\n+  #150 = NameAndType        #186:#187     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #151 = Class              #188          // java/lang/Long\n+  #152 = NameAndType        #189:#190     // toHexString:(J)Ljava/lang/String;\n+  #153 = Utf8                instead of\n+  #154 = NameAndType        #191:#94      // toString:()Ljava/lang/String;\n+  #155 = NameAndType        #74:#92       // \"<init>\":(Ljava/lang/String;)V\n+  #156 = NameAndType        #173:#192     // getValue:([BI)I\n+  #157 = Utf8               java/lang/String\n+  #158 = NameAndType        #74:#182      // \"<init>\":([B)V\n+  #159 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #160 = NameAndType        #100:#101     // setDirectory:(Z)V\n+  #161 = NameAndType        #98:#86       // setMode:(I)V\n+  #162 = NameAndType        #103:#104     // parseFromLocalFileData:([BII)V\n+  #163 = NameAndType        #102:#96      // isDirectory:()Z\n+  #164 = NameAndType        #109:#110     // clone:()Ljava/lang/Object;\n+  #165 = Utf8               java/lang/CloneNotSupportedException\n+  #166 = Utf8               java/lang/RuntimeException\n+  #167 = NameAndType        #74:#193      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #168 = Utf8               java/lang/Object\n+  #169 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #170 = Utf8               java/lang/Cloneable\n+  #171 = Utf8               [B\n+  #172 = Utf8               getBytes\n+  #173 = Utf8               getValue\n+  #174 = Utf8               (I)[B\n+  #175 = Utf8               java/lang/System\n+  #176 = Utf8               arraycopy\n+  #177 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #178 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #179 = Utf8               (J)[B\n+  #180 = Utf8               reset\n+  #181 = Utf8               update\n+  #182 = Utf8               ([B)V\n+  #183 = Utf8               ()J\n+  #184 = Utf8               length\n+  #185 = Utf8               ([BI)J\n+  #186 = Utf8               append\n+  #187 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #188 = Utf8               java/lang/Long\n+  #189 = Utf8               toHexString\n+  #190 = Utf8               (J)Ljava/lang/String;\n+  #191 = Utf8               toString\n+  #192 = Utf8               ([BI)I\n+  #193 = Utf8               (Ljava/lang/Throwable;)V\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final int WORD = 4;\n     descriptor: I\n"}]}
