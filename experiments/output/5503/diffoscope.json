{"diffoscope-json-version": 1, "source1": "first/LazyInitializer.class", "source2": "second/LazyInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,24 +1,24 @@\n-  SHA-256 checksum 659e5cdef044ef713bee09b71b3c4bef451f19e14e0f58ece68c405e9cb2c587\n+  SHA-256 checksum 9ecab9070fd82354f7b34db19149e55cee2670da744c9a7db146157f79e2b6cf\n   Compiled from \"LazyInitializer.java\"\n public abstract class org.apache.commons.lang3.concurrent.LazyInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #6                          // org/apache/commons/lang3/concurrent/LazyInitializer\n   super_class: #5                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #5.#36         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #6.#37         // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n-   #3 = Fieldref           #6.#38         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n-   #4 = Methodref          #6.#39         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n-   #5 = Class              #40            // java/lang/Object\n-   #6 = Class              #41            // org/apache/commons/lang3/concurrent/LazyInitializer\n-   #7 = Class              #42            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #1 = Methodref          #5.#35         // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #6.#36         // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n+   #3 = Fieldref           #6.#37         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n+   #4 = Methodref          #6.#38         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n+   #5 = Class              #39            // java/lang/Object\n+   #6 = Class              #40            // org/apache/commons/lang3/concurrent/LazyInitializer\n+   #7 = Class              #41            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n    #8 = Utf8               NO_INIT\n    #9 = Utf8               Ljava/lang/Object;\n   #10 = Utf8               object\n   #11 = Utf8               Signature\n   #12 = Utf8               TT;\n   #13 = Utf8               <init>\n   #14 = Utf8               ()V\n@@ -29,33 +29,32 @@\n   #19 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer;\n   #20 = Utf8               LocalVariableTypeTable\n   #21 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer<TT;>;\n   #22 = Utf8               get\n   #23 = Utf8               ()Ljava/lang/Object;\n   #24 = Utf8               result\n   #25 = Utf8               StackMapTable\n-  #26 = Class              #40            // java/lang/Object\n-  #27 = Class              #43            // java/lang/Throwable\n-  #28 = Utf8               Exceptions\n-  #29 = Class              #44            // org/apache/commons/lang3/concurrent/ConcurrentException\n-  #30 = Utf8               ()TT;\n-  #31 = Utf8               initialize\n-  #32 = Utf8               <clinit>\n-  #33 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-  #34 = Utf8               SourceFile\n-  #35 = Utf8               LazyInitializer.java\n-  #36 = NameAndType        #13:#14        // \"<init>\":()V\n-  #37 = NameAndType        #8:#9          // NO_INIT:Ljava/lang/Object;\n-  #38 = NameAndType        #10:#9         // object:Ljava/lang/Object;\n-  #39 = NameAndType        #31:#23        // initialize:()Ljava/lang/Object;\n-  #40 = Utf8               java/lang/Object\n-  #41 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n-  #42 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #43 = Utf8               java/lang/Throwable\n-  #44 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+  #26 = Class              #42            // java/lang/Throwable\n+  #27 = Utf8               Exceptions\n+  #28 = Class              #43            // org/apache/commons/lang3/concurrent/ConcurrentException\n+  #29 = Utf8               ()TT;\n+  #30 = Utf8               initialize\n+  #31 = Utf8               <clinit>\n+  #32 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+  #33 = Utf8               SourceFile\n+  #34 = Utf8               LazyInitializer.java\n+  #35 = NameAndType        #13:#14        // \"<init>\":()V\n+  #36 = NameAndType        #8:#9          // NO_INIT:Ljava/lang/Object;\n+  #37 = NameAndType        #10:#9         // object:Ljava/lang/Object;\n+  #38 = NameAndType        #30:#23        // initialize:()Ljava/lang/Object;\n+  #39 = Utf8               java/lang/Object\n+  #40 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n+  #41 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #42 = Utf8               java/lang/Throwable\n+  #43 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n {\n   private static final java.lang.Object NO_INIT;\n     descriptor: Ljava/lang/Object;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private volatile T object;\n     descriptor: Ljava/lang/Object;\n@@ -147,31 +146,31 @@\n           locals = [ class java/lang/Object, class java/lang/Object ]\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 250 /* chop */\n           offset_delta = 4\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #30                          // ()TT;\n+    Signature: #29                          // ()TT;\n \n   protected abstract T initialize() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #30                          // ()TT;\n+    Signature: #29                          // ()TT;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: new           #5                  // class java/lang/Object\n          3: dup\n          4: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          7: putstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n         10: return\n       LineNumberTable:\n         line 82: 0\n }\n-Signature: #33                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+Signature: #32                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n SourceFile: \"LazyInitializer.java\"\n"}]}
