{"diffoscope-json-version": 1, "source1": "first/WordUtils.class", "source2": "second/WordUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,206 +1,206 @@\n-  SHA-256 checksum a185d9ecf1ce0cf22b3fc26b64605b17f8ff2d09fc432391523a3c376a1d33bd\n+  SHA-256 checksum 365450649fb16954385ef24c22612c9d9ab0f04a4f0ce278076646e90bfa93fa\n   Compiled from \"WordUtils.java\"\n public class org.apache.commons.lang3.text.WordUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #52                         // org/apache/commons/lang3/text/WordUtils\n-  super_class: #53                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/text/WordUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 15, attributes: 3\n Constant pool:\n-    #1 = Methodref          #53.#84       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #52.#85       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n-    #3 = String             #86           //\n-    #4 = Methodref          #52.#87       // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n-    #5 = Methodref          #88.#89       // java/lang/System.lineSeparator:()Ljava/lang/String;\n-    #6 = Methodref          #42.#90       // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-    #7 = Methodref          #63.#91       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #8 = Methodref          #30.#92       // java/lang/String.length:()I\n-    #9 = Class              #93           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#94        // java/lang/StringBuilder.\"<init>\":(I)V\n-   #11 = Class              #95           // java/lang/Integer\n-   #12 = Long               2147483647l\n-   #14 = Methodref          #96.#97       // java/lang/Math.min:(JJ)J\n-   #15 = Methodref          #96.#98       // java/lang/Math.min:(II)I\n-   #16 = Methodref          #30.#99       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #17 = Methodref          #63.#100      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #18 = Methodref          #64.#101      // java/util/regex/Matcher.find:()Z\n-   #19 = Methodref          #64.#102      // java/util/regex/Matcher.start:()I\n-   #20 = Methodref          #64.#103      // java/util/regex/Matcher.end:()I\n-   #21 = Methodref          #9.#104       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #9.#105       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #30.#106      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #24 = Methodref          #9.#107       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #52.#108      // org/apache/commons/lang3/text/WordUtils.capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #26 = Methodref          #42.#109      // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-   #27 = Methodref          #30.#110      // java/lang/String.toCharArray:()[C\n-   #28 = Methodref          #52.#111      // org/apache/commons/lang3/text/WordUtils.isDelimiter:(C[C)Z\n-   #29 = Methodref          #112.#113     // java/lang/Character.toTitleCase:(C)C\n-   #30 = Class              #114          // java/lang/String\n-   #31 = Methodref          #30.#115      // java/lang/String.\"<init>\":([C)V\n-   #32 = Methodref          #52.#116      // org/apache/commons/lang3/text/WordUtils.capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #33 = Methodref          #30.#117      // java/lang/String.toLowerCase:()Ljava/lang/String;\n-   #34 = Methodref          #52.#118      // org/apache/commons/lang3/text/WordUtils.uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #35 = Methodref          #112.#119     // java/lang/Character.toLowerCase:(C)C\n-   #36 = Methodref          #112.#120     // java/lang/Character.isUpperCase:(C)Z\n-   #37 = Methodref          #112.#121     // java/lang/Character.isTitleCase:(C)Z\n-   #38 = Methodref          #112.#122     // java/lang/Character.isLowerCase:(C)Z\n-   #39 = Methodref          #112.#123     // java/lang/Character.toUpperCase:(C)C\n-   #40 = Methodref          #112.#124     // java/lang/Character.isWhitespace:(C)Z\n-   #41 = Methodref          #52.#125      // org/apache/commons/lang3/text/WordUtils.initials:(Ljava/lang/String;[C)Ljava/lang/String;\n-   #42 = Class              #126          // org/apache/commons/lang3/StringUtils\n-   #43 = String             #127          //\n-   #44 = Methodref          #30.#128      // java/lang/String.charAt:(I)C\n-   #45 = Methodref          #30.#129      // java/lang/String.\"<init>\":([CII)V\n-   #46 = Methodref          #130.#131     // org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n-   #47 = Methodref          #9.#84        // java/lang/StringBuilder.\"<init>\":()V\n-   #48 = String             #132          // .*\\\\b\n-   #49 = Methodref          #9.#133       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #50 = String             #134          // \\\\b.*\n-   #51 = Methodref          #64.#135      // java/util/regex/Matcher.matches:()Z\n-   #52 = Class              #136          // org/apache/commons/lang3/text/WordUtils\n-   #53 = Class              #137          // java/lang/Object\n-   #54 = Utf8               <init>\n-   #55 = Utf8               ()V\n-   #56 = Utf8               Code\n-   #57 = Utf8               LineNumberTable\n-   #58 = Utf8               wrap\n-   #59 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-   #60 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n-   #61 = Utf8               (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #138          // java/util/regex/Pattern\n-   #64 = Class              #139          // java/util/regex/Matcher\n-   #65 = Utf8               capitalize\n-   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #67 = Utf8               (Ljava/lang/String;[C)Ljava/lang/String;\n-   #68 = Class              #140          // \"[C\"\n-   #69 = Utf8               capitalizeFully\n-   #70 = Utf8               uncapitalize\n-   #71 = Utf8               swapCase\n-   #72 = Utf8               initials\n-   #73 = Utf8               containsAllWords\n-   #74 = Utf8               (Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z\n-   #75 = Class              #141          // \"[Ljava/lang/CharSequence;\"\n-   #76 = Class              #142          // java/lang/CharSequence\n-   #77 = Utf8               isDelimiter\n-   #78 = Utf8               (C[C)Z\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               WordUtils.java\n-   #81 = Utf8               Deprecated\n-   #82 = Utf8               RuntimeVisibleAnnotations\n-   #83 = Utf8               Ljava/lang/Deprecated;\n-   #84 = NameAndType        #54:#55       // \"<init>\":()V\n-   #85 = NameAndType        #58:#60       // wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n-   #86 = Utf8\n-   #87 = NameAndType        #58:#61       // wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n-   #88 = Class              #143          // java/lang/System\n-   #89 = NameAndType        #144:#145     // lineSeparator:()Ljava/lang/String;\n-   #90 = NameAndType        #146:#147     // isBlank:(Ljava/lang/CharSequence;)Z\n-   #91 = NameAndType        #148:#149     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #92 = NameAndType        #150:#151     // length:()I\n-   #93 = Utf8               java/lang/StringBuilder\n-   #94 = NameAndType        #54:#152      // \"<init>\":(I)V\n-   #95 = Utf8               java/lang/Integer\n-   #96 = Class              #153          // java/lang/Math\n-   #97 = NameAndType        #154:#155     // min:(JJ)J\n-   #98 = NameAndType        #154:#156     // min:(II)I\n-   #99 = NameAndType        #157:#158     // substring:(II)Ljava/lang/String;\n-  #100 = NameAndType        #159:#160     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #101 = NameAndType        #161:#162     // find:()Z\n-  #102 = NameAndType        #163:#151     // start:()I\n-  #103 = NameAndType        #164:#151     // end:()I\n-  #104 = NameAndType        #165:#166     // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #105 = NameAndType        #165:#167     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #106 = NameAndType        #157:#168     // substring:(I)Ljava/lang/String;\n-  #107 = NameAndType        #169:#145     // toString:()Ljava/lang/String;\n-  #108 = NameAndType        #65:#67       // capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #109 = NameAndType        #170:#147     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #110 = NameAndType        #171:#172     // toCharArray:()[C\n-  #111 = NameAndType        #77:#78       // isDelimiter:(C[C)Z\n-  #112 = Class              #173          // java/lang/Character\n-  #113 = NameAndType        #174:#175     // toTitleCase:(C)C\n-  #114 = Utf8               java/lang/String\n-  #115 = NameAndType        #54:#176      // \"<init>\":([C)V\n-  #116 = NameAndType        #69:#67       // capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #117 = NameAndType        #177:#145     // toLowerCase:()Ljava/lang/String;\n-  #118 = NameAndType        #70:#67       // uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #119 = NameAndType        #177:#175     // toLowerCase:(C)C\n-  #120 = NameAndType        #178:#179     // isUpperCase:(C)Z\n-  #121 = NameAndType        #180:#179     // isTitleCase:(C)Z\n-  #122 = NameAndType        #181:#179     // isLowerCase:(C)Z\n-  #123 = NameAndType        #182:#175     // toUpperCase:(C)C\n-  #124 = NameAndType        #183:#179     // isWhitespace:(C)Z\n-  #125 = NameAndType        #72:#67       // initials:(Ljava/lang/String;[C)Ljava/lang/String;\n-  #126 = Utf8               org/apache/commons/lang3/StringUtils\n-  #127 = Utf8\n-  #128 = NameAndType        #184:#185     // charAt:(I)C\n-  #129 = NameAndType        #54:#186      // \"<init>\":([CII)V\n-  #130 = Class              #187          // org/apache/commons/lang3/ArrayUtils\n-  #131 = NameAndType        #170:#188     // isEmpty:([Ljava/lang/Object;)Z\n-  #132 = Utf8               .*\\\\b\n-  #133 = NameAndType        #165:#189     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #134 = Utf8               \\\\b.*\n-  #135 = NameAndType        #190:#162     // matches:()Z\n-  #136 = Utf8               org/apache/commons/lang3/text/WordUtils\n-  #137 = Utf8               java/lang/Object\n-  #138 = Utf8               java/util/regex/Pattern\n-  #139 = Utf8               java/util/regex/Matcher\n-  #140 = Utf8               [C\n-  #141 = Utf8               [Ljava/lang/CharSequence;\n-  #142 = Utf8               java/lang/CharSequence\n-  #143 = Utf8               java/lang/System\n-  #144 = Utf8               lineSeparator\n-  #145 = Utf8               ()Ljava/lang/String;\n-  #146 = Utf8               isBlank\n-  #147 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #148 = Utf8               compile\n-  #149 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #150 = Utf8               length\n-  #151 = Utf8               ()I\n-  #152 = Utf8               (I)V\n-  #153 = Utf8               java/lang/Math\n-  #154 = Utf8               min\n-  #155 = Utf8               (JJ)J\n-  #156 = Utf8               (II)I\n-  #157 = Utf8               substring\n-  #158 = Utf8               (II)Ljava/lang/String;\n-  #159 = Utf8               matcher\n-  #160 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #161 = Utf8               find\n-  #162 = Utf8               ()Z\n-  #163 = Utf8               start\n-  #164 = Utf8               end\n-  #165 = Utf8               append\n-  #166 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #168 = Utf8               (I)Ljava/lang/String;\n-  #169 = Utf8               toString\n-  #170 = Utf8               isEmpty\n-  #171 = Utf8               toCharArray\n-  #172 = Utf8               ()[C\n-  #173 = Utf8               java/lang/Character\n-  #174 = Utf8               toTitleCase\n-  #175 = Utf8               (C)C\n-  #176 = Utf8               ([C)V\n-  #177 = Utf8               toLowerCase\n-  #178 = Utf8               isUpperCase\n-  #179 = Utf8               (C)Z\n-  #180 = Utf8               isTitleCase\n-  #181 = Utf8               isLowerCase\n-  #182 = Utf8               toUpperCase\n-  #183 = Utf8               isWhitespace\n-  #184 = Utf8               charAt\n-  #185 = Utf8               (I)C\n-  #186 = Utf8               ([CII)V\n-  #187 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #188 = Utf8               ([Ljava/lang/Object;)Z\n-  #189 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #190 = Utf8               matches\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+    #8 = Class              #10           // org/apache/commons/lang3/text/WordUtils\n+    #9 = NameAndType        #11:#12       // wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+   #10 = Utf8               org/apache/commons/lang3/text/WordUtils\n+   #11 = Utf8               wrap\n+   #12 = Utf8               (Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+   #13 = String             #14           //\n+   #14 = Utf8\n+   #15 = Methodref          #8.#16        // org/apache/commons/lang3/text/WordUtils.wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+   #16 = NameAndType        #11:#17       // wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+   #17 = Utf8               (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+   #18 = Methodref          #19.#20       // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #19 = Class              #21           // java/lang/System\n+   #20 = NameAndType        #22:#23       // lineSeparator:()Ljava/lang/String;\n+   #21 = Utf8               java/lang/System\n+   #22 = Utf8               lineSeparator\n+   #23 = Utf8               ()Ljava/lang/String;\n+   #24 = Methodref          #25.#26       // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+   #25 = Class              #27           // org/apache/commons/lang3/StringUtils\n+   #26 = NameAndType        #28:#29       // isBlank:(Ljava/lang/CharSequence;)Z\n+   #27 = Utf8               org/apache/commons/lang3/StringUtils\n+   #28 = Utf8               isBlank\n+   #29 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #30 = Methodref          #31.#32       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #31 = Class              #33           // java/util/regex/Pattern\n+   #32 = NameAndType        #34:#35       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #33 = Utf8               java/util/regex/Pattern\n+   #34 = Utf8               compile\n+   #35 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #36 = Methodref          #37.#38       // java/lang/String.length:()I\n+   #37 = Class              #39           // java/lang/String\n+   #38 = NameAndType        #40:#41       // length:()I\n+   #39 = Utf8               java/lang/String\n+   #40 = Utf8               length\n+   #41 = Utf8               ()I\n+   #42 = Class              #43           // java/lang/StringBuilder\n+   #43 = Utf8               java/lang/StringBuilder\n+   #44 = Methodref          #42.#45       // java/lang/StringBuilder.\"<init>\":(I)V\n+   #45 = NameAndType        #5:#46        // \"<init>\":(I)V\n+   #46 = Utf8               (I)V\n+   #47 = Class              #48           // java/lang/Integer\n+   #48 = Utf8               java/lang/Integer\n+   #49 = Long               2147483647l\n+   #51 = Methodref          #52.#53       // java/lang/Math.min:(JJ)J\n+   #52 = Class              #54           // java/lang/Math\n+   #53 = NameAndType        #55:#56       // min:(JJ)J\n+   #54 = Utf8               java/lang/Math\n+   #55 = Utf8               min\n+   #56 = Utf8               (JJ)J\n+   #57 = Methodref          #52.#58       // java/lang/Math.min:(II)I\n+   #58 = NameAndType        #55:#59       // min:(II)I\n+   #59 = Utf8               (II)I\n+   #60 = Methodref          #37.#61       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #61 = NameAndType        #62:#63       // substring:(II)Ljava/lang/String;\n+   #62 = Utf8               substring\n+   #63 = Utf8               (II)Ljava/lang/String;\n+   #64 = Methodref          #31.#65       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #65 = NameAndType        #66:#67       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #66 = Utf8               matcher\n+   #67 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #68 = Methodref          #69.#70       // java/util/regex/Matcher.find:()Z\n+   #69 = Class              #71           // java/util/regex/Matcher\n+   #70 = NameAndType        #72:#73       // find:()Z\n+   #71 = Utf8               java/util/regex/Matcher\n+   #72 = Utf8               find\n+   #73 = Utf8               ()Z\n+   #74 = Methodref          #69.#75       // java/util/regex/Matcher.start:()I\n+   #75 = NameAndType        #76:#41       // start:()I\n+   #76 = Utf8               start\n+   #77 = Methodref          #69.#78       // java/util/regex/Matcher.end:()I\n+   #78 = NameAndType        #79:#41       // end:()I\n+   #79 = Utf8               end\n+   #80 = Methodref          #42.#81       // java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+   #81 = NameAndType        #82:#83       // append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+   #82 = Utf8               append\n+   #83 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+   #84 = Methodref          #42.#85       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #85 = NameAndType        #82:#86       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #87 = Methodref          #37.#88       // java/lang/String.substring:(I)Ljava/lang/String;\n+   #88 = NameAndType        #62:#89       // substring:(I)Ljava/lang/String;\n+   #89 = Utf8               (I)Ljava/lang/String;\n+   #90 = Methodref          #42.#91       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #91 = NameAndType        #92:#23       // toString:()Ljava/lang/String;\n+   #92 = Utf8               toString\n+   #93 = Methodref          #8.#94        // org/apache/commons/lang3/text/WordUtils.capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #94 = NameAndType        #95:#96       // capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+   #95 = Utf8               capitalize\n+   #96 = Utf8               (Ljava/lang/String;[C)Ljava/lang/String;\n+   #97 = Methodref          #25.#98       // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+   #98 = NameAndType        #99:#29       // isEmpty:(Ljava/lang/CharSequence;)Z\n+   #99 = Utf8               isEmpty\n+  #100 = Methodref          #37.#101      // java/lang/String.toCharArray:()[C\n+  #101 = NameAndType        #102:#103     // toCharArray:()[C\n+  #102 = Utf8               toCharArray\n+  #103 = Utf8               ()[C\n+  #104 = Methodref          #8.#105       // org/apache/commons/lang3/text/WordUtils.isDelimiter:(C[C)Z\n+  #105 = NameAndType        #106:#107     // isDelimiter:(C[C)Z\n+  #106 = Utf8               isDelimiter\n+  #107 = Utf8               (C[C)Z\n+  #108 = Methodref          #109.#110     // java/lang/Character.toTitleCase:(C)C\n+  #109 = Class              #111          // java/lang/Character\n+  #110 = NameAndType        #112:#113     // toTitleCase:(C)C\n+  #111 = Utf8               java/lang/Character\n+  #112 = Utf8               toTitleCase\n+  #113 = Utf8               (C)C\n+  #114 = Methodref          #37.#115      // java/lang/String.\"<init>\":([C)V\n+  #115 = NameAndType        #5:#116       // \"<init>\":([C)V\n+  #116 = Utf8               ([C)V\n+  #117 = Methodref          #8.#118       // org/apache/commons/lang3/text/WordUtils.capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #118 = NameAndType        #119:#96      // capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #119 = Utf8               capitalizeFully\n+  #120 = Methodref          #37.#121      // java/lang/String.toLowerCase:()Ljava/lang/String;\n+  #121 = NameAndType        #122:#23      // toLowerCase:()Ljava/lang/String;\n+  #122 = Utf8               toLowerCase\n+  #123 = Methodref          #8.#124       // org/apache/commons/lang3/text/WordUtils.uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #124 = NameAndType        #125:#96      // uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #125 = Utf8               uncapitalize\n+  #126 = Methodref          #109.#127     // java/lang/Character.toLowerCase:(C)C\n+  #127 = NameAndType        #122:#113     // toLowerCase:(C)C\n+  #128 = Methodref          #109.#129     // java/lang/Character.isUpperCase:(C)Z\n+  #129 = NameAndType        #130:#131     // isUpperCase:(C)Z\n+  #130 = Utf8               isUpperCase\n+  #131 = Utf8               (C)Z\n+  #132 = Methodref          #109.#133     // java/lang/Character.isTitleCase:(C)Z\n+  #133 = NameAndType        #134:#131     // isTitleCase:(C)Z\n+  #134 = Utf8               isTitleCase\n+  #135 = Methodref          #109.#136     // java/lang/Character.isLowerCase:(C)Z\n+  #136 = NameAndType        #137:#131     // isLowerCase:(C)Z\n+  #137 = Utf8               isLowerCase\n+  #138 = Methodref          #109.#139     // java/lang/Character.toUpperCase:(C)C\n+  #139 = NameAndType        #140:#113     // toUpperCase:(C)C\n+  #140 = Utf8               toUpperCase\n+  #141 = Methodref          #109.#142     // java/lang/Character.isWhitespace:(C)Z\n+  #142 = NameAndType        #143:#131     // isWhitespace:(C)Z\n+  #143 = Utf8               isWhitespace\n+  #144 = Methodref          #8.#145       // org/apache/commons/lang3/text/WordUtils.initials:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #145 = NameAndType        #146:#96      // initials:(Ljava/lang/String;[C)Ljava/lang/String;\n+  #146 = Utf8               initials\n+  #147 = String             #148          //\n+  #148 = Utf8\n+  #149 = Methodref          #37.#150      // java/lang/String.charAt:(I)C\n+  #150 = NameAndType        #151:#152     // charAt:(I)C\n+  #151 = Utf8               charAt\n+  #152 = Utf8               (I)C\n+  #153 = Methodref          #37.#154      // java/lang/String.\"<init>\":([CII)V\n+  #154 = NameAndType        #5:#155       // \"<init>\":([CII)V\n+  #155 = Utf8               ([CII)V\n+  #156 = Methodref          #157.#158     // org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n+  #157 = Class              #159          // org/apache/commons/lang3/ArrayUtils\n+  #158 = NameAndType        #99:#160      // isEmpty:([Ljava/lang/Object;)Z\n+  #159 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #160 = Utf8               ([Ljava/lang/Object;)Z\n+  #161 = Methodref          #42.#3        // java/lang/StringBuilder.\"<init>\":()V\n+  #162 = String             #163          // .*\\\\b\n+  #163 = Utf8               .*\\\\b\n+  #164 = Methodref          #42.#165      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #165 = NameAndType        #82:#166      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #166 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #167 = String             #168          // \\\\b.*\n+  #168 = Utf8               \\\\b.*\n+  #169 = Methodref          #69.#170      // java/util/regex/Matcher.matches:()Z\n+  #170 = NameAndType        #171:#73      // matches:()Z\n+  #171 = Utf8               matches\n+  #172 = Utf8               Code\n+  #173 = Utf8               LineNumberTable\n+  #174 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #175 = Utf8               StackMapTable\n+  #176 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #177 = Class              #178          // \"[C\"\n+  #178 = Utf8               [C\n+  #179 = Utf8               swapCase\n+  #180 = Utf8               containsAllWords\n+  #181 = Utf8               (Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z\n+  #182 = Class              #183          // \"[Ljava/lang/CharSequence;\"\n+  #183 = Utf8               [Ljava/lang/CharSequence;\n+  #184 = Class              #185          // java/lang/CharSequence\n+  #185 = Utf8               java/lang/CharSequence\n+  #186 = Utf8               SourceFile\n+  #187 = Utf8               WordUtils.java\n+  #188 = Utf8               Deprecated\n+  #189 = Utf8               RuntimeVisibleAnnotations\n+  #190 = Utf8               Ljava/lang/Deprecated;\n {\n   public org.apache.commons.lang3.text.WordUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -215,30 +215,30 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: aconst_null\n          3: iconst_0\n-         4: invokestatic  #2                  // Method wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n+         4: invokestatic  #7                  // Method wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 103: 0\n \n   public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean);\n     descriptor: (Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: iload_3\n-         4: ldc           #3                  // String\n-         6: invokestatic  #4                  // Method wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n+         4: ldc           #13                 // String\n+         6: invokestatic  #15                 // Method wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n          9: areturn\n       LineNumberTable:\n         line 180: 0\n \n   public static java.lang.String wrap(java.lang.String, int, java.lang.String, boolean, java.lang.String);\n     descriptor: (Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -246,186 +246,186 @@\n       stack=9, locals=11, args_size=5\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_2\n          7: ifnonnull     14\n-        10: invokestatic  #5                  // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+        10: invokestatic  #18                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n         13: astore_2\n         14: iload_1\n         15: iconst_1\n         16: if_icmpge     21\n         19: iconst_1\n         20: istore_1\n         21: aload         4\n-        23: invokestatic  #6                  // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+        23: invokestatic  #24                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         26: ifeq          33\n-        29: ldc           #3                  // String\n+        29: ldc           #13                 // String\n         31: astore        4\n         33: aload         4\n-        35: invokestatic  #7                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        35: invokestatic  #30                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n         38: astore        5\n         40: aload_0\n-        41: invokevirtual #8                  // Method java/lang/String.length:()I\n+        41: invokevirtual #36                 // Method java/lang/String.length:()I\n         44: istore        6\n         46: iconst_0\n         47: istore        7\n-        49: new           #9                  // class java/lang/StringBuilder\n+        49: new           #42                 // class java/lang/StringBuilder\n         52: dup\n         53: iload         6\n         55: bipush        32\n         57: iadd\n-        58: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        58: invokespecial #44                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n         61: astore        8\n         63: iload         7\n         65: iload         6\n         67: if_icmpge     331\n         70: iconst_m1\n         71: istore        9\n         73: aload         5\n         75: aload_0\n         76: iload         7\n-        78: ldc2_w        #12                 // long 2147483647l\n+        78: ldc2_w        #49                 // long 2147483647l\n         81: iload         7\n         83: iload_1\n         84: iadd\n         85: i2l\n         86: lconst_1\n         87: ladd\n-        88: invokestatic  #14                 // Method java/lang/Math.min:(JJ)J\n+        88: invokestatic  #51                 // Method java/lang/Math.min:(JJ)J\n         91: l2i\n         92: iload         6\n-        94: invokestatic  #15                 // Method java/lang/Math.min:(II)I\n-        97: invokevirtual #16                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       100: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        94: invokestatic  #57                 // Method java/lang/Math.min:(II)I\n+        97: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       100: invokevirtual #64                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n        103: astore        10\n        105: aload         10\n-       107: invokevirtual #18                 // Method java/util/regex/Matcher.find:()Z\n+       107: invokevirtual #68                 // Method java/util/regex/Matcher.find:()Z\n        110: ifeq          144\n        113: aload         10\n-       115: invokevirtual #19                 // Method java/util/regex/Matcher.start:()I\n+       115: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I\n        118: ifne          134\n        121: iload         7\n        123: aload         10\n-       125: invokevirtual #20                 // Method java/util/regex/Matcher.end:()I\n+       125: invokevirtual #77                 // Method java/util/regex/Matcher.end:()I\n        128: iadd\n        129: istore        7\n        131: goto          63\n        134: aload         10\n-       136: invokevirtual #19                 // Method java/util/regex/Matcher.start:()I\n+       136: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I\n        139: iload         7\n        141: iadd\n        142: istore        9\n        144: iload         6\n        146: iload         7\n        148: isub\n        149: iload_1\n        150: if_icmpgt     156\n        153: goto          331\n        156: aload         10\n-       158: invokevirtual #18                 // Method java/util/regex/Matcher.find:()Z\n+       158: invokevirtual #68                 // Method java/util/regex/Matcher.find:()Z\n        161: ifeq          177\n        164: aload         10\n-       166: invokevirtual #19                 // Method java/util/regex/Matcher.start:()I\n+       166: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I\n        169: iload         7\n        171: iadd\n        172: istore        9\n        174: goto          156\n        177: iload         9\n        179: iload         7\n        181: if_icmplt     211\n        184: aload         8\n        186: aload_0\n        187: iload         7\n        189: iload         9\n-       191: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+       191: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n        194: pop\n        195: aload         8\n        197: aload_2\n-       198: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       198: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        201: pop\n        202: iload         9\n        204: iconst_1\n        205: iadd\n        206: istore        7\n        208: goto          328\n        211: iload_3\n        212: ifeq          244\n        215: aload         8\n        217: aload_0\n        218: iload         7\n        220: iload_1\n        221: iload         7\n        223: iadd\n-       224: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+       224: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n        227: pop\n        228: aload         8\n        230: aload_2\n-       231: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       231: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        234: pop\n        235: iload         7\n        237: iload_1\n        238: iadd\n        239: istore        7\n        241: goto          328\n        244: aload         5\n        246: aload_0\n        247: iload         7\n        249: iload_1\n        250: iadd\n-       251: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       254: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+       251: invokevirtual #87                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       254: invokevirtual #64                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n        257: astore        10\n        259: aload         10\n-       261: invokevirtual #18                 // Method java/util/regex/Matcher.find:()Z\n+       261: invokevirtual #68                 // Method java/util/regex/Matcher.find:()Z\n        264: ifeq          279\n        267: aload         10\n-       269: invokevirtual #19                 // Method java/util/regex/Matcher.start:()I\n+       269: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I\n        272: iload         7\n        274: iadd\n        275: iload_1\n        276: iadd\n        277: istore        9\n        279: iload         9\n        281: iflt          311\n        284: aload         8\n        286: aload_0\n        287: iload         7\n        289: iload         9\n-       291: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+       291: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n        294: pop\n        295: aload         8\n        297: aload_2\n-       298: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       298: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        301: pop\n        302: iload         9\n        304: iconst_1\n        305: iadd\n        306: istore        7\n        308: goto          328\n        311: aload         8\n        313: aload_0\n        314: iload         7\n        316: aload_0\n-       317: invokevirtual #8                  // Method java/lang/String.length:()I\n-       320: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+       317: invokevirtual #36                 // Method java/lang/String.length:()I\n+       320: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n        323: pop\n        324: iload         6\n        326: istore        7\n        328: goto          63\n        331: aload         8\n        333: aload_0\n        334: iload         7\n        336: aload_0\n-       337: invokevirtual #8                  // Method java/lang/String.length:()I\n-       340: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n+       337: invokevirtual #36                 // Method java/lang/String.length:()I\n+       340: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;\n        343: pop\n        344: aload         8\n-       346: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       346: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        349: areturn\n       LineNumberTable:\n         line 274: 0\n         line 275: 4\n         line 277: 6\n         line 278: 10\n         line 280: 14\n@@ -496,15 +496,15 @@\n   public static java.lang.String capitalize(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokestatic  #25                 // Method capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+         2: invokestatic  #93                 // Method capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 373: 0\n \n   public static java.lang.String capitalize(java.lang.String, char...);\n     descriptor: (Ljava/lang/String;[C)Ljava/lang/String;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n@@ -514,22 +514,22 @@\n          1: ifnonnull     8\n          4: iconst_m1\n          5: goto          10\n          8: aload_1\n          9: arraylength\n         10: istore_2\n         11: aload_0\n-        12: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+        12: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n         15: ifne          22\n         18: iload_2\n         19: ifne          24\n         22: aload_0\n         23: areturn\n         24: aload_0\n-        25: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C\n+        25: invokevirtual #100                // Method java/lang/String.toCharArray:()[C\n         28: astore_3\n         29: iconst_1\n         30: istore        4\n         32: iconst_0\n         33: istore        5\n         35: iload         5\n         37: aload_3\n@@ -537,34 +537,34 @@\n         39: if_icmpge     86\n         42: aload_3\n         43: iload         5\n         45: caload\n         46: istore        6\n         48: iload         6\n         50: aload_1\n-        51: invokestatic  #28                 // Method isDelimiter:(C[C)Z\n+        51: invokestatic  #104                // Method isDelimiter:(C[C)Z\n         54: ifeq          63\n         57: iconst_1\n         58: istore        4\n         60: goto          80\n         63: iload         4\n         65: ifeq          80\n         68: aload_3\n         69: iload         5\n         71: iload         6\n-        73: invokestatic  #29                 // Method java/lang/Character.toTitleCase:(C)C\n+        73: invokestatic  #108                // Method java/lang/Character.toTitleCase:(C)C\n         76: castore\n         77: iconst_0\n         78: istore        4\n         80: iinc          5, 1\n         83: goto          35\n-        86: new           #30                 // class java/lang/String\n+        86: new           #37                 // class java/lang/String\n         89: dup\n         90: aload_3\n-        91: invokespecial #31                 // Method java/lang/String.\"<init>\":([C)V\n+        91: invokespecial #114                // Method java/lang/String.\"<init>\":([C)V\n         94: areturn\n       LineNumberTable:\n         line 406: 0\n         line 407: 11\n         line 408: 22\n         line 410: 24\n         line 411: 29\n@@ -599,15 +599,15 @@\n   public static java.lang.String capitalizeFully(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokestatic  #32                 // Method capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n+         2: invokestatic  #117                // Method capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 445: 0\n \n   public static java.lang.String capitalizeFully(java.lang.String, char...);\n     descriptor: (Ljava/lang/String;[C)Ljava/lang/String;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n@@ -617,26 +617,26 @@\n          1: ifnonnull     8\n          4: iconst_m1\n          5: goto          10\n          8: aload_1\n          9: arraylength\n         10: istore_2\n         11: aload_0\n-        12: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+        12: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n         15: ifne          22\n         18: iload_2\n         19: ifne          24\n         22: aload_0\n         23: areturn\n         24: aload_0\n-        25: invokevirtual #33                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;\n+        25: invokevirtual #120                // Method java/lang/String.toLowerCase:()Ljava/lang/String;\n         28: astore_0\n         29: aload_0\n         30: aload_1\n-        31: invokestatic  #25                 // Method capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+        31: invokestatic  #93                 // Method capitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n         34: areturn\n       LineNumberTable:\n         line 475: 0\n         line 476: 11\n         line 477: 22\n         line 479: 24\n         line 480: 29\n@@ -652,15 +652,15 @@\n   public static java.lang.String uncapitalize(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokestatic  #34                 // Method uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n+         2: invokestatic  #123                // Method uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 502: 0\n \n   public static java.lang.String uncapitalize(java.lang.String, char...);\n     descriptor: (Ljava/lang/String;[C)Ljava/lang/String;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n@@ -670,22 +670,22 @@\n          1: ifnonnull     8\n          4: iconst_m1\n          5: goto          10\n          8: aload_1\n          9: arraylength\n         10: istore_2\n         11: aload_0\n-        12: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+        12: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n         15: ifne          22\n         18: iload_2\n         19: ifne          24\n         22: aload_0\n         23: areturn\n         24: aload_0\n-        25: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C\n+        25: invokevirtual #100                // Method java/lang/String.toCharArray:()[C\n         28: astore_3\n         29: iconst_1\n         30: istore        4\n         32: iconst_0\n         33: istore        5\n         35: iload         5\n         37: aload_3\n@@ -693,34 +693,34 @@\n         39: if_icmpge     86\n         42: aload_3\n         43: iload         5\n         45: caload\n         46: istore        6\n         48: iload         6\n         50: aload_1\n-        51: invokestatic  #28                 // Method isDelimiter:(C[C)Z\n+        51: invokestatic  #104                // Method isDelimiter:(C[C)Z\n         54: ifeq          63\n         57: iconst_1\n         58: istore        4\n         60: goto          80\n         63: iload         4\n         65: ifeq          80\n         68: aload_3\n         69: iload         5\n         71: iload         6\n-        73: invokestatic  #35                 // Method java/lang/Character.toLowerCase:(C)C\n+        73: invokestatic  #126                // Method java/lang/Character.toLowerCase:(C)C\n         76: castore\n         77: iconst_0\n         78: istore        4\n         80: iinc          5, 1\n         83: goto          35\n-        86: new           #30                 // class java/lang/String\n+        86: new           #37                 // class java/lang/String\n         89: dup\n         90: aload_3\n-        91: invokespecial #31                 // Method java/lang/String.\"<init>\":([C)V\n+        91: invokespecial #114                // Method java/lang/String.\"<init>\":([C)V\n         94: areturn\n       LineNumberTable:\n         line 531: 0\n         line 532: 11\n         line 533: 22\n         line 535: 24\n         line 536: 29\n@@ -754,75 +754,75 @@\n \n   public static java.lang.String swapCase(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=1\n          0: aload_0\n-         1: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: aload_0\n          8: areturn\n          9: aload_0\n-        10: invokevirtual #27                 // Method java/lang/String.toCharArray:()[C\n+        10: invokevirtual #100                // Method java/lang/String.toCharArray:()[C\n         13: astore_1\n         14: iconst_1\n         15: istore_2\n         16: iconst_0\n         17: istore_3\n         18: iload_3\n         19: aload_1\n         20: arraylength\n         21: if_icmpge     106\n         24: aload_1\n         25: iload_3\n         26: caload\n         27: istore        4\n         29: iload         4\n-        31: invokestatic  #36                 // Method java/lang/Character.isUpperCase:(C)Z\n+        31: invokestatic  #128                // Method java/lang/Character.isUpperCase:(C)Z\n         34: ifne          45\n         37: iload         4\n-        39: invokestatic  #37                 // Method java/lang/Character.isTitleCase:(C)Z\n+        39: invokestatic  #132                // Method java/lang/Character.isTitleCase:(C)Z\n         42: ifeq          58\n         45: aload_1\n         46: iload_3\n         47: iload         4\n-        49: invokestatic  #35                 // Method java/lang/Character.toLowerCase:(C)C\n+        49: invokestatic  #126                // Method java/lang/Character.toLowerCase:(C)C\n         52: castore\n         53: iconst_0\n         54: istore_2\n         55: goto          100\n         58: iload         4\n-        60: invokestatic  #38                 // Method java/lang/Character.isLowerCase:(C)Z\n+        60: invokestatic  #135                // Method java/lang/Character.isLowerCase:(C)Z\n         63: ifeq          94\n         66: iload_2\n         67: ifeq          83\n         70: aload_1\n         71: iload_3\n         72: iload         4\n-        74: invokestatic  #29                 // Method java/lang/Character.toTitleCase:(C)C\n+        74: invokestatic  #108                // Method java/lang/Character.toTitleCase:(C)C\n         77: castore\n         78: iconst_0\n         79: istore_2\n         80: goto          100\n         83: aload_1\n         84: iload_3\n         85: iload         4\n-        87: invokestatic  #39                 // Method java/lang/Character.toUpperCase:(C)C\n+        87: invokestatic  #138                // Method java/lang/Character.toUpperCase:(C)C\n         90: castore\n         91: goto          100\n         94: iload         4\n-        96: invokestatic  #40                 // Method java/lang/Character.isWhitespace:(C)Z\n+        96: invokestatic  #141                // Method java/lang/Character.isWhitespace:(C)Z\n         99: istore_2\n        100: iinc          3, 1\n        103: goto          18\n-       106: new           #30                 // class java/lang/String\n+       106: new           #37                 // class java/lang/String\n        109: dup\n        110: aload_1\n-       111: invokespecial #31                 // Method java/lang/String.\"<init>\":([C)V\n+       111: invokespecial #114                // Method java/lang/String.\"<init>\":([C)V\n        114: areturn\n       LineNumberTable:\n         line 573: 0\n         line 574: 7\n         line 576: 9\n         line 578: 14\n         line 580: 16\n@@ -857,38 +857,38 @@\n   public static java.lang.String initials(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokestatic  #41                 // Method initials:(Ljava/lang/String;[C)Ljava/lang/String;\n+         2: invokestatic  #144                // Method initials:(Ljava/lang/String;[C)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 622: 0\n \n   public static java.lang.String initials(java.lang.String, char...);\n     descriptor: (Ljava/lang/String;[C)Ljava/lang/String;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=8, args_size=2\n          0: aload_0\n-         1: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: aload_0\n          8: areturn\n          9: aload_1\n         10: ifnull        21\n         13: aload_1\n         14: arraylength\n         15: ifne          21\n-        18: ldc           #43                 // String\n+        18: ldc           #147                // String\n         20: areturn\n         21: aload_0\n-        22: invokevirtual #8                  // Method java/lang/String.length:()I\n+        22: invokevirtual #36                 // Method java/lang/String.length:()I\n         25: istore_2\n         26: iload_2\n         27: iconst_2\n         28: idiv\n         29: iconst_1\n         30: iadd\n         31: newarray       char\n@@ -900,19 +900,19 @@\n         40: iconst_0\n         41: istore        6\n         43: iload         6\n         45: iload_2\n         46: if_icmpge     95\n         49: aload_0\n         50: iload         6\n-        52: invokevirtual #44                 // Method java/lang/String.charAt:(I)C\n+        52: invokevirtual #149                // Method java/lang/String.charAt:(I)C\n         55: istore        7\n         57: iload         7\n         59: aload_1\n-        60: invokestatic  #28                 // Method isDelimiter:(C[C)Z\n+        60: invokestatic  #104                // Method isDelimiter:(C[C)Z\n         63: ifeq          72\n         66: iconst_1\n         67: istore        5\n         69: goto          89\n         72: iload         5\n         74: ifeq          89\n         77: aload_3\n@@ -920,20 +920,20 @@\n         80: iinc          4, 1\n         83: iload         7\n         85: castore\n         86: iconst_0\n         87: istore        5\n         89: iinc          6, 1\n         92: goto          43\n-        95: new           #30                 // class java/lang/String\n+        95: new           #37                 // class java/lang/String\n         98: dup\n         99: aload_3\n        100: iconst_0\n        101: iload         4\n-       103: invokespecial #45                 // Method java/lang/String.\"<init>\":([CII)V\n+       103: invokespecial #153                // Method java/lang/String.\"<init>\":([CII)V\n        106: areturn\n       LineNumberTable:\n         line 652: 0\n         line 653: 7\n         line 655: 9\n         line 656: 18\n         line 658: 21\n@@ -966,18 +966,18 @@\n \n   public static boolean containsAllWords(java.lang.CharSequence, java.lang.CharSequence...);\n     descriptor: (Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n-         1: invokestatic  #26                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #97                 // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifne          14\n          7: aload_1\n-         8: invokestatic  #46                 // Method org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n+         8: invokestatic  #156                // Method org/apache/commons/lang3/ArrayUtils.isEmpty:([Ljava/lang/Object;)Z\n         11: ifeq          16\n         14: iconst_0\n         15: ireturn\n         16: aload_1\n         17: astore_2\n         18: aload_2\n         19: arraylength\n@@ -988,34 +988,34 @@\n         26: iload_3\n         27: if_icmpge     96\n         30: aload_2\n         31: iload         4\n         33: aaload\n         34: astore        5\n         36: aload         5\n-        38: invokestatic  #6                  // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+        38: invokestatic  #24                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         41: ifeq          46\n         44: iconst_0\n         45: ireturn\n-        46: new           #9                  // class java/lang/StringBuilder\n+        46: new           #42                 // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc           #48                 // String .*\\\\b\n-        55: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokespecial #161                // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc           #162                // String .*\\\\b\n+        55: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: aload         5\n-        60: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        63: ldc           #50                 // String \\\\b.*\n-        65: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        68: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        71: invokestatic  #7                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        60: invokevirtual #164                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        63: ldc           #167                // String \\\\b.*\n+        65: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        71: invokestatic  #30                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n         74: astore        6\n         76: aload         6\n         78: aload_0\n-        79: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        82: invokevirtual #51                 // Method java/util/regex/Matcher.matches:()Z\n+        79: invokevirtual #64                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        82: invokevirtual #169                // Method java/util/regex/Matcher.matches:()Z\n         85: ifne          90\n         88: iconst_0\n         89: ireturn\n         90: iinc          4, 1\n         93: goto          24\n         96: iconst_1\n         97: ireturn\n@@ -1048,15 +1048,15 @@\n     descriptor: (C[C)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: ifnonnull     9\n          4: iload_0\n-         5: invokestatic  #40                 // Method java/lang/Character.isWhitespace:(C)Z\n+         5: invokestatic  #141                // Method java/lang/Character.isWhitespace:(C)Z\n          8: ireturn\n          9: aload_1\n         10: astore_2\n         11: aload_2\n         12: arraylength\n         13: istore_3\n         14: iconst_0\n@@ -1093,9 +1093,9 @@\n         frame_type = 19 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n }\n SourceFile: \"WordUtils.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #83()\n+  0: #190()\n     java.lang.Deprecated\n"}]}
