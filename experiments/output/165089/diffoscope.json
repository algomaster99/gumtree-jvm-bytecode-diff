{"diffoscope-json-version": 1, "source1": "first/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "source2": "second/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,32 +1,32 @@\n-  SHA-256 checksum d982ee1e9ac872fbe67eab5e81ab308d85c5658ac3746d5d08403292edcec120\n+  SHA-256 checksum 9075558ebe6a67eef27c65d48267551aa77b97186d1f94e01aae4776e052cad2\n   Compiled from \"ZipSplitReadOnlySeekableByteChannel.java\"\n class org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator extends java.lang.Object implements java.util.Comparator<java.nio.file.Path>, java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #12                         // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n   super_class: #13                        // java/lang/Object\n   interfaces: 2, fields: 1, methods: 4, attributes: 3\n Constant pool:\n    #1 = Methodref          #12.#52        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.\"<init>\":()V\n    #2 = Methodref          #13.#52        // java/lang/Object.\"<init>\":()V\n    #3 = Methodref          #53.#54        // org/apache/commons/compress/utils/FileNameUtils.getExtension:(Ljava/nio/file/Path;)Ljava/lang/String;\n    #4 = String             #55            // z\n-   #5 = Methodref          #56.#57        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #6 = Methodref          #56.#58        // java/lang/String.substring:(I)Ljava/lang/String;\n-   #7 = Methodref          #59.#60        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #8 = Methodref          #59.#61        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #9 = Methodref          #59.#62        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n-  #10 = Class              #63            // java/nio/file/Path\n-  #11 = Methodref          #12.#64        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/nio/file/Path;Ljava/nio/file/Path;)I\n-  #12 = Class              #66            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-  #13 = Class              #67            // java/lang/Object\n-  #14 = Class              #68            // java/util/Comparator\n-  #15 = Class              #69            // java/io/Serializable\n+   #5 = Methodref          #42.#56        // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #6 = Methodref          #42.#57        // java/lang/String.substring:(I)Ljava/lang/String;\n+   #7 = Methodref          #58.#59        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #8 = Methodref          #58.#60        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #9 = Methodref          #58.#61        // java/lang/Integer.compareTo:(Ljava/lang/Integer;)I\n+  #10 = Class              #62            // java/nio/file/Path\n+  #11 = Methodref          #12.#63        // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator.compare:(Ljava/nio/file/Path;Ljava/nio/file/Path;)I\n+  #12 = Class              #65            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+  #13 = Class              #66            // java/lang/Object\n+  #14 = Class              #67            // java/util/Comparator\n+  #15 = Class              #68            // java/io/Serializable\n   #16 = Utf8               serialVersionUID\n   #17 = Utf8               J\n   #18 = Utf8               ConstantValue\n   #19 = Long               20200123l\n   #21 = Utf8               <init>\n   #22 = Utf8               ()V\n   #23 = Utf8               Code\n@@ -44,59 +44,58 @@\n   #35 = Utf8               extension1\n   #36 = Utf8               Ljava/lang/String;\n   #37 = Utf8               extension2\n   #38 = Utf8               splitSegmentNumber1\n   #39 = Utf8               Ljava/lang/Integer;\n   #40 = Utf8               splitSegmentNumber2\n   #41 = Utf8               StackMapTable\n-  #42 = Class              #70            // java/lang/String\n+  #42 = Class              #69            // java/lang/String\n   #43 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #44 = Class              #71            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  #44 = Class              #70            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n   #45 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;)V\n   #46 = Utf8               x0\n   #47 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;\n   #48 = Utf8               Signature\n   #49 = Utf8               Ljava/lang/Object;Ljava/util/Comparator<Ljava/nio/file/Path;>;Ljava/io/Serializable;\n   #50 = Utf8               SourceFile\n   #51 = Utf8               ZipSplitReadOnlySeekableByteChannel.java\n   #52 = NameAndType        #21:#22        // \"<init>\":()V\n-  #53 = Class              #72            // org/apache/commons/compress/utils/FileNameUtils\n-  #54 = NameAndType        #73:#74        // getExtension:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #53 = Class              #71            // org/apache/commons/compress/utils/FileNameUtils\n+  #54 = NameAndType        #72:#73        // getExtension:(Ljava/nio/file/Path;)Ljava/lang/String;\n   #55 = Utf8               z\n-  #56 = Class              #70            // java/lang/String\n-  #57 = NameAndType        #75:#76        // startsWith:(Ljava/lang/String;)Z\n-  #58 = NameAndType        #77:#78        // substring:(I)Ljava/lang/String;\n-  #59 = Class              #79            // java/lang/Integer\n-  #60 = NameAndType        #80:#81        // parseInt:(Ljava/lang/String;)I\n-  #61 = NameAndType        #82:#83        // valueOf:(I)Ljava/lang/Integer;\n-  #62 = NameAndType        #84:#85        // compareTo:(Ljava/lang/Integer;)I\n-  #63 = Utf8               java/nio/file/Path\n-  #64 = NameAndType        #30:#31        // compare:(Ljava/nio/file/Path;Ljava/nio/file/Path;)I\n-  #65 = Class              #86            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n-  #66 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n-  #67 = Utf8               java/lang/Object\n-  #68 = Utf8               java/util/Comparator\n-  #69 = Utf8               java/io/Serializable\n-  #70 = Utf8               java/lang/String\n-  #71 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n-  #72 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n-  #73 = Utf8               getExtension\n-  #74 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n-  #75 = Utf8               startsWith\n-  #76 = Utf8               (Ljava/lang/String;)Z\n-  #77 = Utf8               substring\n-  #78 = Utf8               (I)Ljava/lang/String;\n-  #79 = Utf8               java/lang/Integer\n-  #80 = Utf8               parseInt\n-  #81 = Utf8               (Ljava/lang/String;)I\n-  #82 = Utf8               valueOf\n-  #83 = Utf8               (I)Ljava/lang/Integer;\n-  #84 = Utf8               compareTo\n-  #85 = Utf8               (Ljava/lang/Integer;)I\n-  #86 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #56 = NameAndType        #74:#75        // startsWith:(Ljava/lang/String;)Z\n+  #57 = NameAndType        #76:#77        // substring:(I)Ljava/lang/String;\n+  #58 = Class              #78            // java/lang/Integer\n+  #59 = NameAndType        #79:#80        // parseInt:(Ljava/lang/String;)I\n+  #60 = NameAndType        #81:#82        // valueOf:(I)Ljava/lang/Integer;\n+  #61 = NameAndType        #83:#84        // compareTo:(Ljava/lang/Integer;)I\n+  #62 = Utf8               java/nio/file/Path\n+  #63 = NameAndType        #30:#31        // compare:(Ljava/nio/file/Path;Ljava/nio/file/Path;)I\n+  #64 = Class              #85            // org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  #65 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator\n+  #66 = Utf8               java/lang/Object\n+  #67 = Utf8               java/util/Comparator\n+  #68 = Utf8               java/io/Serializable\n+  #69 = Utf8               java/lang/String\n+  #70 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n+  #71 = Utf8               org/apache/commons/compress/utils/FileNameUtils\n+  #72 = Utf8               getExtension\n+  #73 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #74 = Utf8               startsWith\n+  #75 = Utf8               (Ljava/lang/String;)Z\n+  #76 = Utf8               substring\n+  #77 = Utf8               (I)Ljava/lang/String;\n+  #78 = Utf8               java/lang/Integer\n+  #79 = Utf8               parseInt\n+  #80 = Utf8               (Ljava/lang/String;)I\n+  #81 = Utf8               valueOf\n+  #82 = Utf8               (I)Ljava/lang/Integer;\n+  #83 = Utf8               compareTo\n+  #84 = Utf8               (Ljava/lang/Integer;)I\n+  #85 = Utf8               org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n {\n   private static final long serialVersionUID = 20200123l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 20200123l\n \n   private org.apache.commons.compress.archivers.zip.ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator();\n@@ -209,9 +208,9 @@\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator;\n             0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1;\n }\n Signature: #49                          // Ljava/lang/Object;Ljava/util/Comparator<Ljava/nio/file/Path;>;Ljava/io/Serializable;\n SourceFile: \"ZipSplitReadOnlySeekableByteChannel.java\"\n InnerClasses:\n-  private static #27= #12 of #65;         // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n+  private static #27= #12 of #64;         // ZipSplitSegmentComparator=class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$ZipSplitSegmentComparator of class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel\n   static #44;                             // class org/apache/commons/compress/archivers/zip/ZipSplitReadOnlySeekableByteChannel$1\n"}]}
