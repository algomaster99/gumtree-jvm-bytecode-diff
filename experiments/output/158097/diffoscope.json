{"diffoscope-json-version": 1, "source1": "first/MutableDouble.class", "source2": "second/MutableDouble.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum f3b911de9ed77fbd3151bf49f0b0c4ad602e4f28c5263749e908987067e5691d\n+  SHA-256 checksum b04af647e46abf62b38d7caaaa506695529eafcfb24570faac5d07595ce6b1ba\n   Compiled from \"MutableDouble.java\"\n public class org.apache.commons.lang3.mutable.MutableDouble extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableDouble>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/mutable/MutableDouble\n   super_class: #3                         // java/lang/Number\n@@ -106,23 +106,23 @@\n    #97 = Utf8               toString\n    #98 = Utf8               ()Ljava/lang/String;\n    #99 = Methodref          #100.#102     // java/lang/String.valueOf:(D)Ljava/lang/String;\n   #100 = Class              #101          // java/lang/String\n   #101 = Utf8               java/lang/String\n   #102 = NameAndType        #46:#103      // valueOf:(D)Ljava/lang/String;\n   #103 = Utf8               (D)Ljava/lang/String;\n-  #104 = Utf8               ()Ljava/lang/Object;\n-  #105 = Methodref          #1.#106       // org/apache/commons/lang3/mutable/MutableDouble.getValue:()Ljava/lang/Double;\n-  #106 = NameAndType        #42:#43       // getValue:()Ljava/lang/Double;\n+  #104 = Utf8               (Ljava/lang/Object;)I\n+  #105 = Methodref          #1.#106       // org/apache/commons/lang3/mutable/MutableDouble.compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+  #106 = NameAndType        #90:#91       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n   #107 = Utf8               (Ljava/lang/Object;)V\n   #108 = Methodref          #1.#109       // org/apache/commons/lang3/mutable/MutableDouble.setValue:(Ljava/lang/Number;)V\n   #109 = NameAndType        #48:#28       // setValue:(Ljava/lang/Number;)V\n-  #110 = Utf8               (Ljava/lang/Object;)I\n-  #111 = Methodref          #1.#112       // org/apache/commons/lang3/mutable/MutableDouble.compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n-  #112 = NameAndType        #90:#91       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+  #110 = Utf8               ()Ljava/lang/Object;\n+  #111 = Methodref          #1.#112       // org/apache/commons/lang3/mutable/MutableDouble.getValue:()Ljava/lang/Double;\n+  #112 = NameAndType        #42:#43       // getValue:()Ljava/lang/Double;\n   #113 = Utf8               SourceFile\n   #114 = Utf8               MutableDouble.java\n   #115 = Utf8               Signature\n   #116 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n {\n   private static final long serialVersionUID = 1587163916l;\n     descriptor: J\n@@ -759,22 +759,24 @@\n          7: areturn\n       LineNumberTable:\n         line 416: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n-  public java.lang.Object getValue();\n-    descriptor: ()Ljava/lang/Object;\n+  public int compareTo(java.lang.Object);\n+    descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n-      stack=1, locals=1, args_size=1\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #105                // Method getValue:()Ljava/lang/Double;\n-         4: areturn\n+         1: aload_1\n+         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableDouble\n+         5: invokevirtual #105                // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+         8: ireturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n@@ -787,24 +789,22 @@\n          5: invokevirtual #108                // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n \n-  public int compareTo(java.lang.Object);\n-    descriptor: (Ljava/lang/Object;)I\n+  public java.lang.Object getValue();\n+    descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n-      stack=2, locals=2, args_size=2\n+      stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: aload_1\n-         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableDouble\n-         5: invokevirtual #111                // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n-         8: ireturn\n+         1: invokevirtual #111                // Method getValue:()Ljava/lang/Double;\n+         4: areturn\n       LineNumberTable:\n         line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n }\n SourceFile: \"MutableDouble.java\"\n Signature: #116                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n"}]}
