{"diffoscope-json-version": 1, "source1": "first/IOExceptionList.class", "source2": "second/IOExceptionList.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,169 +1,172 @@\n-  SHA-256 checksum b33c08f70d87ab0e0087eb342fdc23cde5f5bfefc787f7b7e50178b67f86eed3\n+  SHA-256 checksum d8caef3577dff97113c3b7a6edbced6481079d41d5f1b1127093b91b40cfde42\n   Compiled from \"IOExceptionList.java\"\n public class org.apache.commons.io.IOExceptionList extends java.io.IOException implements java.lang.Iterable<java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/io/IOExceptionList\n-  super_class: #53                        // java/io/IOException\n+  this_class: #1                          // org/apache/commons/io/IOExceptionList\n+  super_class: #3                         // java/io/IOException\n   interfaces: 1, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/io/IOExceptionList.isEmpty:(Ljava/util/List;)Z\n-    #2 = Class              #4            // org/apache/commons/io/IOExceptionList\n-    #3 = NameAndType        #5:#6         // isEmpty:(Ljava/util/List;)Z\n-    #4 = Utf8               org/apache/commons/io/IOExceptionList\n-    #5 = Utf8               isEmpty\n-    #6 = Utf8               (Ljava/util/List;)Z\n-    #7 = Methodref          #8.#9         // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-    #8 = Class              #10           // java/util/Objects\n-    #9 = NameAndType        #11:#12       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Utf8               java/util/Objects\n-   #11 = Utf8               toString\n-   #12 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #13 = Methodref          #2.#14        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #14 = NameAndType        #15:#16       // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #15 = Utf8               <init>\n-   #16 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-   #17 = Methodref          #2.#18        // org/apache/commons/io/IOExceptionList.size:(Ljava/util/List;)I\n-   #18 = NameAndType        #19:#20       // size:(Ljava/util/List;)I\n-   #19 = Utf8               size\n-   #20 = Utf8               (Ljava/util/List;)I\n-   #21 = InterfaceMethodref #22.#23       // java/util/List.size:()I\n-   #22 = Class              #24           // java/util/List\n-   #23 = NameAndType        #19:#25       // size:()I\n-   #24 = Utf8               java/util/List\n-   #25 = Utf8               ()I\n-   #26 = String             #27           // %,d exception(s): %s\n-   #27 = Utf8               %,d exception(s): %s\n-   #28 = Class              #29           // java/lang/Object\n-   #29 = Utf8               java/lang/Object\n-   #30 = Methodref          #31.#32       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #31 = Class              #33           // java/lang/Integer\n-   #32 = NameAndType        #34:#35       // valueOf:(I)Ljava/lang/Integer;\n-   #33 = Utf8               java/lang/Integer\n-   #34 = Utf8               valueOf\n-   #35 = Utf8               (I)Ljava/lang/Integer;\n-   #36 = Methodref          #37.#38       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #37 = Class              #39           // java/lang/String\n-   #38 = NameAndType        #40:#41       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #39 = Utf8               java/lang/String\n-   #40 = Utf8               format\n-   #41 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #42 = Methodref          #2.#43        // org/apache/commons/io/IOExceptionList.toMessage:(Ljava/util/List;)Ljava/lang/String;\n-   #43 = NameAndType        #44:#45       // toMessage:(Ljava/util/List;)Ljava/lang/String;\n-   #44 = Utf8               toMessage\n-   #45 = Utf8               (Ljava/util/List;)Ljava/lang/String;\n-   #46 = InterfaceMethodref #22.#47       // java/util/List.get:(I)Ljava/lang/Object;\n-   #47 = NameAndType        #48:#49       // get:(I)Ljava/lang/Object;\n-   #48 = Utf8               get\n-   #49 = Utf8               (I)Ljava/lang/Object;\n-   #50 = Class              #51           // java/lang/Throwable\n-   #51 = Utf8               java/lang/Throwable\n-   #52 = Methodref          #53.#54       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #53 = Class              #55           // java/io/IOException\n-   #54 = NameAndType        #15:#56       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #55 = Utf8               java/io/IOException\n-   #56 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #57 = Methodref          #58.#59       // java/util/Collections.emptyList:()Ljava/util/List;\n-   #58 = Class              #60           // java/util/Collections\n-   #59 = NameAndType        #61:#62       // emptyList:()Ljava/util/List;\n-   #60 = Utf8               java/util/Collections\n-   #61 = Utf8               emptyList\n-   #62 = Utf8               ()Ljava/util/List;\n-   #63 = Fieldref           #2.#64        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n-   #64 = NameAndType        #65:#66       // causeList:Ljava/util/List;\n-   #65 = Utf8               causeList\n-   #66 = Utf8               Ljava/util/List;\n-   #67 = Methodref          #2.#68        // org/apache/commons/io/IOExceptionList.getCause:(I)Ljava/lang/Throwable;\n-   #68 = NameAndType        #69:#70       // getCause:(I)Ljava/lang/Throwable;\n-   #69 = Utf8               getCause\n-   #70 = Utf8               (I)Ljava/lang/Throwable;\n-   #71 = Methodref          #72.#73       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #72 = Class              #74           // java/lang/Class\n-   #73 = NameAndType        #75:#76       // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #74 = Utf8               java/lang/Class\n-   #75 = Utf8               cast\n-   #76 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #77 = Methodref          #2.#78        // org/apache/commons/io/IOExceptionList.getCauseList:()Ljava/util/List;\n-   #78 = NameAndType        #79:#62       // getCauseList:()Ljava/util/List;\n-   #79 = Utf8               getCauseList\n-   #80 = InterfaceMethodref #22.#81       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #81 = NameAndType        #82:#83       // iterator:()Ljava/util/Iterator;\n-   #82 = Utf8               iterator\n-   #83 = Utf8               ()Ljava/util/Iterator;\n-   #84 = Class              #85           // java/lang/Iterable\n-   #85 = Utf8               java/lang/Iterable\n-   #86 = Utf8               serialVersionUID\n-   #87 = Utf8               J\n-   #88 = Utf8               ConstantValue\n-   #89 = Long               1l\n-   #91 = Utf8               Signature\n-   #92 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n-   #93 = Utf8               checkEmpty\n-   #94 = Utf8               (Ljava/util/List;Ljava/lang/Object;)V\n-   #95 = Utf8               Code\n-   #96 = Utf8               LineNumberTable\n-   #97 = Utf8               LocalVariableTable\n-   #98 = Utf8               message\n-   #99 = Utf8               Ljava/lang/Object;\n-  #100 = Utf8               LocalVariableTypeTable\n-  #101 = Utf8               StackMapTable\n-  #102 = Utf8               Exceptions\n-  #103 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n-  #104 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n-  #105 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n-  #106 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n-  #107 = Utf8               (Ljava/util/List;)V\n-  #108 = Utf8               this\n-  #109 = Utf8               Lorg/apache/commons/io/IOExceptionList;\n-  #110 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-  #111 = Utf8               Ljava/lang/String;\n-  #112 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-  #113 = Utf8               index\n-  #114 = Utf8               I\n-  #115 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n-  #116 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n-  #117 = Utf8               clazz\n-  #118 = Utf8               Ljava/lang/Class;\n-  #119 = Utf8               Ljava/lang/Class<TT;>;\n-  #120 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n-  #121 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n-  #122 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n-  #123 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n-  #124 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n-  #125 = Utf8               Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n-  #126 = Utf8               SourceFile\n-  #127 = Utf8               IOExceptionList.java\n+    #1 = Class              #2            // org/apache/commons/io/IOExceptionList\n+    #2 = Utf8               org/apache/commons/io/IOExceptionList\n+    #3 = Class              #4            // java/io/IOException\n+    #4 = Utf8               java/io/IOException\n+    #5 = Class              #6            // java/lang/Iterable\n+    #6 = Utf8               java/lang/Iterable\n+    #7 = Utf8               serialVersionUID\n+    #8 = Utf8               J\n+    #9 = Utf8               ConstantValue\n+   #10 = Long               1l\n+   #12 = Utf8               causeList\n+   #13 = Utf8               Ljava/util/List;\n+   #14 = Utf8               Signature\n+   #15 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n+   #16 = Utf8               checkEmpty\n+   #17 = Utf8               (Ljava/util/List;Ljava/lang/Object;)V\n+   #18 = Utf8               Exceptions\n+   #19 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n+   #20 = Utf8               Code\n+   #21 = Methodref          #1.#22        // org/apache/commons/io/IOExceptionList.isEmpty:(Ljava/util/List;)Z\n+   #22 = NameAndType        #23:#24       // isEmpty:(Ljava/util/List;)Z\n+   #23 = Utf8               isEmpty\n+   #24 = Utf8               (Ljava/util/List;)Z\n+   #25 = Methodref          #26.#28       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #26 = Class              #27           // java/util/Objects\n+   #27 = Utf8               java/util/Objects\n+   #28 = NameAndType        #29:#30       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Utf8               toString\n+   #30 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #31 = Methodref          #1.#32        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #32 = NameAndType        #33:#34       // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #33 = Utf8               <init>\n+   #34 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+   #35 = Utf8               LineNumberTable\n+   #36 = Utf8               LocalVariableTable\n+   #37 = Utf8               message\n+   #38 = Utf8               Ljava/lang/Object;\n+   #39 = Utf8               LocalVariableTypeTable\n+   #40 = Utf8               StackMapTable\n+   #41 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n+   #42 = Methodref          #1.#43        // org/apache/commons/io/IOExceptionList.size:(Ljava/util/List;)I\n+   #43 = NameAndType        #44:#45       // size:(Ljava/util/List;)I\n+   #44 = Utf8               size\n+   #45 = Utf8               (Ljava/util/List;)I\n+   #46 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n+   #47 = InterfaceMethodref #48.#50       // java/util/List.size:()I\n+   #48 = Class              #49           // java/util/List\n+   #49 = Utf8               java/util/List\n+   #50 = NameAndType        #44:#51       // size:()I\n+   #51 = Utf8               ()I\n+   #52 = Utf8               toMessage\n+   #53 = Utf8               (Ljava/util/List;)Ljava/lang/String;\n+   #54 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n+   #55 = String             #56           // %,d exception(s): %s\n+   #56 = Utf8               %,d exception(s): %s\n+   #57 = Class              #58           // java/lang/Object\n+   #58 = Utf8               java/lang/Object\n+   #59 = Methodref          #60.#62       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #60 = Class              #61           // java/lang/Integer\n+   #61 = Utf8               java/lang/Integer\n+   #62 = NameAndType        #63:#64       // valueOf:(I)Ljava/lang/Integer;\n+   #63 = Utf8               valueOf\n+   #64 = Utf8               (I)Ljava/lang/Integer;\n+   #65 = Methodref          #66.#68       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #66 = Class              #67           // java/lang/String\n+   #67 = Utf8               java/lang/String\n+   #68 = NameAndType        #69:#70       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #69 = Utf8               format\n+   #70 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #71 = Utf8               (Ljava/util/List;)V\n+   #72 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+   #73 = Methodref          #1.#74        // org/apache/commons/io/IOExceptionList.toMessage:(Ljava/util/List;)Ljava/lang/String;\n+   #74 = NameAndType        #52:#53       // toMessage:(Ljava/util/List;)Ljava/lang/String;\n+   #75 = Utf8               this\n+   #76 = Utf8               Lorg/apache/commons/io/IOExceptionList;\n+   #77 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+   #78 = InterfaceMethodref #48.#79       // java/util/List.get:(I)Ljava/lang/Object;\n+   #79 = NameAndType        #80:#81       // get:(I)Ljava/lang/Object;\n+   #80 = Utf8               get\n+   #81 = Utf8               (I)Ljava/lang/Object;\n+   #82 = Class              #83           // java/lang/Throwable\n+   #83 = Utf8               java/lang/Throwable\n+   #84 = Methodref          #3.#85        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #85 = NameAndType        #33:#86       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #86 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #87 = Methodref          #88.#90       // java/util/Collections.emptyList:()Ljava/util/List;\n+   #88 = Class              #89           // java/util/Collections\n+   #89 = Utf8               java/util/Collections\n+   #90 = NameAndType        #91:#92       // emptyList:()Ljava/util/List;\n+   #91 = Utf8               emptyList\n+   #92 = Utf8               ()Ljava/util/List;\n+   #93 = Fieldref           #1.#94        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n+   #94 = NameAndType        #12:#13       // causeList:Ljava/util/List;\n+   #95 = Utf8               Ljava/lang/String;\n+   #96 = Utf8               getCause\n+   #97 = Utf8               (I)Ljava/lang/Throwable;\n+   #98 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n+   #99 = Utf8               index\n+  #100 = Utf8               I\n+  #101 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n+  #102 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n+  #103 = Methodref          #1.#104       // org/apache/commons/io/IOExceptionList.getCause:(I)Ljava/lang/Throwable;\n+  #104 = NameAndType        #96:#97       // getCause:(I)Ljava/lang/Throwable;\n+  #105 = Methodref          #106.#108     // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #106 = Class              #107          // java/lang/Class\n+  #107 = Utf8               java/lang/Class\n+  #108 = NameAndType        #109:#110     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #109 = Utf8               cast\n+  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = Utf8               clazz\n+  #112 = Utf8               Ljava/lang/Class;\n+  #113 = Utf8               Ljava/lang/Class<TT;>;\n+  #114 = Utf8               getCauseList\n+  #115 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n+  #116 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n+  #117 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n+  #118 = Utf8               iterator\n+  #119 = Utf8               ()Ljava/util/Iterator;\n+  #120 = Utf8               ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n+  #121 = Methodref          #1.#122       // org/apache/commons/io/IOExceptionList.getCauseList:()Ljava/util/List;\n+  #122 = NameAndType        #114:#92      // getCauseList:()Ljava/util/List;\n+  #123 = InterfaceMethodref #48.#124      // java/util/List.iterator:()Ljava/util/Iterator;\n+  #124 = NameAndType        #118:#119     // iterator:()Ljava/util/Iterator;\n+  #125 = Utf8               SourceFile\n+  #126 = Utf8               IOExceptionList.java\n+  #127 = Utf8               Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.List<? extends java.lang.Throwable> causeList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #92                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n+    Signature: #15                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n \n   public static void checkEmpty(java.util.List<? extends java.lang.Throwable>, java.lang.Object) throws org.apache.commons.io.IOExceptionList;\n     descriptor: (Ljava/util/List;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Exceptions:\n+      throws org.apache.commons.io.IOExceptionList\n+    Signature: #19                          // (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokestatic  #1                  // Method isEmpty:(Ljava/util/List;)Z\n+         1: invokestatic  #21                 // Method isEmpty:(Ljava/util/List;)Z\n          4: ifne          21\n-         7: new           #2                  // class org/apache/commons/io/IOExceptionList\n+         7: new           #1                  // class org/apache/commons/io/IOExceptionList\n         10: dup\n         11: aload_1\n         12: aconst_null\n-        13: invokestatic  #7                  // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        13: invokestatic  #25                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n         16: aload_0\n-        17: invokespecial #13                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        17: invokespecial #31                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         20: athrow\n         21: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 7\n         line 51: 21\n       LocalVariableTable:\n@@ -171,53 +174,49 @@\n             0      22     0 causeList   Ljava/util/List;\n             0      22     1 message   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 21 /* same */\n-    Exceptions:\n-      throws org.apache.commons.io.IOExceptionList\n-    Signature: #103                         // (Ljava/util/List<+Ljava/lang/Throwable;>;Ljava/lang/Object;)V\n \n   private static boolean isEmpty(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Signature: #41                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #17                 // Method size:(Ljava/util/List;)I\n-         4: ifne          11\n+         1: invokestatic  #42                 // Method size:(Ljava/util/List;)I\n+         4: ifne          9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 54: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0 causeList   Ljava/util/List;\n+            0      11     0 causeList   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n-    Signature: #104                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)Z\n+            0      11     0 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   private static int size(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Signature: #46                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        13\n          4: aload_0\n-         5: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I\n+         5: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -225,98 +224,98 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #105                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)I\n \n   private static java.lang.String toMessage(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Signature: #54                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: ldc           #26                 // String %,d exception(s): %s\n+         0: ldc           #55                 // String %,d exception(s): %s\n          2: iconst_2\n-         3: anewarray     #28                 // class java/lang/Object\n+         3: anewarray     #57                 // class java/lang/Object\n          6: dup\n          7: iconst_0\n          8: aload_0\n-         9: invokestatic  #17                 // Method size:(Ljava/util/List;)I\n-        12: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         9: invokestatic  #42                 // Method size:(Ljava/util/List;)I\n+        12: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         15: aastore\n         16: dup\n         17: iconst_1\n         18: aload_0\n         19: aastore\n-        20: invokestatic  #36                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        20: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         23: areturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0 causeList   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n-    Signature: #106                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)Ljava/lang/String;\n \n   public org.apache.commons.io.IOExceptionList(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #72                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #42                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n+         2: invokestatic  #73                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n          5: aload_1\n-         6: invokespecial #13                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+         6: invokespecial #31                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n          9: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/IOExceptionList;\n             0      10     1 causeList   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     1 causeList   Ljava/util/List<+Ljava/lang/Throwable;>;\n-    Signature: #110                         // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public org.apache.commons.io.IOExceptionList(java.lang.String, java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/String;Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #77                          // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          13\n          9: aload_2\n-        10: invokestatic  #42                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n+        10: invokestatic  #73                 // Method toMessage:(Ljava/util/List;)Ljava/lang/String;\n         13: aload_2\n-        14: invokestatic  #1                  // Method isEmpty:(Ljava/util/List;)Z\n+        14: invokestatic  #21                 // Method isEmpty:(Ljava/util/List;)Z\n         17: ifeq          24\n         20: aconst_null\n         21: goto          34\n         24: aload_2\n         25: iconst_0\n-        26: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        31: checkcast     #50                 // class java/lang/Throwable\n-        34: invokespecial #52                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokeinterface #78,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        31: checkcast     #82                 // class java/lang/Throwable\n+        34: invokespecial #84                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         37: aload_0\n         38: aload_2\n         39: ifnonnull     48\n-        42: invokestatic  #57                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+        42: invokestatic  #87                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n         45: goto          49\n         48: aload_2\n-        49: putfield      #63                 // Field causeList:Ljava/util/List;\n+        49: putfield      #93                 // Field causeList:Ljava/util/List;\n         52: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 37\n         line 86: 52\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -345,104 +344,103 @@\n           offset_delta = 13\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList, class java/util/List ]\n-    Signature: #112                         // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public <T extends java.lang.Throwable> T getCause(int);\n     descriptor: (I)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #98                          // <T:Ljava/lang/Throwable;>(I)TT;\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #63                 // Field causeList:Ljava/util/List;\n+         1: getfield      #93                 // Field causeList:Ljava/util/List;\n          4: iload_1\n-         5: invokeinterface #46,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        10: checkcast     #50                 // class java/lang/Throwable\n+         5: invokeinterface #78,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        10: checkcast     #82                 // class java/lang/Throwable\n         13: areturn\n       LineNumberTable:\n         line 96: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/IOExceptionList;\n             0      14     1 index   I\n-    Signature: #115                         // <T:Ljava/lang/Throwable;>(I)TT;\n \n   public <T extends java.lang.Throwable> T getCause(int, java.lang.Class<T>);\n     descriptor: (ILjava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #102                         // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n          1: aload_0\n          2: iload_1\n-         3: invokevirtual #67                 // Method getCause:(I)Ljava/lang/Throwable;\n-         6: invokevirtual #71                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-         9: checkcast     #50                 // class java/lang/Throwable\n+         3: invokevirtual #103                // Method getCause:(I)Ljava/lang/Throwable;\n+         6: invokevirtual #105                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+         9: checkcast     #82                 // class java/lang/Throwable\n         12: areturn\n       LineNumberTable:\n         line 108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/IOExceptionList;\n             0      13     1 index   I\n             0      13     2 clazz   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     2 clazz   Ljava/lang/Class<TT;>;\n-    Signature: #120                         // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #115                         // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #63                 // Field causeList:Ljava/util/List;\n+         1: getfield      #93                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/IOExceptionList;\n-    Signature: #121                         // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList(java.lang.Class<T>);\n     descriptor: (Ljava/lang/Class;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #117                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #63                 // Field causeList:Ljava/util/List;\n+         1: getfield      #93                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 129: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/IOExceptionList;\n             0       5     1 clazz   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     1 clazz   Ljava/lang/Class<TT;>;\n-    Signature: #123                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n \n   public java.util.Iterator<java.lang.Throwable> iterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #120                         // ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #77                 // Method getCauseList:()Ljava/util/List;\n-         4: invokeinterface #80,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+         1: invokevirtual #121                // Method getCauseList:()Ljava/util/List;\n+         4: invokeinterface #123,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n          9: areturn\n       LineNumberTable:\n         line 134: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/IOExceptionList;\n-    Signature: #124                         // ()Ljava/util/Iterator<Ljava/lang/Throwable;>;\n }\n-Signature: #125                         // Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n SourceFile: \"IOExceptionList.java\"\n+Signature: #127                         // Ljava/io/IOException;Ljava/lang/Iterable<Ljava/lang/Throwable;>;\n"}]}
