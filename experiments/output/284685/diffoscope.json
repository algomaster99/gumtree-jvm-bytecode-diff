{"diffoscope-json-version": 1, "source1": "first/ArrayElementValueGen.class", "source2": "second/ArrayElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,162 +1,157 @@\n-  SHA-256 checksum 517746e6d9d98fe04bb9dfdcdd1d9b6537361e2ed1c5392c9c82854830ee3739\n+  SHA-256 checksum 3cb6b7e0d07ddb668a03fa198ae6b9269a98525215197a893d186edca872c4f2\n   Compiled from \"ArrayElementValueGen.java\"\n public class org.apache.bcel.generic.ArrayElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #36                         // org/apache/bcel/generic/ArrayElementValueGen\n   super_class: #1                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 1, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #72           // org/apache/bcel/generic/ElementValueGen\n-    #2 = Methodref          #1.#73        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #3 = Class              #74           // java/util/ArrayList\n-    #4 = Methodref          #3.#75        // java/util/ArrayList.\"<init>\":()V\n-    #5 = Fieldref           #36.#76       // org/apache/bcel/generic/ArrayElementValueGen.evalues:Ljava/util/List;\n-    #6 = Class              #77           // java/lang/RuntimeException\n-    #7 = Class              #78           // java/lang/StringBuilder\n-    #8 = Methodref          #7.#75        // java/lang/StringBuilder.\"<init>\":()V\n-    #9 = String             #79           // Only element values of type array can be built with this ctor - type specified:\n-   #10 = Methodref          #7.#80        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #11 = Methodref          #7.#81        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #12 = Methodref          #7.#82        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #13 = Methodref          #6.#83        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Methodref          #1.#84        // org/apache/bcel/generic/ElementValueGen.copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-   #15 = InterfaceMethodref #85.#86       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #16 = InterfaceMethodref #85.#87       // java/util/List.size:()I\n-   #17 = Class              #88           // org/apache/bcel/classfile/ElementValue\n-   #18 = InterfaceMethodref #85.#89       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #19 = InterfaceMethodref #90.#91       // java/util/Iterator.hasNext:()Z\n-   #20 = InterfaceMethodref #90.#92       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #21 = Methodref          #1.#93        // org/apache/bcel/generic/ElementValueGen.getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n-   #22 = Class              #94           // org/apache/bcel/classfile/ArrayElementValue\n-   #23 = Methodref          #1.#95        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #24 = Methodref          #36.#96       // org/apache/bcel/generic/ArrayElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #25 = Methodref          #97.#98       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #26 = Methodref          #22.#99       // org/apache/bcel/classfile/ArrayElementValue.\"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #27 = Methodref          #22.#100      // org/apache/bcel/classfile/ArrayElementValue.getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n-   #28 = Methodref          #101.#102     // java/io/DataOutputStream.writeByte:(I)V\n-   #29 = Methodref          #101.#103     // java/io/DataOutputStream.writeShort:(I)V\n-   #30 = Methodref          #1.#104       // org/apache/bcel/generic/ElementValueGen.dump:(Ljava/io/DataOutputStream;)V\n-   #31 = String             #105          // [\n-   #32 = String             #106          //\n-   #33 = String             #107          // ,\n-   #34 = Methodref          #1.#108       // org/apache/bcel/generic/ElementValueGen.stringifyValue:()Ljava/lang/String;\n-   #35 = String             #109          // ]\n-   #36 = Class              #110          // org/apache/bcel/generic/ArrayElementValueGen\n+    #1 = Class              #69           // org/apache/bcel/generic/ElementValueGen\n+    #2 = Methodref          #1.#70        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #3 = Class              #71           // java/util/ArrayList\n+    #4 = Methodref          #3.#72        // java/util/ArrayList.\"<init>\":()V\n+    #5 = Fieldref           #36.#73       // org/apache/bcel/generic/ArrayElementValueGen.evalues:Ljava/util/List;\n+    #6 = Class              #74           // java/lang/RuntimeException\n+    #7 = Class              #75           // java/lang/StringBuilder\n+    #8 = Methodref          #7.#72        // java/lang/StringBuilder.\"<init>\":()V\n+    #9 = String             #76           // Only element values of type array can be built with this ctor - type specified:\n+   #10 = Methodref          #7.#77        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #11 = Methodref          #7.#78        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #12 = Methodref          #7.#79        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #13 = Methodref          #6.#80        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Methodref          #1.#81        // org/apache/bcel/generic/ElementValueGen.copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+   #15 = InterfaceMethodref #82.#83       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #16 = InterfaceMethodref #82.#84       // java/util/List.size:()I\n+   #17 = Class              #85           // org/apache/bcel/classfile/ElementValue\n+   #18 = InterfaceMethodref #82.#86       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #19 = InterfaceMethodref #51.#87       // java/util/Iterator.hasNext:()Z\n+   #20 = InterfaceMethodref #51.#88       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #21 = Methodref          #1.#89        // org/apache/bcel/generic/ElementValueGen.getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n+   #22 = Class              #90           // org/apache/bcel/classfile/ArrayElementValue\n+   #23 = Methodref          #1.#91        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #24 = Methodref          #36.#92       // org/apache/bcel/generic/ArrayElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #25 = Methodref          #48.#93       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #26 = Methodref          #22.#94       // org/apache/bcel/classfile/ArrayElementValue.\"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #27 = Methodref          #22.#95       // org/apache/bcel/classfile/ArrayElementValue.getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n+   #28 = Methodref          #96.#97       // java/io/DataOutputStream.writeByte:(I)V\n+   #29 = Methodref          #96.#98       // java/io/DataOutputStream.writeShort:(I)V\n+   #30 = Methodref          #1.#99        // org/apache/bcel/generic/ElementValueGen.dump:(Ljava/io/DataOutputStream;)V\n+   #31 = String             #100          // [\n+   #32 = String             #101          //\n+   #33 = String             #102          // ,\n+   #34 = Methodref          #1.#103       // org/apache/bcel/generic/ElementValueGen.stringifyValue:()Ljava/lang/String;\n+   #35 = String             #104          // ]\n+   #36 = Class              #105          // org/apache/bcel/generic/ArrayElementValueGen\n    #37 = Utf8               evalues\n    #38 = Utf8               Ljava/util/List;\n    #39 = Utf8               Signature\n    #40 = Utf8               Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n    #41 = Utf8               <init>\n    #42 = Utf8               (Lorg/apache/bcel/generic/ConstantPoolGen;)V\n    #43 = Utf8               Code\n    #44 = Utf8               LineNumberTable\n    #45 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n    #46 = Utf8               StackMapTable\n-   #47 = Class              #110          // org/apache/bcel/generic/ArrayElementValueGen\n-   #48 = Class              #111          // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n-   #49 = Class              #112          // org/apache/bcel/generic/ConstantPoolGen\n-   #50 = Utf8               getElementValue\n-   #51 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #52 = Class              #113          // java/util/Iterator\n-   #53 = Utf8               (Lorg/apache/bcel/classfile/ArrayElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #54 = Class              #94           // org/apache/bcel/classfile/ArrayElementValue\n-   #55 = Utf8               dump\n-   #56 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #57 = Utf8               Exceptions\n-   #58 = Class              #114          // java/io/IOException\n-   #59 = Utf8               stringifyValue\n-   #60 = Utf8               ()Ljava/lang/String;\n-   #61 = Class              #78           // java/lang/StringBuilder\n-   #62 = Class              #115          // java/lang/String\n-   #63 = Utf8               getElementValues\n-   #64 = Utf8               ()Ljava/util/List;\n-   #65 = Utf8               ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n-   #66 = Utf8               getElementValuesSize\n-   #67 = Utf8               ()I\n-   #68 = Utf8               addElement\n-   #69 = Utf8               (Lorg/apache/bcel/generic/ElementValueGen;)V\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               ArrayElementValueGen.java\n-   #72 = Utf8               org/apache/bcel/generic/ElementValueGen\n-   #73 = NameAndType        #41:#116      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #74 = Utf8               java/util/ArrayList\n-   #75 = NameAndType        #41:#117      // \"<init>\":()V\n-   #76 = NameAndType        #37:#38       // evalues:Ljava/util/List;\n-   #77 = Utf8               java/lang/RuntimeException\n-   #78 = Utf8               java/lang/StringBuilder\n-   #79 = Utf8               Only element values of type array can be built with this ctor - type specified:\n-   #80 = NameAndType        #118:#119     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #81 = NameAndType        #118:#120     // append:(I)Ljava/lang/StringBuilder;\n-   #82 = NameAndType        #121:#60      // toString:()Ljava/lang/String;\n-   #83 = NameAndType        #41:#122      // \"<init>\":(Ljava/lang/String;)V\n-   #84 = NameAndType        #123:#124     // copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-   #85 = Class              #125          // java/util/List\n-   #86 = NameAndType        #126:#127     // add:(Ljava/lang/Object;)Z\n-   #87 = NameAndType        #128:#67      // size:()I\n-   #88 = Utf8               org/apache/bcel/classfile/ElementValue\n-   #89 = NameAndType        #129:#130     // iterator:()Ljava/util/Iterator;\n-   #90 = Class              #113          // java/util/Iterator\n-   #91 = NameAndType        #131:#132     // hasNext:()Z\n-   #92 = NameAndType        #133:#134     // next:()Ljava/lang/Object;\n-   #93 = NameAndType        #50:#51       // getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n-   #94 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n-   #95 = NameAndType        #135:#67      // getElementValueType:()I\n-   #96 = NameAndType        #136:#137     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #97 = Class              #112          // org/apache/bcel/generic/ConstantPoolGen\n-   #98 = NameAndType        #136:#138     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #99 = NameAndType        #41:#139      // \"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #100 = NameAndType        #140:#141     // getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n-  #101 = Class              #142          // java/io/DataOutputStream\n-  #102 = NameAndType        #143:#144     // writeByte:(I)V\n-  #103 = NameAndType        #145:#144     // writeShort:(I)V\n-  #104 = NameAndType        #55:#56       // dump:(Ljava/io/DataOutputStream;)V\n-  #105 = Utf8               [\n-  #106 = Utf8\n-  #107 = Utf8               ,\n-  #108 = NameAndType        #59:#60       // stringifyValue:()Ljava/lang/String;\n-  #109 = Utf8               ]\n-  #110 = Utf8               org/apache/bcel/generic/ArrayElementValueGen\n-  #111 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n-  #112 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #113 = Utf8               java/util/Iterator\n-  #114 = Utf8               java/io/IOException\n-  #115 = Utf8               java/lang/String\n-  #116 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #117 = Utf8               ()V\n-  #118 = Utf8               append\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #120 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #121 = Utf8               toString\n-  #122 = Utf8               (Ljava/lang/String;)V\n-  #123 = Utf8               copy\n-  #124 = Utf8               (Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-  #125 = Utf8               java/util/List\n-  #126 = Utf8               add\n-  #127 = Utf8               (Ljava/lang/Object;)Z\n-  #128 = Utf8               size\n-  #129 = Utf8               iterator\n-  #130 = Utf8               ()Ljava/util/Iterator;\n-  #131 = Utf8               hasNext\n-  #132 = Utf8               ()Z\n-  #133 = Utf8               next\n-  #134 = Utf8               ()Ljava/lang/Object;\n-  #135 = Utf8               getElementValueType\n-  #136 = Utf8               getConstantPool\n-  #137 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #138 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #139 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #140 = Utf8               getElementValuesArray\n-  #141 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n-  #142 = Utf8               java/io/DataOutputStream\n-  #143 = Utf8               writeByte\n-  #144 = Utf8               (I)V\n-  #145 = Utf8               writeShort\n+   #47 = Class              #106          // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n+   #48 = Class              #107          // org/apache/bcel/generic/ConstantPoolGen\n+   #49 = Utf8               getElementValue\n+   #50 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+   #51 = Class              #108          // java/util/Iterator\n+   #52 = Utf8               (Lorg/apache/bcel/classfile/ArrayElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+   #53 = Utf8               dump\n+   #54 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #55 = Utf8               Exceptions\n+   #56 = Class              #109          // java/io/IOException\n+   #57 = Utf8               stringifyValue\n+   #58 = Utf8               ()Ljava/lang/String;\n+   #59 = Class              #110          // java/lang/String\n+   #60 = Utf8               getElementValues\n+   #61 = Utf8               ()Ljava/util/List;\n+   #62 = Utf8               ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n+   #63 = Utf8               getElementValuesSize\n+   #64 = Utf8               ()I\n+   #65 = Utf8               addElement\n+   #66 = Utf8               (Lorg/apache/bcel/generic/ElementValueGen;)V\n+   #67 = Utf8               SourceFile\n+   #68 = Utf8               ArrayElementValueGen.java\n+   #69 = Utf8               org/apache/bcel/generic/ElementValueGen\n+   #70 = NameAndType        #41:#111      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #71 = Utf8               java/util/ArrayList\n+   #72 = NameAndType        #41:#112      // \"<init>\":()V\n+   #73 = NameAndType        #37:#38       // evalues:Ljava/util/List;\n+   #74 = Utf8               java/lang/RuntimeException\n+   #75 = Utf8               java/lang/StringBuilder\n+   #76 = Utf8               Only element values of type array can be built with this ctor - type specified:\n+   #77 = NameAndType        #113:#114     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #78 = NameAndType        #113:#115     // append:(I)Ljava/lang/StringBuilder;\n+   #79 = NameAndType        #116:#58      // toString:()Ljava/lang/String;\n+   #80 = NameAndType        #41:#117      // \"<init>\":(Ljava/lang/String;)V\n+   #81 = NameAndType        #118:#119     // copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+   #82 = Class              #120          // java/util/List\n+   #83 = NameAndType        #121:#122     // add:(Ljava/lang/Object;)Z\n+   #84 = NameAndType        #123:#64      // size:()I\n+   #85 = Utf8               org/apache/bcel/classfile/ElementValue\n+   #86 = NameAndType        #124:#125     // iterator:()Ljava/util/Iterator;\n+   #87 = NameAndType        #126:#127     // hasNext:()Z\n+   #88 = NameAndType        #128:#129     // next:()Ljava/lang/Object;\n+   #89 = NameAndType        #49:#50       // getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n+   #90 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n+   #91 = NameAndType        #130:#64      // getElementValueType:()I\n+   #92 = NameAndType        #131:#132     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #93 = NameAndType        #131:#133     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #94 = NameAndType        #41:#134      // \"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #95 = NameAndType        #135:#136     // getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n+   #96 = Class              #137          // java/io/DataOutputStream\n+   #97 = NameAndType        #138:#139     // writeByte:(I)V\n+   #98 = NameAndType        #140:#139     // writeShort:(I)V\n+   #99 = NameAndType        #53:#54       // dump:(Ljava/io/DataOutputStream;)V\n+  #100 = Utf8               [\n+  #101 = Utf8\n+  #102 = Utf8               ,\n+  #103 = NameAndType        #57:#58       // stringifyValue:()Ljava/lang/String;\n+  #104 = Utf8               ]\n+  #105 = Utf8               org/apache/bcel/generic/ArrayElementValueGen\n+  #106 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n+  #107 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #108 = Utf8               java/util/Iterator\n+  #109 = Utf8               java/io/IOException\n+  #110 = Utf8               java/lang/String\n+  #111 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #112 = Utf8               ()V\n+  #113 = Utf8               append\n+  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #116 = Utf8               toString\n+  #117 = Utf8               (Ljava/lang/String;)V\n+  #118 = Utf8               copy\n+  #119 = Utf8               (Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+  #120 = Utf8               java/util/List\n+  #121 = Utf8               add\n+  #122 = Utf8               (Ljava/lang/Object;)Z\n+  #123 = Utf8               size\n+  #124 = Utf8               iterator\n+  #125 = Utf8               ()Ljava/util/Iterator;\n+  #126 = Utf8               hasNext\n+  #127 = Utf8               ()Z\n+  #128 = Utf8               next\n+  #129 = Utf8               ()Ljava/lang/Object;\n+  #130 = Utf8               getElementValueType\n+  #131 = Utf8               getConstantPool\n+  #132 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #133 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #134 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #135 = Utf8               getElementValuesArray\n+  #136 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n+  #137 = Utf8               java/io/DataOutputStream\n+  #138 = Utf8               writeByte\n+  #139 = Utf8               (I)V\n+  #140 = Utf8               writeShort\n {\n   private final java.util.List<org.apache.bcel.generic.ElementValueGen> evalues;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #40                          // Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n \n   public org.apache.bcel.generic.ArrayElementValueGen(org.apache.bcel.generic.ConstantPoolGen);\n@@ -482,15 +477,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #5                  // Field evalues:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 115: 0\n-    Signature: #65                          // ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n+    Signature: #62                          // ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n \n   public int getElementValuesSize();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
