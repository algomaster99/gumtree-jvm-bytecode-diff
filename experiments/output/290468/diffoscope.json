{"diffoscope-json-version": 1, "source1": "first/OrFileFilter.class", "source2": "second/OrFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,157 +1,151 @@\n-  SHA-256 checksum d76a8873e86e18d61a6c5acac87a5690813f3315e06b1e12ebabfe065c96b260\n+  SHA-256 checksum 336cea858ea018d84e8392ad1e77b332b9cf1329d35d140033b63bc94f104941\n   Compiled from \"OrFileFilter.java\"\n public class org.apache.commons.io.filefilter.OrFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.ConditionalFileFilter,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #34                         // org/apache/commons/io/filefilter/OrFileFilter\n   super_class: #35                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 2, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #35.#77       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Class              #78           // java/util/ArrayList\n-    #3 = Methodref          #2.#77        // java/util/ArrayList.\"<init>\":()V\n-    #4 = Fieldref           #34.#79       // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n-    #5 = Methodref          #2.#80        // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-    #6 = Class              #81           // java/lang/IllegalArgumentException\n-    #7 = String             #82           // The filters must not be null\n-    #8 = Methodref          #6.#83        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = Methodref          #2.#84        // java/util/ArrayList.\"<init>\":(I)V\n-   #10 = Methodref          #34.#85       // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #11 = InterfaceMethodref #86.#87       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #12 = Methodref          #88.#89       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #13 = InterfaceMethodref #86.#90       // java/util/List.remove:(Ljava/lang/Object;)Z\n-   #14 = InterfaceMethodref #86.#91       // java/util/List.clear:()V\n-   #15 = InterfaceMethodref #86.#92       // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #16 = InterfaceMethodref #86.#93       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #17 = InterfaceMethodref #94.#95       // java/util/Iterator.hasNext:()Z\n-   #18 = InterfaceMethodref #94.#96       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #19 = Class              #97           // org/apache/commons/io/filefilter/IOFileFilter\n-   #20 = InterfaceMethodref #19.#98       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #21 = InterfaceMethodref #19.#99       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #22 = Class              #100          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#77       // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = Methodref          #35.#101      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #25 = Methodref          #22.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = String             #103          // (\n-   #27 = InterfaceMethodref #86.#104      // java/util/List.size:()I\n-   #28 = String             #105          // ,\n-   #29 = InterfaceMethodref #86.#106      // java/util/List.get:(I)Ljava/lang/Object;\n-   #30 = String             #107          // null\n-   #31 = Methodref          #108.#101     // java/lang/Object.toString:()Ljava/lang/String;\n-   #32 = String             #109          // )\n-   #33 = Methodref          #22.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Class              #110          // org/apache/commons/io/filefilter/OrFileFilter\n-   #35 = Class              #111          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #36 = Class              #112          // org/apache/commons/io/filefilter/ConditionalFileFilter\n-   #37 = Class              #113          // java/io/Serializable\n+    #1 = Methodref          #35.#74       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #75           // java/util/ArrayList\n+    #3 = Methodref          #2.#74        // java/util/ArrayList.\"<init>\":()V\n+    #4 = Fieldref           #34.#76       // org/apache/commons/io/filefilter/OrFileFilter.fileFilters:Ljava/util/List;\n+    #5 = Methodref          #2.#77        // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+    #6 = Class              #78           // java/lang/IllegalArgumentException\n+    #7 = String             #79           // The filters must not be null\n+    #8 = Methodref          #6.#80        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #9 = Methodref          #2.#81        // java/util/ArrayList.\"<init>\":(I)V\n+   #10 = Methodref          #34.#82       // org/apache/commons/io/filefilter/OrFileFilter.addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #11 = InterfaceMethodref #53.#83       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #12 = Methodref          #84.#85       // java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #13 = InterfaceMethodref #53.#86       // java/util/List.remove:(Ljava/lang/Object;)Z\n+   #14 = InterfaceMethodref #53.#87       // java/util/List.clear:()V\n+   #15 = InterfaceMethodref #53.#88       // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #16 = InterfaceMethodref #53.#89       // java/util/List.iterator:()Ljava/util/Iterator;\n+   #17 = InterfaceMethodref #66.#90       // java/util/Iterator.hasNext:()Z\n+   #18 = InterfaceMethodref #66.#91       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #19 = Class              #92           // org/apache/commons/io/filefilter/IOFileFilter\n+   #20 = InterfaceMethodref #19.#93       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #21 = InterfaceMethodref #19.#94       // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #22 = Class              #95           // java/lang/StringBuilder\n+   #23 = Methodref          #22.#74       // java/lang/StringBuilder.\"<init>\":()V\n+   #24 = Methodref          #35.#96       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #25 = Methodref          #22.#97       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #26 = String             #98           // (\n+   #27 = InterfaceMethodref #53.#99       // java/util/List.size:()I\n+   #28 = String             #100          // ,\n+   #29 = InterfaceMethodref #53.#101      // java/util/List.get:(I)Ljava/lang/Object;\n+   #30 = String             #102          // null\n+   #31 = Methodref          #70.#96       // java/lang/Object.toString:()Ljava/lang/String;\n+   #32 = String             #103          // )\n+   #33 = Methodref          #22.#96       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #34 = Class              #104          // org/apache/commons/io/filefilter/OrFileFilter\n+   #35 = Class              #105          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #36 = Class              #106          // org/apache/commons/io/filefilter/ConditionalFileFilter\n+   #37 = Class              #107          // java/io/Serializable\n    #38 = Utf8               serialVersionUID\n    #39 = Utf8               J\n    #40 = Utf8               ConstantValue\n    #41 = Long               5767770777065432721l\n    #43 = Utf8               fileFilters\n    #44 = Utf8               Ljava/util/List;\n    #45 = Utf8               Signature\n    #46 = Utf8               Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n    #47 = Utf8               <init>\n    #48 = Utf8               ()V\n    #49 = Utf8               Code\n    #50 = Utf8               LineNumberTable\n    #51 = Utf8               (Ljava/util/List;)V\n    #52 = Utf8               StackMapTable\n-   #53 = Class              #110          // org/apache/commons/io/filefilter/OrFileFilter\n-   #54 = Class              #114          // java/util/List\n-   #55 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n-   #56 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #57 = Class              #97           // org/apache/commons/io/filefilter/IOFileFilter\n-   #58 = Utf8               addFileFilter\n-   #59 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #60 = Utf8               getFileFilters\n-   #61 = Utf8               ()Ljava/util/List;\n-   #62 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-   #63 = Utf8               removeFileFilter\n-   #64 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n-   #65 = Utf8               setFileFilters\n-   #66 = Utf8               accept\n-   #67 = Utf8               (Ljava/io/File;)Z\n-   #68 = Class              #115          // java/util/Iterator\n-   #69 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #70 = Utf8               toString\n-   #71 = Utf8               ()Ljava/lang/String;\n-   #72 = Class              #100          // java/lang/StringBuilder\n-   #73 = Class              #116          // java/lang/Object\n-   #74 = Class              #117          // java/lang/String\n-   #75 = Utf8               SourceFile\n-   #76 = Utf8               OrFileFilter.java\n-   #77 = NameAndType        #47:#48       // \"<init>\":()V\n-   #78 = Utf8               java/util/ArrayList\n-   #79 = NameAndType        #43:#44       // fileFilters:Ljava/util/List;\n-   #80 = NameAndType        #47:#118      // \"<init>\":(Ljava/util/Collection;)V\n-   #81 = Utf8               java/lang/IllegalArgumentException\n-   #82 = Utf8               The filters must not be null\n-   #83 = NameAndType        #47:#119      // \"<init>\":(Ljava/lang/String;)V\n-   #84 = NameAndType        #47:#120      // \"<init>\":(I)V\n-   #85 = NameAndType        #58:#59       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #86 = Class              #114          // java/util/List\n-   #87 = NameAndType        #121:#122     // add:(Ljava/lang/Object;)Z\n-   #88 = Class              #123          // java/util/Collections\n-   #89 = NameAndType        #124:#125     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n-   #90 = NameAndType        #126:#122     // remove:(Ljava/lang/Object;)Z\n-   #91 = NameAndType        #127:#48      // clear:()V\n-   #92 = NameAndType        #128:#129     // addAll:(Ljava/util/Collection;)Z\n-   #93 = NameAndType        #130:#131     // iterator:()Ljava/util/Iterator;\n-   #94 = Class              #115          // java/util/Iterator\n-   #95 = NameAndType        #132:#133     // hasNext:()Z\n-   #96 = NameAndType        #134:#135     // next:()Ljava/lang/Object;\n-   #97 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-   #98 = NameAndType        #66:#67       // accept:(Ljava/io/File;)Z\n-   #99 = NameAndType        #66:#69       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #100 = Utf8               java/lang/StringBuilder\n-  #101 = NameAndType        #70:#71       // toString:()Ljava/lang/String;\n-  #102 = NameAndType        #136:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #103 = Utf8               (\n-  #104 = NameAndType        #138:#139     // size:()I\n-  #105 = Utf8               ,\n-  #106 = NameAndType        #140:#141     // get:(I)Ljava/lang/Object;\n-  #107 = Utf8               null\n-  #108 = Class              #116          // java/lang/Object\n-  #109 = Utf8               )\n-  #110 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #111 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #112 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n-  #113 = Utf8               java/io/Serializable\n-  #114 = Utf8               java/util/List\n-  #115 = Utf8               java/util/Iterator\n-  #116 = Utf8               java/lang/Object\n-  #117 = Utf8               java/lang/String\n-  #118 = Utf8               (Ljava/util/Collection;)V\n-  #119 = Utf8               (Ljava/lang/String;)V\n-  #120 = Utf8               (I)V\n-  #121 = Utf8               add\n-  #122 = Utf8               (Ljava/lang/Object;)Z\n-  #123 = Utf8               java/util/Collections\n-  #124 = Utf8               unmodifiableList\n-  #125 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-  #126 = Utf8               remove\n-  #127 = Utf8               clear\n-  #128 = Utf8               addAll\n-  #129 = Utf8               (Ljava/util/Collection;)Z\n-  #130 = Utf8               iterator\n-  #131 = Utf8               ()Ljava/util/Iterator;\n-  #132 = Utf8               hasNext\n-  #133 = Utf8               ()Z\n-  #134 = Utf8               next\n-  #135 = Utf8               ()Ljava/lang/Object;\n-  #136 = Utf8               append\n-  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #138 = Utf8               size\n-  #139 = Utf8               ()I\n-  #140 = Utf8               get\n-  #141 = Utf8               (I)Ljava/lang/Object;\n+   #53 = Class              #108          // java/util/List\n+   #54 = Utf8               (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+   #55 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #56 = Utf8               addFileFilter\n+   #57 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #58 = Utf8               getFileFilters\n+   #59 = Utf8               ()Ljava/util/List;\n+   #60 = Utf8               ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+   #61 = Utf8               removeFileFilter\n+   #62 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n+   #63 = Utf8               setFileFilters\n+   #64 = Utf8               accept\n+   #65 = Utf8               (Ljava/io/File;)Z\n+   #66 = Class              #109          // java/util/Iterator\n+   #67 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #68 = Utf8               toString\n+   #69 = Utf8               ()Ljava/lang/String;\n+   #70 = Class              #110          // java/lang/Object\n+   #71 = Class              #111          // java/lang/String\n+   #72 = Utf8               SourceFile\n+   #73 = Utf8               OrFileFilter.java\n+   #74 = NameAndType        #47:#48       // \"<init>\":()V\n+   #75 = Utf8               java/util/ArrayList\n+   #76 = NameAndType        #43:#44       // fileFilters:Ljava/util/List;\n+   #77 = NameAndType        #47:#112      // \"<init>\":(Ljava/util/Collection;)V\n+   #78 = Utf8               java/lang/IllegalArgumentException\n+   #79 = Utf8               The filters must not be null\n+   #80 = NameAndType        #47:#113      // \"<init>\":(Ljava/lang/String;)V\n+   #81 = NameAndType        #47:#114      // \"<init>\":(I)V\n+   #82 = NameAndType        #56:#57       // addFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #83 = NameAndType        #115:#116     // add:(Ljava/lang/Object;)Z\n+   #84 = Class              #117          // java/util/Collections\n+   #85 = NameAndType        #118:#119     // unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n+   #86 = NameAndType        #120:#116     // remove:(Ljava/lang/Object;)Z\n+   #87 = NameAndType        #121:#48      // clear:()V\n+   #88 = NameAndType        #122:#123     // addAll:(Ljava/util/Collection;)Z\n+   #89 = NameAndType        #124:#125     // iterator:()Ljava/util/Iterator;\n+   #90 = NameAndType        #126:#127     // hasNext:()Z\n+   #91 = NameAndType        #128:#129     // next:()Ljava/lang/Object;\n+   #92 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #93 = NameAndType        #64:#65       // accept:(Ljava/io/File;)Z\n+   #94 = NameAndType        #64:#67       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #95 = Utf8               java/lang/StringBuilder\n+   #96 = NameAndType        #68:#69       // toString:()Ljava/lang/String;\n+   #97 = NameAndType        #130:#131     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #98 = Utf8               (\n+   #99 = NameAndType        #132:#133     // size:()I\n+  #100 = Utf8               ,\n+  #101 = NameAndType        #134:#135     // get:(I)Ljava/lang/Object;\n+  #102 = Utf8               null\n+  #103 = Utf8               )\n+  #104 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+  #105 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #106 = Utf8               org/apache/commons/io/filefilter/ConditionalFileFilter\n+  #107 = Utf8               java/io/Serializable\n+  #108 = Utf8               java/util/List\n+  #109 = Utf8               java/util/Iterator\n+  #110 = Utf8               java/lang/Object\n+  #111 = Utf8               java/lang/String\n+  #112 = Utf8               (Ljava/util/Collection;)V\n+  #113 = Utf8               (Ljava/lang/String;)V\n+  #114 = Utf8               (I)V\n+  #115 = Utf8               add\n+  #116 = Utf8               (Ljava/lang/Object;)Z\n+  #117 = Utf8               java/util/Collections\n+  #118 = Utf8               unmodifiableList\n+  #119 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+  #120 = Utf8               remove\n+  #121 = Utf8               clear\n+  #122 = Utf8               addAll\n+  #123 = Utf8               (Ljava/util/Collection;)Z\n+  #124 = Utf8               iterator\n+  #125 = Utf8               ()Ljava/util/Iterator;\n+  #126 = Utf8               hasNext\n+  #127 = Utf8               ()Z\n+  #128 = Utf8               next\n+  #129 = Utf8               ()Ljava/lang/Object;\n+  #130 = Utf8               append\n+  #131 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #132 = Utf8               size\n+  #133 = Utf8               ()I\n+  #134 = Utf8               get\n+  #135 = Utf8               (I)Ljava/lang/Object;\n {\n   private static final long serialVersionUID = 5767770777065432721l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 5767770777065432721l\n \n   private final java.util.List<org.apache.commons.io.filefilter.IOFileFilter> fileFilters;\n@@ -207,15 +201,15 @@\n         line 66: 34\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 22\n           locals = [ class org/apache/commons/io/filefilter/OrFileFilter, class java/util/List ]\n           stack = []\n         frame_type = 11 /* same */\n-    Signature: #55                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #54                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public org.apache.commons.io.filefilter.OrFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -279,15 +273,15 @@\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #4                  // Field fileFilters:Ljava/util/List;\n          4: invokestatic  #12                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 97: 0\n-    Signature: #62                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #60                          // ()Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public boolean removeFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -312,15 +306,15 @@\n         14: invokeinterface #15,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n         19: pop\n         20: return\n       LineNumberTable:\n         line 113: 0\n         line 114: 9\n         line 115: 20\n-    Signature: #55                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n+    Signature: #54                          // (Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;)V\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n"}]}
