{"diffoscope-json-version": 1, "source1": "first/StackMapType.class", "source2": "second/StackMapType.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,146 +1,146 @@\n-  SHA-256 checksum 71e1385ffd5ae2d6d54756b52ac51c2e229588fb46785e4ba96126e913a73262\n+  SHA-256 checksum 0fbf363f152589356931a878dbee80e76ae01708fe17743d8eb2efd1473ea277\n   Compiled from \"StackMapType.java\"\n public final class org.apache.bcel.classfile.StackMapType implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/bcel/classfile/StackMapType\n-  super_class: #30                        // java/lang/Object\n+  this_class: #1                          // org/apache/bcel/classfile/StackMapType\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 13, attributes: 1\n Constant pool:\n-    #1 = InterfaceMethodref #2.#3         // java/io/DataInput.readByte:()B\n-    #2 = Class              #4            // java/io/DataInput\n-    #3 = NameAndType        #5:#6         // readByte:()B\n-    #4 = Utf8               java/io/DataInput\n-    #5 = Utf8               readByte\n-    #6 = Utf8               ()B\n-    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-    #8 = Class              #10           // org/apache/bcel/classfile/StackMapType\n-    #9 = NameAndType        #11:#12       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #10 = Utf8               org/apache/bcel/classfile/StackMapType\n-   #11 = Utf8               <init>\n-   #12 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #13 = Methodref          #8.#14        // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-   #14 = NameAndType        #15:#16       // hasIndex:()Z\n-   #15 = Utf8               hasIndex\n-   #16 = Utf8               ()Z\n-   #17 = InterfaceMethodref #2.#18        // java/io/DataInput.readShort:()S\n-   #18 = NameAndType        #19:#20       // readShort:()S\n-   #19 = Utf8               readShort\n-   #20 = Utf8               ()S\n-   #21 = Fieldref           #8.#22        // org/apache/bcel/classfile/StackMapType.index:I\n-   #22 = NameAndType        #23:#24       // index:I\n-   #23 = Utf8               index\n-   #24 = Utf8               I\n-   #25 = Fieldref           #8.#26        // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #26 = NameAndType        #27:#28       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #27 = Utf8               constantPool\n-   #28 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #29 = Methodref          #30.#31       // java/lang/Object.\"<init>\":()V\n-   #30 = Class              #32           // java/lang/Object\n-   #31 = NameAndType        #11:#33       // \"<init>\":()V\n-   #32 = Utf8               java/lang/Object\n-   #33 = Utf8               ()V\n-   #34 = Class              #35           // org/apache/bcel/Const\n-   #35 = Utf8               org/apache/bcel/Const\n-   #36 = Class              #37           // java/lang/IllegalArgumentException\n-   #37 = Utf8               java/lang/IllegalArgumentException\n-   #38 = Class              #39           // java/lang/StringBuilder\n-   #39 = Utf8               java/lang/StringBuilder\n-   #40 = Methodref          #38.#31       // java/lang/StringBuilder.\"<init>\":()V\n-   #41 = String             #42           // Illegal type for StackMapType:\n-   #42 = Utf8               Illegal type for StackMapType:\n-   #43 = Methodref          #38.#44       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #44 = NameAndType        #45:#46       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = Utf8               append\n-   #46 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #47 = Methodref          #38.#48       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #48 = NameAndType        #45:#49       // append:(I)Ljava/lang/StringBuilder;\n-   #49 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #50 = Methodref          #38.#51       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #51 = NameAndType        #52:#53       // toString:()Ljava/lang/String;\n-   #52 = Utf8               toString\n-   #53 = Utf8               ()Ljava/lang/String;\n-   #54 = Methodref          #36.#55       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #55 = NameAndType        #11:#56       // \"<init>\":(Ljava/lang/String;)V\n-   #56 = Utf8               (Ljava/lang/String;)V\n-   #57 = Fieldref           #8.#58        // org/apache/bcel/classfile/StackMapType.type:B\n-   #58 = NameAndType        #59:#60       // type:B\n-   #59 = Utf8               type\n-   #60 = Utf8               B\n-   #61 = Methodref          #62.#63       // java/io/DataOutputStream.writeByte:(I)V\n-   #62 = Class              #64           // java/io/DataOutputStream\n-   #63 = NameAndType        #65:#66       // writeByte:(I)V\n-   #64 = Utf8               java/io/DataOutputStream\n-   #65 = Utf8               writeByte\n-   #66 = Utf8               (I)V\n-   #67 = Methodref          #8.#68        // org/apache/bcel/classfile/StackMapType.getIndex:()I\n-   #68 = NameAndType        #69:#70       // getIndex:()I\n-   #69 = Utf8               getIndex\n-   #70 = Utf8               ()I\n-   #71 = Methodref          #62.#72       // java/io/DataOutputStream.writeShort:(I)V\n-   #72 = NameAndType        #73:#66       // writeShort:(I)V\n-   #73 = Utf8               writeShort\n-   #74 = String             #75           // , class=<unknown>\n-   #75 = Utf8               , class=<unknown>\n-   #76 = String             #77           // , class=\n-   #77 = Utf8               , class=\n-   #78 = Methodref          #79.#80       // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #79 = Class              #81           // org/apache/bcel/classfile/ConstantPool\n-   #80 = NameAndType        #82:#83       // constantToString:(IB)Ljava/lang/String;\n-   #81 = Utf8               org/apache/bcel/classfile/ConstantPool\n-   #82 = Utf8               constantToString\n-   #83 = Utf8               (IB)Ljava/lang/String;\n-   #84 = String             #85           // , offset=\n-   #85 = Utf8               , offset=\n-   #86 = String             #87           //\n-   #87 = Utf8\n-   #88 = String             #89           // (type=\n-   #89 = Utf8               (type=\n-   #90 = Methodref          #34.#91       // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-   #91 = NameAndType        #92:#93       // getItemName:(I)Ljava/lang/String;\n-   #92 = Utf8               getItemName\n-   #93 = Utf8               (I)Ljava/lang/String;\n-   #94 = Methodref          #8.#95        // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n-   #95 = NameAndType        #96:#53       // printIndex:()Ljava/lang/String;\n-   #96 = Utf8               printIndex\n-   #97 = String             #98           // )\n-   #98 = Utf8               )\n-   #99 = Methodref          #30.#100      // java/lang/Object.clone:()Ljava/lang/Object;\n-  #100 = NameAndType        #101:#102     // clone:()Ljava/lang/Object;\n-  #101 = Utf8               clone\n-  #102 = Utf8               ()Ljava/lang/Object;\n-  #103 = Class              #104          // java/lang/CloneNotSupportedException\n-  #104 = Utf8               java/lang/CloneNotSupportedException\n-  #105 = Class              #106          // java/lang/Cloneable\n-  #106 = Utf8               java/lang/Cloneable\n-  #107 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #108 = Utf8               Code\n-  #109 = Utf8               LineNumberTable\n-  #110 = Utf8               LocalVariableTable\n-  #111 = Utf8               this\n-  #112 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n-  #113 = Utf8               file\n-  #114 = Utf8               Ljava/io/DataInput;\n-  #115 = Utf8               constant_pool\n-  #116 = Utf8               StackMapTable\n-  #117 = Utf8               Exceptions\n-  #118 = Class              #119          // java/io/IOException\n-  #119 = Utf8               java/io/IOException\n-  #120 = Utf8               setType\n-  #121 = Utf8               (B)V\n-  #122 = Utf8               t\n-  #123 = Utf8               getType\n-  #124 = Utf8               setIndex\n-  #125 = Utf8               dump\n-  #126 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #127 = Utf8               Ljava/io/DataOutputStream;\n-  #128 = Utf8               copy\n-  #129 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+    #1 = Class              #2            // org/apache/bcel/classfile/StackMapType\n+    #2 = Utf8               org/apache/bcel/classfile/StackMapType\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Utf8               type\n+    #8 = Utf8               B\n+    #9 = Utf8               index\n+   #10 = Utf8               I\n+   #11 = Utf8               constantPool\n+   #12 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #15 = Utf8               Exceptions\n+   #16 = Class              #17           // java/io/IOException\n+   #17 = Utf8               java/io/IOException\n+   #18 = Utf8               Code\n+   #19 = InterfaceMethodref #20.#22       // java/io/DataInput.readByte:()B\n+   #20 = Class              #21           // java/io/DataInput\n+   #21 = Utf8               java/io/DataInput\n+   #22 = NameAndType        #23:#24       // readByte:()B\n+   #23 = Utf8               readByte\n+   #24 = Utf8               ()B\n+   #25 = Methodref          #1.#26        // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #26 = NameAndType        #13:#27       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #27 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #28 = Methodref          #1.#29        // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+   #29 = NameAndType        #30:#31       // hasIndex:()Z\n+   #30 = Utf8               hasIndex\n+   #31 = Utf8               ()Z\n+   #32 = InterfaceMethodref #20.#33       // java/io/DataInput.readShort:()S\n+   #33 = NameAndType        #34:#35       // readShort:()S\n+   #34 = Utf8               readShort\n+   #35 = Utf8               ()S\n+   #36 = Fieldref           #1.#37        // org/apache/bcel/classfile/StackMapType.index:I\n+   #37 = NameAndType        #9:#10        // index:I\n+   #38 = Fieldref           #1.#39        // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #39 = NameAndType        #11:#12       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #40 = Utf8               LineNumberTable\n+   #41 = Utf8               LocalVariableTable\n+   #42 = Utf8               this\n+   #43 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n+   #44 = Utf8               file\n+   #45 = Utf8               Ljava/io/DataInput;\n+   #46 = Utf8               constant_pool\n+   #47 = Utf8               StackMapTable\n+   #48 = Class              #49           // org/apache/bcel/classfile/ConstantPool\n+   #49 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #50 = Methodref          #3.#51        // java/lang/Object.\"<init>\":()V\n+   #51 = NameAndType        #13:#52       // \"<init>\":()V\n+   #52 = Utf8               ()V\n+   #53 = Class              #54           // java/lang/IllegalArgumentException\n+   #54 = Utf8               java/lang/IllegalArgumentException\n+   #55 = Class              #56           // java/lang/StringBuilder\n+   #56 = Utf8               java/lang/StringBuilder\n+   #57 = String             #58           // Illegal type for StackMapType:\n+   #58 = Utf8               Illegal type for StackMapType:\n+   #59 = Methodref          #55.#60       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #60 = NameAndType        #13:#61       // \"<init>\":(Ljava/lang/String;)V\n+   #61 = Utf8               (Ljava/lang/String;)V\n+   #62 = Methodref          #55.#63       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #63 = NameAndType        #64:#65       // append:(I)Ljava/lang/StringBuilder;\n+   #64 = Utf8               append\n+   #65 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #66 = Methodref          #55.#67       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #67 = NameAndType        #68:#69       // toString:()Ljava/lang/String;\n+   #68 = Utf8               toString\n+   #69 = Utf8               ()Ljava/lang/String;\n+   #70 = Methodref          #53.#60       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #71 = Fieldref           #1.#72        // org/apache/bcel/classfile/StackMapType.type:B\n+   #72 = NameAndType        #7:#8         // type:B\n+   #73 = Utf8               setType\n+   #74 = Utf8               (B)V\n+   #75 = Utf8               t\n+   #76 = Utf8               getType\n+   #77 = Utf8               setIndex\n+   #78 = Utf8               (I)V\n+   #79 = Utf8               getIndex\n+   #80 = Utf8               ()I\n+   #81 = Utf8               dump\n+   #82 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #83 = Methodref          #84.#86       // java/io/DataOutputStream.writeByte:(I)V\n+   #84 = Class              #85           // java/io/DataOutputStream\n+   #85 = Utf8               java/io/DataOutputStream\n+   #86 = NameAndType        #87:#78       // writeByte:(I)V\n+   #87 = Utf8               writeByte\n+   #88 = Methodref          #1.#89        // org/apache/bcel/classfile/StackMapType.getIndex:()I\n+   #89 = NameAndType        #79:#80       // getIndex:()I\n+   #90 = Methodref          #84.#91       // java/io/DataOutputStream.writeShort:(I)V\n+   #91 = NameAndType        #92:#78       // writeShort:(I)V\n+   #92 = Utf8               writeShort\n+   #93 = Utf8               Ljava/io/DataOutputStream;\n+   #94 = Utf8               printIndex\n+   #95 = String             #96           // , class=<unknown>\n+   #96 = Utf8               , class=<unknown>\n+   #97 = String             #98           // , class=\n+   #98 = Utf8               , class=\n+   #99 = Methodref          #48.#100      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+  #100 = NameAndType        #101:#102     // constantToString:(IB)Ljava/lang/String;\n+  #101 = Utf8               constantToString\n+  #102 = Utf8               (IB)Ljava/lang/String;\n+  #103 = Methodref          #55.#104      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #104 = NameAndType        #64:#105      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #106 = String             #107          // , offset=\n+  #107 = Utf8               , offset=\n+  #108 = String             #109          //\n+  #109 = Utf8\n+  #110 = String             #111          // (type=\n+  #111 = Utf8               (type=\n+  #112 = Methodref          #113.#115     // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+  #113 = Class              #114          // org/apache/bcel/Const\n+  #114 = Utf8               org/apache/bcel/Const\n+  #115 = NameAndType        #116:#117     // getItemName:(I)Ljava/lang/String;\n+  #116 = Utf8               getItemName\n+  #117 = Utf8               (I)Ljava/lang/String;\n+  #118 = Methodref          #1.#119       // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n+  #119 = NameAndType        #94:#69       // printIndex:()Ljava/lang/String;\n+  #120 = String             #121          // )\n+  #121 = Utf8               )\n+  #122 = Utf8               copy\n+  #123 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+  #124 = Methodref          #3.#125       // java/lang/Object.clone:()Ljava/lang/Object;\n+  #125 = NameAndType        #126:#127     // clone:()Ljava/lang/Object;\n+  #126 = Utf8               clone\n+  #127 = Utf8               ()Ljava/lang/Object;\n+  #128 = Class              #129          // java/lang/CloneNotSupportedException\n+  #129 = Utf8               java/lang/CloneNotSupportedException\n   #130 = Utf8               getConstantPool\n   #131 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n   #132 = Utf8               setConstantPool\n   #133 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n   #134 = Utf8               SourceFile\n   #135 = Utf8               StackMapType.java\n {\n@@ -155,32 +155,34 @@\n   private org.apache.bcel.classfile.ConstantPool constantPool;\n     descriptor: Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0002) ACC_PRIVATE\n \n   org.apache.bcel.classfile.StackMapType(java.io.DataInput, org.apache.bcel.classfile.ConstantPool) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readByte:()B\n+         2: invokeinterface #19,  1           // InterfaceMethod java/io/DataInput.readByte:()B\n          7: iconst_m1\n          8: aload_2\n-         9: invokespecial #7                  // Method \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+         9: invokespecial #25                 // Method \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n         12: aload_0\n-        13: invokevirtual #13                 // Method hasIndex:()Z\n+        13: invokevirtual #28                 // Method hasIndex:()Z\n         16: ifeq          29\n         19: aload_0\n         20: aload_1\n-        21: invokeinterface #17,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n-        26: putfield      #21                 // Field index:I\n+        21: invokeinterface #32,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+        26: putfield      #36                 // Field index:I\n         29: aload_0\n         30: aload_2\n-        31: putfield      #25                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        31: putfield      #38                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         34: return\n       LineNumberTable:\n         line 47: 0\n         line 48: 12\n         line 49: 19\n         line 51: 29\n         line 52: 34\n@@ -190,137 +192,133 @@\n             0      35     1  file   Ljava/io/DataInput;\n             0      35     2 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 29\n           locals = [ class org/apache/bcel/classfile/StackMapType, class java/io/DataInput, class org/apache/bcel/classfile/ConstantPool ]\n           stack = []\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.bcel.classfile.StackMapType(byte, int, org.apache.bcel.classfile.ConstantPool);\n     descriptor: (BILorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=4, args_size=4\n+      stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #29                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #50                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_m1\n-         6: putfield      #21                 // Field index:I\n+         6: putfield      #36                 // Field index:I\n          9: iload_1\n         10: iflt          19\n         13: iload_1\n         14: bipush        8\n-        16: if_icmple     46\n-        19: new           #36                 // class java/lang/IllegalArgumentException\n+        16: if_icmple     43\n+        19: new           #53                 // class java/lang/IllegalArgumentException\n         22: dup\n-        23: new           #38                 // class java/lang/StringBuilder\n+        23: new           #55                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #41                 // String Illegal type for StackMapType:\n-        32: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        35: iload_1\n-        36: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        39: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        42: invokespecial #54                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        45: athrow\n-        46: aload_0\n-        47: iload_1\n-        48: putfield      #57                 // Field type:B\n-        51: aload_0\n-        52: iload_2\n-        53: putfield      #21                 // Field index:I\n-        56: aload_0\n-        57: aload_3\n-        58: putfield      #25                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-        61: return\n+        27: ldc           #57                 // String Illegal type for StackMapType:\n+        29: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        32: iload_1\n+        33: invokevirtual #62                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        36: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        39: invokespecial #70                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        42: athrow\n+        43: aload_0\n+        44: iload_1\n+        45: putfield      #71                 // Field type:B\n+        48: aload_0\n+        49: iload_2\n+        50: putfield      #36                 // Field index:I\n+        53: aload_0\n+        54: aload_3\n+        55: putfield      #38                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        58: return\n       LineNumberTable:\n         line 59: 0\n         line 37: 4\n         line 60: 9\n         line 61: 19\n-        line 63: 46\n-        line 64: 51\n-        line 65: 56\n-        line 66: 61\n+        line 63: 43\n+        line 64: 48\n+        line 65: 53\n+        line 66: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      62     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-            0      62     1  type   B\n-            0      62     2 index   I\n-            0      62     3 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n+            0      59     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      59     1  type   B\n+            0      59     2 index   I\n+            0      59     3 constant_pool   Lorg/apache/bcel/classfile/ConstantPool;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 19\n           locals = [ class org/apache/bcel/classfile/StackMapType, int, int, class org/apache/bcel/classfile/ConstantPool ]\n           stack = []\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n \n   public void setType(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: iload_1\n          1: iflt          10\n          4: iload_1\n          5: bipush        8\n-         7: if_icmple     37\n-        10: new           #36                 // class java/lang/IllegalArgumentException\n+         7: if_icmple     34\n+        10: new           #53                 // class java/lang/IllegalArgumentException\n         13: dup\n-        14: new           #38                 // class java/lang/StringBuilder\n+        14: new           #55                 // class java/lang/StringBuilder\n         17: dup\n-        18: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        21: ldc           #41                 // String Illegal type for StackMapType:\n-        23: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        26: iload_1\n-        27: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        30: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #54                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        36: athrow\n-        37: aload_0\n-        38: iload_1\n-        39: putfield      #57                 // Field type:B\n-        42: return\n+        18: ldc           #57                 // String Illegal type for StackMapType:\n+        20: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        23: iload_1\n+        24: invokevirtual #62                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        27: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        30: invokespecial #70                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: athrow\n+        34: aload_0\n+        35: iload_1\n+        36: putfield      #71                 // Field type:B\n+        39: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 10\n-        line 73: 37\n-        line 74: 42\n+        line 73: 34\n+        line 74: 39\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      43     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-            0      43     1     t   B\n+            0      40     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      40     1     t   B\n       StackMapTable: number_of_entries = 2\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n \n   public byte getType();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #57                 // Field type:B\n+         1: getfield      #71                 // Field type:B\n          4: ireturn\n       LineNumberTable:\n         line 78: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public void setIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #21                 // Field index:I\n+         2: putfield      #36                 // Field index:I\n          5: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapType;\n@@ -328,176 +326,170 @@\n \n   public int getIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field index:I\n+         1: getfield      #36                 // Field index:I\n          4: ireturn\n       LineNumberTable:\n         line 91: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #57                 // Field type:B\n-         5: invokevirtual #61                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: getfield      #71                 // Field type:B\n+         5: invokevirtual #83                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_0\n-         9: invokevirtual #13                 // Method hasIndex:()Z\n+         9: invokevirtual #28                 // Method hasIndex:()Z\n         12: ifeq          23\n         15: aload_1\n         16: aload_0\n-        17: invokevirtual #67                 // Method getIndex:()I\n-        20: invokevirtual #71                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        17: invokevirtual #88                 // Method getIndex:()I\n+        20: invokevirtual #90                 // Method java/io/DataOutputStream.writeShort:(I)V\n         23: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 8\n         line 104: 15\n         line 106: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/bcel/classfile/StackMapType;\n             0      24     1  file   Ljava/io/DataOutputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 23 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean hasIndex();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #57                 // Field type:B\n+         1: getfield      #71                 // Field type:B\n          4: bipush        7\n-         6: if_icmpeq     18\n+         6: if_icmpeq     20\n          9: aload_0\n-        10: getfield      #57                 // Field type:B\n+        10: getfield      #71                 // Field type:B\n         13: bipush        8\n-        15: if_icmpne     22\n-        18: iconst_1\n-        19: goto          23\n-        22: iconst_0\n-        23: ireturn\n+        15: if_icmpeq     20\n+        18: iconst_0\n+        19: ireturn\n+        20: iconst_1\n+        21: ireturn\n       LineNumberTable:\n         line 112: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      24     0  this   Lorg/apache/bcel/classfile/StackMapType;\n-      StackMapTable: number_of_entries = 3\n-        frame_type = 18 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      22     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 20 /* same */\n \n   private java.lang.String printIndex();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #57                 // Field type:B\n+         1: getfield      #71                 // Field type:B\n          4: bipush        7\n-         6: if_icmpne     51\n+         6: if_icmpne     48\n          9: aload_0\n-        10: getfield      #21                 // Field index:I\n+        10: getfield      #36                 // Field index:I\n         13: ifge          19\n-        16: ldc           #74                 // String , class=<unknown>\n+        16: ldc           #95                 // String , class=<unknown>\n         18: areturn\n-        19: new           #38                 // class java/lang/StringBuilder\n+        19: new           #55                 // class java/lang/StringBuilder\n         22: dup\n-        23: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        26: ldc           #76                 // String , class=\n-        28: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        31: aload_0\n-        32: getfield      #25                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-        35: aload_0\n-        36: getfield      #21                 // Field index:I\n-        39: bipush        7\n-        41: invokevirtual #78                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-        44: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        50: areturn\n-        51: aload_0\n-        52: getfield      #57                 // Field type:B\n-        55: bipush        8\n-        57: if_icmpne     83\n-        60: new           #38                 // class java/lang/StringBuilder\n-        63: dup\n-        64: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        67: ldc           #84                 // String , offset=\n-        69: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: aload_0\n-        73: getfield      #21                 // Field index:I\n-        76: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        79: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        82: areturn\n-        83: ldc           #86                 // String\n-        85: areturn\n+        23: ldc           #97                 // String , class=\n+        25: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        28: aload_0\n+        29: getfield      #38                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        32: aload_0\n+        33: getfield      #36                 // Field index:I\n+        36: bipush        7\n+        38: invokevirtual #99                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+        41: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        47: areturn\n+        48: aload_0\n+        49: getfield      #71                 // Field type:B\n+        52: bipush        8\n+        54: if_icmpne     77\n+        57: new           #55                 // class java/lang/StringBuilder\n+        60: dup\n+        61: ldc           #106                // String , offset=\n+        63: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        66: aload_0\n+        67: getfield      #36                 // Field index:I\n+        70: invokevirtual #62                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        73: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        76: areturn\n+        77: ldc           #108                // String\n+        79: areturn\n       LineNumberTable:\n         line 117: 0\n         line 118: 9\n         line 119: 16\n         line 121: 19\n-        line 122: 51\n-        line 123: 60\n-        line 125: 83\n+        line 122: 48\n+        line 123: 57\n+        line 125: 77\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      86     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      80     0  this   Lorg/apache/bcel/classfile/StackMapType;\n       StackMapTable: number_of_entries = 3\n         frame_type = 19 /* same */\n-        frame_type = 31 /* same */\n-        frame_type = 31 /* same */\n+        frame_type = 28 /* same */\n+        frame_type = 28 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #38                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #55                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #88                 // String (type=\n-         9: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #57                 // Field type:B\n-        16: invokestatic  #90                 // Method org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-        19: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: aload_0\n-        23: invokespecial #94                 // Method printIndex:()Ljava/lang/String;\n-        26: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: ldc           #97                 // String )\n-        31: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: areturn\n+         4: ldc           #110                // String (type=\n+         6: invokespecial #59                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #71                 // Field type:B\n+        13: invokestatic  #112                // Method org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+        16: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: aload_0\n+        20: invokespecial #118                // Method printIndex:()Ljava/lang/String;\n+        23: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: ldc           #120                // String )\n+        28: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: areturn\n       LineNumberTable:\n         line 135: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      38     0  this   Lorg/apache/bcel/classfile/StackMapType;\n+            0      35     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public org.apache.bcel.classfile.StackMapType copy();\n     descriptor: ()Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #99                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/bcel/classfile/StackMapType\n+         1: invokevirtual #124                // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #1                  // class org/apache/bcel/classfile/StackMapType\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -514,30 +506,30 @@\n \n   public org.apache.bcel.classfile.ConstantPool getConstantPool();\n     descriptor: ()Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         1: getfield      #38                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          4: areturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapType;\n \n   public void setConstantPool(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #25                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         2: putfield      #38                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          5: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapType;\n"}]}
