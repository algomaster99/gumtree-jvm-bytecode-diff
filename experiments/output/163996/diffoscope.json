{"diffoscope-json-version": 1, "source1": "first/UnsupportedZipFeatureException.class", "source2": "second/UnsupportedZipFeatureException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,105 +1,103 @@\n-  SHA-256 checksum 84515fb38bb2544dde012ccfab2fcf7ebc8be8ce45f06e83e210aadc216bf039\n+  SHA-256 checksum 9413baef55dfe3d890e8043e6f266317357cdd6d9510b5d365253460e176fda1\n   Compiled from \"UnsupportedZipFeatureException.java\"\n public class org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException extends java.util.zip.ZipException\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  super_class: #21                        // java/util/zip/ZipException\n-  interfaces: 0, fields: 3, methods: 5, attributes: 2\n+  this_class: #11                         // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  super_class: #12                        // java/util/zip/ZipException\n+  interfaces: 0, fields: 3, methods: 5, attributes: 3\n Constant pool:\n-   #1 = Class              #51            // java/lang/StringBuilder\n-   #2 = Methodref          #1.#52         // java/lang/StringBuilder.\"<init>\":()V\n-   #3 = String             #53            // Unsupported feature\n-   #4 = Methodref          #1.#54         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #5 = Methodref          #1.#55         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #6 = String             #56            //  used in entry\n-   #7 = Methodref          #57.#58        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-   #8 = Methodref          #1.#59         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #9 = Methodref          #21.#60        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-  #10 = Fieldref           #20.#61        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #11 = Fieldref           #20.#62        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #12 = String             #63            // Unsupported compression method\n-  #13 = Methodref          #57.#64        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #14 = Methodref          #1.#65         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #15 = String             #66            //  (\n-  #16 = Methodref          #67.#68        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n-  #17 = String             #69            // ) used in entry\n-  #18 = Fieldref           #22.#70        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #19 = String             #71            //  used in archive.\n-  #20 = Class              #72            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #21 = Class              #73            // java/util/zip/ZipException\n-  #22 = Class              #74            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #23 = Utf8               Feature\n-  #24 = Utf8               InnerClasses\n-  #25 = Utf8               reason\n-  #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #27 = Utf8               entry\n-  #28 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #29 = Utf8               serialVersionUID\n-  #30 = Utf8               J\n-  #31 = Utf8               ConstantValue\n-  #32 = Long               20161219l\n-  #34 = Utf8               <init>\n-  #35 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #36 = Utf8               Code\n-  #37 = Utf8               LineNumberTable\n-  #38 = Utf8               LocalVariableTable\n-  #39 = Utf8               this\n-  #40 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-  #41 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #42 = Utf8               method\n-  #43 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n-  #44 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n-  #45 = Utf8               getFeature\n-  #46 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #47 = Utf8               getEntry\n-  #48 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               UnsupportedZipFeatureException.java\n-  #51 = Utf8               java/lang/StringBuilder\n-  #52 = NameAndType        #34:#75        // \"<init>\":()V\n-  #53 = Utf8               Unsupported feature\n-  #54 = NameAndType        #76:#77        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #55 = NameAndType        #76:#78        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #56 = Utf8                used in entry\n-  #57 = Class              #79            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #58 = NameAndType        #80:#81        // getName:()Ljava/lang/String;\n-  #59 = NameAndType        #82:#81        // toString:()Ljava/lang/String;\n-  #60 = NameAndType        #34:#83        // \"<init>\":(Ljava/lang/String;)V\n-  #61 = NameAndType        #25:#26        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #62 = NameAndType        #27:#28        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #63 = Utf8               Unsupported compression method\n-  #64 = NameAndType        #84:#85        // getMethod:()I\n-  #65 = NameAndType        #76:#86        // append:(I)Ljava/lang/StringBuilder;\n-  #66 = Utf8                (\n-  #67 = Class              #87            // org/apache/commons/compress/archivers/zip/ZipMethod\n-  #68 = NameAndType        #88:#81        // name:()Ljava/lang/String;\n-  #69 = Utf8               ) used in entry\n-  #70 = NameAndType        #89:#26        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-  #71 = Utf8                used in archive.\n-  #72 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n-  #73 = Utf8               java/util/zip/ZipException\n-  #74 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n-  #75 = Utf8               ()V\n-  #76 = Utf8               append\n-  #77 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #78 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #79 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #80 = Utf8               getName\n-  #81 = Utf8               ()Ljava/lang/String;\n-  #82 = Utf8               toString\n-  #83 = Utf8               (Ljava/lang/String;)V\n-  #84 = Utf8               getMethod\n-  #85 = Utf8               ()I\n-  #86 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #87 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #88 = Utf8               name\n-  #89 = Utf8               METHOD\n+   #1 = Methodref          #42.#43        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+   #2 = InvokeDynamic      #0:#47         // #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+   #3 = Methodref          #12.#48        // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #4 = Fieldref           #11.#49        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+   #5 = Fieldref           #11.#50        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #6 = Methodref          #42.#51        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+   #7 = Methodref          #52.#53        // org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+   #8 = InvokeDynamic      #1:#55         // #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #9 = Fieldref           #13.#56        // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #10 = InvokeDynamic      #2:#58         // #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #11 = Class              #59            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #12 = Class              #60            // java/util/zip/ZipException\n+  #13 = Class              #61            // org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #14 = Utf8               Feature\n+  #15 = Utf8               InnerClasses\n+  #16 = Utf8               reason\n+  #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #18 = Utf8               entry\n+  #19 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #20 = Utf8               serialVersionUID\n+  #21 = Utf8               J\n+  #22 = Utf8               ConstantValue\n+  #23 = Long               20161219l\n+  #25 = Utf8               <init>\n+  #26 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #27 = Utf8               Code\n+  #28 = Utf8               LineNumberTable\n+  #29 = Utf8               LocalVariableTable\n+  #30 = Utf8               this\n+  #31 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+  #32 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #33 = Utf8               method\n+  #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n+  #35 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n+  #36 = Utf8               getFeature\n+  #37 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #38 = Utf8               getEntry\n+  #39 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #40 = Utf8               SourceFile\n+  #41 = Utf8               UnsupportedZipFeatureException.java\n+  #42 = Class              #62            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #43 = NameAndType        #63:#64        // getName:()Ljava/lang/String;\n+  #44 = Utf8               BootstrapMethods\n+  #45 = MethodHandle       6:#65          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #46 = String             #66            // Unsupported feature \\u0001 used in entry \\u0001\n+  #47 = NameAndType        #67:#68        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+  #48 = NameAndType        #25:#69        // \"<init>\":(Ljava/lang/String;)V\n+  #49 = NameAndType        #16:#17        // reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #50 = NameAndType        #18:#19        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #51 = NameAndType        #70:#71        // getMethod:()I\n+  #52 = Class              #72            // org/apache/commons/compress/archivers/zip/ZipMethod\n+  #53 = NameAndType        #73:#64        // name:()Ljava/lang/String;\n+  #54 = String             #74            // Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  #55 = NameAndType        #67:#75        // makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #56 = NameAndType        #76:#17        // METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+  #57 = String             #77            // Unsupported feature \\u0001 used in archive.\n+  #58 = NameAndType        #67:#78        // makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #59 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  #60 = Utf8               java/util/zip/ZipException\n+  #61 = Utf8               org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature\n+  #62 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #63 = Utf8               getName\n+  #64 = Utf8               ()Ljava/lang/String;\n+  #65 = Methodref          #79.#80        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #66 = Utf8               Unsupported feature \\u0001 used in entry \\u0001\n+  #67 = Utf8               makeConcatWithConstants\n+  #68 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+  #69 = Utf8               (Ljava/lang/String;)V\n+  #70 = Utf8               getMethod\n+  #71 = Utf8               ()I\n+  #72 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #73 = Utf8               name\n+  #74 = Utf8               Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  #75 = Utf8               (ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #76 = Utf8               METHOD\n+  #77 = Utf8               Unsupported feature \\u0001 used in archive.\n+  #78 = Utf8               (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+  #79 = Class              #81            // java/lang/invoke/StringConcatFactory\n+  #80 = NameAndType        #67:#84        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #81 = Utf8               java/lang/invoke/StringConcatFactory\n+  #82 = Class              #86            // java/lang/invoke/MethodHandles$Lookup\n+  #83 = Utf8               Lookup\n+  #84 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #85 = Class              #87            // java/lang/invoke/MethodHandles\n+  #86 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #87 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature reason;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final transient org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -112,152 +110,134 @@\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature, org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: new           #1                  // class java/lang/StringBuilder\n-         4: dup\n-         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         8: ldc           #3                  // String Unsupported feature\n-        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        13: aload_1\n-        14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        17: ldc           #6                  // String  used in entry\n-        19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: aload_2\n-        23: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-        26: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        32: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        35: aload_0\n-        36: aload_1\n-        37: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        40: aload_0\n-        41: aload_2\n-        42: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        45: return\n+         1: aload_1\n+         2: aload_2\n+         3: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+         6: invokedynamic #2,  0              // InvokeDynamic #0:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;Ljava/lang/String;)Ljava/lang/String;\n+        11: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        14: aload_0\n+        15: aload_1\n+        16: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        19: aload_0\n+        20: aload_2\n+        21: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        24: return\n       LineNumberTable:\n         line 41: 0\n-        line 42: 23\n-        line 41: 32\n-        line 43: 35\n-        line 44: 40\n-        line 45: 45\n+        line 42: 3\n+        line 41: 11\n+        line 43: 14\n+        line 44: 19\n+        line 45: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      46     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      46     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-            0      46     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      25     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      25     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+            0      25     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.ZipMethod, org.apache.commons.compress.archivers.zip.ZipArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipMethod;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=3, args_size=3\n+      stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #1                  // class java/lang/StringBuilder\n-         4: dup\n-         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         8: ldc           #12                 // String Unsupported compression method\n-        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        13: aload_2\n-        14: invokevirtual #13                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-        17: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        20: ldc           #15                 // String  (\n-        22: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: aload_1\n-        26: invokevirtual #16                 // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n-        29: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        32: ldc           #17                 // String ) used in entry\n-        34: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        37: aload_2\n-        38: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n-        41: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        44: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        47: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        50: aload_0\n-        51: getstatic     #18                 // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        54: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        57: aload_0\n-        58: aload_2\n-        59: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        62: return\n+         1: aload_2\n+         2: invokevirtual #6                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+         5: aload_1\n+         6: invokevirtual #7                  // Method org/apache/commons/compress/archivers/zip/ZipMethod.name:()Ljava/lang/String;\n+         9: aload_2\n+        10: invokevirtual #1                  // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getName:()Ljava/lang/String;\n+        13: invokedynamic #8,  0              // InvokeDynamic #1:makeConcatWithConstants:(ILjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        18: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        21: aload_0\n+        22: getstatic     #9                  // Field org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature.METHOD:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        25: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        28: aload_0\n+        29: aload_2\n+        30: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        33: return\n       LineNumberTable:\n         line 56: 0\n-        line 57: 26\n-        line 56: 47\n-        line 58: 50\n-        line 59: 57\n-        line 60: 62\n+        line 57: 6\n+        line 56: 18\n+        line 58: 21\n+        line 59: 28\n+        line 60: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      63     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      63     1 method   Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n-            0      63     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+            0      34     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      34     1 method   Lorg/apache/commons/compress/archivers/zip/ZipMethod;\n+            0      34     2 entry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException(org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=3, locals=2, args_size=2\n+      stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: new           #1                  // class java/lang/StringBuilder\n-         4: dup\n-         5: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n-         8: ldc           #3                  // String Unsupported feature\n-        10: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        13: aload_1\n-        14: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        17: ldc           #19                 // String  used in archive.\n-        19: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        25: invokespecial #9                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        28: aload_0\n-        29: aload_1\n-        30: putfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n-        33: aload_0\n-        34: aconst_null\n-        35: putfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        38: return\n+         1: aload_1\n+         2: invokedynamic #10,  0             // InvokeDynamic #2:makeConcatWithConstants:(Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;)Ljava/lang/String;\n+         7: invokespecial #3                  // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        10: aload_0\n+        11: aload_1\n+        12: putfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+        15: aload_0\n+        16: aconst_null\n+        17: putfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        20: return\n       LineNumberTable:\n         line 70: 0\n-        line 71: 28\n-        line 72: 33\n-        line 73: 38\n+        line 71: 10\n+        line 72: 15\n+        line 73: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      39     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n-            0      39     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+            0      21     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n+            0      21     1 reason   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n \n   public org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException$Feature getFeature();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n+         1: getfield      #4                  // Field reason:Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature;\n          4: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n \n   public org.apache.commons.compress.archivers.zip.ZipArchiveEntry getEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #5                  // Field entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 88: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException;\n }\n SourceFile: \"UnsupportedZipFeatureException.java\"\n InnerClasses:\n-  public static #23= #22 of #20;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  public static #14= #13 of #11;          // Feature=class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException$Feature of class org/apache/commons/compress/archivers/zip/UnsupportedZipFeatureException\n+  public static final #83= #82 of #85;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #46 Unsupported feature \\u0001 used in entry \\u0001\n+  1: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #54 Unsupported compression method \\u0001 (\\u0001) used in entry \\u0001\n+  2: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #57 Unsupported feature \\u0001 used in archive.\n"}]}
