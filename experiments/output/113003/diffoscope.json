{"diffoscope-json-version": 1, "source1": "first/Field.class", "source2": "second/Field.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,14 +8,20 @@\n \n public final class Field extends FieldOrMethod\n {\n     public static final Field[] EMPTY_ARRAY;\n     private static BCELComparator bcelComparator;\n     static final Field[] EMPTY_FIELD_ARRAY;\n     \n+    static {\n+        EMPTY_ARRAY = new Field[0];\n+        Field.bcelComparator = (BCELComparator)new Field.Field$1();\n+        EMPTY_FIELD_ARRAY = new Field[0];\n+    }\n+    \n     public static BCELComparator getComparator() {\n         return Field.bcelComparator;\n     }\n     \n     public static void setComparator(final BCELComparator comparator) {\n         Field.bcelComparator = comparator;\n     }\n@@ -41,15 +47,17 @@\n     }\n     \n     public boolean equals(final Object obj) {\n         return Field.bcelComparator.equals((Object)this, obj);\n     }\n     \n     public ConstantValue getConstantValue() {\n-        for (final Attribute attribute : super.getAttributes()) {\n+        Attribute[] attributes;\n+        for (int length = (attributes = super.getAttributes()).length, i = 0; i < length; ++i) {\n+            final Attribute attribute = attributes[i];\n             if (attribute.getTag() == 1) {\n                 return (ConstantValue)attribute;\n             }\n         }\n         return null;\n     }\n     \n@@ -59,30 +67,26 @@\n     \n     public int hashCode() {\n         return Field.bcelComparator.hashCode((Object)this);\n     }\n     \n     public String toString() {\n         String access = Utility.accessToString(super.getAccessFlags());\n-        access = (access.isEmpty() ? \"\" : (access + \" \"));\n+        access = (access.isEmpty() ? \"\" : (String.valueOf(access) + \" \"));\n         final String signature = Utility.signatureToString(this.getSignature());\n         final String name = this.getName();\n         final StringBuilder buf = new StringBuilder(64);\n         buf.append(access).append(signature).append(\" \").append(name);\n         final ConstantValue cv = this.getConstantValue();\n         if (cv != null) {\n             buf.append(\" = \").append(cv);\n         }\n-        for (final Attribute attribute : super.getAttributes()) {\n+        Attribute[] attributes;\n+        for (int length = (attributes = super.getAttributes()).length, i = 0; i < length; ++i) {\n+            final Attribute attribute = attributes[i];\n             if (!(attribute instanceof ConstantValue)) {\n                 buf.append(\" [\").append(attribute).append(\"]\");\n             }\n         }\n         return buf.toString();\n     }\n-    \n-    static {\n-        EMPTY_ARRAY = new Field[0];\n-        Field.bcelComparator = (BCELComparator)new Field.Field$1();\n-        EMPTY_FIELD_ARRAY = new Field[0];\n-    }\n }\n"}]}
