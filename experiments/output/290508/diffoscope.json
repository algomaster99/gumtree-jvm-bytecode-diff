{"diffoscope-json-version": 1, "source1": "first/ProxyCollectionWriter.class", "source2": "second/ProxyCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,97 +1,96 @@\n-  SHA-256 checksum 760cff6fd212ec9fb117e88025d31c873bd68555975fc6b0d218c51301a84616\n+  SHA-256 checksum ca1ae7bc6ad9bf75e790b16e66dfc882fbe0089cd01360ee703eb0dd20a171e5\n   Compiled from \"ProxyCollectionWriter.java\"\n public class org.apache.commons.io.output.ProxyCollectionWriter extends org.apache.commons.io.output.FilterCollectionWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/io/output/ProxyCollectionWriter\n   super_class: #23                        // org/apache/commons/io/output/FilterCollectionWriter\n   interfaces: 0, fields: 0, methods: 18, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#56        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n-   #2 = Methodref          #23.#57        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n-   #3 = Methodref          #22.#58        // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n-   #4 = Methodref          #23.#59        // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #5 = Methodref          #22.#60        // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n-   #6 = Class              #61            // java/io/IOException\n-   #7 = Methodref          #22.#62        // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n-   #8 = Methodref          #63.#64        // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-   #9 = Methodref          #23.#65        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #10 = Methodref          #23.#66        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #11 = Methodref          #23.#67        // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n-  #12 = Methodref          #23.#68        // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n-  #13 = Methodref          #63.#69        // org/apache/commons/io/IOUtils.length:([C)I\n-  #14 = Methodref          #23.#70        // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n-  #15 = Methodref          #23.#71        // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n-  #16 = Methodref          #23.#72        // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n-  #17 = Methodref          #23.#73        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n-  #18 = Methodref          #23.#74        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n-  #19 = Methodref          #22.#59        // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n-  #20 = Methodref          #22.#66        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #21 = Methodref          #22.#65        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #22 = Class              #75            // org/apache/commons/io/output/ProxyCollectionWriter\n-  #23 = Class              #76            // org/apache/commons/io/output/FilterCollectionWriter\n+   #1 = Methodref          #23.#55        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n+   #2 = Methodref          #23.#56        // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n+   #3 = Methodref          #22.#57        // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n+   #4 = Methodref          #23.#58        // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+   #5 = Methodref          #22.#59        // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n+   #6 = Class              #60            // java/io/IOException\n+   #7 = Methodref          #22.#61        // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n+   #8 = Methodref          #62.#63        // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+   #9 = Methodref          #23.#64        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #10 = Methodref          #23.#65        // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #11 = Methodref          #23.#66        // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n+  #12 = Methodref          #23.#67        // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n+  #13 = Methodref          #62.#68        // org/apache/commons/io/IOUtils.length:([C)I\n+  #14 = Methodref          #23.#69        // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n+  #15 = Methodref          #23.#70        // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n+  #16 = Methodref          #23.#71        // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n+  #17 = Methodref          #23.#72        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n+  #18 = Methodref          #23.#73        // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n+  #19 = Methodref          #22.#58        // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n+  #20 = Methodref          #22.#65        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #21 = Methodref          #22.#64        // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #22 = Class              #74            // org/apache/commons/io/output/ProxyCollectionWriter\n+  #23 = Class              #75            // org/apache/commons/io/output/FilterCollectionWriter\n   #24 = Utf8               <init>\n   #25 = Utf8               (Ljava/util/Collection;)V\n   #26 = Utf8               Code\n   #27 = Utf8               LineNumberTable\n   #28 = Utf8               Signature\n   #29 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n   #30 = Utf8               ([Ljava/io/Writer;)V\n   #31 = Utf8               afterWrite\n   #32 = Utf8               (I)V\n   #33 = Utf8               Exceptions\n   #34 = Utf8               append\n   #35 = Utf8               (C)Ljava/io/Writer;\n   #36 = Utf8               StackMapTable\n-  #37 = Class              #61            // java/io/IOException\n-  #38 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #39 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #40 = Utf8               beforeWrite\n-  #41 = Utf8               close\n-  #42 = Utf8               ()V\n-  #43 = Utf8               flush\n-  #44 = Utf8               handleIOException\n-  #45 = Utf8               (Ljava/io/IOException;)V\n-  #46 = Utf8               write\n-  #47 = Utf8               ([C)V\n-  #48 = Utf8               ([CII)V\n-  #49 = Utf8               (Ljava/lang/String;)V\n-  #50 = Utf8               (Ljava/lang/String;II)V\n-  #51 = Utf8               (C)Ljava/lang/Appendable;\n-  #52 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #53 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #54 = Utf8               SourceFile\n-  #55 = Utf8               ProxyCollectionWriter.java\n-  #56 = NameAndType        #24:#25        // \"<init>\":(Ljava/util/Collection;)V\n-  #57 = NameAndType        #24:#30        // \"<init>\":([Ljava/io/Writer;)V\n-  #58 = NameAndType        #40:#32        // beforeWrite:(I)V\n-  #59 = NameAndType        #34:#35        // append:(C)Ljava/io/Writer;\n-  #60 = NameAndType        #31:#32        // afterWrite:(I)V\n-  #61 = Utf8               java/io/IOException\n-  #62 = NameAndType        #44:#45        // handleIOException:(Ljava/io/IOException;)V\n-  #63 = Class              #77            // org/apache/commons/io/IOUtils\n-  #64 = NameAndType        #78:#79        // length:(Ljava/lang/CharSequence;)I\n-  #65 = NameAndType        #34:#38        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #66 = NameAndType        #34:#39        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #67 = NameAndType        #41:#42        // close:()V\n-  #68 = NameAndType        #43:#42        // flush:()V\n-  #69 = NameAndType        #78:#80        // length:([C)I\n-  #70 = NameAndType        #46:#47        // write:([C)V\n-  #71 = NameAndType        #46:#48        // write:([CII)V\n-  #72 = NameAndType        #46:#32        // write:(I)V\n-  #73 = NameAndType        #46:#49        // write:(Ljava/lang/String;)V\n-  #74 = NameAndType        #46:#50        // write:(Ljava/lang/String;II)V\n-  #75 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n-  #76 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-  #77 = Utf8               org/apache/commons/io/IOUtils\n-  #78 = Utf8               length\n-  #79 = Utf8               (Ljava/lang/CharSequence;)I\n-  #80 = Utf8               ([C)I\n+  #37 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #38 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #39 = Utf8               beforeWrite\n+  #40 = Utf8               close\n+  #41 = Utf8               ()V\n+  #42 = Utf8               flush\n+  #43 = Utf8               handleIOException\n+  #44 = Utf8               (Ljava/io/IOException;)V\n+  #45 = Utf8               write\n+  #46 = Utf8               ([C)V\n+  #47 = Utf8               ([CII)V\n+  #48 = Utf8               (Ljava/lang/String;)V\n+  #49 = Utf8               (Ljava/lang/String;II)V\n+  #50 = Utf8               (C)Ljava/lang/Appendable;\n+  #51 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #52 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #53 = Utf8               SourceFile\n+  #54 = Utf8               ProxyCollectionWriter.java\n+  #55 = NameAndType        #24:#25        // \"<init>\":(Ljava/util/Collection;)V\n+  #56 = NameAndType        #24:#30        // \"<init>\":([Ljava/io/Writer;)V\n+  #57 = NameAndType        #39:#32        // beforeWrite:(I)V\n+  #58 = NameAndType        #34:#35        // append:(C)Ljava/io/Writer;\n+  #59 = NameAndType        #31:#32        // afterWrite:(I)V\n+  #60 = Utf8               java/io/IOException\n+  #61 = NameAndType        #43:#44        // handleIOException:(Ljava/io/IOException;)V\n+  #62 = Class              #76            // org/apache/commons/io/IOUtils\n+  #63 = NameAndType        #77:#78        // length:(Ljava/lang/CharSequence;)I\n+  #64 = NameAndType        #34:#37        // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #65 = NameAndType        #34:#38        // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #66 = NameAndType        #40:#41        // close:()V\n+  #67 = NameAndType        #42:#41        // flush:()V\n+  #68 = NameAndType        #77:#79        // length:([C)I\n+  #69 = NameAndType        #45:#46        // write:([C)V\n+  #70 = NameAndType        #45:#47        // write:([CII)V\n+  #71 = NameAndType        #45:#32        // write:(I)V\n+  #72 = NameAndType        #45:#48        // write:(Ljava/lang/String;)V\n+  #73 = NameAndType        #45:#49        // write:(Ljava/lang/String;II)V\n+  #74 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n+  #75 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+  #76 = Utf8               org/apache/commons/io/IOUtils\n+  #77 = Utf8               length\n+  #78 = Utf8               (Ljava/lang/CharSequence;)I\n+  #79 = Utf8               ([C)I\n {\n   public org.apache.commons.io.output.ProxyCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
