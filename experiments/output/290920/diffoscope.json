{"diffoscope-json-version": 1, "source1": "first/SuffixFileFilter.class", "source2": "second/SuffixFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,51 +1,51 @@\n-  SHA-256 checksum 9207e0c40adf76daafdfc45945e957157f140a92508585a8d31c84f988ca3cb0\n+  SHA-256 checksum 34a4b04a5e7820cdd245e1f0390336382d781bc04fcc65b1f8eec07e8b5e552f\n   Compiled from \"SuffixFileFilter.java\"\n public class org.apache.commons.io.filefilter.SuffixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #32                         // org/apache/commons/io/filefilter/SuffixFileFilter\n   super_class: #33                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #71.#72       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #32.#73       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-    #3 = Methodref          #33.#74       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #4 = Class              #75           // java/lang/IllegalArgumentException\n-    #5 = String             #76           // The list of suffixes must not be null\n-    #6 = Methodref          #4.#77        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Fieldref           #32.#78       // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-    #8 = InterfaceMethodref #79.#80       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Fieldref           #53.#68       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #32.#69       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+    #3 = Methodref          #33.#70       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #4 = Class              #71           // java/lang/IllegalArgumentException\n+    #5 = String             #72           // The list of suffixes must not be null\n+    #6 = Methodref          #4.#73        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #7 = Fieldref           #32.#74       // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+    #8 = InterfaceMethodref #52.#75       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n     #9 = Class              #41           // \"[Ljava/lang/String;\"\n-   #10 = Fieldref           #32.#81       // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n-   #11 = Fieldref           #32.#82       // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #12 = Methodref          #32.#83       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #13 = Methodref          #32.#84       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #14 = String             #85           // The suffix must not be null\n-   #15 = Class              #86           // java/lang/String\n-   #16 = String             #87           // The array of suffixes must not be null\n-   #17 = Methodref          #88.#89       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #18 = Methodref          #90.#91       // java/io/File.getName:()Ljava/lang/String;\n-   #19 = Methodref          #32.#92       // org/apache/commons/io/filefilter/SuffixFileFilter.accept:(Ljava/lang/String;)Z\n-   #20 = InterfaceMethodref #93.#94       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #21 = Methodref          #95.#96       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #22 = Methodref          #32.#97       // org/apache/commons/io/filefilter/SuffixFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #23 = Methodref          #71.#98       // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #24 = Class              #99           // java/lang/StringBuilder\n-   #25 = Methodref          #24.#74       // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = Methodref          #33.#100      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #27 = Methodref          #24.#101      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = String             #102          // (\n-   #29 = String             #103          // ,\n-   #30 = String             #104          // )\n-   #31 = Methodref          #24.#100      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #32 = Class              #105          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #33 = Class              #106          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #34 = Class              #107          // java/io/Serializable\n+   #10 = Fieldref           #32.#76       // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n+   #11 = Fieldref           #32.#77       // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #12 = Methodref          #32.#78       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #13 = Methodref          #32.#79       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #14 = String             #80           // The suffix must not be null\n+   #15 = Class              #81           // java/lang/String\n+   #16 = String             #82           // The array of suffixes must not be null\n+   #17 = Methodref          #83.#84       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #18 = Methodref          #85.#86       // java/io/File.getName:()Ljava/lang/String;\n+   #19 = Methodref          #32.#87       // org/apache/commons/io/filefilter/SuffixFileFilter.accept:(Ljava/lang/String;)Z\n+   #20 = InterfaceMethodref #88.#89       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #21 = Methodref          #90.#91       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #22 = Methodref          #32.#92       // org/apache/commons/io/filefilter/SuffixFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #23 = Methodref          #53.#93       // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #24 = Class              #94           // java/lang/StringBuilder\n+   #25 = Methodref          #24.#70       // java/lang/StringBuilder.\"<init>\":()V\n+   #26 = Methodref          #33.#95       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #27 = Methodref          #24.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #28 = String             #97           // (\n+   #29 = String             #98           // ,\n+   #30 = String             #99           // )\n+   #31 = Methodref          #24.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #32 = Class              #100          // org/apache/commons/io/filefilter/SuffixFileFilter\n+   #33 = Class              #101          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #34 = Class              #102          // java/io/Serializable\n    #35 = Utf8               serialVersionUID\n    #36 = Utf8               J\n    #37 = Utf8               ConstantValue\n    #38 = Long               -3389157631240246157l\n    #40 = Utf8               suffixes\n    #41 = Utf8               [Ljava/lang/String;\n    #42 = Utf8               caseSensitivity\n@@ -54,93 +54,88 @@\n    #45 = Utf8               (Ljava/util/List;)V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               Signature\n    #49 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n    #50 = Utf8               (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n    #51 = Utf8               StackMapTable\n-   #52 = Class              #105          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #53 = Class              #108          // java/util/List\n-   #54 = Class              #109          // org/apache/commons/io/IOCase\n-   #55 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n-   #56 = Utf8               (Ljava/lang/String;)V\n-   #57 = Utf8               ([Ljava/lang/String;)V\n-   #58 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #59 = Class              #86           // java/lang/String\n-   #60 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #61 = Utf8               accept\n-   #62 = Utf8               (Ljava/io/File;)Z\n-   #63 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #64 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #65 = Utf8               (Ljava/lang/String;)Z\n-   #66 = Utf8               toString\n-   #67 = Utf8               ()Ljava/lang/String;\n-   #68 = Class              #99           // java/lang/StringBuilder\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               SuffixFileFilter.java\n-   #71 = Class              #109          // org/apache/commons/io/IOCase\n-   #72 = NameAndType        #110:#43      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #73 = NameAndType        #44:#50       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #74 = NameAndType        #44:#111      // \"<init>\":()V\n-   #75 = Utf8               java/lang/IllegalArgumentException\n-   #76 = Utf8               The list of suffixes must not be null\n-   #77 = NameAndType        #44:#56       // \"<init>\":(Ljava/lang/String;)V\n-   #78 = NameAndType        #112:#41      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #79 = Class              #108          // java/util/List\n-   #80 = NameAndType        #113:#114     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #81 = NameAndType        #40:#41       // suffixes:[Ljava/lang/String;\n-   #82 = NameAndType        #42:#43       // caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #83 = NameAndType        #44:#58       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #84 = NameAndType        #44:#60       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #85 = Utf8               The suffix must not be null\n-   #86 = Utf8               java/lang/String\n-   #87 = Utf8               The array of suffixes must not be null\n-   #88 = Class              #115          // java/lang/System\n-   #89 = NameAndType        #116:#117     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #90 = Class              #118          // java/io/File\n-   #91 = NameAndType        #119:#67      // getName:()Ljava/lang/String;\n-   #92 = NameAndType        #61:#65       // accept:(Ljava/lang/String;)Z\n-   #93 = Class              #120          // java/nio/file/Path\n-   #94 = NameAndType        #121:#122     // getFileName:()Ljava/nio/file/Path;\n-   #95 = Class              #123          // java/util/Objects\n-   #96 = NameAndType        #66:#124      // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #97 = NameAndType        #125:#126     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #98 = NameAndType        #127:#128     // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #99 = Utf8               java/lang/StringBuilder\n-  #100 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-  #101 = NameAndType        #129:#130     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #102 = Utf8               (\n-  #103 = Utf8               ,\n-  #104 = Utf8               )\n-  #105 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n-  #106 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #107 = Utf8               java/io/Serializable\n-  #108 = Utf8               java/util/List\n-  #109 = Utf8               org/apache/commons/io/IOCase\n-  #110 = Utf8               SENSITIVE\n-  #111 = Utf8               ()V\n-  #112 = Utf8               EMPTY_STRING_ARRAY\n-  #113 = Utf8               toArray\n-  #114 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #115 = Utf8               java/lang/System\n-  #116 = Utf8               arraycopy\n-  #117 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #118 = Utf8               java/io/File\n-  #119 = Utf8               getName\n-  #120 = Utf8               java/nio/file/Path\n-  #121 = Utf8               getFileName\n-  #122 = Utf8               ()Ljava/nio/file/Path;\n-  #123 = Utf8               java/util/Objects\n-  #124 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #125 = Utf8               toFileVisitResult\n-  #126 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #127 = Utf8               checkEndsWith\n-  #128 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #129 = Utf8               append\n-  #130 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Class              #103          // java/util/List\n+   #53 = Class              #104          // org/apache/commons/io/IOCase\n+   #54 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+   #55 = Utf8               (Ljava/lang/String;)V\n+   #56 = Utf8               ([Ljava/lang/String;)V\n+   #57 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #58 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #59 = Utf8               accept\n+   #60 = Utf8               (Ljava/io/File;)Z\n+   #61 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #62 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #63 = Utf8               (Ljava/lang/String;)Z\n+   #64 = Utf8               toString\n+   #65 = Utf8               ()Ljava/lang/String;\n+   #66 = Utf8               SourceFile\n+   #67 = Utf8               SuffixFileFilter.java\n+   #68 = NameAndType        #105:#43      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #69 = NameAndType        #44:#50       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #70 = NameAndType        #44:#106      // \"<init>\":()V\n+   #71 = Utf8               java/lang/IllegalArgumentException\n+   #72 = Utf8               The list of suffixes must not be null\n+   #73 = NameAndType        #44:#55       // \"<init>\":(Ljava/lang/String;)V\n+   #74 = NameAndType        #107:#41      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #75 = NameAndType        #108:#109     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #76 = NameAndType        #40:#41       // suffixes:[Ljava/lang/String;\n+   #77 = NameAndType        #42:#43       // caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #78 = NameAndType        #44:#57       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #79 = NameAndType        #44:#58       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #80 = Utf8               The suffix must not be null\n+   #81 = Utf8               java/lang/String\n+   #82 = Utf8               The array of suffixes must not be null\n+   #83 = Class              #110          // java/lang/System\n+   #84 = NameAndType        #111:#112     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #85 = Class              #113          // java/io/File\n+   #86 = NameAndType        #114:#65      // getName:()Ljava/lang/String;\n+   #87 = NameAndType        #59:#63       // accept:(Ljava/lang/String;)Z\n+   #88 = Class              #115          // java/nio/file/Path\n+   #89 = NameAndType        #116:#117     // getFileName:()Ljava/nio/file/Path;\n+   #90 = Class              #118          // java/util/Objects\n+   #91 = NameAndType        #64:#119      // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #92 = NameAndType        #120:#121     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #93 = NameAndType        #122:#123     // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = NameAndType        #64:#65       // toString:()Ljava/lang/String;\n+   #96 = NameAndType        #124:#125     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = Utf8               (\n+   #98 = Utf8               ,\n+   #99 = Utf8               )\n+  #100 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n+  #101 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #102 = Utf8               java/io/Serializable\n+  #103 = Utf8               java/util/List\n+  #104 = Utf8               org/apache/commons/io/IOCase\n+  #105 = Utf8               SENSITIVE\n+  #106 = Utf8               ()V\n+  #107 = Utf8               EMPTY_STRING_ARRAY\n+  #108 = Utf8               toArray\n+  #109 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #110 = Utf8               java/lang/System\n+  #111 = Utf8               arraycopy\n+  #112 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #113 = Utf8               java/io/File\n+  #114 = Utf8               getName\n+  #115 = Utf8               java/nio/file/Path\n+  #116 = Utf8               getFileName\n+  #117 = Utf8               ()Ljava/nio/file/Path;\n+  #118 = Utf8               java/util/Objects\n+  #119 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #120 = Utf8               toFileVisitResult\n+  #121 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #122 = Utf8               checkEndsWith\n+  #123 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #124 = Utf8               append\n+  #125 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = -3389157631240246157l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -3389157631240246157l\n \n   private final java.lang.String[] suffixes;\n@@ -208,15 +203,15 @@\n           stack = []\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class java/util/List, class org/apache/commons/io/IOCase ]\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class org/apache/commons/io/IOCase ]\n-    Signature: #55                          // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+    Signature: #54                          // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n"}]}
