{"diffoscope-json-version": 1, "source1": "first/NumberUtils.class", "source2": "second/NumberUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,473 +1,473 @@\n-  SHA-256 checksum 453341a80ac221dbb1164c44625e6b88997227c54474c7521313dca4f7d296d3\n+  SHA-256 checksum 511835e1ee247d36b512614e67d0f8c32a091ab4929898c8288505f114a34387\n   Compiled from \"NumberUtils.java\"\n public class org.apache.commons.lang3.math.NumberUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #135                        // org/apache/commons/lang3/math/NumberUtils\n-  super_class: #92                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/math/NumberUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 19, methods: 68, attributes: 1\n Constant pool:\n-    #1 = Methodref          #92.#249      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #135.#250     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n-    #3 = Methodref          #251.#252     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #4 = Class              #253          // java/lang/NumberFormatException\n-    #5 = Methodref          #135.#254     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n-    #6 = Methodref          #255.#256     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-    #7 = Methodref          #135.#257     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n-    #8 = Methodref          #89.#258      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-    #9 = Methodref          #135.#259     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n-   #10 = Methodref          #85.#260      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #11 = Methodref          #135.#261     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n-   #12 = Methodref          #81.#262      // java/math/BigDecimal.doubleValue:()D\n-   #13 = Methodref          #135.#263     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n-   #14 = Methodref          #264.#265     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-   #15 = Methodref          #135.#266     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n-   #16 = Methodref          #267.#268     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n-   #17 = Fieldref           #135.#269     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n-   #18 = Methodref          #251.#270     // java/lang/Integer.intValue:()I\n-   #19 = Fieldref           #189.#271     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-   #20 = Methodref          #135.#272     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #21 = Fieldref           #81.#273      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #22 = Methodref          #81.#274      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #23 = Methodref          #135.#275     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #24 = Methodref          #89.#276      // java/lang/Float.floatValue:()F\n-   #25 = Methodref          #81.#277      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-   #26 = Methodref          #135.#278     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #27 = Methodref          #85.#262      // java/lang/Double.doubleValue:()D\n-   #28 = Methodref          #135.#279     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #29 = Methodref          #135.#280     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #30 = Methodref          #281.#282     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #31 = String             #283          // A blank string is not a valid number\n-   #32 = Methodref          #4.#284       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Class              #285          // java/lang/String\n-   #34 = String             #286          // 0x\n-   #35 = String             #287          // 0X\n-   #36 = String             #288          // -0x\n-   #37 = String             #289          // -0X\n-   #38 = String             #290          // #\n-   #39 = String             #291          // -#\n-   #40 = Methodref          #33.#292      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #41 = Methodref          #33.#293      // java/lang/String.length:()I\n-   #42 = Methodref          #33.#294      // java/lang/String.charAt:(I)C\n-   #43 = Methodref          #135.#295     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #44 = Methodref          #135.#296     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-   #45 = Methodref          #135.#297     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #46 = Methodref          #33.#298      // java/lang/String.indexOf:(I)I\n-   #47 = Class              #299          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#249      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = Methodref          #47.#300      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = String             #301          //  is not a valid number.\n-   #51 = Methodref          #47.#302      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #33.#303      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #53 = Methodref          #33.#304      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #54 = Methodref          #135.#305     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-   #55 = Methodref          #135.#306     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-   #56 = Methodref          #307.#308     // java/lang/Character.isDigit:(C)Z\n-   #57 = Methodref          #135.#309     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n-   #58 = Methodref          #33.#310      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #135.#311     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n-   #60 = Methodref          #135.#312     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-   #61 = Methodref          #89.#313      // java/lang/Float.isInfinite:()Z\n-   #62 = Methodref          #135.#314     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-   #63 = Methodref          #85.#313      // java/lang/Double.isInfinite:()Z\n-   #64 = Methodref          #85.#276      // java/lang/Double.floatValue:()F\n-   #65 = Methodref          #89.#302      // java/lang/Float.toString:()Ljava/lang/String;\n-   #66 = Methodref          #85.#302      // java/lang/Double.toString:()Ljava/lang/String;\n-   #67 = Methodref          #33.#315      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #68 = Methodref          #81.#316      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n-   #69 = Methodref          #89.#317      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-   #70 = Methodref          #85.#318      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-   #71 = Methodref          #251.#319     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #72 = Methodref          #255.#320     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n-   #73 = String             #321          // -\n-   #74 = Methodref          #33.#322      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-   #75 = String             #323          // 0\n-   #76 = Class              #324          // java/math/BigInteger\n-   #77 = Methodref          #76.#325      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-   #78 = Methodref          #76.#326      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-   #79 = Methodref          #33.#327      // java/lang/String.trim:()Ljava/lang/String;\n-   #80 = String             #328          // --\n-   #81 = Class              #329          // java/math/BigDecimal\n-   #82 = Methodref          #81.#284      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-   #83 = Methodref          #135.#330     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n-   #84 = Methodref          #85.#331      // java/lang/Double.isNaN:(D)Z\n-   #85 = Class              #332          // java/lang/Double\n-   #86 = Double             NaNd\n-   #88 = Methodref          #89.#333      // java/lang/Float.isNaN:(F)Z\n-   #89 = Class              #334          // java/lang/Float\n-   #90 = Float              NaNf\n-   #91 = String             #335          // The Array must not be null\n-   #92 = Class              #336          // java/lang/Object\n-   #93 = Methodref          #337.#338     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #94 = Methodref          #339.#340     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-   #95 = String             #341          // Array cannot be empty.\n-   #96 = Methodref          #342.#343     // java/lang/Math.min:(DD)D\n-   #97 = Methodref          #342.#344     // java/lang/Math.min:(FF)F\n-   #98 = Methodref          #342.#345     // java/lang/Math.max:(DD)D\n-   #99 = Methodref          #342.#346     // java/lang/Math.max:(FF)F\n-  #100 = Methodref          #281.#347     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-  #101 = Methodref          #135.#348     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n-  #102 = Methodref          #281.#349     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-  #103 = Methodref          #33.#350      // java/lang/String.toCharArray:()[C\n-  #104 = Methodref          #281.#351     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n-  #105 = Methodref          #135.#352     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #106 = Methodref          #255.#353     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #107 = Fieldref           #135.#354     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n-  #108 = Fieldref           #135.#355     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n-  #109 = Long               -1l\n-  #111 = Fieldref           #135.#356     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n-  #112 = Methodref          #251.#357     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #113 = Fieldref           #135.#358     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-  #114 = Fieldref           #135.#359     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-  #115 = Fieldref           #135.#360     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #116 = Methodref          #267.#361     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-  #117 = Fieldref           #135.#362     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n-  #118 = Fieldref           #135.#363     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n-  #119 = Fieldref           #135.#364     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #120 = Methodref          #264.#365     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-  #121 = Fieldref           #135.#366     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n-  #122 = Fieldref           #135.#367     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n-  #123 = Fieldref           #135.#368     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #124 = Methodref          #85.#369      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-  #125 = Fieldref           #135.#370     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n-  #126 = Fieldref           #135.#371     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n-  #127 = Double             -1.0d\n-  #129 = Fieldref           #135.#372     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #130 = Methodref          #89.#373      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-  #131 = Fieldref           #135.#374     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n-  #132 = Fieldref           #135.#375     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n-  #133 = Float              -1.0f\n-  #134 = Fieldref           #135.#376     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #135 = Class              #377          // org/apache/commons/lang3/math/NumberUtils\n-  #136 = Utf8               LONG_ZERO\n-  #137 = Utf8               Ljava/lang/Long;\n-  #138 = Utf8               LONG_ONE\n-  #139 = Utf8               LONG_MINUS_ONE\n-  #140 = Utf8               INTEGER_ZERO\n-  #141 = Utf8               Ljava/lang/Integer;\n-  #142 = Utf8               INTEGER_ONE\n-  #143 = Utf8               INTEGER_TWO\n-  #144 = Utf8               INTEGER_MINUS_ONE\n-  #145 = Utf8               SHORT_ZERO\n-  #146 = Utf8               Ljava/lang/Short;\n-  #147 = Utf8               SHORT_ONE\n-  #148 = Utf8               SHORT_MINUS_ONE\n-  #149 = Utf8               BYTE_ZERO\n-  #150 = Utf8               Ljava/lang/Byte;\n-  #151 = Utf8               BYTE_ONE\n-  #152 = Utf8               BYTE_MINUS_ONE\n-  #153 = Utf8               DOUBLE_ZERO\n-  #154 = Utf8               Ljava/lang/Double;\n-  #155 = Utf8               DOUBLE_ONE\n-  #156 = Utf8               DOUBLE_MINUS_ONE\n-  #157 = Utf8               FLOAT_ZERO\n-  #158 = Utf8               Ljava/lang/Float;\n-  #159 = Utf8               FLOAT_ONE\n-  #160 = Utf8               FLOAT_MINUS_ONE\n-  #161 = Utf8               <init>\n-  #162 = Utf8               ()V\n-  #163 = Utf8               Code\n-  #164 = Utf8               LineNumberTable\n-  #165 = Utf8               toInt\n-  #166 = Utf8               (Ljava/lang/String;)I\n-  #167 = Utf8               (Ljava/lang/String;I)I\n-  #168 = Utf8               StackMapTable\n-  #169 = Utf8               toLong\n-  #170 = Utf8               (Ljava/lang/String;)J\n-  #171 = Utf8               (Ljava/lang/String;J)J\n-  #172 = Utf8               toFloat\n-  #173 = Utf8               (Ljava/lang/String;)F\n-  #174 = Utf8               (Ljava/lang/String;F)F\n-  #175 = Utf8               toDouble\n-  #176 = Utf8               (Ljava/lang/String;)D\n-  #177 = Utf8               (Ljava/lang/String;D)D\n-  #178 = Utf8               (Ljava/math/BigDecimal;)D\n-  #179 = Utf8               (Ljava/math/BigDecimal;D)D\n-  #180 = Utf8               toByte\n-  #181 = Utf8               (Ljava/lang/String;)B\n-  #182 = Utf8               (Ljava/lang/String;B)B\n-  #183 = Utf8               toShort\n-  #184 = Utf8               (Ljava/lang/String;)S\n-  #185 = Utf8               (Ljava/lang/String;S)S\n-  #186 = Utf8               toScaledBigDecimal\n-  #187 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #188 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #189 = Class              #378          // java/math/RoundingMode\n-  #190 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n-  #191 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #192 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n-  #193 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #194 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #195 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #196 = Utf8               createNumber\n-  #197 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n-  #198 = Class              #379          // \"[Ljava/lang/String;\"\n-  #199 = Utf8               getMantissa\n-  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #201 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #202 = Utf8               isAllZeros\n-  #203 = Utf8               (Ljava/lang/String;)Z\n-  #204 = Utf8               createFloat\n-  #205 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n-  #206 = Utf8               createDouble\n-  #207 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n-  #208 = Utf8               createInteger\n-  #209 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #210 = Utf8               createLong\n-  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n-  #212 = Utf8               createBigInteger\n-  #213 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #214 = Utf8               createBigDecimal\n-  #215 = Utf8               min\n-  #216 = Utf8               ([J)J\n-  #217 = Utf8               ([I)I\n-  #218 = Utf8               ([S)S\n-  #219 = Utf8               ([B)B\n-  #220 = Utf8               ([D)D\n-  #221 = Utf8               ([F)F\n-  #222 = Utf8               max\n-  #223 = Utf8               validateArray\n-  #224 = Utf8               (Ljava/lang/Object;)V\n-  #225 = Utf8               (JJJ)J\n-  #226 = Utf8               (III)I\n-  #227 = Utf8               (SSS)S\n-  #228 = Utf8               (BBB)B\n-  #229 = Utf8               (DDD)D\n-  #230 = Utf8               (FFF)F\n-  #231 = Utf8               isDigits\n-  #232 = Utf8               isNumber\n-  #233 = Utf8               Deprecated\n-  #234 = Utf8               RuntimeVisibleAnnotations\n-  #235 = Utf8               Ljava/lang/Deprecated;\n-  #236 = Utf8               isCreatable\n-  #237 = Class              #380          // \"[C\"\n-  #238 = Utf8               isParsable\n-  #239 = Utf8               withDecimalsParsing\n-  #240 = Utf8               (Ljava/lang/String;I)Z\n-  #241 = Utf8               compare\n-  #242 = Utf8               (II)I\n-  #243 = Utf8               (JJ)I\n-  #244 = Utf8               (SS)I\n-  #245 = Utf8               (BB)I\n-  #246 = Utf8               <clinit>\n-  #247 = Utf8               SourceFile\n-  #248 = Utf8               NumberUtils.java\n-  #249 = NameAndType        #161:#162     // \"<init>\":()V\n-  #250 = NameAndType        #165:#167     // toInt:(Ljava/lang/String;I)I\n-  #251 = Class              #381          // java/lang/Integer\n-  #252 = NameAndType        #382:#166     // parseInt:(Ljava/lang/String;)I\n-  #253 = Utf8               java/lang/NumberFormatException\n-  #254 = NameAndType        #169:#171     // toLong:(Ljava/lang/String;J)J\n-  #255 = Class              #383          // java/lang/Long\n-  #256 = NameAndType        #384:#170     // parseLong:(Ljava/lang/String;)J\n-  #257 = NameAndType        #172:#174     // toFloat:(Ljava/lang/String;F)F\n-  #258 = NameAndType        #385:#173     // parseFloat:(Ljava/lang/String;)F\n-  #259 = NameAndType        #175:#177     // toDouble:(Ljava/lang/String;D)D\n-  #260 = NameAndType        #386:#176     // parseDouble:(Ljava/lang/String;)D\n-  #261 = NameAndType        #175:#179     // toDouble:(Ljava/math/BigDecimal;D)D\n-  #262 = NameAndType        #387:#388     // doubleValue:()D\n-  #263 = NameAndType        #180:#182     // toByte:(Ljava/lang/String;B)B\n-  #264 = Class              #389          // java/lang/Byte\n-  #265 = NameAndType        #390:#181     // parseByte:(Ljava/lang/String;)B\n-  #266 = NameAndType        #183:#185     // toShort:(Ljava/lang/String;S)S\n-  #267 = Class              #391          // java/lang/Short\n-  #268 = NameAndType        #392:#184     // parseShort:(Ljava/lang/String;)S\n-  #269 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;\n-  #270 = NameAndType        #393:#394     // intValue:()I\n-  #271 = NameAndType        #395:#396     // HALF_EVEN:Ljava/math/RoundingMode;\n-  #272 = NameAndType        #186:#188     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #273 = NameAndType        #397:#398     // ZERO:Ljava/math/BigDecimal;\n-  #274 = NameAndType        #399:#400     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #275 = NameAndType        #186:#191     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #276 = NameAndType        #401:#402     // floatValue:()F\n-  #277 = NameAndType        #403:#404     // valueOf:(D)Ljava/math/BigDecimal;\n-  #278 = NameAndType        #186:#193     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #279 = NameAndType        #186:#195     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #280 = NameAndType        #214:#194     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #281 = Class              #405          // org/apache/commons/lang3/StringUtils\n-  #282 = NameAndType        #406:#407     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #283 = Utf8               A blank string is not a valid number\n-  #284 = NameAndType        #161:#408     // \"<init>\":(Ljava/lang/String;)V\n-  #285 = Utf8               java/lang/String\n-  #286 = Utf8               0x\n-  #287 = Utf8               0X\n-  #288 = Utf8               -0x\n-  #289 = Utf8               -0X\n-  #290 = Utf8               #\n-  #291 = Utf8               -#\n-  #292 = NameAndType        #409:#203     // startsWith:(Ljava/lang/String;)Z\n-  #293 = NameAndType        #410:#394     // length:()I\n-  #294 = NameAndType        #411:#412     // charAt:(I)C\n-  #295 = NameAndType        #212:#213     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #296 = NameAndType        #210:#211     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-  #297 = NameAndType        #208:#209     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #298 = NameAndType        #413:#414     // indexOf:(I)I\n-  #299 = Utf8               java/lang/StringBuilder\n-  #300 = NameAndType        #415:#416     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #301 = Utf8                is not a valid number.\n-  #302 = NameAndType        #417:#418     // toString:()Ljava/lang/String;\n-  #303 = NameAndType        #419:#420     // substring:(II)Ljava/lang/String;\n-  #304 = NameAndType        #419:#421     // substring:(I)Ljava/lang/String;\n-  #305 = NameAndType        #199:#201     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-  #306 = NameAndType        #199:#200     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-  #307 = Class              #422          // java/lang/Character\n-  #308 = NameAndType        #423:#424     // isDigit:(C)Z\n-  #309 = NameAndType        #202:#203     // isAllZeros:(Ljava/lang/String;)Z\n-  #310 = NameAndType        #425:#426     // isEmpty:()Z\n-  #311 = NameAndType        #231:#203     // isDigits:(Ljava/lang/String;)Z\n-  #312 = NameAndType        #204:#205     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-  #313 = NameAndType        #427:#426     // isInfinite:()Z\n-  #314 = NameAndType        #206:#207     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-  #315 = NameAndType        #428:#429     // equals:(Ljava/lang/Object;)Z\n-  #316 = NameAndType        #430:#431     // compareTo:(Ljava/math/BigDecimal;)I\n-  #317 = NameAndType        #403:#205     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-  #318 = NameAndType        #403:#207     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-  #319 = NameAndType        #432:#209     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #320 = NameAndType        #432:#211     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n-  #321 = Utf8               -\n-  #322 = NameAndType        #409:#240     // startsWith:(Ljava/lang/String;I)Z\n-  #323 = Utf8               0\n-  #324 = Utf8               java/math/BigInteger\n-  #325 = NameAndType        #161:#433     // \"<init>\":(Ljava/lang/String;I)V\n-  #326 = NameAndType        #434:#435     // negate:()Ljava/math/BigInteger;\n-  #327 = NameAndType        #436:#418     // trim:()Ljava/lang/String;\n-  #328 = Utf8               --\n-  #329 = Utf8               java/math/BigDecimal\n-  #330 = NameAndType        #223:#224     // validateArray:(Ljava/lang/Object;)V\n-  #331 = NameAndType        #437:#438     // isNaN:(D)Z\n-  #332 = Utf8               java/lang/Double\n-  #333 = NameAndType        #437:#439     // isNaN:(F)Z\n-  #334 = Utf8               java/lang/Float\n-  #335 = Utf8               The Array must not be null\n-  #336 = Utf8               java/lang/Object\n-  #337 = Class              #440          // org/apache/commons/lang3/Validate\n-  #338 = NameAndType        #441:#442     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #339 = Class              #443          // java/lang/reflect/Array\n-  #340 = NameAndType        #444:#445     // getLength:(Ljava/lang/Object;)I\n-  #341 = Utf8               Array cannot be empty.\n-  #342 = Class              #446          // java/lang/Math\n-  #343 = NameAndType        #215:#447     // min:(DD)D\n-  #344 = NameAndType        #215:#448     // min:(FF)F\n-  #345 = NameAndType        #222:#447     // max:(DD)D\n-  #346 = NameAndType        #222:#448     // max:(FF)F\n-  #347 = NameAndType        #449:#407     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #348 = NameAndType        #236:#203     // isCreatable:(Ljava/lang/String;)Z\n-  #349 = NameAndType        #425:#407     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #350 = NameAndType        #450:#451     // toCharArray:()[C\n-  #351 = NameAndType        #452:#453     // contains:(Ljava/lang/CharSequence;I)Z\n-  #352 = NameAndType        #239:#240     // withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #353 = NameAndType        #403:#454     // valueOf:(J)Ljava/lang/Long;\n-  #354 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;\n-  #355 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;\n-  #356 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;\n-  #357 = NameAndType        #403:#455     // valueOf:(I)Ljava/lang/Integer;\n-  #358 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;\n-  #359 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;\n-  #360 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #361 = NameAndType        #403:#456     // valueOf:(S)Ljava/lang/Short;\n-  #362 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;\n-  #363 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;\n-  #364 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #365 = NameAndType        #403:#457     // valueOf:(B)Ljava/lang/Byte;\n-  #366 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;\n-  #367 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;\n-  #368 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #369 = NameAndType        #403:#458     // valueOf:(D)Ljava/lang/Double;\n-  #370 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;\n-  #371 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;\n-  #372 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #373 = NameAndType        #403:#459     // valueOf:(F)Ljava/lang/Float;\n-  #374 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;\n-  #375 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;\n-  #376 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #377 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #378 = Utf8               java/math/RoundingMode\n-  #379 = Utf8               [Ljava/lang/String;\n-  #380 = Utf8               [C\n-  #381 = Utf8               java/lang/Integer\n-  #382 = Utf8               parseInt\n-  #383 = Utf8               java/lang/Long\n-  #384 = Utf8               parseLong\n-  #385 = Utf8               parseFloat\n-  #386 = Utf8               parseDouble\n-  #387 = Utf8               doubleValue\n-  #388 = Utf8               ()D\n-  #389 = Utf8               java/lang/Byte\n-  #390 = Utf8               parseByte\n-  #391 = Utf8               java/lang/Short\n-  #392 = Utf8               parseShort\n-  #393 = Utf8               intValue\n-  #394 = Utf8               ()I\n-  #395 = Utf8               HALF_EVEN\n-  #396 = Utf8               Ljava/math/RoundingMode;\n-  #397 = Utf8               ZERO\n-  #398 = Utf8               Ljava/math/BigDecimal;\n-  #399 = Utf8               setScale\n-  #400 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #401 = Utf8               floatValue\n-  #402 = Utf8               ()F\n-  #403 = Utf8               valueOf\n-  #404 = Utf8               (D)Ljava/math/BigDecimal;\n-  #405 = Utf8               org/apache/commons/lang3/StringUtils\n-  #406 = Utf8               isBlank\n-  #407 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #408 = Utf8               (Ljava/lang/String;)V\n-  #409 = Utf8               startsWith\n-  #410 = Utf8               length\n-  #411 = Utf8               charAt\n-  #412 = Utf8               (I)C\n-  #413 = Utf8               indexOf\n-  #414 = Utf8               (I)I\n-  #415 = Utf8               append\n-  #416 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #417 = Utf8               toString\n-  #418 = Utf8               ()Ljava/lang/String;\n-  #419 = Utf8               substring\n-  #420 = Utf8               (II)Ljava/lang/String;\n-  #421 = Utf8               (I)Ljava/lang/String;\n-  #422 = Utf8               java/lang/Character\n-  #423 = Utf8               isDigit\n-  #424 = Utf8               (C)Z\n-  #425 = Utf8               isEmpty\n-  #426 = Utf8               ()Z\n-  #427 = Utf8               isInfinite\n-  #428 = Utf8               equals\n-  #429 = Utf8               (Ljava/lang/Object;)Z\n-  #430 = Utf8               compareTo\n-  #431 = Utf8               (Ljava/math/BigDecimal;)I\n-  #432 = Utf8               decode\n-  #433 = Utf8               (Ljava/lang/String;I)V\n-  #434 = Utf8               negate\n-  #435 = Utf8               ()Ljava/math/BigInteger;\n-  #436 = Utf8               trim\n-  #437 = Utf8               isNaN\n-  #438 = Utf8               (D)Z\n-  #439 = Utf8               (F)Z\n-  #440 = Utf8               org/apache/commons/lang3/Validate\n-  #441 = Utf8               isTrue\n-  #442 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #443 = Utf8               java/lang/reflect/Array\n-  #444 = Utf8               getLength\n-  #445 = Utf8               (Ljava/lang/Object;)I\n-  #446 = Utf8               java/lang/Math\n-  #447 = Utf8               (DD)D\n-  #448 = Utf8               (FF)F\n-  #449 = Utf8               isNumeric\n-  #450 = Utf8               toCharArray\n-  #451 = Utf8               ()[C\n-  #452 = Utf8               contains\n-  #453 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #454 = Utf8               (J)Ljava/lang/Long;\n-  #455 = Utf8               (I)Ljava/lang/Integer;\n-  #456 = Utf8               (S)Ljava/lang/Short;\n-  #457 = Utf8               (B)Ljava/lang/Byte;\n-  #458 = Utf8               (D)Ljava/lang/Double;\n-  #459 = Utf8               (F)Ljava/lang/Float;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n+    #8 = Class              #10           // org/apache/commons/lang3/math/NumberUtils\n+    #9 = NameAndType        #11:#12       // toInt:(Ljava/lang/String;I)I\n+   #10 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+   #11 = Utf8               toInt\n+   #12 = Utf8               (Ljava/lang/String;I)I\n+   #13 = Methodref          #14.#15       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #14 = Class              #16           // java/lang/Integer\n+   #15 = NameAndType        #17:#18       // parseInt:(Ljava/lang/String;)I\n+   #16 = Utf8               java/lang/Integer\n+   #17 = Utf8               parseInt\n+   #18 = Utf8               (Ljava/lang/String;)I\n+   #19 = Class              #20           // java/lang/NumberFormatException\n+   #20 = Utf8               java/lang/NumberFormatException\n+   #21 = Methodref          #8.#22        // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n+   #22 = NameAndType        #23:#24       // toLong:(Ljava/lang/String;J)J\n+   #23 = Utf8               toLong\n+   #24 = Utf8               (Ljava/lang/String;J)J\n+   #25 = Methodref          #26.#27       // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+   #26 = Class              #28           // java/lang/Long\n+   #27 = NameAndType        #29:#30       // parseLong:(Ljava/lang/String;)J\n+   #28 = Utf8               java/lang/Long\n+   #29 = Utf8               parseLong\n+   #30 = Utf8               (Ljava/lang/String;)J\n+   #31 = Methodref          #8.#32        // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n+   #32 = NameAndType        #33:#34       // toFloat:(Ljava/lang/String;F)F\n+   #33 = Utf8               toFloat\n+   #34 = Utf8               (Ljava/lang/String;F)F\n+   #35 = Methodref          #36.#37       // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+   #36 = Class              #38           // java/lang/Float\n+   #37 = NameAndType        #39:#40       // parseFloat:(Ljava/lang/String;)F\n+   #38 = Utf8               java/lang/Float\n+   #39 = Utf8               parseFloat\n+   #40 = Utf8               (Ljava/lang/String;)F\n+   #41 = Methodref          #8.#42        // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n+   #42 = NameAndType        #43:#44       // toDouble:(Ljava/lang/String;D)D\n+   #43 = Utf8               toDouble\n+   #44 = Utf8               (Ljava/lang/String;D)D\n+   #45 = Methodref          #46.#47       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #46 = Class              #48           // java/lang/Double\n+   #47 = NameAndType        #49:#50       // parseDouble:(Ljava/lang/String;)D\n+   #48 = Utf8               java/lang/Double\n+   #49 = Utf8               parseDouble\n+   #50 = Utf8               (Ljava/lang/String;)D\n+   #51 = Methodref          #8.#52        // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n+   #52 = NameAndType        #43:#53       // toDouble:(Ljava/math/BigDecimal;D)D\n+   #53 = Utf8               (Ljava/math/BigDecimal;D)D\n+   #54 = Methodref          #55.#56       // java/math/BigDecimal.doubleValue:()D\n+   #55 = Class              #57           // java/math/BigDecimal\n+   #56 = NameAndType        #58:#59       // doubleValue:()D\n+   #57 = Utf8               java/math/BigDecimal\n+   #58 = Utf8               doubleValue\n+   #59 = Utf8               ()D\n+   #60 = Methodref          #8.#61        // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n+   #61 = NameAndType        #62:#63       // toByte:(Ljava/lang/String;B)B\n+   #62 = Utf8               toByte\n+   #63 = Utf8               (Ljava/lang/String;B)B\n+   #64 = Methodref          #65.#66       // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+   #65 = Class              #67           // java/lang/Byte\n+   #66 = NameAndType        #68:#69       // parseByte:(Ljava/lang/String;)B\n+   #67 = Utf8               java/lang/Byte\n+   #68 = Utf8               parseByte\n+   #69 = Utf8               (Ljava/lang/String;)B\n+   #70 = Methodref          #8.#71        // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n+   #71 = NameAndType        #72:#73       // toShort:(Ljava/lang/String;S)S\n+   #72 = Utf8               toShort\n+   #73 = Utf8               (Ljava/lang/String;S)S\n+   #74 = Methodref          #75.#76       // java/lang/Short.parseShort:(Ljava/lang/String;)S\n+   #75 = Class              #77           // java/lang/Short\n+   #76 = NameAndType        #78:#79       // parseShort:(Ljava/lang/String;)S\n+   #77 = Utf8               java/lang/Short\n+   #78 = Utf8               parseShort\n+   #79 = Utf8               (Ljava/lang/String;)S\n+   #80 = Fieldref           #8.#81        // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n+   #81 = NameAndType        #82:#83       // INTEGER_TWO:Ljava/lang/Integer;\n+   #82 = Utf8               INTEGER_TWO\n+   #83 = Utf8               Ljava/lang/Integer;\n+   #84 = Methodref          #14.#85       // java/lang/Integer.intValue:()I\n+   #85 = NameAndType        #86:#87       // intValue:()I\n+   #86 = Utf8               intValue\n+   #87 = Utf8               ()I\n+   #88 = Fieldref           #89.#90       // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+   #89 = Class              #91           // java/math/RoundingMode\n+   #90 = NameAndType        #92:#93       // HALF_EVEN:Ljava/math/RoundingMode;\n+   #91 = Utf8               java/math/RoundingMode\n+   #92 = Utf8               HALF_EVEN\n+   #93 = Utf8               Ljava/math/RoundingMode;\n+   #94 = Methodref          #8.#95        // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #95 = NameAndType        #96:#97       // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #96 = Utf8               toScaledBigDecimal\n+   #97 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #98 = Fieldref           #55.#99       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+   #99 = NameAndType        #100:#101     // ZERO:Ljava/math/BigDecimal;\n+  #100 = Utf8               ZERO\n+  #101 = Utf8               Ljava/math/BigDecimal;\n+  #102 = Methodref          #55.#103      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #103 = NameAndType        #104:#105     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #104 = Utf8               setScale\n+  #105 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #106 = Methodref          #8.#107       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #107 = NameAndType        #96:#108      // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #108 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #109 = Methodref          #36.#110      // java/lang/Float.floatValue:()F\n+  #110 = NameAndType        #111:#112     // floatValue:()F\n+  #111 = Utf8               floatValue\n+  #112 = Utf8               ()F\n+  #113 = Methodref          #55.#114      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+  #114 = NameAndType        #115:#116     // valueOf:(D)Ljava/math/BigDecimal;\n+  #115 = Utf8               valueOf\n+  #116 = Utf8               (D)Ljava/math/BigDecimal;\n+  #117 = Methodref          #8.#118       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #118 = NameAndType        #96:#119      // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #119 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #120 = Methodref          #46.#56       // java/lang/Double.doubleValue:()D\n+  #121 = Methodref          #8.#122       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #122 = NameAndType        #96:#123      // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #123 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #124 = Methodref          #8.#125       // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #125 = NameAndType        #126:#127     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #126 = Utf8               createBigDecimal\n+  #127 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #128 = Methodref          #129.#130     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+  #129 = Class              #131          // org/apache/commons/lang3/StringUtils\n+  #130 = NameAndType        #132:#133     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #131 = Utf8               org/apache/commons/lang3/StringUtils\n+  #132 = Utf8               isBlank\n+  #133 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #134 = String             #135          // A blank string is not a valid number\n+  #135 = Utf8               A blank string is not a valid number\n+  #136 = Methodref          #19.#137      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #137 = NameAndType        #5:#138       // \"<init>\":(Ljava/lang/String;)V\n+  #138 = Utf8               (Ljava/lang/String;)V\n+  #139 = Class              #140          // java/lang/String\n+  #140 = Utf8               java/lang/String\n+  #141 = String             #142          // 0x\n+  #142 = Utf8               0x\n+  #143 = String             #144          // 0X\n+  #144 = Utf8               0X\n+  #145 = String             #146          // -0x\n+  #146 = Utf8               -0x\n+  #147 = String             #148          // -0X\n+  #148 = Utf8               -0X\n+  #149 = String             #150          // #\n+  #150 = Utf8               #\n+  #151 = String             #152          // -#\n+  #152 = Utf8               -#\n+  #153 = Methodref          #139.#154     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #154 = NameAndType        #155:#156     // startsWith:(Ljava/lang/String;)Z\n+  #155 = Utf8               startsWith\n+  #156 = Utf8               (Ljava/lang/String;)Z\n+  #157 = Methodref          #139.#158     // java/lang/String.length:()I\n+  #158 = NameAndType        #159:#87      // length:()I\n+  #159 = Utf8               length\n+  #160 = Methodref          #139.#161     // java/lang/String.charAt:(I)C\n+  #161 = NameAndType        #162:#163     // charAt:(I)C\n+  #162 = Utf8               charAt\n+  #163 = Utf8               (I)C\n+  #164 = Methodref          #8.#165       // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #165 = NameAndType        #166:#167     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #166 = Utf8               createBigInteger\n+  #167 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #168 = Methodref          #8.#169       // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #169 = NameAndType        #170:#171     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #170 = Utf8               createLong\n+  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n+  #172 = Methodref          #8.#173       // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #173 = NameAndType        #174:#175     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #174 = Utf8               createInteger\n+  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #176 = Methodref          #139.#177     // java/lang/String.indexOf:(I)I\n+  #177 = NameAndType        #178:#179     // indexOf:(I)I\n+  #178 = Utf8               indexOf\n+  #179 = Utf8               (I)I\n+  #180 = Class              #181          // java/lang/StringBuilder\n+  #181 = Utf8               java/lang/StringBuilder\n+  #182 = Methodref          #180.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #183 = Methodref          #180.#184     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #184 = NameAndType        #185:#186     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #185 = Utf8               append\n+  #186 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #187 = String             #188          //  is not a valid number.\n+  #188 = Utf8                is not a valid number.\n+  #189 = Methodref          #180.#190     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #190 = NameAndType        #191:#192     // toString:()Ljava/lang/String;\n+  #191 = Utf8               toString\n+  #192 = Utf8               ()Ljava/lang/String;\n+  #193 = Methodref          #139.#194     // java/lang/String.substring:(II)Ljava/lang/String;\n+  #194 = NameAndType        #195:#196     // substring:(II)Ljava/lang/String;\n+  #195 = Utf8               substring\n+  #196 = Utf8               (II)Ljava/lang/String;\n+  #197 = Methodref          #139.#198     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #198 = NameAndType        #195:#199     // substring:(I)Ljava/lang/String;\n+  #199 = Utf8               (I)Ljava/lang/String;\n+  #200 = Methodref          #8.#201       // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #201 = NameAndType        #202:#203     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #202 = Utf8               getMantissa\n+  #203 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #204 = Methodref          #8.#205       // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #205 = NameAndType        #202:#206     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #206 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #207 = Methodref          #208.#209     // java/lang/Character.isDigit:(C)Z\n+  #208 = Class              #210          // java/lang/Character\n+  #209 = NameAndType        #211:#212     // isDigit:(C)Z\n+  #210 = Utf8               java/lang/Character\n+  #211 = Utf8               isDigit\n+  #212 = Utf8               (C)Z\n+  #213 = Methodref          #8.#214       // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n+  #214 = NameAndType        #215:#156     // isAllZeros:(Ljava/lang/String;)Z\n+  #215 = Utf8               isAllZeros\n+  #216 = Methodref          #139.#217     // java/lang/String.isEmpty:()Z\n+  #217 = NameAndType        #218:#219     // isEmpty:()Z\n+  #218 = Utf8               isEmpty\n+  #219 = Utf8               ()Z\n+  #220 = Methodref          #8.#221       // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n+  #221 = NameAndType        #222:#156     // isDigits:(Ljava/lang/String;)Z\n+  #222 = Utf8               isDigits\n+  #223 = Methodref          #8.#224       // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #224 = NameAndType        #225:#226     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #225 = Utf8               createFloat\n+  #226 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n+  #227 = Methodref          #36.#228      // java/lang/Float.isInfinite:()Z\n+  #228 = NameAndType        #229:#219     // isInfinite:()Z\n+  #229 = Utf8               isInfinite\n+  #230 = Methodref          #8.#231       // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #231 = NameAndType        #232:#233     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #232 = Utf8               createDouble\n+  #233 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n+  #234 = Methodref          #46.#228      // java/lang/Double.isInfinite:()Z\n+  #235 = Methodref          #46.#110      // java/lang/Double.floatValue:()F\n+  #236 = Methodref          #36.#190      // java/lang/Float.toString:()Ljava/lang/String;\n+  #237 = Methodref          #46.#190      // java/lang/Double.toString:()Ljava/lang/String;\n+  #238 = Methodref          #139.#239     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #239 = NameAndType        #240:#241     // equals:(Ljava/lang/Object;)Z\n+  #240 = Utf8               equals\n+  #241 = Utf8               (Ljava/lang/Object;)Z\n+  #242 = Methodref          #55.#243      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+  #243 = NameAndType        #244:#245     // compareTo:(Ljava/math/BigDecimal;)I\n+  #244 = Utf8               compareTo\n+  #245 = Utf8               (Ljava/math/BigDecimal;)I\n+  #246 = Methodref          #36.#247      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #247 = NameAndType        #115:#226     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #248 = Methodref          #46.#249      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #249 = NameAndType        #115:#233     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #250 = Methodref          #14.#251      // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #251 = NameAndType        #252:#175     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #252 = Utf8               decode\n+  #253 = Methodref          #26.#254      // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #254 = NameAndType        #252:#171     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #255 = String             #256          // -\n+  #256 = Utf8               -\n+  #257 = Methodref          #139.#258     // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+  #258 = NameAndType        #155:#259     // startsWith:(Ljava/lang/String;I)Z\n+  #259 = Utf8               (Ljava/lang/String;I)Z\n+  #260 = String             #261          // 0\n+  #261 = Utf8               0\n+  #262 = Class              #263          // java/math/BigInteger\n+  #263 = Utf8               java/math/BigInteger\n+  #264 = Methodref          #262.#265     // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+  #265 = NameAndType        #5:#266       // \"<init>\":(Ljava/lang/String;I)V\n+  #266 = Utf8               (Ljava/lang/String;I)V\n+  #267 = Methodref          #262.#268     // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+  #268 = NameAndType        #269:#270     // negate:()Ljava/math/BigInteger;\n+  #269 = Utf8               negate\n+  #270 = Utf8               ()Ljava/math/BigInteger;\n+  #271 = Methodref          #139.#272     // java/lang/String.trim:()Ljava/lang/String;\n+  #272 = NameAndType        #273:#192     // trim:()Ljava/lang/String;\n+  #273 = Utf8               trim\n+  #274 = String             #275          // --\n+  #275 = Utf8               --\n+  #276 = Methodref          #55.#137      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+  #277 = Methodref          #8.#278       // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n+  #278 = NameAndType        #279:#280     // validateArray:(Ljava/lang/Object;)V\n+  #279 = Utf8               validateArray\n+  #280 = Utf8               (Ljava/lang/Object;)V\n+  #281 = Methodref          #46.#282      // java/lang/Double.isNaN:(D)Z\n+  #282 = NameAndType        #283:#284     // isNaN:(D)Z\n+  #283 = Utf8               isNaN\n+  #284 = Utf8               (D)Z\n+  #285 = Double             NaNd\n+  #287 = Methodref          #36.#288      // java/lang/Float.isNaN:(F)Z\n+  #288 = NameAndType        #283:#289     // isNaN:(F)Z\n+  #289 = Utf8               (F)Z\n+  #290 = Float              NaNf\n+  #291 = String             #292          // The Array must not be null\n+  #292 = Utf8               The Array must not be null\n+  #293 = Methodref          #294.#295     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #294 = Class              #296          // org/apache/commons/lang3/Validate\n+  #295 = NameAndType        #297:#298     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #296 = Utf8               org/apache/commons/lang3/Validate\n+  #297 = Utf8               isTrue\n+  #298 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #299 = Methodref          #300.#301     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+  #300 = Class              #302          // java/lang/reflect/Array\n+  #301 = NameAndType        #303:#304     // getLength:(Ljava/lang/Object;)I\n+  #302 = Utf8               java/lang/reflect/Array\n+  #303 = Utf8               getLength\n+  #304 = Utf8               (Ljava/lang/Object;)I\n+  #305 = String             #306          // Array cannot be empty.\n+  #306 = Utf8               Array cannot be empty.\n+  #307 = Methodref          #308.#309     // java/lang/Math.min:(DD)D\n+  #308 = Class              #310          // java/lang/Math\n+  #309 = NameAndType        #311:#312     // min:(DD)D\n+  #310 = Utf8               java/lang/Math\n+  #311 = Utf8               min\n+  #312 = Utf8               (DD)D\n+  #313 = Methodref          #308.#314     // java/lang/Math.min:(FF)F\n+  #314 = NameAndType        #311:#315     // min:(FF)F\n+  #315 = Utf8               (FF)F\n+  #316 = Methodref          #308.#317     // java/lang/Math.max:(DD)D\n+  #317 = NameAndType        #318:#312     // max:(DD)D\n+  #318 = Utf8               max\n+  #319 = Methodref          #308.#320     // java/lang/Math.max:(FF)F\n+  #320 = NameAndType        #318:#315     // max:(FF)F\n+  #321 = Methodref          #129.#322     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+  #322 = NameAndType        #323:#133     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #323 = Utf8               isNumeric\n+  #324 = Methodref          #8.#325       // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n+  #325 = NameAndType        #326:#156     // isCreatable:(Ljava/lang/String;)Z\n+  #326 = Utf8               isCreatable\n+  #327 = Methodref          #129.#328     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+  #328 = NameAndType        #218:#133     // isEmpty:(Ljava/lang/CharSequence;)Z\n+  #329 = Methodref          #139.#330     // java/lang/String.toCharArray:()[C\n+  #330 = NameAndType        #331:#332     // toCharArray:()[C\n+  #331 = Utf8               toCharArray\n+  #332 = Utf8               ()[C\n+  #333 = Methodref          #129.#334     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+  #334 = NameAndType        #335:#336     // contains:(Ljava/lang/CharSequence;I)Z\n+  #335 = Utf8               contains\n+  #336 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #337 = Methodref          #8.#338       // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #338 = NameAndType        #339:#259     // withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #339 = Utf8               withDecimalsParsing\n+  #340 = Methodref          #26.#341      // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #341 = NameAndType        #115:#342     // valueOf:(J)Ljava/lang/Long;\n+  #342 = Utf8               (J)Ljava/lang/Long;\n+  #343 = Fieldref           #8.#344       // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n+  #344 = NameAndType        #345:#346     // LONG_ZERO:Ljava/lang/Long;\n+  #345 = Utf8               LONG_ZERO\n+  #346 = Utf8               Ljava/lang/Long;\n+  #347 = Fieldref           #8.#348       // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n+  #348 = NameAndType        #349:#346     // LONG_ONE:Ljava/lang/Long;\n+  #349 = Utf8               LONG_ONE\n+  #350 = Long               -1l\n+  #352 = Fieldref           #8.#353       // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n+  #353 = NameAndType        #354:#346     // LONG_MINUS_ONE:Ljava/lang/Long;\n+  #354 = Utf8               LONG_MINUS_ONE\n+  #355 = Methodref          #14.#356      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #356 = NameAndType        #115:#357     // valueOf:(I)Ljava/lang/Integer;\n+  #357 = Utf8               (I)Ljava/lang/Integer;\n+  #358 = Fieldref           #8.#359       // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+  #359 = NameAndType        #360:#83      // INTEGER_ZERO:Ljava/lang/Integer;\n+  #360 = Utf8               INTEGER_ZERO\n+  #361 = Fieldref           #8.#362       // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+  #362 = NameAndType        #363:#83      // INTEGER_ONE:Ljava/lang/Integer;\n+  #363 = Utf8               INTEGER_ONE\n+  #364 = Fieldref           #8.#365       // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #365 = NameAndType        #366:#83      // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #366 = Utf8               INTEGER_MINUS_ONE\n+  #367 = Methodref          #75.#368      // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+  #368 = NameAndType        #115:#369     // valueOf:(S)Ljava/lang/Short;\n+  #369 = Utf8               (S)Ljava/lang/Short;\n+  #370 = Fieldref           #8.#371       // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n+  #371 = NameAndType        #372:#373     // SHORT_ZERO:Ljava/lang/Short;\n+  #372 = Utf8               SHORT_ZERO\n+  #373 = Utf8               Ljava/lang/Short;\n+  #374 = Fieldref           #8.#375       // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n+  #375 = NameAndType        #376:#373     // SHORT_ONE:Ljava/lang/Short;\n+  #376 = Utf8               SHORT_ONE\n+  #377 = Fieldref           #8.#378       // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #378 = NameAndType        #379:#373     // SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #379 = Utf8               SHORT_MINUS_ONE\n+  #380 = Methodref          #65.#381      // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+  #381 = NameAndType        #115:#382     // valueOf:(B)Ljava/lang/Byte;\n+  #382 = Utf8               (B)Ljava/lang/Byte;\n+  #383 = Fieldref           #8.#384       // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n+  #384 = NameAndType        #385:#386     // BYTE_ZERO:Ljava/lang/Byte;\n+  #385 = Utf8               BYTE_ZERO\n+  #386 = Utf8               Ljava/lang/Byte;\n+  #387 = Fieldref           #8.#388       // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n+  #388 = NameAndType        #389:#386     // BYTE_ONE:Ljava/lang/Byte;\n+  #389 = Utf8               BYTE_ONE\n+  #390 = Fieldref           #8.#391       // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #391 = NameAndType        #392:#386     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #392 = Utf8               BYTE_MINUS_ONE\n+  #393 = Methodref          #46.#394      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+  #394 = NameAndType        #115:#395     // valueOf:(D)Ljava/lang/Double;\n+  #395 = Utf8               (D)Ljava/lang/Double;\n+  #396 = Fieldref           #8.#397       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n+  #397 = NameAndType        #398:#399     // DOUBLE_ZERO:Ljava/lang/Double;\n+  #398 = Utf8               DOUBLE_ZERO\n+  #399 = Utf8               Ljava/lang/Double;\n+  #400 = Fieldref           #8.#401       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n+  #401 = NameAndType        #402:#399     // DOUBLE_ONE:Ljava/lang/Double;\n+  #402 = Utf8               DOUBLE_ONE\n+  #403 = Double             -1.0d\n+  #405 = Fieldref           #8.#406       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #406 = NameAndType        #407:#399     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #407 = Utf8               DOUBLE_MINUS_ONE\n+  #408 = Methodref          #36.#409      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+  #409 = NameAndType        #115:#410     // valueOf:(F)Ljava/lang/Float;\n+  #410 = Utf8               (F)Ljava/lang/Float;\n+  #411 = Fieldref           #8.#412       // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n+  #412 = NameAndType        #413:#414     // FLOAT_ZERO:Ljava/lang/Float;\n+  #413 = Utf8               FLOAT_ZERO\n+  #414 = Utf8               Ljava/lang/Float;\n+  #415 = Fieldref           #8.#416       // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n+  #416 = NameAndType        #417:#414     // FLOAT_ONE:Ljava/lang/Float;\n+  #417 = Utf8               FLOAT_ONE\n+  #418 = Float              -1.0f\n+  #419 = Fieldref           #8.#420       // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #420 = NameAndType        #421:#414     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #421 = Utf8               FLOAT_MINUS_ONE\n+  #422 = Utf8               Code\n+  #423 = Utf8               LineNumberTable\n+  #424 = Utf8               StackMapTable\n+  #425 = Utf8               (Ljava/math/BigDecimal;)D\n+  #426 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #427 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n+  #428 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n+  #429 = Utf8               createNumber\n+  #430 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n+  #431 = Class              #432          // \"[Ljava/lang/String;\"\n+  #432 = Utf8               [Ljava/lang/String;\n+  #433 = Utf8               ([J)J\n+  #434 = Utf8               ([I)I\n+  #435 = Utf8               ([S)S\n+  #436 = Utf8               ([B)B\n+  #437 = Utf8               ([D)D\n+  #438 = Utf8               ([F)F\n+  #439 = Utf8               (JJJ)J\n+  #440 = Utf8               (III)I\n+  #441 = Utf8               (SSS)S\n+  #442 = Utf8               (BBB)B\n+  #443 = Utf8               (DDD)D\n+  #444 = Utf8               (FFF)F\n+  #445 = Utf8               isNumber\n+  #446 = Utf8               Deprecated\n+  #447 = Utf8               RuntimeVisibleAnnotations\n+  #448 = Utf8               Ljava/lang/Deprecated;\n+  #449 = Class              #450          // \"[C\"\n+  #450 = Utf8               [C\n+  #451 = Utf8               isParsable\n+  #452 = Utf8               compare\n+  #453 = Utf8               (II)I\n+  #454 = Utf8               (JJ)I\n+  #455 = Utf8               (SS)I\n+  #456 = Utf8               (BB)I\n+  #457 = Utf8               <clinit>\n+  #458 = Utf8               SourceFile\n+  #459 = Utf8               NumberUtils.java\n {\n   public static final java.lang.Long LONG_ZERO;\n     descriptor: Ljava/lang/Long;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.Long LONG_ONE;\n     descriptor: Ljava/lang/Long;\n@@ -556,30 +556,30 @@\n   public static int toInt(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #2                  // Method toInt:(Ljava/lang/String;I)I\n+         2: invokestatic  #7                  // Method toInt:(Ljava/lang/String;I)I\n          5: ireturn\n       LineNumberTable:\n         line 104: 0\n \n   public static int toInt(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #3                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+         7: invokestatic  #13                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -597,30 +597,30 @@\n   public static long toLong(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n-         2: invokestatic  #5                  // Method toLong:(Ljava/lang/String;J)J\n+         2: invokestatic  #21                 // Method toLong:(Ljava/lang/String;J)J\n          5: lreturn\n       LineNumberTable:\n         line 153: 0\n \n   public static long toLong(java.lang.String, long);\n     descriptor: (Ljava/lang/String;J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: lload_1\n          5: lreturn\n          6: aload_0\n-         7: invokestatic  #6                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+         7: invokestatic  #25                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n         10: lreturn\n         11: astore_3\n         12: lload_1\n         13: lreturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -638,30 +638,30 @@\n   public static float toFloat(java.lang.String);\n     descriptor: (Ljava/lang/String;)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: fconst_0\n-         2: invokestatic  #7                  // Method toFloat:(Ljava/lang/String;F)F\n+         2: invokestatic  #31                 // Method toFloat:(Ljava/lang/String;F)F\n          5: freturn\n       LineNumberTable:\n         line 203: 0\n \n   public static float toFloat(java.lang.String, float);\n     descriptor: (Ljava/lang/String;F)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: fload_1\n          5: freturn\n          6: aload_0\n-         7: invokestatic  #8                  // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+         7: invokestatic  #35                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n         10: freturn\n         11: astore_2\n         12: fload_1\n         13: freturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -679,30 +679,30 @@\n   public static double toDouble(java.lang.String);\n     descriptor: (Ljava/lang/String;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dconst_0\n-         2: invokestatic  #9                  // Method toDouble:(Ljava/lang/String;D)D\n+         2: invokestatic  #41                 // Method toDouble:(Ljava/lang/String;D)D\n          5: dreturn\n       LineNumberTable:\n         line 255: 0\n \n   public static double toDouble(java.lang.String, double);\n     descriptor: (Ljava/lang/String;D)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: dload_1\n          5: dreturn\n          6: aload_0\n-         7: invokestatic  #10                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+         7: invokestatic  #45                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n         10: dreturn\n         11: astore_3\n         12: dload_1\n         13: dreturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -720,30 +720,30 @@\n   public static double toDouble(java.math.BigDecimal);\n     descriptor: (Ljava/math/BigDecimal;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dconst_0\n-         2: invokestatic  #11                 // Method toDouble:(Ljava/math/BigDecimal;D)D\n+         2: invokestatic  #51                 // Method toDouble:(Ljava/math/BigDecimal;D)D\n          5: dreturn\n       LineNumberTable:\n         line 305: 0\n \n   public static double toDouble(java.math.BigDecimal, double);\n     descriptor: (Ljava/math/BigDecimal;D)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     8\n          4: dload_1\n          5: goto          12\n          8: aload_0\n-         9: invokevirtual #12                 // Method java/math/BigDecimal.doubleValue:()D\n+         9: invokevirtual #54                 // Method java/math/BigDecimal.doubleValue:()D\n         12: dreturn\n       LineNumberTable:\n         line 326: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ double ]\n@@ -751,30 +751,30 @@\n   public static byte toByte(java.lang.String);\n     descriptor: (Ljava/lang/String;)B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #13                 // Method toByte:(Ljava/lang/String;B)B\n+         2: invokestatic  #60                 // Method toByte:(Ljava/lang/String;B)B\n          5: ireturn\n       LineNumberTable:\n         line 348: 0\n \n   public static byte toByte(java.lang.String, byte);\n     descriptor: (Ljava/lang/String;B)B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #14                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+         7: invokestatic  #64                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -792,30 +792,30 @@\n   public static short toShort(java.lang.String);\n     descriptor: (Ljava/lang/String;)S\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #15                 // Method toShort:(Ljava/lang/String;S)S\n+         2: invokestatic  #70                 // Method toShort:(Ljava/lang/String;S)S\n          5: ireturn\n       LineNumberTable:\n         line 397: 0\n \n   public static short toShort(java.lang.String, short);\n     descriptor: (Ljava/lang/String;S)S\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #16                 // Method java/lang/Short.parseShort:(Ljava/lang/String;)S\n+         7: invokestatic  #74                 // Method java/lang/Short.parseShort:(Ljava/lang/String;)S\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -832,39 +832,39 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal);\n     descriptor: (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 441: 0\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal, int, java.math.RoundingMode);\n     descriptor: (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n          9: iload_1\n         10: aload_2\n         11: ifnonnull     20\n-        14: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        14: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n         17: goto          21\n         20: aload_2\n-        21: invokevirtual #22                 // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        21: invokevirtual #102                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         24: areturn\n       LineNumberTable:\n         line 457: 0\n         line 458: 4\n         line 460: 8\n         line 462: 10\n         line 460: 21\n@@ -881,38 +881,38 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float);\n     descriptor: (Ljava/lang/Float;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #23                 // Method toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #106                // Method toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 479: 0\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+         9: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n         12: f2d\n-        13: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+        13: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n         16: iload_1\n         17: aload_2\n-        18: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        18: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         21: areturn\n       LineNumberTable:\n         line 495: 0\n         line 496: 4\n         line 498: 8\n         line 499: 9\n         line 498: 18\n@@ -921,37 +921,37 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double);\n     descriptor: (Ljava/lang/Double;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #26                 // Method toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #117                // Method toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 518: 0\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n-        12: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+         9: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n+        12: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n         15: iload_1\n         16: aload_2\n-        17: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        17: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         20: areturn\n       LineNumberTable:\n         line 534: 0\n         line 535: 4\n         line 537: 8\n         line 538: 9\n         line 537: 17\n@@ -960,36 +960,36 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #28                 // Method toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #121                // Method toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 557: 0\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.String, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+         9: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n         12: iload_1\n         13: aload_2\n-        14: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        14: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         17: areturn\n       LineNumberTable:\n         line 573: 0\n         line 574: 4\n         line 576: 8\n         line 577: 9\n         line 576: 14\n@@ -1002,46 +1002,46 @@\n     Code:\n       stack=4, locals=13, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+         7: invokestatic  #128                // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         10: ifeq          23\n-        13: new           #4                  // class java/lang/NumberFormatException\n+        13: new           #19                 // class java/lang/NumberFormatException\n         16: dup\n-        17: ldc           #31                 // String A blank string is not a valid number\n-        19: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #134                // String A blank string is not a valid number\n+        19: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: bipush        6\n-        25: anewarray     #33                 // class java/lang/String\n+        25: anewarray     #139                // class java/lang/String\n         28: dup\n         29: iconst_0\n-        30: ldc           #34                 // String 0x\n+        30: ldc           #141                // String 0x\n         32: aastore\n         33: dup\n         34: iconst_1\n-        35: ldc           #35                 // String 0X\n+        35: ldc           #143                // String 0X\n         37: aastore\n         38: dup\n         39: iconst_2\n-        40: ldc           #36                 // String -0x\n+        40: ldc           #145                // String -0x\n         42: aastore\n         43: dup\n         44: iconst_3\n-        45: ldc           #37                 // String -0X\n+        45: ldc           #147                // String -0X\n         47: aastore\n         48: dup\n         49: iconst_4\n-        50: ldc           #38                 // String #\n+        50: ldc           #149                // String #\n         52: aastore\n         53: dup\n         54: iconst_5\n-        55: ldc           #39                 // String -#\n+        55: ldc           #151                // String -#\n         57: aastore\n         58: astore_1\n         59: iconst_0\n         60: istore_2\n         61: aload_1\n         62: astore_3\n         63: aload_3\n@@ -1054,93 +1054,93 @@\n         74: if_icmpge     109\n         77: aload_3\n         78: iload         5\n         80: aaload\n         81: astore        6\n         83: aload_0\n         84: aload         6\n-        86: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        86: invokevirtual #153                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         89: ifeq          103\n         92: iload_2\n         93: aload         6\n-        95: invokevirtual #41                 // Method java/lang/String.length:()I\n+        95: invokevirtual #157                // Method java/lang/String.length:()I\n         98: iadd\n         99: istore_2\n        100: goto          109\n        103: iinc          5, 1\n        106: goto          70\n        109: iload_2\n        110: ifle          212\n        113: iconst_0\n        114: istore_3\n        115: iload_2\n        116: istore        4\n        118: iload         4\n        120: aload_0\n-       121: invokevirtual #41                 // Method java/lang/String.length:()I\n+       121: invokevirtual #157                // Method java/lang/String.length:()I\n        124: if_icmpge     149\n        127: aload_0\n        128: iload         4\n-       130: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       130: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        133: istore_3\n        134: iload_3\n        135: bipush        48\n        137: if_icmpne     149\n        140: iinc          2, 1\n        143: iinc          4, 1\n        146: goto          118\n        149: aload_0\n-       150: invokevirtual #41                 // Method java/lang/String.length:()I\n+       150: invokevirtual #157                // Method java/lang/String.length:()I\n        153: iload_2\n        154: isub\n        155: istore        4\n        157: iload         4\n        159: bipush        16\n        161: if_icmpgt     177\n        164: iload         4\n        166: bipush        16\n        168: if_icmpne     182\n        171: iload_3\n        172: bipush        55\n        174: if_icmple     182\n        177: aload_0\n-       178: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       178: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        181: areturn\n        182: iload         4\n        184: bipush        8\n        186: if_icmpgt     202\n        189: iload         4\n        191: bipush        8\n        193: if_icmpne     207\n        196: iload_3\n        197: bipush        55\n        199: if_icmple     207\n        202: aload_0\n-       203: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       203: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        206: areturn\n        207: aload_0\n-       208: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+       208: invokestatic  #172                // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n        211: areturn\n        212: aload_0\n        213: aload_0\n-       214: invokevirtual #41                 // Method java/lang/String.length:()I\n+       214: invokevirtual #157                // Method java/lang/String.length:()I\n        217: iconst_1\n        218: isub\n-       219: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       219: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        222: istore_3\n        223: aload_0\n        224: bipush        46\n-       226: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       226: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        229: istore        7\n        231: aload_0\n        232: bipush        101\n-       234: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       234: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        237: aload_0\n        238: bipush        69\n-       240: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       240: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        243: iadd\n        244: iconst_1\n        245: iadd\n        246: istore        8\n        248: iload         7\n        250: iconst_m1\n        251: if_icmple     339\n@@ -1148,117 +1148,117 @@\n        256: iconst_m1\n        257: if_icmple     318\n        260: iload         8\n        262: iload         7\n        264: if_icmplt     276\n        267: iload         8\n        269: aload_0\n-       270: invokevirtual #41                 // Method java/lang/String.length:()I\n+       270: invokevirtual #157                // Method java/lang/String.length:()I\n        273: if_icmple     303\n-       276: new           #4                  // class java/lang/NumberFormatException\n+       276: new           #19                 // class java/lang/NumberFormatException\n        279: dup\n-       280: new           #47                 // class java/lang/StringBuilder\n+       280: new           #180                // class java/lang/StringBuilder\n        283: dup\n-       284: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       284: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        287: aload_0\n-       288: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       291: ldc           #50                 // String  is not a valid number.\n-       293: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       296: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       299: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       288: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       291: ldc           #187                // String  is not a valid number.\n+       293: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       296: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       299: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        302: athrow\n        303: aload_0\n        304: iload         7\n        306: iconst_1\n        307: iadd\n        308: iload         8\n-       310: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       310: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        313: astore        5\n        315: goto          328\n        318: aload_0\n        319: iload         7\n        321: iconst_1\n        322: iadd\n-       323: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       323: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n        326: astore        5\n        328: aload_0\n        329: iload         7\n-       331: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+       331: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n        334: astore        4\n        336: goto          401\n        339: iload         8\n        341: iconst_m1\n        342: if_icmple     392\n        345: iload         8\n        347: aload_0\n-       348: invokevirtual #41                 // Method java/lang/String.length:()I\n+       348: invokevirtual #157                // Method java/lang/String.length:()I\n        351: if_icmple     381\n-       354: new           #4                  // class java/lang/NumberFormatException\n+       354: new           #19                 // class java/lang/NumberFormatException\n        357: dup\n-       358: new           #47                 // class java/lang/StringBuilder\n+       358: new           #180                // class java/lang/StringBuilder\n        361: dup\n-       362: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       362: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        365: aload_0\n-       366: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       369: ldc           #50                 // String  is not a valid number.\n-       371: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       374: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       377: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       366: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       369: ldc           #187                // String  is not a valid number.\n+       371: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       374: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       377: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        380: athrow\n        381: aload_0\n        382: iload         8\n-       384: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+       384: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n        387: astore        4\n        389: goto          398\n        392: aload_0\n-       393: invokestatic  #55                 // Method getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+       393: invokestatic  #204                // Method getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n        396: astore        4\n        398: aconst_null\n        399: astore        5\n        401: iload_3\n-       402: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+       402: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n        405: ifne          748\n        408: iload_3\n        409: bipush        46\n        411: if_icmpeq     748\n        414: iload         8\n        416: iconst_m1\n        417: if_icmple     450\n        420: iload         8\n        422: aload_0\n-       423: invokevirtual #41                 // Method java/lang/String.length:()I\n+       423: invokevirtual #157                // Method java/lang/String.length:()I\n        426: iconst_1\n        427: isub\n        428: if_icmpge     450\n        431: aload_0\n        432: iload         8\n        434: iconst_1\n        435: iadd\n        436: aload_0\n-       437: invokevirtual #41                 // Method java/lang/String.length:()I\n+       437: invokevirtual #157                // Method java/lang/String.length:()I\n        440: iconst_1\n        441: isub\n-       442: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       442: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        445: astore        6\n        447: goto          453\n        450: aconst_null\n        451: astore        6\n        453: aload_0\n        454: iconst_0\n        455: aload_0\n-       456: invokevirtual #41                 // Method java/lang/String.length:()I\n+       456: invokevirtual #157                // Method java/lang/String.length:()I\n        459: iconst_1\n        460: isub\n-       461: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       461: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        464: astore        9\n        466: aload         4\n-       468: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       468: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        471: ifeq          486\n        474: aload         6\n-       476: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       476: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        479: ifeq          486\n        482: iconst_1\n        483: goto          487\n        486: iconst_0\n        487: istore        10\n        489: iload_3\n        490: lookupswitch  { // 6\n@@ -1271,195 +1271,195 @@\n                  default: 721\n             }\n        548: aload         5\n        550: ifnonnull     611\n        553: aload         6\n        555: ifnonnull     611\n        558: aload         9\n-       560: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+       560: invokevirtual #216                // Method java/lang/String.isEmpty:()Z\n        563: ifne          589\n        566: aload         9\n        568: iconst_0\n-       569: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       569: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        572: bipush        45\n        574: if_icmpne     589\n        577: aload         9\n        579: iconst_1\n-       580: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       583: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z\n+       580: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       583: invokestatic  #220                // Method isDigits:(Ljava/lang/String;)Z\n        586: ifne          597\n        589: aload         9\n-       591: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z\n+       591: invokestatic  #220                // Method isDigits:(Ljava/lang/String;)Z\n        594: ifeq          611\n        597: aload         9\n-       599: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       599: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        602: areturn\n        603: astore        11\n        605: aload         9\n-       607: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       607: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        610: areturn\n-       611: new           #4                  // class java/lang/NumberFormatException\n+       611: new           #19                 // class java/lang/NumberFormatException\n        614: dup\n-       615: new           #47                 // class java/lang/StringBuilder\n+       615: new           #180                // class java/lang/StringBuilder\n        618: dup\n-       619: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       619: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        622: aload_0\n-       623: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       626: ldc           #50                 // String  is not a valid number.\n-       628: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       631: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       634: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       623: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       626: ldc           #187                // String  is not a valid number.\n+       628: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       631: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       634: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        637: athrow\n        638: aload_0\n-       639: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+       639: invokestatic  #223                // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n        642: astore        11\n        644: aload         11\n-       646: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z\n+       646: invokevirtual #227                // Method java/lang/Float.isInfinite:()Z\n        649: ifne          670\n        652: aload         11\n-       654: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+       654: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n        657: fconst_0\n        658: fcmpl\n        659: ifne          667\n        662: iload         10\n        664: ifeq          670\n        667: aload         11\n        669: areturn\n        670: goto          675\n        673: astore        11\n        675: aload_0\n-       676: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+       676: invokestatic  #230                // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n        679: astore        11\n        681: aload         11\n-       683: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z\n+       683: invokevirtual #234                // Method java/lang/Double.isInfinite:()Z\n        686: ifne          708\n        689: aload         11\n-       691: invokevirtual #64                 // Method java/lang/Double.floatValue:()F\n+       691: invokevirtual #235                // Method java/lang/Double.floatValue:()F\n        694: f2d\n        695: dconst_0\n        696: dcmpl\n        697: ifne          705\n        700: iload         10\n        702: ifeq          708\n        705: aload         11\n        707: areturn\n        708: goto          713\n        711: astore        11\n        713: aload         9\n-       715: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       715: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        718: areturn\n        719: astore        11\n-       721: new           #4                  // class java/lang/NumberFormatException\n+       721: new           #19                 // class java/lang/NumberFormatException\n        724: dup\n-       725: new           #47                 // class java/lang/StringBuilder\n+       725: new           #180                // class java/lang/StringBuilder\n        728: dup\n-       729: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       729: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        732: aload_0\n-       733: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       736: ldc           #50                 // String  is not a valid number.\n-       738: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       741: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       744: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       733: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       736: ldc           #187                // String  is not a valid number.\n+       738: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       741: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       744: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        747: athrow\n        748: iload         8\n        750: iconst_m1\n        751: if_icmple     782\n        754: iload         8\n        756: aload_0\n-       757: invokevirtual #41                 // Method java/lang/String.length:()I\n+       757: invokevirtual #157                // Method java/lang/String.length:()I\n        760: iconst_1\n        761: isub\n        762: if_icmpge     782\n        765: aload_0\n        766: iload         8\n        768: iconst_1\n        769: iadd\n        770: aload_0\n-       771: invokevirtual #41                 // Method java/lang/String.length:()I\n-       774: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       771: invokevirtual #157                // Method java/lang/String.length:()I\n+       774: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        777: astore        6\n        779: goto          785\n        782: aconst_null\n        783: astore        6\n        785: aload         5\n        787: ifnonnull     814\n        790: aload         6\n        792: ifnonnull     814\n        795: aload_0\n-       796: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+       796: invokestatic  #172                // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n        799: areturn\n        800: astore        9\n        802: aload_0\n-       803: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       803: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        806: areturn\n        807: astore        9\n        809: aload_0\n-       810: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       810: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        813: areturn\n        814: aload         4\n-       816: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       816: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        819: ifeq          834\n        822: aload         6\n-       824: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       824: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        827: ifeq          834\n        830: iconst_1\n        831: goto          835\n        834: iconst_0\n        835: istore        9\n        837: aload_0\n-       838: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+       838: invokestatic  #223                // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n        841: astore        10\n        843: aload_0\n-       844: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+       844: invokestatic  #230                // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n        847: astore        11\n        849: aload         10\n-       851: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z\n+       851: invokevirtual #227                // Method java/lang/Float.isInfinite:()Z\n        854: ifne          891\n        857: aload         10\n-       859: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+       859: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n        862: fconst_0\n        863: fcmpl\n        864: ifne          872\n        867: iload         9\n        869: ifeq          891\n        872: aload         10\n-       874: invokevirtual #65                 // Method java/lang/Float.toString:()Ljava/lang/String;\n+       874: invokevirtual #236                // Method java/lang/Float.toString:()Ljava/lang/String;\n        877: aload         11\n-       879: invokevirtual #66                 // Method java/lang/Double.toString:()Ljava/lang/String;\n-       882: invokevirtual #67                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       879: invokevirtual #237                // Method java/lang/Double.toString:()Ljava/lang/String;\n+       882: invokevirtual #238                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        885: ifeq          891\n        888: aload         10\n        890: areturn\n        891: aload         11\n-       893: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z\n+       893: invokevirtual #234                // Method java/lang/Double.isInfinite:()Z\n        896: ifne          942\n        899: aload         11\n-       901: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n+       901: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n        904: dconst_0\n        905: dcmpl\n        906: ifne          914\n        909: iload         9\n        911: ifeq          942\n        914: aload_0\n-       915: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       915: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        918: astore        12\n        920: aload         12\n        922: aload         11\n-       924: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n-       927: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-       930: invokevirtual #68                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+       924: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n+       927: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+       930: invokevirtual #242                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n        933: ifne          939\n        936: aload         11\n        938: areturn\n        939: aload         12\n        941: areturn\n        942: goto          947\n        945: astore        10\n        947: aload_0\n-       948: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       948: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        951: areturn\n       Exception table:\n          from    to  target type\n            597   602   603   Class java/lang/NumberFormatException\n            638   669   673   Class java/lang/NumberFormatException\n            675   707   711   Class java/lang/NumberFormatException\n            713   718   719   Class java/lang/NumberFormatException\n@@ -1678,28 +1678,28 @@\n   private static java.lang.String getMantissa(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokevirtual #41                 // Method java/lang/String.length:()I\n-         5: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokevirtual #157                // Method java/lang/String.length:()I\n+         5: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 828: 0\n \n   private static java.lang.String getMantissa(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+         2: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n          5: istore_2\n          6: iload_2\n          7: bipush        45\n          9: if_icmpeq     18\n         12: iload_2\n         13: bipush        43\n         15: if_icmpne     22\n@@ -1708,20 +1708,20 @@\n         22: iconst_0\n         23: istore_3\n         24: iload_3\n         25: ifeq          37\n         28: aload_0\n         29: iconst_1\n         30: iload_1\n-        31: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        31: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         34: goto          43\n         37: aload_0\n         38: iconst_0\n         39: iload_1\n-        40: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        40: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         43: areturn\n       LineNumberTable:\n         line 841: 0\n         line 842: 6\n         line 844: 24\n       StackMapTable: number_of_entries = 5\n         frame_type = 252 /* append */\n@@ -1742,31 +1742,31 @@\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_1\n          5: ireturn\n          6: aload_0\n-         7: invokevirtual #41                 // Method java/lang/String.length:()I\n+         7: invokevirtual #157                // Method java/lang/String.length:()I\n         10: iconst_1\n         11: isub\n         12: istore_1\n         13: iload_1\n         14: iflt          35\n         17: aload_0\n         18: iload_1\n-        19: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        19: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         22: bipush        48\n         24: if_icmpeq     29\n         27: iconst_0\n         28: ireturn\n         29: iinc          1, -1\n         32: goto          13\n         35: aload_0\n-        36: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+        36: invokevirtual #216                // Method java/lang/String.isEmpty:()Z\n         39: ifne          46\n         42: iconst_1\n         43: goto          47\n         46: iconst_0\n         47: ireturn\n       LineNumberTable:\n         line 856: 0\n@@ -1794,15 +1794,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #69                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+         7: invokestatic  #246                // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n         10: areturn\n       LineNumberTable:\n         line 878: 0\n         line 879: 4\n         line 881: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -1813,15 +1813,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #70                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+         7: invokestatic  #248                // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n         10: areturn\n       LineNumberTable:\n         line 894: 0\n         line 895: 4\n         line 897: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -1832,15 +1832,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #71                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+         7: invokestatic  #250                // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n         10: areturn\n       LineNumberTable:\n         line 912: 0\n         line 913: 4\n         line 916: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -1851,15 +1851,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #72                 // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+         7: invokestatic  #253                // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n         10: areturn\n       LineNumberTable:\n         line 931: 0\n         line 932: 4\n         line 934: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -1876,73 +1876,73 @@\n          6: iconst_0\n          7: istore_1\n          8: bipush        10\n         10: istore_2\n         11: iconst_0\n         12: istore_3\n         13: aload_0\n-        14: ldc           #73                 // String -\n-        16: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        14: ldc           #255                // String -\n+        16: invokevirtual #153                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         19: ifeq          26\n         22: iconst_1\n         23: istore_3\n         24: iconst_1\n         25: istore_1\n         26: aload_0\n-        27: ldc           #34                 // String 0x\n+        27: ldc           #141                // String 0x\n         29: iload_1\n-        30: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        30: invokevirtual #257                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         33: ifne          46\n         36: aload_0\n-        37: ldc           #35                 // String 0X\n+        37: ldc           #143                // String 0X\n         39: iload_1\n-        40: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        40: invokevirtual #257                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         43: ifeq          55\n         46: bipush        16\n         48: istore_2\n         49: iinc          1, 2\n-        52: goto          100\n+        52: goto          101\n         55: aload_0\n-        56: ldc           #38                 // String #\n+        56: ldc           #149                // String #\n         58: iload_1\n-        59: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        59: invokevirtual #257                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         62: ifeq          74\n         65: bipush        16\n         67: istore_2\n         68: iinc          1, 1\n-        71: goto          100\n+        71: goto          101\n         74: aload_0\n-        75: ldc           #75                 // String 0\n-        77: iload_1\n-        78: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-        81: ifeq          100\n-        84: aload_0\n-        85: invokevirtual #41                 // Method java/lang/String.length:()I\n-        88: iload_1\n-        89: iconst_1\n-        90: iadd\n-        91: if_icmple     100\n-        94: bipush        8\n-        96: istore_2\n-        97: iinc          1, 1\n-       100: new           #76                 // class java/math/BigInteger\n-       103: dup\n-       104: aload_0\n-       105: iload_1\n-       106: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       109: iload_2\n-       110: invokespecial #77                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-       113: astore        4\n-       115: iload_3\n-       116: ifeq          127\n-       119: aload         4\n-       121: invokevirtual #78                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-       124: goto          129\n-       127: aload         4\n-       129: areturn\n+        75: ldc_w         #260                // String 0\n+        78: iload_1\n+        79: invokevirtual #257                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        82: ifeq          101\n+        85: aload_0\n+        86: invokevirtual #157                // Method java/lang/String.length:()I\n+        89: iload_1\n+        90: iconst_1\n+        91: iadd\n+        92: if_icmple     101\n+        95: bipush        8\n+        97: istore_2\n+        98: iinc          1, 1\n+       101: new           #262                // class java/math/BigInteger\n+       104: dup\n+       105: aload_0\n+       106: iload_1\n+       107: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       110: iload_2\n+       111: invokespecial #264                // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+       114: astore        4\n+       116: iload_3\n+       117: ifeq          128\n+       120: aload         4\n+       122: invokevirtual #267                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+       125: goto          130\n+       128: aload         4\n+       130: areturn\n       LineNumberTable:\n         line 948: 0\n         line 949: 4\n         line 951: 6\n         line 952: 8\n         line 953: 11\n         line 954: 13\n@@ -1951,27 +1951,27 @@\n         line 958: 26\n         line 959: 46\n         line 960: 49\n         line 961: 55\n         line 962: 65\n         line 963: 68\n         line 964: 74\n-        line 965: 94\n-        line 966: 97\n-        line 969: 100\n-        line 970: 115\n+        line 965: 95\n+        line 966: 98\n+        line 969: 101\n+        line 970: 116\n       StackMapTable: number_of_entries = 8\n         frame_type = 6 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 19\n           locals = [ int, int, int ]\n         frame_type = 19 /* same */\n         frame_type = 8 /* same */\n         frame_type = 18 /* same */\n-        frame_type = 25 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class java/math/BigInteger ]\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ class java/math/BigInteger ]\n \n   public static java.math.BigDecimal createBigDecimal(java.lang.String);\n@@ -1980,63 +1980,63 @@\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+         7: invokestatic  #128                // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         10: ifeq          23\n-        13: new           #4                  // class java/lang/NumberFormatException\n+        13: new           #19                 // class java/lang/NumberFormatException\n         16: dup\n-        17: ldc           #31                 // String A blank string is not a valid number\n-        19: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #134                // String A blank string is not a valid number\n+        19: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: aload_0\n-        24: invokevirtual #79                 // Method java/lang/String.trim:()Ljava/lang/String;\n-        27: ldc           #80                 // String --\n-        29: invokevirtual #40                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        32: ifeq          62\n-        35: new           #4                  // class java/lang/NumberFormatException\n-        38: dup\n-        39: new           #47                 // class java/lang/StringBuilder\n-        42: dup\n-        43: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        46: aload_0\n-        47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        50: ldc           #50                 // String  is not a valid number.\n-        52: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        55: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        58: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-        61: athrow\n-        62: new           #81                 // class java/math/BigDecimal\n-        65: dup\n-        66: aload_0\n-        67: invokespecial #82                 // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-        70: areturn\n+        24: invokevirtual #271                // Method java/lang/String.trim:()Ljava/lang/String;\n+        27: ldc_w         #274                // String --\n+        30: invokevirtual #153                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        33: ifeq          63\n+        36: new           #19                 // class java/lang/NumberFormatException\n+        39: dup\n+        40: new           #180                // class java/lang/StringBuilder\n+        43: dup\n+        44: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n+        47: aload_0\n+        48: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: ldc           #187                // String  is not a valid number.\n+        53: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        59: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        62: athrow\n+        63: new           #55                 // class java/math/BigDecimal\n+        66: dup\n+        67: aload_0\n+        68: invokespecial #276                // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+        71: areturn\n       LineNumberTable:\n         line 983: 0\n         line 984: 4\n         line 987: 6\n         line 988: 13\n         line 990: 23\n-        line 995: 35\n-        line 997: 62\n+        line 995: 36\n+        line 997: 63\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 16 /* same */\n-        frame_type = 38 /* same */\n+        frame_type = 39 /* same */\n \n   public static long min(long...);\n     descriptor: ([J)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: laload\n          7: lstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n@@ -2075,15 +2075,15 @@\n \n   public static int min(int...);\n     descriptor: ([I)I\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: iaload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2121,15 +2121,15 @@\n \n   public static short min(short...);\n     descriptor: ([S)S\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: saload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2167,15 +2167,15 @@\n \n   public static byte min(byte...);\n     descriptor: ([B)B\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: baload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2213,31 +2213,31 @@\n \n   public static double min(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: daload\n          7: dstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     47\n         16: aload_0\n         17: iload_3\n         18: daload\n-        19: invokestatic  #84                 // Method java/lang/Double.isNaN:(D)Z\n+        19: invokestatic  #281                // Method java/lang/Double.isNaN:(D)Z\n         22: ifeq          29\n-        25: ldc2_w        #86                 // double NaNd\n+        25: ldc2_w        #285                // double NaNd\n         28: dreturn\n         29: aload_0\n         30: iload_3\n         31: daload\n         32: dload_1\n         33: dcmpg\n         34: ifge          41\n@@ -2270,72 +2270,72 @@\n \n   public static float min(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: faload\n          7: fstore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n         11: aload_0\n         12: arraylength\n-        13: if_icmpge     46\n+        13: if_icmpge     47\n         16: aload_0\n         17: iload_2\n         18: faload\n-        19: invokestatic  #88                 // Method java/lang/Float.isNaN:(F)Z\n-        22: ifeq          28\n-        25: ldc           #90                 // float NaNf\n-        27: freturn\n-        28: aload_0\n-        29: iload_2\n-        30: faload\n-        31: fload_1\n-        32: fcmpg\n-        33: ifge          40\n-        36: aload_0\n-        37: iload_2\n-        38: faload\n-        39: fstore_1\n-        40: iinc          2, 1\n-        43: goto          10\n-        46: fload_1\n-        47: freturn\n+        19: invokestatic  #287                // Method java/lang/Float.isNaN:(F)Z\n+        22: ifeq          29\n+        25: ldc_w         #290                // float NaNf\n+        28: freturn\n+        29: aload_0\n+        30: iload_2\n+        31: faload\n+        32: fload_1\n+        33: fcmpg\n+        34: ifge          41\n+        37: aload_0\n+        38: iload_2\n+        39: faload\n+        40: fstore_1\n+        41: iinc          2, 1\n+        44: goto          10\n+        47: fload_1\n+        48: freturn\n       LineNumberTable:\n         line 1138: 0\n         line 1141: 4\n         line 1142: 8\n         line 1143: 16\n         line 1144: 25\n-        line 1146: 28\n-        line 1147: 36\n-        line 1142: 40\n-        line 1151: 46\n+        line 1146: 29\n+        line 1147: 37\n+        line 1142: 41\n+        line 1151: 47\n       StackMapTable: number_of_entries = 4\n         frame_type = 253 /* append */\n           offset_delta = 10\n           locals = [ float, int ]\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n         frame_type = 11 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   public static long max(long...);\n     descriptor: ([J)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: laload\n          7: lstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n@@ -2374,15 +2374,15 @@\n \n   public static int max(int...);\n     descriptor: ([I)I\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: iaload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2420,15 +2420,15 @@\n \n   public static short max(short...);\n     descriptor: ([S)S\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: saload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2466,15 +2466,15 @@\n \n   public static byte max(byte...);\n     descriptor: ([B)B\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: baload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2512,31 +2512,31 @@\n \n   public static double max(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: daload\n          7: dstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     47\n         16: aload_0\n         17: iload_3\n         18: daload\n-        19: invokestatic  #84                 // Method java/lang/Double.isNaN:(D)Z\n+        19: invokestatic  #281                // Method java/lang/Double.isNaN:(D)Z\n         22: ifeq          29\n-        25: ldc2_w        #86                 // double NaNd\n+        25: ldc2_w        #285                // double NaNd\n         28: dreturn\n         29: aload_0\n         30: iload_3\n         31: daload\n         32: dload_1\n         33: dcmpl\n         34: ifle          41\n@@ -2569,99 +2569,99 @@\n \n   public static float max(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #83                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #277                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: faload\n          7: fstore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n         11: aload_0\n         12: arraylength\n-        13: if_icmpge     46\n+        13: if_icmpge     47\n         16: aload_0\n         17: iload_2\n         18: faload\n-        19: invokestatic  #88                 // Method java/lang/Float.isNaN:(F)Z\n-        22: ifeq          28\n-        25: ldc           #90                 // float NaNf\n-        27: freturn\n-        28: aload_0\n-        29: iload_2\n-        30: faload\n-        31: fload_1\n-        32: fcmpl\n-        33: ifle          40\n-        36: aload_0\n-        37: iload_2\n-        38: faload\n-        39: fstore_1\n-        40: iinc          2, 1\n-        43: goto          10\n-        46: fload_1\n-        47: freturn\n+        19: invokestatic  #287                // Method java/lang/Float.isNaN:(F)Z\n+        22: ifeq          29\n+        25: ldc_w         #290                // float NaNf\n+        28: freturn\n+        29: aload_0\n+        30: iload_2\n+        31: faload\n+        32: fload_1\n+        33: fcmpl\n+        34: ifle          41\n+        37: aload_0\n+        38: iload_2\n+        39: faload\n+        40: fstore_1\n+        41: iinc          2, 1\n+        44: goto          10\n+        47: fload_1\n+        48: freturn\n       LineNumberTable:\n         line 1292: 0\n         line 1295: 4\n         line 1296: 8\n         line 1297: 16\n         line 1298: 25\n-        line 1300: 28\n-        line 1301: 36\n-        line 1296: 40\n-        line 1305: 46\n+        line 1300: 29\n+        line 1301: 37\n+        line 1296: 41\n+        line 1305: 47\n       StackMapTable: number_of_entries = 4\n         frame_type = 253 /* append */\n           offset_delta = 10\n           locals = [ float, int ]\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n         frame_type = 11 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   private static void validateArray(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #91                 // String The Array must not be null\n-        11: iconst_0\n-        12: anewarray     #92                 // class java/lang/Object\n-        15: invokestatic  #93                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-        18: aload_0\n-        19: invokestatic  #94                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-        22: ifeq          29\n-        25: iconst_1\n-        26: goto          30\n-        29: iconst_0\n-        30: ldc           #95                 // String Array cannot be empty.\n-        32: iconst_0\n-        33: anewarray     #92                 // class java/lang/Object\n-        36: invokestatic  #93                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-        39: return\n+         9: ldc_w         #291                // String The Array must not be null\n+        12: iconst_0\n+        13: anewarray     #2                  // class java/lang/Object\n+        16: invokestatic  #293                // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        19: aload_0\n+        20: invokestatic  #299                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+        23: ifeq          30\n+        26: iconst_1\n+        27: goto          31\n+        30: iconst_0\n+        31: ldc_w         #305                // String Array cannot be empty.\n+        34: iconst_0\n+        35: anewarray     #2                  // class java/lang/Object\n+        38: invokestatic  #293                // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        41: return\n       LineNumberTable:\n         line 1315: 0\n-        line 1316: 18\n-        line 1317: 39\n+        line 1316: 19\n+        line 1317: 41\n       StackMapTable: number_of_entries = 4\n         frame_type = 8 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-        frame_type = 19 /* same */\n+        frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public static long min(long, long, long);\n     descriptor: (JJJ)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n@@ -2774,31 +2774,31 @@\n   public static double min(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #96                 // Method java/lang/Math.min:(DD)D\n+         2: invokestatic  #307                // Method java/lang/Math.min:(DD)D\n          5: dload         4\n-         7: invokestatic  #96                 // Method java/lang/Math.min:(DD)D\n+         7: invokestatic  #307                // Method java/lang/Math.min:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 1406: 0\n \n   public static float min(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #97                 // Method java/lang/Math.min:(FF)F\n+         2: invokestatic  #313                // Method java/lang/Math.min:(FF)F\n          5: fload_2\n-         6: invokestatic  #97                 // Method java/lang/Math.min:(FF)F\n+         6: invokestatic  #313                // Method java/lang/Math.min:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 1422: 0\n \n   public static long max(long, long, long);\n     descriptor: (JJJ)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n@@ -2912,73 +2912,73 @@\n   public static double max(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #98                 // Method java/lang/Math.max:(DD)D\n+         2: invokestatic  #316                // Method java/lang/Math.max:(DD)D\n          5: dload         4\n-         7: invokestatic  #98                 // Method java/lang/Math.max:(DD)D\n+         7: invokestatic  #316                // Method java/lang/Math.max:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 1512: 0\n \n   public static float max(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #99                 // Method java/lang/Math.max:(FF)F\n+         2: invokestatic  #319                // Method java/lang/Math.max:(FF)F\n          5: fload_2\n-         6: invokestatic  #99                 // Method java/lang/Math.max:(FF)F\n+         6: invokestatic  #319                // Method java/lang/Math.max:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 1528: 0\n \n   public static boolean isDigits(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #100                // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #321                // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n          4: ireturn\n       LineNumberTable:\n         line 1543: 0\n \n   public static boolean isNumber(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #101                // Method isCreatable:(Ljava/lang/String;)Z\n+         1: invokestatic  #324                // Method isCreatable:(Ljava/lang/String;)Z\n          4: ireturn\n       LineNumberTable:\n         line 1573: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #235()\n+      0: #448()\n         java.lang.Deprecated\n \n   public static boolean isCreatable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #327                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: invokevirtual #103                // Method java/lang/String.toCharArray:()[C\n+        10: invokevirtual #329                // Method java/lang/String.toCharArray:()[C\n         13: astore_1\n         14: aload_1\n         15: arraylength\n         16: istore_2\n         17: iconst_0\n         18: istore_3\n         19: iconst_0\n@@ -3009,15 +3009,15 @@\n         59: aload_1\n         60: iload         7\n         62: caload\n         63: bipush        48\n         65: if_icmpne     237\n         68: aload_0\n         69: bipush        46\n-        71: invokestatic  #104                // Method org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+        71: invokestatic  #333                // Method org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n         74: ifne          237\n         77: aload_1\n         78: iload         7\n         80: iconst_1\n         81: iadd\n         82: caload\n         83: bipush        120\n@@ -3079,15 +3079,15 @@\n        182: iconst_1\n        183: ireturn\n        184: aload_1\n        185: iload         7\n        187: iconst_1\n        188: iadd\n        189: caload\n-       190: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+       190: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n        193: ifeq          237\n        196: iload         7\n        198: iconst_1\n        199: iadd\n        200: istore        8\n        202: iload         8\n        204: aload_1\n@@ -3427,46 +3427,46 @@\n \n   public static boolean isParsable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #327                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n         10: aload_0\n-        11: invokevirtual #41                 // Method java/lang/String.length:()I\n+        11: invokevirtual #157                // Method java/lang/String.length:()I\n         14: iconst_1\n         15: isub\n-        16: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        16: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         19: bipush        46\n         21: if_icmpne     26\n         24: iconst_0\n         25: ireturn\n         26: aload_0\n         27: iconst_0\n-        28: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        28: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         31: bipush        45\n         33: if_icmpne     52\n         36: aload_0\n-        37: invokevirtual #41                 // Method java/lang/String.length:()I\n+        37: invokevirtual #157                // Method java/lang/String.length:()I\n         40: iconst_1\n         41: if_icmpne     46\n         44: iconst_0\n         45: ireturn\n         46: aload_0\n         47: iconst_1\n-        48: invokestatic  #105                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n+        48: invokestatic  #337                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n         51: ireturn\n         52: aload_0\n         53: iconst_0\n-        54: invokestatic  #105                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n+        54: invokestatic  #337                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n         57: ireturn\n       LineNumberTable:\n         line 1729: 0\n         line 1730: 7\n         line 1732: 9\n         line 1733: 24\n         line 1735: 26\n@@ -3487,19 +3487,19 @@\n       stack=2, locals=5, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iload_1\n          3: istore_3\n          4: iload_3\n          5: aload_0\n-         6: invokevirtual #41                 // Method java/lang/String.length:()I\n+         6: invokevirtual #157                // Method java/lang/String.length:()I\n          9: if_icmpge     68\n         12: aload_0\n         13: iload_3\n-        14: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        14: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         17: bipush        46\n         19: if_icmpne     26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: istore        4\n         29: iload         4\n@@ -3510,16 +3510,16 @@\n         39: if_icmple     44\n         42: iconst_0\n         43: ireturn\n         44: iload         4\n         46: ifne          62\n         49: aload_0\n         50: iload_3\n-        51: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n-        54: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+        51: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n+        54: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n         57: ifne          62\n         60: iconst_0\n         61: ireturn\n         62: iinc          3, 1\n         65: goto          4\n         68: iconst_1\n         69: ireturn\n@@ -3648,71 +3648,71 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: lconst_0\n-         1: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-         4: putstatic     #107                // Field LONG_ZERO:Ljava/lang/Long;\n+         1: invokestatic  #340                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         4: putstatic     #343                // Field LONG_ZERO:Ljava/lang/Long;\n          7: lconst_1\n-         8: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-        11: putstatic     #108                // Field LONG_ONE:Ljava/lang/Long;\n-        14: ldc2_w        #109                // long -1l\n-        17: invokestatic  #106                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-        20: putstatic     #111                // Field LONG_MINUS_ONE:Ljava/lang/Long;\n+         8: invokestatic  #340                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        11: putstatic     #347                // Field LONG_ONE:Ljava/lang/Long;\n+        14: ldc2_w        #350                // long -1l\n+        17: invokestatic  #340                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        20: putstatic     #352                // Field LONG_MINUS_ONE:Ljava/lang/Long;\n         23: iconst_0\n-        24: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        27: putstatic     #113                // Field INTEGER_ZERO:Ljava/lang/Integer;\n+        24: invokestatic  #355                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        27: putstatic     #358                // Field INTEGER_ZERO:Ljava/lang/Integer;\n         30: iconst_1\n-        31: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        34: putstatic     #114                // Field INTEGER_ONE:Ljava/lang/Integer;\n+        31: invokestatic  #355                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        34: putstatic     #361                // Field INTEGER_ONE:Ljava/lang/Integer;\n         37: iconst_2\n-        38: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        41: putstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+        38: invokestatic  #355                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        41: putstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n         44: iconst_m1\n-        45: invokestatic  #112                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        48: putstatic     #115                // Field INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+        45: invokestatic  #355                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        48: putstatic     #364                // Field INTEGER_MINUS_ONE:Ljava/lang/Integer;\n         51: iconst_0\n-        52: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        55: putstatic     #117                // Field SHORT_ZERO:Ljava/lang/Short;\n+        52: invokestatic  #367                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        55: putstatic     #370                // Field SHORT_ZERO:Ljava/lang/Short;\n         58: iconst_1\n-        59: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        62: putstatic     #118                // Field SHORT_ONE:Ljava/lang/Short;\n+        59: invokestatic  #367                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        62: putstatic     #374                // Field SHORT_ONE:Ljava/lang/Short;\n         65: iconst_m1\n-        66: invokestatic  #116                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        69: putstatic     #119                // Field SHORT_MINUS_ONE:Ljava/lang/Short;\n+        66: invokestatic  #367                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        69: putstatic     #377                // Field SHORT_MINUS_ONE:Ljava/lang/Short;\n         72: iconst_0\n-        73: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        76: putstatic     #121                // Field BYTE_ZERO:Ljava/lang/Byte;\n+        73: invokestatic  #380                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        76: putstatic     #383                // Field BYTE_ZERO:Ljava/lang/Byte;\n         79: iconst_1\n-        80: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        83: putstatic     #122                // Field BYTE_ONE:Ljava/lang/Byte;\n+        80: invokestatic  #380                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        83: putstatic     #387                // Field BYTE_ONE:Ljava/lang/Byte;\n         86: iconst_m1\n-        87: invokestatic  #120                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        90: putstatic     #123                // Field BYTE_MINUS_ONE:Ljava/lang/Byte;\n+        87: invokestatic  #380                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        90: putstatic     #390                // Field BYTE_MINUS_ONE:Ljava/lang/Byte;\n         93: dconst_0\n-        94: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-        97: putstatic     #125                // Field DOUBLE_ZERO:Ljava/lang/Double;\n+        94: invokestatic  #393                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        97: putstatic     #396                // Field DOUBLE_ZERO:Ljava/lang/Double;\n        100: dconst_1\n-       101: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-       104: putstatic     #126                // Field DOUBLE_ONE:Ljava/lang/Double;\n-       107: ldc2_w        #127                // double -1.0d\n-       110: invokestatic  #124                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-       113: putstatic     #129                // Field DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+       101: invokestatic  #393                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+       104: putstatic     #400                // Field DOUBLE_ONE:Ljava/lang/Double;\n+       107: ldc2_w        #403                // double -1.0d\n+       110: invokestatic  #393                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+       113: putstatic     #405                // Field DOUBLE_MINUS_ONE:Ljava/lang/Double;\n        116: fconst_0\n-       117: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       120: putstatic     #131                // Field FLOAT_ZERO:Ljava/lang/Float;\n+       117: invokestatic  #408                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       120: putstatic     #411                // Field FLOAT_ZERO:Ljava/lang/Float;\n        123: fconst_1\n-       124: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       127: putstatic     #132                // Field FLOAT_ONE:Ljava/lang/Float;\n-       130: ldc           #133                // float -1.0f\n-       132: invokestatic  #130                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       135: putstatic     #134                // Field FLOAT_MINUS_ONE:Ljava/lang/Float;\n-       138: return\n+       124: invokestatic  #408                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       127: putstatic     #415                // Field FLOAT_ONE:Ljava/lang/Float;\n+       130: ldc_w         #418                // float -1.0f\n+       133: invokestatic  #408                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       136: putstatic     #419                // Field FLOAT_MINUS_ONE:Ljava/lang/Float;\n+       139: return\n       LineNumberTable:\n         line 35: 0\n         line 37: 7\n         line 39: 14\n         line 41: 23\n         line 43: 30\n         line 45: 37\n"}]}
