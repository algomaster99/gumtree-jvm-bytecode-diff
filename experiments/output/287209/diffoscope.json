{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream$CurrentEntry.class", "source2": "second/ZipArchiveInputStream$CurrentEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,32 +1,32 @@\n-  SHA-256 checksum 13fe703f9ada71887b8e26610595877324b505a29d9463ce39d7019f43b35571\n+  SHA-256 checksum 7237b72a689a7382c24b64ece943749b97214200ecae052d699ae16ea82325f6\n   Compiled from \"ZipArchiveInputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #14                         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n   super_class: #15                        // java/lang/Object\n-  interfaces: 0, fields: 7, methods: 15, attributes: 2\n+  interfaces: 0, fields: 7, methods: 16, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #14.#59        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n-   #2 = Fieldref           #14.#60        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n-   #3 = Fieldref           #14.#61        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n-   #4 = Fieldref           #14.#62        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n-   #5 = Fieldref           #14.#63        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.in:Ljava/io/InputStream;\n-   #6 = Fieldref           #14.#64        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n-   #7 = Fieldref           #14.#65        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #8 = Methodref          #14.#66        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n-   #9 = Methodref          #15.#66        // java/lang/Object.\"<init>\":()V\n-  #10 = Class              #67            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #11 = Methodref          #10.#66        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n-  #12 = Class              #68            // java/util/zip/CRC32\n-  #13 = Methodref          #12.#66        // java/util/zip/CRC32.\"<init>\":()V\n-  #14 = Class              #70            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #15 = Class              #71            // java/lang/Object\n+   #1 = Fieldref           #14.#60        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesReadFromStream:J\n+   #2 = Fieldref           #14.#61        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.bytesRead:J\n+   #3 = Fieldref           #14.#62        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.crc:Ljava/util/zip/CRC32;\n+   #4 = Fieldref           #14.#63        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.usesZip64:Z\n+   #5 = Fieldref           #14.#64        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.in:Ljava/io/InputStream;\n+   #6 = Fieldref           #14.#65        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.hasDataDescriptor:Z\n+   #7 = Fieldref           #14.#66        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #8 = Methodref          #14.#67        // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry.\"<init>\":()V\n+   #9 = Methodref          #15.#67        // java/lang/Object.\"<init>\":()V\n+  #10 = Class              #68            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #11 = Methodref          #10.#67        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.\"<init>\":()V\n+  #12 = Class              #69            // java/util/zip/CRC32\n+  #13 = Methodref          #12.#67        // java/util/zip/CRC32.\"<init>\":()V\n+  #14 = Class              #71            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  #15 = Class              #72            // java/lang/Object\n   #16 = Utf8               entry\n   #17 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #18 = Utf8               hasDataDescriptor\n   #19 = Utf8               Z\n   #20 = Utf8               usesZip64\n   #21 = Utf8               bytesRead\n   #22 = Utf8               J\n@@ -35,15 +35,15 @@\n   #25 = Utf8               Ljava/util/zip/CRC32;\n   #26 = Utf8               in\n   #27 = Utf8               Ljava/io/InputStream;\n   #28 = Utf8               <init>\n   #29 = Utf8               ()V\n   #30 = Utf8               Code\n   #31 = Utf8               LineNumberTable\n-  #32 = Class              #72            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  #32 = Class              #73            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n   #33 = Utf8               InnerClasses\n   #34 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1;)V\n   #35 = Utf8               access$100\n   #36 = Utf8               CurrentEntry\n   #37 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #38 = Utf8               access$202\n   #39 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;Z)Z\n@@ -54,37 +54,38 @@\n   #44 = Utf8               access$402\n   #45 = Utf8               access$300\n   #46 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/io/InputStream;\n   #47 = Utf8               access$500\n   #48 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Ljava/util/zip/CRC32;\n   #49 = Utf8               access$600\n   #50 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n-  #51 = Utf8               access$700\n-  #52 = Utf8               access$702\n-  #53 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n-  #54 = Utf8               access$602\n-  #55 = Utf8               access$400\n-  #56 = Utf8               access$708\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               ZipArchiveInputStream.java\n-  #59 = NameAndType        #23:#22        // bytesReadFromStream:J\n-  #60 = NameAndType        #21:#22        // bytesRead:J\n-  #61 = NameAndType        #24:#25        // crc:Ljava/util/zip/CRC32;\n-  #62 = NameAndType        #20:#19        // usesZip64:Z\n-  #63 = NameAndType        #26:#27        // in:Ljava/io/InputStream;\n-  #64 = NameAndType        #18:#19        // hasDataDescriptor:Z\n-  #65 = NameAndType        #16:#17        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #66 = NameAndType        #28:#29        // \"<init>\":()V\n-  #67 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #68 = Utf8               java/util/zip/CRC32\n-  #69 = Class              #73            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #70 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n-  #71 = Utf8               java/lang/Object\n-  #72 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  #73 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #51 = Utf8               access$714\n+  #52 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n+  #53 = Utf8               access$614\n+  #54 = Utf8               access$700\n+  #55 = Utf8               access$722\n+  #56 = Utf8               access$400\n+  #57 = Utf8               access$708\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               ZipArchiveInputStream.java\n+  #60 = NameAndType        #23:#22        // bytesReadFromStream:J\n+  #61 = NameAndType        #21:#22        // bytesRead:J\n+  #62 = NameAndType        #24:#25        // crc:Ljava/util/zip/CRC32;\n+  #63 = NameAndType        #20:#19        // usesZip64:Z\n+  #64 = NameAndType        #26:#27        // in:Ljava/io/InputStream;\n+  #65 = NameAndType        #18:#19        // hasDataDescriptor:Z\n+  #66 = NameAndType        #16:#17        // entry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #67 = NameAndType        #28:#29        // \"<init>\":()V\n+  #68 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #69 = Utf8               java/util/zip/CRC32\n+  #70 = Class              #74            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #71 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry\n+  #72 = Utf8               java/lang/Object\n+  #73 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n+  #74 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry entry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private boolean hasDataDescriptor;\n     descriptor: Z\n@@ -234,48 +235,70 @@\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #2                  // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 1284: 0\n \n-  static long access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+  static long access$714(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n-      stack=2, locals=1, args_size=1\n+      stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #1                  // Field bytesReadFromStream:J\n-         4: lreturn\n+         1: dup\n+         2: getfield      #1                  // Field bytesReadFromStream:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #1                  // Field bytesReadFromStream:J\n+        11: lreturn\n       LineNumberTable:\n         line 1284: 0\n \n-  static long access$702(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n+  static long access$614(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #1                  // Field bytesReadFromStream:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #2                  // Field bytesRead:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #2                  // Field bytesRead:J\n+        11: lreturn\n+      LineNumberTable:\n+        line 1284: 0\n+\n+  static long access$700(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)J\n+    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n+    Code:\n+      stack=2, locals=1, args_size=1\n+         0: aload_0\n+         1: getfield      #1                  // Field bytesReadFromStream:J\n+         4: lreturn\n       LineNumberTable:\n         line 1284: 0\n \n-  static long access$602(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n+  static long access$722(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #2                  // Field bytesRead:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #1                  // Field bytesReadFromStream:J\n+         5: lload_1\n+         6: lsub\n+         7: dup2_x1\n+         8: putfield      #1                  // Field bytesReadFromStream:J\n+        11: lreturn\n       LineNumberTable:\n         line 1284: 0\n \n   static boolean access$400(org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$CurrentEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n@@ -301,8 +324,8 @@\n         11: lreturn\n       LineNumberTable:\n         line 1284: 0\n }\n SourceFile: \"ZipArchiveInputStream.java\"\n InnerClasses:\n   static #32;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$1\n-  private static final #36= #14 of #69;   // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  private static final #36= #14 of #70;   // CurrentEntry=class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream$CurrentEntry of class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n"}]}
