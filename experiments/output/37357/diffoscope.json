{"diffoscope-json-version": 1, "source1": "first/CountingPathVisitor.class", "source2": "second/CountingPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 55156659ab7ae655d70989620878a9b73c5faab6489fe748ece3460250a36a42\n+  SHA-256 checksum 46ec1e95d5c1b53653c0ca361ee5763da9755f7c6cd065d4a768db2f6f513e74\n   Compiled from \"CountingPathVisitor.java\"\n public class org.apache.commons.io.file.CountingPathVisitor extends org.apache.commons.io.file.SimplePathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/CountingPathVisitor\n   super_class: #26                        // org/apache/commons/io/file/SimplePathVisitor\n@@ -85,15 +85,15 @@\n    #75 = InterfaceMethodref #46.#76       // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #76 = NameAndType        #77:#78       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #77 = Utf8               accept\n    #78 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #79 = Fieldref           #70.#80       // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n    #80 = NameAndType        #81:#74       // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n    #81 = Utf8               SKIP_SUBTREE\n-   #82 = Methodref          #59.#83       // java/lang/Object.toString:()Ljava/lang/String;\n+   #82 = InterfaceMethodref #38.#83       // org/apache/commons/io/file/Counters$PathCounters.toString:()Ljava/lang/String;\n    #83 = NameAndType        #84:#85       // toString:()Ljava/lang/String;\n    #84 = Utf8               toString\n    #85 = Utf8               ()Ljava/lang/String;\n    #86 = InterfaceMethodref #38.#87       // org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n    #87 = NameAndType        #88:#89       // getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n    #88 = Utf8               getDirectoryCounter\n    #89 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n@@ -418,21 +418,21 @@\n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #40                 // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokevirtual #82                 // Method java/lang/Object.toString:()Ljava/lang/String;\n-         7: areturn\n+         4: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.toString:()Ljava/lang/String;\n+         9: areturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;\n+            0      10     0  this   Lorg/apache/commons/io/file/CountingPathVisitor;\n \n   protected void updateDirCounter(java.nio.file.Path, java.io.IOException);\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=3, args_size=3\n          0: aload_0\n"}]}
