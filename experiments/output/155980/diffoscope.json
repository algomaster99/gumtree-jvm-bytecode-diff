{"diffoscope-json-version": 1, "source1": "first/AbstractCircuitBreaker.class", "source2": "second/AbstractCircuitBreaker.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,155 +1,153 @@\n-  SHA-256 checksum 0dc92bbaf4422a474efc2cc840ed7c644ac6318871d05edb3b7bb6e6e444753f\n+  SHA-256 checksum 41c98373d3eaebab58a82b9aab62e767b130034e80b0f10dda52827d764181a4\n   Compiled from \"AbstractCircuitBreaker.java\"\n public abstract class org.apache.commons.lang3.concurrent.AbstractCircuitBreaker<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.CircuitBreaker<T>\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #19                         // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+    #2 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Class              #8            // java/util/concurrent/atomic/AtomicReference\n-    #8 = Utf8               java/util/concurrent/atomic/AtomicReference\n-    #9 = Fieldref           #10.#11       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #10 = Class              #12           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-   #11 = NameAndType        #13:#14       // CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #12 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-   #13 = Utf8               CLOSED\n-   #14 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #15 = Methodref          #7.#16        // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-   #16 = NameAndType        #5:#17        // \"<init>\":(Ljava/lang/Object;)V\n-   #17 = Utf8               (Ljava/lang/Object;)V\n-   #18 = Fieldref           #19.#20       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.state:Ljava/util/concurrent/atomic/AtomicReference;\n-   #19 = Class              #21           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-   #20 = NameAndType        #22:#23       // state:Ljava/util/concurrent/atomic/AtomicReference;\n-   #21 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-   #22 = Utf8               state\n-   #23 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;\n-   #24 = Class              #25           // java/beans/PropertyChangeSupport\n-   #25 = Utf8               java/beans/PropertyChangeSupport\n-   #26 = Methodref          #24.#16       // java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n-   #27 = Fieldref           #19.#28       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeSupport:Ljava/beans/PropertyChangeSupport;\n-   #28 = NameAndType        #29:#30       // changeSupport:Ljava/beans/PropertyChangeSupport;\n-   #29 = Utf8               changeSupport\n-   #30 = Utf8               Ljava/beans/PropertyChangeSupport;\n-   #31 = Methodref          #7.#32        // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-   #32 = NameAndType        #33:#34       // get:()Ljava/lang/Object;\n-   #33 = Utf8               get\n-   #34 = Utf8               ()Ljava/lang/Object;\n-   #35 = Methodref          #19.#36       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-   #36 = NameAndType        #37:#38       // isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-   #37 = Utf8               isOpen\n-   #38 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-   #39 = Methodref          #19.#40       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:()Z\n-   #40 = NameAndType        #37:#41       // isOpen:()Z\n-   #41 = Utf8               ()Z\n-   #42 = Methodref          #19.#43       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n-   #43 = NameAndType        #44:#45       // changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n-   #44 = Utf8               changeState\n-   #45 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n-   #46 = Fieldref           #10.#47       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #47 = NameAndType        #48:#14       // OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #48 = Utf8               OPEN\n-   #49 = Methodref          #10.#50       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #50 = NameAndType        #51:#52       // oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #51 = Utf8               oppositeState\n-   #52 = Utf8               ()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-   #53 = Methodref          #7.#54        // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #54 = NameAndType        #55:#56       // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #55 = Utf8               compareAndSet\n-   #56 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #57 = String             #58           // open\n-   #58 = Utf8               open\n-   #59 = Methodref          #24.#60       // java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n-   #60 = NameAndType        #61:#62       // firePropertyChange:(Ljava/lang/String;ZZ)V\n-   #61 = Utf8               firePropertyChange\n-   #62 = Utf8               (Ljava/lang/String;ZZ)V\n-   #63 = Methodref          #24.#64       // java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #64 = NameAndType        #65:#66       // addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #65 = Utf8               addPropertyChangeListener\n-   #66 = Utf8               (Ljava/beans/PropertyChangeListener;)V\n-   #67 = Methodref          #24.#68       // java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #68 = NameAndType        #69:#66       // removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n-   #69 = Utf8               removePropertyChangeListener\n-   #70 = Class              #71           // org/apache/commons/lang3/concurrent/CircuitBreaker\n-   #71 = Utf8               org/apache/commons/lang3/concurrent/CircuitBreaker\n-   #72 = Utf8               PROPERTY_NAME\n-   #73 = Utf8               Ljava/lang/String;\n-   #74 = Utf8               ConstantValue\n-   #75 = Utf8               Signature\n-   #76 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;\n-   #77 = Utf8               Code\n-   #78 = Utf8               LineNumberTable\n-   #79 = Utf8               LocalVariableTable\n-   #80 = Utf8               this\n-   #81 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n-   #82 = Utf8               LocalVariableTypeTable\n-   #83 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;\n-   #84 = Utf8               isClosed\n-   #85 = Utf8               StackMapTable\n-   #86 = Utf8               checkState\n-   #87 = Utf8               incrementAndCheckState\n-   #88 = Utf8               (Ljava/lang/Object;)Z\n-   #89 = Utf8               (TT;)Z\n-   #90 = Utf8               close\n-   #91 = Utf8               newState\n-   #92 = Class              #93           // java/lang/String\n-   #93 = Utf8               java/lang/String\n-   #94 = Utf8               addChangeListener\n-   #95 = Utf8               listener\n-   #96 = Utf8               Ljava/beans/PropertyChangeListener;\n-   #97 = Utf8               removeChangeListener\n-   #98 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               AbstractCircuitBreaker.java\n+    #5 = Class              #6            // org/apache/commons/lang3/concurrent/CircuitBreaker\n+    #6 = Utf8               org/apache/commons/lang3/concurrent/CircuitBreaker\n+    #7 = Utf8               PROPERTY_NAME\n+    #8 = Utf8               Ljava/lang/String;\n+    #9 = Utf8               ConstantValue\n+   #10 = String             #11           // open\n+   #11 = Utf8               open\n+   #12 = Utf8               state\n+   #13 = Utf8               Ljava/util/concurrent/atomic/AtomicReference;\n+   #14 = Utf8               Signature\n+   #15 = Utf8               Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;\n+   #16 = Utf8               changeSupport\n+   #17 = Utf8               Ljava/beans/PropertyChangeSupport;\n+   #18 = Utf8               <init>\n+   #19 = Utf8               ()V\n+   #20 = Utf8               Code\n+   #21 = Methodref          #3.#22        // java/lang/Object.\"<init>\":()V\n+   #22 = NameAndType        #18:#19       // \"<init>\":()V\n+   #23 = Class              #24           // java/util/concurrent/atomic/AtomicReference\n+   #24 = Utf8               java/util/concurrent/atomic/AtomicReference\n+   #25 = Fieldref           #26.#28       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #26 = Class              #27           // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n+   #27 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n+   #28 = NameAndType        #29:#30       // CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #29 = Utf8               CLOSED\n+   #30 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #31 = Methodref          #23.#32       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+   #32 = NameAndType        #18:#33       // \"<init>\":(Ljava/lang/Object;)V\n+   #33 = Utf8               (Ljava/lang/Object;)V\n+   #34 = Fieldref           #1.#35        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.state:Ljava/util/concurrent/atomic/AtomicReference;\n+   #35 = NameAndType        #12:#13       // state:Ljava/util/concurrent/atomic/AtomicReference;\n+   #36 = Class              #37           // java/beans/PropertyChangeSupport\n+   #37 = Utf8               java/beans/PropertyChangeSupport\n+   #38 = Methodref          #36.#32       // java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n+   #39 = Fieldref           #1.#40        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeSupport:Ljava/beans/PropertyChangeSupport;\n+   #40 = NameAndType        #16:#17       // changeSupport:Ljava/beans/PropertyChangeSupport;\n+   #41 = Utf8               LineNumberTable\n+   #42 = Utf8               LocalVariableTable\n+   #43 = Utf8               this\n+   #44 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n+   #45 = Utf8               LocalVariableTypeTable\n+   #46 = Utf8               Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;\n+   #47 = Utf8               isOpen\n+   #48 = Utf8               ()Z\n+   #49 = Methodref          #23.#50       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+   #50 = NameAndType        #51:#52       // get:()Ljava/lang/Object;\n+   #51 = Utf8               get\n+   #52 = Utf8               ()Ljava/lang/Object;\n+   #53 = Methodref          #1.#54        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+   #54 = NameAndType        #47:#55       // isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+   #55 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+   #56 = Utf8               isClosed\n+   #57 = Methodref          #1.#58        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.isOpen:()Z\n+   #58 = NameAndType        #47:#48       // isOpen:()Z\n+   #59 = Utf8               StackMapTable\n+   #60 = Utf8               checkState\n+   #61 = Utf8               incrementAndCheckState\n+   #62 = Utf8               (Ljava/lang/Object;)Z\n+   #63 = Utf8               (TT;)Z\n+   #64 = Utf8               close\n+   #65 = Methodref          #1.#66        // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker.changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+   #66 = NameAndType        #67:#68       // changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+   #67 = Utf8               changeState\n+   #68 = Utf8               (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+   #69 = Fieldref           #26.#70       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #70 = NameAndType        #71:#30       // OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #71 = Utf8               OPEN\n+   #72 = Methodref          #26.#73       // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #73 = NameAndType        #74:#75       // oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #74 = Utf8               oppositeState\n+   #75 = Utf8               ()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+   #76 = Methodref          #23.#77       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #77 = NameAndType        #78:#79       // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #78 = Utf8               compareAndSet\n+   #79 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #80 = Methodref          #36.#81       // java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n+   #81 = NameAndType        #82:#83       // firePropertyChange:(Ljava/lang/String;ZZ)V\n+   #82 = Utf8               firePropertyChange\n+   #83 = Utf8               (Ljava/lang/String;ZZ)V\n+   #84 = Utf8               newState\n+   #85 = Class              #86           // java/lang/String\n+   #86 = Utf8               java/lang/String\n+   #87 = Utf8               addChangeListener\n+   #88 = Utf8               (Ljava/beans/PropertyChangeListener;)V\n+   #89 = Methodref          #36.#90       // java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #90 = NameAndType        #91:#88       // addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #91 = Utf8               addPropertyChangeListener\n+   #92 = Utf8               listener\n+   #93 = Utf8               Ljava/beans/PropertyChangeListener;\n+   #94 = Utf8               removeChangeListener\n+   #95 = Methodref          #36.#96       // java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #96 = NameAndType        #97:#88       // removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+   #97 = Utf8               removePropertyChangeListener\n+   #98 = Utf8               SourceFile\n+   #99 = Utf8               AbstractCircuitBreaker.java\n+  #100 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n   #101 = Utf8               InnerClasses\n   #102 = Utf8               State\n-  #103 = Class              #104          // org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n-  #104 = Utf8               org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n {\n   public static final java.lang.String PROPERTY_NAME = \"open\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String open\n \n   protected final java.util.concurrent.atomic.AtomicReference<org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State> state;\n     descriptor: Ljava/util/concurrent/atomic/AtomicReference;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #76                          // Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;\n+    Signature: #15                          // Ljava/util/concurrent/atomic/AtomicReference<Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;>;\n \n   private final java.beans.PropertyChangeSupport changeSupport;\n     descriptor: Ljava/beans/PropertyChangeSupport;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.lang3.concurrent.AbstractCircuitBreaker();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #21                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/util/concurrent/atomic/AtomicReference\n+         5: new           #23                 // class java/util/concurrent/atomic/AtomicReference\n          8: dup\n-         9: getstatic     #9                  // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-        12: invokespecial #15                 // Method java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-        15: putfield      #18                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n+         9: getstatic     #25                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+        12: invokespecial #31                 // Method java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+        15: putfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n         18: aload_0\n-        19: new           #24                 // class java/beans/PropertyChangeSupport\n+        19: new           #36                 // class java/beans/PropertyChangeSupport\n         22: dup\n         23: aload_0\n-        24: invokespecial #26                 // Method java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n-        27: putfield      #27                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n+        24: invokespecial #38                 // Method java/beans/PropertyChangeSupport.\"<init>\":(Ljava/lang/Object;)V\n+        27: putfield      #39                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n         30: return\n       LineNumberTable:\n         line 45: 0\n         line 37: 4\n         line 46: 18\n         line 47: 30\n       LocalVariableTable:\n@@ -161,18 +159,18 @@\n \n   public boolean isOpen();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n-         4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-         7: checkcast     #10                 // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n-        10: invokestatic  #35                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+         1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n+         4: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+         7: checkcast     #26                 // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State\n+        10: invokestatic  #53                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n         13: ireturn\n       LineNumberTable:\n         line 54: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n       LocalVariableTypeTable:\n@@ -181,19 +179,19 @@\n \n   public boolean isClosed();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #39                 // Method isOpen:()Z\n-         4: ifne          11\n-         7: iconst_1\n+         1: invokevirtual #57                 // Method isOpen:()Z\n+         4: ifeq          11\n+         7: iconst_0\n          8: goto          12\n-        11: iconst_0\n+        11: iconst_1\n         12: ireturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n       LocalVariableTypeTable:\n@@ -207,24 +205,24 @@\n   public abstract boolean checkState();\n     descriptor: ()Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract boolean incrementAndCheckState(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #89                          // (TT;)Z\n+    Signature: #63                          // (TT;)Z\n \n   public void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #9                  // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-         4: invokevirtual #42                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+         1: getstatic     #25                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.CLOSED:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+         4: invokevirtual #65                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n          7: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n@@ -234,73 +232,73 @@\n \n   public void open();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #46                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-         4: invokevirtual #42                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n+         1: getstatic     #69                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+         4: invokevirtual #65                 // Method changeState:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n          7: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;\n \n   protected static boolean isOpen(org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n+    Signature: #55                          // (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #46                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-         4: if_acmpne     11\n+         1: getstatic     #69                 // Field org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.OPEN:Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+         4: if_acmpne     9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0 state   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0 state   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   protected void changeState(org.apache.commons.lang3.concurrent.AbstractCircuitBreaker$State);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Signature: #68                          // (Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)V\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #18                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n+         1: getfield      #34                 // Field state:Ljava/util/concurrent/atomic/AtomicReference;\n          4: aload_1\n-         5: invokevirtual #49                 // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n+         5: invokevirtual #72                 // Method org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State.oppositeState:()Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;\n          8: aload_1\n-         9: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         9: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         12: ifeq          40\n         15: aload_0\n-        16: getfield      #27                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n-        19: ldc           #57                 // String open\n+        16: getfield      #39                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n+        19: ldc           #10                 // String open\n         21: aload_1\n-        22: invokestatic  #35                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-        25: ifne          32\n-        28: iconst_1\n+        22: invokestatic  #53                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+        25: ifeq          32\n+        28: iconst_0\n         29: goto          33\n-        32: iconst_0\n+        32: iconst_1\n         33: aload_1\n-        34: invokestatic  #35                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n-        37: invokevirtual #59                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n+        34: invokestatic  #53                 // Method isOpen:(Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State;)Z\n+        37: invokevirtual #80                 // Method java/beans/PropertyChangeSupport.firePropertyChange:(Ljava/lang/String;ZZ)V\n         40: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 15\n         line 113: 40\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -322,17 +320,17 @@\n \n   public void addChangeListener(java.beans.PropertyChangeListener);\n     descriptor: (Ljava/beans/PropertyChangeListener;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #27                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n+         1: getfield      #39                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n          4: aload_1\n-         5: invokevirtual #63                 // Method java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+         5: invokevirtual #89                 // Method java/beans/PropertyChangeSupport.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n          8: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n@@ -343,27 +341,26 @@\n \n   public void removeChangeListener(java.beans.PropertyChangeListener);\n     descriptor: (Ljava/beans/PropertyChangeListener;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #27                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n+         1: getfield      #39                 // Field changeSupport:Ljava/beans/PropertyChangeSupport;\n          4: aload_1\n-         5: invokevirtual #67                 // Method java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n+         5: invokevirtual #95                 // Method java/beans/PropertyChangeSupport.removePropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V\n          8: return\n       LineNumberTable:\n         line 132: 0\n         line 133: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker;\n             0       9     1 listener   Ljava/beans/PropertyChangeListener;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/concurrent/AbstractCircuitBreaker<TT;>;\n }\n-Signature: #98                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n SourceFile: \"AbstractCircuitBreaker.java\"\n+Signature: #100                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/CircuitBreaker<TT;>;\n InnerClasses:\n-  protected static abstract #102= #10 of #19; // State=class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State of class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n-  static #103;                            // class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$1\n+  protected static abstract #102= #26 of #1; // State=class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker$State of class org/apache/commons/lang3/concurrent/AbstractCircuitBreaker\n"}]}
