{"diffoscope-json-version": 1, "source1": "first/CRLFLineReader.class", "source2": "second/CRLFLineReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,30 +1,30 @@\n-  SHA-256 checksum d7facd2dafb3100d24661736e6a12aab18ec86b5cc3289fc1a0b3cf23833957b\n+  SHA-256 checksum 6545542addf7174744013f7053936c6b9cc4158a037d1768a2069b50a2846179\n   Compiled from \"CRLFLineReader.java\"\n public final class org.apache.commons.net.io.CRLFLineReader extends java.io.BufferedReader\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #7                          // org/apache/commons/net/io/CRLFLineReader\n   super_class: #13                        // java/io/BufferedReader\n   interfaces: 0, fields: 2, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#49        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #2 = Class              #50            // java/lang/StringBuilder\n-   #3 = Methodref          #2.#51         // java/lang/StringBuilder.\"<init>\":()V\n-   #4 = Fieldref           #7.#52         // org/apache/commons/net/io/CRLFLineReader.lock:Ljava/lang/Object;\n-   #5 = Methodref          #7.#53         // org/apache/commons/net/io/CRLFLineReader.read:()I\n-   #6 = Class              #54            // org/apache/commons/net/util/NetConstants\n-   #7 = Class              #55            // org/apache/commons/net/io/CRLFLineReader\n-   #8 = Methodref          #2.#56         // java/lang/StringBuilder.length:()I\n-   #9 = Methodref          #2.#57         // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n-  #10 = Methodref          #2.#58         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #2.#59         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #12 = Methodref          #60.#61        // java/lang/String.isEmpty:()Z\n-  #13 = Class              #62            // java/io/BufferedReader\n+   #1 = Methodref          #13.#47        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #2 = Class              #48            // java/lang/StringBuilder\n+   #3 = Methodref          #2.#49         // java/lang/StringBuilder.\"<init>\":()V\n+   #4 = Fieldref           #7.#50         // org/apache/commons/net/io/CRLFLineReader.lock:Ljava/lang/Object;\n+   #5 = Methodref          #7.#51         // org/apache/commons/net/io/CRLFLineReader.read:()I\n+   #6 = Class              #52            // org/apache/commons/net/util/NetConstants\n+   #7 = Class              #53            // org/apache/commons/net/io/CRLFLineReader\n+   #8 = Methodref          #2.#54         // java/lang/StringBuilder.length:()I\n+   #9 = Methodref          #2.#55         // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+  #10 = Methodref          #2.#56         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #11 = Methodref          #2.#57         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #12 = Methodref          #42.#58        // java/lang/String.isEmpty:()Z\n+  #13 = Class              #59            // java/io/BufferedReader\n   #14 = Utf8               LF\n   #15 = Utf8               C\n   #16 = Utf8               ConstantValue\n   #17 = Integer            10\n   #18 = Utf8               CR\n   #19 = Integer            13\n   #20 = Utf8               <init>\n@@ -43,54 +43,51 @@\n   #33 = Utf8               sb\n   #34 = Utf8               Ljava/lang/StringBuilder;\n   #35 = Utf8               prevWasCR\n   #36 = Utf8               Z\n   #37 = Utf8               string\n   #38 = Utf8               Ljava/lang/String;\n   #39 = Utf8               StackMapTable\n-  #40 = Class              #55            // org/apache/commons/net/io/CRLFLineReader\n-  #41 = Class              #50            // java/lang/StringBuilder\n-  #42 = Class              #63            // java/lang/Object\n-  #43 = Class              #64            // java/lang/Throwable\n-  #44 = Class              #65            // java/lang/String\n-  #45 = Utf8               Exceptions\n-  #46 = Class              #66            // java/io/IOException\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               CRLFLineReader.java\n-  #49 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/Reader;)V\n-  #50 = Utf8               java/lang/StringBuilder\n-  #51 = NameAndType        #20:#67        // \"<init>\":()V\n-  #52 = NameAndType        #68:#69        // lock:Ljava/lang/Object;\n-  #53 = NameAndType        #70:#71        // read:()I\n-  #54 = Utf8               org/apache/commons/net/util/NetConstants\n-  #55 = Utf8               org/apache/commons/net/io/CRLFLineReader\n-  #56 = NameAndType        #72:#71        // length:()I\n-  #57 = NameAndType        #73:#74        // substring:(II)Ljava/lang/String;\n-  #58 = NameAndType        #75:#76        // append:(C)Ljava/lang/StringBuilder;\n-  #59 = NameAndType        #77:#30        // toString:()Ljava/lang/String;\n-  #60 = Class              #65            // java/lang/String\n-  #61 = NameAndType        #78:#79        // isEmpty:()Z\n-  #62 = Utf8               java/io/BufferedReader\n-  #63 = Utf8               java/lang/Object\n-  #64 = Utf8               java/lang/Throwable\n-  #65 = Utf8               java/lang/String\n-  #66 = Utf8               java/io/IOException\n-  #67 = Utf8               ()V\n-  #68 = Utf8               lock\n-  #69 = Utf8               Ljava/lang/Object;\n-  #70 = Utf8               read\n-  #71 = Utf8               ()I\n-  #72 = Utf8               length\n-  #73 = Utf8               substring\n-  #74 = Utf8               (II)Ljava/lang/String;\n-  #75 = Utf8               append\n-  #76 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #77 = Utf8               toString\n-  #78 = Utf8               isEmpty\n-  #79 = Utf8               ()Z\n+  #40 = Class              #60            // java/lang/Object\n+  #41 = Class              #61            // java/lang/Throwable\n+  #42 = Class              #62            // java/lang/String\n+  #43 = Utf8               Exceptions\n+  #44 = Class              #63            // java/io/IOException\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               CRLFLineReader.java\n+  #47 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/Reader;)V\n+  #48 = Utf8               java/lang/StringBuilder\n+  #49 = NameAndType        #20:#64        // \"<init>\":()V\n+  #50 = NameAndType        #65:#66        // lock:Ljava/lang/Object;\n+  #51 = NameAndType        #67:#68        // read:()I\n+  #52 = Utf8               org/apache/commons/net/util/NetConstants\n+  #53 = Utf8               org/apache/commons/net/io/CRLFLineReader\n+  #54 = NameAndType        #69:#68        // length:()I\n+  #55 = NameAndType        #70:#71        // substring:(II)Ljava/lang/String;\n+  #56 = NameAndType        #72:#73        // append:(C)Ljava/lang/StringBuilder;\n+  #57 = NameAndType        #74:#30        // toString:()Ljava/lang/String;\n+  #58 = NameAndType        #75:#76        // isEmpty:()Z\n+  #59 = Utf8               java/io/BufferedReader\n+  #60 = Utf8               java/lang/Object\n+  #61 = Utf8               java/lang/Throwable\n+  #62 = Utf8               java/lang/String\n+  #63 = Utf8               java/io/IOException\n+  #64 = Utf8               ()V\n+  #65 = Utf8               lock\n+  #66 = Utf8               Ljava/lang/Object;\n+  #67 = Utf8               read\n+  #68 = Utf8               ()I\n+  #69 = Utf8               length\n+  #70 = Utf8               substring\n+  #71 = Utf8               (II)Ljava/lang/String;\n+  #72 = Utf8               append\n+  #73 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #74 = Utf8               toString\n+  #75 = Utf8               isEmpty\n+  #76 = Utf8               ()Z\n {\n   private static final char LF = '\\n';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 10\n \n   private static final char CR = '\\r';\n"}]}
