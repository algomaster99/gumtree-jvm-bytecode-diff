{"diffoscope-json-version": 1, "source1": "first/IORunnable.class", "source2": "second/IORunnable.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,104 +1,105 @@\n-  SHA-256 checksum 48690468c3f3fe4a00a493bd3c3d34eae56e107110c324ca31e983c422f8c34b\n+  SHA-256 checksum f0fcd269723aa7b4e86b46af78a4934476f0dbd61378ba5ae26025ea85fca007\n   Compiled from \"IORunnable.java\"\n public interface org.apache.commons.io.function.IORunnable\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/io/function/IORunnable\n-  super_class: #12                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/function/IORunnable\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 4\n Constant pool:\n-   #1 = InvokeDynamic      #0:#2          // #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-   #2 = NameAndType        #3:#4          // run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-   #3 = Utf8               run\n-   #4 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n-   #5 = Methodref          #6.#7          // org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #6 = Class              #8             // org/apache/commons/io/function/Uncheck\n-   #7 = NameAndType        #3:#9          // run:(Lorg/apache/commons/io/function/IORunnable;)V\n-   #8 = Utf8               org/apache/commons/io/function/Uncheck\n-   #9 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n-  #10 = Class              #11            // org/apache/commons/io/function/IORunnable\n-  #11 = Utf8               org/apache/commons/io/function/IORunnable\n-  #12 = Class              #13            // java/lang/Object\n-  #13 = Utf8               java/lang/Object\n-  #14 = Utf8               asRunnable\n-  #15 = Utf8               ()Ljava/lang/Runnable;\n-  #16 = Utf8               Code\n-  #17 = Utf8               LineNumberTable\n-  #18 = Utf8               LocalVariableTable\n-  #19 = Utf8               this\n-  #20 = Utf8               Lorg/apache/commons/io/function/IORunnable;\n-  #21 = Utf8               ()V\n-  #22 = Utf8               Exceptions\n-  #23 = Class              #24            // java/io/IOException\n-  #24 = Utf8               java/io/IOException\n-  #25 = Utf8               lambda$asRunnable$0\n+   #1 = Class              #2             // org/apache/commons/io/function/IORunnable\n+   #2 = Utf8               org/apache/commons/io/function/IORunnable\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               asRunnable\n+   #6 = Utf8               ()Ljava/lang/Runnable;\n+   #7 = Utf8               Code\n+   #8 = InvokeDynamic      #0:#9          // #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+   #9 = NameAndType        #10:#11        // run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+  #10 = Utf8               run\n+  #11 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/commons/io/function/IORunnable;\n+  #16 = Utf8               ()V\n+  #17 = Utf8               Exceptions\n+  #18 = Class              #19            // java/io/IOException\n+  #19 = Utf8               java/io/IOException\n+  #20 = Utf8               lambda$0\n+  #21 = Methodref          #22.#24        // org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+  #22 = Class              #23            // org/apache/commons/io/function/Uncheck\n+  #23 = Utf8               org/apache/commons/io/function/Uncheck\n+  #24 = NameAndType        #10:#25        // run:(Lorg/apache/commons/io/function/IORunnable;)V\n+  #25 = Utf8               (Lorg/apache/commons/io/function/IORunnable;)V\n   #26 = Utf8               SourceFile\n   #27 = Utf8               IORunnable.java\n   #28 = Utf8               RuntimeVisibleAnnotations\n   #29 = Utf8               Ljava/lang/FunctionalInterface;\n   #30 = Utf8               BootstrapMethods\n-  #31 = MethodHandle       6:#32          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #32 = Methodref          #33.#34        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #33 = Class              #35            // java/lang/invoke/LambdaMetafactory\n-  #34 = NameAndType        #36:#37        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #35 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #36 = Utf8               metafactory\n-  #37 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #38 = MethodType         #21            //  ()V\n-  #39 = MethodHandle       7:#40          // REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-  #40 = InterfaceMethodref #10.#41        // org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-  #41 = NameAndType        #25:#21        // lambda$asRunnable$0:()V\n-  #42 = Utf8               InnerClasses\n-  #43 = Class              #44            // java/lang/invoke/MethodHandles$Lookup\n-  #44 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #45 = Class              #46            // java/lang/invoke/MethodHandles\n-  #46 = Utf8               java/lang/invoke/MethodHandles\n-  #47 = Utf8               Lookup\n+  #31 = Methodref          #32.#34        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #32 = Class              #33            // java/lang/invoke/LambdaMetafactory\n+  #33 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #34 = NameAndType        #35:#36        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #35 = Utf8               metafactory\n+  #36 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #37 = MethodHandle       6:#31          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #38 = MethodType         #16            //  ()V\n+  #39 = InterfaceMethodref #1.#40         // org/apache/commons/io/function/IORunnable.lambda$0:()V\n+  #40 = NameAndType        #20:#16        // lambda$0:()V\n+  #41 = MethodHandle       7:#39          // REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$0:()V\n+  #42 = MethodType         #16            //  ()V\n+  #43 = Utf8               InnerClasses\n+  #44 = Class              #45            // java/lang/invoke/MethodHandles$Lookup\n+  #45 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #46 = Class              #47            // java/lang/invoke/MethodHandles\n+  #47 = Utf8               java/lang/invoke/MethodHandles\n+  #48 = Utf8               Lookup\n {\n   public default java.lang.Runnable asRunnable();\n     descriptor: ()Ljava/lang/Runnable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #1,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n+         1: invokedynamic #8,  0              // InvokeDynamic #0:run:(Lorg/apache/commons/io/function/IORunnable;)Ljava/lang/Runnable;\n          6: areturn\n       LineNumberTable:\n         line 37: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/function/IORunnable;\n \n   public abstract void run() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n-  private void lambda$asRunnable$0();\n+  private void lambda$0();\n     descriptor: ()V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #5                  // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n+         1: invokestatic  #21                 // Method org/apache/commons/io/function/Uncheck.run:(Lorg/apache/commons/io/function/IORunnable;)V\n          4: return\n       LineNumberTable:\n         line 37: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/function/IORunnable;\n }\n SourceFile: \"IORunnable.java\"\n RuntimeVisibleAnnotations:\n   0: #29()\n     java.lang.FunctionalInterface\n BootstrapMethods:\n-  0: #31 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #37 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n       #38 ()V\n-      #39 REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$asRunnable$0:()V\n-      #38 ()V\n+      #41 REF_invokeSpecial org/apache/commons/io/function/IORunnable.lambda$0:()V\n+      #42 ()V\n InnerClasses:\n-  public static final #47= #43 of #45;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #48= #44 of #46;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
