{"diffoscope-json-version": 1, "source1": "first/AccumulatorPathVisitor.class", "source2": "second/AccumulatorPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,243 +1,243 @@\n-  SHA-256 checksum ebe1484b8e9b34b441c539bfe35cf9c92442f14dad76d14d3e09d7c3d3844453\n+  SHA-256 checksum 10ff52fd1aa451b0425f7ffde8ba6522cc30ad885b9777268c993fb7f9fa0efc\n   Compiled from \"AccumulatorPathVisitor.java\"\n public class org.apache.commons.io.file.AccumulatorPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/AccumulatorPathVisitor\n-  super_class: #27                        // org/apache/commons/io/file/CountingPathVisitor\n+  super_class: #23                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #70           // org/apache/commons/io/file/AccumulatorPathVisitor\n-    #2 = Methodref          #71.#72       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Methodref          #1.#73        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #4 = Methodref          #1.#74        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-    #5 = Methodref          #71.#75       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #71.#76       // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #7 = Methodref          #27.#73       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #8 = Class              #77           // java/util/ArrayList\n-    #9 = Methodref          #8.#78        // java/util/ArrayList.\"<init>\":()V\n-   #10 = Fieldref           #1.#79        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n-   #11 = Fieldref           #1.#80        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n-   #12 = Methodref          #27.#74       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #13 = Methodref          #27.#81       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n-   #14 = InterfaceMethodref #82.#83       // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #15 = InterfaceMethodref #84.#85       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #16 = Methodref          #27.#86       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #17 = Methodref          #87.#88       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #18 = Methodref          #27.#89       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #19 = Class              #90           // java/lang/Object\n-   #20 = Methodref          #87.#91       // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #21 = Methodref          #1.#92        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n-   #22 = Methodref          #93.#94       // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #23 = Methodref          #1.#95        // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n-   #24 = Methodref          #27.#96       // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #25 = Methodref          #1.#97        // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-   #26 = Methodref          #27.#98       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #27 = Class              #99           // org/apache/commons/io/file/CountingPathVisitor\n-   #28 = Utf8               dirList\n-   #29 = Utf8               Ljava/util/List;\n-   #30 = Utf8               Signature\n-   #31 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n-   #32 = Utf8               fileList\n-   #33 = Utf8               withBigIntegerCounters\n-   #34 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #38 = Utf8               withLongCounters\n-   #39 = Utf8               <init>\n-   #40 = Utf8               ()V\n-   #41 = Class              #100          // org/apache/commons/io/file/Counters$PathCounters\n-   #42 = Utf8               PathCounters\n-   #43 = Utf8               InnerClasses\n-   #44 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #45 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #46 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n-   #47 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n-   #48 = Utf8               add\n-   #49 = Utf8               (Ljava/util/List;Ljava/nio/file/Path;)V\n-   #50 = Utf8               (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n-   #51 = Utf8               equals\n+    #1 = Class              #2            // org/apache/commons/io/file/AccumulatorPathVisitor\n+    #2 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #4 = Class              #6            // org/apache/commons/io/file/Counters\n+    #5 = NameAndType        #7:#8         // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Utf8               org/apache/commons/io/file/Counters\n+    #7 = Utf8               bigIntegerPathCounters\n+    #8 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #9 = Methodref          #1.#10        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #10 = NameAndType        #11:#12       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #13 = Methodref          #1.#14        // org/apache/commons/io/file/AccumulatorPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #14 = NameAndType        #11:#15       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #15 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #16 = Methodref          #4.#17        // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #17 = NameAndType        #18:#8        // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #18 = Utf8               longPathCounters\n+   #19 = Methodref          #4.#20        // org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #20 = NameAndType        #21:#8        // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #21 = Utf8               noopPathCounters\n+   #22 = Methodref          #23.#10       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #23 = Class              #24           // org/apache/commons/io/file/CountingPathVisitor\n+   #24 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+   #25 = Class              #26           // java/util/ArrayList\n+   #26 = Utf8               java/util/ArrayList\n+   #27 = Methodref          #25.#28       // java/util/ArrayList.\"<init>\":()V\n+   #28 = NameAndType        #11:#29       // \"<init>\":()V\n+   #29 = Utf8               ()V\n+   #30 = Fieldref           #1.#31        // org/apache/commons/io/file/AccumulatorPathVisitor.dirList:Ljava/util/List;\n+   #31 = NameAndType        #32:#33       // dirList:Ljava/util/List;\n+   #32 = Utf8               dirList\n+   #33 = Utf8               Ljava/util/List;\n+   #34 = Fieldref           #1.#35        // org/apache/commons/io/file/AccumulatorPathVisitor.fileList:Ljava/util/List;\n+   #35 = NameAndType        #36:#33       // fileList:Ljava/util/List;\n+   #36 = Utf8               fileList\n+   #37 = Methodref          #23.#14       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+   #38 = Methodref          #23.#39       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n+   #39 = NameAndType        #11:#40       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n+   #40 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n+   #41 = InterfaceMethodref #42.#43       // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #42 = Class              #44           // java/nio/file/Path\n+   #43 = NameAndType        #45:#46       // normalize:()Ljava/nio/file/Path;\n+   #44 = Utf8               java/nio/file/Path\n+   #45 = Utf8               normalize\n+   #46 = Utf8               ()Ljava/nio/file/Path;\n+   #47 = InterfaceMethodref #48.#49       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #48 = Class              #50           // java/util/List\n+   #49 = NameAndType        #51:#52       // add:(Ljava/lang/Object;)Z\n+   #50 = Utf8               java/util/List\n+   #51 = Utf8               add\n    #52 = Utf8               (Ljava/lang/Object;)Z\n-   #53 = Utf8               StackMapTable\n-   #54 = Utf8               getDirList\n-   #55 = Utf8               ()Ljava/util/List;\n-   #56 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-   #57 = Utf8               getFileList\n-   #58 = Utf8               hashCode\n-   #59 = Utf8               ()I\n-   #60 = Utf8               relativizeDirectories\n-   #61 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #62 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #63 = Utf8               relativizeFiles\n-   #64 = Utf8               updateDirCounter\n-   #65 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #66 = Utf8               updateFileCounters\n-   #67 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               AccumulatorPathVisitor.java\n-   #70 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-   #71 = Class              #101          // org/apache/commons/io/file/Counters\n-   #72 = NameAndType        #102:#103     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #73 = NameAndType        #39:#44       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #74 = NameAndType        #39:#45       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n-   #75 = NameAndType        #104:#103     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #76 = NameAndType        #105:#103     // noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #77 = Utf8               java/util/ArrayList\n-   #78 = NameAndType        #39:#40       // \"<init>\":()V\n-   #79 = NameAndType        #28:#29       // dirList:Ljava/util/List;\n-   #80 = NameAndType        #32:#29       // fileList:Ljava/util/List;\n-   #81 = NameAndType        #39:#46       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n-   #82 = Class              #106          // java/nio/file/Path\n-   #83 = NameAndType        #107:#108     // normalize:()Ljava/nio/file/Path;\n-   #84 = Class              #109          // java/util/List\n-   #85 = NameAndType        #48:#52       // add:(Ljava/lang/Object;)Z\n-   #86 = NameAndType        #51:#52       // equals:(Ljava/lang/Object;)Z\n-   #87 = Class              #110          // java/util/Objects\n-   #88 = NameAndType        #51:#111      // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #89 = NameAndType        #58:#59       // hashCode:()I\n-   #90 = Utf8               java/lang/Object\n-   #91 = NameAndType        #112:#113     // hash:([Ljava/lang/Object;)I\n-   #92 = NameAndType        #54:#55       // getDirList:()Ljava/util/List;\n-   #93 = Class              #114          // org/apache/commons/io/file/PathUtils\n-   #94 = NameAndType        #115:#116     // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #95 = NameAndType        #57:#55       // getFileList:()Ljava/util/List;\n-   #96 = NameAndType        #64:#65       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n-   #97 = NameAndType        #48:#49       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n-   #98 = NameAndType        #66:#67       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #99 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #100 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #101 = Utf8               org/apache/commons/io/file/Counters\n-  #102 = Utf8               bigIntegerPathCounters\n-  #103 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #104 = Utf8               longPathCounters\n-  #105 = Utf8               noopPathCounters\n-  #106 = Utf8               java/nio/file/Path\n-  #107 = Utf8               normalize\n-  #108 = Utf8               ()Ljava/nio/file/Path;\n-  #109 = Utf8               java/util/List\n-  #110 = Utf8               java/util/Objects\n-  #111 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #112 = Utf8               hash\n-  #113 = Utf8               ([Ljava/lang/Object;)I\n-  #114 = Utf8               org/apache/commons/io/file/PathUtils\n-  #115 = Utf8               relativize\n-  #116 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #53 = Methodref          #23.#54       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #54 = NameAndType        #55:#52       // equals:(Ljava/lang/Object;)Z\n+   #55 = Utf8               equals\n+   #56 = Methodref          #57.#58       // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #57 = Class              #59           // java/util/Objects\n+   #58 = NameAndType        #55:#60       // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #59 = Utf8               java/util/Objects\n+   #60 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #61 = Methodref          #23.#62       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #62 = NameAndType        #63:#64       // hashCode:()I\n+   #63 = Utf8               hashCode\n+   #64 = Utf8               ()I\n+   #65 = Class              #66           // java/lang/Object\n+   #66 = Utf8               java/lang/Object\n+   #67 = Methodref          #57.#68       // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #68 = NameAndType        #69:#70       // hash:([Ljava/lang/Object;)I\n+   #69 = Utf8               hash\n+   #70 = Utf8               ([Ljava/lang/Object;)I\n+   #71 = Methodref          #1.#72        // org/apache/commons/io/file/AccumulatorPathVisitor.getDirList:()Ljava/util/List;\n+   #72 = NameAndType        #73:#74       // getDirList:()Ljava/util/List;\n+   #73 = Utf8               getDirList\n+   #74 = Utf8               ()Ljava/util/List;\n+   #75 = Methodref          #76.#77       // org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #76 = Class              #78           // org/apache/commons/io/file/PathUtils\n+   #77 = NameAndType        #79:#80       // relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #78 = Utf8               org/apache/commons/io/file/PathUtils\n+   #79 = Utf8               relativize\n+   #80 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+   #81 = Methodref          #1.#82        // org/apache/commons/io/file/AccumulatorPathVisitor.getFileList:()Ljava/util/List;\n+   #82 = NameAndType        #83:#74       // getFileList:()Ljava/util/List;\n+   #83 = Utf8               getFileList\n+   #84 = Methodref          #23.#85       // org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+   #85 = NameAndType        #86:#87       // updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+   #86 = Utf8               updateDirCounter\n+   #87 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)V\n+   #88 = Methodref          #1.#89        // org/apache/commons/io/file/AccumulatorPathVisitor.add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+   #89 = NameAndType        #51:#90       // add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+   #90 = Utf8               (Ljava/util/List;Ljava/nio/file/Path;)V\n+   #91 = Methodref          #23.#92       // org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #92 = NameAndType        #93:#94       // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #93 = Utf8               updateFileCounters\n+   #94 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #95 = Utf8               Signature\n+   #96 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+   #97 = Utf8               withBigIntegerCounters\n+   #98 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #99 = Utf8               Code\n+  #100 = Utf8               LineNumberTable\n+  #101 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+  #102 = Utf8               withLongCounters\n+  #103 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n+  #104 = Utf8               (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n+  #105 = Utf8               StackMapTable\n+  #106 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+  #107 = Utf8               relativizeDirectories\n+  #108 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #109 = Utf8               (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #110 = Utf8               relativizeFiles\n+  #111 = Utf8               SourceFile\n+  #112 = Utf8               AccumulatorPathVisitor.java\n+  #113 = Utf8               InnerClasses\n+  #114 = Class              #115          // org/apache/commons/io/file/Counters$PathCounters\n+  #115 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #116 = Utf8               PathCounters\n {\n   private final java.util.List<java.nio.file.Path> dirList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #31                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #96                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private final java.util.List<java.nio.file.Path> fileList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #31                          // Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #96                          // Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #3                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 69: 0\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withBigIntegerCounters(org.apache.commons.io.file.PathFilter, org.apache.commons.io.file.PathFilter);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n         12: areturn\n       LineNumberTable:\n         line 82: 0\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters();\n     descriptor: ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #3                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #16                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #9                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: areturn\n       LineNumberTable:\n         line 91: 0\n \n   public static org.apache.commons.io.file.AccumulatorPathVisitor withLongCounters(org.apache.commons.io.file.PathFilter, org.apache.commons.io.file.PathFilter);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: new           #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n          3: dup\n-         4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #16                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n         12: areturn\n       LineNumberTable:\n         line 103: 0\n \n   public org.apache.commons.io.file.AccumulatorPathVisitor();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #6                  // Method org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokespecial #7                  // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         1: invokestatic  #19                 // Method org/apache/commons/io/file/Counters.noopPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          7: aload_0\n-         8: new           #8                  // class java/util/ArrayList\n+         8: new           #25                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #10                 // Field dirList:Ljava/util/List;\n+        12: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #30                 // Field dirList:Ljava/util/List;\n         18: aload_0\n-        19: new           #8                  // class java/util/ArrayList\n+        19: new           #25                 // class java/util/ArrayList\n         22: dup\n-        23: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        26: putfield      #11                 // Field fileList:Ljava/util/List;\n+        23: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        26: putfield      #34                 // Field fileList:Ljava/util/List;\n         29: return\n       LineNumberTable:\n         line 116: 0\n         line 106: 7\n         line 108: 18\n         line 117: 29\n \n   public org.apache.commons.io.file.AccumulatorPathVisitor(org.apache.commons.io.file.Counters$PathCounters);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #7                  // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         2: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          5: aload_0\n-         6: new           #8                  // class java/util/ArrayList\n+         6: new           #25                 // class java/util/ArrayList\n          9: dup\n-        10: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        13: putfield      #10                 // Field dirList:Ljava/util/List;\n+        10: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        13: putfield      #30                 // Field dirList:Ljava/util/List;\n         16: aload_0\n-        17: new           #8                  // class java/util/ArrayList\n+        17: new           #25                 // class java/util/ArrayList\n         20: dup\n-        21: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        24: putfield      #11                 // Field fileList:Ljava/util/List;\n+        21: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        24: putfield      #34                 // Field fileList:Ljava/util/List;\n         27: return\n       LineNumberTable:\n         line 125: 0\n         line 106: 5\n         line 108: 16\n         line 126: 27\n \n@@ -246,25 +246,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_3\n-         4: invokespecial #12                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n+         4: invokespecial #37                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;)V\n          7: aload_0\n-         8: new           #8                  // class java/util/ArrayList\n+         8: new           #25                 // class java/util/ArrayList\n         11: dup\n-        12: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        15: putfield      #10                 // Field dirList:Ljava/util/List;\n+        12: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        15: putfield      #30                 // Field dirList:Ljava/util/List;\n         18: aload_0\n-        19: new           #8                  // class java/util/ArrayList\n+        19: new           #25                 // class java/util/ArrayList\n         22: dup\n-        23: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        26: putfield      #11                 // Field fileList:Ljava/util/List;\n+        23: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        26: putfield      #34                 // Field fileList:Ljava/util/List;\n         29: return\n       LineNumberTable:\n         line 137: 0\n         line 106: 7\n         line 108: 18\n         line 138: 29\n \n@@ -274,84 +274,84 @@\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_3\n          4: aload         4\n-         6: invokespecial #13                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n+         6: invokespecial #38                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction;)V\n          9: aload_0\n-        10: new           #8                  // class java/util/ArrayList\n+        10: new           #25                 // class java/util/ArrayList\n         13: dup\n-        14: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        17: putfield      #10                 // Field dirList:Ljava/util/List;\n+        14: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        17: putfield      #30                 // Field dirList:Ljava/util/List;\n         20: aload_0\n-        21: new           #8                  // class java/util/ArrayList\n+        21: new           #25                 // class java/util/ArrayList\n         24: dup\n-        25: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        28: putfield      #11                 // Field fileList:Ljava/util/List;\n+        25: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        28: putfield      #34                 // Field fileList:Ljava/util/List;\n         31: return\n       LineNumberTable:\n         line 151: 0\n         line 106: 9\n         line 108: 20\n         line 152: 31\n-    Signature: #47                          // (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n+    Signature: #103                         // (Lorg/apache/commons/io/file/Counters$PathCounters;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/file/PathFilter;Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n \n   private void add(java.util.List<java.nio.file.Path>, java.nio.file.Path);\n     descriptor: (Ljava/util/List;Ljava/nio/file/Path;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_1\n          1: aload_2\n-         2: invokeinterface #14,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-         7: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+         2: invokeinterface #41,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+         7: invokeinterface #47,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         12: pop\n         13: return\n       LineNumberTable:\n         line 155: 0\n         line 156: 13\n-    Signature: #50                          // (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n+    Signature: #104                         // (Ljava/util/List<Ljava/nio/file/Path;>;Ljava/nio/file/Path;)V\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #16                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #53                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_1\n         18: instanceof    #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         21: ifne          26\n         24: iconst_0\n         25: ireturn\n         26: aload_1\n         27: checkcast     #1                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         30: astore_2\n         31: aload_0\n-        32: getfield      #10                 // Field dirList:Ljava/util/List;\n+        32: getfield      #30                 // Field dirList:Ljava/util/List;\n         35: aload_2\n-        36: getfield      #10                 // Field dirList:Ljava/util/List;\n-        39: invokestatic  #17                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        36: getfield      #30                 // Field dirList:Ljava/util/List;\n+        39: invokestatic  #56                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         42: ifeq          63\n         45: aload_0\n-        46: getfield      #11                 // Field fileList:Ljava/util/List;\n+        46: getfield      #34                 // Field fileList:Ljava/util/List;\n         49: aload_2\n-        50: getfield      #11                 // Field fileList:Ljava/util/List;\n-        53: invokestatic  #17                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        50: getfield      #34                 // Field fileList:Ljava/util/List;\n+        53: invokestatic  #56                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         56: ifeq          63\n         59: iconst_1\n         60: goto          64\n         63: iconst_0\n         64: ireturn\n       LineNumberTable:\n         line 160: 0\n@@ -374,133 +374,133 @@\n \n   public java.util.List<java.nio.file.Path> getDirList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field dirList:Ljava/util/List;\n+         1: getfield      #30                 // Field dirList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 179: 0\n-    Signature: #56                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #106                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> getFileList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field fileList:Ljava/util/List;\n+         1: getfield      #34                 // Field fileList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n-    Signature: #56                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #106                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=5, locals=3, args_size=1\n+      stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #18                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-         4: istore_2\n+         1: invokespecial #61                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+         4: istore_1\n          5: bipush        31\n-         7: iload_2\n+         7: iload_1\n          8: imul\n          9: iconst_2\n-        10: anewarray     #19                 // class java/lang/Object\n+        10: anewarray     #65                 // class java/lang/Object\n         13: dup\n         14: iconst_0\n         15: aload_0\n-        16: getfield      #10                 // Field dirList:Ljava/util/List;\n+        16: getfield      #30                 // Field dirList:Ljava/util/List;\n         19: aastore\n         20: dup\n         21: iconst_1\n         22: aload_0\n-        23: getfield      #11                 // Field fileList:Ljava/util/List;\n+        23: getfield      #34                 // Field fileList:Ljava/util/List;\n         26: aastore\n-        27: invokestatic  #20                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        27: invokestatic  #67                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         30: iadd\n-        31: istore_2\n-        32: iload_2\n+        31: istore_1\n+        32: iload_1\n         33: ireturn\n       LineNumberTable:\n         line 194: 0\n         line 195: 5\n         line 196: 32\n \n   public java.util.List<java.nio.file.Path> relativizeDirectories(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #21                 // Method getDirList:()Ljava/util/List;\n+         1: invokevirtual #71                 // Method getDirList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #22                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #75                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 210: 0\n-    Signature: #62                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #109                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> relativizeFiles(java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokevirtual #23                 // Method getFileList:()Ljava/util/List;\n+         1: invokevirtual #81                 // Method getFileList:()Ljava/util/List;\n          4: aload_1\n          5: iload_2\n          6: aload_3\n-         7: invokestatic  #22                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+         7: invokestatic  #75                 // Method org/apache/commons/io/file/PathUtils.relativize:(Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 224: 0\n-    Signature: #62                          // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #109                         // (Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   protected void updateDirCounter(java.nio.file.Path, java.io.IOException);\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #24                 // Method org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n+         3: invokespecial #84                 // Method org/apache/commons/io/file/CountingPathVisitor.updateDirCounter:(Ljava/nio/file/Path;Ljava/io/IOException;)V\n          6: aload_0\n          7: aload_0\n-         8: getfield      #10                 // Field dirList:Ljava/util/List;\n+         8: getfield      #30                 // Field dirList:Ljava/util/List;\n         11: aload_1\n-        12: invokespecial #25                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+        12: invokespecial #88                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n         15: return\n       LineNumberTable:\n         line 229: 0\n         line 230: 6\n         line 231: 15\n \n   protected void updateFileCounters(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #26                 // Method org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+         3: invokespecial #91                 // Method org/apache/commons/io/file/CountingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n          6: aload_0\n          7: aload_0\n-         8: getfield      #11                 // Field fileList:Ljava/util/List;\n+         8: getfield      #34                 // Field fileList:Ljava/util/List;\n         11: aload_1\n-        12: invokespecial #25                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n+        12: invokespecial #88                 // Method add:(Ljava/util/List;Ljava/nio/file/Path;)V\n         15: return\n       LineNumberTable:\n         line 235: 0\n         line 236: 6\n         line 237: 15\n }\n SourceFile: \"AccumulatorPathVisitor.java\"\n InnerClasses:\n-  public static #42= #41 of #71;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #116= #114 of #4;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
