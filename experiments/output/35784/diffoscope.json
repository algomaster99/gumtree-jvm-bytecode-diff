{"diffoscope-json-version": 1, "source1": "first/FingerClient.class", "source2": "second/FingerClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,165 +1,165 @@\n-  SHA-256 checksum 82c4beaf815af45d9050cacd8e4efb6a6d608d482f4f504b2c67453ae7d6739d\n+  SHA-256 checksum 7e66d126fe77e09c0c1374cfeb698368d8090675fd34061981ded16a9c59fda0\n   Compiled from \"FingerClient.java\"\n public class org.apache.commons.net.finger.FingerClient extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/net/finger/FingerClient\n-  super_class: #24                        // org/apache/commons/net/SocketClient\n+  this_class: #8                          // org/apache/commons/net/finger/FingerClient\n+  super_class: #2                         // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #24.#78       // org/apache/commons/net/SocketClient.\"<init>\":()V\n-    #2 = Fieldref           #3.#79        // org/apache/commons/net/finger/FingerClient.buffer:[C\n-    #3 = Class              #80           // org/apache/commons/net/finger/FingerClient\n-    #4 = Methodref          #3.#81        // org/apache/commons/net/finger/FingerClient.setDefaultPort:(I)V\n-    #5 = Class              #82           // java/lang/StringBuilder\n-    #6 = Methodref          #5.#83        // java/lang/StringBuilder.\"<init>\":(I)V\n-    #7 = Class              #84           // java/io/BufferedReader\n-    #8 = Class              #85           // java/io/InputStreamReader\n-    #9 = Methodref          #3.#86        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n-   #10 = Methodref          #3.#87        // org/apache/commons/net/finger/FingerClient.getCharset:()Ljava/nio/charset/Charset;\n-   #11 = Methodref          #8.#88        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #12 = Methodref          #7.#89        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #13 = Methodref          #7.#90        // java/io/BufferedReader.read:([CII)I\n-   #14 = Methodref          #5.#91        // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #7.#92        // java/io/BufferedReader.close:()V\n-   #16 = Class              #93           // java/lang/Throwable\n-   #17 = Methodref          #16.#94       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #18 = Methodref          #5.#95        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = String             #96           //\n-   #20 = Methodref          #3.#97        // org/apache/commons/net/finger/FingerClient.query:(ZLjava/lang/String;)Ljava/lang/String;\n-   #21 = Methodref          #3.#98        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-   #22 = String             #99           // /W\n-   #23 = Methodref          #5.#100       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Class              #101          // org/apache/commons/net/SocketClient\n-   #25 = String             #102          // \\r\\n\n-   #26 = Methodref          #103.#104     // org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #27 = Methodref          #105.#106     // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #28 = Methodref          #63.#107      // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #29 = Class              #108          // java/io/DataOutputStream\n-   #30 = Class              #109          // java/io/BufferedOutputStream\n-   #31 = Fieldref           #3.#110       // org/apache/commons/net/finger/FingerClient._output_:Ljava/io/OutputStream;\n-   #32 = Methodref          #30.#111      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-   #33 = Methodref          #29.#112      // java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #34 = Methodref          #29.#113      // java/io/DataOutputStream.write:([BII)V\n-   #35 = Methodref          #29.#114      // java/io/DataOutputStream.flush:()V\n-   #36 = Fieldref           #3.#115       // org/apache/commons/net/finger/FingerClient._input_:Ljava/io/InputStream;\n-   #37 = Utf8               DEFAULT_PORT\n-   #38 = Utf8               I\n-   #39 = Utf8               ConstantValue\n-   #40 = Integer            79\n-   #41 = Utf8               LONG_FLAG\n-   #42 = Utf8               Ljava/lang/String;\n-   #43 = Utf8               buffer\n-   #44 = Utf8               [C\n-   #45 = Utf8               <init>\n-   #46 = Utf8               ()V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lorg/apache/commons/net/finger/FingerClient;\n-   #52 = Utf8               query\n-   #53 = Utf8               (ZLjava/lang/String;)Ljava/lang/String;\n-   #54 = Utf8               read\n-   #55 = Utf8               input\n-   #56 = Utf8               Ljava/io/BufferedReader;\n-   #57 = Utf8               longOutput\n-   #58 = Utf8               Z\n-   #59 = Utf8               username\n-   #60 = Utf8               result\n-   #61 = Utf8               Ljava/lang/StringBuilder;\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #116          // java/lang/String\n-   #64 = Utf8               Exceptions\n-   #65 = Class              #117          // java/io/IOException\n-   #66 = Utf8               (Z)Ljava/lang/String;\n-   #67 = Utf8               getInputStream\n-   #68 = Utf8               (ZLjava/lang/String;)Ljava/io/InputStream;\n-   #69 = Utf8               (ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-   #70 = Utf8               encoding\n-   #71 = Utf8               output\n-   #72 = Utf8               Ljava/io/DataOutputStream;\n-   #73 = Utf8               encodedQuery\n-   #74 = Utf8               [B\n-   #75 = Utf8               (Z)Ljava/io/InputStream;\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               FingerClient.java\n-   #78 = NameAndType        #45:#46       // \"<init>\":()V\n-   #79 = NameAndType        #43:#44       // buffer:[C\n-   #80 = Utf8               org/apache/commons/net/finger/FingerClient\n-   #81 = NameAndType        #118:#119     // setDefaultPort:(I)V\n-   #82 = Utf8               java/lang/StringBuilder\n-   #83 = NameAndType        #45:#119      // \"<init>\":(I)V\n-   #84 = Utf8               java/io/BufferedReader\n-   #85 = Utf8               java/io/InputStreamReader\n-   #86 = NameAndType        #67:#68       // getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n-   #87 = NameAndType        #120:#121     // getCharset:()Ljava/nio/charset/Charset;\n-   #88 = NameAndType        #45:#122      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #89 = NameAndType        #45:#123      // \"<init>\":(Ljava/io/Reader;)V\n-   #90 = NameAndType        #54:#124      // read:([CII)I\n-   #91 = NameAndType        #125:#126     // append:([CII)Ljava/lang/StringBuilder;\n-   #92 = NameAndType        #127:#46      // close:()V\n-   #93 = Utf8               java/lang/Throwable\n-   #94 = NameAndType        #128:#129     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #95 = NameAndType        #130:#131     // toString:()Ljava/lang/String;\n-   #96 = Utf8\n-   #97 = NameAndType        #52:#53       // query:(ZLjava/lang/String;)Ljava/lang/String;\n-   #98 = NameAndType        #67:#69       // getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n-   #99 = Utf8               /W\n-  #100 = NameAndType        #125:#132     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #101 = Utf8               org/apache/commons/net/SocketClient\n-  #102 = Utf8               \\r\\n\n-  #103 = Class              #133          // org/apache/commons/net/util/Charsets\n-  #104 = NameAndType        #134:#135     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #105 = Class              #136          // java/nio/charset/Charset\n-  #106 = NameAndType        #137:#131     // name:()Ljava/lang/String;\n-  #107 = NameAndType        #138:#139     // getBytes:(Ljava/lang/String;)[B\n-  #108 = Utf8               java/io/DataOutputStream\n-  #109 = Utf8               java/io/BufferedOutputStream\n-  #110 = NameAndType        #140:#141     // _output_:Ljava/io/OutputStream;\n-  #111 = NameAndType        #45:#142      // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #112 = NameAndType        #45:#143      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #113 = NameAndType        #144:#145     // write:([BII)V\n-  #114 = NameAndType        #146:#46      // flush:()V\n-  #115 = NameAndType        #147:#148     // _input_:Ljava/io/InputStream;\n-  #116 = Utf8               java/lang/String\n-  #117 = Utf8               java/io/IOException\n-  #118 = Utf8               setDefaultPort\n-  #119 = Utf8               (I)V\n-  #120 = Utf8               getCharset\n-  #121 = Utf8               ()Ljava/nio/charset/Charset;\n-  #122 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #123 = Utf8               (Ljava/io/Reader;)V\n-  #124 = Utf8               ([CII)I\n-  #125 = Utf8               append\n-  #126 = Utf8               ([CII)Ljava/lang/StringBuilder;\n-  #127 = Utf8               close\n-  #128 = Utf8               addSuppressed\n-  #129 = Utf8               (Ljava/lang/Throwable;)V\n-  #130 = Utf8               toString\n-  #131 = Utf8               ()Ljava/lang/String;\n-  #132 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #133 = Utf8               org/apache/commons/net/util/Charsets\n-  #134 = Utf8               toCharset\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #136 = Utf8               java/nio/charset/Charset\n-  #137 = Utf8               name\n-  #138 = Utf8               getBytes\n-  #139 = Utf8               (Ljava/lang/String;)[B\n-  #140 = Utf8               _output_\n-  #141 = Utf8               Ljava/io/OutputStream;\n-  #142 = Utf8               (Ljava/io/OutputStream;I)V\n-  #143 = Utf8               (Ljava/io/OutputStream;)V\n-  #144 = Utf8               write\n-  #145 = Utf8               ([BII)V\n-  #146 = Utf8               flush\n-  #147 = Utf8               _input_\n-  #148 = Utf8               Ljava/io/InputStream;\n+    #1 = Methodref          #2.#3         // org/apache/commons/net/SocketClient.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/net/SocketClient\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/net/SocketClient\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/net/finger/FingerClient.buffer:[C\n+    #8 = Class              #10           // org/apache/commons/net/finger/FingerClient\n+    #9 = NameAndType        #11:#12       // buffer:[C\n+   #10 = Utf8               org/apache/commons/net/finger/FingerClient\n+   #11 = Utf8               buffer\n+   #12 = Utf8               [C\n+   #13 = Methodref          #8.#14        // org/apache/commons/net/finger/FingerClient.setDefaultPort:(I)V\n+   #14 = NameAndType        #15:#16       // setDefaultPort:(I)V\n+   #15 = Utf8               setDefaultPort\n+   #16 = Utf8               (I)V\n+   #17 = Class              #18           // java/lang/StringBuilder\n+   #18 = Utf8               java/lang/StringBuilder\n+   #19 = Methodref          #17.#20       // java/lang/StringBuilder.\"<init>\":(I)V\n+   #20 = NameAndType        #5:#16        // \"<init>\":(I)V\n+   #21 = Class              #22           // java/io/BufferedReader\n+   #22 = Utf8               java/io/BufferedReader\n+   #23 = Class              #24           // java/io/InputStreamReader\n+   #24 = Utf8               java/io/InputStreamReader\n+   #25 = Methodref          #8.#26        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+   #26 = NameAndType        #27:#28       // getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+   #27 = Utf8               getInputStream\n+   #28 = Utf8               (ZLjava/lang/String;)Ljava/io/InputStream;\n+   #29 = Methodref          #8.#30        // org/apache/commons/net/finger/FingerClient.getCharset:()Ljava/nio/charset/Charset;\n+   #30 = NameAndType        #31:#32       // getCharset:()Ljava/nio/charset/Charset;\n+   #31 = Utf8               getCharset\n+   #32 = Utf8               ()Ljava/nio/charset/Charset;\n+   #33 = Methodref          #23.#34       // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #34 = NameAndType        #5:#35        // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #35 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #36 = Methodref          #21.#37       // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/io/Reader;)V\n+   #38 = Utf8               (Ljava/io/Reader;)V\n+   #39 = Methodref          #21.#40       // java/io/BufferedReader.read:([CII)I\n+   #40 = NameAndType        #41:#42       // read:([CII)I\n+   #41 = Utf8               read\n+   #42 = Utf8               ([CII)I\n+   #43 = Methodref          #17.#44       // java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+   #44 = NameAndType        #45:#46       // append:([CII)Ljava/lang/StringBuilder;\n+   #45 = Utf8               append\n+   #46 = Utf8               ([CII)Ljava/lang/StringBuilder;\n+   #47 = Methodref          #21.#48       // java/io/BufferedReader.close:()V\n+   #48 = NameAndType        #49:#6        // close:()V\n+   #49 = Utf8               close\n+   #50 = Class              #51           // java/lang/Throwable\n+   #51 = Utf8               java/lang/Throwable\n+   #52 = Methodref          #50.#53       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #53 = NameAndType        #54:#55       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #54 = Utf8               addSuppressed\n+   #55 = Utf8               (Ljava/lang/Throwable;)V\n+   #56 = Methodref          #17.#57       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #57 = NameAndType        #58:#59       // toString:()Ljava/lang/String;\n+   #58 = Utf8               toString\n+   #59 = Utf8               ()Ljava/lang/String;\n+   #60 = String             #61           //\n+   #61 = Utf8\n+   #62 = Methodref          #8.#63        // org/apache/commons/net/finger/FingerClient.query:(ZLjava/lang/String;)Ljava/lang/String;\n+   #63 = NameAndType        #64:#65       // query:(ZLjava/lang/String;)Ljava/lang/String;\n+   #64 = Utf8               query\n+   #65 = Utf8               (ZLjava/lang/String;)Ljava/lang/String;\n+   #66 = Methodref          #8.#67        // org/apache/commons/net/finger/FingerClient.getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #67 = NameAndType        #27:#68       // getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #68 = Utf8               (ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+   #69 = String             #70           // /W\n+   #70 = Utf8               /W\n+   #71 = Methodref          #17.#72       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #72 = NameAndType        #45:#73       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #74 = String             #75           // \\r\\n\n+   #75 = Utf8               \\r\\n\n+   #76 = Methodref          #77.#78       // org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #77 = Class              #79           // org/apache/commons/net/util/Charsets\n+   #78 = NameAndType        #80:#81       // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #79 = Utf8               org/apache/commons/net/util/Charsets\n+   #80 = Utf8               toCharset\n+   #81 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #82 = Methodref          #83.#84       // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #83 = Class              #85           // java/nio/charset/Charset\n+   #84 = NameAndType        #86:#59       // name:()Ljava/lang/String;\n+   #85 = Utf8               java/nio/charset/Charset\n+   #86 = Utf8               name\n+   #87 = Methodref          #88.#89       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #88 = Class              #90           // java/lang/String\n+   #89 = NameAndType        #91:#92       // getBytes:(Ljava/lang/String;)[B\n+   #90 = Utf8               java/lang/String\n+   #91 = Utf8               getBytes\n+   #92 = Utf8               (Ljava/lang/String;)[B\n+   #93 = Class              #94           // java/io/DataOutputStream\n+   #94 = Utf8               java/io/DataOutputStream\n+   #95 = Class              #96           // java/io/BufferedOutputStream\n+   #96 = Utf8               java/io/BufferedOutputStream\n+   #97 = Fieldref           #8.#98        // org/apache/commons/net/finger/FingerClient._output_:Ljava/io/OutputStream;\n+   #98 = NameAndType        #99:#100      // _output_:Ljava/io/OutputStream;\n+   #99 = Utf8               _output_\n+  #100 = Utf8               Ljava/io/OutputStream;\n+  #101 = Methodref          #95.#102      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+  #102 = NameAndType        #5:#103       // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #103 = Utf8               (Ljava/io/OutputStream;I)V\n+  #104 = Methodref          #93.#105      // java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #105 = NameAndType        #5:#106       // \"<init>\":(Ljava/io/OutputStream;)V\n+  #106 = Utf8               (Ljava/io/OutputStream;)V\n+  #107 = Methodref          #93.#108      // java/io/DataOutputStream.write:([BII)V\n+  #108 = NameAndType        #109:#110     // write:([BII)V\n+  #109 = Utf8               write\n+  #110 = Utf8               ([BII)V\n+  #111 = Methodref          #93.#112      // java/io/DataOutputStream.flush:()V\n+  #112 = NameAndType        #113:#6       // flush:()V\n+  #113 = Utf8               flush\n+  #114 = Fieldref           #8.#115       // org/apache/commons/net/finger/FingerClient._input_:Ljava/io/InputStream;\n+  #115 = NameAndType        #116:#117     // _input_:Ljava/io/InputStream;\n+  #116 = Utf8               _input_\n+  #117 = Utf8               Ljava/io/InputStream;\n+  #118 = Utf8               DEFAULT_PORT\n+  #119 = Utf8               I\n+  #120 = Utf8               ConstantValue\n+  #121 = Integer            79\n+  #122 = Utf8               LONG_FLAG\n+  #123 = Utf8               Ljava/lang/String;\n+  #124 = Utf8               Code\n+  #125 = Utf8               LineNumberTable\n+  #126 = Utf8               LocalVariableTable\n+  #127 = Utf8               this\n+  #128 = Utf8               Lorg/apache/commons/net/finger/FingerClient;\n+  #129 = Utf8               input\n+  #130 = Utf8               Ljava/io/BufferedReader;\n+  #131 = Utf8               longOutput\n+  #132 = Utf8               Z\n+  #133 = Utf8               username\n+  #134 = Utf8               result\n+  #135 = Utf8               Ljava/lang/StringBuilder;\n+  #136 = Utf8               StackMapTable\n+  #137 = Utf8               Exceptions\n+  #138 = Class              #139          // java/io/IOException\n+  #139 = Utf8               java/io/IOException\n+  #140 = Utf8               (Z)Ljava/lang/String;\n+  #141 = Utf8               encoding\n+  #142 = Utf8               output\n+  #143 = Utf8               Ljava/io/DataOutputStream;\n+  #144 = Utf8               encodedQuery\n+  #145 = Utf8               [B\n+  #146 = Utf8               (Z)Ljava/io/InputStream;\n+  #147 = Utf8               SourceFile\n+  #148 = Utf8               FingerClient.java\n {\n   public static final int DEFAULT_PORT = 79;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 79\n \n   private static final java.lang.String LONG_FLAG = \"/W \";\n@@ -177,18 +177,18 @@\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n          4: aload_0\n          5: sipush        1024\n          8: newarray       char\n-        10: putfield      #2                  // Field buffer:[C\n+        10: putfield      #7                  // Field buffer:[C\n         13: aload_0\n         14: bipush        79\n-        16: invokevirtual #4                  // Method setDefaultPort:(I)V\n+        16: invokevirtual #13                 // Method setDefaultPort:(I)V\n         19: return\n       LineNumberTable:\n         line 69: 0\n         line 62: 4\n         line 70: 13\n         line 71: 19\n       LocalVariableTable:\n@@ -196,69 +196,69 @@\n             0      20     0  this   Lorg/apache/commons/net/finger/FingerClient;\n \n   public java.lang.String query(boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (ZLjava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=8, args_size=3\n-         0: new           #5                  // class java/lang/StringBuilder\n+         0: new           #17                 // class java/lang/StringBuilder\n          3: dup\n          4: aload_0\n-         5: getfield      #2                  // Field buffer:[C\n+         5: getfield      #7                  // Field buffer:[C\n          8: arraylength\n-         9: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         9: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n         12: astore        4\n-        14: new           #7                  // class java/io/BufferedReader\n+        14: new           #21                 // class java/io/BufferedReader\n         17: dup\n-        18: new           #8                  // class java/io/InputStreamReader\n+        18: new           #23                 // class java/io/InputStreamReader\n         21: dup\n         22: aload_0\n         23: iload_1\n         24: aload_2\n-        25: invokevirtual #9                  // Method getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+        25: invokevirtual #25                 // Method getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n         28: aload_0\n-        29: invokevirtual #10                 // Method getCharset:()Ljava/nio/charset/Charset;\n-        32: invokespecial #11                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-        35: invokespecial #12                 // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+        29: invokevirtual #29                 // Method getCharset:()Ljava/nio/charset/Charset;\n+        32: invokespecial #33                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+        35: invokespecial #36                 // Method java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n         38: astore        5\n         40: aload         5\n         42: aload_0\n-        43: getfield      #2                  // Field buffer:[C\n+        43: getfield      #7                  // Field buffer:[C\n         46: iconst_0\n         47: aload_0\n-        48: getfield      #2                  // Field buffer:[C\n+        48: getfield      #7                  // Field buffer:[C\n         51: arraylength\n-        52: invokevirtual #13                 // Method java/io/BufferedReader.read:([CII)I\n+        52: invokevirtual #39                 // Method java/io/BufferedReader.read:([CII)I\n         55: istore_3\n         56: iload_3\n         57: ifgt          63\n         60: goto          78\n         63: aload         4\n         65: aload_0\n-        66: getfield      #2                  // Field buffer:[C\n+        66: getfield      #7                  // Field buffer:[C\n         69: iconst_0\n         70: iload_3\n-        71: invokevirtual #14                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n+        71: invokevirtual #43                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;\n         74: pop\n         75: goto          40\n         78: aload         5\n-        80: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n+        80: invokevirtual #47                 // Method java/io/BufferedReader.close:()V\n         83: goto          108\n         86: astore        6\n         88: aload         5\n-        90: invokevirtual #15                 // Method java/io/BufferedReader.close:()V\n+        90: invokevirtual #47                 // Method java/io/BufferedReader.close:()V\n         93: goto          105\n         96: astore        7\n         98: aload         6\n        100: aload         7\n-       102: invokevirtual #17                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       102: invokevirtual #52                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        105: aload         6\n        107: athrow\n        108: aload         4\n-       110: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       110: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        113: areturn\n       Exception table:\n          from    to  target type\n             40    78    86   Class java/lang/Throwable\n             88    93    96   Class java/lang/Throwable\n       LineNumberTable:\n         line 87: 0\n@@ -308,16 +308,16 @@\n   public java.lang.String query(boolean) throws java.io.IOException;\n     descriptor: (Z)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #19                 // String\n-         4: invokevirtual #20                 // Method query:(ZLjava/lang/String;)Ljava/lang/String;\n+         2: ldc           #60                 // String\n+         4: invokevirtual #62                 // Method query:(ZLjava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 116: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/finger/FingerClient;\n             0       8     1 longOutput   Z\n@@ -329,15 +329,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: aconst_null\n-         4: invokevirtual #21                 // Method getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n+         4: invokevirtual #66                 // Method getInputStream:(ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n          7: areturn\n       LineNumberTable:\n         line 135: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/finger/FingerClient;\n             0       8     1 longOutput   Z\n@@ -346,60 +346,60 @@\n       throws java.io.IOException\n \n   public java.io.InputStream getInputStream(boolean, java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (ZLjava/lang/String;Ljava/lang/String;)Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=7, args_size=4\n-         0: new           #5                  // class java/lang/StringBuilder\n+         0: new           #17                 // class java/lang/StringBuilder\n          3: dup\n          4: bipush        64\n-         6: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         6: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n          9: astore        5\n         11: iload_1\n         12: ifeq          23\n         15: aload         5\n-        17: ldc           #22                 // String /W\n-        19: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        17: ldc           #69                 // String /W\n+        19: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         22: pop\n         23: aload         5\n         25: aload_2\n-        26: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         29: pop\n         30: aload         5\n-        32: ldc           #25                 // String \\r\\n\n-        34: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        32: ldc           #74                 // String \\r\\n\n+        34: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: pop\n         38: aload         5\n-        40: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        40: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         43: aload_3\n-        44: invokestatic  #26                 // Method org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-        47: invokevirtual #27                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n-        50: invokevirtual #28                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+        44: invokestatic  #76                 // Method org/apache/commons/net/util/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+        47: invokevirtual #82                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+        50: invokevirtual #87                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n         53: astore        6\n-        55: new           #29                 // class java/io/DataOutputStream\n+        55: new           #93                 // class java/io/DataOutputStream\n         58: dup\n-        59: new           #30                 // class java/io/BufferedOutputStream\n+        59: new           #95                 // class java/io/BufferedOutputStream\n         62: dup\n         63: aload_0\n-        64: getfield      #31                 // Field _output_:Ljava/io/OutputStream;\n+        64: getfield      #97                 // Field _output_:Ljava/io/OutputStream;\n         67: sipush        1024\n-        70: invokespecial #32                 // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-        73: invokespecial #33                 // Method java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        70: invokespecial #101                // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+        73: invokespecial #104                // Method java/io/DataOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         76: astore        4\n         78: aload         4\n         80: aload         6\n         82: iconst_0\n         83: aload         6\n         85: arraylength\n-        86: invokevirtual #34                 // Method java/io/DataOutputStream.write:([BII)V\n+        86: invokevirtual #107                // Method java/io/DataOutputStream.write:([BII)V\n         89: aload         4\n-        91: invokevirtual #35                 // Method java/io/DataOutputStream.flush:()V\n+        91: invokevirtual #111                // Method java/io/DataOutputStream.flush:()V\n         94: aload_0\n-        95: getfield      #36                 // Field _input_:Ljava/io/InputStream;\n+        95: getfield      #114                // Field _input_:Ljava/io/InputStream;\n         98: areturn\n       LineNumberTable:\n         line 155: 0\n         line 156: 11\n         line 157: 15\n         line 159: 23\n         line 160: 30\n@@ -427,16 +427,16 @@\n   public java.io.InputStream getInputStream(boolean) throws java.io.IOException;\n     descriptor: (Z)Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #19                 // String\n-         4: invokevirtual #9                  // Method getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n+         2: ldc           #60                 // String\n+         4: invokevirtual #25                 // Method getInputStream:(ZLjava/lang/String;)Ljava/io/InputStream;\n          7: areturn\n       LineNumberTable:\n         line 187: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/finger/FingerClient;\n             0       8     1 longOutput   Z\n"}]}
