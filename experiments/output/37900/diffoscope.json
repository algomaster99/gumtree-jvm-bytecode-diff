{"diffoscope-json-version": 1, "source1": "first/MatchRatingApproachEncoder.class", "source2": "second/MatchRatingApproachEncoder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,19 +18,24 @@\n     private static final int SEVEN = 7;\n     private static final int ELEVEN = 11;\n     private static final int TWELVE = 12;\n     private static final String PLAIN_ASCII = \"AaEeIiOoUuAaEeIiOoUuYyAaEeIiOoUuYyAaOoNnAaEeIiOoUuYyAaCcOoUu\";\n     private static final String UNICODE = \"\\u00c0\\u00e0\\u00c8\\u00e8\\u00cc\\u00ec\\u00d2\\u00f2\\u00d9\\u00f9\\u00c1\\u00e1\\u00c9\\u00e9\\u00cd\\u00ed\\u00d3\\u00f3\\u00da\\u00fa\\u00dd\\u00fd\\u00c2\\u00e2\\u00ca\\u00ea\\u00ce\\u00ee\\u00d4\\u00f4\\u00db\\u00fb\\u0176\\u0177\\u00c3\\u00e3\\u00d5\\u00f5\\u00d1\\u00f1\\u00c4\\u00e4\\u00cb\\u00eb\\u00cf\\u00ef\\u00d6\\u00f6\\u00dc\\u00fc\\u0178\\u00ff\\u00c5\\u00e5\\u00c7\\u00e7\\u0150\\u0151\\u0170\\u0171\";\n     private static final String[] DOUBLE_CONSONANT;\n     \n+    static {\n+        DOUBLE_CONSONANT = new String[] { \"BB\", \"CC\", \"DD\", \"FF\", \"GG\", \"HH\", \"JJ\", \"KK\", \"LL\", \"MM\", \"NN\", \"PP\", \"QQ\", \"RR\", \"SS\", \"TT\", \"VV\", \"WW\", \"XX\", \"YY\", \"ZZ\" };\n+    }\n+    \n     String cleanName(final String name) {\n         String upperName = name.toUpperCase(Locale.ENGLISH);\n-        final String[] array;\n-        final String[] charsToTrim = array = new String[] { \"\\\\-\", \"[&]\", \"\\\\'\", \"\\\\.\", \"[\\\\,]\" };\n-        for (final String str : array) {\n+        final String[] charsToTrim = { \"\\\\-\", \"[&]\", \"\\\\'\", \"\\\\.\", \"[\\\\,]\" };\n+        String[] array;\n+        for (int length = (array = charsToTrim).length, i = 0; i < length; ++i) {\n+            final String str = array[i];\n             upperName = upperName.replaceAll(str, \"\");\n         }\n         upperName = this.removeAccents(upperName);\n         upperName = upperName.replaceAll(\"\\\\s+\", \"\");\n         return upperName;\n     }\n     \n@@ -53,15 +58,15 @@\n     }\n     \n     String getFirst3Last3(final String name) {\n         final int nameLength = name.length();\n         if (nameLength > 6) {\n             final String firstThree = name.substring(0, 3);\n             final String lastThree = name.substring(nameLength - 3, nameLength);\n-            return firstThree + lastThree;\n+            return String.valueOf(firstThree) + lastThree;\n         }\n         return name;\n     }\n     \n     int getMinRating(final int sumLength) {\n         int minRating = 0;\n         if (sumLength <= 4) {\n@@ -162,15 +167,17 @@\n             }\n         }\n         return sb.toString();\n     }\n     \n     String removeDoubleConsonants(final String name) {\n         String replacedName = name.toUpperCase(Locale.ENGLISH);\n-        for (final String dc : MatchRatingApproachEncoder.DOUBLE_CONSONANT) {\n+        String[] double_CONSONANT;\n+        for (int length = (double_CONSONANT = MatchRatingApproachEncoder.DOUBLE_CONSONANT).length, i = 0; i < length; ++i) {\n+            final String dc = double_CONSONANT[i];\n             if (replacedName.contains(dc)) {\n                 final String singleLetter = dc.substring(0, 1);\n                 replacedName = replacedName.replace(dc, singleLetter);\n             }\n         }\n         return replacedName;\n     }\n@@ -180,16 +187,12 @@\n         name = name.replaceAll(\"A\", \"\");\n         name = name.replaceAll(\"E\", \"\");\n         name = name.replaceAll(\"I\", \"\");\n         name = name.replaceAll(\"O\", \"\");\n         name = name.replaceAll(\"U\", \"\");\n         name = name.replaceAll(\"\\\\s{2,}\\\\b\", \" \");\n         if (this.isVowel(firstLetter)) {\n-            return firstLetter + name;\n+            return String.valueOf(firstLetter) + name;\n         }\n         return name;\n     }\n-    \n-    static {\n-        DOUBLE_CONSONANT = new String[] { \"BB\", \"CC\", \"DD\", \"FF\", \"GG\", \"HH\", \"JJ\", \"KK\", \"LL\", \"MM\", \"NN\", \"PP\", \"QQ\", \"RR\", \"SS\", \"TT\", \"VV\", \"WW\", \"XX\", \"YY\", \"ZZ\" };\n-    }\n }\n"}]}
