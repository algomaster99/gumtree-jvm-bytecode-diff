{"diffoscope-json-version": 1, "source1": "first/DumpArchiveInputStream.class", "source2": "second/DumpArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,474 +1,466 @@\n-  SHA-256 checksum 86a00b0126707604610e5868f844e28c932aee84a54b47cd0b61bb8a25dc3224\n+  SHA-256 checksum 84b74aedf656df73a1c3b5cc95566d2de4a814c37296bffa8ae3f906c43a3cb6\n   Compiled from \"DumpArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.dump.DumpArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #126                        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  super_class: #127                       // org/apache/commons/compress/archivers/ArchiveInputStream\n+  this_class: #1                          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+  super_class: #3                         // org/apache/commons/compress/archivers/ArchiveInputStream\n   interfaces: 0, fields: 17, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #126.#247     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-    #2 = Methodref          #127.#248     // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #3 = Class              #249          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-    #4 = Fieldref           #126.#250     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBuf:[B\n-    #5 = Class              #251          // java/util/HashMap\n-    #6 = Methodref          #5.#248       // java/util/HashMap.\"<init>\":()V\n-    #7 = Fieldref           #126.#252     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.names:Ljava/util/Map;\n-    #8 = Fieldref           #126.#253     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.pending:Ljava/util/Map;\n-    #9 = Class              #254          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #10 = Methodref          #9.#255       // org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #11 = Fieldref           #126.#256     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-   #12 = Fieldref           #126.#257     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.hasHitEOF:Z\n-   #13 = Fieldref           #126.#258     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.encoding:Ljava/lang/String;\n-   #14 = Methodref          #259.#260     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #15 = Fieldref           #126.#261     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #16 = Methodref          #9.#262       // org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-   #17 = Methodref          #263.#264     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-   #18 = Class              #265          // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n-   #19 = Methodref          #18.#248      // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n-   #20 = Class              #266          // org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n-   #21 = Methodref          #20.#267      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-   #22 = Fieldref           #126.#268     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-   #23 = Methodref          #20.#269      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n-   #24 = Methodref          #20.#270      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n-   #25 = Methodref          #9.#271       // org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n-   #26 = Fieldref           #126.#272     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.blockBuffer:[B\n-   #27 = Methodref          #126.#273     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI:()V\n-   #28 = Methodref          #126.#274     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS:()V\n-   #29 = Class              #275          // java/io/IOException\n-   #30 = Class              #276          // org/apache/commons/compress/archivers/ArchiveException\n-   #31 = Methodref          #29.#277      // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #32 = Methodref          #30.#278      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-   #33 = Class              #279          // org/apache/commons/compress/archivers/dump/Dirent\n-   #34 = String             #280          // .\n-   #35 = Methodref          #33.#281      // org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n-   #36 = Methodref          #282.#283     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #37 = InterfaceMethodref #284.#285     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #38 = Class              #286          // java/util/PriorityQueue\n-   #39 = Class              #287          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-   #40 = Methodref          #39.#288      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-   #41 = Methodref          #38.#289      // java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n-   #42 = Fieldref           #126.#290     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.queue:Ljava/util/Queue;\n-   #43 = Methodref          #126.#291     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead:()J\n-   #44 = Methodref          #9.#291       // org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-   #45 = Class              #292          // org/apache/commons/compress/archivers/dump/InvalidFormatException\n-   #46 = Methodref          #45.#248      // org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-   #47 = Methodref          #64.#293      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #48 = Fieldref           #126.#294     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #49 = Fieldref           #295.#296     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #50 = Methodref          #64.#297      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #51 = Long               1024l\n-   #53 = Methodref          #64.#298      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-   #54 = Methodref          #9.#299       // org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-   #55 = Long               -1l\n-   #57 = Class              #300          // java/io/EOFException\n-   #58 = Methodref          #57.#248      // java/io/EOFException.\"<init>\":()V\n-   #59 = Fieldref           #126.#301     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readIdx:I\n-   #60 = Fieldref           #295.#302     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #61 = Methodref          #126.#303     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-   #62 = InterfaceMethodref #304.#305     // java/util/Queue.isEmpty:()Z\n-   #63 = InterfaceMethodref #304.#306     // java/util/Queue.remove:()Ljava/lang/Object;\n-   #64 = Class              #307          // org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-   #65 = Methodref          #64.#308      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n-   #66 = Fieldref           #126.#309     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.filepos:J\n-   #67 = Fieldref           #295.#310     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #68 = Methodref          #64.#311      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n-   #69 = Fieldref           #295.#312     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #70 = Methodref          #64.#313      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n-   #71 = Methodref          #126.#314     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-   #72 = Fieldref           #126.#315     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entryOffset:J\n-   #73 = Fieldref           #126.#316     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entrySize:J\n-   #74 = Methodref          #64.#317      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n-   #75 = Fieldref           #126.#318     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.recordOffset:I\n-   #76 = Methodref          #126.#319     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-   #77 = Methodref          #64.#320      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n-   #78 = Methodref          #64.#321      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-   #79 = InterfaceMethodref #284.#322     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #80 = Methodref          #33.#323      // org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-   #81 = Methodref          #64.#324      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n-   #82 = Methodref          #64.#325      // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n-   #83 = InterfaceMethodref #284.#326     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-   #84 = Fieldref           #295.#327     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-   #85 = Methodref          #9.#328       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-   #86 = Long               8l\n-   #88 = Methodref          #263.#329     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n-   #89 = Methodref          #263.#330     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n-   #90 = Methodref          #263.#331     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-   #91 = Methodref          #113.#332     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #92 = String             #333          // ..\n-   #93 = InterfaceMethodref #284.#334     // java/util/Map.entrySet:()Ljava/util/Set;\n-   #94 = InterfaceMethodref #335.#336     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #95 = InterfaceMethodref #337.#338     // java/util/Iterator.hasNext:()Z\n-   #96 = InterfaceMethodref #337.#339     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #97 = Class              #340          // java/util/Map$Entry\n-   #98 = InterfaceMethodref #97.#341      // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-   #99 = InterfaceMethodref #97.#342      // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-  #100 = InterfaceMethodref #304.#343     // java/util/Queue.add:(Ljava/lang/Object;)Z\n-  #101 = InterfaceMethodref #304.#336     // java/util/Queue.iterator:()Ljava/util/Iterator;\n-  #102 = InterfaceMethodref #284.#344     // java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #103 = Methodref          #9.#345       // org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n-  #104 = Class              #346          // java/util/Stack\n-  #105 = Methodref          #104.#248     // java/util/Stack.\"<init>\":()V\n-  #106 = Methodref          #104.#347     // java/util/Stack.clear:()V\n-  #107 = Methodref          #104.#348     // java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #108 = Methodref          #33.#321      // org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n-  #109 = Methodref          #33.#349      // org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n-  #110 = Methodref          #104.#305     // java/util/Stack.isEmpty:()Z\n-  #111 = Class              #350          // java/lang/StringBuilder\n-  #112 = Methodref          #104.#351     // java/util/Stack.pop:()Ljava/lang/Object;\n-  #113 = Class              #352          // java/lang/String\n-  #114 = Methodref          #111.#353     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-  #115 = Methodref          #111.#354     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #116 = Methodref          #111.#355     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #117 = Methodref          #111.#356     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #118 = Fieldref           #126.#357     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.isClosed:Z\n-  #119 = Class              #358          // java/lang/IllegalStateException\n-  #120 = String             #359          // No current dump entry\n-  #121 = Methodref          #119.#353     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #122 = Methodref          #360.#361     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #123 = Methodref          #362.#363     // java/util/Arrays.fill:([BB)V\n-  #124 = Methodref          #9.#364       // org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n-  #125 = Integer            60012\n-  #126 = Class              #365          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #127 = Class              #366          // org/apache/commons/compress/archivers/ArchiveInputStream\n-  #128 = Utf8               InnerClasses\n-  #129 = Utf8               summary\n-  #130 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #131 = Utf8               active\n-  #132 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #133 = Utf8               isClosed\n-  #134 = Utf8               Z\n-  #135 = Utf8               hasHitEOF\n-  #136 = Utf8               entrySize\n-  #137 = Utf8               J\n-  #138 = Utf8               entryOffset\n-  #139 = Utf8               readIdx\n-  #140 = Utf8               I\n-  #141 = Utf8               readBuf\n-  #142 = Utf8               [B\n-  #143 = Utf8               blockBuffer\n-  #144 = Utf8               recordOffset\n-  #145 = Utf8               filepos\n-  #146 = Utf8               raw\n-  #147 = Utf8               Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-  #148 = Utf8               names\n-  #149 = Utf8               Ljava/util/Map;\n-  #150 = Utf8               Signature\n-  #151 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n-  #152 = Utf8               pending\n-  #153 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n-  #154 = Utf8               queue\n-  #155 = Utf8               Ljava/util/Queue;\n-  #156 = Utf8               Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n-  #157 = Utf8               zipEncoding\n-  #158 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #159 = Utf8               encoding\n-  #160 = Utf8               Ljava/lang/String;\n-  #161 = Utf8               <init>\n-  #162 = Utf8               (Ljava/io/InputStream;)V\n-  #163 = Utf8               Code\n-  #164 = Utf8               LineNumberTable\n-  #165 = Utf8               LocalVariableTable\n-  #166 = Utf8               this\n-  #167 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-  #168 = Utf8               is\n-  #169 = Utf8               Ljava/io/InputStream;\n-  #170 = Utf8               Exceptions\n-  #171 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #172 = Utf8               headerBytes\n-  #173 = Utf8               ex\n-  #174 = Utf8               Ljava/io/IOException;\n-  #175 = Utf8               root\n-  #176 = Utf8               Lorg/apache/commons/compress/archivers/dump/Dirent;\n-  #177 = Utf8               StackMapTable\n-  #178 = Class              #365          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #179 = Class              #367          // java/io/InputStream\n-  #180 = Class              #352          // java/lang/String\n-  #181 = Class              #142          // \"[B\"\n-  #182 = Class              #275          // java/io/IOException\n-  #183 = Utf8               getCount\n-  #184 = Utf8               ()I\n-  #185 = Utf8               Deprecated\n-  #186 = Utf8               RuntimeVisibleAnnotations\n-  #187 = Utf8               Ljava/lang/Deprecated;\n-  #188 = Utf8               getBytesRead\n-  #189 = Utf8               ()J\n-  #190 = Utf8               getSummary\n-  #191 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #192 = Utf8               readCLRI\n-  #193 = Utf8               ()V\n-  #194 = Utf8               buffer\n-  #195 = Utf8               readBITS\n-  #196 = Utf8               getNextDumpEntry\n-  #197 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #198 = Utf8               getNextEntry\n-  #199 = Utf8               entry\n-  #200 = Utf8               path\n-  #201 = Class              #307          // org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-  #202 = Utf8               readDirectoryEntry\n-  #203 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-  #204 = Utf8               e\n-  #205 = Utf8               Entry\n-  #206 = Utf8               Ljava/util/Map$Entry;\n-  #207 = Utf8               ino\n-  #208 = Utf8               type\n-  #209 = Utf8               B\n-  #210 = Utf8               name\n-  #211 = Utf8               d\n-  #212 = Utf8               i\n-  #213 = Utf8               datalen\n-  #214 = Utf8               reclen\n-  #215 = Utf8               peekBytes\n-  #216 = Utf8               size\n-  #217 = Utf8               first\n-  #218 = Utf8               LocalVariableTypeTable\n-  #219 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n-  #220 = Class              #279          // org/apache/commons/compress/archivers/dump/Dirent\n-  #221 = Class              #368          // java/util/Iterator\n-  #222 = Utf8               getPath\n-  #223 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-  #224 = Utf8               elements\n-  #225 = Utf8               Ljava/util/Stack;\n-  #226 = Utf8               dirent\n-  #227 = Utf8               sb\n-  #228 = Utf8               Ljava/lang/StringBuilder;\n-  #229 = Utf8               Ljava/util/Stack<Ljava/lang/String;>;\n-  #230 = Class              #346          // java/util/Stack\n-  #231 = Class              #350          // java/lang/StringBuilder\n-  #232 = Utf8               read\n-  #233 = Utf8               ([BII)I\n-  #234 = Utf8               r\n-  #235 = Utf8               sz\n-  #236 = Utf8               buf\n-  #237 = Utf8               off\n-  #238 = Utf8               len\n-  #239 = Utf8               totalRead\n-  #240 = Utf8               close\n-  #241 = Utf8               matches\n-  #242 = Utf8               ([BI)Z\n-  #243 = Utf8               length\n-  #244 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #245 = Utf8               SourceFile\n-  #246 = Utf8               DumpArchiveInputStream.java\n-  #247 = NameAndType        #161:#171     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #248 = NameAndType        #161:#193     // \"<init>\":()V\n-  #249 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-  #250 = NameAndType        #141:#142     // readBuf:[B\n-  #251 = Utf8               java/util/HashMap\n-  #252 = NameAndType        #148:#149     // names:Ljava/util/Map;\n-  #253 = NameAndType        #152:#149     // pending:Ljava/util/Map;\n-  #254 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #255 = NameAndType        #161:#162     // \"<init>\":(Ljava/io/InputStream;)V\n-  #256 = NameAndType        #146:#147     // raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-  #257 = NameAndType        #135:#134     // hasHitEOF:Z\n-  #258 = NameAndType        #159:#160     // encoding:Ljava/lang/String;\n-  #259 = Class              #369          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #260 = NameAndType        #370:#371     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #261 = NameAndType        #157:#158     // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #262 = NameAndType        #372:#373     // readRecord:()[B\n-  #263 = Class              #374          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #264 = NameAndType        #375:#376     // verify:([B)Z\n-  #265 = Utf8               org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n-  #266 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n-  #267 = NameAndType        #161:#377     // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #268 = NameAndType        #129:#130     // summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-  #269 = NameAndType        #378:#184     // getNTRec:()I\n-  #270 = NameAndType        #379:#380     // isCompressed:()Z\n-  #271 = NameAndType        #381:#382     // resetBlockSize:(IZ)V\n-  #272 = NameAndType        #143:#142     // blockBuffer:[B\n-  #273 = NameAndType        #192:#193     // readCLRI:()V\n-  #274 = NameAndType        #195:#193     // readBITS:()V\n-  #275 = Utf8               java/io/IOException\n-  #276 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #277 = NameAndType        #383:#384     // getMessage:()Ljava/lang/String;\n-  #278 = NameAndType        #161:#385     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #279 = Utf8               org/apache/commons/compress/archivers/dump/Dirent\n-  #280 = Utf8               .\n-  #281 = NameAndType        #161:#386     // \"<init>\":(IIILjava/lang/String;)V\n-  #282 = Class              #387          // java/lang/Integer\n-  #283 = NameAndType        #388:#389     // valueOf:(I)Ljava/lang/Integer;\n-  #284 = Class              #390          // java/util/Map\n-  #285 = NameAndType        #391:#392     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #286 = Utf8               java/util/PriorityQueue\n-  #287 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-  #288 = NameAndType        #161:#393     // \"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-  #289 = NameAndType        #161:#394     // \"<init>\":(ILjava/util/Comparator;)V\n-  #290 = NameAndType        #154:#155     // queue:Ljava/util/Queue;\n-  #291 = NameAndType        #188:#189     // getBytesRead:()J\n-  #292 = Utf8               org/apache/commons/compress/archivers/dump/InvalidFormatException\n-  #293 = NameAndType        #395:#396     // parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #294 = NameAndType        #131:#132     // active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #295 = Class              #397          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n-  #296 = NameAndType        #399:#400     // CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #297 = NameAndType        #401:#402     // getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #298 = NameAndType        #403:#184     // getHeaderCount:()I\n-  #299 = NameAndType        #404:#405     // skip:(J)J\n-  #300 = Utf8               java/io/EOFException\n-  #301 = NameAndType        #139:#140     // readIdx:I\n-  #302 = NameAndType        #406:#400     // BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #303 = NameAndType        #198:#197     // getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #304 = Class              #407          // java/util/Queue\n-  #305 = NameAndType        #408:#380     // isEmpty:()Z\n-  #306 = NameAndType        #409:#410     // remove:()Ljava/lang/Object;\n-  #307 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-  #308 = NameAndType        #411:#412     // isSparseRecord:(I)Z\n-  #309 = NameAndType        #145:#137     // filepos:J\n-  #310 = NameAndType        #413:#400     // ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #311 = NameAndType        #414:#184     // getHeaderHoles:()I\n-  #312 = NameAndType        #415:#400     // END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #313 = NameAndType        #416:#380     // isDirectory:()Z\n-  #314 = NameAndType        #202:#203     // readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-  #315 = NameAndType        #138:#137     // entryOffset:J\n-  #316 = NameAndType        #136:#137     // entrySize:J\n-  #317 = NameAndType        #417:#189     // getEntrySize:()J\n-  #318 = NameAndType        #144:#140     // recordOffset:I\n-  #319 = NameAndType        #222:#223     // getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-  #320 = NameAndType        #418:#419     // setName:(Ljava/lang/String;)V\n-  #321 = NameAndType        #420:#184     // getIno:()I\n-  #322 = NameAndType        #421:#422     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #323 = NameAndType        #423:#384     // getName:()Ljava/lang/String;\n-  #324 = NameAndType        #424:#419     // setSimpleName:(Ljava/lang/String;)V\n-  #325 = NameAndType        #425:#426     // setOffset:(J)V\n-  #326 = NameAndType        #427:#428     // containsKey:(Ljava/lang/Object;)Z\n-  #327 = NameAndType        #429:#400     // INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #328 = NameAndType        #232:#233     // read:([BII)I\n-  #329 = NameAndType        #430:#431     // convert32:([BI)I\n-  #330 = NameAndType        #432:#431     // convert16:([BI)I\n-  #331 = NameAndType        #433:#434     // decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-  #332 = NameAndType        #435:#428     // equals:(Ljava/lang/Object;)Z\n-  #333 = Utf8               ..\n-  #334 = NameAndType        #436:#437     // entrySet:()Ljava/util/Set;\n-  #335 = Class              #438          // java/util/Set\n-  #336 = NameAndType        #439:#440     // iterator:()Ljava/util/Iterator;\n-  #337 = Class              #368          // java/util/Iterator\n-  #338 = NameAndType        #441:#380     // hasNext:()Z\n-  #339 = NameAndType        #442:#410     // next:()Ljava/lang/Object;\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+    #2 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+    #3 = Class              #4            // org/apache/commons/compress/archivers/ArchiveInputStream\n+    #4 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+    #5 = Utf8               summary\n+    #6 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+    #7 = Utf8               active\n+    #8 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+    #9 = Utf8               isClosed\n+   #10 = Utf8               Z\n+   #11 = Utf8               hasHitEOF\n+   #12 = Utf8               entrySize\n+   #13 = Utf8               J\n+   #14 = Utf8               entryOffset\n+   #15 = Utf8               readIdx\n+   #16 = Utf8               I\n+   #17 = Utf8               readBuf\n+   #18 = Utf8               [B\n+   #19 = Utf8               blockBuffer\n+   #20 = Utf8               recordOffset\n+   #21 = Utf8               filepos\n+   #22 = Utf8               raw\n+   #23 = Utf8               Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #24 = Utf8               names\n+   #25 = Utf8               Ljava/util/Map;\n+   #26 = Utf8               Signature\n+   #27 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n+   #28 = Utf8               pending\n+   #29 = Utf8               Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+   #30 = Utf8               queue\n+   #31 = Utf8               Ljava/util/Queue;\n+   #32 = Utf8               Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+   #33 = Utf8               zipEncoding\n+   #34 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #35 = Utf8               encoding\n+   #36 = Utf8               Ljava/lang/String;\n+   #37 = Utf8               <init>\n+   #38 = Utf8               (Ljava/io/InputStream;)V\n+   #39 = Utf8               Exceptions\n+   #40 = Class              #41           // org/apache/commons/compress/archivers/ArchiveException\n+   #41 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+   #42 = Utf8               Code\n+   #43 = Methodref          #1.#44        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #44 = NameAndType        #37:#45       // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #45 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+   #46 = Utf8               LineNumberTable\n+   #47 = Utf8               LocalVariableTable\n+   #48 = Utf8               this\n+   #49 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n+   #50 = Utf8               is\n+   #51 = Utf8               Ljava/io/InputStream;\n+   #52 = Methodref          #3.#53        // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+   #53 = NameAndType        #37:#54       // \"<init>\":()V\n+   #54 = Utf8               ()V\n+   #55 = Fieldref           #1.#56        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBuf:[B\n+   #56 = NameAndType        #17:#18       // readBuf:[B\n+   #57 = Class              #58           // java/util/HashMap\n+   #58 = Utf8               java/util/HashMap\n+   #59 = Methodref          #57.#53       // java/util/HashMap.\"<init>\":()V\n+   #60 = Fieldref           #1.#61        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.names:Ljava/util/Map;\n+   #61 = NameAndType        #24:#25       // names:Ljava/util/Map;\n+   #62 = Fieldref           #1.#63        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.pending:Ljava/util/Map;\n+   #63 = NameAndType        #28:#25       // pending:Ljava/util/Map;\n+   #64 = Class              #65           // org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #65 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #66 = Methodref          #64.#67       // org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #67 = NameAndType        #37:#38       // \"<init>\":(Ljava/io/InputStream;)V\n+   #68 = Fieldref           #1.#69        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #69 = NameAndType        #22:#23       // raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+   #70 = Fieldref           #1.#71        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.hasHitEOF:Z\n+   #71 = NameAndType        #11:#10       // hasHitEOF:Z\n+   #72 = Fieldref           #1.#73        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.encoding:Ljava/lang/String;\n+   #73 = NameAndType        #35:#36       // encoding:Ljava/lang/String;\n+   #74 = Methodref          #75.#77       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #75 = Class              #76           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #76 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #77 = NameAndType        #78:#79       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #78 = Utf8               getZipEncoding\n+   #79 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #80 = Fieldref           #1.#81        // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #81 = NameAndType        #33:#34       // zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #82 = Methodref          #64.#83       // org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+   #83 = NameAndType        #84:#85       // readRecord:()[B\n+   #84 = Utf8               readRecord\n+   #85 = Utf8               ()[B\n+   #86 = Methodref          #87.#89       // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+   #87 = Class              #88           // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+   #88 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+   #89 = NameAndType        #90:#91       // verify:([B)Z\n+   #90 = Utf8               verify\n+   #91 = Utf8               ([B)Z\n+   #92 = Class              #93           // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+   #93 = Utf8               org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+   #94 = Methodref          #92.#53       // org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n+   #95 = Class              #96           // org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+   #96 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+   #97 = Methodref          #95.#98       // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #98 = NameAndType        #37:#99       // \"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #99 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #100 = Fieldref           #1.#101       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+  #101 = NameAndType        #5:#6         // summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+  #102 = Methodref          #95.#103      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n+  #103 = NameAndType        #104:#105     // getNTRec:()I\n+  #104 = Utf8               getNTRec\n+  #105 = Utf8               ()I\n+  #106 = Methodref          #95.#107      // org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n+  #107 = NameAndType        #108:#109     // isCompressed:()Z\n+  #108 = Utf8               isCompressed\n+  #109 = Utf8               ()Z\n+  #110 = Methodref          #64.#111      // org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n+  #111 = NameAndType        #112:#113     // resetBlockSize:(IZ)V\n+  #112 = Utf8               resetBlockSize\n+  #113 = Utf8               (IZ)V\n+  #114 = Fieldref           #1.#115       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.blockBuffer:[B\n+  #115 = NameAndType        #19:#18       // blockBuffer:[B\n+  #116 = Methodref          #1.#117       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readCLRI:()V\n+  #117 = NameAndType        #118:#54      // readCLRI:()V\n+  #118 = Utf8               readCLRI\n+  #119 = Methodref          #1.#120       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readBITS:()V\n+  #120 = NameAndType        #121:#54      // readBITS:()V\n+  #121 = Utf8               readBITS\n+  #122 = Methodref          #123.#125     // java/io/IOException.getMessage:()Ljava/lang/String;\n+  #123 = Class              #124          // java/io/IOException\n+  #124 = Utf8               java/io/IOException\n+  #125 = NameAndType        #126:#127     // getMessage:()Ljava/lang/String;\n+  #126 = Utf8               getMessage\n+  #127 = Utf8               ()Ljava/lang/String;\n+  #128 = Methodref          #40.#129      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #129 = NameAndType        #37:#130      // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+  #130 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+  #131 = Class              #132          // org/apache/commons/compress/archivers/dump/Dirent\n+  #132 = Utf8               org/apache/commons/compress/archivers/dump/Dirent\n+  #133 = String             #134          // .\n+  #134 = Utf8               .\n+  #135 = Methodref          #131.#136     // org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+  #136 = NameAndType        #37:#137      // \"<init>\":(IIILjava/lang/String;)V\n+  #137 = Utf8               (IIILjava/lang/String;)V\n+  #138 = Methodref          #139.#141     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #139 = Class              #140          // java/lang/Integer\n+  #140 = Utf8               java/lang/Integer\n+  #141 = NameAndType        #142:#143     // valueOf:(I)Ljava/lang/Integer;\n+  #142 = Utf8               valueOf\n+  #143 = Utf8               (I)Ljava/lang/Integer;\n+  #144 = InterfaceMethodref #145.#147     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #145 = Class              #146          // java/util/Map\n+  #146 = Utf8               java/util/Map\n+  #147 = NameAndType        #148:#149     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #148 = Utf8               put\n+  #149 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #150 = Class              #151          // java/util/PriorityQueue\n+  #151 = Utf8               java/util/PriorityQueue\n+  #152 = Class              #153          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+  #153 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+  #154 = Methodref          #152.#155     // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #155 = NameAndType        #37:#156      // \"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #156 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+  #157 = Methodref          #150.#158     // java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n+  #158 = NameAndType        #37:#159      // \"<init>\":(ILjava/util/Comparator;)V\n+  #159 = Utf8               (ILjava/util/Comparator;)V\n+  #160 = Fieldref           #1.#161       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.queue:Ljava/util/Queue;\n+  #161 = NameAndType        #30:#31       // queue:Ljava/util/Queue;\n+  #162 = Utf8               headerBytes\n+  #163 = Utf8               ex\n+  #164 = Utf8               Ljava/io/IOException;\n+  #165 = Utf8               root\n+  #166 = Utf8               Lorg/apache/commons/compress/archivers/dump/Dirent;\n+  #167 = Utf8               StackMapTable\n+  #168 = Class              #169          // java/io/InputStream\n+  #169 = Utf8               java/io/InputStream\n+  #170 = Class              #171          // java/lang/String\n+  #171 = Utf8               java/lang/String\n+  #172 = Class              #18           // \"[B\"\n+  #173 = Utf8               getCount\n+  #174 = Utf8               Deprecated\n+  #175 = Utf8               RuntimeVisibleAnnotations\n+  #176 = Utf8               Ljava/lang/Deprecated;\n+  #177 = Methodref          #1.#178       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getBytesRead:()J\n+  #178 = NameAndType        #179:#180     // getBytesRead:()J\n+  #179 = Utf8               getBytesRead\n+  #180 = Utf8               ()J\n+  #181 = Methodref          #64.#178      // org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+  #182 = Utf8               getSummary\n+  #183 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+  #184 = Class              #185          // org/apache/commons/compress/archivers/dump/InvalidFormatException\n+  #185 = Utf8               org/apache/commons/compress/archivers/dump/InvalidFormatException\n+  #186 = Methodref          #184.#53      // org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+  #187 = Methodref          #188.#190     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #188 = Class              #189          // org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+  #189 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+  #190 = NameAndType        #191:#192     // parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #191 = Utf8               parse\n+  #192 = Utf8               ([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #193 = Fieldref           #1.#194       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #194 = NameAndType        #7:#8         // active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #195 = Fieldref           #196.#198     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #196 = Class              #197          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n+  #197 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n+  #198 = NameAndType        #199:#200     // CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #199 = Utf8               CLRI\n+  #200 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #201 = Methodref          #188.#202     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #202 = NameAndType        #203:#204     // getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #203 = Utf8               getHeaderType\n+  #204 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #205 = Long               1024l\n+  #207 = Methodref          #188.#208     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+  #208 = NameAndType        #209:#105     // getHeaderCount:()I\n+  #209 = Utf8               getHeaderCount\n+  #210 = Methodref          #64.#211      // org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+  #211 = NameAndType        #212:#213     // skip:(J)J\n+  #212 = Utf8               skip\n+  #213 = Utf8               (J)J\n+  #214 = Long               -1l\n+  #216 = Class              #217          // java/io/EOFException\n+  #217 = Utf8               java/io/EOFException\n+  #218 = Methodref          #216.#53      // java/io/EOFException.\"<init>\":()V\n+  #219 = Fieldref           #1.#220       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readIdx:I\n+  #220 = NameAndType        #15:#16       // readIdx:I\n+  #221 = Utf8               buffer\n+  #222 = Fieldref           #196.#223     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #223 = NameAndType        #224:#200     // BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #224 = Utf8               BITS\n+  #225 = Utf8               getNextDumpEntry\n+  #226 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #227 = Methodref          #1.#228       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #228 = NameAndType        #229:#226     // getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+  #229 = Utf8               getNextEntry\n+  #230 = InterfaceMethodref #231.#233     // java/util/Queue.isEmpty:()Z\n+  #231 = Class              #232          // java/util/Queue\n+  #232 = Utf8               java/util/Queue\n+  #233 = NameAndType        #234:#109     // isEmpty:()Z\n+  #234 = Utf8               isEmpty\n+  #235 = InterfaceMethodref #231.#236     // java/util/Queue.remove:()Ljava/lang/Object;\n+  #236 = NameAndType        #237:#238     // remove:()Ljava/lang/Object;\n+  #237 = Utf8               remove\n+  #238 = Utf8               ()Ljava/lang/Object;\n+  #239 = Methodref          #188.#240     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+  #240 = NameAndType        #241:#242     // isSparseRecord:(I)Z\n+  #241 = Utf8               isSparseRecord\n+  #242 = Utf8               (I)Z\n+  #243 = Fieldref           #1.#244       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.filepos:J\n+  #244 = NameAndType        #21:#13       // filepos:J\n+  #245 = Methodref          #188.#246     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n+  #246 = NameAndType        #247:#105     // getHeaderHoles:()I\n+  #247 = Utf8               getHeaderHoles\n+  #248 = Fieldref           #196.#249     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #249 = NameAndType        #250:#200     // ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #250 = Utf8               ADDR\n+  #251 = Fieldref           #196.#252     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #252 = NameAndType        #253:#200     // END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #253 = Utf8               END\n+  #254 = Methodref          #188.#255     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n+  #255 = NameAndType        #256:#109     // isDirectory:()Z\n+  #256 = Utf8               isDirectory\n+  #257 = Methodref          #1.#258       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #258 = NameAndType        #259:#260     // readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #259 = Utf8               readDirectoryEntry\n+  #260 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+  #261 = Fieldref           #1.#262       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entryOffset:J\n+  #262 = NameAndType        #14:#13       // entryOffset:J\n+  #263 = Fieldref           #1.#264       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.entrySize:J\n+  #264 = NameAndType        #12:#13       // entrySize:J\n+  #265 = Methodref          #188.#266     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+  #266 = NameAndType        #267:#180     // getEntrySize:()J\n+  #267 = Utf8               getEntrySize\n+  #268 = Fieldref           #1.#269       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.recordOffset:I\n+  #269 = NameAndType        #20:#16       // recordOffset:I\n+  #270 = Methodref          #1.#271       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #271 = NameAndType        #272:#273     // getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #272 = Utf8               getPath\n+  #273 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+  #274 = Methodref          #188.#275     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+  #275 = NameAndType        #276:#277     // setName:(Ljava/lang/String;)V\n+  #276 = Utf8               setName\n+  #277 = Utf8               (Ljava/lang/String;)V\n+  #278 = Methodref          #188.#279     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+  #279 = NameAndType        #280:#105     // getIno:()I\n+  #280 = Utf8               getIno\n+  #281 = InterfaceMethodref #145.#282     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #282 = NameAndType        #283:#284     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #283 = Utf8               get\n+  #284 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #285 = Methodref          #131.#286     // org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+  #286 = NameAndType        #287:#127     // getName:()Ljava/lang/String;\n+  #287 = Utf8               getName\n+  #288 = Methodref          #188.#289     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+  #289 = NameAndType        #290:#277     // setSimpleName:(Ljava/lang/String;)V\n+  #290 = Utf8               setSimpleName\n+  #291 = Methodref          #188.#292     // org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n+  #292 = NameAndType        #293:#294     // setOffset:(J)V\n+  #293 = Utf8               setOffset\n+  #294 = Utf8               (J)V\n+  #295 = Utf8               entry\n+  #296 = Utf8               path\n+  #297 = InterfaceMethodref #145.#298     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+  #298 = NameAndType        #299:#300     // containsKey:(Ljava/lang/Object;)Z\n+  #299 = Utf8               containsKey\n+  #300 = Utf8               (Ljava/lang/Object;)Z\n+  #301 = Fieldref           #196.#302     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #302 = NameAndType        #303:#200     // INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+  #303 = Utf8               INODE\n+  #304 = Methodref          #64.#305      // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+  #305 = NameAndType        #306:#307     // read:([BII)I\n+  #306 = Utf8               read\n+  #307 = Utf8               ([BII)I\n+  #308 = Methodref          #87.#309      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+  #309 = NameAndType        #310:#311     // convert32:([BI)I\n+  #310 = Utf8               convert32\n+  #311 = Utf8               ([BI)I\n+  #312 = Methodref          #87.#313      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n+  #313 = NameAndType        #314:#311     // convert16:([BI)I\n+  #314 = Utf8               convert16\n+  #315 = Methodref          #87.#316      // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #316 = NameAndType        #317:#318     // decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #317 = Utf8               decode\n+  #318 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+  #319 = Methodref          #170.#320     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #320 = NameAndType        #321:#300     // equals:(Ljava/lang/Object;)Z\n+  #321 = Utf8               equals\n+  #322 = String             #323          // ..\n+  #323 = Utf8               ..\n+  #324 = InterfaceMethodref #145.#325     // java/util/Map.entrySet:()Ljava/util/Set;\n+  #325 = NameAndType        #326:#327     // entrySet:()Ljava/util/Set;\n+  #326 = Utf8               entrySet\n+  #327 = Utf8               ()Ljava/util/Set;\n+  #328 = InterfaceMethodref #329.#331     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #329 = Class              #330          // java/util/Set\n+  #330 = Utf8               java/util/Set\n+  #331 = NameAndType        #332:#333     // iterator:()Ljava/util/Iterator;\n+  #332 = Utf8               iterator\n+  #333 = Utf8               ()Ljava/util/Iterator;\n+  #334 = InterfaceMethodref #335.#337     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #335 = Class              #336          // java/util/Iterator\n+  #336 = Utf8               java/util/Iterator\n+  #337 = NameAndType        #338:#238     // next:()Ljava/lang/Object;\n+  #338 = Utf8               next\n+  #339 = Class              #340          // java/util/Map$Entry\n   #340 = Utf8               java/util/Map$Entry\n-  #341 = NameAndType        #443:#410     // getValue:()Ljava/lang/Object;\n-  #342 = NameAndType        #444:#410     // getKey:()Ljava/lang/Object;\n-  #343 = NameAndType        #445:#428     // add:(Ljava/lang/Object;)Z\n-  #344 = NameAndType        #409:#422     // remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #345 = NameAndType        #446:#373     // peek:()[B\n-  #346 = Utf8               java/util/Stack\n-  #347 = NameAndType        #447:#193     // clear:()V\n-  #348 = NameAndType        #448:#422     // push:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #349 = NameAndType        #449:#184     // getParentIno:()I\n-  #350 = Utf8               java/lang/StringBuilder\n-  #351 = NameAndType        #450:#410     // pop:()Ljava/lang/Object;\n-  #352 = Utf8               java/lang/String\n-  #353 = NameAndType        #161:#419     // \"<init>\":(Ljava/lang/String;)V\n-  #354 = NameAndType        #451:#452     // append:(C)Ljava/lang/StringBuilder;\n-  #355 = NameAndType        #451:#453     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #356 = NameAndType        #454:#384     // toString:()Ljava/lang/String;\n-  #357 = NameAndType        #133:#134     // isClosed:Z\n-  #358 = Utf8               java/lang/IllegalStateException\n-  #359 = Utf8               No current dump entry\n-  #360 = Class              #455          // java/lang/System\n-  #361 = NameAndType        #456:#457     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #362 = Class              #458          // java/util/Arrays\n-  #363 = NameAndType        #459:#460     // fill:([BB)V\n-  #364 = NameAndType        #240:#193     // close:()V\n-  #365 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #366 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #367 = Utf8               java/io/InputStream\n-  #368 = Utf8               java/util/Iterator\n-  #369 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #370 = Utf8               getZipEncoding\n-  #371 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #372 = Utf8               readRecord\n-  #373 = Utf8               ()[B\n-  #374 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #375 = Utf8               verify\n-  #376 = Utf8               ([B)Z\n-  #377 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #378 = Utf8               getNTRec\n-  #379 = Utf8               isCompressed\n-  #380 = Utf8               ()Z\n-  #381 = Utf8               resetBlockSize\n-  #382 = Utf8               (IZ)V\n-  #383 = Utf8               getMessage\n-  #384 = Utf8               ()Ljava/lang/String;\n-  #385 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #386 = Utf8               (IIILjava/lang/String;)V\n-  #387 = Utf8               java/lang/Integer\n-  #388 = Utf8               valueOf\n-  #389 = Utf8               (I)Ljava/lang/Integer;\n-  #390 = Utf8               java/util/Map\n-  #391 = Utf8               put\n-  #392 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #393 = Utf8               (Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-  #394 = Utf8               (ILjava/util/Comparator;)V\n-  #395 = Utf8               parse\n-  #396 = Utf8               ([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-  #397 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE\n-  #398 = Utf8               SEGMENT_TYPE\n-  #399 = Utf8               CLRI\n-  #400 = Utf8               Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #401 = Utf8               getHeaderType\n-  #402 = Utf8               ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-  #403 = Utf8               getHeaderCount\n-  #404 = Utf8               skip\n-  #405 = Utf8               (J)J\n-  #406 = Utf8               BITS\n-  #407 = Utf8               java/util/Queue\n-  #408 = Utf8               isEmpty\n-  #409 = Utf8               remove\n-  #410 = Utf8               ()Ljava/lang/Object;\n-  #411 = Utf8               isSparseRecord\n-  #412 = Utf8               (I)Z\n-  #413 = Utf8               ADDR\n-  #414 = Utf8               getHeaderHoles\n-  #415 = Utf8               END\n-  #416 = Utf8               isDirectory\n-  #417 = Utf8               getEntrySize\n-  #418 = Utf8               setName\n-  #419 = Utf8               (Ljava/lang/String;)V\n-  #420 = Utf8               getIno\n-  #421 = Utf8               get\n-  #422 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #423 = Utf8               getName\n-  #424 = Utf8               setSimpleName\n-  #425 = Utf8               setOffset\n-  #426 = Utf8               (J)V\n-  #427 = Utf8               containsKey\n-  #428 = Utf8               (Ljava/lang/Object;)Z\n-  #429 = Utf8               INODE\n-  #430 = Utf8               convert32\n-  #431 = Utf8               ([BI)I\n-  #432 = Utf8               convert16\n-  #433 = Utf8               decode\n-  #434 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-  #435 = Utf8               equals\n-  #436 = Utf8               entrySet\n-  #437 = Utf8               ()Ljava/util/Set;\n-  #438 = Utf8               java/util/Set\n-  #439 = Utf8               iterator\n-  #440 = Utf8               ()Ljava/util/Iterator;\n-  #441 = Utf8               hasNext\n-  #442 = Utf8               next\n-  #443 = Utf8               getValue\n-  #444 = Utf8               getKey\n-  #445 = Utf8               add\n-  #446 = Utf8               peek\n-  #447 = Utf8               clear\n-  #448 = Utf8               push\n-  #449 = Utf8               getParentIno\n-  #450 = Utf8               pop\n-  #451 = Utf8               append\n-  #452 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #453 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #454 = Utf8               toString\n-  #455 = Utf8               java/lang/System\n-  #456 = Utf8               arraycopy\n-  #457 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #458 = Utf8               java/util/Arrays\n-  #459 = Utf8               fill\n-  #460 = Utf8               ([BB)V\n+  #341 = InterfaceMethodref #339.#342     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #342 = NameAndType        #343:#238     // getValue:()Ljava/lang/Object;\n+  #343 = Utf8               getValue\n+  #344 = InterfaceMethodref #339.#345     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+  #345 = NameAndType        #346:#238     // getKey:()Ljava/lang/Object;\n+  #346 = Utf8               getKey\n+  #347 = InterfaceMethodref #231.#348     // java/util/Queue.add:(Ljava/lang/Object;)Z\n+  #348 = NameAndType        #349:#300     // add:(Ljava/lang/Object;)Z\n+  #349 = Utf8               add\n+  #350 = InterfaceMethodref #335.#351     // java/util/Iterator.hasNext:()Z\n+  #351 = NameAndType        #352:#109     // hasNext:()Z\n+  #352 = Utf8               hasNext\n+  #353 = InterfaceMethodref #231.#331     // java/util/Queue.iterator:()Ljava/util/Iterator;\n+  #354 = InterfaceMethodref #145.#355     // java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #355 = NameAndType        #237:#284     // remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #356 = Long               8l\n+  #358 = Methodref          #64.#359      // org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n+  #359 = NameAndType        #360:#85      // peek:()[B\n+  #360 = Utf8               peek\n+  #361 = Utf8               size\n+  #362 = Utf8               first\n+  #363 = Utf8               datalen\n+  #364 = Utf8               reclen\n+  #365 = Utf8               i\n+  #366 = Utf8               ino\n+  #367 = Utf8               type\n+  #368 = Utf8               B\n+  #369 = Utf8               name\n+  #370 = Utf8               d\n+  #371 = Utf8               e\n+  #372 = Utf8               Ljava/util/Map$Entry;\n+  #373 = Utf8               peekBytes\n+  #374 = Utf8               LocalVariableTypeTable\n+  #375 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+  #376 = Class              #377          // java/util/Stack\n+  #377 = Utf8               java/util/Stack\n+  #378 = Methodref          #376.#53      // java/util/Stack.\"<init>\":()V\n+  #379 = Methodref          #376.#380     // java/util/Stack.clear:()V\n+  #380 = NameAndType        #381:#54      // clear:()V\n+  #381 = Utf8               clear\n+  #382 = Methodref          #376.#383     // java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #383 = NameAndType        #384:#284     // push:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #384 = Utf8               push\n+  #385 = Methodref          #131.#279     // org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n+  #386 = Methodref          #131.#387     // org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+  #387 = NameAndType        #388:#105     // getParentIno:()I\n+  #388 = Utf8               getParentIno\n+  #389 = Methodref          #376.#233     // java/util/Stack.isEmpty:()Z\n+  #390 = Class              #391          // java/lang/StringBuilder\n+  #391 = Utf8               java/lang/StringBuilder\n+  #392 = Methodref          #376.#393     // java/util/Stack.pop:()Ljava/lang/Object;\n+  #393 = NameAndType        #394:#238     // pop:()Ljava/lang/Object;\n+  #394 = Utf8               pop\n+  #395 = Methodref          #390.#396     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #396 = NameAndType        #37:#277      // \"<init>\":(Ljava/lang/String;)V\n+  #397 = Methodref          #390.#398     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #398 = NameAndType        #399:#400     // append:(C)Ljava/lang/StringBuilder;\n+  #399 = Utf8               append\n+  #400 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #401 = Methodref          #390.#402     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #402 = NameAndType        #399:#403     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #403 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #404 = Methodref          #390.#405     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #405 = NameAndType        #406:#127     // toString:()Ljava/lang/String;\n+  #406 = Utf8               toString\n+  #407 = Utf8               elements\n+  #408 = Utf8               Ljava/util/Stack;\n+  #409 = Utf8               dirent\n+  #410 = Utf8               sb\n+  #411 = Utf8               Ljava/lang/StringBuilder;\n+  #412 = Utf8               Ljava/util/Stack<Ljava/lang/String;>;\n+  #413 = Fieldref           #1.#414       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.isClosed:Z\n+  #414 = NameAndType        #9:#10        // isClosed:Z\n+  #415 = Class              #416          // java/lang/IllegalStateException\n+  #416 = Utf8               java/lang/IllegalStateException\n+  #417 = String             #418          // No current dump entry\n+  #418 = Utf8               No current dump entry\n+  #419 = Methodref          #415.#396     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #420 = Methodref          #421.#423     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #421 = Class              #422          // java/lang/System\n+  #422 = Utf8               java/lang/System\n+  #423 = NameAndType        #424:#425     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #424 = Utf8               arraycopy\n+  #425 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #426 = Methodref          #427.#429     // java/util/Arrays.fill:([BB)V\n+  #427 = Class              #428          // java/util/Arrays\n+  #428 = Utf8               java/util/Arrays\n+  #429 = NameAndType        #430:#431     // fill:([BB)V\n+  #430 = Utf8               fill\n+  #431 = Utf8               ([BB)V\n+  #432 = Utf8               buf\n+  #433 = Utf8               off\n+  #434 = Utf8               len\n+  #435 = Utf8               totalRead\n+  #436 = Utf8               sz\n+  #437 = Utf8               r\n+  #438 = Utf8               close\n+  #439 = Methodref          #64.#440      // org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n+  #440 = NameAndType        #438:#54      // close:()V\n+  #441 = Utf8               matches\n+  #442 = Utf8               ([BI)Z\n+  #443 = Integer            60012\n+  #444 = Utf8               length\n+  #445 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #446 = Utf8               SourceFile\n+  #447 = Utf8               DumpArchiveInputStream.java\n+  #448 = Utf8               InnerClasses\n+  #449 = Utf8               Entry\n+  #450 = Class              #451          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #451 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #452 = Utf8               SEGMENT_TYPE\n {\n   private org.apache.commons.compress.archivers.dump.DumpArchiveSummary summary;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.dump.DumpArchiveEntry active;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n@@ -513,167 +505,169 @@\n   protected org.apache.commons.compress.archivers.dump.TapeInputStream raw;\n     descriptor: Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n     flags: (0x0004) ACC_PROTECTED\n \n   private final java.util.Map<java.lang.Integer, org.apache.commons.compress.archivers.dump.Dirent> names;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #151                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n+    Signature: #27                          // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/Dirent;>;\n \n   private final java.util.Map<java.lang.Integer, org.apache.commons.compress.archivers.dump.DumpArchiveEntry> pending;\n     descriptor: Ljava/util/Map;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #153                         // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+    Signature: #29                          // Ljava/util/Map<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n \n   private java.util.Queue<org.apache.commons.compress.archivers.dump.DumpArchiveEntry> queue;\n     descriptor: Ljava/util/Queue;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #156                         // Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+    Signature: #32                          // Ljava/util/Queue<Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n \n   private final org.apache.commons.compress.archivers.zip.ZipEncoding zipEncoding;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   final java.lang.String encoding;\n     descriptor: Ljava/lang/String;\n     flags: (0x0010) ACC_FINAL\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveInputStream(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.compress.archivers.ArchiveException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokespecial #1                  // Method \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+         3: invokespecial #43                 // Method \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n             0       7     1    is   Ljava/io/InputStream;\n-    Exceptions:\n-      throws org.apache.commons.compress.archivers.ArchiveException\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveInputStream(java.io.InputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.compress.archivers.ArchiveException\n     Code:\n       stack=7, locals=4, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+         1: invokespecial #52                 // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n          4: aload_0\n          5: sipush        1024\n          8: newarray       byte\n-        10: putfield      #4                  // Field readBuf:[B\n+        10: putfield      #55                 // Field readBuf:[B\n         13: aload_0\n-        14: new           #5                  // class java/util/HashMap\n+        14: new           #57                 // class java/util/HashMap\n         17: dup\n-        18: invokespecial #6                  // Method java/util/HashMap.\"<init>\":()V\n-        21: putfield      #7                  // Field names:Ljava/util/Map;\n+        18: invokespecial #59                 // Method java/util/HashMap.\"<init>\":()V\n+        21: putfield      #60                 // Field names:Ljava/util/Map;\n         24: aload_0\n-        25: new           #5                  // class java/util/HashMap\n+        25: new           #57                 // class java/util/HashMap\n         28: dup\n-        29: invokespecial #6                  // Method java/util/HashMap.\"<init>\":()V\n-        32: putfield      #8                  // Field pending:Ljava/util/Map;\n+        29: invokespecial #59                 // Method java/util/HashMap.\"<init>\":()V\n+        32: putfield      #62                 // Field pending:Ljava/util/Map;\n         35: aload_0\n-        36: new           #9                  // class org/apache/commons/compress/archivers/dump/TapeInputStream\n+        36: new           #64                 // class org/apache/commons/compress/archivers/dump/TapeInputStream\n         39: dup\n         40: aload_1\n-        41: invokespecial #10                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        44: putfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        41: invokespecial #66                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        44: putfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n         47: aload_0\n         48: iconst_0\n-        49: putfield      #12                 // Field hasHitEOF:Z\n+        49: putfield      #70                 // Field hasHitEOF:Z\n         52: aload_0\n         53: aload_2\n-        54: putfield      #13                 // Field encoding:Ljava/lang/String;\n+        54: putfield      #72                 // Field encoding:Ljava/lang/String;\n         57: aload_0\n         58: aload_2\n-        59: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        62: putfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        59: invokestatic  #74                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        62: putfield      #80                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         65: aload_0\n-        66: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        69: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+        66: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        69: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n         72: astore_3\n         73: aload_3\n-        74: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+        74: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         77: ifne          88\n-        80: new           #18                 // class org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n+        80: new           #92                 // class org/apache/commons/compress/archivers/dump/UnrecognizedFormatException\n         83: dup\n-        84: invokespecial #19                 // Method org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n+        84: invokespecial #94                 // Method org/apache/commons/compress/archivers/dump/UnrecognizedFormatException.\"<init>\":()V\n         87: athrow\n         88: aload_0\n-        89: new           #20                 // class org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n+        89: new           #95                 // class org/apache/commons/compress/archivers/dump/DumpArchiveSummary\n         92: dup\n         93: aload_3\n         94: aload_0\n-        95: getfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        98: invokespecial #21                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-       101: putfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+        95: getfield      #80                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        98: invokespecial #97                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.\"<init>\":([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+       101: putfield      #100                // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n        104: aload_0\n-       105: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       105: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n        108: aload_0\n-       109: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-       112: invokevirtual #23                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n+       109: getfield      #100                // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+       112: invokevirtual #102                // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.getNTRec:()I\n        115: aload_0\n-       116: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n-       119: invokevirtual #24                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n-       122: invokevirtual #25                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n+       116: getfield      #100                // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+       119: invokevirtual #106                // Method org/apache/commons/compress/archivers/dump/DumpArchiveSummary.isCompressed:()Z\n+       122: invokevirtual #110                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.resetBlockSize:(IZ)V\n        125: aload_0\n        126: sipush        4096\n        129: newarray       byte\n-       131: putfield      #26                 // Field blockBuffer:[B\n+       131: putfield      #114                // Field blockBuffer:[B\n        134: aload_0\n-       135: invokespecial #27                 // Method readCLRI:()V\n+       135: invokespecial #116                // Method readCLRI:()V\n        138: aload_0\n-       139: invokespecial #28                 // Method readBITS:()V\n+       139: invokespecial #119                // Method readBITS:()V\n        142: goto          159\n        145: astore_3\n-       146: new           #30                 // class org/apache/commons/compress/archivers/ArchiveException\n+       146: new           #40                 // class org/apache/commons/compress/archivers/ArchiveException\n        149: dup\n        150: aload_3\n-       151: invokevirtual #31                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+       151: invokevirtual #122                // Method java/io/IOException.getMessage:()Ljava/lang/String;\n        154: aload_3\n-       155: invokespecial #32                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       155: invokespecial #128                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        158: athrow\n-       159: new           #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n+       159: new           #131                // class org/apache/commons/compress/archivers/dump/Dirent\n        162: dup\n        163: iconst_2\n        164: iconst_2\n        165: iconst_4\n-       166: ldc           #34                 // String .\n-       168: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+       166: ldc           #133                // String .\n+       168: invokespecial #135                // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n        171: astore_3\n        172: aload_0\n-       173: getfield      #7                  // Field names:Ljava/util/Map;\n+       173: getfield      #60                 // Field names:Ljava/util/Map;\n        176: iconst_2\n-       177: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       177: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        180: aload_3\n-       181: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       181: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        186: pop\n        187: aload_0\n-       188: new           #38                 // class java/util/PriorityQueue\n+       188: new           #150                // class java/util/PriorityQueue\n        191: dup\n        192: bipush        10\n-       194: new           #39                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n+       194: new           #152                // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n        197: dup\n        198: aload_0\n-       199: invokespecial #40                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n-       202: invokespecial #41                 // Method java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n-       205: putfield      #42                 // Field queue:Ljava/util/Queue;\n+       199: invokespecial #154                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1.\"<init>\":(Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;)V\n+       202: invokespecial #157                // Method java/util/PriorityQueue.\"<init>\":(ILjava/util/Comparator;)V\n+       205: putfield      #160                // Field queue:Ljava/util/Queue;\n        208: return\n       Exception table:\n          from    to  target type\n             65   142   145   Class java/io/IOException\n       LineNumberTable:\n-        line 103: 0\n+        line 102: 0\n         line 59: 4\n         line 66: 13\n         line 69: 24\n         line 104: 35\n         line 105: 47\n         line 106: 52\n         line 107: 57\n@@ -681,951 +675,956 @@\n         line 113: 73\n         line 114: 80\n         line 118: 88\n         line 121: 104\n         line 124: 125\n         line 127: 134\n         line 128: 138\n-        line 131: 142\n-        line 129: 145\n+        line 129: 142\n         line 130: 146\n         line 134: 159\n         line 135: 172\n         line 139: 187\n+        line 140: 194\n+        line 139: 205\n         line 150: 208\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           73      69     3 headerBytes   [B\n-          146      13     3    ex   Ljava/io/IOException;\n             0     209     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n             0     209     1    is   Ljava/io/InputStream;\n             0     209     2 encoding   Ljava/lang/String;\n+           73      69     3 headerBytes   [B\n+          146      13     3    ex   Ljava/io/IOException;\n           172      37     3  root   Lorg/apache/commons/compress/archivers/dump/Dirent;\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 88\n           locals = [ class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream, class java/io/InputStream, class java/lang/String, class \"[B\" ]\n           stack = []\n         frame_type = 255 /* full_frame */\n           offset_delta = 56\n           locals = [ class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream, class java/io/InputStream, class java/lang/String ]\n           stack = [ class java/io/IOException ]\n         frame_type = 13 /* same */\n-    Exceptions:\n-      throws org.apache.commons.compress.archivers.ArchiveException\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #176()\n+        java.lang.Deprecated\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #43                 // Method getBytesRead:()J\n+         1: invokevirtual #177                // Method getBytesRead:()J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 155: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #187()\n-        java.lang.Deprecated\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+         1: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #181                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 160: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveSummary getSummary();\n     descriptor: ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n+         1: getfield      #100                // Field summary:Lorg/apache/commons/compress/archivers/dump/DumpArchiveSummary;\n          4: areturn\n       LineNumberTable:\n         line 168: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n \n   private void readCLRI() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+         1: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+         9: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         12: ifne          23\n-        15: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        15: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         18: dup\n-        19: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        19: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         22: athrow\n         23: aload_0\n         24: aload_1\n-        25: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        28: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        31: getstatic     #49                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        25: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        28: putfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        31: getstatic     #195                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.CLRI:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         34: aload_0\n-        35: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        38: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        35: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        38: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         41: if_acmpeq     52\n-        44: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        44: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         47: dup\n-        48: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        48: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         51: athrow\n         52: aload_0\n-        53: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        56: ldc2_w        #51                 // long 1024l\n+        53: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        56: ldc2_w        #205                // long 1024l\n         59: aload_0\n-        60: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        63: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        60: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        63: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         66: i2l\n         67: lmul\n-        68: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        71: ldc2_w        #55                 // long -1l\n+        68: invokevirtual #210                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        71: ldc2_w        #214                // long -1l\n         74: lcmp\n         75: ifne          86\n-        78: new           #57                 // class java/io/EOFException\n+        78: new           #216                // class java/io/EOFException\n         81: dup\n-        82: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+        82: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n         85: athrow\n         86: aload_0\n         87: aload_0\n-        88: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        91: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        94: putfield      #59                 // Field readIdx:I\n+        88: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        91: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        94: putfield      #219                // Field readIdx:I\n         97: return\n       LineNumberTable:\n         line 175: 0\n         line 177: 8\n         line 178: 15\n         line 181: 23\n         line 183: 31\n         line 184: 44\n         line 188: 52\n+        line 189: 71\n+        line 188: 74\n         line 190: 78\n         line 192: 86\n         line 193: 97\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      98     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n             8      90     1 buffer   [B\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class \"[B\" ]\n         frame_type = 28 /* same */\n         frame_type = 33 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void readBITS() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-         4: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+         1: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+         4: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n          7: astore_1\n          8: aload_1\n-         9: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+         9: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         12: ifne          23\n-        15: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        15: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         18: dup\n-        19: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        19: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         22: athrow\n         23: aload_0\n         24: aload_1\n-        25: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        28: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        31: getstatic     #60                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        25: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        28: putfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        31: getstatic     #222                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.BITS:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         34: aload_0\n-        35: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        38: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        35: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        38: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n         41: if_acmpeq     52\n-        44: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+        44: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n         47: dup\n-        48: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+        48: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n         51: athrow\n         52: aload_0\n-        53: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        56: ldc2_w        #51                 // long 1024l\n+        53: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        56: ldc2_w        #205                // long 1024l\n         59: aload_0\n-        60: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        63: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        60: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        63: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n         66: i2l\n         67: lmul\n-        68: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        71: ldc2_w        #55                 // long -1l\n+        68: invokevirtual #210                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        71: ldc2_w        #214                // long -1l\n         74: lcmp\n         75: ifne          86\n-        78: new           #57                 // class java/io/EOFException\n+        78: new           #216                // class java/io/EOFException\n         81: dup\n-        82: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+        82: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n         85: athrow\n         86: aload_0\n         87: aload_0\n-        88: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        91: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        94: putfield      #59                 // Field readIdx:I\n+        88: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        91: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        94: putfield      #219                // Field readIdx:I\n         97: return\n       LineNumberTable:\n         line 199: 0\n         line 201: 8\n         line 202: 15\n         line 205: 23\n         line 207: 31\n         line 208: 44\n         line 212: 52\n+        line 213: 71\n+        line 212: 74\n         line 214: 78\n         line 216: 86\n         line 217: 97\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      98     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n             8      90     1 buffer   [B\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class \"[B\" ]\n         frame_type = 28 /* same */\n         frame_type = 33 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextDumpEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #61                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+         1: invokevirtual #227                // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 225: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: aconst_null\n          3: astore_2\n          4: aload_0\n-         5: getfield      #42                 // Field queue:Ljava/util/Queue;\n-         8: invokeinterface #62,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z\n-        13: ifne          29\n+         5: getfield      #160                // Field queue:Ljava/util/Queue;\n+         8: invokeinterface #230,  1          // InterfaceMethod java/util/Queue.isEmpty:()Z\n+        13: ifne          351\n         16: aload_0\n-        17: getfield      #42                 // Field queue:Ljava/util/Queue;\n-        20: invokeinterface #63,  1           // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;\n-        25: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+        17: getfield      #160                // Field queue:Ljava/util/Queue;\n+        20: invokeinterface #235,  1          // InterfaceMethod java/util/Queue.remove:()Ljava/lang/Object;\n+        25: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n         28: areturn\n-        29: aload_1\n-        30: ifnonnull     358\n-        33: aload_0\n-        34: getfield      #12                 // Field hasHitEOF:Z\n-        37: ifeq          42\n-        40: aconst_null\n-        41: areturn\n+        29: aload_0\n+        30: getfield      #70                 // Field hasHitEOF:Z\n+        33: ifeq          84\n+        36: aconst_null\n+        37: areturn\n+        38: aload_0\n+        39: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n         42: aload_0\n-        43: getfield      #59                 // Field readIdx:I\n-        46: aload_0\n-        47: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        50: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        53: if_icmpge     102\n-        56: aload_0\n-        57: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        60: aload_0\n-        61: dup\n-        62: getfield      #59                 // Field readIdx:I\n-        65: dup_x1\n-        66: iconst_1\n-        67: iadd\n-        68: putfield      #59                 // Field readIdx:I\n-        71: invokevirtual #65                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n-        74: ifne          42\n-        77: aload_0\n-        78: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        81: ldc2_w        #51                 // long 1024l\n-        84: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-        87: ldc2_w        #55                 // long -1l\n-        90: lcmp\n-        91: ifne          42\n-        94: new           #57                 // class java/io/EOFException\n-        97: dup\n-        98: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n-       101: athrow\n-       102: aload_0\n-       103: iconst_0\n-       104: putfield      #59                 // Field readIdx:I\n-       107: aload_0\n-       108: aload_0\n-       109: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       112: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-       115: putfield      #66                 // Field filepos:J\n-       118: aload_0\n-       119: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       122: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-       125: astore_3\n-       126: aload_3\n-       127: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-       130: ifne          141\n-       133: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n-       136: dup\n-       137: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-       140: athrow\n-       141: aload_0\n-       142: aload_3\n-       143: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       146: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       149: getstatic     #67                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-       152: aload_0\n-       153: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       156: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-       159: if_acmpne     249\n+        43: dup\n+        44: getfield      #219                // Field readIdx:I\n+        47: dup_x1\n+        48: iconst_1\n+        49: iadd\n+        50: putfield      #219                // Field readIdx:I\n+        53: invokevirtual #239                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+        56: ifne          84\n+        59: aload_0\n+        60: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        63: ldc2_w        #205                // long 1024l\n+        66: invokevirtual #210                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+        69: ldc2_w        #214                // long -1l\n+        72: lcmp\n+        73: ifne          84\n+        76: new           #216                // class java/io/EOFException\n+        79: dup\n+        80: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n+        83: athrow\n+        84: aload_0\n+        85: getfield      #219                // Field readIdx:I\n+        88: aload_0\n+        89: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        92: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        95: if_icmplt     38\n+        98: aload_0\n+        99: iconst_0\n+       100: putfield      #219                // Field readIdx:I\n+       103: aload_0\n+       104: aload_0\n+       105: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       108: invokevirtual #181                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+       111: putfield      #243                // Field filepos:J\n+       114: aload_0\n+       115: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       118: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       121: astore_3\n+       122: aload_3\n+       123: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       126: ifne          137\n+       129: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       132: dup\n+       133: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       136: athrow\n+       137: aload_0\n+       138: aload_3\n+       139: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       142: putfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       145: goto          232\n+       148: aload_0\n+       149: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       152: ldc2_w        #205                // long 1024l\n+       155: aload_0\n+       156: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       159: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n        162: aload_0\n-       163: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       166: ldc2_w        #51                 // long 1024l\n-       169: aload_0\n-       170: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       173: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-       176: aload_0\n-       177: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       180: invokevirtual #68                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n-       183: isub\n-       184: i2l\n-       185: lmul\n-       186: invokevirtual #54                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n-       189: ldc2_w        #55                 // long -1l\n-       192: lcmp\n-       193: ifne          204\n-       196: new           #57                 // class java/io/EOFException\n-       199: dup\n-       200: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n-       203: athrow\n-       204: aload_0\n-       205: aload_0\n-       206: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       209: invokevirtual #44                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n-       212: putfield      #66                 // Field filepos:J\n-       215: aload_0\n-       216: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       219: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-       222: astore_3\n-       223: aload_3\n-       224: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-       227: ifne          238\n-       230: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n-       233: dup\n-       234: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-       237: athrow\n-       238: aload_0\n-       239: aload_3\n-       240: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       243: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       246: goto          149\n-       249: getstatic     #69                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-       252: aload_0\n-       253: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       256: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-       259: if_acmpne     269\n-       262: aload_0\n-       263: iconst_1\n-       264: putfield      #12                 // Field hasHitEOF:Z\n-       267: aconst_null\n-       268: areturn\n-       269: aload_0\n-       270: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       273: astore_1\n-       274: aload_1\n-       275: invokevirtual #70                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n-       278: ifeq          313\n-       281: aload_0\n-       282: aload_0\n-       283: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       286: invokespecial #71                 // Method readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n-       289: aload_0\n-       290: lconst_0\n-       291: putfield      #72                 // Field entryOffset:J\n-       294: aload_0\n-       295: lconst_0\n-       296: putfield      #73                 // Field entrySize:J\n-       299: aload_0\n-       300: aload_0\n-       301: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       304: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-       307: putfield      #59                 // Field readIdx:I\n-       310: goto          334\n-       313: aload_0\n-       314: lconst_0\n-       315: putfield      #72                 // Field entryOffset:J\n-       318: aload_0\n-       319: aload_0\n-       320: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       323: invokevirtual #74                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n-       326: putfield      #73                 // Field entrySize:J\n-       329: aload_0\n-       330: iconst_0\n-       331: putfield      #59                 // Field readIdx:I\n-       334: aload_0\n-       335: aload_0\n-       336: getfield      #4                  // Field readBuf:[B\n-       339: arraylength\n-       340: putfield      #75                 // Field recordOffset:I\n-       343: aload_0\n-       344: aload_1\n-       345: invokespecial #76                 // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-       348: astore_2\n-       349: aload_2\n-       350: ifnonnull     355\n-       353: aconst_null\n-       354: astore_1\n-       355: goto          29\n-       358: aload_1\n-       359: aload_2\n-       360: invokevirtual #77                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n-       363: aload_1\n-       364: aload_0\n-       365: getfield      #7                  // Field names:Ljava/util/Map;\n-       368: aload_1\n-       369: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       372: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       375: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       380: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       383: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-       386: invokevirtual #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n-       389: aload_1\n-       390: aload_0\n-       391: getfield      #66                 // Field filepos:J\n-       394: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n-       397: aload_1\n-       398: areturn\n+       163: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       166: invokevirtual #245                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderHoles:()I\n+       169: isub\n+       170: i2l\n+       171: lmul\n+       172: invokevirtual #210                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.skip:(J)J\n+       175: ldc2_w        #214                // long -1l\n+       178: lcmp\n+       179: ifne          190\n+       182: new           #216                // class java/io/EOFException\n+       185: dup\n+       186: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n+       189: athrow\n+       190: aload_0\n+       191: aload_0\n+       192: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       195: invokevirtual #181                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.getBytesRead:()J\n+       198: putfield      #243                // Field filepos:J\n+       201: aload_0\n+       202: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       205: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       208: astore_3\n+       209: aload_3\n+       210: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       213: ifne          224\n+       216: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       219: dup\n+       220: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       223: athrow\n+       224: aload_0\n+       225: aload_3\n+       226: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       229: putfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       232: getstatic     #248                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       235: aload_0\n+       236: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       239: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       242: if_acmpeq     148\n+       245: getstatic     #251                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.END:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       248: aload_0\n+       249: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       252: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       255: if_acmpne     265\n+       258: aload_0\n+       259: iconst_1\n+       260: putfield      #70                 // Field hasHitEOF:Z\n+       263: aconst_null\n+       264: areturn\n+       265: aload_0\n+       266: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       269: astore_1\n+       270: aload_1\n+       271: invokevirtual #254                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isDirectory:()Z\n+       274: ifeq          309\n+       277: aload_0\n+       278: aload_0\n+       279: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       282: invokespecial #257                // Method readDirectoryEntry:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n+       285: aload_0\n+       286: lconst_0\n+       287: putfield      #261                // Field entryOffset:J\n+       290: aload_0\n+       291: lconst_0\n+       292: putfield      #263                // Field entrySize:J\n+       295: aload_0\n+       296: aload_0\n+       297: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       300: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+       303: putfield      #219                // Field readIdx:I\n+       306: goto          330\n+       309: aload_0\n+       310: lconst_0\n+       311: putfield      #261                // Field entryOffset:J\n+       314: aload_0\n+       315: aload_0\n+       316: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       319: invokevirtual #265                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+       322: putfield      #263                // Field entrySize:J\n+       325: aload_0\n+       326: iconst_0\n+       327: putfield      #219                // Field readIdx:I\n+       330: aload_0\n+       331: aload_0\n+       332: getfield      #55                 // Field readBuf:[B\n+       335: arraylength\n+       336: putfield      #268                // Field recordOffset:I\n+       339: aload_0\n+       340: aload_1\n+       341: invokespecial #270                // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+       344: astore_2\n+       345: aload_2\n+       346: ifnonnull     351\n+       349: aconst_null\n+       350: astore_1\n+       351: aload_1\n+       352: ifnull        29\n+       355: aload_1\n+       356: aload_2\n+       357: invokevirtual #274                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+       360: aload_1\n+       361: aload_0\n+       362: getfield      #60                 // Field names:Ljava/util/Map;\n+       365: aload_1\n+       366: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       369: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       372: invokeinterface #281,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       377: checkcast     #131                // class org/apache/commons/compress/archivers/dump/Dirent\n+       380: invokevirtual #285                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+       383: invokevirtual #288                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+       386: aload_1\n+       387: aload_0\n+       388: getfield      #243                // Field filepos:J\n+       391: invokevirtual #291                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setOffset:(J)V\n+       394: aload_1\n+       395: areturn\n       LineNumberTable:\n         line 230: 0\n         line 231: 2\n         line 234: 4\n         line 235: 16\n-        line 238: 29\n-        line 239: 33\n-        line 240: 40\n-        line 247: 42\n-        line 248: 56\n-        line 249: 84\n-        line 250: 94\n-        line 254: 102\n-        line 255: 107\n-        line 257: 118\n-        line 259: 126\n-        line 260: 133\n-        line 263: 141\n-        line 266: 149\n-        line 267: 162\n-        line 268: 173\n-        line 269: 180\n-        line 267: 186\n-        line 270: 196\n-        line 273: 204\n-        line 274: 215\n-        line 276: 223\n-        line 277: 230\n-        line 280: 238\n-        line 284: 249\n-        line 285: 262\n-        line 287: 267\n-        line 290: 269\n-        line 292: 274\n-        line 293: 281\n-        line 296: 289\n-        line 297: 294\n-        line 298: 299\n-        line 300: 313\n-        line 301: 318\n-        line 302: 329\n-        line 305: 334\n-        line 307: 343\n-        line 309: 349\n-        line 310: 353\n-        line 312: 355\n-        line 314: 358\n-        line 315: 363\n-        line 316: 389\n-        line 318: 397\n+        line 239: 29\n+        line 240: 36\n+        line 248: 38\n+        line 249: 59\n+        line 250: 76\n+        line 247: 84\n+        line 254: 98\n+        line 255: 103\n+        line 257: 114\n+        line 259: 122\n+        line 260: 129\n+        line 263: 137\n+        line 266: 145\n+        line 267: 148\n+        line 268: 155\n+        line 269: 162\n+        line 268: 169\n+        line 267: 172\n+        line 269: 175\n+        line 267: 178\n+        line 270: 182\n+        line 273: 190\n+        line 274: 201\n+        line 276: 209\n+        line 277: 216\n+        line 280: 224\n+        line 266: 232\n+        line 284: 245\n+        line 285: 258\n+        line 287: 263\n+        line 290: 265\n+        line 292: 270\n+        line 293: 277\n+        line 296: 285\n+        line 297: 290\n+        line 298: 295\n+        line 299: 306\n+        line 300: 309\n+        line 301: 314\n+        line 302: 325\n+        line 305: 330\n+        line 307: 339\n+        line 309: 345\n+        line 310: 349\n+        line 238: 351\n+        line 314: 355\n+        line 315: 360\n+        line 316: 386\n+        line 318: 394\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          126     229     3 headerBytes   [B\n-            0     399     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-            2     397     1 entry   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-            4     395     2  path   Ljava/lang/String;\n-      StackMapTable: number_of_entries = 13\n+            0     396     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n+            2     394     1 entry   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+            4     392     2  path   Ljava/lang/String;\n+          122     229     3 headerBytes   [B\n+      StackMapTable: number_of_entries = 12\n         frame_type = 253 /* append */\n           offset_delta = 29\n           locals = [ class org/apache/commons/compress/archivers/dump/DumpArchiveEntry, class java/lang/String ]\n-        frame_type = 12 /* same */\n-        frame_type = 59 /* same */\n+        frame_type = 8 /* same */\n+        frame_type = 45 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 38\n+          offset_delta = 52\n           locals = [ class \"[B\" ]\n-        frame_type = 7 /* same */\n-        frame_type = 54 /* same */\n-        frame_type = 33 /* same */\n         frame_type = 10 /* same */\n-        frame_type = 19 /* same */\n+        frame_type = 41 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 7 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 43 /* same */\n         frame_type = 20 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 20\n-        frame_type = 2 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void readDirectoryEntry(org.apache.commons.compress.archivers.dump.DumpArchiveEntry) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=15, args_size=2\n          0: aload_1\n-         1: invokevirtual #74                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n+         1: invokevirtual #265                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getEntrySize:()J\n          4: lstore_2\n          5: iconst_1\n          6: istore        4\n-         8: iload         4\n-        10: ifne          23\n-        13: getstatic     #67                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-        16: aload_1\n-        17: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-        20: if_acmpne     525\n-        23: iload         4\n-        25: ifne          36\n-        28: aload_0\n-        29: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        32: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n-        35: pop\n-        36: aload_0\n-        37: getfield      #7                  // Field names:Ljava/util/Map;\n-        40: aload_1\n-        41: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-        44: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        47: invokeinterface #83,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-        52: ifne          83\n-        55: getstatic     #84                 // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-        58: aload_1\n-        59: invokevirtual #50                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n-        62: if_acmpne     83\n-        65: aload_0\n-        66: getfield      #8                  // Field pending:Ljava/util/Map;\n-        69: aload_1\n-        70: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-        73: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        76: aload_1\n-        77: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        82: pop\n-        83: sipush        1024\n-        86: aload_1\n-        87: invokevirtual #53                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n-        90: imul\n-        91: istore        5\n-        93: aload_0\n-        94: getfield      #26                 // Field blockBuffer:[B\n-        97: arraylength\n-        98: iload         5\n-       100: if_icmpge     111\n+         8: goto          514\n+        11: iload         4\n+        13: ifne          24\n+        16: aload_0\n+        17: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        20: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+        23: pop\n+        24: aload_0\n+        25: getfield      #60                 // Field names:Ljava/util/Map;\n+        28: aload_1\n+        29: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        32: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        35: invokeinterface #297,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        40: ifne          71\n+        43: getstatic     #301                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.INODE:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        46: aload_1\n+        47: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+        50: if_acmpne     71\n+        53: aload_0\n+        54: getfield      #62                 // Field pending:Ljava/util/Map;\n+        57: aload_1\n+        58: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        61: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        64: aload_1\n+        65: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        70: pop\n+        71: sipush        1024\n+        74: aload_1\n+        75: invokevirtual #207                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderCount:()I\n+        78: imul\n+        79: istore        5\n+        81: aload_0\n+        82: getfield      #114                // Field blockBuffer:[B\n+        85: arraylength\n+        86: iload         5\n+        88: if_icmpge     99\n+        91: aload_0\n+        92: iload         5\n+        94: newarray       byte\n+        96: putfield      #114                // Field blockBuffer:[B\n+        99: aload_0\n+       100: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n        103: aload_0\n-       104: iload         5\n-       106: newarray       byte\n-       108: putfield      #26                 // Field blockBuffer:[B\n-       111: aload_0\n-       112: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       115: aload_0\n-       116: getfield      #26                 // Field blockBuffer:[B\n-       119: iconst_0\n-       120: iload         5\n-       122: invokevirtual #85                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-       125: iload         5\n-       127: if_icmpeq     138\n-       130: new           #57                 // class java/io/EOFException\n-       133: dup\n-       134: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n-       137: athrow\n-       138: iconst_0\n-       139: istore        6\n-       141: iconst_0\n-       142: istore        7\n-       144: iload         7\n-       146: iload         5\n-       148: bipush        8\n-       150: isub\n-       151: if_icmpge     482\n-       154: iload         7\n-       156: i2l\n-       157: lload_2\n-       158: ldc2_w        #86                 // long 8l\n-       161: lsub\n-       162: lcmp\n-       163: ifge          482\n-       166: aload_0\n-       167: getfield      #26                 // Field blockBuffer:[B\n-       170: iload         7\n-       172: invokestatic  #88                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n-       175: istore        8\n-       177: aload_0\n-       178: getfield      #26                 // Field blockBuffer:[B\n-       181: iload         7\n-       183: iconst_4\n-       184: iadd\n-       185: invokestatic  #89                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n-       188: istore        6\n-       190: aload_0\n-       191: getfield      #26                 // Field blockBuffer:[B\n-       194: iload         7\n-       196: bipush        6\n-       198: iadd\n-       199: baload\n-       200: istore        9\n-       202: aload_0\n-       203: getfield      #15                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-       206: aload_0\n-       207: getfield      #26                 // Field blockBuffer:[B\n-       210: iload         7\n-       212: bipush        8\n-       214: iadd\n-       215: aload_0\n-       216: getfield      #26                 // Field blockBuffer:[B\n-       219: iload         7\n-       221: bipush        7\n-       223: iadd\n-       224: baload\n-       225: invokestatic  #90                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n-       228: astore        10\n-       230: ldc           #34                 // String .\n-       232: aload         10\n-       234: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       237: ifne          472\n-       240: ldc           #92                 // String ..\n-       242: aload         10\n-       244: invokevirtual #91                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-       247: ifeq          253\n-       250: goto          472\n-       253: new           #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       256: dup\n-       257: iload         8\n-       259: aload_1\n-       260: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       263: iload         9\n-       265: aload         10\n-       267: invokespecial #35                 // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n-       270: astore        11\n-       272: aload_0\n-       273: getfield      #7                  // Field names:Ljava/util/Map;\n-       276: iload         8\n-       278: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       281: aload         11\n-       283: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-       288: pop\n-       289: aload_0\n-       290: getfield      #8                  // Field pending:Ljava/util/Map;\n-       293: invokeinterface #93,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-       298: invokeinterface #94,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n-       303: astore        12\n-       305: aload         12\n-       307: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       312: ifeq          418\n-       315: aload         12\n-       317: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       322: checkcast     #97                 // class java/util/Map$Entry\n-       325: astore        13\n-       327: aload_0\n-       328: aload         13\n-       330: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       335: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       338: invokespecial #76                 // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n-       341: astore        14\n-       343: aload         14\n-       345: ifnull        415\n-       348: aload         13\n-       350: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       355: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       358: aload         14\n-       360: invokevirtual #77                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n-       363: aload         13\n-       365: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       370: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       373: aload_0\n-       374: getfield      #7                  // Field names:Ljava/util/Map;\n-       377: aload         13\n-       379: invokeinterface #99,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-       384: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       389: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n-       392: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-       395: invokevirtual #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n-       398: aload_0\n-       399: getfield      #42                 // Field queue:Ljava/util/Queue;\n-       402: aload         13\n-       404: invokeinterface #98,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       409: invokeinterface #100,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n-       414: pop\n-       415: goto          305\n-       418: aload_0\n-       419: getfield      #42                 // Field queue:Ljava/util/Queue;\n-       422: invokeinterface #101,  1          // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n-       427: astore        12\n-       429: aload         12\n-       431: invokeinterface #95,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       436: ifeq          472\n-       439: aload         12\n-       441: invokeinterface #96,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       446: checkcast     #64                 // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n-       449: astore        13\n-       451: aload_0\n-       452: getfield      #8                  // Field pending:Ljava/util/Map;\n-       455: aload         13\n-       457: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       460: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-       463: invokeinterface #102,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n-       468: pop\n-       469: goto          429\n-       472: iload         7\n-       474: iload         6\n-       476: iadd\n-       477: istore        7\n-       479: goto          144\n-       482: aload_0\n-       483: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       486: invokevirtual #103                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n-       489: astore        7\n-       491: aload         7\n-       493: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n-       496: ifne          507\n-       499: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n-       502: dup\n-       503: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n-       506: athrow\n-       507: aload         7\n-       509: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       512: astore_1\n-       513: iconst_0\n-       514: istore        4\n-       516: lload_2\n-       517: ldc2_w        #51                 // long 1024l\n-       520: lsub\n-       521: lstore_2\n-       522: goto          8\n-       525: return\n+       104: getfield      #114                // Field blockBuffer:[B\n+       107: iconst_0\n+       108: iload         5\n+       110: invokevirtual #304                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+       113: iload         5\n+       115: if_icmpeq     126\n+       118: new           #216                // class java/io/EOFException\n+       121: dup\n+       122: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n+       125: athrow\n+       126: iconst_0\n+       127: istore        6\n+       129: iconst_0\n+       130: istore        7\n+       132: goto          452\n+       135: aload_0\n+       136: getfield      #114                // Field blockBuffer:[B\n+       139: iload         7\n+       141: invokestatic  #308                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+       144: istore        8\n+       146: aload_0\n+       147: getfield      #114                // Field blockBuffer:[B\n+       150: iload         7\n+       152: iconst_4\n+       153: iadd\n+       154: invokestatic  #312                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert16:([BI)I\n+       157: istore        6\n+       159: aload_0\n+       160: getfield      #114                // Field blockBuffer:[B\n+       163: iload         7\n+       165: bipush        6\n+       167: iadd\n+       168: baload\n+       169: istore        9\n+       171: aload_0\n+       172: getfield      #80                 // Field zipEncoding:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+       175: aload_0\n+       176: getfield      #114                // Field blockBuffer:[B\n+       179: iload         7\n+       181: bipush        8\n+       183: iadd\n+       184: aload_0\n+       185: getfield      #114                // Field blockBuffer:[B\n+       188: iload         7\n+       190: bipush        7\n+       192: iadd\n+       193: baload\n+       194: invokestatic  #315                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.decode:(Lorg/apache/commons/compress/archivers/zip/ZipEncoding;[BII)Ljava/lang/String;\n+       197: astore        10\n+       199: ldc           #133                // String .\n+       201: aload         10\n+       203: invokevirtual #319                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       206: ifne          445\n+       209: ldc_w         #322                // String ..\n+       212: aload         10\n+       214: invokevirtual #319                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       217: ifeq          223\n+       220: goto          445\n+       223: new           #131                // class org/apache/commons/compress/archivers/dump/Dirent\n+       226: dup\n+       227: iload         8\n+       229: aload_1\n+       230: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       233: iload         9\n+       235: aload         10\n+       237: invokespecial #135                // Method org/apache/commons/compress/archivers/dump/Dirent.\"<init>\":(IIILjava/lang/String;)V\n+       240: astore        11\n+       242: aload_0\n+       243: getfield      #60                 // Field names:Ljava/util/Map;\n+       246: iload         8\n+       248: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       251: aload         11\n+       253: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       258: pop\n+       259: aload_0\n+       260: getfield      #62                 // Field pending:Ljava/util/Map;\n+       263: invokeinterface #324,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+       268: invokeinterface #328,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       273: astore        13\n+       275: goto          381\n+       278: aload         13\n+       280: invokeinterface #334,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       285: checkcast     #339                // class java/util/Map$Entry\n+       288: astore        12\n+       290: aload_0\n+       291: aload         12\n+       293: invokeinterface #341,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       298: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       301: invokespecial #270                // Method getPath:(Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n+       304: astore        14\n+       306: aload         14\n+       308: ifnull        381\n+       311: aload         12\n+       313: invokeinterface #341,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       318: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       321: aload         14\n+       323: invokevirtual #274                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setName:(Ljava/lang/String;)V\n+       326: aload         12\n+       328: invokeinterface #341,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       333: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       336: aload_0\n+       337: getfield      #60                 // Field names:Ljava/util/Map;\n+       340: aload         12\n+       342: invokeinterface #344,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+       347: invokeinterface #281,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       352: checkcast     #131                // class org/apache/commons/compress/archivers/dump/Dirent\n+       355: invokevirtual #285                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+       358: invokevirtual #288                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.setSimpleName:(Ljava/lang/String;)V\n+       361: aload_0\n+       362: getfield      #160                // Field queue:Ljava/util/Queue;\n+       365: aload         12\n+       367: invokeinterface #341,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       372: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       375: invokeinterface #347,  2          // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n+       380: pop\n+       381: aload         13\n+       383: invokeinterface #350,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       388: ifne          278\n+       391: aload_0\n+       392: getfield      #160                // Field queue:Ljava/util/Queue;\n+       395: invokeinterface #353,  1          // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n+       400: astore        13\n+       402: goto          435\n+       405: aload         13\n+       407: invokeinterface #334,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       412: checkcast     #188                // class org/apache/commons/compress/archivers/dump/DumpArchiveEntry\n+       415: astore        12\n+       417: aload_0\n+       418: getfield      #62                 // Field pending:Ljava/util/Map;\n+       421: aload         12\n+       423: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       426: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       429: invokeinterface #354,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;\n+       434: pop\n+       435: aload         13\n+       437: invokeinterface #350,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       442: ifne          405\n+       445: iload         7\n+       447: iload         6\n+       449: iadd\n+       450: istore        7\n+       452: iload         7\n+       454: iload         5\n+       456: bipush        8\n+       458: isub\n+       459: if_icmpge     474\n+       462: iload         7\n+       464: i2l\n+       465: lload_2\n+       466: ldc2_w        #356                // long 8l\n+       469: lsub\n+       470: lcmp\n+       471: iflt          135\n+       474: aload_0\n+       475: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       478: invokevirtual #358                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.peek:()[B\n+       481: astore        7\n+       483: aload         7\n+       485: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       488: ifne          499\n+       491: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       494: dup\n+       495: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       498: athrow\n+       499: aload         7\n+       501: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       504: astore_1\n+       505: iconst_0\n+       506: istore        4\n+       508: lload_2\n+       509: ldc2_w        #205                // long 1024l\n+       512: lsub\n+       513: lstore_2\n+       514: iload         4\n+       516: ifne          11\n+       519: getstatic     #248                // Field org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE.ADDR:Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       522: aload_1\n+       523: invokevirtual #201                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getHeaderType:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE;\n+       526: if_acmpeq     11\n+       529: return\n       LineNumberTable:\n         line 326: 0\n         line 327: 5\n         line 329: 8\n-        line 330: 17\n-        line 332: 23\n-        line 333: 28\n-        line 336: 36\n-        line 337: 59\n-        line 338: 65\n-        line 341: 83\n-        line 343: 93\n-        line 344: 103\n-        line 347: 111\n-        line 348: 130\n-        line 351: 138\n-        line 353: 141\n-        line 355: 166\n-        line 356: 177\n-        line 358: 190\n-        line 360: 202\n-        line 362: 230\n-        line 364: 250\n-        line 367: 253\n-        line 376: 272\n-        line 379: 289\n-        line 380: 327\n-        line 382: 343\n-        line 383: 348\n-        line 384: 363\n-        line 385: 379\n-        line 386: 398\n-        line 388: 415\n-        line 392: 418\n-        line 393: 451\n-        line 394: 469\n-        line 354: 472\n-        line 397: 482\n-        line 399: 491\n-        line 400: 499\n-        line 403: 507\n-        line 404: 513\n-        line 405: 516\n-        line 406: 522\n-        line 407: 525\n+        line 332: 11\n+        line 333: 16\n+        line 336: 24\n+        line 337: 43\n+        line 338: 53\n+        line 341: 71\n+        line 343: 81\n+        line 344: 91\n+        line 347: 99\n+        line 348: 118\n+        line 351: 126\n+        line 353: 129\n+        line 355: 135\n+        line 356: 146\n+        line 358: 159\n+        line 360: 171\n+        line 362: 199\n+        line 364: 220\n+        line 367: 223\n+        line 376: 242\n+        line 379: 259\n+        line 380: 290\n+        line 382: 306\n+        line 383: 311\n+        line 384: 326\n+        line 385: 336\n+        line 386: 361\n+        line 379: 381\n+        line 392: 391\n+        line 393: 417\n+        line 392: 435\n+        line 354: 445\n+        line 353: 452\n+        line 397: 474\n+        line 399: 483\n+        line 400: 491\n+        line 403: 499\n+        line 404: 505\n+        line 405: 508\n+        line 329: 514\n+        line 330: 519\n+        line 407: 529\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          343      72    14  path   Ljava/lang/String;\n-          327      88    13     e   Ljava/util/Map$Entry;\n-          451      18    13     e   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-          177     295     8   ino   I\n-          202     270     9  type   B\n-          230     242    10  name   Ljava/lang/String;\n-          272     200    11     d   Lorg/apache/commons/compress/archivers/dump/Dirent;\n-          144     338     7     i   I\n-           93     429     5 datalen   I\n-          141     381     6 reclen   I\n-          491      31     7 peekBytes   [B\n-            0     526     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-            0     526     1 entry   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-            5     521     2  size   J\n-            8     518     4 first   Z\n+            0     530     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n+            0     530     1 entry   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+            5     525     2  size   J\n+            8     522     4 first   Z\n+           81     433     5 datalen   I\n+          129     385     6 reclen   I\n+          132     342     7     i   I\n+          146     299     8   ino   I\n+          171     274     9  type   B\n+          199     246    10  name   Ljava/lang/String;\n+          242     203    11     d   Lorg/apache/commons/compress/archivers/dump/Dirent;\n+          290      91    12     e   Ljava/util/Map$Entry;\n+          306      75    14  path   Ljava/lang/String;\n+          417      18    12     e   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+          483      31     7 peekBytes   [B\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          327      88    13     e   Ljava/util/Map$Entry<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n+          290      91    12     e   Ljava/util/Map$Entry<Ljava/lang/Integer;Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;>;\n       StackMapTable: number_of_entries = 16\n         frame_type = 253 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ long, int ]\n-        frame_type = 14 /* same */\n         frame_type = 12 /* same */\n         frame_type = 46 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ int ]\n         frame_type = 26 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 5\n+          offset_delta = 8\n           locals = [ int, int ]\n         frame_type = 254 /* append */\n-          offset_delta = 108\n+          offset_delta = 87\n           locals = [ int, int, class java/lang/String ]\n-        frame_type = 253 /* append */\n-          offset_delta = 51\n-          locals = [ class org/apache/commons/compress/archivers/dump/Dirent, class java/util/Iterator ]\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 54\n+          locals = [ class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream, class org/apache/commons/compress/archivers/dump/DumpArchiveEntry, long, int, int, int, int, int, int, class java/lang/String, class org/apache/commons/compress/archivers/dump/Dirent, top, class java/util/Iterator ]\n+          stack = []\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 109\n-        frame_type = 250 /* chop */\n-          offset_delta = 2\n-        frame_type = 252 /* append */\n-          offset_delta = 10\n-          locals = [ class java/util/Iterator ]\n+          offset_delta = 102\n+        frame_type = 23 /* same */\n+        frame_type = 29 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 42\n+          offset_delta = 9\n           locals = [ class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream, class org/apache/commons/compress/archivers/dump/DumpArchiveEntry, long, int, int, int, int ]\n           stack = []\n+        frame_type = 6 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 9\n+          offset_delta = 21\n         frame_type = 252 /* append */\n           offset_delta = 24\n           locals = [ class \"[B\" ]\n         frame_type = 248 /* chop */\n-          offset_delta = 17\n-    Exceptions:\n-      throws java.io.IOException\n+          offset_delta = 14\n \n   private java.lang.String getPath(org.apache.commons.compress.archivers.dump.DumpArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n-         0: new           #104                // class java/util/Stack\n+         0: new           #376                // class java/util/Stack\n          3: dup\n-         4: invokespecial #105                // Method java/util/Stack.\"<init>\":()V\n+         4: invokespecial #378                // Method java/util/Stack.\"<init>\":()V\n          7: astore_2\n          8: aconst_null\n          9: astore_3\n         10: aload_1\n-        11: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+        11: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n         14: istore        4\n         16: aload_0\n-        17: getfield      #7                  // Field names:Ljava/util/Map;\n+        17: getfield      #60                 // Field names:Ljava/util/Map;\n         20: iload         4\n-        22: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        25: invokeinterface #83,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        22: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        25: invokeinterface #297,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         30: ifne          40\n         33: aload_2\n-        34: invokevirtual #106                // Method java/util/Stack.clear:()V\n+        34: invokevirtual #379                // Method java/util/Stack.clear:()V\n         37: goto          90\n         40: aload_0\n-        41: getfield      #7                  // Field names:Ljava/util/Map;\n+        41: getfield      #60                 // Field names:Ljava/util/Map;\n         44: iload         4\n-        46: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        49: invokeinterface #79,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        54: checkcast     #33                 // class org/apache/commons/compress/archivers/dump/Dirent\n+        46: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        49: invokeinterface #281,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        54: checkcast     #131                // class org/apache/commons/compress/archivers/dump/Dirent\n         57: astore_3\n         58: aload_2\n         59: aload_3\n-        60: invokevirtual #80                 // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n-        63: invokevirtual #107                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n+        60: invokevirtual #285                // Method org/apache/commons/compress/archivers/dump/Dirent.getName:()Ljava/lang/String;\n+        63: invokevirtual #382                // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;\n         66: pop\n         67: aload_3\n-        68: invokevirtual #108                // Method org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n+        68: invokevirtual #385                // Method org/apache/commons/compress/archivers/dump/Dirent.getIno:()I\n         71: aload_3\n-        72: invokevirtual #109                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+        72: invokevirtual #386                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n         75: if_icmpne     81\n         78: goto          90\n         81: aload_3\n-        82: invokevirtual #109                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n+        82: invokevirtual #386                // Method org/apache/commons/compress/archivers/dump/Dirent.getParentIno:()I\n         85: istore        4\n         87: goto          16\n         90: aload_2\n-        91: invokevirtual #110                // Method java/util/Stack.isEmpty:()Z\n+        91: invokevirtual #389                // Method java/util/Stack.isEmpty:()Z\n         94: ifeq          117\n         97: aload_0\n-        98: getfield      #8                  // Field pending:Ljava/util/Map;\n+        98: getfield      #62                 // Field pending:Ljava/util/Map;\n        101: aload_1\n-       102: invokevirtual #78                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n-       105: invokestatic  #36                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+       102: invokevirtual #278                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.getIno:()I\n+       105: invokestatic  #138                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n        108: aload_1\n-       109: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       109: invokeinterface #144,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        114: pop\n        115: aconst_null\n        116: areturn\n-       117: new           #111                // class java/lang/StringBuilder\n+       117: new           #390                // class java/lang/StringBuilder\n        120: dup\n        121: aload_2\n-       122: invokevirtual #112                // Method java/util/Stack.pop:()Ljava/lang/Object;\n-       125: checkcast     #113                // class java/lang/String\n-       128: invokespecial #114                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       122: invokevirtual #392                // Method java/util/Stack.pop:()Ljava/lang/Object;\n+       125: checkcast     #170                // class java/lang/String\n+       128: invokespecial #395                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n        131: astore        4\n-       133: aload_2\n-       134: invokevirtual #110                // Method java/util/Stack.isEmpty:()Z\n-       137: ifne          164\n-       140: aload         4\n-       142: bipush        47\n-       144: invokevirtual #115                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       147: pop\n-       148: aload         4\n-       150: aload_2\n-       151: invokevirtual #112                // Method java/util/Stack.pop:()Ljava/lang/Object;\n-       154: checkcast     #113                // class java/lang/String\n-       157: invokevirtual #116                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       160: pop\n-       161: goto          133\n+       133: goto          157\n+       136: aload         4\n+       138: bipush        47\n+       140: invokevirtual #397                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       143: pop\n+       144: aload         4\n+       146: aload_2\n+       147: invokevirtual #392                // Method java/util/Stack.pop:()Ljava/lang/Object;\n+       150: checkcast     #170                // class java/lang/String\n+       153: invokevirtual #401                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       156: pop\n+       157: aload_2\n+       158: invokevirtual #389                // Method java/util/Stack.isEmpty:()Z\n+       161: ifeq          136\n        164: aload         4\n-       166: invokevirtual #117                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       166: invokevirtual #404                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        169: areturn\n       LineNumberTable:\n         line 418: 0\n         line 419: 8\n         line 421: 10\n         line 422: 16\n         line 423: 33\n@@ -1636,228 +1635,232 @@\n         line 431: 78\n         line 421: 81\n         line 436: 90\n         line 437: 97\n         line 439: 115\n         line 443: 117\n         line 445: 133\n-        line 446: 140\n-        line 447: 148\n+        line 446: 136\n+        line 447: 144\n+        line 445: 157\n         line 450: 164\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           16      74     4     i   I\n             0     170     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n             0     170     1 entry   Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n             8     162     2 elements   Ljava/util/Stack;\n            10     160     3 dirent   Lorg/apache/commons/compress/archivers/dump/Dirent;\n+           16      74     4     i   I\n           133      37     4    sb   Ljava/lang/StringBuilder;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             8     162     2 elements   Ljava/util/Stack<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 7\n         frame_type = 254 /* append */\n           offset_delta = 16\n           locals = [ class java/util/Stack, class org/apache/commons/compress/archivers/dump/Dirent, int ]\n         frame_type = 23 /* same */\n         frame_type = 40 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 8\n         frame_type = 26 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 15\n+          offset_delta = 18\n           locals = [ class java/lang/StringBuilder ]\n-        frame_type = 30 /* same */\n+        frame_type = 20 /* same */\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: iconst_0\n          7: istore        4\n          9: aload_0\n-        10: getfield      #12                 // Field hasHitEOF:Z\n+        10: getfield      #70                 // Field hasHitEOF:Z\n         13: ifne          35\n         16: aload_0\n-        17: getfield      #118                // Field isClosed:Z\n+        17: getfield      #413                // Field isClosed:Z\n         20: ifne          35\n         23: aload_0\n-        24: getfield      #72                 // Field entryOffset:J\n+        24: getfield      #261                // Field entryOffset:J\n         27: aload_0\n-        28: getfield      #73                 // Field entrySize:J\n+        28: getfield      #263                // Field entrySize:J\n         31: lcmp\n         32: iflt          37\n         35: iconst_m1\n         36: ireturn\n         37: aload_0\n-        38: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-        41: ifnonnull     54\n-        44: new           #119                // class java/lang/IllegalStateException\n+        38: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+        41: ifnonnull     55\n+        44: new           #415                // class java/lang/IllegalStateException\n         47: dup\n-        48: ldc           #120                // String No current dump entry\n-        50: invokespecial #121                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        53: athrow\n-        54: iload_3\n-        55: i2l\n-        56: aload_0\n-        57: getfield      #72                 // Field entryOffset:J\n-        60: ladd\n-        61: aload_0\n-        62: getfield      #73                 // Field entrySize:J\n-        65: lcmp\n-        66: ifle          80\n-        69: aload_0\n-        70: getfield      #73                 // Field entrySize:J\n-        73: aload_0\n-        74: getfield      #72                 // Field entryOffset:J\n-        77: lsub\n-        78: l2i\n-        79: istore_3\n-        80: iload_3\n-        81: ifle          302\n+        48: ldc_w         #417                // String No current dump entry\n+        51: invokespecial #419                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        54: athrow\n+        55: iload_3\n+        56: i2l\n+        57: aload_0\n+        58: getfield      #261                // Field entryOffset:J\n+        61: ladd\n+        62: aload_0\n+        63: getfield      #263                // Field entrySize:J\n+        66: lcmp\n+        67: ifle          296\n+        70: aload_0\n+        71: getfield      #263                // Field entrySize:J\n+        74: aload_0\n+        75: getfield      #261                // Field entryOffset:J\n+        78: lsub\n+        79: l2i\n+        80: istore_3\n+        81: goto          296\n         84: iload_3\n         85: aload_0\n-        86: getfield      #4                  // Field readBuf:[B\n+        86: getfield      #55                 // Field readBuf:[B\n         89: arraylength\n         90: aload_0\n-        91: getfield      #75                 // Field recordOffset:I\n+        91: getfield      #268                // Field recordOffset:I\n         94: isub\n         95: if_icmple     111\n         98: aload_0\n-        99: getfield      #4                  // Field readBuf:[B\n+        99: getfield      #55                 // Field readBuf:[B\n        102: arraylength\n        103: aload_0\n-       104: getfield      #75                 // Field recordOffset:I\n+       104: getfield      #268                // Field recordOffset:I\n        107: isub\n        108: goto          112\n        111: iload_3\n        112: istore        5\n        114: aload_0\n-       115: getfield      #75                 // Field recordOffset:I\n+       115: getfield      #268                // Field recordOffset:I\n        118: iload         5\n        120: iadd\n        121: aload_0\n-       122: getfield      #4                  // Field readBuf:[B\n+       122: getfield      #55                 // Field readBuf:[B\n        125: arraylength\n        126: if_icmpgt     172\n        129: aload_0\n-       130: getfield      #4                  // Field readBuf:[B\n+       130: getfield      #55                 // Field readBuf:[B\n        133: aload_0\n-       134: getfield      #75                 // Field recordOffset:I\n+       134: getfield      #268                // Field recordOffset:I\n        137: aload_1\n        138: iload_2\n        139: iload         5\n-       141: invokestatic  #122                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       141: invokestatic  #420                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        144: iload         4\n        146: iload         5\n        148: iadd\n        149: istore        4\n        151: aload_0\n        152: dup\n-       153: getfield      #75                 // Field recordOffset:I\n+       153: getfield      #268                // Field recordOffset:I\n        156: iload         5\n        158: iadd\n-       159: putfield      #75                 // Field recordOffset:I\n+       159: putfield      #268                // Field recordOffset:I\n        162: iload_3\n        163: iload         5\n        165: isub\n        166: istore_3\n        167: iload_2\n        168: iload         5\n        170: iadd\n        171: istore_2\n        172: iload_3\n-       173: ifle          299\n+       173: ifle          296\n        176: aload_0\n-       177: getfield      #59                 // Field readIdx:I\n+       177: getfield      #219                // Field readIdx:I\n        180: sipush        512\n        183: if_icmplt     225\n        186: aload_0\n-       187: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-       190: invokevirtual #16                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n+       187: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       190: invokevirtual #82                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.readRecord:()[B\n        193: astore        6\n        195: aload         6\n-       197: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+       197: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n        200: ifne          211\n-       203: new           #45                 // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n+       203: new           #184                // class org/apache/commons/compress/archivers/dump/InvalidFormatException\n        206: dup\n-       207: invokespecial #46                 // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n+       207: invokespecial #186                // Method org/apache/commons/compress/archivers/dump/InvalidFormatException.\"<init>\":()V\n        210: athrow\n        211: aload_0\n        212: aload         6\n-       214: invokestatic  #47                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n-       217: putfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       214: invokestatic  #187                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.parse:([B)Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       217: putfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n        220: aload_0\n        221: iconst_0\n-       222: putfield      #59                 // Field readIdx:I\n+       222: putfield      #219                // Field readIdx:I\n        225: aload_0\n-       226: getfield      #48                 // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+       226: getfield      #193                // Field active:Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n        229: aload_0\n        230: dup\n-       231: getfield      #59                 // Field readIdx:I\n+       231: getfield      #219                // Field readIdx:I\n        234: dup_x1\n        235: iconst_1\n        236: iadd\n-       237: putfield      #59                 // Field readIdx:I\n-       240: invokevirtual #65                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n-       243: ifne          286\n+       237: putfield      #219                // Field readIdx:I\n+       240: invokevirtual #239                // Method org/apache/commons/compress/archivers/dump/DumpArchiveEntry.isSparseRecord:(I)Z\n+       243: ifne          283\n        246: aload_0\n-       247: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+       247: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n        250: aload_0\n-       251: getfield      #4                  // Field readBuf:[B\n+       251: getfield      #55                 // Field readBuf:[B\n        254: iconst_0\n        255: aload_0\n-       256: getfield      #4                  // Field readBuf:[B\n+       256: getfield      #55                 // Field readBuf:[B\n        259: arraylength\n-       260: invokevirtual #85                 // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+       260: invokevirtual #304                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n        263: istore        6\n        265: iload         6\n        267: aload_0\n-       268: getfield      #4                  // Field readBuf:[B\n+       268: getfield      #55                 // Field readBuf:[B\n        271: arraylength\n-       272: if_icmpeq     283\n-       275: new           #57                 // class java/io/EOFException\n+       272: if_icmpeq     291\n+       275: new           #216                // class java/io/EOFException\n        278: dup\n-       279: invokespecial #58                 // Method java/io/EOFException.\"<init>\":()V\n+       279: invokespecial #218                // Method java/io/EOFException.\"<init>\":()V\n        282: athrow\n-       283: goto          294\n-       286: aload_0\n-       287: getfield      #4                  // Field readBuf:[B\n-       290: iconst_0\n-       291: invokestatic  #123                // Method java/util/Arrays.fill:([BB)V\n-       294: aload_0\n-       295: iconst_0\n-       296: putfield      #75                 // Field recordOffset:I\n-       299: goto          80\n-       302: aload_0\n-       303: dup\n-       304: getfield      #72                 // Field entryOffset:J\n-       307: iload         4\n-       309: i2l\n-       310: ladd\n-       311: putfield      #72                 // Field entryOffset:J\n-       314: iload         4\n-       316: ireturn\n+       283: aload_0\n+       284: getfield      #55                 // Field readBuf:[B\n+       287: iconst_0\n+       288: invokestatic  #426                // Method java/util/Arrays.fill:([BB)V\n+       291: aload_0\n+       292: iconst_0\n+       293: putfield      #268                // Field recordOffset:I\n+       296: iload_3\n+       297: ifgt          84\n+       300: aload_0\n+       301: dup\n+       302: getfield      #261                // Field entryOffset:J\n+       305: iload         4\n+       307: i2l\n+       308: ladd\n+       309: putfield      #261                // Field entryOffset:J\n+       312: iload         4\n+       314: ireturn\n       LineNumberTable:\n         line 468: 0\n         line 469: 4\n         line 471: 6\n         line 473: 9\n         line 474: 35\n         line 477: 37\n         line 478: 44\n-        line 481: 54\n-        line 482: 69\n-        line 485: 80\n+        line 481: 55\n+        line 482: 70\n+        line 485: 81\n         line 486: 84\n+        line 487: 98\n+        line 486: 112\n         line 490: 114\n         line 491: 129\n         line 492: 144\n         line 493: 151\n         line 494: 162\n         line 495: 167\n         line 499: 172\n@@ -1867,85 +1870,80 @@\n         line 504: 203\n         line 507: 211\n         line 508: 220\n         line 511: 225\n         line 512: 246\n         line 513: 265\n         line 514: 275\n-        line 516: 283\n-        line 517: 286\n-        line 520: 294\n-        line 522: 299\n-        line 524: 302\n-        line 526: 314\n+        line 517: 283\n+        line 520: 291\n+        line 485: 296\n+        line 524: 300\n+        line 526: 312\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0     315     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n+            0     315     1   buf   [B\n+            0     315     2   off   I\n+            0     315     3   len   I\n+            9     306     4 totalRead   I\n+          114     182     5    sz   I\n           195      30     6 headerBytes   [B\n           265      18     6     r   I\n-          114     185     5    sz   I\n-            0     317     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-            0     317     1   buf   [B\n-            0     317     2   off   I\n-            0     317     3   len   I\n-            9     308     4 totalRead   I\n-      StackMapTable: number_of_entries = 15\n+      StackMapTable: number_of_entries = 13\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ int ]\n         frame_type = 1 /* same */\n-        frame_type = 16 /* same */\n-        frame_type = 25 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 17 /* same */\n+        frame_type = 28 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 59\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 38\n           locals = [ class \"[B\" ]\n         frame_type = 250 /* chop */\n           offset_delta = 13\n         frame_type = 57 /* same */\n-        frame_type = 2 /* same */\n         frame_type = 7 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 4\n-        frame_type = 2 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #118                // Field isClosed:Z\n+         1: getfield      #413                // Field isClosed:Z\n          4: ifne          19\n          7: aload_0\n          8: iconst_1\n-         9: putfield      #118                // Field isClosed:Z\n+         9: putfield      #413                // Field isClosed:Z\n         12: aload_0\n-        13: getfield      #11                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n-        16: invokevirtual #124                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n+        13: getfield      #68                 // Field raw:Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n+        16: invokevirtual #439                // Method org/apache/commons/compress/archivers/dump/TapeInputStream.close:()V\n         19: return\n       LineNumberTable:\n         line 534: 0\n         line 535: 7\n         line 536: 12\n         line 538: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n@@ -1953,56 +1951,55 @@\n          3: if_icmpge     8\n          6: iconst_0\n          7: ireturn\n          8: iload_1\n          9: sipush        1024\n         12: if_icmplt     20\n         15: aload_0\n-        16: invokestatic  #17                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n+        16: invokestatic  #86                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.verify:([B)Z\n         19: ireturn\n-        20: ldc           #125                // int 60012\n-        22: aload_0\n-        23: bipush        24\n-        25: invokestatic  #88                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n-        28: if_icmpne     35\n-        31: iconst_1\n-        32: goto          36\n-        35: iconst_0\n-        36: ireturn\n+        20: ldc_w         #443                // int 60012\n+        23: aload_0\n+        24: bipush        24\n+        26: invokestatic  #308                // Method org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+        29: if_icmpne     34\n+        32: iconst_1\n+        33: ireturn\n+        34: iconst_0\n+        35: ireturn\n       LineNumberTable:\n         line 550: 0\n         line 551: 6\n         line 555: 8\n         line 556: 15\n         line 560: 20\n+        line 561: 24\n+        line 560: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      37     0 buffer   [B\n-            0      37     1 length   I\n-      StackMapTable: number_of_entries = 4\n+            0      36     0 buffer   [B\n+            0      36     1 length   I\n+      StackMapTable: number_of_entries = 3\n         frame_type = 8 /* same */\n         frame_type = 11 /* same */\n-        frame_type = 14 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+        frame_type = 13 /* same */\n \n   public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #61                 // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n+         1: invokevirtual #227                // Method getNextEntry:()Lorg/apache/commons/compress/archivers/dump/DumpArchiveEntry;\n          4: areturn\n       LineNumberTable:\n-        line 51: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/dump/DumpArchiveInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"DumpArchiveInputStream.java\"\n InnerClasses:\n-  #39;                                    // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n-  public static #205= #97 of #284;        // Entry=class java/util/Map$Entry of class java/util/Map\n-  public static final #398= #295 of #3;   // SEGMENT_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  public static #449= #339 of #145;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  public static final #452= #196 of #450; // SEGMENT_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$SEGMENT_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #152;                                   // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream$1\n"}]}
