{"diffoscope-json-version": 1, "source1": "first/EnumElementValueGen.class", "source2": "second/EnumElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,148 +1,145 @@\n-  SHA-256 checksum e9633a791d0576c928275c230d6f50c6762390ebc36f3a71e1a4d98bb24f5c0f\n+  SHA-256 checksum f93096532aa7092f9a1d727522d5e9ee848315a7d36a8c6243dc49d83994ca1d\n   Compiled from \"EnumElementValueGen.java\"\n public class org.apache.bcel.generic.EnumElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #35                         // org/apache/bcel/generic/EnumElementValueGen\n   super_class: #1                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Class              #64           // org/apache/bcel/generic/ElementValueGen\n-    #2 = Methodref          #1.#65        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #3 = Methodref          #1.#66        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-    #4 = Class              #67           // java/lang/IllegalArgumentException\n-    #5 = Class              #68           // java/lang/StringBuilder\n-    #6 = Methodref          #5.#69        // java/lang/StringBuilder.\"<init>\":()V\n-    #7 = String             #70           // Only element values of type enum can be built with this ctor - type specified:\n-    #8 = Methodref          #5.#71        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #5.#72        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #5.#73        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #4.#74        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #35.#75       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n-   #13 = Fieldref           #35.#76       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n-   #14 = Fieldref           #77.#78       // java/lang/System.err:Ljava/io/PrintStream;\n-   #15 = String             #79           // Duplicating value:\n-   #16 = Methodref          #35.#80       // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n-   #17 = String             #81           // :\n-   #18 = Methodref          #35.#82       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n-   #19 = Methodref          #83.#84       // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #20 = Class              #85           // org/apache/bcel/classfile/EnumElementValue\n-   #21 = Methodref          #35.#86       // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #22 = Methodref          #87.#88       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #23 = Methodref          #20.#89       // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #24 = Methodref          #90.#91       // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n-   #25 = Methodref          #87.#92       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-   #26 = Methodref          #20.#80       // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n-   #27 = Methodref          #20.#82       // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n-   #28 = Methodref          #20.#93       // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n-   #29 = Methodref          #20.#94       // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n-   #30 = Methodref          #95.#96       // java/io/DataOutputStream.writeByte:(I)V\n-   #31 = Methodref          #95.#97       // java/io/DataOutputStream.writeShort:(I)V\n-   #32 = Methodref          #87.#98       // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #33 = Class              #99           // org/apache/bcel/classfile/ConstantUtf8\n-   #34 = Methodref          #33.#100      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #35 = Class              #101          // org/apache/bcel/generic/EnumElementValueGen\n+    #1 = Class              #62           // org/apache/bcel/generic/ElementValueGen\n+    #2 = Methodref          #1.#63        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #3 = Methodref          #1.#64        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+    #4 = Class              #65           // java/lang/IllegalArgumentException\n+    #5 = Class              #66           // java/lang/StringBuilder\n+    #6 = Methodref          #5.#67        // java/lang/StringBuilder.\"<init>\":()V\n+    #7 = String             #68           // Only element values of type enum can be built with this ctor - type specified:\n+    #8 = Methodref          #5.#69        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #9 = Methodref          #5.#70        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #10 = Methodref          #5.#71        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #4.#72        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #35.#73       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n+   #13 = Fieldref           #35.#74       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n+   #14 = Fieldref           #75.#76       // java/lang/System.err:Ljava/io/PrintStream;\n+   #15 = String             #77           // Duplicating value:\n+   #16 = Methodref          #35.#78       // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n+   #17 = String             #79           // :\n+   #18 = Methodref          #35.#80       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n+   #19 = Methodref          #81.#82       // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #20 = Class              #83           // org/apache/bcel/classfile/EnumElementValue\n+   #21 = Methodref          #35.#84       // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #22 = Methodref          #44.#85       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #23 = Methodref          #20.#86       // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #24 = Methodref          #87.#88       // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n+   #25 = Methodref          #44.#89       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+   #26 = Methodref          #20.#78       // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n+   #27 = Methodref          #20.#80       // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n+   #28 = Methodref          #20.#90       // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n+   #29 = Methodref          #20.#91       // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n+   #30 = Methodref          #92.#93       // java/io/DataOutputStream.writeByte:(I)V\n+   #31 = Methodref          #92.#94       // java/io/DataOutputStream.writeShort:(I)V\n+   #32 = Methodref          #44.#95       // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #33 = Class              #96           // org/apache/bcel/classfile/ConstantUtf8\n+   #34 = Methodref          #33.#97       // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #35 = Class              #98           // org/apache/bcel/generic/EnumElementValueGen\n    #36 = Utf8               typeIdx\n    #37 = Utf8               I\n    #38 = Utf8               valueIdx\n    #39 = Utf8               <init>\n    #40 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n    #41 = Utf8               Code\n    #42 = Utf8               LineNumberTable\n    #43 = Utf8               StackMapTable\n-   #44 = Class              #101          // org/apache/bcel/generic/EnumElementValueGen\n-   #45 = Class              #102          // org/apache/bcel/generic/ConstantPoolGen\n-   #46 = Utf8               getElementValue\n-   #47 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #48 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #49 = Utf8               (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #50 = Class              #85           // org/apache/bcel/classfile/EnumElementValue\n-   #51 = Utf8               dump\n-   #52 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #53 = Utf8               Exceptions\n-   #54 = Class              #103          // java/io/IOException\n-   #55 = Utf8               stringifyValue\n-   #56 = Utf8               ()Ljava/lang/String;\n-   #57 = Utf8               getEnumTypeString\n-   #58 = Utf8               getEnumValueString\n-   #59 = Utf8               getValueIndex\n-   #60 = Utf8               ()I\n-   #61 = Utf8               getTypeIndex\n-   #62 = Utf8               SourceFile\n-   #63 = Utf8               EnumElementValueGen.java\n-   #64 = Utf8               org/apache/bcel/generic/ElementValueGen\n-   #65 = NameAndType        #39:#104      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #66 = NameAndType        #105:#60      // getElementValueType:()I\n-   #67 = Utf8               java/lang/IllegalArgumentException\n-   #68 = Utf8               java/lang/StringBuilder\n-   #69 = NameAndType        #39:#106      // \"<init>\":()V\n-   #70 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n-   #71 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #72 = NameAndType        #107:#109     // append:(I)Ljava/lang/StringBuilder;\n-   #73 = NameAndType        #110:#56      // toString:()Ljava/lang/String;\n-   #74 = NameAndType        #39:#111      // \"<init>\":(Ljava/lang/String;)V\n-   #75 = NameAndType        #36:#37       // typeIdx:I\n-   #76 = NameAndType        #38:#37       // valueIdx:I\n-   #77 = Class              #112          // java/lang/System\n-   #78 = NameAndType        #113:#114     // err:Ljava/io/PrintStream;\n-   #79 = Utf8               Duplicating value:\n-   #80 = NameAndType        #57:#56       // getEnumTypeString:()Ljava/lang/String;\n-   #81 = Utf8               :\n-   #82 = NameAndType        #58:#56       // getEnumValueString:()Ljava/lang/String;\n-   #83 = Class              #115          // java/io/PrintStream\n-   #84 = NameAndType        #116:#111     // println:(Ljava/lang/String;)V\n-   #85 = Utf8               org/apache/bcel/classfile/EnumElementValue\n-   #86 = NameAndType        #117:#118     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #87 = Class              #102          // org/apache/bcel/generic/ConstantPoolGen\n-   #88 = NameAndType        #117:#119     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #89 = NameAndType        #39:#120      // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #90 = Class              #121          // org/apache/bcel/generic/ObjectType\n-   #91 = NameAndType        #122:#56      // getSignature:()Ljava/lang/String;\n-   #92 = NameAndType        #123:#124     // addUtf8:(Ljava/lang/String;)I\n-   #93 = NameAndType        #61:#60       // getTypeIndex:()I\n-   #94 = NameAndType        #59:#60       // getValueIndex:()I\n-   #95 = Class              #125          // java/io/DataOutputStream\n-   #96 = NameAndType        #126:#127     // writeByte:(I)V\n-   #97 = NameAndType        #128:#127     // writeShort:(I)V\n-   #98 = NameAndType        #129:#130     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #99 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #100 = NameAndType        #131:#56      // getBytes:()Ljava/lang/String;\n-  #101 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n-  #102 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #103 = Utf8               java/io/IOException\n-  #104 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #105 = Utf8               getElementValueType\n-  #106 = Utf8               ()V\n-  #107 = Utf8               append\n-  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #109 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #110 = Utf8               toString\n-  #111 = Utf8               (Ljava/lang/String;)V\n-  #112 = Utf8               java/lang/System\n-  #113 = Utf8               err\n-  #114 = Utf8               Ljava/io/PrintStream;\n-  #115 = Utf8               java/io/PrintStream\n-  #116 = Utf8               println\n-  #117 = Utf8               getConstantPool\n-  #118 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #119 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #120 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n-  #121 = Utf8               org/apache/bcel/generic/ObjectType\n-  #122 = Utf8               getSignature\n-  #123 = Utf8               addUtf8\n-  #124 = Utf8               (Ljava/lang/String;)I\n-  #125 = Utf8               java/io/DataOutputStream\n-  #126 = Utf8               writeByte\n-  #127 = Utf8               (I)V\n-  #128 = Utf8               writeShort\n-  #129 = Utf8               getConstant\n-  #130 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #131 = Utf8               getBytes\n+   #44 = Class              #99           // org/apache/bcel/generic/ConstantPoolGen\n+   #45 = Utf8               getElementValue\n+   #46 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+   #47 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #48 = Utf8               (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+   #49 = Utf8               dump\n+   #50 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #51 = Utf8               Exceptions\n+   #52 = Class              #100          // java/io/IOException\n+   #53 = Utf8               stringifyValue\n+   #54 = Utf8               ()Ljava/lang/String;\n+   #55 = Utf8               getEnumTypeString\n+   #56 = Utf8               getEnumValueString\n+   #57 = Utf8               getValueIndex\n+   #58 = Utf8               ()I\n+   #59 = Utf8               getTypeIndex\n+   #60 = Utf8               SourceFile\n+   #61 = Utf8               EnumElementValueGen.java\n+   #62 = Utf8               org/apache/bcel/generic/ElementValueGen\n+   #63 = NameAndType        #39:#101      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #64 = NameAndType        #102:#58      // getElementValueType:()I\n+   #65 = Utf8               java/lang/IllegalArgumentException\n+   #66 = Utf8               java/lang/StringBuilder\n+   #67 = NameAndType        #39:#103      // \"<init>\":()V\n+   #68 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n+   #69 = NameAndType        #104:#105     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = NameAndType        #104:#106     // append:(I)Ljava/lang/StringBuilder;\n+   #71 = NameAndType        #107:#54      // toString:()Ljava/lang/String;\n+   #72 = NameAndType        #39:#108      // \"<init>\":(Ljava/lang/String;)V\n+   #73 = NameAndType        #36:#37       // typeIdx:I\n+   #74 = NameAndType        #38:#37       // valueIdx:I\n+   #75 = Class              #109          // java/lang/System\n+   #76 = NameAndType        #110:#111     // err:Ljava/io/PrintStream;\n+   #77 = Utf8               Duplicating value:\n+   #78 = NameAndType        #55:#54       // getEnumTypeString:()Ljava/lang/String;\n+   #79 = Utf8               :\n+   #80 = NameAndType        #56:#54       // getEnumValueString:()Ljava/lang/String;\n+   #81 = Class              #112          // java/io/PrintStream\n+   #82 = NameAndType        #113:#108     // println:(Ljava/lang/String;)V\n+   #83 = Utf8               org/apache/bcel/classfile/EnumElementValue\n+   #84 = NameAndType        #114:#115     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #85 = NameAndType        #114:#116     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #86 = NameAndType        #39:#117      // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+   #87 = Class              #118          // org/apache/bcel/generic/ObjectType\n+   #88 = NameAndType        #119:#54      // getSignature:()Ljava/lang/String;\n+   #89 = NameAndType        #120:#121     // addUtf8:(Ljava/lang/String;)I\n+   #90 = NameAndType        #59:#58       // getTypeIndex:()I\n+   #91 = NameAndType        #57:#58       // getValueIndex:()I\n+   #92 = Class              #122          // java/io/DataOutputStream\n+   #93 = NameAndType        #123:#124     // writeByte:(I)V\n+   #94 = NameAndType        #125:#124     // writeShort:(I)V\n+   #95 = NameAndType        #126:#127     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #96 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+   #97 = NameAndType        #128:#54      // getBytes:()Ljava/lang/String;\n+   #98 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n+   #99 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #100 = Utf8               java/io/IOException\n+  #101 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #102 = Utf8               getElementValueType\n+  #103 = Utf8               ()V\n+  #104 = Utf8               append\n+  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #106 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #107 = Utf8               toString\n+  #108 = Utf8               (Ljava/lang/String;)V\n+  #109 = Utf8               java/lang/System\n+  #110 = Utf8               err\n+  #111 = Utf8               Ljava/io/PrintStream;\n+  #112 = Utf8               java/io/PrintStream\n+  #113 = Utf8               println\n+  #114 = Utf8               getConstantPool\n+  #115 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #116 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #117 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #118 = Utf8               org/apache/bcel/generic/ObjectType\n+  #119 = Utf8               getSignature\n+  #120 = Utf8               addUtf8\n+  #121 = Utf8               (Ljava/lang/String;)I\n+  #122 = Utf8               java/io/DataOutputStream\n+  #123 = Utf8               writeByte\n+  #124 = Utf8               (I)V\n+  #125 = Utf8               writeShort\n+  #126 = Utf8               getConstant\n+  #127 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #128 = Utf8               getBytes\n {\n   private int typeIdx;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int valueIdx;\n     descriptor: I\n"}]}
