{"diffoscope-json-version": 1, "source1": "first/FileUtils.class", "source2": "second/FileUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,49 +11,46 @@\n {\n     private static final Charset UTF8;\n     \n     public static File toFile(final URL url) {\n         if (url == null || !\"file\".equalsIgnoreCase(url.getProtocol())) {\n             return null;\n         }\n-        String fileName = url.getFile().replace('/', File.separatorChar);\n-        fileName = decodeUrl(fileName);\n-        return new File(fileName);\n+        return new File(decodeUrl(url.getFile().replace('/', File.separatorChar)));\n     }\n     \n-    static String decodeUrl(final String url) {\n-        String decoded = url;\n-        if (url != null && url.indexOf(37) >= 0) {\n-            final int n = url.length();\n-            final StringBuilder buffer = new StringBuilder();\n-            final ByteBuffer bytes = ByteBuffer.allocate(n);\n+    static String decodeUrl(final String s) {\n+        String string = s;\n+        if (s != null && s.indexOf(37) >= 0) {\n+            final int length = s.length();\n+            final StringBuilder sb = new StringBuilder();\n+            final ByteBuffer allocate = ByteBuffer.allocate(length);\n             int i = 0;\n-            while (i < n) {\n-                if (url.charAt(i) == '%') {\n+            while (i < length) {\n+                if (s.charAt(i) == '%') {\n                     try {\n                         do {\n-                            final byte octet = (byte)Integer.parseInt(url.substring(i + 1, i + 3), 16);\n-                            bytes.put(octet);\n+                            allocate.put((byte)Integer.parseInt(s.substring(i + 1, i + 3), 16));\n                             i += 3;\n-                        } while (i < n && url.charAt(i) == '%');\n+                        } while (i < length && s.charAt(i) == '%');\n                         continue;\n                     }\n                     catch (final RuntimeException ex) {}\n                     finally {\n-                        if (bytes.position() > 0) {\n-                            bytes.flip();\n-                            buffer.append(FileUtils.UTF8.decode(bytes));\n-                            bytes.clear();\n+                        if (allocate.position() > 0) {\n+                            allocate.flip();\n+                            sb.append(FileUtils.UTF8.decode(allocate));\n+                            allocate.clear();\n                         }\n                     }\n                 }\n-                buffer.append(url.charAt(i++));\n+                sb.append(s.charAt(i++));\n             }\n-            decoded = buffer.toString();\n+            string = sb.toString();\n         }\n-        return decoded;\n+        return string;\n     }\n     \n     static {\n         UTF8 = StandardCharsets.UTF_8;\n     }\n }\n"}]}
