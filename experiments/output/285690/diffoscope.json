{"diffoscope-json-version": 1, "source1": "first/Rule.class", "source2": "second/Rule.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,176 +1,176 @@\n-  SHA-256 checksum e868865c93b587a8bcbcf9a30ff2dbcabdfda805b0b83de9232e7d906ed05a75\n+  SHA-256 checksum dc9d0be69f1fb24a6f3ca3b6d0cfb0a4b676ac8d09daa1be2cf9897a733b24b8\n   Compiled from \"Rule.java\"\n public class org.apache.commons.codec.language.bm.Rule\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #81                         // org/apache/commons/codec/language/bm/Rule\n   super_class: #7                         // java/lang/Object\n   interfaces: 0, fields: 9, methods: 25, attributes: 2\n Constant pool:\n-    #1 = Methodref          #81.#249      // org/apache/commons/codec/language/bm/Rule.contains:(Ljava/lang/CharSequence;C)Z\n-    #2 = Methodref          #81.#250      // org/apache/commons/codec/language/bm/Rule.endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-    #3 = Methodref          #81.#251      // org/apache/commons/codec/language/bm/Rule.startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-    #4 = InterfaceMethodref #252.#253     // java/lang/CharSequence.length:()I\n-    #5 = InterfaceMethodref #252.#254     // java/lang/CharSequence.charAt:(I)C\n-    #6 = String             #255          // org/apache/commons/codec/language/bm/%s_%s_%s.txt\n-    #7 = Class              #256          // java/lang/Object\n-    #8 = Methodref          #141.#257     // org/apache/commons/codec/language/bm/NameType.getName:()Ljava/lang/String;\n-    #9 = Methodref          #144.#257     // org/apache/commons/codec/language/bm/RuleType.getName:()Ljava/lang/String;\n-   #10 = Methodref          #37.#258      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #11 = Methodref          #81.#259      // org/apache/commons/codec/language/bm/Rule.createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n-   #12 = Class              #260          // org/apache/commons/codec/language/bm/Languages\n-   #13 = Methodref          #261.#262     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-   #14 = Methodref          #263.#264     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #15 = Class              #265          // java/lang/IllegalArgumentException\n-   #16 = Class              #266          // java/lang/StringBuilder\n-   #17 = Methodref          #16.#267      // java/lang/StringBuilder.\"<init>\":()V\n-   #18 = String             #268          // Unable to load resource:\n-   #19 = Methodref          #16.#269      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #16.#270      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = Methodref          #15.#271      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Class              #272          // java/util/Scanner\n-   #23 = Class              #273          // org/apache/commons/codec/language/bm/ResourceConstants\n-   #24 = String             #274          // UTF-8\n-   #25 = Methodref          #22.#275      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #26 = String             #276          // org/apache/commons/codec/language/bm/%s.txt\n-   #27 = Methodref          #81.#277      // org/apache/commons/codec/language/bm/Rule.getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n-   #28 = Class              #278          // java/util/ArrayList\n-   #29 = Methodref          #28.#267      // java/util/ArrayList.\"<init>\":()V\n-   #30 = InterfaceMethodref #48.#279      // java/util/Map.values:()Ljava/util/Collection;\n-   #31 = InterfaceMethodref #280.#281     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #32 = InterfaceMethodref #282.#283     // java/util/Iterator.hasNext:()Z\n-   #33 = InterfaceMethodref #282.#284     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #34 = Class              #285          // java/util/List\n-   #35 = InterfaceMethodref #34.#286      // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #36 = Class              #287          // java/util/HashSet\n-   #37 = Class              #288          // java/lang/String\n-   #38 = Methodref          #289.#290     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #39 = Methodref          #36.#291      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n-   #40 = Methodref          #194.#292     // org/apache/commons/codec/language/bm/Languages$LanguageSet.from:(Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-   #41 = Methodref          #81.#293      // org/apache/commons/codec/language/bm/Rule.getInstance:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n-   #42 = Methodref          #194.#294     // org/apache/commons/codec/language/bm/Languages$LanguageSet.isSingleton:()Z\n-   #43 = Methodref          #194.#295     // org/apache/commons/codec/language/bm/Languages$LanguageSet.getAny:()Ljava/lang/String;\n-   #44 = Methodref          #81.#296      // org/apache/commons/codec/language/bm/Rule.getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n-   #45 = String             #297          // any\n-   #46 = Fieldref           #81.#298      // org/apache/commons/codec/language/bm/Rule.RULES:Ljava/util/Map;\n-   #47 = InterfaceMethodref #48.#299      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #48 = Class              #300          // java/util/Map\n-   #49 = String             #301          // No rules found for %s, %s, %s.\n-   #50 = String             #302          // [\n-   #51 = Methodref          #37.#303      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #52 = String             #304          // ]\n-   #53 = Methodref          #37.#305      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #54 = String             #306          // Phoneme expression contains a \\'[\\' but does not end in \\']\\'\n-   #55 = Methodref          #37.#307      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #56 = Methodref          #37.#253      // java/lang/String.length:()I\n-   #57 = String             #308          // [+]\n-   #58 = Methodref          #37.#309      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-   #59 = Class              #310          // org/apache/commons/codec/language/bm/Rule$Phoneme\n-   #60 = Methodref          #59.#311      // org/apache/commons/codec/language/bm/Rule$Phoneme.\"<init>\":(Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n-   #61 = Fieldref           #12.#312      // org/apache/commons/codec/language/bm/Languages.ANY_LANGUAGE:Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-   #62 = String             #313          // (\n-   #63 = Methodref          #37.#314      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #64 = String             #315          // )\n-   #65 = String             #316          // Phoneme starts with \\'(\\' so must end with \\')\\'\n-   #66 = String             #317          // [|]\n-   #67 = Methodref          #81.#318      // org/apache/commons/codec/language/bm/Rule.parsePhoneme:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n-   #68 = InterfaceMethodref #34.#319      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #69 = String             #320          // |\n-   #70 = String             #321          //\n-   #71 = Class              #322          // org/apache/commons/codec/language/bm/Rule$PhonemeList\n-   #72 = Methodref          #71.#323      // org/apache/commons/codec/language/bm/Rule$PhonemeList.\"<init>\":(Ljava/util/List;)V\n-   #73 = Class              #324          // java/util/HashMap\n-   #74 = Methodref          #73.#267      // java/util/HashMap.\"<init>\":()V\n-   #75 = Methodref          #22.#325      // java/util/Scanner.hasNextLine:()Z\n-   #76 = Methodref          #22.#326      // java/util/Scanner.nextLine:()Ljava/lang/String;\n-   #77 = String             #327          // */\n-   #78 = String             #328          // /*\n-   #79 = String             #329          // //\n-   #80 = Methodref          #37.#330      // java/lang/String.trim:()Ljava/lang/String;\n-   #81 = Class              #331          // org/apache/commons/codec/language/bm/Rule\n-   #82 = String             #332          // #include\n-   #83 = Methodref          #37.#333      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #84 = String             #334          //\n-   #85 = Methodref          #37.#335      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #86 = String             #336          // Malformed import statement \\'\n-   #87 = String             #337          // \\' in\n-   #88 = Methodref          #81.#338      // org/apache/commons/codec/language/bm/Rule.createScanner:(Ljava/lang/String;)Ljava/util/Scanner;\n-   #89 = String             #339          // ->\n-   #90 = Methodref          #81.#340      // org/apache/commons/codec/language/bm/Rule.parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n-   #91 = InterfaceMethodref #48.#341      // java/util/Map.putAll:(Ljava/util/Map;)V\n-   #92 = Methodref          #22.#342      // java/util/Scanner.close:()V\n-   #93 = String             #343          // \\\\s+\n-   #94 = String             #344          // Malformed rule statement split into\n-   #95 = Methodref          #16.#345      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #96 = String             #346          //  parts:\n-   #97 = String             #347          //  in\n-   #98 = Methodref          #81.#348      // org/apache/commons/codec/language/bm/Rule.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-   #99 = Methodref          #81.#349      // org/apache/commons/codec/language/bm/Rule.parsePhonemeExpr:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #100 = Class              #350          // org/apache/commons/codec/language/bm/Rule$2\n-  #101 = Methodref          #100.#351     // org/apache/commons/codec/language/bm/Rule$2.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #102 = Fieldref           #81.#352      // org/apache/commons/codec/language/bm/Rule.pattern:Ljava/lang/String;\n-  #103 = InterfaceMethodref #48.#353      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #104 = Class              #354          // java/lang/IllegalStateException\n-  #105 = String             #355          // Problem parsing line \\'\n-  #106 = Methodref          #104.#356     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #107 = String             #357          // ^\n-  #108 = String             #358          // $\n-  #109 = Class              #359          // org/apache/commons/codec/language/bm/Rule$3\n-  #110 = Methodref          #109.#267     // org/apache/commons/codec/language/bm/Rule$3.\"<init>\":()V\n-  #111 = Class              #360          // org/apache/commons/codec/language/bm/Rule$4\n-  #112 = Methodref          #111.#271     // org/apache/commons/codec/language/bm/Rule$4.\"<init>\":(Ljava/lang/String;)V\n-  #113 = Fieldref           #81.#361      // org/apache/commons/codec/language/bm/Rule.ALL_STRINGS_RMATCHER:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #114 = Class              #362          // org/apache/commons/codec/language/bm/Rule$5\n-  #115 = Methodref          #114.#271     // org/apache/commons/codec/language/bm/Rule$5.\"<init>\":(Ljava/lang/String;)V\n-  #116 = Class              #363          // org/apache/commons/codec/language/bm/Rule$6\n-  #117 = Methodref          #116.#271     // org/apache/commons/codec/language/bm/Rule$6.\"<init>\":(Ljava/lang/String;)V\n-  #118 = Class              #364          // org/apache/commons/codec/language/bm/Rule$7\n-  #119 = Methodref          #118.#365     // org/apache/commons/codec/language/bm/Rule$7.\"<init>\":(Ljava/lang/String;Z)V\n-  #120 = Class              #366          // org/apache/commons/codec/language/bm/Rule$8\n-  #121 = Methodref          #120.#365     // org/apache/commons/codec/language/bm/Rule$8.\"<init>\":(Ljava/lang/String;Z)V\n-  #122 = Class              #367          // org/apache/commons/codec/language/bm/Rule$9\n-  #123 = Methodref          #122.#365     // org/apache/commons/codec/language/bm/Rule$9.\"<init>\":(Ljava/lang/String;Z)V\n-  #124 = Class              #368          // org/apache/commons/codec/language/bm/Rule$10\n-  #125 = Methodref          #124.#271     // org/apache/commons/codec/language/bm/Rule$10.\"<init>\":(Ljava/lang/String;)V\n-  #126 = String             #369          // \\\"\n-  #127 = Methodref          #7.#267       // java/lang/Object.\"<init>\":()V\n-  #128 = Methodref          #81.#370      // org/apache/commons/codec/language/bm/Rule.pattern:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #129 = Fieldref           #81.#371      // org/apache/commons/codec/language/bm/Rule.lContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #130 = Fieldref           #81.#372      // org/apache/commons/codec/language/bm/Rule.rContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #131 = Fieldref           #81.#373      // org/apache/commons/codec/language/bm/Rule.phoneme:Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #132 = Class              #374          // java/lang/IndexOutOfBoundsException\n-  #133 = String             #375          // Can not match pattern at negative indexes\n-  #134 = Methodref          #132.#271     // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-  #135 = InterfaceMethodref #252.#376     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-  #136 = Methodref          #7.#377       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-  #137 = InterfaceMethodref #155.#378     // org/apache/commons/codec/language/bm/Rule$RPattern.isMatch:(Ljava/lang/CharSequence;)Z\n-  #138 = Class              #379          // org/apache/commons/codec/language/bm/Rule$1\n-  #139 = Methodref          #138.#267     // org/apache/commons/codec/language/bm/Rule$1.\"<init>\":()V\n-  #140 = Class              #380          // java/util/EnumMap\n-  #141 = Class              #381          // org/apache/commons/codec/language/bm/NameType\n-  #142 = Methodref          #140.#382     // java/util/EnumMap.\"<init>\":(Ljava/lang/Class;)V\n-  #143 = Methodref          #141.#383     // org/apache/commons/codec/language/bm/NameType.values:()[Lorg/apache/commons/codec/language/bm/NameType;\n-  #144 = Class              #384          // org/apache/commons/codec/language/bm/RuleType\n-  #145 = Methodref          #144.#385     // org/apache/commons/codec/language/bm/RuleType.values:()[Lorg/apache/commons/codec/language/bm/RuleType;\n-  #146 = Methodref          #12.#386      // org/apache/commons/codec/language/bm/Languages.getInstance:(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n-  #147 = Methodref          #12.#387      // org/apache/commons/codec/language/bm/Languages.getLanguages:()Ljava/util/Set;\n-  #148 = InterfaceMethodref #388.#281     // java/util/Set.iterator:()Ljava/util/Iterator;\n-  #149 = Methodref          #81.#389      // org/apache/commons/codec/language/bm/Rule.createScanner:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n-  #150 = String             #390          // Problem processing\n-  #151 = Fieldref           #144.#391     // org/apache/commons/codec/language/bm/RuleType.RULES:Lorg/apache/commons/codec/language/bm/RuleType;\n-  #152 = Methodref          #144.#377     // org/apache/commons/codec/language/bm/RuleType.equals:(Ljava/lang/Object;)Z\n-  #153 = String             #392          // common\n-  #154 = Methodref          #393.#394     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-  #155 = Class              #395          // org/apache/commons/codec/language/bm/Rule$RPattern\n+    #1 = Methodref          #81.#238      // org/apache/commons/codec/language/bm/Rule.contains:(Ljava/lang/CharSequence;C)Z\n+    #2 = Methodref          #81.#239      // org/apache/commons/codec/language/bm/Rule.endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+    #3 = Methodref          #81.#240      // org/apache/commons/codec/language/bm/Rule.startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+    #4 = InterfaceMethodref #241.#242     // java/lang/CharSequence.length:()I\n+    #5 = InterfaceMethodref #241.#243     // java/lang/CharSequence.charAt:(I)C\n+    #6 = String             #244          // org/apache/commons/codec/language/bm/%s_%s_%s.txt\n+    #7 = Class              #245          // java/lang/Object\n+    #8 = Methodref          #141.#246     // org/apache/commons/codec/language/bm/NameType.getName:()Ljava/lang/String;\n+    #9 = Methodref          #144.#246     // org/apache/commons/codec/language/bm/RuleType.getName:()Ljava/lang/String;\n+   #10 = Methodref          #37.#247      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #11 = Methodref          #81.#248      // org/apache/commons/codec/language/bm/Rule.createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n+   #12 = Class              #249          // org/apache/commons/codec/language/bm/Languages\n+   #13 = Methodref          #250.#251     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+   #14 = Methodref          #252.#253     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+   #15 = Class              #254          // java/lang/IllegalArgumentException\n+   #16 = Class              #255          // java/lang/StringBuilder\n+   #17 = Methodref          #16.#256      // java/lang/StringBuilder.\"<init>\":()V\n+   #18 = String             #257          // Unable to load resource:\n+   #19 = Methodref          #16.#258      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #16.#259      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #21 = Methodref          #15.#260      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Class              #261          // java/util/Scanner\n+   #23 = Class              #262          // org/apache/commons/codec/language/bm/ResourceConstants\n+   #24 = String             #263          // UTF-8\n+   #25 = Methodref          #22.#264      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #26 = String             #265          // org/apache/commons/codec/language/bm/%s.txt\n+   #27 = Methodref          #81.#266      // org/apache/commons/codec/language/bm/Rule.getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n+   #28 = Class              #267          // java/util/ArrayList\n+   #29 = Methodref          #28.#256      // java/util/ArrayList.\"<init>\":()V\n+   #30 = InterfaceMethodref #48.#268      // java/util/Map.values:()Ljava/util/Collection;\n+   #31 = InterfaceMethodref #269.#270     // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #32 = InterfaceMethodref #196.#271     // java/util/Iterator.hasNext:()Z\n+   #33 = InterfaceMethodref #196.#272     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #34 = Class              #273          // java/util/List\n+   #35 = InterfaceMethodref #34.#274      // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #36 = Class              #275          // java/util/HashSet\n+   #37 = Class              #276          // java/lang/String\n+   #38 = Methodref          #277.#278     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #39 = Methodref          #36.#279      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n+   #40 = Methodref          #193.#280     // org/apache/commons/codec/language/bm/Languages$LanguageSet.from:(Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+   #41 = Methodref          #81.#281      // org/apache/commons/codec/language/bm/Rule.getInstance:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n+   #42 = Methodref          #193.#282     // org/apache/commons/codec/language/bm/Languages$LanguageSet.isSingleton:()Z\n+   #43 = Methodref          #193.#283     // org/apache/commons/codec/language/bm/Languages$LanguageSet.getAny:()Ljava/lang/String;\n+   #44 = Methodref          #81.#284      // org/apache/commons/codec/language/bm/Rule.getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n+   #45 = String             #285          // any\n+   #46 = Fieldref           #81.#286      // org/apache/commons/codec/language/bm/Rule.RULES:Ljava/util/Map;\n+   #47 = InterfaceMethodref #48.#287      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = Class              #288          // java/util/Map\n+   #49 = String             #289          // No rules found for %s, %s, %s.\n+   #50 = String             #290          // [\n+   #51 = Methodref          #37.#291      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #52 = String             #292          // ]\n+   #53 = Methodref          #37.#293      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #54 = String             #294          // Phoneme expression contains a \\'[\\' but does not end in \\']\\'\n+   #55 = Methodref          #37.#295      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #56 = Methodref          #37.#242      // java/lang/String.length:()I\n+   #57 = String             #296          // [+]\n+   #58 = Methodref          #37.#297      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #59 = Class              #298          // org/apache/commons/codec/language/bm/Rule$Phoneme\n+   #60 = Methodref          #59.#299      // org/apache/commons/codec/language/bm/Rule$Phoneme.\"<init>\":(Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n+   #61 = Fieldref           #12.#300      // org/apache/commons/codec/language/bm/Languages.ANY_LANGUAGE:Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+   #62 = String             #301          // (\n+   #63 = Methodref          #37.#302      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #64 = String             #303          // )\n+   #65 = String             #304          // Phoneme starts with \\'(\\' so must end with \\')\\'\n+   #66 = String             #305          // [|]\n+   #67 = Methodref          #81.#306      // org/apache/commons/codec/language/bm/Rule.parsePhoneme:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n+   #68 = InterfaceMethodref #34.#307      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #69 = String             #308          // |\n+   #70 = String             #309          //\n+   #71 = Class              #310          // org/apache/commons/codec/language/bm/Rule$PhonemeList\n+   #72 = Methodref          #71.#311      // org/apache/commons/codec/language/bm/Rule$PhonemeList.\"<init>\":(Ljava/util/List;)V\n+   #73 = Class              #312          // java/util/HashMap\n+   #74 = Methodref          #73.#256      // java/util/HashMap.\"<init>\":()V\n+   #75 = Methodref          #22.#313      // java/util/Scanner.hasNextLine:()Z\n+   #76 = Methodref          #22.#314      // java/util/Scanner.nextLine:()Ljava/lang/String;\n+   #77 = String             #315          // */\n+   #78 = String             #316          // /*\n+   #79 = String             #317          // //\n+   #80 = Methodref          #37.#318      // java/lang/String.trim:()Ljava/lang/String;\n+   #81 = Class              #319          // org/apache/commons/codec/language/bm/Rule\n+   #82 = String             #320          // #include\n+   #83 = Methodref          #37.#321      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #84 = String             #322          //\n+   #85 = Methodref          #37.#323      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #86 = String             #324          // Malformed import statement \\'\n+   #87 = String             #325          // \\' in\n+   #88 = Methodref          #81.#326      // org/apache/commons/codec/language/bm/Rule.createScanner:(Ljava/lang/String;)Ljava/util/Scanner;\n+   #89 = String             #327          // ->\n+   #90 = Methodref          #81.#328      // org/apache/commons/codec/language/bm/Rule.parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n+   #91 = InterfaceMethodref #48.#329      // java/util/Map.putAll:(Ljava/util/Map;)V\n+   #92 = Methodref          #22.#330      // java/util/Scanner.close:()V\n+   #93 = String             #331          // \\\\s+\n+   #94 = String             #332          // Malformed rule statement split into\n+   #95 = Methodref          #16.#333      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #96 = String             #334          //  parts:\n+   #97 = String             #335          //  in\n+   #98 = Methodref          #81.#336      // org/apache/commons/codec/language/bm/Rule.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+   #99 = Methodref          #81.#337      // org/apache/commons/codec/language/bm/Rule.parsePhonemeExpr:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #100 = Class              #338          // org/apache/commons/codec/language/bm/Rule$2\n+  #101 = Methodref          #100.#339     // org/apache/commons/codec/language/bm/Rule$2.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #102 = Fieldref           #81.#340      // org/apache/commons/codec/language/bm/Rule.pattern:Ljava/lang/String;\n+  #103 = InterfaceMethodref #48.#341      // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #104 = Class              #342          // java/lang/IllegalStateException\n+  #105 = String             #343          // Problem parsing line \\'\n+  #106 = Methodref          #104.#344     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #107 = String             #345          // ^\n+  #108 = String             #346          // $\n+  #109 = Class              #347          // org/apache/commons/codec/language/bm/Rule$3\n+  #110 = Methodref          #109.#256     // org/apache/commons/codec/language/bm/Rule$3.\"<init>\":()V\n+  #111 = Class              #348          // org/apache/commons/codec/language/bm/Rule$4\n+  #112 = Methodref          #111.#260     // org/apache/commons/codec/language/bm/Rule$4.\"<init>\":(Ljava/lang/String;)V\n+  #113 = Fieldref           #81.#349      // org/apache/commons/codec/language/bm/Rule.ALL_STRINGS_RMATCHER:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #114 = Class              #350          // org/apache/commons/codec/language/bm/Rule$5\n+  #115 = Methodref          #114.#260     // org/apache/commons/codec/language/bm/Rule$5.\"<init>\":(Ljava/lang/String;)V\n+  #116 = Class              #351          // org/apache/commons/codec/language/bm/Rule$6\n+  #117 = Methodref          #116.#260     // org/apache/commons/codec/language/bm/Rule$6.\"<init>\":(Ljava/lang/String;)V\n+  #118 = Class              #352          // org/apache/commons/codec/language/bm/Rule$7\n+  #119 = Methodref          #118.#353     // org/apache/commons/codec/language/bm/Rule$7.\"<init>\":(Ljava/lang/String;Z)V\n+  #120 = Class              #354          // org/apache/commons/codec/language/bm/Rule$8\n+  #121 = Methodref          #120.#353     // org/apache/commons/codec/language/bm/Rule$8.\"<init>\":(Ljava/lang/String;Z)V\n+  #122 = Class              #355          // org/apache/commons/codec/language/bm/Rule$9\n+  #123 = Methodref          #122.#353     // org/apache/commons/codec/language/bm/Rule$9.\"<init>\":(Ljava/lang/String;Z)V\n+  #124 = Class              #356          // org/apache/commons/codec/language/bm/Rule$10\n+  #125 = Methodref          #124.#260     // org/apache/commons/codec/language/bm/Rule$10.\"<init>\":(Ljava/lang/String;)V\n+  #126 = String             #357          // \\\"\n+  #127 = Methodref          #7.#256       // java/lang/Object.\"<init>\":()V\n+  #128 = Methodref          #81.#358      // org/apache/commons/codec/language/bm/Rule.pattern:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #129 = Fieldref           #81.#359      // org/apache/commons/codec/language/bm/Rule.lContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #130 = Fieldref           #81.#360      // org/apache/commons/codec/language/bm/Rule.rContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #131 = Fieldref           #81.#361      // org/apache/commons/codec/language/bm/Rule.phoneme:Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #132 = Class              #362          // java/lang/IndexOutOfBoundsException\n+  #133 = String             #363          // Can not match pattern at negative indexes\n+  #134 = Methodref          #132.#260     // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #135 = InterfaceMethodref #241.#364     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #136 = Methodref          #7.#365       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #137 = InterfaceMethodref #155.#366     // org/apache/commons/codec/language/bm/Rule$RPattern.isMatch:(Ljava/lang/CharSequence;)Z\n+  #138 = Class              #367          // org/apache/commons/codec/language/bm/Rule$1\n+  #139 = Methodref          #138.#256     // org/apache/commons/codec/language/bm/Rule$1.\"<init>\":()V\n+  #140 = Class              #368          // java/util/EnumMap\n+  #141 = Class              #369          // org/apache/commons/codec/language/bm/NameType\n+  #142 = Methodref          #140.#370     // java/util/EnumMap.\"<init>\":(Ljava/lang/Class;)V\n+  #143 = Methodref          #141.#371     // org/apache/commons/codec/language/bm/NameType.values:()[Lorg/apache/commons/codec/language/bm/NameType;\n+  #144 = Class              #372          // org/apache/commons/codec/language/bm/RuleType\n+  #145 = Methodref          #144.#373     // org/apache/commons/codec/language/bm/RuleType.values:()[Lorg/apache/commons/codec/language/bm/RuleType;\n+  #146 = Methodref          #12.#374      // org/apache/commons/codec/language/bm/Languages.getInstance:(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n+  #147 = Methodref          #12.#375      // org/apache/commons/codec/language/bm/Languages.getLanguages:()Ljava/util/Set;\n+  #148 = InterfaceMethodref #376.#270     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #149 = Methodref          #81.#377      // org/apache/commons/codec/language/bm/Rule.createScanner:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n+  #150 = String             #378          // Problem processing\n+  #151 = Fieldref           #144.#379     // org/apache/commons/codec/language/bm/RuleType.RULES:Lorg/apache/commons/codec/language/bm/RuleType;\n+  #152 = Methodref          #144.#365     // org/apache/commons/codec/language/bm/RuleType.equals:(Ljava/lang/Object;)Z\n+  #153 = String             #380          // common\n+  #154 = Methodref          #381.#382     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+  #155 = Class              #383          // org/apache/commons/codec/language/bm/Rule$RPattern\n   #156 = Utf8               RPattern\n   #157 = Utf8               InnerClasses\n   #158 = Utf8               PhonemeList\n-  #159 = Class              #396          // org/apache/commons/codec/language/bm/Rule$PhonemeExpr\n+  #159 = Class              #384          // org/apache/commons/codec/language/bm/Rule$PhonemeExpr\n   #160 = Utf8               PhonemeExpr\n   #161 = Utf8               Phoneme\n   #162 = Utf8               ALL_STRINGS_RMATCHER\n   #163 = Utf8               Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n   #164 = Utf8               ALL\n   #165 = Utf8               Ljava/lang/String;\n   #166 = Utf8               ConstantValue\n@@ -191,312 +191,300 @@\n   #181 = Utf8               Code\n   #182 = Utf8               LineNumberTable\n   #183 = Utf8               StackMapTable\n   #184 = Utf8               createResourceName\n   #185 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n   #186 = Utf8               createScanner\n   #187 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n-  #188 = Class              #288          // java/lang/String\n-  #189 = Class              #397          // java/io/InputStream\n-  #190 = Utf8               (Ljava/lang/String;)Ljava/util/Scanner;\n-  #191 = Utf8               endsWith\n-  #192 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-  #193 = Utf8               getInstance\n-  #194 = Class              #398          // org/apache/commons/codec/language/bm/Languages$LanguageSet\n-  #195 = Utf8               LanguageSet\n-  #196 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n-  #197 = Class              #300          // java/util/Map\n-  #198 = Class              #285          // java/util/List\n-  #199 = Class              #399          // java/util/Iterator\n-  #200 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n-  #201 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List;\n-  #202 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n-  #203 = Utf8               getInstanceMap\n-  #204 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n-  #205 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n-  #206 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n-  #207 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n-  #208 = Utf8               parsePhoneme\n-  #209 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n-  #210 = Utf8               parsePhonemeExpr\n-  #211 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #212 = Class              #400          // \"[Ljava/lang/String;\"\n-  #213 = Utf8               parseRules\n-  #214 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n-  #215 = Class              #272          // java/util/Scanner\n-  #216 = Class              #401          // java/lang/Throwable\n-  #217 = Class              #396          // org/apache/commons/codec/language/bm/Rule$PhonemeExpr\n-  #218 = Class              #331          // org/apache/commons/codec/language/bm/Rule\n-  #219 = Class              #265          // java/lang/IllegalArgumentException\n-  #220 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n-  #221 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #222 = Utf8               startsWith\n-  #223 = Utf8               stripQuotes\n-  #224 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #225 = Utf8               <init>\n-  #226 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;)V\n-  #227 = Utf8               getLContext\n-  #228 = Utf8               ()Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #229 = Utf8               getPattern\n-  #230 = Utf8               ()Ljava/lang/String;\n-  #231 = Utf8               getPhoneme\n-  #232 = Utf8               ()Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #233 = Utf8               getRContext\n-  #234 = Utf8               patternAndContextMatches\n-  #235 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #236 = Utf8               access$100\n-  #237 = Utf8               access$200\n-  #238 = Utf8               access$300\n-  #239 = Utf8               <clinit>\n-  #240 = Utf8               ()V\n-  #241 = Class              #402          // \"[Lorg/apache/commons/codec/language/bm/NameType;\"\n-  #242 = Class              #381          // org/apache/commons/codec/language/bm/NameType\n-  #243 = Class              #403          // \"[Lorg/apache/commons/codec/language/bm/RuleType;\"\n-  #244 = Class              #384          // org/apache/commons/codec/language/bm/RuleType\n-  #245 = Class              #260          // org/apache/commons/codec/language/bm/Languages\n-  #246 = Class              #354          // java/lang/IllegalStateException\n-  #247 = Utf8               SourceFile\n-  #248 = Utf8               Rule.java\n-  #249 = NameAndType        #179:#180     // contains:(Ljava/lang/CharSequence;C)Z\n-  #250 = NameAndType        #191:#192     // endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-  #251 = NameAndType        #222:#192     // startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n-  #252 = Class              #404          // java/lang/CharSequence\n-  #253 = NameAndType        #405:#406     // length:()I\n-  #254 = NameAndType        #407:#408     // charAt:(I)C\n-  #255 = Utf8               org/apache/commons/codec/language/bm/%s_%s_%s.txt\n-  #256 = Utf8               java/lang/Object\n-  #257 = NameAndType        #409:#230     // getName:()Ljava/lang/String;\n-  #258 = NameAndType        #410:#411     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #259 = NameAndType        #184:#185     // createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n-  #260 = Utf8               org/apache/commons/codec/language/bm/Languages\n-  #261 = Class              #412          // java/lang/Class\n-  #262 = NameAndType        #413:#414     // getClassLoader:()Ljava/lang/ClassLoader;\n-  #263 = Class              #415          // java/lang/ClassLoader\n-  #264 = NameAndType        #416:#417     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #265 = Utf8               java/lang/IllegalArgumentException\n-  #266 = Utf8               java/lang/StringBuilder\n-  #267 = NameAndType        #225:#240     // \"<init>\":()V\n-  #268 = Utf8               Unable to load resource:\n-  #269 = NameAndType        #418:#419     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #270 = NameAndType        #420:#230     // toString:()Ljava/lang/String;\n-  #271 = NameAndType        #225:#421     // \"<init>\":(Ljava/lang/String;)V\n-  #272 = Utf8               java/util/Scanner\n-  #273 = Utf8               org/apache/commons/codec/language/bm/ResourceConstants\n-  #274 = Utf8               UTF-8\n-  #275 = NameAndType        #225:#422     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #276 = Utf8               org/apache/commons/codec/language/bm/%s.txt\n-  #277 = NameAndType        #203:#204     // getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n-  #278 = Utf8               java/util/ArrayList\n-  #279 = NameAndType        #423:#424     // values:()Ljava/util/Collection;\n-  #280 = Class              #425          // java/util/Collection\n-  #281 = NameAndType        #426:#427     // iterator:()Ljava/util/Iterator;\n-  #282 = Class              #399          // java/util/Iterator\n-  #283 = NameAndType        #428:#429     // hasNext:()Z\n-  #284 = NameAndType        #430:#431     // next:()Ljava/lang/Object;\n-  #285 = Utf8               java/util/List\n-  #286 = NameAndType        #432:#433     // addAll:(Ljava/util/Collection;)Z\n-  #287 = Utf8               java/util/HashSet\n-  #288 = Utf8               java/lang/String\n-  #289 = Class              #434          // java/util/Arrays\n-  #290 = NameAndType        #435:#436     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #291 = NameAndType        #225:#437     // \"<init>\":(Ljava/util/Collection;)V\n-  #292 = NameAndType        #438:#439     // from:(Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-  #293 = NameAndType        #193:#196     // getInstance:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n-  #294 = NameAndType        #440:#429     // isSingleton:()Z\n-  #295 = NameAndType        #441:#230     // getAny:()Ljava/lang/String;\n-  #296 = NameAndType        #203:#206     // getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n-  #297 = Utf8               any\n-  #298 = NameAndType        #170:#171     // RULES:Ljava/util/Map;\n-  #299 = NameAndType        #442:#443     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #300 = Utf8               java/util/Map\n-  #301 = Utf8               No rules found for %s, %s, %s.\n-  #302 = Utf8               [\n-  #303 = NameAndType        #444:#445     // indexOf:(Ljava/lang/String;)I\n-  #304 = Utf8               ]\n-  #305 = NameAndType        #191:#446     // endsWith:(Ljava/lang/String;)Z\n-  #306 = Utf8               Phoneme expression contains a \\'[\\' but does not end in \\']\\'\n-  #307 = NameAndType        #447:#448     // substring:(II)Ljava/lang/String;\n-  #308 = Utf8               [+]\n-  #309 = NameAndType        #449:#450     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #310 = Utf8               org/apache/commons/codec/language/bm/Rule$Phoneme\n-  #311 = NameAndType        #225:#451     // \"<init>\":(Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n-  #312 = NameAndType        #452:#453     // ANY_LANGUAGE:Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-  #313 = Utf8               (\n-  #314 = NameAndType        #222:#446     // startsWith:(Ljava/lang/String;)Z\n-  #315 = Utf8               )\n-  #316 = Utf8               Phoneme starts with \\'(\\' so must end with \\')\\'\n-  #317 = Utf8               [|]\n-  #318 = NameAndType        #208:#209     // parsePhoneme:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n-  #319 = NameAndType        #454:#455     // add:(Ljava/lang/Object;)Z\n-  #320 = Utf8               |\n-  #321 = Utf8\n-  #322 = Utf8               org/apache/commons/codec/language/bm/Rule$PhonemeList\n-  #323 = NameAndType        #225:#456     // \"<init>\":(Ljava/util/List;)V\n-  #324 = Utf8               java/util/HashMap\n-  #325 = NameAndType        #457:#429     // hasNextLine:()Z\n-  #326 = NameAndType        #458:#230     // nextLine:()Ljava/lang/String;\n-  #327 = Utf8               */\n-  #328 = Utf8               /*\n-  #329 = Utf8               //\n-  #330 = NameAndType        #459:#230     // trim:()Ljava/lang/String;\n-  #331 = Utf8               org/apache/commons/codec/language/bm/Rule\n-  #332 = Utf8               #include\n-  #333 = NameAndType        #447:#460     // substring:(I)Ljava/lang/String;\n-  #334 = Utf8\n-  #335 = NameAndType        #179:#461     // contains:(Ljava/lang/CharSequence;)Z\n-  #336 = Utf8               Malformed import statement \\'\n-  #337 = Utf8               \\' in\n-  #338 = NameAndType        #186:#190     // createScanner:(Ljava/lang/String;)Ljava/util/Scanner;\n-  #339 = Utf8               ->\n-  #340 = NameAndType        #213:#214     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n-  #341 = NameAndType        #462:#463     // putAll:(Ljava/util/Map;)V\n-  #342 = NameAndType        #464:#240     // close:()V\n-  #343 = Utf8               \\\\s+\n-  #344 = Utf8               Malformed rule statement split into\n-  #345 = NameAndType        #418:#465     // append:(I)Ljava/lang/StringBuilder;\n-  #346 = Utf8                parts:\n-  #347 = Utf8                in\n-  #348 = NameAndType        #223:#224     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-  #349 = NameAndType        #210:#211     // parsePhonemeExpr:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #350 = Utf8               org/apache/commons/codec/language/bm/Rule$2\n-  #351 = NameAndType        #225:#466     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #352 = NameAndType        #175:#165     // pattern:Ljava/lang/String;\n-  #353 = NameAndType        #467:#468     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #354 = Utf8               java/lang/IllegalStateException\n-  #355 = Utf8               Problem parsing line \\'\n-  #356 = NameAndType        #225:#469     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #357 = Utf8               ^\n-  #358 = Utf8               $\n-  #359 = Utf8               org/apache/commons/codec/language/bm/Rule$3\n-  #360 = Utf8               org/apache/commons/codec/language/bm/Rule$4\n-  #361 = NameAndType        #162:#163     // ALL_STRINGS_RMATCHER:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #362 = Utf8               org/apache/commons/codec/language/bm/Rule$5\n-  #363 = Utf8               org/apache/commons/codec/language/bm/Rule$6\n-  #364 = Utf8               org/apache/commons/codec/language/bm/Rule$7\n-  #365 = NameAndType        #225:#470     // \"<init>\":(Ljava/lang/String;Z)V\n-  #366 = Utf8               org/apache/commons/codec/language/bm/Rule$8\n-  #367 = Utf8               org/apache/commons/codec/language/bm/Rule$9\n-  #368 = Utf8               org/apache/commons/codec/language/bm/Rule$10\n-  #369 = Utf8               \\\"\n-  #370 = NameAndType        #175:#221     // pattern:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #371 = NameAndType        #174:#163     // lContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #372 = NameAndType        #178:#163     // rContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n-  #373 = NameAndType        #176:#177     // phoneme:Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n-  #374 = Utf8               java/lang/IndexOutOfBoundsException\n-  #375 = Utf8               Can not match pattern at negative indexes\n-  #376 = NameAndType        #471:#472     // subSequence:(II)Ljava/lang/CharSequence;\n-  #377 = NameAndType        #473:#455     // equals:(Ljava/lang/Object;)Z\n-  #378 = NameAndType        #474:#461     // isMatch:(Ljava/lang/CharSequence;)Z\n-  #379 = Utf8               org/apache/commons/codec/language/bm/Rule$1\n-  #380 = Utf8               java/util/EnumMap\n-  #381 = Utf8               org/apache/commons/codec/language/bm/NameType\n-  #382 = NameAndType        #225:#475     // \"<init>\":(Ljava/lang/Class;)V\n-  #383 = NameAndType        #423:#476     // values:()[Lorg/apache/commons/codec/language/bm/NameType;\n-  #384 = Utf8               org/apache/commons/codec/language/bm/RuleType\n-  #385 = NameAndType        #423:#477     // values:()[Lorg/apache/commons/codec/language/bm/RuleType;\n-  #386 = NameAndType        #193:#478     // getInstance:(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n-  #387 = NameAndType        #479:#480     // getLanguages:()Ljava/util/Set;\n-  #388 = Class              #481          // java/util/Set\n-  #389 = NameAndType        #186:#187     // createScanner:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n-  #390 = Utf8               Problem processing\n-  #391 = NameAndType        #170:#482     // RULES:Lorg/apache/commons/codec/language/bm/RuleType;\n-  #392 = Utf8               common\n-  #393 = Class              #483          // java/util/Collections\n-  #394 = NameAndType        #484:#485     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-  #395 = Utf8               org/apache/commons/codec/language/bm/Rule$RPattern\n-  #396 = Utf8               org/apache/commons/codec/language/bm/Rule$PhonemeExpr\n-  #397 = Utf8               java/io/InputStream\n-  #398 = Utf8               org/apache/commons/codec/language/bm/Languages$LanguageSet\n-  #399 = Utf8               java/util/Iterator\n-  #400 = Utf8               [Ljava/lang/String;\n-  #401 = Utf8               java/lang/Throwable\n-  #402 = Utf8               [Lorg/apache/commons/codec/language/bm/NameType;\n-  #403 = Utf8               [Lorg/apache/commons/codec/language/bm/RuleType;\n-  #404 = Utf8               java/lang/CharSequence\n-  #405 = Utf8               length\n-  #406 = Utf8               ()I\n-  #407 = Utf8               charAt\n-  #408 = Utf8               (I)C\n-  #409 = Utf8               getName\n-  #410 = Utf8               format\n-  #411 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #412 = Utf8               java/lang/Class\n-  #413 = Utf8               getClassLoader\n-  #414 = Utf8               ()Ljava/lang/ClassLoader;\n-  #415 = Utf8               java/lang/ClassLoader\n-  #416 = Utf8               getResourceAsStream\n-  #417 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #418 = Utf8               append\n-  #419 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #420 = Utf8               toString\n-  #421 = Utf8               (Ljava/lang/String;)V\n-  #422 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #423 = Utf8               values\n-  #424 = Utf8               ()Ljava/util/Collection;\n-  #425 = Utf8               java/util/Collection\n-  #426 = Utf8               iterator\n-  #427 = Utf8               ()Ljava/util/Iterator;\n-  #428 = Utf8               hasNext\n-  #429 = Utf8               ()Z\n-  #430 = Utf8               next\n-  #431 = Utf8               ()Ljava/lang/Object;\n-  #432 = Utf8               addAll\n-  #433 = Utf8               (Ljava/util/Collection;)Z\n-  #434 = Utf8               java/util/Arrays\n-  #435 = Utf8               asList\n-  #436 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #437 = Utf8               (Ljava/util/Collection;)V\n-  #438 = Utf8               from\n-  #439 = Utf8               (Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-  #440 = Utf8               isSingleton\n-  #441 = Utf8               getAny\n-  #442 = Utf8               get\n-  #443 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #444 = Utf8               indexOf\n-  #445 = Utf8               (Ljava/lang/String;)I\n-  #446 = Utf8               (Ljava/lang/String;)Z\n-  #447 = Utf8               substring\n-  #448 = Utf8               (II)Ljava/lang/String;\n-  #449 = Utf8               split\n-  #450 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #451 = Utf8               (Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n-  #452 = Utf8               ANY_LANGUAGE\n-  #453 = Utf8               Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n-  #454 = Utf8               add\n-  #455 = Utf8               (Ljava/lang/Object;)Z\n-  #456 = Utf8               (Ljava/util/List;)V\n-  #457 = Utf8               hasNextLine\n-  #458 = Utf8               nextLine\n-  #459 = Utf8               trim\n-  #460 = Utf8               (I)Ljava/lang/String;\n-  #461 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #462 = Utf8               putAll\n-  #463 = Utf8               (Ljava/util/Map;)V\n-  #464 = Utf8               close\n-  #465 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #466 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #467 = Utf8               put\n-  #468 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #469 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #470 = Utf8               (Ljava/lang/String;Z)V\n-  #471 = Utf8               subSequence\n-  #472 = Utf8               (II)Ljava/lang/CharSequence;\n-  #473 = Utf8               equals\n-  #474 = Utf8               isMatch\n-  #475 = Utf8               (Ljava/lang/Class;)V\n-  #476 = Utf8               ()[Lorg/apache/commons/codec/language/bm/NameType;\n-  #477 = Utf8               ()[Lorg/apache/commons/codec/language/bm/RuleType;\n-  #478 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n-  #479 = Utf8               getLanguages\n-  #480 = Utf8               ()Ljava/util/Set;\n-  #481 = Utf8               java/util/Set\n-  #482 = Utf8               Lorg/apache/commons/codec/language/bm/RuleType;\n-  #483 = Utf8               java/util/Collections\n-  #484 = Utf8               unmodifiableMap\n-  #485 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n+  #188 = Class              #385          // java/io/InputStream\n+  #189 = Utf8               (Ljava/lang/String;)Ljava/util/Scanner;\n+  #190 = Utf8               endsWith\n+  #191 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #192 = Utf8               getInstance\n+  #193 = Class              #386          // org/apache/commons/codec/language/bm/Languages$LanguageSet\n+  #194 = Utf8               LanguageSet\n+  #195 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n+  #196 = Class              #387          // java/util/Iterator\n+  #197 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n+  #198 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List;\n+  #199 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n+  #200 = Utf8               getInstanceMap\n+  #201 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n+  #202 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+  #203 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n+  #204 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+  #205 = Utf8               parsePhoneme\n+  #206 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n+  #207 = Utf8               parsePhonemeExpr\n+  #208 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #209 = Class              #388          // \"[Ljava/lang/String;\"\n+  #210 = Utf8               parseRules\n+  #211 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n+  #212 = Class              #389          // java/lang/Throwable\n+  #213 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+  #214 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #215 = Utf8               startsWith\n+  #216 = Utf8               stripQuotes\n+  #217 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #218 = Utf8               <init>\n+  #219 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;)V\n+  #220 = Utf8               getLContext\n+  #221 = Utf8               ()Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #222 = Utf8               getPattern\n+  #223 = Utf8               ()Ljava/lang/String;\n+  #224 = Utf8               getPhoneme\n+  #225 = Utf8               ()Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #226 = Utf8               getRContext\n+  #227 = Utf8               patternAndContextMatches\n+  #228 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #229 = Utf8               access$100\n+  #230 = Utf8               access$200\n+  #231 = Utf8               access$300\n+  #232 = Utf8               <clinit>\n+  #233 = Utf8               ()V\n+  #234 = Class              #390          // \"[Lorg/apache/commons/codec/language/bm/NameType;\"\n+  #235 = Class              #391          // \"[Lorg/apache/commons/codec/language/bm/RuleType;\"\n+  #236 = Utf8               SourceFile\n+  #237 = Utf8               Rule.java\n+  #238 = NameAndType        #179:#180     // contains:(Ljava/lang/CharSequence;C)Z\n+  #239 = NameAndType        #190:#191     // endsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #240 = NameAndType        #215:#191     // startsWith:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z\n+  #241 = Class              #392          // java/lang/CharSequence\n+  #242 = NameAndType        #393:#394     // length:()I\n+  #243 = NameAndType        #395:#396     // charAt:(I)C\n+  #244 = Utf8               org/apache/commons/codec/language/bm/%s_%s_%s.txt\n+  #245 = Utf8               java/lang/Object\n+  #246 = NameAndType        #397:#223     // getName:()Ljava/lang/String;\n+  #247 = NameAndType        #398:#399     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #248 = NameAndType        #184:#185     // createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n+  #249 = Utf8               org/apache/commons/codec/language/bm/Languages\n+  #250 = Class              #400          // java/lang/Class\n+  #251 = NameAndType        #401:#402     // getClassLoader:()Ljava/lang/ClassLoader;\n+  #252 = Class              #403          // java/lang/ClassLoader\n+  #253 = NameAndType        #404:#405     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #254 = Utf8               java/lang/IllegalArgumentException\n+  #255 = Utf8               java/lang/StringBuilder\n+  #256 = NameAndType        #218:#233     // \"<init>\":()V\n+  #257 = Utf8               Unable to load resource:\n+  #258 = NameAndType        #406:#407     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #259 = NameAndType        #408:#223     // toString:()Ljava/lang/String;\n+  #260 = NameAndType        #218:#409     // \"<init>\":(Ljava/lang/String;)V\n+  #261 = Utf8               java/util/Scanner\n+  #262 = Utf8               org/apache/commons/codec/language/bm/ResourceConstants\n+  #263 = Utf8               UTF-8\n+  #264 = NameAndType        #218:#410     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #265 = Utf8               org/apache/commons/codec/language/bm/%s.txt\n+  #266 = NameAndType        #200:#201     // getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n+  #267 = Utf8               java/util/ArrayList\n+  #268 = NameAndType        #411:#412     // values:()Ljava/util/Collection;\n+  #269 = Class              #413          // java/util/Collection\n+  #270 = NameAndType        #414:#415     // iterator:()Ljava/util/Iterator;\n+  #271 = NameAndType        #416:#417     // hasNext:()Z\n+  #272 = NameAndType        #418:#419     // next:()Ljava/lang/Object;\n+  #273 = Utf8               java/util/List\n+  #274 = NameAndType        #420:#421     // addAll:(Ljava/util/Collection;)Z\n+  #275 = Utf8               java/util/HashSet\n+  #276 = Utf8               java/lang/String\n+  #277 = Class              #422          // java/util/Arrays\n+  #278 = NameAndType        #423:#424     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #279 = NameAndType        #218:#425     // \"<init>\":(Ljava/util/Collection;)V\n+  #280 = NameAndType        #426:#427     // from:(Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+  #281 = NameAndType        #192:#195     // getInstance:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n+  #282 = NameAndType        #428:#417     // isSingleton:()Z\n+  #283 = NameAndType        #429:#223     // getAny:()Ljava/lang/String;\n+  #284 = NameAndType        #200:#203     // getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n+  #285 = Utf8               any\n+  #286 = NameAndType        #170:#171     // RULES:Ljava/util/Map;\n+  #287 = NameAndType        #430:#431     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #288 = Utf8               java/util/Map\n+  #289 = Utf8               No rules found for %s, %s, %s.\n+  #290 = Utf8               [\n+  #291 = NameAndType        #432:#433     // indexOf:(Ljava/lang/String;)I\n+  #292 = Utf8               ]\n+  #293 = NameAndType        #190:#434     // endsWith:(Ljava/lang/String;)Z\n+  #294 = Utf8               Phoneme expression contains a \\'[\\' but does not end in \\']\\'\n+  #295 = NameAndType        #435:#436     // substring:(II)Ljava/lang/String;\n+  #296 = Utf8               [+]\n+  #297 = NameAndType        #437:#438     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #298 = Utf8               org/apache/commons/codec/language/bm/Rule$Phoneme\n+  #299 = NameAndType        #218:#439     // \"<init>\":(Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n+  #300 = NameAndType        #440:#441     // ANY_LANGUAGE:Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+  #301 = Utf8               (\n+  #302 = NameAndType        #215:#434     // startsWith:(Ljava/lang/String;)Z\n+  #303 = Utf8               )\n+  #304 = Utf8               Phoneme starts with \\'(\\' so must end with \\')\\'\n+  #305 = Utf8               [|]\n+  #306 = NameAndType        #205:#206     // parsePhoneme:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n+  #307 = NameAndType        #442:#443     // add:(Ljava/lang/Object;)Z\n+  #308 = Utf8               |\n+  #309 = Utf8\n+  #310 = Utf8               org/apache/commons/codec/language/bm/Rule$PhonemeList\n+  #311 = NameAndType        #218:#444     // \"<init>\":(Ljava/util/List;)V\n+  #312 = Utf8               java/util/HashMap\n+  #313 = NameAndType        #445:#417     // hasNextLine:()Z\n+  #314 = NameAndType        #446:#223     // nextLine:()Ljava/lang/String;\n+  #315 = Utf8               */\n+  #316 = Utf8               /*\n+  #317 = Utf8               //\n+  #318 = NameAndType        #447:#223     // trim:()Ljava/lang/String;\n+  #319 = Utf8               org/apache/commons/codec/language/bm/Rule\n+  #320 = Utf8               #include\n+  #321 = NameAndType        #435:#448     // substring:(I)Ljava/lang/String;\n+  #322 = Utf8\n+  #323 = NameAndType        #179:#449     // contains:(Ljava/lang/CharSequence;)Z\n+  #324 = Utf8               Malformed import statement \\'\n+  #325 = Utf8               \\' in\n+  #326 = NameAndType        #186:#189     // createScanner:(Ljava/lang/String;)Ljava/util/Scanner;\n+  #327 = Utf8               ->\n+  #328 = NameAndType        #210:#211     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n+  #329 = NameAndType        #450:#451     // putAll:(Ljava/util/Map;)V\n+  #330 = NameAndType        #452:#233     // close:()V\n+  #331 = Utf8               \\\\s+\n+  #332 = Utf8               Malformed rule statement split into\n+  #333 = NameAndType        #406:#453     // append:(I)Ljava/lang/StringBuilder;\n+  #334 = Utf8                parts:\n+  #335 = Utf8                in\n+  #336 = NameAndType        #216:#217     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #337 = NameAndType        #207:#208     // parsePhonemeExpr:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #338 = Utf8               org/apache/commons/codec/language/bm/Rule$2\n+  #339 = NameAndType        #218:#454     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #340 = NameAndType        #175:#165     // pattern:Ljava/lang/String;\n+  #341 = NameAndType        #455:#456     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #342 = Utf8               java/lang/IllegalStateException\n+  #343 = Utf8               Problem parsing line \\'\n+  #344 = NameAndType        #218:#457     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #345 = Utf8               ^\n+  #346 = Utf8               $\n+  #347 = Utf8               org/apache/commons/codec/language/bm/Rule$3\n+  #348 = Utf8               org/apache/commons/codec/language/bm/Rule$4\n+  #349 = NameAndType        #162:#163     // ALL_STRINGS_RMATCHER:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #350 = Utf8               org/apache/commons/codec/language/bm/Rule$5\n+  #351 = Utf8               org/apache/commons/codec/language/bm/Rule$6\n+  #352 = Utf8               org/apache/commons/codec/language/bm/Rule$7\n+  #353 = NameAndType        #218:#458     // \"<init>\":(Ljava/lang/String;Z)V\n+  #354 = Utf8               org/apache/commons/codec/language/bm/Rule$8\n+  #355 = Utf8               org/apache/commons/codec/language/bm/Rule$9\n+  #356 = Utf8               org/apache/commons/codec/language/bm/Rule$10\n+  #357 = Utf8               \\\"\n+  #358 = NameAndType        #175:#214     // pattern:(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #359 = NameAndType        #174:#163     // lContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #360 = NameAndType        #178:#163     // rContext:Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n+  #361 = NameAndType        #176:#177     // phoneme:Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;\n+  #362 = Utf8               java/lang/IndexOutOfBoundsException\n+  #363 = Utf8               Can not match pattern at negative indexes\n+  #364 = NameAndType        #459:#460     // subSequence:(II)Ljava/lang/CharSequence;\n+  #365 = NameAndType        #461:#443     // equals:(Ljava/lang/Object;)Z\n+  #366 = NameAndType        #462:#449     // isMatch:(Ljava/lang/CharSequence;)Z\n+  #367 = Utf8               org/apache/commons/codec/language/bm/Rule$1\n+  #368 = Utf8               java/util/EnumMap\n+  #369 = Utf8               org/apache/commons/codec/language/bm/NameType\n+  #370 = NameAndType        #218:#463     // \"<init>\":(Ljava/lang/Class;)V\n+  #371 = NameAndType        #411:#464     // values:()[Lorg/apache/commons/codec/language/bm/NameType;\n+  #372 = Utf8               org/apache/commons/codec/language/bm/RuleType\n+  #373 = NameAndType        #411:#465     // values:()[Lorg/apache/commons/codec/language/bm/RuleType;\n+  #374 = NameAndType        #192:#466     // getInstance:(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n+  #375 = NameAndType        #467:#468     // getLanguages:()Ljava/util/Set;\n+  #376 = Class              #469          // java/util/Set\n+  #377 = NameAndType        #186:#187     // createScanner:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n+  #378 = Utf8               Problem processing\n+  #379 = NameAndType        #170:#470     // RULES:Lorg/apache/commons/codec/language/bm/RuleType;\n+  #380 = Utf8               common\n+  #381 = Class              #471          // java/util/Collections\n+  #382 = NameAndType        #472:#473     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+  #383 = Utf8               org/apache/commons/codec/language/bm/Rule$RPattern\n+  #384 = Utf8               org/apache/commons/codec/language/bm/Rule$PhonemeExpr\n+  #385 = Utf8               java/io/InputStream\n+  #386 = Utf8               org/apache/commons/codec/language/bm/Languages$LanguageSet\n+  #387 = Utf8               java/util/Iterator\n+  #388 = Utf8               [Ljava/lang/String;\n+  #389 = Utf8               java/lang/Throwable\n+  #390 = Utf8               [Lorg/apache/commons/codec/language/bm/NameType;\n+  #391 = Utf8               [Lorg/apache/commons/codec/language/bm/RuleType;\n+  #392 = Utf8               java/lang/CharSequence\n+  #393 = Utf8               length\n+  #394 = Utf8               ()I\n+  #395 = Utf8               charAt\n+  #396 = Utf8               (I)C\n+  #397 = Utf8               getName\n+  #398 = Utf8               format\n+  #399 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #400 = Utf8               java/lang/Class\n+  #401 = Utf8               getClassLoader\n+  #402 = Utf8               ()Ljava/lang/ClassLoader;\n+  #403 = Utf8               java/lang/ClassLoader\n+  #404 = Utf8               getResourceAsStream\n+  #405 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #406 = Utf8               append\n+  #407 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #408 = Utf8               toString\n+  #409 = Utf8               (Ljava/lang/String;)V\n+  #410 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #411 = Utf8               values\n+  #412 = Utf8               ()Ljava/util/Collection;\n+  #413 = Utf8               java/util/Collection\n+  #414 = Utf8               iterator\n+  #415 = Utf8               ()Ljava/util/Iterator;\n+  #416 = Utf8               hasNext\n+  #417 = Utf8               ()Z\n+  #418 = Utf8               next\n+  #419 = Utf8               ()Ljava/lang/Object;\n+  #420 = Utf8               addAll\n+  #421 = Utf8               (Ljava/util/Collection;)Z\n+  #422 = Utf8               java/util/Arrays\n+  #423 = Utf8               asList\n+  #424 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #425 = Utf8               (Ljava/util/Collection;)V\n+  #426 = Utf8               from\n+  #427 = Utf8               (Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+  #428 = Utf8               isSingleton\n+  #429 = Utf8               getAny\n+  #430 = Utf8               get\n+  #431 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #432 = Utf8               indexOf\n+  #433 = Utf8               (Ljava/lang/String;)I\n+  #434 = Utf8               (Ljava/lang/String;)Z\n+  #435 = Utf8               substring\n+  #436 = Utf8               (II)Ljava/lang/String;\n+  #437 = Utf8               split\n+  #438 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #439 = Utf8               (Ljava/lang/CharSequence;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)V\n+  #440 = Utf8               ANY_LANGUAGE\n+  #441 = Utf8               Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n+  #442 = Utf8               add\n+  #443 = Utf8               (Ljava/lang/Object;)Z\n+  #444 = Utf8               (Ljava/util/List;)V\n+  #445 = Utf8               hasNextLine\n+  #446 = Utf8               nextLine\n+  #447 = Utf8               trim\n+  #448 = Utf8               (I)Ljava/lang/String;\n+  #449 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #450 = Utf8               putAll\n+  #451 = Utf8               (Ljava/util/Map;)V\n+  #452 = Utf8               close\n+  #453 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #454 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #455 = Utf8               put\n+  #456 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #457 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #458 = Utf8               (Ljava/lang/String;Z)V\n+  #459 = Utf8               subSequence\n+  #460 = Utf8               (II)Ljava/lang/CharSequence;\n+  #461 = Utf8               equals\n+  #462 = Utf8               isMatch\n+  #463 = Utf8               (Ljava/lang/Class;)V\n+  #464 = Utf8               ()[Lorg/apache/commons/codec/language/bm/NameType;\n+  #465 = Utf8               ()[Lorg/apache/commons/codec/language/bm/RuleType;\n+  #466 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;\n+  #467 = Utf8               getLanguages\n+  #468 = Utf8               ()Ljava/util/Set;\n+  #469 = Utf8               java/util/Set\n+  #470 = Utf8               Lorg/apache/commons/codec/language/bm/RuleType;\n+  #471 = Utf8               java/util/Collections\n+  #472 = Utf8               unmodifiableMap\n+  #473 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n {\n   public static final org.apache.commons.codec.language.bm.Rule$RPattern ALL_STRINGS_RMATCHER;\n     descriptor: Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.String ALL = \"ALL\";\n     descriptor: Ljava/lang/String;\n@@ -791,15 +779,15 @@\n         line 313: 64\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n           offset_delta = 29\n           locals = [ class java/util/Map, class java/util/List, class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 34\n-    Signature: #200                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n+    Signature: #197                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n \n   public static java.util.List<org.apache.commons.codec.language.bm.Rule> getInstance(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String);\n     descriptor: (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=3, args_size=3\n          0: aload_0\n@@ -815,15 +803,15 @@\n         14: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         17: invokespecial #39                 // Method java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n         20: invokestatic  #40                 // Method org/apache/commons/codec/language/bm/Languages$LanguageSet.from:(Ljava/util/Set;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;\n         23: invokestatic  #41                 // Method getInstance:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;\n         26: areturn\n       LineNumberTable:\n         line 328: 0\n-    Signature: #202                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n+    Signature: #199                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;\n \n   public static java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> getInstanceMap(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, org.apache.commons.codec.language.bm.Languages$LanguageSet);\n     descriptor: (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n@@ -838,21 +826,21 @@\n         19: aload_0\n         20: aload_1\n         21: ldc           #45                 // String any\n         23: invokestatic  #44                 // Method getInstanceMap:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n         26: areturn\n       LineNumberTable:\n         line 345: 0\n-        line 346: 23\n+        line 346: 19\n         line 345: 26\n       StackMapTable: number_of_entries = 2\n         frame_type = 19 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/util/Map ]\n-    Signature: #205                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+    Signature: #202                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n \n   public static java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> getInstanceMap(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String);\n     descriptor: (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=7, locals=4, args_size=3\n          0: getstatic     #46                 // Field RULES:Ljava/util/Map;\n@@ -899,15 +887,15 @@\n         line 367: 48\n         line 366: 63\n         line 370: 70\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 70\n           locals = [ class java/util/Map ]\n-    Signature: #207                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+    Signature: #204                         // (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n \n   private static org.apache.commons.codec.language.bm.Rule$Phoneme parsePhoneme(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=1\n          0: aload_0\n@@ -1394,15 +1382,15 @@\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, int, int, class java/lang/String, class java/lang/String, int, class \"[Ljava/lang/String;\" ]\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 39\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, int, int ]\n           stack = []\n         frame_type = 2 /* same */\n-    Signature: #220                         // (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n+    Signature: #213                         // (Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lorg/apache/commons/codec/language/bm/Rule;>;>;\n \n   private static org.apache.commons.codec.language.bm.Rule$RPattern pattern(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=11, args_size=1\n          0: aload_0\n@@ -2134,18 +2122,18 @@\n }\n SourceFile: \"Rule.java\"\n InnerClasses:\n   public static #156= #155 of #81;        // RPattern=class org/apache/commons/codec/language/bm/Rule$RPattern of class org/apache/commons/codec/language/bm/Rule\n   public static final #158= #71 of #81;   // PhonemeList=class org/apache/commons/codec/language/bm/Rule$PhonemeList of class org/apache/commons/codec/language/bm/Rule\n   public static #160= #159 of #81;        // PhonemeExpr=class org/apache/commons/codec/language/bm/Rule$PhonemeExpr of class org/apache/commons/codec/language/bm/Rule\n   public static final #161= #59 of #81;   // Phoneme=class org/apache/commons/codec/language/bm/Rule$Phoneme of class org/apache/commons/codec/language/bm/Rule\n-  static #124;                            // class org/apache/commons/codec/language/bm/Rule$10\n-  static #122;                            // class org/apache/commons/codec/language/bm/Rule$9\n-  static #120;                            // class org/apache/commons/codec/language/bm/Rule$8\n-  static #118;                            // class org/apache/commons/codec/language/bm/Rule$7\n-  static #116;                            // class org/apache/commons/codec/language/bm/Rule$6\n-  static #114;                            // class org/apache/commons/codec/language/bm/Rule$5\n-  static #111;                            // class org/apache/commons/codec/language/bm/Rule$4\n-  static #109;                            // class org/apache/commons/codec/language/bm/Rule$3\n-  static #100;                            // class org/apache/commons/codec/language/bm/Rule$2\n-  static #138;                            // class org/apache/commons/codec/language/bm/Rule$1\n-  public static abstract #195= #194 of #12; // LanguageSet=class org/apache/commons/codec/language/bm/Languages$LanguageSet of class org/apache/commons/codec/language/bm/Languages\n+  #124;                                   // class org/apache/commons/codec/language/bm/Rule$10\n+  #122;                                   // class org/apache/commons/codec/language/bm/Rule$9\n+  #120;                                   // class org/apache/commons/codec/language/bm/Rule$8\n+  #118;                                   // class org/apache/commons/codec/language/bm/Rule$7\n+  #116;                                   // class org/apache/commons/codec/language/bm/Rule$6\n+  #114;                                   // class org/apache/commons/codec/language/bm/Rule$5\n+  #111;                                   // class org/apache/commons/codec/language/bm/Rule$4\n+  #109;                                   // class org/apache/commons/codec/language/bm/Rule$3\n+  #100;                                   // class org/apache/commons/codec/language/bm/Rule$2\n+  #138;                                   // class org/apache/commons/codec/language/bm/Rule$1\n+  public static abstract #194= #193 of #12; // LanguageSet=class org/apache/commons/codec/language/bm/Languages$LanguageSet of class org/apache/commons/codec/language/bm/Languages\n"}]}
