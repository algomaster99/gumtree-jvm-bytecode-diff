{"diffoscope-json-version": 1, "source1": "first/XPathExpressionEngine.class", "source2": "second/XPathExpressionEngine.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,41 @@\n \n package org.apache.commons.configuration2.tree.xpath;\n \n-import org.apache.commons.jxpath.ri.model.NodePointerFactory;\n-import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;\n import java.util.Iterator;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.StringTokenizer;\n import java.util.LinkedList;\n import org.apache.commons.configuration2.tree.NodeAddData;\n import org.apache.commons.jxpath.JXPathContext;\n import java.util.Collections;\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.configuration2.tree.QueryResult;\n import java.util.List;\n import org.apache.commons.configuration2.tree.NodeHandler;\n+import org.apache.commons.jxpath.ri.model.NodePointerFactory;\n+import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;\n import org.apache.commons.configuration2.tree.ExpressionEngine;\n \n public class XPathExpressionEngine implements ExpressionEngine\n {\n     static final String PATH_DELIMITER = \"/\";\n     static final String ATTR_DELIMITER = \"@\";\n     private static final String NODE_PATH_DELIMITERS = \"/@\";\n     private static final String SPACE = \" \";\n     private static final int BUF_SIZE = 128;\n     private static final char START_INDEX = '[';\n     private static final char END_INDEX = ']';\n     private final XPathContextFactory contextFactory;\n     \n+    static {\n+        JXPathContextReferenceImpl.addNodePointerFactory((NodePointerFactory)new ConfigurationNodePointerFactory());\n+    }\n+    \n     public XPathExpressionEngine() {\n         this(new XPathContextFactory());\n     }\n     \n     XPathExpressionEngine(final XPathContextFactory factory) {\n         this.contextFactory = factory;\n     }\n@@ -201,12 +205,8 @@\n     \n     private static <T> QueryResult<T> createResult(final Object resObj) {\n         if (resObj instanceof QueryResult) {\n             return (QueryResult<T>)resObj;\n         }\n         return (QueryResult<T>)QueryResult.createNodeResult(resObj);\n     }\n-    \n-    static {\n-        JXPathContextReferenceImpl.addNodePointerFactory((NodePointerFactory)new ConfigurationNodePointerFactory());\n-    }\n }\n"}]}
