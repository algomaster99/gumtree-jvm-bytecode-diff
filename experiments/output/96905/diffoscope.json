{"diffoscope-json-version": 1, "source1": "first/PropertiesExpander.class", "source2": "second/PropertiesExpander.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,29 +1,23 @@\n \n package com.puppycrawl.tools.checkstyle;\n \n-import java.util.stream.Stream;\n-import java.util.stream.Collector;\n import java.util.stream.Collectors;\n-import java.util.Objects;\n import java.util.function.Function;\n import java.util.Properties;\n import java.util.Map;\n \n public final class PropertiesExpander implements PropertyResolver\n {\n     private final Map<String, String> values;\n     \n     public PropertiesExpander(final Properties properties) {\n         if (properties == null) {\n             throw new IllegalArgumentException(\"cannot pass null\");\n         }\n-        final Stream<Object> stream = properties.stringPropertyNames().stream();\n-        final Function<Object, Object> identity = Function.identity();\n-        Objects.requireNonNull(properties);\n-        this.values = stream.collect((Collector<? super Object, ?, Map<String, String>>)Collectors.toMap((Function<? super Object, ?>)identity, (Function<? super Object, ?>)properties::getProperty));\n+        this.values = properties.stringPropertyNames().stream().collect(Collectors.toMap((Function<? super Object, ? extends String>)Function.identity(), (Function<? super Object, ? extends String>)properties::getProperty));\n     }\n     \n     public String resolve(final String name) {\n         return this.values.get(name);\n     }\n }\n"}]}
