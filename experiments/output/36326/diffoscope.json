{"diffoscope-json-version": 1, "source1": "first/CRLFLineReader.class", "source2": "second/CRLFLineReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,93 +1,93 @@\n-  SHA-256 checksum 6545542addf7174744013f7053936c6b9cc4158a037d1768a2069b50a2846179\n+  SHA-256 checksum dd91b27c2a7919527d8f9a6197014839cdd390aad5d9512c300aadf6f15858f9\n   Compiled from \"CRLFLineReader.java\"\n public final class org.apache.commons.net.io.CRLFLineReader extends java.io.BufferedReader\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/net/io/CRLFLineReader\n-  super_class: #13                        // java/io/BufferedReader\n+  this_class: #13                         // org/apache/commons/net/io/CRLFLineReader\n+  super_class: #2                         // java/io/BufferedReader\n   interfaces: 0, fields: 2, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#47        // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #2 = Class              #48            // java/lang/StringBuilder\n-   #3 = Methodref          #2.#49         // java/lang/StringBuilder.\"<init>\":()V\n-   #4 = Fieldref           #7.#50         // org/apache/commons/net/io/CRLFLineReader.lock:Ljava/lang/Object;\n-   #5 = Methodref          #7.#51         // org/apache/commons/net/io/CRLFLineReader.read:()I\n-   #6 = Class              #52            // org/apache/commons/net/util/NetConstants\n-   #7 = Class              #53            // org/apache/commons/net/io/CRLFLineReader\n-   #8 = Methodref          #2.#54         // java/lang/StringBuilder.length:()I\n-   #9 = Methodref          #2.#55         // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n-  #10 = Methodref          #2.#56         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #2.#57         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #12 = Methodref          #42.#58        // java/lang/String.isEmpty:()Z\n-  #13 = Class              #59            // java/io/BufferedReader\n-  #14 = Utf8               LF\n-  #15 = Utf8               C\n-  #16 = Utf8               ConstantValue\n-  #17 = Integer            10\n-  #18 = Utf8               CR\n-  #19 = Integer            13\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (Ljava/io/Reader;)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               this\n-  #26 = Utf8               Lorg/apache/commons/net/io/CRLFLineReader;\n-  #27 = Utf8               reader\n-  #28 = Utf8               Ljava/io/Reader;\n-  #29 = Utf8               readLine\n-  #30 = Utf8               ()Ljava/lang/String;\n-  #31 = Utf8               intch\n-  #32 = Utf8               I\n-  #33 = Utf8               sb\n-  #34 = Utf8               Ljava/lang/StringBuilder;\n-  #35 = Utf8               prevWasCR\n-  #36 = Utf8               Z\n-  #37 = Utf8               string\n-  #38 = Utf8               Ljava/lang/String;\n-  #39 = Utf8               StackMapTable\n-  #40 = Class              #60            // java/lang/Object\n-  #41 = Class              #61            // java/lang/Throwable\n-  #42 = Class              #62            // java/lang/String\n-  #43 = Utf8               Exceptions\n-  #44 = Class              #63            // java/io/IOException\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               CRLFLineReader.java\n-  #47 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/Reader;)V\n-  #48 = Utf8               java/lang/StringBuilder\n-  #49 = NameAndType        #20:#64        // \"<init>\":()V\n-  #50 = NameAndType        #65:#66        // lock:Ljava/lang/Object;\n-  #51 = NameAndType        #67:#68        // read:()I\n-  #52 = Utf8               org/apache/commons/net/util/NetConstants\n-  #53 = Utf8               org/apache/commons/net/io/CRLFLineReader\n-  #54 = NameAndType        #69:#68        // length:()I\n-  #55 = NameAndType        #70:#71        // substring:(II)Ljava/lang/String;\n-  #56 = NameAndType        #72:#73        // append:(C)Ljava/lang/StringBuilder;\n-  #57 = NameAndType        #74:#30        // toString:()Ljava/lang/String;\n-  #58 = NameAndType        #75:#76        // isEmpty:()Z\n-  #59 = Utf8               java/io/BufferedReader\n-  #60 = Utf8               java/lang/Object\n-  #61 = Utf8               java/lang/Throwable\n-  #62 = Utf8               java/lang/String\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               ()V\n-  #65 = Utf8               lock\n-  #66 = Utf8               Ljava/lang/Object;\n-  #67 = Utf8               read\n-  #68 = Utf8               ()I\n-  #69 = Utf8               length\n-  #70 = Utf8               substring\n-  #71 = Utf8               (II)Ljava/lang/String;\n-  #72 = Utf8               append\n-  #73 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #74 = Utf8               toString\n-  #75 = Utf8               isEmpty\n-  #76 = Utf8               ()Z\n+   #1 = Methodref          #2.#3          // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #2 = Class              #4             // java/io/BufferedReader\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+   #4 = Utf8               java/io/BufferedReader\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/Reader;)V\n+   #7 = Class              #8             // java/lang/StringBuilder\n+   #8 = Utf8               java/lang/StringBuilder\n+   #9 = Methodref          #7.#10         // java/lang/StringBuilder.\"<init>\":()V\n+  #10 = NameAndType        #5:#11         // \"<init>\":()V\n+  #11 = Utf8               ()V\n+  #12 = Fieldref           #13.#14        // org/apache/commons/net/io/CRLFLineReader.lock:Ljava/lang/Object;\n+  #13 = Class              #15            // org/apache/commons/net/io/CRLFLineReader\n+  #14 = NameAndType        #16:#17        // lock:Ljava/lang/Object;\n+  #15 = Utf8               org/apache/commons/net/io/CRLFLineReader\n+  #16 = Utf8               lock\n+  #17 = Utf8               Ljava/lang/Object;\n+  #18 = Methodref          #13.#19        // org/apache/commons/net/io/CRLFLineReader.read:()I\n+  #19 = NameAndType        #20:#21        // read:()I\n+  #20 = Utf8               read\n+  #21 = Utf8               ()I\n+  #22 = Class              #23            // org/apache/commons/net/util/NetConstants\n+  #23 = Utf8               org/apache/commons/net/util/NetConstants\n+  #24 = Methodref          #7.#25         // java/lang/StringBuilder.length:()I\n+  #25 = NameAndType        #26:#21        // length:()I\n+  #26 = Utf8               length\n+  #27 = Methodref          #7.#28         // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+  #28 = NameAndType        #29:#30        // substring:(II)Ljava/lang/String;\n+  #29 = Utf8               substring\n+  #30 = Utf8               (II)Ljava/lang/String;\n+  #31 = Methodref          #7.#32         // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #32 = NameAndType        #33:#34        // append:(C)Ljava/lang/StringBuilder;\n+  #33 = Utf8               append\n+  #34 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #35 = Methodref          #7.#36         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #36 = NameAndType        #37:#38        // toString:()Ljava/lang/String;\n+  #37 = Utf8               toString\n+  #38 = Utf8               ()Ljava/lang/String;\n+  #39 = Methodref          #40.#41        // java/lang/String.isEmpty:()Z\n+  #40 = Class              #42            // java/lang/String\n+  #41 = NameAndType        #43:#44        // isEmpty:()Z\n+  #42 = Utf8               java/lang/String\n+  #43 = Utf8               isEmpty\n+  #44 = Utf8               ()Z\n+  #45 = Utf8               LF\n+  #46 = Utf8               C\n+  #47 = Utf8               ConstantValue\n+  #48 = Integer            10\n+  #49 = Utf8               CR\n+  #50 = Integer            13\n+  #51 = Utf8               Code\n+  #52 = Utf8               LineNumberTable\n+  #53 = Utf8               LocalVariableTable\n+  #54 = Utf8               this\n+  #55 = Utf8               Lorg/apache/commons/net/io/CRLFLineReader;\n+  #56 = Utf8               reader\n+  #57 = Utf8               Ljava/io/Reader;\n+  #58 = Utf8               readLine\n+  #59 = Utf8               intch\n+  #60 = Utf8               I\n+  #61 = Utf8               sb\n+  #62 = Utf8               Ljava/lang/StringBuilder;\n+  #63 = Utf8               prevWasCR\n+  #64 = Utf8               Z\n+  #65 = Utf8               string\n+  #66 = Utf8               Ljava/lang/String;\n+  #67 = Utf8               StackMapTable\n+  #68 = Class              #69            // java/lang/Object\n+  #69 = Utf8               java/lang/Object\n+  #70 = Class              #71            // java/lang/Throwable\n+  #71 = Utf8               java/lang/Throwable\n+  #72 = Utf8               Exceptions\n+  #73 = Class              #74            // java/io/IOException\n+  #74 = Utf8               java/io/IOException\n+  #75 = Utf8               SourceFile\n+  #76 = Utf8               CRLFLineReader.java\n {\n   private static final char LF = '\\n';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 10\n \n   private static final char CR = '\\r';\n@@ -113,72 +113,72 @@\n             0       6     1 reader   Ljava/io/Reader;\n \n   public java.lang.String readLine() throws java.io.IOException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=1\n-         0: new           #2                  // class java/lang/StringBuilder\n+         0: new           #7                  // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_3\n         10: aload_0\n-        11: getfield      #4                  // Field lock:Ljava/lang/Object;\n+        11: getfield      #12                 // Field lock:Ljava/lang/Object;\n         14: dup\n         15: astore        4\n         17: monitorenter\n         18: aload_0\n-        19: invokevirtual #5                  // Method read:()I\n+        19: invokevirtual #18                 // Method read:()I\n         22: dup\n         23: istore_2\n         24: iconst_m1\n         25: if_icmpeq     75\n         28: iload_3\n         29: ifeq          53\n         32: iload_2\n         33: bipush        10\n         35: if_icmpne     53\n         38: aload_1\n         39: iconst_0\n         40: aload_1\n-        41: invokevirtual #8                  // Method java/lang/StringBuilder.length:()I\n+        41: invokevirtual #24                 // Method java/lang/StringBuilder.length:()I\n         44: iconst_1\n         45: isub\n-        46: invokevirtual #9                  // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+        46: invokevirtual #27                 // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n         49: aload         4\n         51: monitorexit\n         52: areturn\n         53: iload_2\n         54: bipush        13\n         56: if_icmpne     63\n         59: iconst_1\n         60: goto          64\n         63: iconst_0\n         64: istore_3\n         65: aload_1\n         66: iload_2\n         67: i2c\n-        68: invokevirtual #10                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        68: invokevirtual #31                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         71: pop\n         72: goto          18\n         75: aload         4\n         77: monitorexit\n         78: goto          89\n         81: astore        5\n         83: aload         4\n         85: monitorexit\n         86: aload         5\n         88: athrow\n         89: aload_1\n-        90: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        90: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         93: astore        4\n         95: aload         4\n-        97: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z\n+        97: invokevirtual #39                 // Method java/lang/String.isEmpty:()Z\n        100: ifeq          105\n        103: aconst_null\n        104: areturn\n        105: aload         4\n        107: areturn\n       Exception table:\n          from    to  target type\n"}]}
