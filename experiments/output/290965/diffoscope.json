{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum 180633c3e7f293e9fe624a2eebf38c352d9213f581108983a2b16fe3cc2fb80c\n+  SHA-256 checksum 6009b81d4f5a2cc2645cfc2639f35d387197088d70d8938c4c0f34c2fcff2e12\n   Compiled from \"ThresholdingOutputStream.java\"\n public class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #25                         // org/apache/commons/io/output/ThresholdingOutputStream\n   super_class: #17                        // java/io/OutputStream\n   interfaces: 0, fields: 6, methods: 17, attributes: 3\n Constant pool:\n-    #1 = InterfaceMethodref #76.#77       // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n-    #2 = Fieldref           #25.#78       // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-    #3 = Methodref          #25.#79       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-    #4 = Methodref          #17.#80       // java/io/OutputStream.\"<init>\":()V\n-    #5 = Fieldref           #25.#81       // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-    #6 = Fieldref           #25.#82       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-    #7 = Fieldref           #25.#83       // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-    #8 = Fieldref           #25.#84       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-    #9 = Fieldref           #25.#85       // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-   #10 = Methodref          #25.#86       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-   #11 = Methodref          #25.#87       // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-   #12 = Class              #88           // java/io/IOException\n-   #13 = Methodref          #25.#89       // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-   #14 = Methodref          #17.#90       // java/io/OutputStream.close:()V\n-   #15 = Methodref          #17.#87       // java/io/OutputStream.flush:()V\n-   #16 = InterfaceMethodref #91.#92       // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = Class              #93           // java/io/OutputStream\n-   #18 = InterfaceMethodref #76.#94       // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #19 = Methodref          #25.#95       // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-   #20 = Methodref          #17.#96       // java/io/OutputStream.write:([B)V\n-   #21 = Methodref          #17.#97       // java/io/OutputStream.write:([BII)V\n-   #22 = Methodref          #17.#98       // java/io/OutputStream.write:(I)V\n-   #23 = Fieldref           #99.#100      // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-   #24 = InvokeDynamic      #0:#106       // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n-   #25 = Class              #107          // org/apache/commons/io/output/ThresholdingOutputStream\n+    #1 = InterfaceMethodref #46.#74       // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n+    #2 = Fieldref           #25.#75       // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+    #3 = Methodref          #25.#76       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+    #4 = Methodref          #17.#77       // java/io/OutputStream.\"<init>\":()V\n+    #5 = Fieldref           #25.#78       // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+    #6 = Fieldref           #25.#79       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+    #7 = Fieldref           #25.#80       // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+    #8 = Fieldref           #25.#81       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+    #9 = Fieldref           #25.#82       // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+   #10 = Methodref          #25.#83       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+   #11 = Methodref          #25.#84       // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+   #12 = Class              #85           // java/io/IOException\n+   #13 = Methodref          #25.#86       // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+   #14 = Methodref          #17.#87       // java/io/OutputStream.close:()V\n+   #15 = Methodref          #17.#84       // java/io/OutputStream.flush:()V\n+   #16 = InterfaceMethodref #47.#88       // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #17 = Class              #89           // java/io/OutputStream\n+   #18 = InterfaceMethodref #46.#90       // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+   #19 = Methodref          #25.#91       // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+   #20 = Methodref          #17.#92       // java/io/OutputStream.write:([B)V\n+   #21 = Methodref          #17.#93       // java/io/OutputStream.write:([BII)V\n+   #22 = Methodref          #17.#94       // java/io/OutputStream.write:(I)V\n+   #23 = Fieldref           #95.#96       // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+   #24 = InvokeDynamic      #0:#102       // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n+   #25 = Class              #103          // org/apache/commons/io/output/ThresholdingOutputStream\n    #26 = Utf8               NOOP_OS_GETTER\n    #27 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n    #28 = Utf8               Signature\n    #29 = Utf8               Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n    #30 = Utf8               threshold\n    #31 = Utf8               I\n    #32 = Utf8               thresholdConsumer\n@@ -49,102 +49,98 @@\n    #39 = Utf8               Z\n    #40 = Utf8               <init>\n    #41 = Utf8               (I)V\n    #42 = Utf8               Code\n    #43 = Utf8               LineNumberTable\n    #44 = Utf8               (ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n    #45 = Utf8               StackMapTable\n-   #46 = Class              #107          // org/apache/commons/io/output/ThresholdingOutputStream\n-   #47 = Class              #108          // org/apache/commons/io/function/IOConsumer\n-   #48 = Class              #109          // org/apache/commons/io/function/IOFunction\n-   #49 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n-   #50 = Utf8               checkThreshold\n-   #51 = Utf8               Exceptions\n-   #52 = Utf8               close\n-   #53 = Utf8               ()V\n-   #54 = Class              #88           // java/io/IOException\n-   #55 = Utf8               flush\n-   #56 = Utf8               getByteCount\n-   #57 = Utf8               ()J\n-   #58 = Utf8               getStream\n-   #59 = Utf8               ()Ljava/io/OutputStream;\n-   #60 = Utf8               getThreshold\n-   #61 = Utf8               ()I\n-   #62 = Utf8               isThresholdExceeded\n-   #63 = Utf8               ()Z\n-   #64 = Utf8               resetByteCount\n-   #65 = Utf8               setByteCount\n-   #66 = Utf8               (J)V\n-   #67 = Utf8               thresholdReached\n-   #68 = Utf8               write\n-   #69 = Utf8               ([B)V\n-   #70 = Utf8               ([BII)V\n-   #71 = Utf8               lambda$static$0\n-   #72 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-   #73 = Utf8               <clinit>\n-   #74 = Utf8               SourceFile\n-   #75 = Utf8               ThresholdingOutputStream.java\n-   #76 = Class              #108          // org/apache/commons/io/function/IOConsumer\n-   #77 = NameAndType        #110:#111     // noop:()Lorg/apache/commons/io/function/IOConsumer;\n-   #78 = NameAndType        #26:#27       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-   #79 = NameAndType        #40:#44       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-   #80 = NameAndType        #40:#53       // \"<init>\":()V\n-   #81 = NameAndType        #30:#31       // threshold:I\n-   #82 = NameAndType        #32:#33       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-   #83 = NameAndType        #35:#27       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-   #84 = NameAndType        #38:#39       // thresholdExceeded:Z\n-   #85 = NameAndType        #36:#37       // written:J\n-   #86 = NameAndType        #67:#53       // thresholdReached:()V\n-   #87 = NameAndType        #55:#53       // flush:()V\n-   #88 = Utf8               java/io/IOException\n-   #89 = NameAndType        #58:#59       // getStream:()Ljava/io/OutputStream;\n-   #90 = NameAndType        #52:#53       // close:()V\n-   #91 = Class              #109          // org/apache/commons/io/function/IOFunction\n-   #92 = NameAndType        #112:#113     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #93 = Utf8               java/io/OutputStream\n-   #94 = NameAndType        #114:#115     // accept:(Ljava/lang/Object;)V\n-   #95 = NameAndType        #50:#41       // checkThreshold:(I)V\n-   #96 = NameAndType        #68:#69       // write:([B)V\n-   #97 = NameAndType        #68:#70       // write:([BII)V\n-   #98 = NameAndType        #68:#41       // write:(I)V\n-   #99 = Class              #116          // org/apache/commons/io/output/NullOutputStream\n-  #100 = NameAndType        #117:#118     // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-  #101 = Utf8               BootstrapMethods\n-  #102 = MethodHandle       6:#119        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #103 = MethodType         #113          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #104 = MethodHandle       6:#120        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #105 = MethodType         #72           //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #106 = NameAndType        #112:#121     // apply:()Lorg/apache/commons/io/function/IOFunction;\n-  #107 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #108 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #109 = Utf8               org/apache/commons/io/function/IOFunction\n-  #110 = Utf8               noop\n-  #111 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n-  #112 = Utf8               apply\n-  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = Utf8               accept\n-  #115 = Utf8               (Ljava/lang/Object;)V\n-  #116 = Utf8               org/apache/commons/io/output/NullOutputStream\n-  #117 = Utf8               NULL_OUTPUT_STREAM\n-  #118 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n-  #119 = Methodref          #122.#123     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #120 = Methodref          #25.#124      // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #121 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n-  #122 = Class              #125          // java/lang/invoke/LambdaMetafactory\n-  #123 = NameAndType        #126:#130     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #124 = NameAndType        #71:#72       // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #125 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #126 = Utf8               metafactory\n-  #127 = Class              #132          // java/lang/invoke/MethodHandles$Lookup\n-  #128 = Utf8               Lookup\n-  #129 = Utf8               InnerClasses\n-  #130 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #131 = Class              #133          // java/lang/invoke/MethodHandles\n-  #132 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #133 = Utf8               java/lang/invoke/MethodHandles\n+   #46 = Class              #104          // org/apache/commons/io/function/IOConsumer\n+   #47 = Class              #105          // org/apache/commons/io/function/IOFunction\n+   #48 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+   #49 = Utf8               checkThreshold\n+   #50 = Utf8               Exceptions\n+   #51 = Utf8               close\n+   #52 = Utf8               ()V\n+   #53 = Utf8               flush\n+   #54 = Utf8               getByteCount\n+   #55 = Utf8               ()J\n+   #56 = Utf8               getStream\n+   #57 = Utf8               ()Ljava/io/OutputStream;\n+   #58 = Utf8               getThreshold\n+   #59 = Utf8               ()I\n+   #60 = Utf8               isThresholdExceeded\n+   #61 = Utf8               ()Z\n+   #62 = Utf8               resetByteCount\n+   #63 = Utf8               setByteCount\n+   #64 = Utf8               (J)V\n+   #65 = Utf8               thresholdReached\n+   #66 = Utf8               write\n+   #67 = Utf8               ([B)V\n+   #68 = Utf8               ([BII)V\n+   #69 = Utf8               lambda$static$0\n+   #70 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+   #71 = Utf8               <clinit>\n+   #72 = Utf8               SourceFile\n+   #73 = Utf8               ThresholdingOutputStream.java\n+   #74 = NameAndType        #106:#107     // noop:()Lorg/apache/commons/io/function/IOConsumer;\n+   #75 = NameAndType        #26:#27       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+   #76 = NameAndType        #40:#44       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+   #77 = NameAndType        #40:#52       // \"<init>\":()V\n+   #78 = NameAndType        #30:#31       // threshold:I\n+   #79 = NameAndType        #32:#33       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+   #80 = NameAndType        #35:#27       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+   #81 = NameAndType        #38:#39       // thresholdExceeded:Z\n+   #82 = NameAndType        #36:#37       // written:J\n+   #83 = NameAndType        #65:#52       // thresholdReached:()V\n+   #84 = NameAndType        #53:#52       // flush:()V\n+   #85 = Utf8               java/io/IOException\n+   #86 = NameAndType        #56:#57       // getStream:()Ljava/io/OutputStream;\n+   #87 = NameAndType        #51:#52       // close:()V\n+   #88 = NameAndType        #108:#109     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #89 = Utf8               java/io/OutputStream\n+   #90 = NameAndType        #110:#111     // accept:(Ljava/lang/Object;)V\n+   #91 = NameAndType        #49:#41       // checkThreshold:(I)V\n+   #92 = NameAndType        #66:#67       // write:([B)V\n+   #93 = NameAndType        #66:#68       // write:([BII)V\n+   #94 = NameAndType        #66:#41       // write:(I)V\n+   #95 = Class              #112          // org/apache/commons/io/output/NullOutputStream\n+   #96 = NameAndType        #113:#114     // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+   #97 = Utf8               BootstrapMethods\n+   #98 = MethodHandle       6:#115        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #99 = MethodType         #109          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #100 = MethodHandle       6:#116        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #101 = MethodType         #70           //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #102 = NameAndType        #108:#117     // apply:()Lorg/apache/commons/io/function/IOFunction;\n+  #103 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+  #104 = Utf8               org/apache/commons/io/function/IOConsumer\n+  #105 = Utf8               org/apache/commons/io/function/IOFunction\n+  #106 = Utf8               noop\n+  #107 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n+  #108 = Utf8               apply\n+  #109 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #110 = Utf8               accept\n+  #111 = Utf8               (Ljava/lang/Object;)V\n+  #112 = Utf8               org/apache/commons/io/output/NullOutputStream\n+  #113 = Utf8               NULL_OUTPUT_STREAM\n+  #114 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n+  #115 = Methodref          #118.#119     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #116 = Methodref          #25.#120      // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #117 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n+  #118 = Class              #121          // java/lang/invoke/LambdaMetafactory\n+  #119 = NameAndType        #122:#126     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = NameAndType        #69:#70       // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #121 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #122 = Utf8               metafactory\n+  #123 = Class              #128          // java/lang/invoke/MethodHandles$Lookup\n+  #124 = Utf8               Lookup\n+  #125 = Utf8               InnerClasses\n+  #126 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #127 = Class              #129          // java/lang/invoke/MethodHandles\n+  #128 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #129 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static org.apache.commons.io.function.IOFunction<org.apache.commons.io.output.ThresholdingOutputStream, java.io.OutputStream> NOOP_OS_GETTER;\n     descriptor: Lorg/apache/commons/io/function/IOFunction;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Signature: #29                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n \n   private final int threshold;\n@@ -226,15 +222,15 @@\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOConsumer ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/ThresholdingOutputStream, int, class org/apache/commons/io/function/IOConsumer, class org/apache/commons/io/function/IOFunction ]\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOFunction ]\n-    Signature: #49                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+    Signature: #48                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n \n   protected void checkThreshold(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -525,14 +521,14 @@\n          5: putstatic     #2                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n          8: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"ThresholdingOutputStream.java\"\n InnerClasses:\n-  public static final #128= #127 of #131; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #124= #123 of #127; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #102 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #103 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #104 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-      #105 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #99 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #100 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #101 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n"}]}
