{"diffoscope-json-version": 1, "source1": "first/ParallelScatterZipCreator.class", "source2": "second/ParallelScatterZipCreator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,383 +1,383 @@\n-  SHA-256 checksum 778655e0200b7465e07ca64ec3704c4392efab0e698edd0ed0566c63007f1d5a\n+  SHA-256 checksum ab76d0e0ee784c0dd41eab08c74d6f809cd69783f5206caf9fa686539d7bdf5f\n   Compiled from \"ParallelScatterZipCreator.java\"\n public class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #71                         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  super_class: #72                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  super_class: #70                        // java/lang/Object\n   interfaces: 0, fields: 9, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #71.#177      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.streams:Ljava/util/Deque;\n-    #2 = Methodref          #71.#178      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-    #3 = Fieldref           #71.#179      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-    #4 = InterfaceMethodref #115.#180     // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-    #5 = Fieldref           #71.#181      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionLevel:I\n-    #6 = Methodref          #182.#183     // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-    #7 = Class              #184          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-    #8 = Methodref          #7.#185       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-    #9 = Methodref          #186.#187     // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n-   #10 = Methodref          #186.#188     // java/lang/Runtime.availableProcessors:()I\n-   #11 = Methodref          #189.#190     // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-   #12 = Methodref          #71.#191      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-   #13 = Class              #192          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-   #14 = Methodref          #13.#193      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-   #15 = Methodref          #71.#194      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n-   #16 = Class              #195          // java/util/zip/Deflater\n-   #17 = Methodref          #71.#196      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n-   #18 = Methodref          #72.#197      // java/lang/Object.\"<init>\":()V\n-   #19 = Class              #198          // java/util/concurrent/ConcurrentLinkedDeque\n-   #20 = Methodref          #19.#197      // java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n-   #21 = Fieldref           #71.#199      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.futures:Ljava/util/Deque;\n-   #22 = Methodref          #200.#201     // java/lang/System.currentTimeMillis:()J\n-   #23 = Fieldref           #71.#202      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.startedAt:J\n-   #24 = Class              #203          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-   #25 = Methodref          #24.#204      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-   #26 = Fieldref           #71.#205      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.tlScatterStreams:Ljava/lang/ThreadLocal;\n-   #27 = Class              #206          // java/lang/IllegalArgumentException\n-   #28 = String             #207          // Compression level is expected between -1~9\n-   #29 = Methodref          #27.#208      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Fieldref           #71.#209      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.es:Ljava/util/concurrent/ExecutorService;\n-   #31 = Methodref          #71.#210      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-   #32 = Methodref          #71.#211      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n-   #33 = Methodref          #71.#212      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-   #34 = InvokeDynamic      #0:#218       // #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-   #35 = InterfaceMethodref #114.#219     // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-   #36 = InterfaceMethodref #220.#221     // java/util/Deque.add:(Ljava/lang/Object;)Z\n-   #37 = Methodref          #222.#223     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-   #38 = Class              #224          // org/apache/commons/compress/archivers/zip/ZipMethod\n-   #39 = Class              #225          // java/lang/StringBuilder\n-   #40 = Methodref          #39.#197      // java/lang/StringBuilder.\"<init>\":()V\n-   #41 = String             #226          // Method must be set on zipArchiveEntry:\n-   #42 = Methodref          #39.#227      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #43 = Methodref          #39.#228      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #44 = Methodref          #39.#229      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #45 = Methodref          #230.#231     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-   #46 = InvokeDynamic      #1:#233       // #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-   #47 = InvokeDynamic      #2:#235       // #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-   #48 = InterfaceMethodref #220.#236     // java/util/Deque.iterator:()Ljava/util/Iterator;\n-   #49 = InterfaceMethodref #153.#237     // java/util/Iterator.hasNext:()Z\n-   #50 = InterfaceMethodref #153.#238     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #51 = Class              #239          // java/util/concurrent/Future\n-   #52 = InterfaceMethodref #51.#240      // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #53 = InterfaceMethodref #114.#241     // java/util/concurrent/ExecutorService.shutdown:()V\n-   #54 = Long               60000l\n-   #56 = Fieldref           #242.#243     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #57 = InterfaceMethodref #114.#244     // java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n-   #58 = Fieldref           #71.#245      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionDoneAt:J\n-   #59 = Methodref          #7.#246       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-   #60 = Methodref          #247.#248     // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-   #61 = Methodref          #7.#249       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n-   #62 = Fieldref           #71.#250      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.scatterDoneAt:J\n-   #63 = Methodref          #71.#251      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.closeAll:()V\n-   #64 = Class              #252          // org/apache/commons/compress/archivers/zip/ScatterStatistics\n-   #65 = Methodref          #64.#253      // org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n-   #66 = Class              #254          // java/io/IOException\n-   #67 = Methodref          #255.#240     // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-   #68 = InterfaceMethodref #256.#257     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-   #69 = Methodref          #7.#258       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-   #70 = InterfaceMethodref #259.#260     // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n-   #71 = Class              #261          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-   #72 = Class              #262          // java/lang/Object\n-   #73 = Utf8               DefaultBackingStoreSupplier\n-   #74 = Utf8               InnerClasses\n-   #75 = Utf8               streams\n-   #76 = Utf8               Ljava/util/Deque;\n-   #77 = Utf8               Signature\n-   #78 = Utf8               Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-   #79 = Utf8               es\n-   #80 = Utf8               Ljava/util/concurrent/ExecutorService;\n-   #81 = Utf8               backingStoreSupplier\n-   #82 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-   #83 = Utf8               futures\n-   #84 = Utf8               Ljava/util/Deque<Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;>;\n-   #85 = Utf8               startedAt\n-   #86 = Utf8               J\n-   #87 = Utf8               compressionDoneAt\n-   #88 = Utf8               scatterDoneAt\n-   #89 = Utf8               compressionLevel\n-   #90 = Utf8               I\n-   #91 = Utf8               tlScatterStreams\n-   #92 = Utf8               Ljava/lang/ThreadLocal;\n-   #93 = Utf8               Ljava/lang/ThreadLocal<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-   #94 = Utf8               createDeferred\n-   #95 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-   #96 = Utf8               Code\n-   #97 = Utf8               LineNumberTable\n-   #98 = Utf8               LocalVariableTable\n-   #99 = Utf8               this\n-  #100 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n-  #101 = Utf8               scatterGatherBackingStoreSupplier\n-  #102 = Utf8               bs\n-  #103 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #104 = Utf8               sc\n-  #105 = Utf8               Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #106 = Utf8               Exceptions\n-  #107 = Utf8               <init>\n-  #108 = Utf8               ()V\n-  #109 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n-  #110 = Utf8               executorService\n-  #111 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n-  #112 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n-  #113 = Utf8               StackMapTable\n-  #114 = Class              #263          // java/util/concurrent/ExecutorService\n-  #115 = Class              #264          // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #116 = Utf8               addArchiveEntry\n-  #117 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-  #118 = Utf8               zipArchiveEntry\n-  #119 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #120 = Utf8               source\n-  #121 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #122 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V\n-  #123 = Utf8               zipArchiveEntryRequestSupplier\n-  #124 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;\n-  #125 = Utf8               submit\n-  #126 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #127 = Utf8               callable\n-  #128 = Utf8               Ljava/util/concurrent/Callable;\n-  #129 = Utf8               LocalVariableTypeTable\n-  #130 = Utf8               Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;\n-  #131 = Utf8               (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n-  #132 = Utf8               submitStreamAwareCallable\n-  #133 = Utf8               Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #134 = Utf8               (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n-  #135 = Utf8               createCallable\n-  #136 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-  #137 = Utf8               method\n-  #138 = Utf8               zipArchiveEntryRequest\n-  #139 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #140 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #141 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #142 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #143 = Utf8               writeTo\n-  #144 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-  #145 = Utf8               future\n-  #146 = Utf8               Ljava/util/concurrent/Future;\n-  #147 = Utf8               scatterStream\n-  #148 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #149 = Utf8               targetStream\n-  #150 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n-  #151 = Utf8               Ljava/util/concurrent/Future<*>;\n-  #152 = Utf8               Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-  #153 = Class              #265          // java/util/Iterator\n-  #154 = Class              #266          // java/lang/Throwable\n-  #155 = Class              #267          // java/lang/InterruptedException\n-  #156 = Class              #268          // java/util/concurrent/ExecutionException\n-  #157 = Utf8               getStatisticsMessage\n-  #158 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;\n-  #159 = Utf8               closeAll\n-  #160 = Utf8               lambda$createCallable$2\n-  #161 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #162 = Class              #269          // java/lang/Exception\n-  #163 = Utf8               lambda$createCallable$1\n-  #164 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #165 = Utf8               lambda$submit$0\n-  #166 = Utf8               (Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #167 = Utf8               access$000\n-  #168 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-  #169 = Utf8               x0\n-  #170 = Utf8               access$100\n-  #171 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #172 = Utf8               x1\n-  #173 = Utf8               access$200\n-  #174 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Ljava/util/Deque;\n-  #175 = Utf8               SourceFile\n-  #176 = Utf8               ParallelScatterZipCreator.java\n-  #177 = NameAndType        #75:#76       // streams:Ljava/util/Deque;\n-  #178 = NameAndType        #94:#95       // createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #179 = NameAndType        #81:#82       // backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n-  #180 = NameAndType        #270:#271     // get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #181 = NameAndType        #89:#90       // compressionLevel:I\n-  #182 = Class              #272          // org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #183 = NameAndType        #273:#274     // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #184 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #185 = NameAndType        #107:#275     // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-  #186 = Class              #276          // java/lang/Runtime\n-  #187 = NameAndType        #277:#278     // getRuntime:()Ljava/lang/Runtime;\n-  #188 = NameAndType        #279:#280     // availableProcessors:()I\n-  #189 = Class              #281          // java/util/concurrent/Executors\n-  #190 = NameAndType        #282:#283     // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-  #191 = NameAndType        #107:#109     // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n-  #192 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  #193 = NameAndType        #107:#284     // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #194 = NameAndType        #107:#111     // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n-  #195 = Utf8               java/util/zip/Deflater\n-  #196 = NameAndType        #107:#112     // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n-  #197 = NameAndType        #107:#108     // \"<init>\":()V\n-  #198 = Utf8               java/util/concurrent/ConcurrentLinkedDeque\n-  #199 = NameAndType        #83:#76       // futures:Ljava/util/Deque;\n-  #200 = Class              #285          // java/lang/System\n-  #201 = NameAndType        #286:#287     // currentTimeMillis:()J\n-  #202 = NameAndType        #85:#86       // startedAt:J\n-  #203 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  #204 = NameAndType        #107:#288     // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-  #205 = NameAndType        #91:#92       // tlScatterStreams:Ljava/lang/ThreadLocal;\n-  #206 = Utf8               java/lang/IllegalArgumentException\n-  #207 = Utf8               Compression level is expected between -1~9\n-  #208 = NameAndType        #107:#289     // \"<init>\":(Ljava/lang/String;)V\n-  #209 = NameAndType        #79:#80       // es:Ljava/util/concurrent/ExecutorService;\n-  #210 = NameAndType        #135:#136     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-  #211 = NameAndType        #132:#126     // submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n-  #212 = NameAndType        #135:#141     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #213 = Utf8               BootstrapMethods\n-  #214 = MethodHandle       6:#290        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #215 = MethodType         #291          //  ()Ljava/lang/Object;\n-  #216 = MethodHandle       7:#292        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #217 = MethodType         #293          //  ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #218 = NameAndType        #294:#295     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-  #219 = NameAndType        #125:#296     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-  #220 = Class              #297          // java/util/Deque\n-  #221 = NameAndType        #298:#299     // add:(Ljava/lang/Object;)Z\n-  #222 = Class              #300          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #223 = NameAndType        #301:#280     // getMethod:()I\n-  #224 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n-  #225 = Utf8               java/lang/StringBuilder\n-  #226 = Utf8               Method must be set on zipArchiveEntry:\n-  #227 = NameAndType        #302:#303     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #228 = NameAndType        #302:#304     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #229 = NameAndType        #305:#306     // toString:()Ljava/lang/String;\n-  #230 = Class              #307          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #231 = NameAndType        #308:#309     // createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #232 = MethodHandle       7:#310        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #233 = NameAndType        #294:#311     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-  #234 = MethodHandle       7:#312        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #235 = NameAndType        #294:#313     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #236 = NameAndType        #314:#315     // iterator:()Ljava/util/Iterator;\n-  #237 = NameAndType        #316:#317     // hasNext:()Z\n-  #238 = NameAndType        #318:#291     // next:()Ljava/lang/Object;\n-  #239 = Utf8               java/util/concurrent/Future\n-  #240 = NameAndType        #270:#291     // get:()Ljava/lang/Object;\n-  #241 = NameAndType        #319:#108     // shutdown:()V\n-  #242 = Class              #320          // java/util/concurrent/TimeUnit\n-  #243 = NameAndType        #321:#322     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #244 = NameAndType        #323:#324     // awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n-  #245 = NameAndType        #87:#86       // compressionDoneAt:J\n-  #246 = NameAndType        #325:#327     // zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-  #247 = Class              #328          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #248 = NameAndType        #329:#144     // writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-  #249 = NameAndType        #330:#108     // close:()V\n-  #250 = NameAndType        #88:#86       // scatterDoneAt:J\n-  #251 = NameAndType        #159:#108     // closeAll:()V\n-  #252 = Utf8               org/apache/commons/compress/archivers/zip/ScatterStatistics\n-  #253 = NameAndType        #107:#331     // \"<init>\":(JJ)V\n-  #254 = Utf8               java/io/IOException\n-  #255 = Class              #332          // java/lang/ThreadLocal\n-  #256 = Class              #333          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n-  #257 = NameAndType        #270:#334     // get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #258 = NameAndType        #116:#335     // addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-  #259 = Class              #336          // java/util/concurrent/Callable\n-  #260 = NameAndType        #294:#291     // call:()Ljava/lang/Object;\n-  #261 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #262 = Utf8               java/lang/Object\n-  #263 = Utf8               java/util/concurrent/ExecutorService\n-  #264 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #265 = Utf8               java/util/Iterator\n-  #266 = Utf8               java/lang/Throwable\n-  #267 = Utf8               java/lang/InterruptedException\n-  #268 = Utf8               java/util/concurrent/ExecutionException\n-  #269 = Utf8               java/lang/Exception\n-  #270 = Utf8               get\n-  #271 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #272 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #273 = Utf8               create\n-  #274 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #275 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-  #276 = Utf8               java/lang/Runtime\n-  #277 = Utf8               getRuntime\n-  #278 = Utf8               ()Ljava/lang/Runtime;\n-  #279 = Utf8               availableProcessors\n-  #280 = Utf8               ()I\n-  #281 = Utf8               java/util/concurrent/Executors\n-  #282 = Utf8               newFixedThreadPool\n-  #283 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n-  #284 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #285 = Utf8               java/lang/System\n-  #286 = Utf8               currentTimeMillis\n-  #287 = Utf8               ()J\n-  #288 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-  #289 = Utf8               (Ljava/lang/String;)V\n-  #290 = Methodref          #337.#338     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #291 = Utf8               ()Ljava/lang/Object;\n-  #292 = Methodref          #71.#339      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #293 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #294 = Utf8               call\n-  #295 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-  #296 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-  #297 = Utf8               java/util/Deque\n-  #298 = Utf8               add\n-  #299 = Utf8               (Ljava/lang/Object;)Z\n-  #300 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #301 = Utf8               getMethod\n-  #302 = Utf8               append\n-  #303 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #304 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #305 = Utf8               toString\n-  #306 = Utf8               ()Ljava/lang/String;\n-  #307 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #308 = Utf8               createZipArchiveEntryRequest\n-  #309 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #310 = Methodref          #71.#340      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #311 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n-  #312 = Methodref          #71.#341      // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #313 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-  #314 = Utf8               iterator\n-  #315 = Utf8               ()Ljava/util/Iterator;\n-  #316 = Utf8               hasNext\n-  #317 = Utf8               ()Z\n-  #318 = Utf8               next\n-  #319 = Utf8               shutdown\n-  #320 = Utf8               java/util/concurrent/TimeUnit\n-  #321 = Utf8               SECONDS\n-  #322 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #323 = Utf8               awaitTermination\n-  #324 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z\n-  #325 = Utf8               zipEntryWriter\n-  #326 = Utf8               ZipEntryWriter\n-  #327 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-  #328 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #329 = Utf8               writeNextZipEntry\n-  #330 = Utf8               close\n-  #331 = Utf8               (JJ)V\n-  #332 = Utf8               java/lang/ThreadLocal\n-  #333 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n-  #334 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #335 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n-  #336 = Utf8               java/util/concurrent/Callable\n-  #337 = Class              #342          // java/lang/invoke/LambdaMetafactory\n-  #338 = NameAndType        #343:#346     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #339 = NameAndType        #165:#166     // lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #340 = NameAndType        #163:#164     // lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #341 = NameAndType        #160:#161     // lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #342 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #343 = Utf8               metafactory\n-  #344 = Class              #348          // java/lang/invoke/MethodHandles$Lookup\n-  #345 = Utf8               Lookup\n-  #346 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #347 = Class              #349          // java/lang/invoke/MethodHandles\n-  #348 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #349 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Fieldref           #2.#3         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.streams:Ljava/util/Deque;\n+    #2 = Class              #4            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+    #3 = NameAndType        #5:#6         // streams:Ljava/util/Deque;\n+    #4 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+    #5 = Utf8               streams\n+    #6 = Utf8               Ljava/util/Deque;\n+    #7 = Methodref          #2.#8         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+    #8 = NameAndType        #9:#10        // createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+    #9 = Utf8               createDeferred\n+   #10 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+   #11 = Fieldref           #2.#12        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+   #12 = NameAndType        #13:#14       // backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+   #13 = Utf8               backingStoreSupplier\n+   #14 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+   #15 = InterfaceMethodref #16.#17       // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #16 = Class              #18           // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #17 = NameAndType        #19:#20       // get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #18 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #19 = Utf8               get\n+   #20 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #21 = Fieldref           #2.#22        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionLevel:I\n+   #22 = NameAndType        #23:#24       // compressionLevel:I\n+   #23 = Utf8               compressionLevel\n+   #24 = Utf8               I\n+   #25 = Methodref          #26.#27       // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+   #26 = Class              #28           // org/apache/commons/compress/archivers/zip/StreamCompressor\n+   #27 = NameAndType        #29:#30       // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+   #28 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n+   #29 = Utf8               create\n+   #30 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+   #31 = Class              #32           // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #32 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #33 = Methodref          #31.#34       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+   #34 = NameAndType        #35:#36       // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+   #35 = Utf8               <init>\n+   #36 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+   #37 = Methodref          #38.#39       // java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n+   #38 = Class              #40           // java/lang/Runtime\n+   #39 = NameAndType        #41:#42       // getRuntime:()Ljava/lang/Runtime;\n+   #40 = Utf8               java/lang/Runtime\n+   #41 = Utf8               getRuntime\n+   #42 = Utf8               ()Ljava/lang/Runtime;\n+   #43 = Methodref          #38.#44       // java/lang/Runtime.availableProcessors:()I\n+   #44 = NameAndType        #45:#46       // availableProcessors:()I\n+   #45 = Utf8               availableProcessors\n+   #46 = Utf8               ()I\n+   #47 = Methodref          #48.#49       // java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+   #48 = Class              #50           // java/util/concurrent/Executors\n+   #49 = NameAndType        #51:#52       // newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+   #50 = Utf8               java/util/concurrent/Executors\n+   #51 = Utf8               newFixedThreadPool\n+   #52 = Utf8               (I)Ljava/util/concurrent/ExecutorService;\n+   #53 = Methodref          #2.#54        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+   #54 = NameAndType        #35:#55       // \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+   #55 = Utf8               (Ljava/util/concurrent/ExecutorService;)V\n+   #56 = Class              #57           // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #57 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #58 = Methodref          #56.#59       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+   #59 = NameAndType        #35:#60       // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+   #60 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+   #61 = Methodref          #2.#62        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+   #62 = NameAndType        #35:#63       // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+   #63 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+   #64 = Class              #65           // java/util/zip/Deflater\n+   #65 = Utf8               java/util/zip/Deflater\n+   #66 = Methodref          #2.#67        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.\"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+   #67 = NameAndType        #35:#68       // \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+   #68 = Utf8               (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+   #69 = Methodref          #70.#71       // java/lang/Object.\"<init>\":()V\n+   #70 = Class              #72           // java/lang/Object\n+   #71 = NameAndType        #35:#73       // \"<init>\":()V\n+   #72 = Utf8               java/lang/Object\n+   #73 = Utf8               ()V\n+   #74 = Class              #75           // java/util/concurrent/ConcurrentLinkedDeque\n+   #75 = Utf8               java/util/concurrent/ConcurrentLinkedDeque\n+   #76 = Methodref          #74.#71       // java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n+   #77 = Fieldref           #2.#78        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.futures:Ljava/util/Deque;\n+   #78 = NameAndType        #79:#6        // futures:Ljava/util/Deque;\n+   #79 = Utf8               futures\n+   #80 = Methodref          #81.#82       // java/lang/System.currentTimeMillis:()J\n+   #81 = Class              #83           // java/lang/System\n+   #82 = NameAndType        #84:#85       // currentTimeMillis:()J\n+   #83 = Utf8               java/lang/System\n+   #84 = Utf8               currentTimeMillis\n+   #85 = Utf8               ()J\n+   #86 = Fieldref           #2.#87        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.startedAt:J\n+   #87 = NameAndType        #88:#89       // startedAt:J\n+   #88 = Utf8               startedAt\n+   #89 = Utf8               J\n+   #90 = Class              #91           // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+   #91 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+   #92 = Methodref          #90.#93       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+   #93 = NameAndType        #35:#94       // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+   #94 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+   #95 = Fieldref           #2.#96        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.tlScatterStreams:Ljava/lang/ThreadLocal;\n+   #96 = NameAndType        #97:#98       // tlScatterStreams:Ljava/lang/ThreadLocal;\n+   #97 = Utf8               tlScatterStreams\n+   #98 = Utf8               Ljava/lang/ThreadLocal;\n+   #99 = Class              #100          // java/lang/IllegalArgumentException\n+  #100 = Utf8               java/lang/IllegalArgumentException\n+  #101 = String             #102          // Compression level is expected between -1~9\n+  #102 = Utf8               Compression level is expected between -1~9\n+  #103 = Methodref          #99.#104      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #104 = NameAndType        #35:#105      // \"<init>\":(Ljava/lang/String;)V\n+  #105 = Utf8               (Ljava/lang/String;)V\n+  #106 = Fieldref           #2.#107       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.es:Ljava/util/concurrent/ExecutorService;\n+  #107 = NameAndType        #108:#109     // es:Ljava/util/concurrent/ExecutorService;\n+  #108 = Utf8               es\n+  #109 = Utf8               Ljava/util/concurrent/ExecutorService;\n+  #110 = Methodref          #2.#111       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+  #111 = NameAndType        #112:#113     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+  #112 = Utf8               createCallable\n+  #113 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+  #114 = Methodref          #2.#115       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+  #115 = NameAndType        #116:#117     // submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+  #116 = Utf8               submitStreamAwareCallable\n+  #117 = Utf8               (Ljava/util/concurrent/Callable;)V\n+  #118 = Methodref          #2.#119       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #119 = NameAndType        #112:#120     // createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #120 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #121 = InvokeDynamic      #0:#122       // #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+  #122 = NameAndType        #123:#124     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+  #123 = Utf8               call\n+  #124 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+  #125 = InterfaceMethodref #126.#127     // java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+  #126 = Class              #128          // java/util/concurrent/ExecutorService\n+  #127 = NameAndType        #129:#130     // submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+  #128 = Utf8               java/util/concurrent/ExecutorService\n+  #129 = Utf8               submit\n+  #130 = Utf8               (Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+  #131 = InterfaceMethodref #132.#133     // java/util/Deque.add:(Ljava/lang/Object;)Z\n+  #132 = Class              #134          // java/util/Deque\n+  #133 = NameAndType        #135:#136     // add:(Ljava/lang/Object;)Z\n+  #134 = Utf8               java/util/Deque\n+  #135 = Utf8               add\n+  #136 = Utf8               (Ljava/lang/Object;)Z\n+  #137 = Methodref          #138.#139     // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #138 = Class              #140          // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #139 = NameAndType        #141:#46      // getMethod:()I\n+  #140 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #141 = Utf8               getMethod\n+  #142 = Class              #143          // org/apache/commons/compress/archivers/zip/ZipMethod\n+  #143 = Utf8               org/apache/commons/compress/archivers/zip/ZipMethod\n+  #144 = Class              #145          // java/lang/StringBuilder\n+  #145 = Utf8               java/lang/StringBuilder\n+  #146 = Methodref          #144.#71      // java/lang/StringBuilder.\"<init>\":()V\n+  #147 = String             #148          // Method must be set on zipArchiveEntry:\n+  #148 = Utf8               Method must be set on zipArchiveEntry:\n+  #149 = Methodref          #144.#150     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #150 = NameAndType        #151:#152     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #151 = Utf8               append\n+  #152 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #153 = Methodref          #144.#154     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #154 = NameAndType        #151:#155     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #155 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #156 = Methodref          #144.#157     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #157 = NameAndType        #158:#159     // toString:()Ljava/lang/String;\n+  #158 = Utf8               toString\n+  #159 = Utf8               ()Ljava/lang/String;\n+  #160 = Methodref          #161.#162     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #161 = Class              #163          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #162 = NameAndType        #164:#165     // createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #163 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #164 = Utf8               createZipArchiveEntryRequest\n+  #165 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #166 = InvokeDynamic      #1:#167       // #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+  #167 = NameAndType        #123:#168     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+  #168 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+  #169 = InvokeDynamic      #2:#170       // #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #170 = NameAndType        #123:#171     // call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #171 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+  #172 = InterfaceMethodref #132.#173     // java/util/Deque.iterator:()Ljava/util/Iterator;\n+  #173 = NameAndType        #174:#175     // iterator:()Ljava/util/Iterator;\n+  #174 = Utf8               iterator\n+  #175 = Utf8               ()Ljava/util/Iterator;\n+  #176 = InterfaceMethodref #177.#178     // java/util/Iterator.hasNext:()Z\n+  #177 = Class              #179          // java/util/Iterator\n+  #178 = NameAndType        #180:#181     // hasNext:()Z\n+  #179 = Utf8               java/util/Iterator\n+  #180 = Utf8               hasNext\n+  #181 = Utf8               ()Z\n+  #182 = InterfaceMethodref #177.#183     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #183 = NameAndType        #184:#185     // next:()Ljava/lang/Object;\n+  #184 = Utf8               next\n+  #185 = Utf8               ()Ljava/lang/Object;\n+  #186 = Class              #187          // java/util/concurrent/Future\n+  #187 = Utf8               java/util/concurrent/Future\n+  #188 = InterfaceMethodref #186.#189     // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+  #189 = NameAndType        #19:#185      // get:()Ljava/lang/Object;\n+  #190 = InterfaceMethodref #126.#191     // java/util/concurrent/ExecutorService.shutdown:()V\n+  #191 = NameAndType        #192:#73      // shutdown:()V\n+  #192 = Utf8               shutdown\n+  #193 = Long               60000l\n+  #195 = Fieldref           #196.#197     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #196 = Class              #198          // java/util/concurrent/TimeUnit\n+  #197 = NameAndType        #199:#200     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #198 = Utf8               java/util/concurrent/TimeUnit\n+  #199 = Utf8               SECONDS\n+  #200 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #201 = InterfaceMethodref #126.#202     // java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n+  #202 = NameAndType        #203:#204     // awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n+  #203 = Utf8               awaitTermination\n+  #204 = Utf8               (JLjava/util/concurrent/TimeUnit;)Z\n+  #205 = Fieldref           #2.#206       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.compressionDoneAt:J\n+  #206 = NameAndType        #207:#89      // compressionDoneAt:J\n+  #207 = Utf8               compressionDoneAt\n+  #208 = Methodref          #31.#209      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #209 = NameAndType        #210:#211     // zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #210 = Utf8               zipEntryWriter\n+  #211 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #212 = Methodref          #213.#214     // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #213 = Class              #215          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #214 = NameAndType        #216:#217     // writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #215 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #216 = Utf8               writeNextZipEntry\n+  #217 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+  #218 = Methodref          #31.#219      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n+  #219 = NameAndType        #220:#73      // close:()V\n+  #220 = Utf8               close\n+  #221 = Fieldref           #2.#222       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.scatterDoneAt:J\n+  #222 = NameAndType        #223:#89      // scatterDoneAt:J\n+  #223 = Utf8               scatterDoneAt\n+  #224 = Methodref          #2.#225       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.closeAll:()V\n+  #225 = NameAndType        #226:#73      // closeAll:()V\n+  #226 = Utf8               closeAll\n+  #227 = Class              #228          // org/apache/commons/compress/archivers/zip/ScatterStatistics\n+  #228 = Utf8               org/apache/commons/compress/archivers/zip/ScatterStatistics\n+  #229 = Methodref          #227.#230     // org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n+  #230 = NameAndType        #35:#231      // \"<init>\":(JJ)V\n+  #231 = Utf8               (JJ)V\n+  #232 = Class              #233          // java/io/IOException\n+  #233 = Utf8               java/io/IOException\n+  #234 = Methodref          #235.#189     // java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+  #235 = Class              #236          // java/lang/ThreadLocal\n+  #236 = Utf8               java/lang/ThreadLocal\n+  #237 = InterfaceMethodref #238.#239     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #238 = Class              #240          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n+  #239 = NameAndType        #19:#241      // get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #240 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier\n+  #241 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #242 = Methodref          #31.#243      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+  #243 = NameAndType        #244:#245     // addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+  #244 = Utf8               addArchiveEntry\n+  #245 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+  #246 = InterfaceMethodref #247.#248     // java/util/concurrent/Callable.call:()Ljava/lang/Object;\n+  #247 = Class              #249          // java/util/concurrent/Callable\n+  #248 = NameAndType        #123:#185     // call:()Ljava/lang/Object;\n+  #249 = Utf8               java/util/concurrent/Callable\n+  #250 = Utf8               Signature\n+  #251 = Utf8               Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #252 = Utf8               Ljava/util/Deque<Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;>;\n+  #253 = Utf8               Ljava/lang/ThreadLocal<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #254 = Utf8               Code\n+  #255 = Utf8               LineNumberTable\n+  #256 = Utf8               LocalVariableTable\n+  #257 = Utf8               this\n+  #258 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n+  #259 = Utf8               scatterGatherBackingStoreSupplier\n+  #260 = Utf8               bs\n+  #261 = Utf8               Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #262 = Utf8               sc\n+  #263 = Utf8               Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #264 = Utf8               Exceptions\n+  #265 = Utf8               executorService\n+  #266 = Utf8               StackMapTable\n+  #267 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #268 = Utf8               zipArchiveEntry\n+  #269 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #270 = Utf8               source\n+  #271 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+  #272 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V\n+  #273 = Utf8               zipArchiveEntryRequestSupplier\n+  #274 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;\n+  #275 = Utf8               callable\n+  #276 = Utf8               Ljava/util/concurrent/Callable;\n+  #277 = Utf8               LocalVariableTypeTable\n+  #278 = Utf8               Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;\n+  #279 = Utf8               (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n+  #280 = Utf8               Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #281 = Utf8               (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n+  #282 = Utf8               method\n+  #283 = Utf8               zipArchiveEntryRequest\n+  #284 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #285 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #286 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #287 = Utf8               writeTo\n+  #288 = Utf8               future\n+  #289 = Utf8               Ljava/util/concurrent/Future;\n+  #290 = Utf8               scatterStream\n+  #291 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #292 = Utf8               targetStream\n+  #293 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n+  #294 = Utf8               Ljava/util/concurrent/Future<*>;\n+  #295 = Utf8               Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+  #296 = Class              #297          // java/lang/Throwable\n+  #297 = Utf8               java/lang/Throwable\n+  #298 = Class              #299          // java/lang/InterruptedException\n+  #299 = Utf8               java/lang/InterruptedException\n+  #300 = Class              #301          // java/util/concurrent/ExecutionException\n+  #301 = Utf8               java/util/concurrent/ExecutionException\n+  #302 = Utf8               getStatisticsMessage\n+  #303 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;\n+  #304 = Utf8               lambda$createCallable$2\n+  #305 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #306 = Class              #307          // java/lang/Exception\n+  #307 = Utf8               java/lang/Exception\n+  #308 = Utf8               lambda$createCallable$1\n+  #309 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #310 = Utf8               lambda$submit$0\n+  #311 = Utf8               (Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #312 = Utf8               access$000\n+  #313 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+  #314 = Utf8               x0\n+  #315 = Utf8               access$100\n+  #316 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #317 = Utf8               x1\n+  #318 = Utf8               access$200\n+  #319 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Ljava/util/Deque;\n+  #320 = Utf8               SourceFile\n+  #321 = Utf8               ParallelScatterZipCreator.java\n+  #322 = Utf8               BootstrapMethods\n+  #323 = MethodHandle       6:#324        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #324 = Methodref          #325.#326     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #325 = Class              #327          // java/lang/invoke/LambdaMetafactory\n+  #326 = NameAndType        #328:#329     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #327 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #328 = Utf8               metafactory\n+  #329 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #330 = MethodType         #185          //  ()Ljava/lang/Object;\n+  #331 = MethodHandle       7:#332        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #332 = Methodref          #2.#333       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #333 = NameAndType        #310:#311     // lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #334 = MethodType         #335          //  ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #335 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #336 = MethodHandle       7:#337        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #337 = Methodref          #2.#338       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #338 = NameAndType        #308:#309     // lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #339 = MethodHandle       7:#340        // REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #340 = Methodref          #2.#341       // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #341 = NameAndType        #304:#305     // lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #342 = Utf8               InnerClasses\n+  #343 = Utf8               DefaultBackingStoreSupplier\n+  #344 = Utf8               ZipEntryWriter\n+  #345 = Class              #346          // java/lang/invoke/MethodHandles$Lookup\n+  #346 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #347 = Class              #348          // java/lang/invoke/MethodHandles\n+  #348 = Utf8               java/lang/invoke/MethodHandles\n+  #349 = Utf8               Lookup\n {\n   private final java.util.Deque<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> streams;\n     descriptor: Ljava/util/Deque;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #78                          // Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #251                         // Ljava/util/Deque<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   private final java.util.concurrent.ExecutorService es;\n     descriptor: Ljava/util/concurrent/ExecutorService;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier backingStoreSupplier;\n     descriptor: Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.Deque<java.util.concurrent.Future<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>> futures;\n     descriptor: Ljava/util/Deque;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #84                          // Ljava/util/Deque<Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;>;\n+    Signature: #252                         // Ljava/util/Deque<Ljava/util/concurrent/Future<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;>;\n \n   private final long startedAt;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long compressionDoneAt;\n     descriptor: J\n@@ -390,34 +390,34 @@\n   private final int compressionLevel;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.lang.ThreadLocal<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> tlScatterStreams;\n     descriptor: Ljava/lang/ThreadLocal;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #93                          // Ljava/lang/ThreadLocal<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #253                         // Ljava/lang/ThreadLocal<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream createDeferred(org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_1\n-         1: invokeinterface #4,  1            // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+         1: invokeinterface #15,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier.get:()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n          6: astore_2\n          7: aload_0\n-         8: getfield      #5                  // Field compressionLevel:I\n+         8: getfield      #21                 // Field compressionLevel:I\n         11: aload_2\n-        12: invokestatic  #6                  // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+        12: invokestatic  #25                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n         15: astore_3\n-        16: new           #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+        16: new           #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n         19: dup\n         20: aload_2\n         21: aload_3\n-        22: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+        22: invokespecial #33                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n         25: areturn\n       LineNumberTable:\n         line 78: 0\n         line 80: 7\n         line 81: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -430,18 +430,18 @@\n \n   public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #9                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n-         4: invokevirtual #10                 // Method java/lang/Runtime.availableProcessors:()I\n-         7: invokestatic  #11                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n-        10: invokespecial #12                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n+         1: invokestatic  #37                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;\n+         4: invokevirtual #43                 // Method java/lang/Runtime.availableProcessors:()I\n+         7: invokestatic  #47                 // Method java/util/concurrent/Executors.newFixedThreadPool:(I)Ljava/util/concurrent/ExecutorService;\n+        10: invokespecial #53                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;)V\n         13: return\n       LineNumberTable:\n         line 102: 0\n         line 103: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -449,19 +449,19 @@\n   public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService);\n     descriptor: (Ljava/util/concurrent/ExecutorService;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: new           #13                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+         2: new           #56                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n          5: dup\n          6: aconst_null\n-         7: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-        10: invokespecial #15                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n+         7: invokespecial #58                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+        10: invokespecial #61                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)V\n         13: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -472,15 +472,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_m1\n-         4: invokespecial #17                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n+         4: invokespecial #66                 // Method \"<init>\":(Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n          7: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -489,56 +489,56 @@\n \n   public org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator(java.util.concurrent.ExecutorService, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier, int) throws java.lang.IllegalArgumentException;\n     descriptor: (Ljava/util/concurrent/ExecutorService;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #18                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #69                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #19                 // class java/util/concurrent/ConcurrentLinkedDeque\n+         5: new           #74                 // class java/util/concurrent/ConcurrentLinkedDeque\n          8: dup\n-         9: invokespecial #20                 // Method java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n+         9: invokespecial #76                 // Method java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n         12: putfield      #1                  // Field streams:Ljava/util/Deque;\n         15: aload_0\n-        16: new           #19                 // class java/util/concurrent/ConcurrentLinkedDeque\n+        16: new           #74                 // class java/util/concurrent/ConcurrentLinkedDeque\n         19: dup\n-        20: invokespecial #20                 // Method java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n-        23: putfield      #21                 // Field futures:Ljava/util/Deque;\n+        20: invokespecial #76                 // Method java/util/concurrent/ConcurrentLinkedDeque.\"<init>\":()V\n+        23: putfield      #77                 // Field futures:Ljava/util/Deque;\n         26: aload_0\n-        27: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J\n-        30: putfield      #23                 // Field startedAt:J\n+        27: invokestatic  #80                 // Method java/lang/System.currentTimeMillis:()J\n+        30: putfield      #86                 // Field startedAt:J\n         33: aload_0\n-        34: new           #24                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+        34: new           #90                 // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n         37: dup\n         38: aload_0\n-        39: invokespecial #25                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n-        42: putfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n+        39: invokespecial #92                 // Method org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)V\n+        42: putfield      #95                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n         45: iload_3\n         46: iflt          55\n         49: iload_3\n         50: bipush        9\n         52: if_icmple     70\n         55: iload_3\n         56: iconst_m1\n         57: if_icmpeq     70\n-        60: new           #27                 // class java/lang/IllegalArgumentException\n+        60: new           #99                 // class java/lang/IllegalArgumentException\n         63: dup\n-        64: ldc           #28                 // String Compression level is expected between -1~9\n-        66: invokespecial #29                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        64: ldc           #101                // String Compression level is expected between -1~9\n+        66: invokespecial #103                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         69: athrow\n         70: aload_0\n         71: aload_2\n-        72: putfield      #3                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+        72: putfield      #11                 // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n         75: aload_0\n         76: aload_1\n-        77: putfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;\n+        77: putfield      #106                // Field es:Ljava/util/concurrent/ExecutorService;\n         80: aload_0\n         81: iload_3\n-        82: putfield      #5                  // Field compressionLevel:I\n+        82: putfield      #21                 // Field compressionLevel:I\n         85: return\n       LineNumberTable:\n         line 140: 0\n         line 56: 4\n         line 59: 15\n         line 61: 26\n         line 84: 33\n@@ -568,16 +568,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n          2: aload_1\n          3: aload_2\n-         4: invokevirtual #31                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n-         7: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+         4: invokevirtual #110                // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n+         7: invokevirtual #114                // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n         10: return\n       LineNumberTable:\n         line 162: 0\n         line 163: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -588,16 +588,16 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n          2: aload_1\n-         3: invokevirtual #33                 // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n-         6: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+         3: invokevirtual #118                // Method createCallable:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+         6: invokevirtual #114                // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n          9: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -607,85 +607,85 @@\n     descriptor: (Ljava/util/concurrent/Callable;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n          2: aload_1\n-         3: invokedynamic #34,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n-         8: invokevirtual #32                 // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n+         3: invokedynamic #121,  0            // InvokeDynamic #0:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Callable;\n+         8: invokevirtual #114                // Method submitStreamAwareCallable:(Ljava/util/concurrent/Callable;)V\n         11: return\n       LineNumberTable:\n         line 186: 0\n         line 190: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n             0      12     1 callable   Ljava/util/concurrent/Callable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     1 callable   Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;\n-    Signature: #131                         // (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n+    Signature: #279                         // (Ljava/util/concurrent/Callable<+Ljava/lang/Object;>;)V\n \n   public final void submitStreamAwareCallable(java.util.concurrent.Callable<? extends org.apache.commons.compress.archivers.zip.ScatterZipOutputStream>);\n     descriptor: (Ljava/util/concurrent/Callable;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field futures:Ljava/util/Deque;\n+         1: getfield      #77                 // Field futures:Ljava/util/Deque;\n          4: aload_0\n-         5: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;\n+         5: getfield      #106                // Field es:Ljava/util/concurrent/ExecutorService;\n          8: aload_1\n-         9: invokeinterface #35,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n-        14: invokeinterface #36,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z\n+         9: invokeinterface #125,  2          // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;\n+        14: invokeinterface #131,  2          // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z\n         19: pop\n         20: return\n       LineNumberTable:\n         line 201: 0\n         line 202: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n             0      21     1 callable   Ljava/util/concurrent/Callable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      21     1 callable   Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n-    Signature: #134                         // (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n+    Signature: #281                         // (Ljava/util/concurrent/Callable<+Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;)V\n \n   public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_1\n-         1: invokevirtual #37                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+         1: invokevirtual #137                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n          4: istore_3\n          5: iload_3\n          6: iconst_m1\n          7: if_icmpne     37\n-        10: new           #27                 // class java/lang/IllegalArgumentException\n+        10: new           #99                 // class java/lang/IllegalArgumentException\n         13: dup\n-        14: new           #39                 // class java/lang/StringBuilder\n+        14: new           #144                // class java/lang/StringBuilder\n         17: dup\n-        18: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        21: ldc           #41                 // String Method must be set on zipArchiveEntry:\n-        23: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: invokespecial #146                // Method java/lang/StringBuilder.\"<init>\":()V\n+        21: ldc           #147                // String Method must be set on zipArchiveEntry:\n+        23: invokevirtual #149                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         26: aload_1\n-        27: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        30: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #29                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        27: invokevirtual #153                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        30: invokevirtual #156                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokespecial #103                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         36: athrow\n         37: aload_1\n         38: aload_2\n-        39: invokestatic  #45                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+        39: invokestatic  #160                // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.createZipArchiveEntryRequest:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n         42: astore        4\n         44: aload_0\n         45: aload         4\n-        47: invokedynamic #46,  0             // InvokeDynamic #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n+        47: invokedynamic #166,  0            // InvokeDynamic #1:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Ljava/util/concurrent/Callable;\n         52: areturn\n       LineNumberTable:\n         line 224: 0\n         line 225: 5\n         line 226: 10\n         line 228: 37\n         line 229: 44\n@@ -696,115 +696,115 @@\n             0      53     2 source   Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n             5      48     3 method   I\n            44       9     4 zipArchiveEntryRequest   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 37\n           locals = [ int ]\n-    Signature: #140                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #285                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   public final java.util.concurrent.Callable<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream> createCallable(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #47,  0             // InvokeDynamic #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n+         2: invokedynamic #169,  0            // InvokeDynamic #2:call:(Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable;\n          7: areturn\n       LineNumberTable:\n         line 253: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n             0       8     1 zipArchiveEntryRequestSupplier   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;\n-    Signature: #142                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n+    Signature: #286                         // (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Ljava/util/concurrent/Callable<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;>;\n \n   public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field futures:Ljava/util/Deque;\n-         4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+         1: getfield      #77                 // Field futures:Ljava/util/Deque;\n+         4: invokeinterface #172,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n          9: astore_2\n         10: aload_2\n-        11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        11: invokeinterface #176,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifeq          39\n         19: aload_2\n-        20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        25: checkcast     #51                 // class java/util/concurrent/Future\n+        20: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        25: checkcast     #186                // class java/util/concurrent/Future\n         28: astore_3\n         29: aload_3\n-        30: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+        30: invokeinterface #188,  1          // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n         35: pop\n         36: goto          10\n         39: aload_0\n-        40: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;\n-        43: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V\n+        40: getfield      #106                // Field es:Ljava/util/concurrent/ExecutorService;\n+        43: invokeinterface #190,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V\n         48: goto          65\n         51: astore        4\n         53: aload_0\n-        54: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;\n-        57: invokeinterface #53,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V\n+        54: getfield      #106                // Field es:Ljava/util/concurrent/ExecutorService;\n+        57: invokeinterface #190,  1          // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V\n         62: aload         4\n         64: athrow\n         65: aload_0\n-        66: getfield      #30                 // Field es:Ljava/util/concurrent/ExecutorService;\n-        69: ldc2_w        #54                 // long 60000l\n-        72: getstatic     #56                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-        75: invokeinterface #57,  4           // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n+        66: getfield      #106                // Field es:Ljava/util/concurrent/ExecutorService;\n+        69: ldc2_w        #193                // long 60000l\n+        72: getstatic     #195                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+        75: invokeinterface #201,  4          // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z\n         80: pop\n         81: aload_0\n-        82: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J\n-        85: putfield      #58                 // Field compressionDoneAt:J\n+        82: invokestatic  #80                 // Method java/lang/System.currentTimeMillis:()J\n+        85: putfield      #205                // Field compressionDoneAt:J\n         88: aload_0\n-        89: getfield      #21                 // Field futures:Ljava/util/Deque;\n-        92: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+        89: getfield      #77                 // Field futures:Ljava/util/Deque;\n+        92: invokeinterface #172,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n         97: astore_2\n         98: aload_2\n-        99: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        99: invokeinterface #176,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        104: ifeq          140\n        107: aload_2\n-       108: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       113: checkcast     #51                 // class java/util/concurrent/Future\n+       108: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       113: checkcast     #186                // class java/util/concurrent/Future\n        116: astore_3\n        117: aload_3\n-       118: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n-       123: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+       118: invokeinterface #188,  1          // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+       123: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n        126: astore        4\n        128: aload         4\n-       130: invokevirtual #59                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+       130: invokevirtual #208                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n        133: aload_1\n-       134: invokevirtual #60                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+       134: invokevirtual #212                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.writeNextZipEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n        137: goto          98\n        140: aload_0\n        141: getfield      #1                  // Field streams:Ljava/util/Deque;\n-       144: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+       144: invokeinterface #172,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n        149: astore_2\n        150: aload_2\n-       151: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       151: invokeinterface #176,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        156: ifeq          176\n        159: aload_2\n-       160: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       165: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+       160: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       165: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n        168: astore_3\n        169: aload_3\n-       170: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n+       170: invokevirtual #218                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n        173: goto          150\n        176: aload_0\n-       177: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J\n-       180: putfield      #62                 // Field scatterDoneAt:J\n+       177: invokestatic  #80                 // Method java/lang/System.currentTimeMillis:()J\n+       180: putfield      #221                // Field scatterDoneAt:J\n        183: aload_0\n-       184: invokespecial #63                 // Method closeAll:()V\n+       184: invokespecial #224                // Method closeAll:()V\n        187: goto          199\n        190: astore        5\n        192: aload_0\n-       193: invokespecial #63                 // Method closeAll:()V\n+       193: invokespecial #224                // Method closeAll:()V\n        196: aload         5\n        198: athrow\n        199: return\n       Exception table:\n          from    to  target type\n              0    39    51   any\n             51    53    51   any\n@@ -871,52 +871,52 @@\n       throws java.io.IOException, java.lang.InterruptedException, java.util.concurrent.ExecutionException\n \n   public org.apache.commons.compress.archivers.zip.ScatterStatistics getStatisticsMessage();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ScatterStatistics;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=8, locals=1, args_size=1\n-         0: new           #64                 // class org/apache/commons/compress/archivers/zip/ScatterStatistics\n+         0: new           #227                // class org/apache/commons/compress/archivers/zip/ScatterStatistics\n          3: dup\n          4: aload_0\n-         5: getfield      #58                 // Field compressionDoneAt:J\n+         5: getfield      #205                // Field compressionDoneAt:J\n          8: aload_0\n-         9: getfield      #23                 // Field startedAt:J\n+         9: getfield      #86                 // Field startedAt:J\n         12: lsub\n         13: aload_0\n-        14: getfield      #62                 // Field scatterDoneAt:J\n+        14: getfield      #221                // Field scatterDoneAt:J\n         17: aload_0\n-        18: getfield      #58                 // Field compressionDoneAt:J\n+        18: getfield      #205                // Field compressionDoneAt:J\n         21: lsub\n-        22: invokespecial #65                 // Method org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n+        22: invokespecial #229                // Method org/apache/commons/compress/archivers/zip/ScatterStatistics.\"<init>\":(JJ)V\n         25: areturn\n       LineNumberTable:\n         line 315: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n \n   private void closeAll();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=4, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field streams:Ljava/util/Deque;\n-         4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+         4: invokeinterface #172,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n          9: astore_1\n         10: aload_1\n-        11: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        11: invokeinterface #176,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifeq          40\n         19: aload_1\n-        20: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        25: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+        20: invokeinterface #182,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        25: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n         28: astore_2\n         29: aload_2\n-        30: invokevirtual #61                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n+        30: invokevirtual #218                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.close:()V\n         33: goto          37\n         36: astore_3\n         37: goto          10\n         40: return\n       Exception table:\n          from    to  target type\n             29    33    36   Class java/io/IOException\n@@ -946,22 +946,22 @@\n \n   private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$createCallable$2(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequestSupplier) throws java.lang.Exception;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n-         4: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-         7: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+         1: getfield      #95                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n+         4: invokevirtual #234                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+         7: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n         10: astore_2\n         11: aload_2\n         12: aload_1\n-        13: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-        18: invokevirtual #69                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+        13: invokeinterface #237,  1          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier.get:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+        18: invokevirtual #242                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n         21: aload_2\n         22: areturn\n       LineNumberTable:\n         line 254: 0\n         line 255: 11\n         line 256: 21\n       LocalVariableTable:\n@@ -974,21 +974,21 @@\n \n   private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$createCallable$1(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest) throws java.lang.Exception;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n-         4: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-         7: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+         1: getfield      #95                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n+         4: invokevirtual #234                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+         7: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n         10: astore_2\n         11: aload_2\n         12: aload_1\n-        13: invokevirtual #69                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n+        13: invokevirtual #242                // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.addArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n         16: aload_2\n         17: areturn\n       LineNumberTable:\n         line 230: 0\n         line 231: 11\n         line 232: 16\n       LocalVariableTable:\n@@ -1001,20 +1001,20 @@\n \n   private org.apache.commons.compress.archivers.zip.ScatterZipOutputStream lambda$submit$0(java.util.concurrent.Callable) throws java.lang.Exception;\n     descriptor: (Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #70,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;\n+         1: invokeinterface #246,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: getfield      #26                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n-        11: invokevirtual #67                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n-        14: checkcast     #7                  // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+         8: getfield      #95                 // Field tlScatterStreams:Ljava/lang/ThreadLocal;\n+        11: invokevirtual #234                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;\n+        14: checkcast     #31                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n         17: areturn\n       LineNumberTable:\n         line 187: 0\n         line 188: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n@@ -1024,30 +1024,30 @@\n \n   static org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier access$000(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n+         1: getfield      #11                 // Field backingStoreSupplier:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n          4: areturn\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n \n   static org.apache.commons.compress.archivers.zip.ScatterZipOutputStream access$100(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator, org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+         2: invokespecial #7                  // Method createDeferred:(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n          5: areturn\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0    x0   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n             0       6     1    x1   Lorg/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier;\n@@ -1065,28 +1065,28 @@\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator;\n }\n SourceFile: \"ParallelScatterZipCreator.java\"\n-InnerClasses:\n-  private static #73= #13 of #71;         // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #24;                                    // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  public static #326= #247 of #7;         // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  public static final #345= #344 of #347; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #214 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #323 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #215 ()Ljava/lang/Object;\n-      #216 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #217 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  1: #214 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #330 ()Ljava/lang/Object;\n+      #331 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$submit$0:(Ljava/util/concurrent/Callable;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #334 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  1: #323 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #215 ()Ljava/lang/Object;\n-      #232 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #217 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  2: #214 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #330 ()Ljava/lang/Object;\n+      #336 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$1:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #334 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  2: #323 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #215 ()Ljava/lang/Object;\n-      #234 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-      #217 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #330 ()Ljava/lang/Object;\n+      #339 REF_invokeSpecial org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator.lambda$createCallable$2:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequestSupplier;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+      #334 ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+InnerClasses:\n+  private static #343= #56 of #2;         // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #90;                                    // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n+  public static #344= #213 of #31;        // ZipEntryWriter=class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter of class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  public static final #349= #345 of #347; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
