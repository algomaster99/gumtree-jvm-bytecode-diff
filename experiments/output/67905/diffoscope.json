{"diffoscope-json-version": 1, "source1": "first/ReaderInputStream.class", "source2": "second/ReaderInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,234 +1,232 @@\n-  SHA-256 checksum b72f272d9f99649995cd482a0b26ad9118bc0ead36692c780a952f207a52ee0a\n+  SHA-256 checksum f7602e677ffc38664bd3f3d711b644b72398f570c5de58d80da8b74aa5893506\n   Compiled from \"ReaderInputStream.java\"\n public class org.apache.commons.io.input.ReaderInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/io/input/ReaderInputStream\n-  super_class: #53                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/ReaderInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 7, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Class              #110          // org/apache/commons/io/IOUtils\n-    #2 = Class              #111          // org/apache/commons/io/input/ReaderInputStream\n-    #3 = Methodref          #2.#112       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-    #4 = Methodref          #53.#113      // java/io/InputStream.\"<init>\":()V\n-    #5 = Fieldref           #2.#114       // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n-    #6 = Fieldref           #2.#115       // org/apache/commons/io/input/ReaderInputStream.encoder:Ljava/nio/charset/CharsetEncoder;\n-    #7 = Methodref          #116.#117     // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-    #8 = Fieldref           #2.#118       // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n-    #9 = Methodref          #116.#119     // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n-   #10 = Methodref          #120.#121     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #11 = Fieldref           #2.#122       // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n-   #12 = Methodref          #120.#123     // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n-   #13 = Methodref          #124.#125     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #14 = Fieldref           #126.#127     // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-   #15 = Methodref          #128.#129     // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #16 = Methodref          #128.#130     // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-   #17 = Methodref          #2.#131       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #18 = Methodref          #124.#132     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #19 = Methodref          #2.#133       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-   #20 = Methodref          #124.#134     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #21 = Methodref          #2.#135       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #22 = Fieldref           #2.#136       // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n-   #23 = Fieldref           #2.#137       // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n-   #24 = Methodref          #138.#139     // java/nio/charset/CoderResult.isUnderflow:()Z\n-   #25 = Methodref          #116.#140     // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n-   #26 = Methodref          #116.#141     // java/nio/CharBuffer.position:()I\n-   #27 = Methodref          #116.#142     // java/nio/CharBuffer.array:()[C\n-   #28 = Methodref          #116.#143     // java/nio/CharBuffer.remaining:()I\n-   #29 = Methodref          #144.#145     // java/io/Reader.read:([CII)I\n-   #30 = Methodref          #116.#146     // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n-   #31 = Methodref          #120.#147     // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n-   #32 = Methodref          #128.#148     // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-   #33 = String             #100          // array\n-   #34 = Methodref          #149.#150     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #35 = Class              #151          // java/lang/IndexOutOfBoundsException\n-   #36 = Class              #152          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#113      // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = String             #153          // Array Size=\n-   #39 = Methodref          #36.#154      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #36.#155      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #41 = String             #156          // , offset=\n-   #42 = String             #157          // , length=\n-   #43 = Methodref          #36.#158      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #35.#159      // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #120.#160     // java/nio/ByteBuffer.hasRemaining:()Z\n-   #46 = Methodref          #120.#143     // java/nio/ByteBuffer.remaining:()I\n-   #47 = Methodref          #161.#162     // java/lang/Math.min:(II)I\n-   #48 = Methodref          #120.#163     // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n-   #49 = Methodref          #2.#164       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n-   #50 = Methodref          #2.#165       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n-   #51 = Methodref          #120.#166     // java/nio/ByteBuffer.get:()B\n-   #52 = Methodref          #144.#167     // java/io/Reader.close:()V\n-   #53 = Class              #168          // java/io/InputStream\n-   #54 = Utf8               DEFAULT_BUFFER_SIZE\n-   #55 = Utf8               I\n-   #56 = Utf8               ConstantValue\n-   #57 = Integer            1024\n-   #58 = Utf8               reader\n-   #59 = Utf8               Ljava/io/Reader;\n-   #60 = Utf8               encoder\n-   #61 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-   #62 = Utf8               encoderIn\n-   #63 = Utf8               Ljava/nio/CharBuffer;\n-   #64 = Utf8               encoderOut\n-   #65 = Utf8               Ljava/nio/ByteBuffer;\n-   #66 = Utf8               lastCoderResult\n-   #67 = Utf8               Ljava/nio/charset/CoderResult;\n-   #68 = Utf8               endOfInput\n-   #69 = Utf8               Z\n-   #70 = Utf8               <init>\n-   #71 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n-   #72 = Utf8               Code\n-   #73 = Utf8               LineNumberTable\n-   #74 = Utf8               LocalVariableTable\n-   #75 = Utf8               this\n-   #76 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n-   #77 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-   #78 = Utf8               bufferSize\n-   #79 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-   #80 = Utf8               charset\n-   #81 = Utf8               Ljava/nio/charset/Charset;\n-   #82 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-   #83 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n-   #84 = Utf8               charsetName\n-   #85 = Utf8               Ljava/lang/String;\n-   #86 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n-   #87 = Utf8               (Ljava/io/Reader;)V\n-   #88 = Utf8               Deprecated\n-   #89 = Utf8               RuntimeVisibleAnnotations\n-   #90 = Utf8               Ljava/lang/Deprecated;\n-   #91 = Utf8               fillBuffer\n-   #92 = Utf8               ()V\n-   #93 = Utf8               position\n-   #94 = Utf8               c\n-   #95 = Utf8               StackMapTable\n-   #96 = Utf8               Exceptions\n-   #97 = Class              #169          // java/io/IOException\n-   #98 = Utf8               read\n-   #99 = Utf8               ([BII)I\n-  #100 = Utf8               array\n-  #101 = Utf8               [B\n-  #102 = Utf8               off\n-  #103 = Utf8               len\n-  #104 = Utf8               ([B)I\n-  #105 = Utf8               b\n-  #106 = Utf8               ()I\n-  #107 = Utf8               close\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               ReaderInputStream.java\n-  #110 = Utf8               org/apache/commons/io/IOUtils\n-  #111 = Utf8               org/apache/commons/io/input/ReaderInputStream\n-  #112 = NameAndType        #70:#77       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n-  #113 = NameAndType        #70:#92       // \"<init>\":()V\n-  #114 = NameAndType        #58:#59       // reader:Ljava/io/Reader;\n-  #115 = NameAndType        #60:#61       // encoder:Ljava/nio/charset/CharsetEncoder;\n-  #116 = Class              #170          // java/nio/CharBuffer\n-  #117 = NameAndType        #171:#172     // allocate:(I)Ljava/nio/CharBuffer;\n-  #118 = NameAndType        #62:#63       // encoderIn:Ljava/nio/CharBuffer;\n-  #119 = NameAndType        #173:#174     // flip:()Ljava/nio/CharBuffer;\n-  #120 = Class              #175          // java/nio/ByteBuffer\n-  #121 = NameAndType        #171:#176     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #122 = NameAndType        #64:#65       // encoderOut:Ljava/nio/ByteBuffer;\n-  #123 = NameAndType        #173:#177     // flip:()Ljava/nio/ByteBuffer;\n-  #124 = Class              #178          // java/nio/charset/Charset\n-  #125 = NameAndType        #179:#180     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-  #126 = Class              #181          // java/nio/charset/CodingErrorAction\n-  #127 = NameAndType        #182:#183     // REPLACE:Ljava/nio/charset/CodingErrorAction;\n-  #128 = Class              #184          // java/nio/charset/CharsetEncoder\n-  #129 = NameAndType        #185:#186     // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #130 = NameAndType        #187:#186     // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #131 = NameAndType        #70:#79       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n-  #132 = NameAndType        #188:#189     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #133 = NameAndType        #70:#83       // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n-  #134 = NameAndType        #190:#191     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #135 = NameAndType        #70:#82       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n-  #136 = NameAndType        #68:#69       // endOfInput:Z\n-  #137 = NameAndType        #66:#67       // lastCoderResult:Ljava/nio/charset/CoderResult;\n-  #138 = Class              #192          // java/nio/charset/CoderResult\n-  #139 = NameAndType        #193:#194     // isUnderflow:()Z\n-  #140 = NameAndType        #195:#174     // compact:()Ljava/nio/CharBuffer;\n-  #141 = NameAndType        #93:#106      // position:()I\n-  #142 = NameAndType        #100:#196     // array:()[C\n-  #143 = NameAndType        #197:#106     // remaining:()I\n-  #144 = Class              #198          // java/io/Reader\n-  #145 = NameAndType        #98:#199      // read:([CII)I\n-  #146 = NameAndType        #93:#172      // position:(I)Ljava/nio/CharBuffer;\n-  #147 = NameAndType        #195:#177     // compact:()Ljava/nio/ByteBuffer;\n-  #148 = NameAndType        #200:#201     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #149 = Class              #202          // java/util/Objects\n-  #150 = NameAndType        #203:#204     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #151 = Utf8               java/lang/IndexOutOfBoundsException\n-  #152 = Utf8               java/lang/StringBuilder\n-  #153 = Utf8               Array Size=\n-  #154 = NameAndType        #205:#206     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #155 = NameAndType        #205:#207     // append:(I)Ljava/lang/StringBuilder;\n-  #156 = Utf8               , offset=\n-  #157 = Utf8               , length=\n-  #158 = NameAndType        #208:#209     // toString:()Ljava/lang/String;\n-  #159 = NameAndType        #70:#210      // \"<init>\":(Ljava/lang/String;)V\n-  #160 = NameAndType        #211:#194     // hasRemaining:()Z\n-  #161 = Class              #212          // java/lang/Math\n-  #162 = NameAndType        #213:#214     // min:(II)I\n-  #163 = NameAndType        #215:#216     // get:([BII)Ljava/nio/ByteBuffer;\n-  #164 = NameAndType        #91:#92       // fillBuffer:()V\n-  #165 = NameAndType        #98:#99       // read:([BII)I\n-  #166 = NameAndType        #215:#217     // get:()B\n-  #167 = NameAndType        #107:#92      // close:()V\n-  #168 = Utf8               java/io/InputStream\n-  #169 = Utf8               java/io/IOException\n-  #170 = Utf8               java/nio/CharBuffer\n-  #171 = Utf8               allocate\n-  #172 = Utf8               (I)Ljava/nio/CharBuffer;\n-  #173 = Utf8               flip\n-  #174 = Utf8               ()Ljava/nio/CharBuffer;\n-  #175 = Utf8               java/nio/ByteBuffer\n-  #176 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #177 = Utf8               ()Ljava/nio/ByteBuffer;\n-  #178 = Utf8               java/nio/charset/Charset\n-  #179 = Utf8               newEncoder\n-  #180 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-  #181 = Utf8               java/nio/charset/CodingErrorAction\n-  #182 = Utf8               REPLACE\n-  #183 = Utf8               Ljava/nio/charset/CodingErrorAction;\n-  #184 = Utf8               java/nio/charset/CharsetEncoder\n-  #185 = Utf8               onMalformedInput\n-  #186 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-  #187 = Utf8               onUnmappableCharacter\n-  #188 = Utf8               forName\n-  #189 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #190 = Utf8               defaultCharset\n-  #191 = Utf8               ()Ljava/nio/charset/Charset;\n-  #192 = Utf8               java/nio/charset/CoderResult\n-  #193 = Utf8               isUnderflow\n-  #194 = Utf8               ()Z\n-  #195 = Utf8               compact\n-  #196 = Utf8               ()[C\n-  #197 = Utf8               remaining\n-  #198 = Utf8               java/io/Reader\n-  #199 = Utf8               ([CII)I\n-  #200 = Utf8               encode\n-  #201 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-  #202 = Utf8               java/util/Objects\n-  #203 = Utf8               requireNonNull\n-  #204 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #205 = Utf8               append\n-  #206 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #207 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #208 = Utf8               toString\n-  #209 = Utf8               ()Ljava/lang/String;\n-  #210 = Utf8               (Ljava/lang/String;)V\n-  #211 = Utf8               hasRemaining\n-  #212 = Utf8               java/lang/Math\n-  #213 = Utf8               min\n-  #214 = Utf8               (II)I\n-  #215 = Utf8               get\n-  #216 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n-  #217 = Utf8               ()B\n+    #1 = Class              #2            // org/apache/commons/io/input/ReaderInputStream\n+    #2 = Utf8               org/apache/commons/io/input/ReaderInputStream\n+    #3 = Class              #4            // java/io/InputStream\n+    #4 = Utf8               java/io/InputStream\n+    #5 = Utf8               DEFAULT_BUFFER_SIZE\n+    #6 = Utf8               I\n+    #7 = Utf8               ConstantValue\n+    #8 = Integer            1024\n+    #9 = Utf8               reader\n+   #10 = Utf8               Ljava/io/Reader;\n+   #11 = Utf8               encoder\n+   #12 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+   #13 = Utf8               encoderIn\n+   #14 = Utf8               Ljava/nio/CharBuffer;\n+   #15 = Utf8               encoderOut\n+   #16 = Utf8               Ljava/nio/ByteBuffer;\n+   #17 = Utf8               lastCoderResult\n+   #18 = Utf8               Ljava/nio/charset/CoderResult;\n+   #19 = Utf8               endOfInput\n+   #20 = Utf8               Z\n+   #21 = Utf8               <init>\n+   #22 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;)V\n+   #23 = Utf8               Code\n+   #24 = Methodref          #1.#25        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+   #25 = NameAndType        #21:#26       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+   #26 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+   #27 = Utf8               LineNumberTable\n+   #28 = Utf8               LocalVariableTable\n+   #29 = Utf8               this\n+   #30 = Utf8               Lorg/apache/commons/io/input/ReaderInputStream;\n+   #31 = Methodref          #3.#32        // java/io/InputStream.\"<init>\":()V\n+   #32 = NameAndType        #21:#33       // \"<init>\":()V\n+   #33 = Utf8               ()V\n+   #34 = Fieldref           #1.#35        // org/apache/commons/io/input/ReaderInputStream.reader:Ljava/io/Reader;\n+   #35 = NameAndType        #9:#10        // reader:Ljava/io/Reader;\n+   #36 = Fieldref           #1.#37        // org/apache/commons/io/input/ReaderInputStream.encoder:Ljava/nio/charset/CharsetEncoder;\n+   #37 = NameAndType        #11:#12       // encoder:Ljava/nio/charset/CharsetEncoder;\n+   #38 = Methodref          #39.#41       // java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+   #39 = Class              #40           // java/nio/CharBuffer\n+   #40 = Utf8               java/nio/CharBuffer\n+   #41 = NameAndType        #42:#43       // allocate:(I)Ljava/nio/CharBuffer;\n+   #42 = Utf8               allocate\n+   #43 = Utf8               (I)Ljava/nio/CharBuffer;\n+   #44 = Fieldref           #1.#45        // org/apache/commons/io/input/ReaderInputStream.encoderIn:Ljava/nio/CharBuffer;\n+   #45 = NameAndType        #13:#14       // encoderIn:Ljava/nio/CharBuffer;\n+   #46 = Methodref          #39.#47       // java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+   #47 = NameAndType        #48:#49       // flip:()Ljava/nio/CharBuffer;\n+   #48 = Utf8               flip\n+   #49 = Utf8               ()Ljava/nio/CharBuffer;\n+   #50 = Methodref          #51.#53       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #51 = Class              #52           // java/nio/ByteBuffer\n+   #52 = Utf8               java/nio/ByteBuffer\n+   #53 = NameAndType        #42:#54       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #54 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #55 = Fieldref           #1.#56        // org/apache/commons/io/input/ReaderInputStream.encoderOut:Ljava/nio/ByteBuffer;\n+   #56 = NameAndType        #15:#16       // encoderOut:Ljava/nio/ByteBuffer;\n+   #57 = Methodref          #51.#58       // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #58 = NameAndType        #48:#59       // flip:()Ljava/nio/ByteBuffer;\n+   #59 = Utf8               ()Ljava/nio/ByteBuffer;\n+   #60 = Utf8               bufferSize\n+   #61 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #62 = Methodref          #63.#65       // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #63 = Class              #64           // java/nio/charset/Charset\n+   #64 = Utf8               java/nio/charset/Charset\n+   #65 = NameAndType        #66:#67       // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #66 = Utf8               newEncoder\n+   #67 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+   #68 = Fieldref           #69.#71       // java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+   #69 = Class              #70           // java/nio/charset/CodingErrorAction\n+   #70 = Utf8               java/nio/charset/CodingErrorAction\n+   #71 = NameAndType        #72:#73       // REPLACE:Ljava/nio/charset/CodingErrorAction;\n+   #72 = Utf8               REPLACE\n+   #73 = Utf8               Ljava/nio/charset/CodingErrorAction;\n+   #74 = Methodref          #75.#77       // java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #75 = Class              #76           // java/nio/charset/CharsetEncoder\n+   #76 = Utf8               java/nio/charset/CharsetEncoder\n+   #77 = NameAndType        #78:#79       // onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #78 = Utf8               onMalformedInput\n+   #79 = Utf8               (Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #80 = Methodref          #75.#81       // java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #81 = NameAndType        #82:#79       // onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+   #82 = Utf8               onUnmappableCharacter\n+   #83 = Utf8               charset\n+   #84 = Utf8               Ljava/nio/charset/Charset;\n+   #85 = Utf8               (Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+   #86 = Methodref          #1.#87        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #87 = NameAndType        #21:#61       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+   #88 = Utf8               (Ljava/io/Reader;Ljava/lang/String;I)V\n+   #89 = Methodref          #63.#90       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #90 = NameAndType        #91:#92       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #91 = Utf8               forName\n+   #92 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #93 = Utf8               charsetName\n+   #94 = Utf8               Ljava/lang/String;\n+   #95 = Utf8               (Ljava/io/Reader;Ljava/lang/String;)V\n+   #96 = Methodref          #1.#97        // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+   #97 = NameAndType        #21:#88       // \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+   #98 = Utf8               (Ljava/io/Reader;)V\n+   #99 = Utf8               Deprecated\n+  #100 = Utf8               RuntimeVisibleAnnotations\n+  #101 = Utf8               Ljava/lang/Deprecated;\n+  #102 = Methodref          #63.#103      // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+  #103 = NameAndType        #104:#105     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #104 = Utf8               defaultCharset\n+  #105 = Utf8               ()Ljava/nio/charset/Charset;\n+  #106 = Methodref          #1.#107       // org/apache/commons/io/input/ReaderInputStream.\"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+  #107 = NameAndType        #21:#85       // \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+  #108 = Utf8               fillBuffer\n+  #109 = Utf8               Exceptions\n+  #110 = Class              #111          // java/io/IOException\n+  #111 = Utf8               java/io/IOException\n+  #112 = Fieldref           #1.#113       // org/apache/commons/io/input/ReaderInputStream.endOfInput:Z\n+  #113 = NameAndType        #19:#20       // endOfInput:Z\n+  #114 = Fieldref           #1.#115       // org/apache/commons/io/input/ReaderInputStream.lastCoderResult:Ljava/nio/charset/CoderResult;\n+  #115 = NameAndType        #17:#18       // lastCoderResult:Ljava/nio/charset/CoderResult;\n+  #116 = Methodref          #117.#119     // java/nio/charset/CoderResult.isUnderflow:()Z\n+  #117 = Class              #118          // java/nio/charset/CoderResult\n+  #118 = Utf8               java/nio/charset/CoderResult\n+  #119 = NameAndType        #120:#121     // isUnderflow:()Z\n+  #120 = Utf8               isUnderflow\n+  #121 = Utf8               ()Z\n+  #122 = Methodref          #39.#123      // java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+  #123 = NameAndType        #124:#49      // compact:()Ljava/nio/CharBuffer;\n+  #124 = Utf8               compact\n+  #125 = Methodref          #39.#126      // java/nio/CharBuffer.position:()I\n+  #126 = NameAndType        #127:#128     // position:()I\n+  #127 = Utf8               position\n+  #128 = Utf8               ()I\n+  #129 = Methodref          #39.#130      // java/nio/CharBuffer.array:()[C\n+  #130 = NameAndType        #131:#132     // array:()[C\n+  #131 = Utf8               array\n+  #132 = Utf8               ()[C\n+  #133 = Methodref          #39.#134      // java/nio/CharBuffer.remaining:()I\n+  #134 = NameAndType        #135:#128     // remaining:()I\n+  #135 = Utf8               remaining\n+  #136 = Methodref          #137.#139     // java/io/Reader.read:([CII)I\n+  #137 = Class              #138          // java/io/Reader\n+  #138 = Utf8               java/io/Reader\n+  #139 = NameAndType        #140:#141     // read:([CII)I\n+  #140 = Utf8               read\n+  #141 = Utf8               ([CII)I\n+  #142 = Methodref          #39.#143      // java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+  #143 = NameAndType        #127:#43      // position:(I)Ljava/nio/CharBuffer;\n+  #144 = Methodref          #51.#145      // java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+  #145 = NameAndType        #124:#59      // compact:()Ljava/nio/ByteBuffer;\n+  #146 = Methodref          #75.#147      // java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #147 = NameAndType        #148:#149     // encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #148 = Utf8               encode\n+  #149 = Utf8               (Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+  #150 = Utf8               c\n+  #151 = Utf8               StackMapTable\n+  #152 = Utf8               ([BII)I\n+  #153 = String             #131          // array\n+  #154 = Methodref          #155.#157     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #155 = Class              #156          // java/util/Objects\n+  #156 = Utf8               java/util/Objects\n+  #157 = NameAndType        #158:#159     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #158 = Utf8               requireNonNull\n+  #159 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #160 = Class              #161          // java/lang/IndexOutOfBoundsException\n+  #161 = Utf8               java/lang/IndexOutOfBoundsException\n+  #162 = Class              #163          // java/lang/StringBuilder\n+  #163 = Utf8               java/lang/StringBuilder\n+  #164 = String             #165          // Array Size=\n+  #165 = Utf8               Array Size=\n+  #166 = Methodref          #162.#167     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #167 = NameAndType        #21:#168      // \"<init>\":(Ljava/lang/String;)V\n+  #168 = Utf8               (Ljava/lang/String;)V\n+  #169 = Methodref          #162.#170     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #170 = NameAndType        #171:#172     // append:(I)Ljava/lang/StringBuilder;\n+  #171 = Utf8               append\n+  #172 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #173 = String             #174          // , offset=\n+  #174 = Utf8               , offset=\n+  #175 = Methodref          #162.#176     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #176 = NameAndType        #171:#177     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #177 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #178 = String             #179          // , length=\n+  #179 = Utf8               , length=\n+  #180 = Methodref          #162.#181     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #181 = NameAndType        #182:#183     // toString:()Ljava/lang/String;\n+  #182 = Utf8               toString\n+  #183 = Utf8               ()Ljava/lang/String;\n+  #184 = Methodref          #160.#167     // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #185 = Methodref          #51.#186      // java/nio/ByteBuffer.hasRemaining:()Z\n+  #186 = NameAndType        #187:#121     // hasRemaining:()Z\n+  #187 = Utf8               hasRemaining\n+  #188 = Methodref          #51.#134      // java/nio/ByteBuffer.remaining:()I\n+  #189 = Methodref          #190.#192     // java/lang/Math.min:(II)I\n+  #190 = Class              #191          // java/lang/Math\n+  #191 = Utf8               java/lang/Math\n+  #192 = NameAndType        #193:#194     // min:(II)I\n+  #193 = Utf8               min\n+  #194 = Utf8               (II)I\n+  #195 = Methodref          #51.#196      // java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+  #196 = NameAndType        #197:#198     // get:([BII)Ljava/nio/ByteBuffer;\n+  #197 = Utf8               get\n+  #198 = Utf8               ([BII)Ljava/nio/ByteBuffer;\n+  #199 = Methodref          #1.#200       // org/apache/commons/io/input/ReaderInputStream.fillBuffer:()V\n+  #200 = NameAndType        #108:#33      // fillBuffer:()V\n+  #201 = Utf8               [B\n+  #202 = Utf8               off\n+  #203 = Utf8               len\n+  #204 = Utf8               ([B)I\n+  #205 = Methodref          #1.#206       // org/apache/commons/io/input/ReaderInputStream.read:([BII)I\n+  #206 = NameAndType        #140:#152     // read:([BII)I\n+  #207 = Utf8               b\n+  #208 = Methodref          #51.#209      // java/nio/ByteBuffer.get:()B\n+  #209 = NameAndType        #197:#210     // get:()B\n+  #210 = Utf8               ()B\n+  #211 = Utf8               close\n+  #212 = Methodref          #137.#213     // java/io/Reader.close:()V\n+  #213 = NameAndType        #211:#33      // close:()V\n+  #214 = Utf8               SourceFile\n+  #215 = Utf8               ReaderInputStream.java\n {\n   private static final int DEFAULT_BUFFER_SIZE = 1024;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1024\n \n   private final java.io.Reader reader;\n@@ -260,15 +258,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+         6: invokespecial #24                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n          9: return\n       LineNumberTable:\n         line 110: 0\n         line 111: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -277,36 +275,36 @@\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader, java.nio.charset.CharsetEncoder, int);\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #4                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #31                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #5                  // Field reader:Ljava/io/Reader;\n+         6: putfield      #34                 // Field reader:Ljava/io/Reader;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;\n+        11: putfield      #36                 // Field encoder:Ljava/nio/charset/CharsetEncoder;\n         14: aload_0\n         15: iload_3\n-        16: invokestatic  #7                  // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n-        19: putfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+        16: invokestatic  #38                 // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;\n+        19: putfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n         22: aload_0\n-        23: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        26: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+        23: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        26: invokevirtual #46                 // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n         29: pop\n         30: aload_0\n         31: sipush        128\n-        34: invokestatic  #10                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-        37: putfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        34: invokestatic  #50                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        37: putfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n         40: aload_0\n-        41: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        44: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+        41: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        44: invokevirtual #57                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n         47: pop\n         48: return\n       LineNumberTable:\n         line 121: 0\n         line 122: 4\n         line 123: 9\n         line 124: 14\n@@ -325,28 +323,28 @@\n     descriptor: (Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #13                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-         6: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-         9: invokevirtual #15                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n-        12: getstatic     #14                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n-        15: invokevirtual #16                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+         3: invokevirtual #62                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+         6: getstatic     #68                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+         9: invokevirtual #74                 // Method java/nio/charset/CharsetEncoder.onMalformedInput:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n+        12: getstatic     #68                 // Field java/nio/charset/CodingErrorAction.REPLACE:Ljava/nio/charset/CodingErrorAction;\n+        15: invokevirtual #80                 // Method java/nio/charset/CharsetEncoder.onUnmappableCharacter:(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;\n         18: iload_3\n-        19: invokespecial #3                  // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n+        19: invokespecial #24                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/CharsetEncoder;I)V\n         22: return\n       LineNumberTable:\n         line 138: 0\n-        line 139: 3\n-        line 140: 9\n-        line 141: 15\n-        line 138: 19\n+        line 139: 2\n+        line 140: 6\n+        line 141: 12\n+        line 142: 18\n         line 143: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      23     1 reader   Ljava/io/Reader;\n             0      23     2 charset   Ljava/nio/charset/Charset;\n             0      23     3 bufferSize   I\n@@ -356,15 +354,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #17                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         6: invokespecial #86                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n          9: return\n       LineNumberTable:\n         line 153: 0\n         line 154: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -375,17 +373,17 @@\n     descriptor: (Ljava/io/Reader;Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #18                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         3: invokestatic  #89                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n          6: iload_3\n-         7: invokespecial #17                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n+         7: invokespecial #86                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;I)V\n         10: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n@@ -398,330 +396,335 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: sipush        1024\n-         6: invokespecial #19                 // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n+         6: invokespecial #96                 // Method \"<init>\":(Ljava/io/Reader;Ljava/lang/String;I)V\n          9: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0      10     1 reader   Ljava/io/Reader;\n             0      10     2 charsetName   Ljava/lang/String;\n \n   public org.apache.commons.io.input.ReaderInputStream(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #101()\n+        java.lang.Deprecated\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #20                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-         5: invokespecial #21                 // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n+         2: invokestatic  #102                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         5: invokespecial #106                // Method \"<init>\":(Ljava/io/Reader;Ljava/nio/charset/Charset;)V\n          8: return\n       LineNumberTable:\n         line 187: 0\n         line 188: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1 reader   Ljava/io/Reader;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #90()\n-        java.lang.Deprecated\n \n   private void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field endOfInput:Z\n+         1: getfield      #112                // Field endOfInput:Z\n          4: ifne          95\n          7: aload_0\n-         8: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+         8: getfield      #114                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n         11: ifnull        24\n         14: aload_0\n-        15: getfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n-        18: invokevirtual #24                 // Method java/nio/charset/CoderResult.isUnderflow:()Z\n+        15: getfield      #114                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+        18: invokevirtual #116                // Method java/nio/charset/CoderResult.isUnderflow:()Z\n         21: ifeq          95\n         24: aload_0\n-        25: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        28: invokevirtual #25                 // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n+        25: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        28: invokevirtual #122                // Method java/nio/CharBuffer.compact:()Ljava/nio/CharBuffer;\n         31: pop\n         32: aload_0\n-        33: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        36: invokevirtual #26                 // Method java/nio/CharBuffer.position:()I\n+        33: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        36: invokevirtual #125                // Method java/nio/CharBuffer.position:()I\n         39: istore_1\n         40: aload_0\n-        41: getfield      #5                  // Field reader:Ljava/io/Reader;\n+        41: getfield      #34                 // Field reader:Ljava/io/Reader;\n         44: aload_0\n-        45: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        48: invokevirtual #27                 // Method java/nio/CharBuffer.array:()[C\n+        45: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        48: invokevirtual #129                // Method java/nio/CharBuffer.array:()[C\n         51: iload_1\n         52: aload_0\n-        53: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        56: invokevirtual #28                 // Method java/nio/CharBuffer.remaining:()I\n-        59: invokevirtual #29                 // Method java/io/Reader.read:([CII)I\n+        53: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        56: invokevirtual #133                // Method java/nio/CharBuffer.remaining:()I\n+        59: invokevirtual #136                // Method java/io/Reader.read:([CII)I\n         62: istore_2\n         63: iload_2\n         64: iconst_m1\n         65: if_icmpne     76\n         68: aload_0\n         69: iconst_1\n-        70: putfield      #22                 // Field endOfInput:Z\n+        70: putfield      #112                // Field endOfInput:Z\n         73: goto          87\n         76: aload_0\n-        77: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+        77: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n         80: iload_1\n         81: iload_2\n         82: iadd\n-        83: invokevirtual #30                 // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n+        83: invokevirtual #142                // Method java/nio/CharBuffer.position:(I)Ljava/nio/CharBuffer;\n         86: pop\n         87: aload_0\n-        88: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n-        91: invokevirtual #9                  // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n+        88: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n+        91: invokevirtual #46                 // Method java/nio/CharBuffer.flip:()Ljava/nio/CharBuffer;\n         94: pop\n         95: aload_0\n-        96: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        99: invokevirtual #31                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n+        96: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        99: invokevirtual #144                // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;\n        102: pop\n        103: aload_0\n        104: aload_0\n-       105: getfield      #6                  // Field encoder:Ljava/nio/charset/CharsetEncoder;\n+       105: getfield      #36                 // Field encoder:Ljava/nio/charset/CharsetEncoder;\n        108: aload_0\n-       109: getfield      #8                  // Field encoderIn:Ljava/nio/CharBuffer;\n+       109: getfield      #44                 // Field encoderIn:Ljava/nio/CharBuffer;\n        112: aload_0\n-       113: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       113: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n        116: aload_0\n-       117: getfield      #22                 // Field endOfInput:Z\n-       120: invokevirtual #32                 // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n-       123: putfield      #23                 // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n+       117: getfield      #112                // Field endOfInput:Z\n+       120: invokevirtual #146                // Method java/nio/charset/CharsetEncoder.encode:(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;\n+       123: putfield      #114                // Field lastCoderResult:Ljava/nio/charset/CoderResult;\n        126: aload_0\n-       127: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-       130: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+       127: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       130: invokevirtual #57                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n        133: pop\n        134: return\n       LineNumberTable:\n         line 197: 0\n         line 198: 24\n         line 199: 32\n         line 203: 40\n         line 204: 63\n         line 205: 68\n+        line 206: 73\n         line 207: 76\n         line 209: 87\n         line 211: 95\n         line 212: 103\n         line 213: 126\n         line 214: 134\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0     135     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n            40      55     1 position   I\n            63      32     2     c   I\n-            0     135     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n       StackMapTable: number_of_entries = 4\n         frame_type = 24 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 51\n           locals = [ int, int ]\n         frame_type = 10 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 7\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=6, args_size=4\n+      stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #33                 // String array\n-         3: invokestatic  #34                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #153                // String array\n+         3: invokestatic  #154                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n-        20: if_icmple     69\n-        23: new           #35                 // class java/lang/IndexOutOfBoundsException\n+        20: if_icmple     66\n+        23: new           #160                // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #36                 // class java/lang/StringBuilder\n+        27: new           #162                // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #38                 // String Array Size=\n-        36: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: aload_1\n-        40: arraylength\n-        41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #41                 // String , offset=\n-        46: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        49: iload_2\n-        50: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #42                 // String , length=\n-        55: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: iload_3\n-        59: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #44                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        68: athrow\n-        69: iconst_0\n-        70: istore        4\n-        72: iload_3\n-        73: ifne          78\n-        76: iconst_0\n-        77: ireturn\n-        78: iload_3\n-        79: ifle          161\n-        82: aload_0\n-        83: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        86: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n-        89: ifeq          137\n-        92: aload_0\n-        93: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        96: invokevirtual #46                 // Method java/nio/ByteBuffer.remaining:()I\n-        99: iload_3\n-       100: invokestatic  #47                 // Method java/lang/Math.min:(II)I\n-       103: istore        5\n-       105: aload_0\n-       106: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-       109: aload_1\n+        31: ldc           #164                // String Array Size=\n+        33: invokespecial #166                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        36: aload_1\n+        37: arraylength\n+        38: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc           #173                // String , offset=\n+        43: invokevirtual #175                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: iload_2\n+        47: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #178                // String , length=\n+        52: invokevirtual #175                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: iload_3\n+        56: invokevirtual #169                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        59: invokevirtual #180                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        62: invokespecial #184                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        65: athrow\n+        66: iconst_0\n+        67: istore        4\n+        69: iload_3\n+        70: ifne          154\n+        73: iconst_0\n+        74: ireturn\n+        75: aload_0\n+        76: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        79: invokevirtual #185                // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        82: ifeq          130\n+        85: aload_0\n+        86: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        89: invokevirtual #188                // Method java/nio/ByteBuffer.remaining:()I\n+        92: iload_3\n+        93: invokestatic  #189                // Method java/lang/Math.min:(II)I\n+        96: istore        5\n+        98: aload_0\n+        99: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       102: aload_1\n+       103: iload_2\n+       104: iload         5\n+       106: invokevirtual #195                // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n+       109: pop\n        110: iload_2\n        111: iload         5\n-       113: invokevirtual #48                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;\n-       116: pop\n-       117: iload_2\n-       118: iload         5\n-       120: iadd\n-       121: istore_2\n-       122: iload_3\n-       123: iload         5\n-       125: isub\n-       126: istore_3\n-       127: iload         4\n-       129: iload         5\n-       131: iadd\n-       132: istore        4\n-       134: goto          78\n-       137: aload_0\n-       138: invokespecial #49                 // Method fillBuffer:()V\n+       113: iadd\n+       114: istore_2\n+       115: iload_3\n+       116: iload         5\n+       118: isub\n+       119: istore_3\n+       120: iload         4\n+       122: iload         5\n+       124: iadd\n+       125: istore        4\n+       127: goto          154\n+       130: aload_0\n+       131: invokespecial #199                // Method fillBuffer:()V\n+       134: aload_0\n+       135: getfield      #112                // Field endOfInput:Z\n+       138: ifeq          154\n        141: aload_0\n-       142: getfield      #22                 // Field endOfInput:Z\n-       145: ifeq          78\n-       148: aload_0\n-       149: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-       152: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n-       155: ifne          78\n-       158: goto          161\n-       161: iload         4\n-       163: ifne          177\n-       166: aload_0\n-       167: getfield      #22                 // Field endOfInput:Z\n-       170: ifeq          177\n-       173: iconst_m1\n-       174: goto          179\n-       177: iload         4\n-       179: ireturn\n+       142: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+       145: invokevirtual #185                // Method java/nio/ByteBuffer.hasRemaining:()Z\n+       148: ifne          154\n+       151: goto          158\n+       154: iload_3\n+       155: ifgt          75\n+       158: iload         4\n+       160: ifne          174\n+       163: aload_0\n+       164: getfield      #112                // Field endOfInput:Z\n+       167: ifeq          174\n+       170: iconst_m1\n+       171: goto          176\n+       174: iload         4\n+       176: ireturn\n       LineNumberTable:\n         line 228: 0\n         line 229: 7\n         line 230: 23\n-        line 233: 69\n-        line 234: 72\n-        line 235: 76\n-        line 237: 78\n-        line 238: 82\n-        line 239: 92\n-        line 240: 105\n-        line 241: 117\n-        line 242: 122\n-        line 243: 127\n-        line 244: 134\n-        line 245: 137\n-        line 246: 141\n-        line 247: 158\n-        line 251: 161\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          105      29     5     c   I\n-            0     180     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n-            0     180     1 array   [B\n-            0     180     2   off   I\n-            0     180     3   len   I\n-           72     108     4  read   I\n-      StackMapTable: number_of_entries = 7\n+        line 231: 41\n+        line 230: 62\n+        line 233: 66\n+        line 234: 69\n+        line 235: 73\n+        line 238: 75\n+        line 239: 85\n+        line 240: 98\n+        line 241: 110\n+        line 242: 115\n+        line 243: 120\n+        line 244: 127\n+        line 245: 130\n+        line 246: 134\n+        line 247: 151\n+        line 237: 154\n+        line 251: 158\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     177     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n+            0     177     1 array   [B\n+            0     177     2   off   I\n+            0     177     3   len   I\n+           69     108     4  read   I\n+           98      29     5     c   I\n+      StackMapTable: number_of_entries = 8\n         frame_type = 23 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 42 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ int ]\n-        frame_type = 58 /* same */\n+        frame_type = 54 /* same */\n         frame_type = 23 /* same */\n+        frame_type = 3 /* same */\n         frame_type = 15 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #50                 // Method read:([BII)I\n+         5: invokevirtual #205                // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 264: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-         4: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+         1: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+         4: invokevirtual #185                // Method java/nio/ByteBuffer.hasRemaining:()Z\n          7: ifeq          22\n         10: aload_0\n-        11: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        14: invokevirtual #51                 // Method java/nio/ByteBuffer.get:()B\n+        11: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        14: invokevirtual #208                // Method java/nio/ByteBuffer.get:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n         22: aload_0\n-        23: invokespecial #49                 // Method fillBuffer:()V\n+        23: invokespecial #199                // Method fillBuffer:()V\n         26: aload_0\n-        27: getfield      #22                 // Field endOfInput:Z\n+        27: getfield      #112                // Field endOfInput:Z\n         30: ifeq          0\n         33: aload_0\n-        34: getfield      #11                 // Field encoderOut:Ljava/nio/ByteBuffer;\n-        37: invokevirtual #45                 // Method java/nio/ByteBuffer.hasRemaining:()Z\n+        34: getfield      #55                 // Field encoderOut:Ljava/nio/ByteBuffer;\n+        37: invokevirtual #185                // Method java/nio/ByteBuffer.hasRemaining:()Z\n         40: ifne          0\n         43: iconst_m1\n         44: ireturn\n       LineNumberTable:\n         line 277: 0\n         line 278: 10\n         line 280: 22\n@@ -729,29 +732,27 @@\n         line 282: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      45     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 0 /* same */\n         frame_type = 21 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field reader:Ljava/io/Reader;\n-         4: invokevirtual #52                 // Method java/io/Reader.close:()V\n+         1: getfield      #34                 // Field reader:Ljava/io/Reader;\n+         4: invokevirtual #212                // Method java/io/Reader.close:()V\n          7: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ReaderInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ReaderInputStream.java\"\n"}]}
