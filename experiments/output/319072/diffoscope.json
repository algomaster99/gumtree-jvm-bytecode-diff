{"diffoscope-json-version": 1, "source1": "first/DatagramSocketClient.class", "source2": "second/DatagramSocketClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,117 +1,117 @@\n-  SHA-256 checksum 00367abd280084ba38ebfd55bb002f1f57238d9f058564a73ad3bfd2312f6f4d\n+  SHA-256 checksum c2c47e28f60949731068a26488b7182885f54f93e208a812c87d2545d74f31b8\n   Compiled from \"DatagramSocketClient.java\"\n public abstract class org.apache.commons.net.DatagramSocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #20                         // org/apache/commons/net/DatagramSocketClient\n-  super_class: #21                        // java/lang/Object\n+  this_class: #14                         // org/apache/commons/net/DatagramSocketClient\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 6, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #21.#68       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #69.#70       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #3 = Fieldref           #20.#71       // org/apache/commons/net/DatagramSocketClient.charset:Ljava/nio/charset/Charset;\n-    #4 = Fieldref           #20.#72       // org/apache/commons/net/DatagramSocketClient._socket_:Ljava/net/DatagramSocket;\n-    #5 = Fieldref           #20.#73       // org/apache/commons/net/DatagramSocketClient._timeout_:I\n-    #6 = Fieldref           #20.#74       // org/apache/commons/net/DatagramSocketClient._isOpen_:Z\n-    #7 = Fieldref           #20.#75       // org/apache/commons/net/DatagramSocketClient.DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n-    #8 = Fieldref           #20.#76       // org/apache/commons/net/DatagramSocketClient._socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n-    #9 = InterfaceMethodref #77.#78       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:()Ljava/net/DatagramSocket;\n-   #10 = Methodref          #79.#80       // java/net/DatagramSocket.setSoTimeout:(I)V\n-   #11 = InterfaceMethodref #77.#81       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(I)Ljava/net/DatagramSocket;\n-   #12 = InterfaceMethodref #77.#82       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n-   #13 = Methodref          #79.#83       // java/net/DatagramSocket.close:()V\n-   #14 = Methodref          #79.#84       // java/net/DatagramSocket.getSoTimeout:()I\n-   #15 = Methodref          #79.#85       // java/net/DatagramSocket.getLocalPort:()I\n-   #16 = Methodref          #79.#86       // java/net/DatagramSocket.getLocalAddress:()Ljava/net/InetAddress;\n-   #17 = Methodref          #69.#87       // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #18 = Class              #88           // org/apache/commons/net/DefaultDatagramSocketFactory\n-   #19 = Methodref          #18.#68       // org/apache/commons/net/DefaultDatagramSocketFactory.\"<init>\":()V\n-   #20 = Class              #89           // org/apache/commons/net/DatagramSocketClient\n-   #21 = Class              #90           // java/lang/Object\n-   #22 = Utf8               DEFAULT_SOCKET_FACTORY\n-   #23 = Utf8               Lorg/apache/commons/net/DatagramSocketFactory;\n-   #24 = Utf8               charset\n-   #25 = Utf8               Ljava/nio/charset/Charset;\n-   #26 = Utf8               _timeout_\n-   #27 = Utf8               I\n-   #28 = Utf8               _socket_\n-   #29 = Utf8               Ljava/net/DatagramSocket;\n-   #30 = Utf8               _isOpen_\n-   #31 = Utf8               Z\n-   #32 = Utf8               _socketFactory_\n-   #33 = Utf8               <init>\n-   #34 = Utf8               ()V\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               open\n-   #38 = Utf8               Exceptions\n-   #39 = Class              #91           // java/net/SocketException\n-   #40 = Utf8               (I)V\n-   #41 = Utf8               (ILjava/net/InetAddress;)V\n-   #42 = Utf8               close\n-   #43 = Utf8               StackMapTable\n-   #44 = Utf8               isOpen\n-   #45 = Utf8               ()Z\n-   #46 = Utf8               setDefaultTimeout\n-   #47 = Utf8               getDefaultTimeout\n-   #48 = Utf8               ()I\n-   #49 = Utf8               setSoTimeout\n-   #50 = Utf8               getSoTimeout\n-   #51 = Utf8               getLocalPort\n-   #52 = Utf8               getLocalAddress\n-   #53 = Utf8               ()Ljava/net/InetAddress;\n-   #54 = Utf8               setDatagramSocketFactory\n-   #55 = Utf8               (Lorg/apache/commons/net/DatagramSocketFactory;)V\n-   #56 = Utf8               getCharsetName\n-   #57 = Utf8               ()Ljava/lang/String;\n-   #58 = Utf8               Deprecated\n-   #59 = Utf8               RuntimeVisibleAnnotations\n-   #60 = Utf8               Ljava/lang/Deprecated;\n-   #61 = Utf8               getCharset\n-   #62 = Utf8               ()Ljava/nio/charset/Charset;\n-   #63 = Utf8               setCharset\n-   #64 = Utf8               (Ljava/nio/charset/Charset;)V\n-   #65 = Utf8               <clinit>\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               DatagramSocketClient.java\n-   #68 = NameAndType        #33:#34       // \"<init>\":()V\n-   #69 = Class              #92           // java/nio/charset/Charset\n-   #70 = NameAndType        #93:#62       // defaultCharset:()Ljava/nio/charset/Charset;\n-   #71 = NameAndType        #24:#25       // charset:Ljava/nio/charset/Charset;\n-   #72 = NameAndType        #28:#29       // _socket_:Ljava/net/DatagramSocket;\n-   #73 = NameAndType        #26:#27       // _timeout_:I\n-   #74 = NameAndType        #30:#31       // _isOpen_:Z\n-   #75 = NameAndType        #22:#23       // DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n-   #76 = NameAndType        #32:#23       // _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n-   #77 = Class              #94           // org/apache/commons/net/DatagramSocketFactory\n-   #78 = NameAndType        #95:#96       // createDatagramSocket:()Ljava/net/DatagramSocket;\n-   #79 = Class              #97           // java/net/DatagramSocket\n-   #80 = NameAndType        #49:#40       // setSoTimeout:(I)V\n-   #81 = NameAndType        #95:#98       // createDatagramSocket:(I)Ljava/net/DatagramSocket;\n-   #82 = NameAndType        #95:#99       // createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n-   #83 = NameAndType        #42:#34       // close:()V\n-   #84 = NameAndType        #50:#48       // getSoTimeout:()I\n-   #85 = NameAndType        #51:#48       // getLocalPort:()I\n-   #86 = NameAndType        #52:#53       // getLocalAddress:()Ljava/net/InetAddress;\n-   #87 = NameAndType        #100:#57      // name:()Ljava/lang/String;\n-   #88 = Utf8               org/apache/commons/net/DefaultDatagramSocketFactory\n-   #89 = Utf8               org/apache/commons/net/DatagramSocketClient\n-   #90 = Utf8               java/lang/Object\n-   #91 = Utf8               java/net/SocketException\n-   #92 = Utf8               java/nio/charset/Charset\n-   #93 = Utf8               defaultCharset\n-   #94 = Utf8               org/apache/commons/net/DatagramSocketFactory\n-   #95 = Utf8               createDatagramSocket\n-   #96 = Utf8               ()Ljava/net/DatagramSocket;\n-   #97 = Utf8               java/net/DatagramSocket\n-   #98 = Utf8               (I)Ljava/net/DatagramSocket;\n-   #99 = Utf8               (ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n-  #100 = Utf8               name\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #8 = Class              #10           // java/nio/charset/Charset\n+    #9 = NameAndType        #11:#12       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #10 = Utf8               java/nio/charset/Charset\n+   #11 = Utf8               defaultCharset\n+   #12 = Utf8               ()Ljava/nio/charset/Charset;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/net/DatagramSocketClient.charset:Ljava/nio/charset/Charset;\n+   #14 = Class              #16           // org/apache/commons/net/DatagramSocketClient\n+   #15 = NameAndType        #17:#18       // charset:Ljava/nio/charset/Charset;\n+   #16 = Utf8               org/apache/commons/net/DatagramSocketClient\n+   #17 = Utf8               charset\n+   #18 = Utf8               Ljava/nio/charset/Charset;\n+   #19 = Fieldref           #14.#20       // org/apache/commons/net/DatagramSocketClient._socket_:Ljava/net/DatagramSocket;\n+   #20 = NameAndType        #21:#22       // _socket_:Ljava/net/DatagramSocket;\n+   #21 = Utf8               _socket_\n+   #22 = Utf8               Ljava/net/DatagramSocket;\n+   #23 = Fieldref           #14.#24       // org/apache/commons/net/DatagramSocketClient._timeout_:I\n+   #24 = NameAndType        #25:#26       // _timeout_:I\n+   #25 = Utf8               _timeout_\n+   #26 = Utf8               I\n+   #27 = Fieldref           #14.#28       // org/apache/commons/net/DatagramSocketClient._isOpen_:Z\n+   #28 = NameAndType        #29:#30       // _isOpen_:Z\n+   #29 = Utf8               _isOpen_\n+   #30 = Utf8               Z\n+   #31 = Fieldref           #14.#32       // org/apache/commons/net/DatagramSocketClient.DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n+   #32 = NameAndType        #33:#34       // DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n+   #33 = Utf8               DEFAULT_SOCKET_FACTORY\n+   #34 = Utf8               Lorg/apache/commons/net/DatagramSocketFactory;\n+   #35 = Fieldref           #14.#36       // org/apache/commons/net/DatagramSocketClient._socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+   #36 = NameAndType        #37:#34       // _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+   #37 = Utf8               _socketFactory_\n+   #38 = InterfaceMethodref #39.#40       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:()Ljava/net/DatagramSocket;\n+   #39 = Class              #41           // org/apache/commons/net/DatagramSocketFactory\n+   #40 = NameAndType        #42:#43       // createDatagramSocket:()Ljava/net/DatagramSocket;\n+   #41 = Utf8               org/apache/commons/net/DatagramSocketFactory\n+   #42 = Utf8               createDatagramSocket\n+   #43 = Utf8               ()Ljava/net/DatagramSocket;\n+   #44 = Methodref          #45.#46       // java/net/DatagramSocket.setSoTimeout:(I)V\n+   #45 = Class              #47           // java/net/DatagramSocket\n+   #46 = NameAndType        #48:#49       // setSoTimeout:(I)V\n+   #47 = Utf8               java/net/DatagramSocket\n+   #48 = Utf8               setSoTimeout\n+   #49 = Utf8               (I)V\n+   #50 = InterfaceMethodref #39.#51       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(I)Ljava/net/DatagramSocket;\n+   #51 = NameAndType        #42:#52       // createDatagramSocket:(I)Ljava/net/DatagramSocket;\n+   #52 = Utf8               (I)Ljava/net/DatagramSocket;\n+   #53 = InterfaceMethodref #39.#54       // org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n+   #54 = NameAndType        #42:#55       // createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n+   #55 = Utf8               (ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n+   #56 = Methodref          #45.#57       // java/net/DatagramSocket.close:()V\n+   #57 = NameAndType        #58:#6        // close:()V\n+   #58 = Utf8               close\n+   #59 = Methodref          #45.#60       // java/net/DatagramSocket.getSoTimeout:()I\n+   #60 = NameAndType        #61:#62       // getSoTimeout:()I\n+   #61 = Utf8               getSoTimeout\n+   #62 = Utf8               ()I\n+   #63 = Methodref          #45.#64       // java/net/DatagramSocket.getLocalPort:()I\n+   #64 = NameAndType        #65:#62       // getLocalPort:()I\n+   #65 = Utf8               getLocalPort\n+   #66 = Methodref          #45.#67       // java/net/DatagramSocket.getLocalAddress:()Ljava/net/InetAddress;\n+   #67 = NameAndType        #68:#69       // getLocalAddress:()Ljava/net/InetAddress;\n+   #68 = Utf8               getLocalAddress\n+   #69 = Utf8               ()Ljava/net/InetAddress;\n+   #70 = Methodref          #8.#71        // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #71 = NameAndType        #72:#73       // name:()Ljava/lang/String;\n+   #72 = Utf8               name\n+   #73 = Utf8               ()Ljava/lang/String;\n+   #74 = Class              #75           // org/apache/commons/net/DefaultDatagramSocketFactory\n+   #75 = Utf8               org/apache/commons/net/DefaultDatagramSocketFactory\n+   #76 = Methodref          #74.#3        // org/apache/commons/net/DefaultDatagramSocketFactory.\"<init>\":()V\n+   #77 = Utf8               Code\n+   #78 = Utf8               LineNumberTable\n+   #79 = Utf8               open\n+   #80 = Utf8               Exceptions\n+   #81 = Class              #82           // java/net/SocketException\n+   #82 = Utf8               java/net/SocketException\n+   #83 = Utf8               (ILjava/net/InetAddress;)V\n+   #84 = Utf8               StackMapTable\n+   #85 = Utf8               isOpen\n+   #86 = Utf8               ()Z\n+   #87 = Utf8               setDefaultTimeout\n+   #88 = Utf8               getDefaultTimeout\n+   #89 = Utf8               setDatagramSocketFactory\n+   #90 = Utf8               (Lorg/apache/commons/net/DatagramSocketFactory;)V\n+   #91 = Utf8               getCharsetName\n+   #92 = Utf8               Deprecated\n+   #93 = Utf8               RuntimeVisibleAnnotations\n+   #94 = Utf8               Ljava/lang/Deprecated;\n+   #95 = Utf8               getCharset\n+   #96 = Utf8               setCharset\n+   #97 = Utf8               (Ljava/nio/charset/Charset;)V\n+   #98 = Utf8               <clinit>\n+   #99 = Utf8               SourceFile\n+  #100 = Utf8               DatagramSocketClient.java\n {\n   private static final org.apache.commons.net.DatagramSocketFactory DEFAULT_SOCKET_FACTORY;\n     descriptor: Lorg/apache/commons/net/DatagramSocketFactory;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private java.nio.charset.Charset charset;\n     descriptor: Ljava/nio/charset/Charset;\n@@ -137,28 +137,28 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-         8: putfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n+         5: invokestatic  #7                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         8: putfield      #13                 // Field charset:Ljava/nio/charset/Charset;\n         11: aload_0\n         12: aconst_null\n-        13: putfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+        13: putfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         16: aload_0\n         17: iconst_0\n-        18: putfield      #5                  // Field _timeout_:I\n+        18: putfield      #23                 // Field _timeout_:I\n         21: aload_0\n         22: iconst_0\n-        23: putfield      #6                  // Field _isOpen_:Z\n+        23: putfield      #27                 // Field _isOpen_:Z\n         26: aload_0\n-        27: getstatic     #7                  // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n-        30: putfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+        27: getstatic     #31                 // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n+        30: putfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n         33: return\n       LineNumberTable:\n         line 83: 0\n         line 62: 4\n         line 84: 11\n         line 85: 16\n         line 86: 21\n@@ -168,25 +168,25 @@\n   public void open() throws java.net.SocketException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n-         5: invokeinterface #9,  1            // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:()Ljava/net/DatagramSocket;\n-        10: putfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+         2: getfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+         5: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:()Ljava/net/DatagramSocket;\n+        10: putfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         13: aload_0\n-        14: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+        14: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         17: aload_0\n-        18: getfield      #5                  // Field _timeout_:I\n-        21: invokevirtual #10                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n+        18: getfield      #23                 // Field _timeout_:I\n+        21: invokevirtual #44                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n         24: aload_0\n         25: iconst_1\n-        26: putfield      #6                  // Field _isOpen_:Z\n+        26: putfield      #27                 // Field _isOpen_:Z\n         29: return\n       LineNumberTable:\n         line 104: 0\n         line 105: 13\n         line 106: 24\n         line 107: 29\n     Exceptions:\n@@ -195,26 +195,26 @@\n   public void open(int) throws java.net.SocketException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+         2: getfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n          5: iload_1\n-         6: invokeinterface #11,  2           // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(I)Ljava/net/DatagramSocket;\n-        11: putfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+         6: invokeinterface #50,  2           // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(I)Ljava/net/DatagramSocket;\n+        11: putfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         14: aload_0\n-        15: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+        15: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         18: aload_0\n-        19: getfield      #5                  // Field _timeout_:I\n-        22: invokevirtual #10                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n+        19: getfield      #23                 // Field _timeout_:I\n+        22: invokevirtual #44                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n         25: aload_0\n         26: iconst_1\n-        27: putfield      #6                  // Field _isOpen_:Z\n+        27: putfield      #27                 // Field _isOpen_:Z\n         30: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 14\n         line 126: 25\n         line 127: 30\n     Exceptions:\n@@ -223,27 +223,27 @@\n   public void open(int, java.net.InetAddress) throws java.net.SocketException;\n     descriptor: (ILjava/net/InetAddress;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+         2: getfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n          5: iload_1\n          6: aload_2\n-         7: invokeinterface #12,  3           // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n-        12: putfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+         7: invokeinterface #53,  3           // InterfaceMethod org/apache/commons/net/DatagramSocketFactory.createDatagramSocket:(ILjava/net/InetAddress;)Ljava/net/DatagramSocket;\n+        12: putfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         15: aload_0\n-        16: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+        16: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         19: aload_0\n-        20: getfield      #5                  // Field _timeout_:I\n-        23: invokevirtual #10                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n+        20: getfield      #23                 // Field _timeout_:I\n+        23: invokevirtual #44                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n         26: aload_0\n         27: iconst_1\n-        28: putfield      #6                  // Field _isOpen_:Z\n+        28: putfield      #27                 // Field _isOpen_:Z\n         31: return\n       LineNumberTable:\n         line 146: 0\n         line 147: 15\n         line 148: 26\n         line 149: 31\n     Exceptions:\n@@ -251,25 +251,25 @@\n \n   public void close();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+         1: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n-        11: invokevirtual #13                 // Method java/net/DatagramSocket.close:()V\n+         8: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n+        11: invokevirtual #56                 // Method java/net/DatagramSocket.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+        16: putfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n         19: aload_0\n         20: iconst_0\n-        21: putfield      #6                  // Field _isOpen_:Z\n+        21: putfield      #27                 // Field _isOpen_:Z\n         24: return\n       LineNumberTable:\n         line 161: 0\n         line 162: 7\n         line 164: 14\n         line 165: 19\n         line 166: 24\n@@ -278,111 +278,111 @@\n \n   public boolean isOpen();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field _isOpen_:Z\n+         1: getfield      #27                 // Field _isOpen_:Z\n          4: ireturn\n       LineNumberTable:\n         line 176: 0\n \n   public void setDefaultTimeout(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field _timeout_:I\n+         2: putfield      #23                 // Field _timeout_:I\n          5: return\n       LineNumberTable:\n         line 193: 0\n         line 194: 5\n \n   public int getDefaultTimeout();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field _timeout_:I\n+         1: getfield      #23                 // Field _timeout_:I\n          4: ireturn\n       LineNumberTable:\n         line 206: 0\n \n   public void setSoTimeout(int) throws java.net.SocketException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n+         1: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n          4: iload_1\n-         5: invokevirtual #10                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n+         5: invokevirtual #44                 // Method java/net/DatagramSocket.setSoTimeout:(I)V\n          8: return\n       LineNumberTable:\n         line 221: 0\n         line 222: 8\n     Exceptions:\n       throws java.net.SocketException\n \n   public int getSoTimeout() throws java.net.SocketException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n-         4: invokevirtual #14                 // Method java/net/DatagramSocket.getSoTimeout:()I\n+         1: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n+         4: invokevirtual #59                 // Method java/net/DatagramSocket.getSoTimeout:()I\n          7: ireturn\n       LineNumberTable:\n         line 235: 0\n     Exceptions:\n       throws java.net.SocketException\n \n   public int getLocalPort();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n-         4: invokevirtual #15                 // Method java/net/DatagramSocket.getLocalPort:()I\n+         1: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n+         4: invokevirtual #63                 // Method java/net/DatagramSocket.getLocalPort:()I\n          7: ireturn\n       LineNumberTable:\n         line 249: 0\n \n   public java.net.InetAddress getLocalAddress();\n     descriptor: ()Ljava/net/InetAddress;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _socket_:Ljava/net/DatagramSocket;\n-         4: invokevirtual #16                 // Method java/net/DatagramSocket.getLocalAddress:()Ljava/net/InetAddress;\n+         1: getfield      #19                 // Field _socket_:Ljava/net/DatagramSocket;\n+         4: invokevirtual #66                 // Method java/net/DatagramSocket.getLocalAddress:()Ljava/net/InetAddress;\n          7: areturn\n       LineNumberTable:\n         line 262: 0\n \n   public void setDatagramSocketFactory(org.apache.commons.net.DatagramSocketFactory);\n     descriptor: (Lorg/apache/commons/net/DatagramSocketFactory;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     14\n          4: aload_0\n-         5: getstatic     #7                  // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n-         8: putfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+         5: getstatic     #31                 // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n+         8: putfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n         11: goto          19\n         14: aload_0\n         15: aload_1\n-        16: putfield      #8                  // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n+        16: putfield      #35                 // Field _socketFactory_:Lorg/apache/commons/net/DatagramSocketFactory;\n         19: return\n       LineNumberTable:\n         line 277: 0\n         line 278: 4\n         line 280: 14\n         line 282: 19\n       StackMapTable: number_of_entries = 2\n@@ -391,55 +391,55 @@\n \n   public java.lang.String getCharsetName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-         4: invokevirtual #17                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+         1: getfield      #13                 // Field charset:Ljava/nio/charset/Charset;\n+         4: invokevirtual #70                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 293: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #60()\n+      0: #94()\n         java.lang.Deprecated\n \n   public java.nio.charset.Charset getCharset();\n     descriptor: ()Ljava/nio/charset/Charset;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n+         1: getfield      #13                 // Field charset:Ljava/nio/charset/Charset;\n          4: areturn\n       LineNumberTable:\n         line 303: 0\n \n   public void setCharset(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n+         2: putfield      #13                 // Field charset:Ljava/nio/charset/Charset;\n          5: return\n       LineNumberTable:\n         line 313: 0\n         line 314: 5\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #18                 // class org/apache/commons/net/DefaultDatagramSocketFactory\n+         0: new           #74                 // class org/apache/commons/net/DefaultDatagramSocketFactory\n          3: dup\n-         4: invokespecial #19                 // Method org/apache/commons/net/DefaultDatagramSocketFactory.\"<init>\":()V\n-         7: putstatic     #7                  // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n+         4: invokespecial #76                 // Method org/apache/commons/net/DefaultDatagramSocketFactory.\"<init>\":()V\n+         7: putstatic     #31                 // Field DEFAULT_SOCKET_FACTORY:Lorg/apache/commons/net/DatagramSocketFactory;\n         10: return\n       LineNumberTable:\n         line 56: 0\n }\n SourceFile: \"DatagramSocketClient.java\"\n"}]}
