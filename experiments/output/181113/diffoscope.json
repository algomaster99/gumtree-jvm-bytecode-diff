{"diffoscope-json-version": 1, "source1": "first/RecordComponentNameCheck.class", "source2": "second/RecordComponentNameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum 03b861273679cccb012f8f45d36a365cd7b7fe2464ada00c8b98129f3e766c05\n+  SHA-256 checksum e21c7aa4ae52f79944333a9f99f5bbdcac365f412735f7c8353edb493b1d8c69\n   Compiled from \"RecordComponentNameCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.naming.RecordComponentNameCheck extends com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #5                          // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n-  super_class: #6                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+  this_class: #10                         // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n+  super_class: #4                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n   interfaces: 0, fields: 0, methods: 5, attributes: 1\n Constant pool:\n-   #1 = String             #24            // ^[a-z][a-zA-Z0-9]*$\n-   #2 = Methodref          #6.#25         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n-   #3 = Methodref          #5.#26         // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck.getRequiredTokens:()[I\n-   #4 = Class              #27            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #5 = Class              #28            // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n-   #6 = Class              #29            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+   #1 = String             #2             // ^[a-z][a-zA-Z0-9]*$\n+   #2 = Utf8               ^[a-z][a-zA-Z0-9]*$\n+   #3 = Methodref          #4.#5          // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n+   #4 = Class              #6             // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/lang/String;)V\n+   #6 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n    #7 = Utf8               <init>\n-   #8 = Utf8               ()V\n-   #9 = Utf8               Code\n-  #10 = Utf8               LineNumberTable\n-  #11 = Utf8               LocalVariableTable\n-  #12 = Utf8               this\n-  #13 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck;\n-  #14 = Utf8               getDefaultTokens\n-  #15 = Utf8               ()[I\n-  #16 = Utf8               getAcceptableTokens\n-  #17 = Utf8               getRequiredTokens\n-  #18 = Utf8               mustCheckName\n-  #19 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-  #20 = Utf8               ast\n-  #21 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #22 = Utf8               SourceFile\n-  #23 = Utf8               RecordComponentNameCheck.java\n-  #24 = Utf8               ^[a-z][a-zA-Z0-9]*$\n-  #25 = NameAndType        #7:#30         // \"<init>\":(Ljava/lang/String;)V\n-  #26 = NameAndType        #17:#15        // getRequiredTokens:()[I\n-  #27 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-  #28 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n-  #29 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-  #30 = Utf8               (Ljava/lang/String;)V\n+   #8 = Utf8               (Ljava/lang/String;)V\n+   #9 = Methodref          #10.#11        // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck.getRequiredTokens:()[I\n+  #10 = Class              #12            // com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n+  #11 = NameAndType        #13:#14        // getRequiredTokens:()[I\n+  #12 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck\n+  #13 = Utf8               getRequiredTokens\n+  #14 = Utf8               ()[I\n+  #15 = Class              #16            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #16 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #17 = Utf8               ()V\n+  #18 = Utf8               Code\n+  #19 = Utf8               LineNumberTable\n+  #20 = Utf8               LocalVariableTable\n+  #21 = Utf8               this\n+  #22 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck;\n+  #23 = Utf8               getDefaultTokens\n+  #24 = Utf8               getAcceptableTokens\n+  #25 = Utf8               mustCheckName\n+  #26 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+  #27 = Utf8               ast\n+  #28 = Utf8               Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #29 = Utf8               SourceFile\n+  #30 = Utf8               RecordComponentNameCheck.java\n {\n   public com.puppycrawl.tools.checkstyle.checks.naming.RecordComponentNameCheck();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ldc           #1                  // String ^[a-z][a-zA-Z0-9]*$\n-         3: invokespecial #2                  // Method com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n+         3: invokespecial #3                  // Method com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck;\n \n   public int[] getDefaultTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getRequiredTokens:()[I\n+         1: invokevirtual #9                  // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 59: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck;\n \n   public final int[] getAcceptableTokens();\n     descriptor: ()[I\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getRequiredTokens:()[I\n+         1: invokevirtual #9                  // Method getRequiredTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/checks/naming/RecordComponentNameCheck;\n \n"}]}
